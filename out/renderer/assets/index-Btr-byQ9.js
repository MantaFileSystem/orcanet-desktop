function _mergeNamespaces(n2, m2) {
  for (var i2 = 0; i2 < m2.length; i2++) {
    const e3 = m2[i2];
    if (typeof e3 !== "string" && !Array.isArray(e3)) {
      for (const k2 in e3) {
        if (k2 !== "default" && !(k2 in n2)) {
          const d2 = Object.getOwnPropertyDescriptor(e3, k2);
          if (d2) {
            Object.defineProperty(n2, k2, d2.get ? d2 : {
              enumerable: true,
              get: () => e3[k2]
            });
          }
        }
      }
    }
  }
  return Object.freeze(Object.defineProperty(n2, Symbol.toStringTag, { value: "Module" }));
}
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
var jsxRuntime = { exports: {} };
var reactJsxRuntime_production_min = {};
var react = { exports: {} };
var react_production_min = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l$2 = Symbol.for("react.element"), n$4 = Symbol.for("react.portal"), p$3 = Symbol.for("react.fragment"), q$2 = Symbol.for("react.strict_mode"), r$3 = Symbol.for("react.profiler"), t$3 = Symbol.for("react.provider"), u = Symbol.for("react.context"), v$2 = Symbol.for("react.forward_ref"), w$1 = Symbol.for("react.suspense"), x$2 = Symbol.for("react.memo"), y$2 = Symbol.for("react.lazy"), z$3 = Symbol.iterator;
function A$2(a2) {
  if (null === a2 || "object" !== typeof a2)
    return null;
  a2 = z$3 && a2[z$3] || a2["@@iterator"];
  return "function" === typeof a2 ? a2 : null;
}
var B$1 = { isMounted: function() {
  return false;
}, enqueueForceUpdate: function() {
}, enqueueReplaceState: function() {
}, enqueueSetState: function() {
} }, C$1 = Object.assign, D$1 = {};
function E$1(a2, b2, e3) {
  this.props = a2;
  this.context = b2;
  this.refs = D$1;
  this.updater = e3 || B$1;
}
E$1.prototype.isReactComponent = {};
E$1.prototype.setState = function(a2, b2) {
  if ("object" !== typeof a2 && "function" !== typeof a2 && null != a2)
    throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
  this.updater.enqueueSetState(this, a2, b2, "setState");
};
E$1.prototype.forceUpdate = function(a2) {
  this.updater.enqueueForceUpdate(this, a2, "forceUpdate");
};
function F() {
}
F.prototype = E$1.prototype;
function G$1(a2, b2, e3) {
  this.props = a2;
  this.context = b2;
  this.refs = D$1;
  this.updater = e3 || B$1;
}
var H$1 = G$1.prototype = new F();
H$1.constructor = G$1;
C$1(H$1, E$1.prototype);
H$1.isPureReactComponent = true;
var I$1 = Array.isArray, J = Object.prototype.hasOwnProperty, K$1 = { current: null }, L$1 = { key: true, ref: true, __self: true, __source: true };
function M$2(a2, b2, e3) {
  var d2, c2 = {}, k2 = null, h2 = null;
  if (null != b2)
    for (d2 in void 0 !== b2.ref && (h2 = b2.ref), void 0 !== b2.key && (k2 = "" + b2.key), b2)
      J.call(b2, d2) && !L$1.hasOwnProperty(d2) && (c2[d2] = b2[d2]);
  var g2 = arguments.length - 2;
  if (1 === g2)
    c2.children = e3;
  else if (1 < g2) {
    for (var f2 = Array(g2), m2 = 0; m2 < g2; m2++)
      f2[m2] = arguments[m2 + 2];
    c2.children = f2;
  }
  if (a2 && a2.defaultProps)
    for (d2 in g2 = a2.defaultProps, g2)
      void 0 === c2[d2] && (c2[d2] = g2[d2]);
  return { $$typeof: l$2, type: a2, key: k2, ref: h2, props: c2, _owner: K$1.current };
}
function N$1(a2, b2) {
  return { $$typeof: l$2, type: a2.type, key: b2, ref: a2.ref, props: a2.props, _owner: a2._owner };
}
function O$1(a2) {
  return "object" === typeof a2 && null !== a2 && a2.$$typeof === l$2;
}
function escape(a2) {
  var b2 = { "=": "=0", ":": "=2" };
  return "$" + a2.replace(/[=:]/g, function(a3) {
    return b2[a3];
  });
}
var P$2 = /\/+/g;
function Q$1(a2, b2) {
  return "object" === typeof a2 && null !== a2 && null != a2.key ? escape("" + a2.key) : b2.toString(36);
}
function R$1(a2, b2, e3, d2, c2) {
  var k2 = typeof a2;
  if ("undefined" === k2 || "boolean" === k2)
    a2 = null;
  var h2 = false;
  if (null === a2)
    h2 = true;
  else
    switch (k2) {
      case "string":
      case "number":
        h2 = true;
        break;
      case "object":
        switch (a2.$$typeof) {
          case l$2:
          case n$4:
            h2 = true;
        }
    }
  if (h2)
    return h2 = a2, c2 = c2(h2), a2 = "" === d2 ? "." + Q$1(h2, 0) : d2, I$1(c2) ? (e3 = "", null != a2 && (e3 = a2.replace(P$2, "$&/") + "/"), R$1(c2, b2, e3, "", function(a3) {
      return a3;
    })) : null != c2 && (O$1(c2) && (c2 = N$1(c2, e3 + (!c2.key || h2 && h2.key === c2.key ? "" : ("" + c2.key).replace(P$2, "$&/") + "/") + a2)), b2.push(c2)), 1;
  h2 = 0;
  d2 = "" === d2 ? "." : d2 + ":";
  if (I$1(a2))
    for (var g2 = 0; g2 < a2.length; g2++) {
      k2 = a2[g2];
      var f2 = d2 + Q$1(k2, g2);
      h2 += R$1(k2, b2, e3, f2, c2);
    }
  else if (f2 = A$2(a2), "function" === typeof f2)
    for (a2 = f2.call(a2), g2 = 0; !(k2 = a2.next()).done; )
      k2 = k2.value, f2 = d2 + Q$1(k2, g2++), h2 += R$1(k2, b2, e3, f2, c2);
  else if ("object" === k2)
    throw b2 = String(a2), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b2 ? "object with keys {" + Object.keys(a2).join(", ") + "}" : b2) + "). If you meant to render a collection of children, use an array instead.");
  return h2;
}
function S$1(a2, b2, e3) {
  if (null == a2)
    return a2;
  var d2 = [], c2 = 0;
  R$1(a2, d2, "", "", function(a3) {
    return b2.call(e3, a3, c2++);
  });
  return d2;
}
function T$1(a2) {
  if (-1 === a2._status) {
    var b2 = a2._result;
    b2 = b2();
    b2.then(function(b3) {
      if (0 === a2._status || -1 === a2._status)
        a2._status = 1, a2._result = b3;
    }, function(b3) {
      if (0 === a2._status || -1 === a2._status)
        a2._status = 2, a2._result = b3;
    });
    -1 === a2._status && (a2._status = 0, a2._result = b2);
  }
  if (1 === a2._status)
    return a2._result.default;
  throw a2._result;
}
var U$1 = { current: null }, V$1 = { transition: null }, W$1 = { ReactCurrentDispatcher: U$1, ReactCurrentBatchConfig: V$1, ReactCurrentOwner: K$1 };
react_production_min.Children = { map: S$1, forEach: function(a2, b2, e3) {
  S$1(a2, function() {
    b2.apply(this, arguments);
  }, e3);
}, count: function(a2) {
  var b2 = 0;
  S$1(a2, function() {
    b2++;
  });
  return b2;
}, toArray: function(a2) {
  return S$1(a2, function(a3) {
    return a3;
  }) || [];
}, only: function(a2) {
  if (!O$1(a2))
    throw Error("React.Children.only expected to receive a single React element child.");
  return a2;
} };
react_production_min.Component = E$1;
react_production_min.Fragment = p$3;
react_production_min.Profiler = r$3;
react_production_min.PureComponent = G$1;
react_production_min.StrictMode = q$2;
react_production_min.Suspense = w$1;
react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W$1;
react_production_min.cloneElement = function(a2, b2, e3) {
  if (null === a2 || void 0 === a2)
    throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a2 + ".");
  var d2 = C$1({}, a2.props), c2 = a2.key, k2 = a2.ref, h2 = a2._owner;
  if (null != b2) {
    void 0 !== b2.ref && (k2 = b2.ref, h2 = K$1.current);
    void 0 !== b2.key && (c2 = "" + b2.key);
    if (a2.type && a2.type.defaultProps)
      var g2 = a2.type.defaultProps;
    for (f2 in b2)
      J.call(b2, f2) && !L$1.hasOwnProperty(f2) && (d2[f2] = void 0 === b2[f2] && void 0 !== g2 ? g2[f2] : b2[f2]);
  }
  var f2 = arguments.length - 2;
  if (1 === f2)
    d2.children = e3;
  else if (1 < f2) {
    g2 = Array(f2);
    for (var m2 = 0; m2 < f2; m2++)
      g2[m2] = arguments[m2 + 2];
    d2.children = g2;
  }
  return { $$typeof: l$2, type: a2.type, key: c2, ref: k2, props: d2, _owner: h2 };
};
react_production_min.createContext = function(a2) {
  a2 = { $$typeof: u, _currentValue: a2, _currentValue2: a2, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null };
  a2.Provider = { $$typeof: t$3, _context: a2 };
  return a2.Consumer = a2;
};
react_production_min.createElement = M$2;
react_production_min.createFactory = function(a2) {
  var b2 = M$2.bind(null, a2);
  b2.type = a2;
  return b2;
};
react_production_min.createRef = function() {
  return { current: null };
};
react_production_min.forwardRef = function(a2) {
  return { $$typeof: v$2, render: a2 };
};
react_production_min.isValidElement = O$1;
react_production_min.lazy = function(a2) {
  return { $$typeof: y$2, _payload: { _status: -1, _result: a2 }, _init: T$1 };
};
react_production_min.memo = function(a2, b2) {
  return { $$typeof: x$2, type: a2, compare: void 0 === b2 ? null : b2 };
};
react_production_min.startTransition = function(a2) {
  var b2 = V$1.transition;
  V$1.transition = {};
  try {
    a2();
  } finally {
    V$1.transition = b2;
  }
};
react_production_min.unstable_act = function() {
  throw Error("act(...) is not supported in production builds of React.");
};
react_production_min.useCallback = function(a2, b2) {
  return U$1.current.useCallback(a2, b2);
};
react_production_min.useContext = function(a2) {
  return U$1.current.useContext(a2);
};
react_production_min.useDebugValue = function() {
};
react_production_min.useDeferredValue = function(a2) {
  return U$1.current.useDeferredValue(a2);
};
react_production_min.useEffect = function(a2, b2) {
  return U$1.current.useEffect(a2, b2);
};
react_production_min.useId = function() {
  return U$1.current.useId();
};
react_production_min.useImperativeHandle = function(a2, b2, e3) {
  return U$1.current.useImperativeHandle(a2, b2, e3);
};
react_production_min.useInsertionEffect = function(a2, b2) {
  return U$1.current.useInsertionEffect(a2, b2);
};
react_production_min.useLayoutEffect = function(a2, b2) {
  return U$1.current.useLayoutEffect(a2, b2);
};
react_production_min.useMemo = function(a2, b2) {
  return U$1.current.useMemo(a2, b2);
};
react_production_min.useReducer = function(a2, b2, e3) {
  return U$1.current.useReducer(a2, b2, e3);
};
react_production_min.useRef = function(a2) {
  return U$1.current.useRef(a2);
};
react_production_min.useState = function(a2) {
  return U$1.current.useState(a2);
};
react_production_min.useSyncExternalStore = function(a2, b2, e3) {
  return U$1.current.useSyncExternalStore(a2, b2, e3);
};
react_production_min.useTransition = function() {
  return U$1.current.useTransition();
};
react_production_min.version = "18.2.0";
{
  react.exports = react_production_min;
}
var reactExports = react.exports;
const React = /* @__PURE__ */ getDefaultExportFromCjs(reactExports);
const React$1 = /* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  default: React
}, [reactExports]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f$1 = reactExports, k$2 = Symbol.for("react.element"), l$1 = Symbol.for("react.fragment"), m$2 = Object.prototype.hasOwnProperty, n$3 = f$1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p$2 = { key: true, ref: true, __self: true, __source: true };
function q$1(c2, a2, g2) {
  var b2, d2 = {}, e3 = null, h2 = null;
  void 0 !== g2 && (e3 = "" + g2);
  void 0 !== a2.key && (e3 = "" + a2.key);
  void 0 !== a2.ref && (h2 = a2.ref);
  for (b2 in a2)
    m$2.call(a2, b2) && !p$2.hasOwnProperty(b2) && (d2[b2] = a2[b2]);
  if (c2 && c2.defaultProps)
    for (b2 in a2 = c2.defaultProps, a2)
      void 0 === d2[b2] && (d2[b2] = a2[b2]);
  return { $$typeof: k$2, type: c2, key: e3, ref: h2, props: d2, _owner: n$3.current };
}
reactJsxRuntime_production_min.Fragment = l$1;
reactJsxRuntime_production_min.jsx = q$1;
reactJsxRuntime_production_min.jsxs = q$1;
{
  jsxRuntime.exports = reactJsxRuntime_production_min;
}
var jsxRuntimeExports = jsxRuntime.exports;
var reactDom = { exports: {} };
var reactDom_production_min = {};
var scheduler = { exports: {} };
var scheduler_production_min = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function(exports) {
  function f2(a2, b2) {
    var c2 = a2.length;
    a2.push(b2);
    a:
      for (; 0 < c2; ) {
        var d2 = c2 - 1 >>> 1, e3 = a2[d2];
        if (0 < g2(e3, b2))
          a2[d2] = b2, a2[c2] = e3, c2 = d2;
        else
          break a;
      }
  }
  function h2(a2) {
    return 0 === a2.length ? null : a2[0];
  }
  function k2(a2) {
    if (0 === a2.length)
      return null;
    var b2 = a2[0], c2 = a2.pop();
    if (c2 !== b2) {
      a2[0] = c2;
      a:
        for (var d2 = 0, e3 = a2.length, w2 = e3 >>> 1; d2 < w2; ) {
          var m2 = 2 * (d2 + 1) - 1, C2 = a2[m2], n2 = m2 + 1, x2 = a2[n2];
          if (0 > g2(C2, c2))
            n2 < e3 && 0 > g2(x2, C2) ? (a2[d2] = x2, a2[n2] = c2, d2 = n2) : (a2[d2] = C2, a2[m2] = c2, d2 = m2);
          else if (n2 < e3 && 0 > g2(x2, c2))
            a2[d2] = x2, a2[n2] = c2, d2 = n2;
          else
            break a;
        }
    }
    return b2;
  }
  function g2(a2, b2) {
    var c2 = a2.sortIndex - b2.sortIndex;
    return 0 !== c2 ? c2 : a2.id - b2.id;
  }
  if ("object" === typeof performance && "function" === typeof performance.now) {
    var l2 = performance;
    exports.unstable_now = function() {
      return l2.now();
    };
  } else {
    var p2 = Date, q2 = p2.now();
    exports.unstable_now = function() {
      return p2.now() - q2;
    };
  }
  var r2 = [], t2 = [], u2 = 1, v2 = null, y2 = 3, z2 = false, A5 = false, B2 = false, D2 = "function" === typeof setTimeout ? setTimeout : null, E2 = "function" === typeof clearTimeout ? clearTimeout : null, F2 = "undefined" !== typeof setImmediate ? setImmediate : null;
  "undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function G2(a2) {
    for (var b2 = h2(t2); null !== b2; ) {
      if (null === b2.callback)
        k2(t2);
      else if (b2.startTime <= a2)
        k2(t2), b2.sortIndex = b2.expirationTime, f2(r2, b2);
      else
        break;
      b2 = h2(t2);
    }
  }
  function H2(a2) {
    B2 = false;
    G2(a2);
    if (!A5)
      if (null !== h2(r2))
        A5 = true, I2(J2);
      else {
        var b2 = h2(t2);
        null !== b2 && K2(H2, b2.startTime - a2);
      }
  }
  function J2(a2, b2) {
    A5 = false;
    B2 && (B2 = false, E2(L2), L2 = -1);
    z2 = true;
    var c2 = y2;
    try {
      G2(b2);
      for (v2 = h2(r2); null !== v2 && (!(v2.expirationTime > b2) || a2 && !M2()); ) {
        var d2 = v2.callback;
        if ("function" === typeof d2) {
          v2.callback = null;
          y2 = v2.priorityLevel;
          var e3 = d2(v2.expirationTime <= b2);
          b2 = exports.unstable_now();
          "function" === typeof e3 ? v2.callback = e3 : v2 === h2(r2) && k2(r2);
          G2(b2);
        } else
          k2(r2);
        v2 = h2(r2);
      }
      if (null !== v2)
        var w2 = true;
      else {
        var m2 = h2(t2);
        null !== m2 && K2(H2, m2.startTime - b2);
        w2 = false;
      }
      return w2;
    } finally {
      v2 = null, y2 = c2, z2 = false;
    }
  }
  var N2 = false, O2 = null, L2 = -1, P2 = 5, Q2 = -1;
  function M2() {
    return exports.unstable_now() - Q2 < P2 ? false : true;
  }
  function R2() {
    if (null !== O2) {
      var a2 = exports.unstable_now();
      Q2 = a2;
      var b2 = true;
      try {
        b2 = O2(true, a2);
      } finally {
        b2 ? S2() : (N2 = false, O2 = null);
      }
    } else
      N2 = false;
  }
  var S2;
  if ("function" === typeof F2)
    S2 = function() {
      F2(R2);
    };
  else if ("undefined" !== typeof MessageChannel) {
    var T2 = new MessageChannel(), U2 = T2.port2;
    T2.port1.onmessage = R2;
    S2 = function() {
      U2.postMessage(null);
    };
  } else
    S2 = function() {
      D2(R2, 0);
    };
  function I2(a2) {
    O2 = a2;
    N2 || (N2 = true, S2());
  }
  function K2(a2, b2) {
    L2 = D2(function() {
      a2(exports.unstable_now());
    }, b2);
  }
  exports.unstable_IdlePriority = 5;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_LowPriority = 4;
  exports.unstable_NormalPriority = 3;
  exports.unstable_Profiling = null;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_cancelCallback = function(a2) {
    a2.callback = null;
  };
  exports.unstable_continueExecution = function() {
    A5 || z2 || (A5 = true, I2(J2));
  };
  exports.unstable_forceFrameRate = function(a2) {
    0 > a2 || 125 < a2 ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P2 = 0 < a2 ? Math.floor(1e3 / a2) : 5;
  };
  exports.unstable_getCurrentPriorityLevel = function() {
    return y2;
  };
  exports.unstable_getFirstCallbackNode = function() {
    return h2(r2);
  };
  exports.unstable_next = function(a2) {
    switch (y2) {
      case 1:
      case 2:
      case 3:
        var b2 = 3;
        break;
      default:
        b2 = y2;
    }
    var c2 = y2;
    y2 = b2;
    try {
      return a2();
    } finally {
      y2 = c2;
    }
  };
  exports.unstable_pauseExecution = function() {
  };
  exports.unstable_requestPaint = function() {
  };
  exports.unstable_runWithPriority = function(a2, b2) {
    switch (a2) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;
      default:
        a2 = 3;
    }
    var c2 = y2;
    y2 = a2;
    try {
      return b2();
    } finally {
      y2 = c2;
    }
  };
  exports.unstable_scheduleCallback = function(a2, b2, c2) {
    var d2 = exports.unstable_now();
    "object" === typeof c2 && null !== c2 ? (c2 = c2.delay, c2 = "number" === typeof c2 && 0 < c2 ? d2 + c2 : d2) : c2 = d2;
    switch (a2) {
      case 1:
        var e3 = -1;
        break;
      case 2:
        e3 = 250;
        break;
      case 5:
        e3 = 1073741823;
        break;
      case 4:
        e3 = 1e4;
        break;
      default:
        e3 = 5e3;
    }
    e3 = c2 + e3;
    a2 = { id: u2++, callback: b2, priorityLevel: a2, startTime: c2, expirationTime: e3, sortIndex: -1 };
    c2 > d2 ? (a2.sortIndex = c2, f2(t2, a2), null === h2(r2) && a2 === h2(t2) && (B2 ? (E2(L2), L2 = -1) : B2 = true, K2(H2, c2 - d2))) : (a2.sortIndex = e3, f2(r2, a2), A5 || z2 || (A5 = true, I2(J2)));
    return a2;
  };
  exports.unstable_shouldYield = M2;
  exports.unstable_wrapCallback = function(a2) {
    var b2 = y2;
    return function() {
      var c2 = y2;
      y2 = b2;
      try {
        return a2.apply(this, arguments);
      } finally {
        y2 = c2;
      }
    };
  };
})(scheduler_production_min);
{
  scheduler.exports = scheduler_production_min;
}
var schedulerExports = scheduler.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aa = reactExports, ca = schedulerExports;
function p$1(a2) {
  for (var b2 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a2, c2 = 1; c2 < arguments.length; c2++)
    b2 += "&args[]=" + encodeURIComponent(arguments[c2]);
  return "Minified React error #" + a2 + "; visit " + b2 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var da = /* @__PURE__ */ new Set(), ea = {};
function fa(a2, b2) {
  ha(a2, b2);
  ha(a2 + "Capture", b2);
}
function ha(a2, b2) {
  ea[a2] = b2;
  for (a2 = 0; a2 < b2.length; a2++)
    da.add(b2[a2]);
}
var ia = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), ja = Object.prototype.hasOwnProperty, ka$1 = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, la = {}, ma = {};
function oa(a2) {
  if (ja.call(ma, a2))
    return true;
  if (ja.call(la, a2))
    return false;
  if (ka$1.test(a2))
    return ma[a2] = true;
  la[a2] = true;
  return false;
}
function pa(a2, b2, c2, d2) {
  if (null !== c2 && 0 === c2.type)
    return false;
  switch (typeof b2) {
    case "function":
    case "symbol":
      return true;
    case "boolean":
      if (d2)
        return false;
      if (null !== c2)
        return !c2.acceptsBooleans;
      a2 = a2.toLowerCase().slice(0, 5);
      return "data-" !== a2 && "aria-" !== a2;
    default:
      return false;
  }
}
function qa(a2, b2, c2, d2) {
  if (null === b2 || "undefined" === typeof b2 || pa(a2, b2, c2, d2))
    return true;
  if (d2)
    return false;
  if (null !== c2)
    switch (c2.type) {
      case 3:
        return !b2;
      case 4:
        return false === b2;
      case 5:
        return isNaN(b2);
      case 6:
        return isNaN(b2) || 1 > b2;
    }
  return false;
}
function v$1(a2, b2, c2, d2, e3, f2, g2) {
  this.acceptsBooleans = 2 === b2 || 3 === b2 || 4 === b2;
  this.attributeName = d2;
  this.attributeNamespace = e3;
  this.mustUseProperty = c2;
  this.propertyName = a2;
  this.type = b2;
  this.sanitizeURL = f2;
  this.removeEmptyString = g2;
}
var z$2 = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a2) {
  z$2[a2] = new v$1(a2, 0, false, a2, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a2) {
  var b2 = a2[0];
  z$2[b2] = new v$1(b2, 1, false, a2[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a2) {
  z$2[a2] = new v$1(a2, 2, false, a2.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a2) {
  z$2[a2] = new v$1(a2, 2, false, a2, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a2) {
  z$2[a2] = new v$1(a2, 3, false, a2.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a2) {
  z$2[a2] = new v$1(a2, 3, true, a2, null, false, false);
});
["capture", "download"].forEach(function(a2) {
  z$2[a2] = new v$1(a2, 4, false, a2, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a2) {
  z$2[a2] = new v$1(a2, 6, false, a2, null, false, false);
});
["rowSpan", "start"].forEach(function(a2) {
  z$2[a2] = new v$1(a2, 5, false, a2.toLowerCase(), null, false, false);
});
var ra = /[\-:]([a-z])/g;
function sa(a2) {
  return a2[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a2) {
  var b2 = a2.replace(
    ra,
    sa
  );
  z$2[b2] = new v$1(b2, 1, false, a2, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a2) {
  var b2 = a2.replace(ra, sa);
  z$2[b2] = new v$1(b2, 1, false, a2, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a2) {
  var b2 = a2.replace(ra, sa);
  z$2[b2] = new v$1(b2, 1, false, a2, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a2) {
  z$2[a2] = new v$1(a2, 1, false, a2.toLowerCase(), null, false, false);
});
z$2.xlinkHref = new v$1("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a2) {
  z$2[a2] = new v$1(a2, 1, false, a2.toLowerCase(), null, true, true);
});
function ta(a2, b2, c2, d2) {
  var e3 = z$2.hasOwnProperty(b2) ? z$2[b2] : null;
  if (null !== e3 ? 0 !== e3.type : d2 || !(2 < b2.length) || "o" !== b2[0] && "O" !== b2[0] || "n" !== b2[1] && "N" !== b2[1])
    qa(b2, c2, e3, d2) && (c2 = null), d2 || null === e3 ? oa(b2) && (null === c2 ? a2.removeAttribute(b2) : a2.setAttribute(b2, "" + c2)) : e3.mustUseProperty ? a2[e3.propertyName] = null === c2 ? 3 === e3.type ? false : "" : c2 : (b2 = e3.attributeName, d2 = e3.attributeNamespace, null === c2 ? a2.removeAttribute(b2) : (e3 = e3.type, c2 = 3 === e3 || 4 === e3 && true === c2 ? "" : "" + c2, d2 ? a2.setAttributeNS(d2, b2, c2) : a2.setAttribute(b2, c2)));
}
var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, va = Symbol.for("react.element"), wa = Symbol.for("react.portal"), ya = Symbol.for("react.fragment"), za = Symbol.for("react.strict_mode"), Aa = Symbol.for("react.profiler"), Ba = Symbol.for("react.provider"), Ca = Symbol.for("react.context"), Da = Symbol.for("react.forward_ref"), Ea = Symbol.for("react.suspense"), Fa = Symbol.for("react.suspense_list"), Ga = Symbol.for("react.memo"), Ha = Symbol.for("react.lazy");
var Ia = Symbol.for("react.offscreen");
var Ja = Symbol.iterator;
function Ka(a2) {
  if (null === a2 || "object" !== typeof a2)
    return null;
  a2 = Ja && a2[Ja] || a2["@@iterator"];
  return "function" === typeof a2 ? a2 : null;
}
var A$1 = Object.assign, La;
function Ma(a2) {
  if (void 0 === La)
    try {
      throw Error();
    } catch (c2) {
      var b2 = c2.stack.trim().match(/\n( *(at )?)/);
      La = b2 && b2[1] || "";
    }
  return "\n" + La + a2;
}
var Na = false;
function Oa(a2, b2) {
  if (!a2 || Na)
    return "";
  Na = true;
  var c2 = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b2)
      if (b2 = function() {
        throw Error();
      }, Object.defineProperty(b2.prototype, "props", { set: function() {
        throw Error();
      } }), "object" === typeof Reflect && Reflect.construct) {
        try {
          Reflect.construct(b2, []);
        } catch (l2) {
          var d2 = l2;
        }
        Reflect.construct(a2, [], b2);
      } else {
        try {
          b2.call();
        } catch (l2) {
          d2 = l2;
        }
        a2.call(b2.prototype);
      }
    else {
      try {
        throw Error();
      } catch (l2) {
        d2 = l2;
      }
      a2();
    }
  } catch (l2) {
    if (l2 && d2 && "string" === typeof l2.stack) {
      for (var e3 = l2.stack.split("\n"), f2 = d2.stack.split("\n"), g2 = e3.length - 1, h2 = f2.length - 1; 1 <= g2 && 0 <= h2 && e3[g2] !== f2[h2]; )
        h2--;
      for (; 1 <= g2 && 0 <= h2; g2--, h2--)
        if (e3[g2] !== f2[h2]) {
          if (1 !== g2 || 1 !== h2) {
            do
              if (g2--, h2--, 0 > h2 || e3[g2] !== f2[h2]) {
                var k2 = "\n" + e3[g2].replace(" at new ", " at ");
                a2.displayName && k2.includes("<anonymous>") && (k2 = k2.replace("<anonymous>", a2.displayName));
                return k2;
              }
            while (1 <= g2 && 0 <= h2);
          }
          break;
        }
    }
  } finally {
    Na = false, Error.prepareStackTrace = c2;
  }
  return (a2 = a2 ? a2.displayName || a2.name : "") ? Ma(a2) : "";
}
function Pa(a2) {
  switch (a2.tag) {
    case 5:
      return Ma(a2.type);
    case 16:
      return Ma("Lazy");
    case 13:
      return Ma("Suspense");
    case 19:
      return Ma("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a2 = Oa(a2.type, false), a2;
    case 11:
      return a2 = Oa(a2.type.render, false), a2;
    case 1:
      return a2 = Oa(a2.type, true), a2;
    default:
      return "";
  }
}
function Qa(a2) {
  if (null == a2)
    return null;
  if ("function" === typeof a2)
    return a2.displayName || a2.name || null;
  if ("string" === typeof a2)
    return a2;
  switch (a2) {
    case ya:
      return "Fragment";
    case wa:
      return "Portal";
    case Aa:
      return "Profiler";
    case za:
      return "StrictMode";
    case Ea:
      return "Suspense";
    case Fa:
      return "SuspenseList";
  }
  if ("object" === typeof a2)
    switch (a2.$$typeof) {
      case Ca:
        return (a2.displayName || "Context") + ".Consumer";
      case Ba:
        return (a2._context.displayName || "Context") + ".Provider";
      case Da:
        var b2 = a2.render;
        a2 = a2.displayName;
        a2 || (a2 = b2.displayName || b2.name || "", a2 = "" !== a2 ? "ForwardRef(" + a2 + ")" : "ForwardRef");
        return a2;
      case Ga:
        return b2 = a2.displayName || null, null !== b2 ? b2 : Qa(a2.type) || "Memo";
      case Ha:
        b2 = a2._payload;
        a2 = a2._init;
        try {
          return Qa(a2(b2));
        } catch (c2) {
        }
    }
  return null;
}
function Ra(a2) {
  var b2 = a2.type;
  switch (a2.tag) {
    case 24:
      return "Cache";
    case 9:
      return (b2.displayName || "Context") + ".Consumer";
    case 10:
      return (b2._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return a2 = b2.render, a2 = a2.displayName || a2.name || "", b2.displayName || ("" !== a2 ? "ForwardRef(" + a2 + ")" : "ForwardRef");
    case 7:
      return "Fragment";
    case 5:
      return b2;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Qa(b2);
    case 8:
      return b2 === za ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if ("function" === typeof b2)
        return b2.displayName || b2.name || null;
      if ("string" === typeof b2)
        return b2;
  }
  return null;
}
function Sa(a2) {
  switch (typeof a2) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return a2;
    case "object":
      return a2;
    default:
      return "";
  }
}
function Ta(a2) {
  var b2 = a2.type;
  return (a2 = a2.nodeName) && "input" === a2.toLowerCase() && ("checkbox" === b2 || "radio" === b2);
}
function Ua(a2) {
  var b2 = Ta(a2) ? "checked" : "value", c2 = Object.getOwnPropertyDescriptor(a2.constructor.prototype, b2), d2 = "" + a2[b2];
  if (!a2.hasOwnProperty(b2) && "undefined" !== typeof c2 && "function" === typeof c2.get && "function" === typeof c2.set) {
    var e3 = c2.get, f2 = c2.set;
    Object.defineProperty(a2, b2, { configurable: true, get: function() {
      return e3.call(this);
    }, set: function(a3) {
      d2 = "" + a3;
      f2.call(this, a3);
    } });
    Object.defineProperty(a2, b2, { enumerable: c2.enumerable });
    return { getValue: function() {
      return d2;
    }, setValue: function(a3) {
      d2 = "" + a3;
    }, stopTracking: function() {
      a2._valueTracker = null;
      delete a2[b2];
    } };
  }
}
function Va(a2) {
  a2._valueTracker || (a2._valueTracker = Ua(a2));
}
function Wa(a2) {
  if (!a2)
    return false;
  var b2 = a2._valueTracker;
  if (!b2)
    return true;
  var c2 = b2.getValue();
  var d2 = "";
  a2 && (d2 = Ta(a2) ? a2.checked ? "true" : "false" : a2.value);
  a2 = d2;
  return a2 !== c2 ? (b2.setValue(a2), true) : false;
}
function Xa(a2) {
  a2 = a2 || ("undefined" !== typeof document ? document : void 0);
  if ("undefined" === typeof a2)
    return null;
  try {
    return a2.activeElement || a2.body;
  } catch (b2) {
    return a2.body;
  }
}
function Ya(a2, b2) {
  var c2 = b2.checked;
  return A$1({}, b2, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != c2 ? c2 : a2._wrapperState.initialChecked });
}
function Za(a2, b2) {
  var c2 = null == b2.defaultValue ? "" : b2.defaultValue, d2 = null != b2.checked ? b2.checked : b2.defaultChecked;
  c2 = Sa(null != b2.value ? b2.value : c2);
  a2._wrapperState = { initialChecked: d2, initialValue: c2, controlled: "checkbox" === b2.type || "radio" === b2.type ? null != b2.checked : null != b2.value };
}
function ab(a2, b2) {
  b2 = b2.checked;
  null != b2 && ta(a2, "checked", b2, false);
}
function bb(a2, b2) {
  ab(a2, b2);
  var c2 = Sa(b2.value), d2 = b2.type;
  if (null != c2)
    if ("number" === d2) {
      if (0 === c2 && "" === a2.value || a2.value != c2)
        a2.value = "" + c2;
    } else
      a2.value !== "" + c2 && (a2.value = "" + c2);
  else if ("submit" === d2 || "reset" === d2) {
    a2.removeAttribute("value");
    return;
  }
  b2.hasOwnProperty("value") ? cb(a2, b2.type, c2) : b2.hasOwnProperty("defaultValue") && cb(a2, b2.type, Sa(b2.defaultValue));
  null == b2.checked && null != b2.defaultChecked && (a2.defaultChecked = !!b2.defaultChecked);
}
function db(a2, b2, c2) {
  if (b2.hasOwnProperty("value") || b2.hasOwnProperty("defaultValue")) {
    var d2 = b2.type;
    if (!("submit" !== d2 && "reset" !== d2 || void 0 !== b2.value && null !== b2.value))
      return;
    b2 = "" + a2._wrapperState.initialValue;
    c2 || b2 === a2.value || (a2.value = b2);
    a2.defaultValue = b2;
  }
  c2 = a2.name;
  "" !== c2 && (a2.name = "");
  a2.defaultChecked = !!a2._wrapperState.initialChecked;
  "" !== c2 && (a2.name = c2);
}
function cb(a2, b2, c2) {
  if ("number" !== b2 || Xa(a2.ownerDocument) !== a2)
    null == c2 ? a2.defaultValue = "" + a2._wrapperState.initialValue : a2.defaultValue !== "" + c2 && (a2.defaultValue = "" + c2);
}
var eb = Array.isArray;
function fb(a2, b2, c2, d2) {
  a2 = a2.options;
  if (b2) {
    b2 = {};
    for (var e3 = 0; e3 < c2.length; e3++)
      b2["$" + c2[e3]] = true;
    for (c2 = 0; c2 < a2.length; c2++)
      e3 = b2.hasOwnProperty("$" + a2[c2].value), a2[c2].selected !== e3 && (a2[c2].selected = e3), e3 && d2 && (a2[c2].defaultSelected = true);
  } else {
    c2 = "" + Sa(c2);
    b2 = null;
    for (e3 = 0; e3 < a2.length; e3++) {
      if (a2[e3].value === c2) {
        a2[e3].selected = true;
        d2 && (a2[e3].defaultSelected = true);
        return;
      }
      null !== b2 || a2[e3].disabled || (b2 = a2[e3]);
    }
    null !== b2 && (b2.selected = true);
  }
}
function gb(a2, b2) {
  if (null != b2.dangerouslySetInnerHTML)
    throw Error(p$1(91));
  return A$1({}, b2, { value: void 0, defaultValue: void 0, children: "" + a2._wrapperState.initialValue });
}
function hb(a2, b2) {
  var c2 = b2.value;
  if (null == c2) {
    c2 = b2.children;
    b2 = b2.defaultValue;
    if (null != c2) {
      if (null != b2)
        throw Error(p$1(92));
      if (eb(c2)) {
        if (1 < c2.length)
          throw Error(p$1(93));
        c2 = c2[0];
      }
      b2 = c2;
    }
    null == b2 && (b2 = "");
    c2 = b2;
  }
  a2._wrapperState = { initialValue: Sa(c2) };
}
function ib(a2, b2) {
  var c2 = Sa(b2.value), d2 = Sa(b2.defaultValue);
  null != c2 && (c2 = "" + c2, c2 !== a2.value && (a2.value = c2), null == b2.defaultValue && a2.defaultValue !== c2 && (a2.defaultValue = c2));
  null != d2 && (a2.defaultValue = "" + d2);
}
function jb(a2) {
  var b2 = a2.textContent;
  b2 === a2._wrapperState.initialValue && "" !== b2 && null !== b2 && (a2.value = b2);
}
function kb(a2) {
  switch (a2) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function lb(a2, b2) {
  return null == a2 || "http://www.w3.org/1999/xhtml" === a2 ? kb(b2) : "http://www.w3.org/2000/svg" === a2 && "foreignObject" === b2 ? "http://www.w3.org/1999/xhtml" : a2;
}
var mb, nb = function(a2) {
  return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function(b2, c2, d2, e3) {
    MSApp.execUnsafeLocalFunction(function() {
      return a2(b2, c2, d2, e3);
    });
  } : a2;
}(function(a2, b2) {
  if ("http://www.w3.org/2000/svg" !== a2.namespaceURI || "innerHTML" in a2)
    a2.innerHTML = b2;
  else {
    mb = mb || document.createElement("div");
    mb.innerHTML = "<svg>" + b2.valueOf().toString() + "</svg>";
    for (b2 = mb.firstChild; a2.firstChild; )
      a2.removeChild(a2.firstChild);
    for (; b2.firstChild; )
      a2.appendChild(b2.firstChild);
  }
});
function ob(a2, b2) {
  if (b2) {
    var c2 = a2.firstChild;
    if (c2 && c2 === a2.lastChild && 3 === c2.nodeType) {
      c2.nodeValue = b2;
      return;
    }
  }
  a2.textContent = b2;
}
var pb = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, qb = ["Webkit", "ms", "Moz", "O"];
Object.keys(pb).forEach(function(a2) {
  qb.forEach(function(b2) {
    b2 = b2 + a2.charAt(0).toUpperCase() + a2.substring(1);
    pb[b2] = pb[a2];
  });
});
function rb(a2, b2, c2) {
  return null == b2 || "boolean" === typeof b2 || "" === b2 ? "" : c2 || "number" !== typeof b2 || 0 === b2 || pb.hasOwnProperty(a2) && pb[a2] ? ("" + b2).trim() : b2 + "px";
}
function sb(a2, b2) {
  a2 = a2.style;
  for (var c2 in b2)
    if (b2.hasOwnProperty(c2)) {
      var d2 = 0 === c2.indexOf("--"), e3 = rb(c2, b2[c2], d2);
      "float" === c2 && (c2 = "cssFloat");
      d2 ? a2.setProperty(c2, e3) : a2[c2] = e3;
    }
}
var tb = A$1({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
function ub(a2, b2) {
  if (b2) {
    if (tb[a2] && (null != b2.children || null != b2.dangerouslySetInnerHTML))
      throw Error(p$1(137, a2));
    if (null != b2.dangerouslySetInnerHTML) {
      if (null != b2.children)
        throw Error(p$1(60));
      if ("object" !== typeof b2.dangerouslySetInnerHTML || !("__html" in b2.dangerouslySetInnerHTML))
        throw Error(p$1(61));
    }
    if (null != b2.style && "object" !== typeof b2.style)
      throw Error(p$1(62));
  }
}
function vb(a2, b2) {
  if (-1 === a2.indexOf("-"))
    return "string" === typeof b2.is;
  switch (a2) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return false;
    default:
      return true;
  }
}
var wb = null;
function xb(a2) {
  a2 = a2.target || a2.srcElement || window;
  a2.correspondingUseElement && (a2 = a2.correspondingUseElement);
  return 3 === a2.nodeType ? a2.parentNode : a2;
}
var yb = null, zb = null, Ab = null;
function Bb(a2) {
  if (a2 = Cb(a2)) {
    if ("function" !== typeof yb)
      throw Error(p$1(280));
    var b2 = a2.stateNode;
    b2 && (b2 = Db(b2), yb(a2.stateNode, a2.type, b2));
  }
}
function Eb(a2) {
  zb ? Ab ? Ab.push(a2) : Ab = [a2] : zb = a2;
}
function Fb() {
  if (zb) {
    var a2 = zb, b2 = Ab;
    Ab = zb = null;
    Bb(a2);
    if (b2)
      for (a2 = 0; a2 < b2.length; a2++)
        Bb(b2[a2]);
  }
}
function Gb(a2, b2) {
  return a2(b2);
}
function Hb() {
}
var Ib = false;
function Jb(a2, b2, c2) {
  if (Ib)
    return a2(b2, c2);
  Ib = true;
  try {
    return Gb(a2, b2, c2);
  } finally {
    if (Ib = false, null !== zb || null !== Ab)
      Hb(), Fb();
  }
}
function Kb(a2, b2) {
  var c2 = a2.stateNode;
  if (null === c2)
    return null;
  var d2 = Db(c2);
  if (null === d2)
    return null;
  c2 = d2[b2];
  a:
    switch (b2) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (d2 = !d2.disabled) || (a2 = a2.type, d2 = !("button" === a2 || "input" === a2 || "select" === a2 || "textarea" === a2));
        a2 = !d2;
        break a;
      default:
        a2 = false;
    }
  if (a2)
    return null;
  if (c2 && "function" !== typeof c2)
    throw Error(p$1(231, b2, typeof c2));
  return c2;
}
var Lb = false;
if (ia)
  try {
    var Mb = {};
    Object.defineProperty(Mb, "passive", { get: function() {
      Lb = true;
    } });
    window.addEventListener("test", Mb, Mb);
    window.removeEventListener("test", Mb, Mb);
  } catch (a2) {
    Lb = false;
  }
function Nb(a2, b2, c2, d2, e3, f2, g2, h2, k2) {
  var l2 = Array.prototype.slice.call(arguments, 3);
  try {
    b2.apply(c2, l2);
  } catch (m2) {
    this.onError(m2);
  }
}
var Ob = false, Pb = null, Qb = false, Rb = null, Sb = { onError: function(a2) {
  Ob = true;
  Pb = a2;
} };
function Tb(a2, b2, c2, d2, e3, f2, g2, h2, k2) {
  Ob = false;
  Pb = null;
  Nb.apply(Sb, arguments);
}
function Ub(a2, b2, c2, d2, e3, f2, g2, h2, k2) {
  Tb.apply(this, arguments);
  if (Ob) {
    if (Ob) {
      var l2 = Pb;
      Ob = false;
      Pb = null;
    } else
      throw Error(p$1(198));
    Qb || (Qb = true, Rb = l2);
  }
}
function Vb(a2) {
  var b2 = a2, c2 = a2;
  if (a2.alternate)
    for (; b2.return; )
      b2 = b2.return;
  else {
    a2 = b2;
    do
      b2 = a2, 0 !== (b2.flags & 4098) && (c2 = b2.return), a2 = b2.return;
    while (a2);
  }
  return 3 === b2.tag ? c2 : null;
}
function Wb(a2) {
  if (13 === a2.tag) {
    var b2 = a2.memoizedState;
    null === b2 && (a2 = a2.alternate, null !== a2 && (b2 = a2.memoizedState));
    if (null !== b2)
      return b2.dehydrated;
  }
  return null;
}
function Xb(a2) {
  if (Vb(a2) !== a2)
    throw Error(p$1(188));
}
function Yb(a2) {
  var b2 = a2.alternate;
  if (!b2) {
    b2 = Vb(a2);
    if (null === b2)
      throw Error(p$1(188));
    return b2 !== a2 ? null : a2;
  }
  for (var c2 = a2, d2 = b2; ; ) {
    var e3 = c2.return;
    if (null === e3)
      break;
    var f2 = e3.alternate;
    if (null === f2) {
      d2 = e3.return;
      if (null !== d2) {
        c2 = d2;
        continue;
      }
      break;
    }
    if (e3.child === f2.child) {
      for (f2 = e3.child; f2; ) {
        if (f2 === c2)
          return Xb(e3), a2;
        if (f2 === d2)
          return Xb(e3), b2;
        f2 = f2.sibling;
      }
      throw Error(p$1(188));
    }
    if (c2.return !== d2.return)
      c2 = e3, d2 = f2;
    else {
      for (var g2 = false, h2 = e3.child; h2; ) {
        if (h2 === c2) {
          g2 = true;
          c2 = e3;
          d2 = f2;
          break;
        }
        if (h2 === d2) {
          g2 = true;
          d2 = e3;
          c2 = f2;
          break;
        }
        h2 = h2.sibling;
      }
      if (!g2) {
        for (h2 = f2.child; h2; ) {
          if (h2 === c2) {
            g2 = true;
            c2 = f2;
            d2 = e3;
            break;
          }
          if (h2 === d2) {
            g2 = true;
            d2 = f2;
            c2 = e3;
            break;
          }
          h2 = h2.sibling;
        }
        if (!g2)
          throw Error(p$1(189));
      }
    }
    if (c2.alternate !== d2)
      throw Error(p$1(190));
  }
  if (3 !== c2.tag)
    throw Error(p$1(188));
  return c2.stateNode.current === c2 ? a2 : b2;
}
function Zb(a2) {
  a2 = Yb(a2);
  return null !== a2 ? $b(a2) : null;
}
function $b(a2) {
  if (5 === a2.tag || 6 === a2.tag)
    return a2;
  for (a2 = a2.child; null !== a2; ) {
    var b2 = $b(a2);
    if (null !== b2)
      return b2;
    a2 = a2.sibling;
  }
  return null;
}
var ac = ca.unstable_scheduleCallback, bc = ca.unstable_cancelCallback, cc = ca.unstable_shouldYield, dc = ca.unstable_requestPaint, B = ca.unstable_now, ec = ca.unstable_getCurrentPriorityLevel, fc = ca.unstable_ImmediatePriority, gc = ca.unstable_UserBlockingPriority, hc = ca.unstable_NormalPriority, ic = ca.unstable_LowPriority, jc = ca.unstable_IdlePriority, kc = null, lc = null;
function mc(a2) {
  if (lc && "function" === typeof lc.onCommitFiberRoot)
    try {
      lc.onCommitFiberRoot(kc, a2, void 0, 128 === (a2.current.flags & 128));
    } catch (b2) {
    }
}
var oc = Math.clz32 ? Math.clz32 : nc, pc = Math.log, qc = Math.LN2;
function nc(a2) {
  a2 >>>= 0;
  return 0 === a2 ? 32 : 31 - (pc(a2) / qc | 0) | 0;
}
var rc = 64, sc = 4194304;
function tc(a2) {
  switch (a2 & -a2) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a2 & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return a2 & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return a2;
  }
}
function uc(a2, b2) {
  var c2 = a2.pendingLanes;
  if (0 === c2)
    return 0;
  var d2 = 0, e3 = a2.suspendedLanes, f2 = a2.pingedLanes, g2 = c2 & 268435455;
  if (0 !== g2) {
    var h2 = g2 & ~e3;
    0 !== h2 ? d2 = tc(h2) : (f2 &= g2, 0 !== f2 && (d2 = tc(f2)));
  } else
    g2 = c2 & ~e3, 0 !== g2 ? d2 = tc(g2) : 0 !== f2 && (d2 = tc(f2));
  if (0 === d2)
    return 0;
  if (0 !== b2 && b2 !== d2 && 0 === (b2 & e3) && (e3 = d2 & -d2, f2 = b2 & -b2, e3 >= f2 || 16 === e3 && 0 !== (f2 & 4194240)))
    return b2;
  0 !== (d2 & 4) && (d2 |= c2 & 16);
  b2 = a2.entangledLanes;
  if (0 !== b2)
    for (a2 = a2.entanglements, b2 &= d2; 0 < b2; )
      c2 = 31 - oc(b2), e3 = 1 << c2, d2 |= a2[c2], b2 &= ~e3;
  return d2;
}
function vc(a2, b2) {
  switch (a2) {
    case 1:
    case 2:
    case 4:
      return b2 + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return b2 + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function wc(a2, b2) {
  for (var c2 = a2.suspendedLanes, d2 = a2.pingedLanes, e3 = a2.expirationTimes, f2 = a2.pendingLanes; 0 < f2; ) {
    var g2 = 31 - oc(f2), h2 = 1 << g2, k2 = e3[g2];
    if (-1 === k2) {
      if (0 === (h2 & c2) || 0 !== (h2 & d2))
        e3[g2] = vc(h2, b2);
    } else
      k2 <= b2 && (a2.expiredLanes |= h2);
    f2 &= ~h2;
  }
}
function xc(a2) {
  a2 = a2.pendingLanes & -1073741825;
  return 0 !== a2 ? a2 : a2 & 1073741824 ? 1073741824 : 0;
}
function yc() {
  var a2 = rc;
  rc <<= 1;
  0 === (rc & 4194240) && (rc = 64);
  return a2;
}
function zc(a2) {
  for (var b2 = [], c2 = 0; 31 > c2; c2++)
    b2.push(a2);
  return b2;
}
function Ac(a2, b2, c2) {
  a2.pendingLanes |= b2;
  536870912 !== b2 && (a2.suspendedLanes = 0, a2.pingedLanes = 0);
  a2 = a2.eventTimes;
  b2 = 31 - oc(b2);
  a2[b2] = c2;
}
function Bc(a2, b2) {
  var c2 = a2.pendingLanes & ~b2;
  a2.pendingLanes = b2;
  a2.suspendedLanes = 0;
  a2.pingedLanes = 0;
  a2.expiredLanes &= b2;
  a2.mutableReadLanes &= b2;
  a2.entangledLanes &= b2;
  b2 = a2.entanglements;
  var d2 = a2.eventTimes;
  for (a2 = a2.expirationTimes; 0 < c2; ) {
    var e3 = 31 - oc(c2), f2 = 1 << e3;
    b2[e3] = 0;
    d2[e3] = -1;
    a2[e3] = -1;
    c2 &= ~f2;
  }
}
function Cc(a2, b2) {
  var c2 = a2.entangledLanes |= b2;
  for (a2 = a2.entanglements; c2; ) {
    var d2 = 31 - oc(c2), e3 = 1 << d2;
    e3 & b2 | a2[d2] & b2 && (a2[d2] |= b2);
    c2 &= ~e3;
  }
}
var C = 0;
function Dc(a2) {
  a2 &= -a2;
  return 1 < a2 ? 4 < a2 ? 0 !== (a2 & 268435455) ? 16 : 536870912 : 4 : 1;
}
var Ec, Fc, Gc, Hc, Ic, Jc = false, Kc = [], Lc = null, Mc = null, Nc = null, Oc = /* @__PURE__ */ new Map(), Pc = /* @__PURE__ */ new Map(), Qc = [], Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Sc(a2, b2) {
  switch (a2) {
    case "focusin":
    case "focusout":
      Lc = null;
      break;
    case "dragenter":
    case "dragleave":
      Mc = null;
      break;
    case "mouseover":
    case "mouseout":
      Nc = null;
      break;
    case "pointerover":
    case "pointerout":
      Oc.delete(b2.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Pc.delete(b2.pointerId);
  }
}
function Tc(a2, b2, c2, d2, e3, f2) {
  if (null === a2 || a2.nativeEvent !== f2)
    return a2 = { blockedOn: b2, domEventName: c2, eventSystemFlags: d2, nativeEvent: f2, targetContainers: [e3] }, null !== b2 && (b2 = Cb(b2), null !== b2 && Fc(b2)), a2;
  a2.eventSystemFlags |= d2;
  b2 = a2.targetContainers;
  null !== e3 && -1 === b2.indexOf(e3) && b2.push(e3);
  return a2;
}
function Uc(a2, b2, c2, d2, e3) {
  switch (b2) {
    case "focusin":
      return Lc = Tc(Lc, a2, b2, c2, d2, e3), true;
    case "dragenter":
      return Mc = Tc(Mc, a2, b2, c2, d2, e3), true;
    case "mouseover":
      return Nc = Tc(Nc, a2, b2, c2, d2, e3), true;
    case "pointerover":
      var f2 = e3.pointerId;
      Oc.set(f2, Tc(Oc.get(f2) || null, a2, b2, c2, d2, e3));
      return true;
    case "gotpointercapture":
      return f2 = e3.pointerId, Pc.set(f2, Tc(Pc.get(f2) || null, a2, b2, c2, d2, e3)), true;
  }
  return false;
}
function Vc(a2) {
  var b2 = Wc(a2.target);
  if (null !== b2) {
    var c2 = Vb(b2);
    if (null !== c2) {
      if (b2 = c2.tag, 13 === b2) {
        if (b2 = Wb(c2), null !== b2) {
          a2.blockedOn = b2;
          Ic(a2.priority, function() {
            Gc(c2);
          });
          return;
        }
      } else if (3 === b2 && c2.stateNode.current.memoizedState.isDehydrated) {
        a2.blockedOn = 3 === c2.tag ? c2.stateNode.containerInfo : null;
        return;
      }
    }
  }
  a2.blockedOn = null;
}
function Xc(a2) {
  if (null !== a2.blockedOn)
    return false;
  for (var b2 = a2.targetContainers; 0 < b2.length; ) {
    var c2 = Yc(a2.domEventName, a2.eventSystemFlags, b2[0], a2.nativeEvent);
    if (null === c2) {
      c2 = a2.nativeEvent;
      var d2 = new c2.constructor(c2.type, c2);
      wb = d2;
      c2.target.dispatchEvent(d2);
      wb = null;
    } else
      return b2 = Cb(c2), null !== b2 && Fc(b2), a2.blockedOn = c2, false;
    b2.shift();
  }
  return true;
}
function Zc(a2, b2, c2) {
  Xc(a2) && c2.delete(b2);
}
function $c() {
  Jc = false;
  null !== Lc && Xc(Lc) && (Lc = null);
  null !== Mc && Xc(Mc) && (Mc = null);
  null !== Nc && Xc(Nc) && (Nc = null);
  Oc.forEach(Zc);
  Pc.forEach(Zc);
}
function ad(a2, b2) {
  a2.blockedOn === b2 && (a2.blockedOn = null, Jc || (Jc = true, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
}
function bd(a2) {
  function b2(b3) {
    return ad(b3, a2);
  }
  if (0 < Kc.length) {
    ad(Kc[0], a2);
    for (var c2 = 1; c2 < Kc.length; c2++) {
      var d2 = Kc[c2];
      d2.blockedOn === a2 && (d2.blockedOn = null);
    }
  }
  null !== Lc && ad(Lc, a2);
  null !== Mc && ad(Mc, a2);
  null !== Nc && ad(Nc, a2);
  Oc.forEach(b2);
  Pc.forEach(b2);
  for (c2 = 0; c2 < Qc.length; c2++)
    d2 = Qc[c2], d2.blockedOn === a2 && (d2.blockedOn = null);
  for (; 0 < Qc.length && (c2 = Qc[0], null === c2.blockedOn); )
    Vc(c2), null === c2.blockedOn && Qc.shift();
}
var cd = ua.ReactCurrentBatchConfig, dd = true;
function ed(a2, b2, c2, d2) {
  var e3 = C, f2 = cd.transition;
  cd.transition = null;
  try {
    C = 1, fd(a2, b2, c2, d2);
  } finally {
    C = e3, cd.transition = f2;
  }
}
function gd(a2, b2, c2, d2) {
  var e3 = C, f2 = cd.transition;
  cd.transition = null;
  try {
    C = 4, fd(a2, b2, c2, d2);
  } finally {
    C = e3, cd.transition = f2;
  }
}
function fd(a2, b2, c2, d2) {
  if (dd) {
    var e3 = Yc(a2, b2, c2, d2);
    if (null === e3)
      hd(a2, b2, d2, id$1, c2), Sc(a2, d2);
    else if (Uc(e3, a2, b2, c2, d2))
      d2.stopPropagation();
    else if (Sc(a2, d2), b2 & 4 && -1 < Rc.indexOf(a2)) {
      for (; null !== e3; ) {
        var f2 = Cb(e3);
        null !== f2 && Ec(f2);
        f2 = Yc(a2, b2, c2, d2);
        null === f2 && hd(a2, b2, d2, id$1, c2);
        if (f2 === e3)
          break;
        e3 = f2;
      }
      null !== e3 && d2.stopPropagation();
    } else
      hd(a2, b2, d2, null, c2);
  }
}
var id$1 = null;
function Yc(a2, b2, c2, d2) {
  id$1 = null;
  a2 = xb(d2);
  a2 = Wc(a2);
  if (null !== a2)
    if (b2 = Vb(a2), null === b2)
      a2 = null;
    else if (c2 = b2.tag, 13 === c2) {
      a2 = Wb(b2);
      if (null !== a2)
        return a2;
      a2 = null;
    } else if (3 === c2) {
      if (b2.stateNode.current.memoizedState.isDehydrated)
        return 3 === b2.tag ? b2.stateNode.containerInfo : null;
      a2 = null;
    } else
      b2 !== a2 && (a2 = null);
  id$1 = a2;
  return null;
}
function jd(a2) {
  switch (a2) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (ec()) {
        case fc:
          return 1;
        case gc:
          return 4;
        case hc:
        case ic:
          return 16;
        case jc:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var kd = null, ld = null, md = null;
function nd() {
  if (md)
    return md;
  var a2, b2 = ld, c2 = b2.length, d2, e3 = "value" in kd ? kd.value : kd.textContent, f2 = e3.length;
  for (a2 = 0; a2 < c2 && b2[a2] === e3[a2]; a2++)
    ;
  var g2 = c2 - a2;
  for (d2 = 1; d2 <= g2 && b2[c2 - d2] === e3[f2 - d2]; d2++)
    ;
  return md = e3.slice(a2, 1 < d2 ? 1 - d2 : void 0);
}
function od(a2) {
  var b2 = a2.keyCode;
  "charCode" in a2 ? (a2 = a2.charCode, 0 === a2 && 13 === b2 && (a2 = 13)) : a2 = b2;
  10 === a2 && (a2 = 13);
  return 32 <= a2 || 13 === a2 ? a2 : 0;
}
function pd() {
  return true;
}
function qd() {
  return false;
}
function rd(a2) {
  function b2(b3, d2, e3, f2, g2) {
    this._reactName = b3;
    this._targetInst = e3;
    this.type = d2;
    this.nativeEvent = f2;
    this.target = g2;
    this.currentTarget = null;
    for (var c2 in a2)
      a2.hasOwnProperty(c2) && (b3 = a2[c2], this[c2] = b3 ? b3(f2) : f2[c2]);
    this.isDefaultPrevented = (null != f2.defaultPrevented ? f2.defaultPrevented : false === f2.returnValue) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }
  A$1(b2.prototype, { preventDefault: function() {
    this.defaultPrevented = true;
    var a3 = this.nativeEvent;
    a3 && (a3.preventDefault ? a3.preventDefault() : "unknown" !== typeof a3.returnValue && (a3.returnValue = false), this.isDefaultPrevented = pd);
  }, stopPropagation: function() {
    var a3 = this.nativeEvent;
    a3 && (a3.stopPropagation ? a3.stopPropagation() : "unknown" !== typeof a3.cancelBubble && (a3.cancelBubble = true), this.isPropagationStopped = pd);
  }, persist: function() {
  }, isPersistent: pd });
  return b2;
}
var sd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a2) {
  return a2.timeStamp || Date.now();
}, defaultPrevented: 0, isTrusted: 0 }, td = rd(sd), ud = A$1({}, sd, { view: 0, detail: 0 }), vd = rd(ud), wd, xd, yd, Ad = A$1({}, ud, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function(a2) {
  return void 0 === a2.relatedTarget ? a2.fromElement === a2.srcElement ? a2.toElement : a2.fromElement : a2.relatedTarget;
}, movementX: function(a2) {
  if ("movementX" in a2)
    return a2.movementX;
  a2 !== yd && (yd && "mousemove" === a2.type ? (wd = a2.screenX - yd.screenX, xd = a2.screenY - yd.screenY) : xd = wd = 0, yd = a2);
  return wd;
}, movementY: function(a2) {
  return "movementY" in a2 ? a2.movementY : xd;
} }), Bd = rd(Ad), Cd = A$1({}, Ad, { dataTransfer: 0 }), Dd = rd(Cd), Ed = A$1({}, ud, { relatedTarget: 0 }), Fd = rd(Ed), Gd = A$1({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Hd = rd(Gd), Id = A$1({}, sd, { clipboardData: function(a2) {
  return "clipboardData" in a2 ? a2.clipboardData : window.clipboardData;
} }), Jd = rd(Id), Kd = A$1({}, sd, { data: 0 }), Ld = rd(Kd), Md = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
}, Nd = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
}, Od = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
function Pd(a2) {
  var b2 = this.nativeEvent;
  return b2.getModifierState ? b2.getModifierState(a2) : (a2 = Od[a2]) ? !!b2[a2] : false;
}
function zd() {
  return Pd;
}
var Qd = A$1({}, ud, { key: function(a2) {
  if (a2.key) {
    var b2 = Md[a2.key] || a2.key;
    if ("Unidentified" !== b2)
      return b2;
  }
  return "keypress" === a2.type ? (a2 = od(a2), 13 === a2 ? "Enter" : String.fromCharCode(a2)) : "keydown" === a2.type || "keyup" === a2.type ? Nd[a2.keyCode] || "Unidentified" : "";
}, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function(a2) {
  return "keypress" === a2.type ? od(a2) : 0;
}, keyCode: function(a2) {
  return "keydown" === a2.type || "keyup" === a2.type ? a2.keyCode : 0;
}, which: function(a2) {
  return "keypress" === a2.type ? od(a2) : "keydown" === a2.type || "keyup" === a2.type ? a2.keyCode : 0;
} }), Rd = rd(Qd), Sd = A$1({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Td = rd(Sd), Ud = A$1({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }), Vd = rd(Ud), Wd = A$1({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Xd = rd(Wd), Yd = A$1({}, Ad, {
  deltaX: function(a2) {
    return "deltaX" in a2 ? a2.deltaX : "wheelDeltaX" in a2 ? -a2.wheelDeltaX : 0;
  },
  deltaY: function(a2) {
    return "deltaY" in a2 ? a2.deltaY : "wheelDeltaY" in a2 ? -a2.wheelDeltaY : "wheelDelta" in a2 ? -a2.wheelDelta : 0;
  },
  deltaZ: 0,
  deltaMode: 0
}), Zd = rd(Yd), $d = [9, 13, 27, 32], ae = ia && "CompositionEvent" in window, be = null;
ia && "documentMode" in document && (be = document.documentMode);
var ce = ia && "TextEvent" in window && !be, de = ia && (!ae || be && 8 < be && 11 >= be), ee = String.fromCharCode(32), fe = false;
function ge(a2, b2) {
  switch (a2) {
    case "keyup":
      return -1 !== $d.indexOf(b2.keyCode);
    case "keydown":
      return 229 !== b2.keyCode;
    case "keypress":
    case "mousedown":
    case "focusout":
      return true;
    default:
      return false;
  }
}
function he(a2) {
  a2 = a2.detail;
  return "object" === typeof a2 && "data" in a2 ? a2.data : null;
}
var ie = false;
function je(a2, b2) {
  switch (a2) {
    case "compositionend":
      return he(b2);
    case "keypress":
      if (32 !== b2.which)
        return null;
      fe = true;
      return ee;
    case "textInput":
      return a2 = b2.data, a2 === ee && fe ? null : a2;
    default:
      return null;
  }
}
function ke(a2, b2) {
  if (ie)
    return "compositionend" === a2 || !ae && ge(a2, b2) ? (a2 = nd(), md = ld = kd = null, ie = false, a2) : null;
  switch (a2) {
    case "paste":
      return null;
    case "keypress":
      if (!(b2.ctrlKey || b2.altKey || b2.metaKey) || b2.ctrlKey && b2.altKey) {
        if (b2.char && 1 < b2.char.length)
          return b2.char;
        if (b2.which)
          return String.fromCharCode(b2.which);
      }
      return null;
    case "compositionend":
      return de && "ko" !== b2.locale ? null : b2.data;
    default:
      return null;
  }
}
var le = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
function me(a2) {
  var b2 = a2 && a2.nodeName && a2.nodeName.toLowerCase();
  return "input" === b2 ? !!le[a2.type] : "textarea" === b2 ? true : false;
}
function ne(a2, b2, c2, d2) {
  Eb(d2);
  b2 = oe(b2, "onChange");
  0 < b2.length && (c2 = new td("onChange", "change", null, c2, d2), a2.push({ event: c2, listeners: b2 }));
}
var pe = null, qe = null;
function re$1(a2) {
  se(a2, 0);
}
function te(a2) {
  var b2 = ue(a2);
  if (Wa(b2))
    return a2;
}
function ve(a2, b2) {
  if ("change" === a2)
    return b2;
}
var we = false;
if (ia) {
  var xe;
  if (ia) {
    var ye = "oninput" in document;
    if (!ye) {
      var ze = document.createElement("div");
      ze.setAttribute("oninput", "return;");
      ye = "function" === typeof ze.oninput;
    }
    xe = ye;
  } else
    xe = false;
  we = xe && (!document.documentMode || 9 < document.documentMode);
}
function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
}
function Be(a2) {
  if ("value" === a2.propertyName && te(qe)) {
    var b2 = [];
    ne(b2, qe, a2, xb(a2));
    Jb(re$1, b2);
  }
}
function Ce(a2, b2, c2) {
  "focusin" === a2 ? (Ae(), pe = b2, qe = c2, pe.attachEvent("onpropertychange", Be)) : "focusout" === a2 && Ae();
}
function De(a2) {
  if ("selectionchange" === a2 || "keyup" === a2 || "keydown" === a2)
    return te(qe);
}
function Ee(a2, b2) {
  if ("click" === a2)
    return te(b2);
}
function Fe(a2, b2) {
  if ("input" === a2 || "change" === a2)
    return te(b2);
}
function Ge(a2, b2) {
  return a2 === b2 && (0 !== a2 || 1 / a2 === 1 / b2) || a2 !== a2 && b2 !== b2;
}
var He = "function" === typeof Object.is ? Object.is : Ge;
function Ie(a2, b2) {
  if (He(a2, b2))
    return true;
  if ("object" !== typeof a2 || null === a2 || "object" !== typeof b2 || null === b2)
    return false;
  var c2 = Object.keys(a2), d2 = Object.keys(b2);
  if (c2.length !== d2.length)
    return false;
  for (d2 = 0; d2 < c2.length; d2++) {
    var e3 = c2[d2];
    if (!ja.call(b2, e3) || !He(a2[e3], b2[e3]))
      return false;
  }
  return true;
}
function Je(a2) {
  for (; a2 && a2.firstChild; )
    a2 = a2.firstChild;
  return a2;
}
function Ke(a2, b2) {
  var c2 = Je(a2);
  a2 = 0;
  for (var d2; c2; ) {
    if (3 === c2.nodeType) {
      d2 = a2 + c2.textContent.length;
      if (a2 <= b2 && d2 >= b2)
        return { node: c2, offset: b2 - a2 };
      a2 = d2;
    }
    a: {
      for (; c2; ) {
        if (c2.nextSibling) {
          c2 = c2.nextSibling;
          break a;
        }
        c2 = c2.parentNode;
      }
      c2 = void 0;
    }
    c2 = Je(c2);
  }
}
function Le(a2, b2) {
  return a2 && b2 ? a2 === b2 ? true : a2 && 3 === a2.nodeType ? false : b2 && 3 === b2.nodeType ? Le(a2, b2.parentNode) : "contains" in a2 ? a2.contains(b2) : a2.compareDocumentPosition ? !!(a2.compareDocumentPosition(b2) & 16) : false : false;
}
function Me() {
  for (var a2 = window, b2 = Xa(); b2 instanceof a2.HTMLIFrameElement; ) {
    try {
      var c2 = "string" === typeof b2.contentWindow.location.href;
    } catch (d2) {
      c2 = false;
    }
    if (c2)
      a2 = b2.contentWindow;
    else
      break;
    b2 = Xa(a2.document);
  }
  return b2;
}
function Ne(a2) {
  var b2 = a2 && a2.nodeName && a2.nodeName.toLowerCase();
  return b2 && ("input" === b2 && ("text" === a2.type || "search" === a2.type || "tel" === a2.type || "url" === a2.type || "password" === a2.type) || "textarea" === b2 || "true" === a2.contentEditable);
}
function Oe(a2) {
  var b2 = Me(), c2 = a2.focusedElem, d2 = a2.selectionRange;
  if (b2 !== c2 && c2 && c2.ownerDocument && Le(c2.ownerDocument.documentElement, c2)) {
    if (null !== d2 && Ne(c2)) {
      if (b2 = d2.start, a2 = d2.end, void 0 === a2 && (a2 = b2), "selectionStart" in c2)
        c2.selectionStart = b2, c2.selectionEnd = Math.min(a2, c2.value.length);
      else if (a2 = (b2 = c2.ownerDocument || document) && b2.defaultView || window, a2.getSelection) {
        a2 = a2.getSelection();
        var e3 = c2.textContent.length, f2 = Math.min(d2.start, e3);
        d2 = void 0 === d2.end ? f2 : Math.min(d2.end, e3);
        !a2.extend && f2 > d2 && (e3 = d2, d2 = f2, f2 = e3);
        e3 = Ke(c2, f2);
        var g2 = Ke(
          c2,
          d2
        );
        e3 && g2 && (1 !== a2.rangeCount || a2.anchorNode !== e3.node || a2.anchorOffset !== e3.offset || a2.focusNode !== g2.node || a2.focusOffset !== g2.offset) && (b2 = b2.createRange(), b2.setStart(e3.node, e3.offset), a2.removeAllRanges(), f2 > d2 ? (a2.addRange(b2), a2.extend(g2.node, g2.offset)) : (b2.setEnd(g2.node, g2.offset), a2.addRange(b2)));
      }
    }
    b2 = [];
    for (a2 = c2; a2 = a2.parentNode; )
      1 === a2.nodeType && b2.push({ element: a2, left: a2.scrollLeft, top: a2.scrollTop });
    "function" === typeof c2.focus && c2.focus();
    for (c2 = 0; c2 < b2.length; c2++)
      a2 = b2[c2], a2.element.scrollLeft = a2.left, a2.element.scrollTop = a2.top;
  }
}
var Pe = ia && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re = null, Se = null, Te = false;
function Ue(a2, b2, c2) {
  var d2 = c2.window === c2 ? c2.document : 9 === c2.nodeType ? c2 : c2.ownerDocument;
  Te || null == Qe || Qe !== Xa(d2) || (d2 = Qe, "selectionStart" in d2 && Ne(d2) ? d2 = { start: d2.selectionStart, end: d2.selectionEnd } : (d2 = (d2.ownerDocument && d2.ownerDocument.defaultView || window).getSelection(), d2 = { anchorNode: d2.anchorNode, anchorOffset: d2.anchorOffset, focusNode: d2.focusNode, focusOffset: d2.focusOffset }), Se && Ie(Se, d2) || (Se = d2, d2 = oe(Re, "onSelect"), 0 < d2.length && (b2 = new td("onSelect", "select", null, b2, c2), a2.push({ event: b2, listeners: d2 }), b2.target = Qe)));
}
function Ve(a2, b2) {
  var c2 = {};
  c2[a2.toLowerCase()] = b2.toLowerCase();
  c2["Webkit" + a2] = "webkit" + b2;
  c2["Moz" + a2] = "moz" + b2;
  return c2;
}
var We = { animationend: Ve("Animation", "AnimationEnd"), animationiteration: Ve("Animation", "AnimationIteration"), animationstart: Ve("Animation", "AnimationStart"), transitionend: Ve("Transition", "TransitionEnd") }, Xe = {}, Ye = {};
ia && (Ye = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
function Ze(a2) {
  if (Xe[a2])
    return Xe[a2];
  if (!We[a2])
    return a2;
  var b2 = We[a2], c2;
  for (c2 in b2)
    if (b2.hasOwnProperty(c2) && c2 in Ye)
      return Xe[a2] = b2[c2];
  return a2;
}
var $e = Ze("animationend"), af = Ze("animationiteration"), bf = Ze("animationstart"), cf = Ze("transitionend"), df = /* @__PURE__ */ new Map(), ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ff(a2, b2) {
  df.set(a2, b2);
  fa(b2, [a2]);
}
for (var gf = 0; gf < ef.length; gf++) {
  var hf = ef[gf], jf = hf.toLowerCase(), kf = hf[0].toUpperCase() + hf.slice(1);
  ff(jf, "on" + kf);
}
ff($e, "onAnimationEnd");
ff(af, "onAnimationIteration");
ff(bf, "onAnimationStart");
ff("dblclick", "onDoubleClick");
ff("focusin", "onFocus");
ff("focusout", "onBlur");
ff(cf, "onTransitionEnd");
ha("onMouseEnter", ["mouseout", "mouseover"]);
ha("onMouseLeave", ["mouseout", "mouseover"]);
ha("onPointerEnter", ["pointerout", "pointerover"]);
ha("onPointerLeave", ["pointerout", "pointerover"]);
fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(a2, b2, c2) {
  var d2 = a2.type || "unknown-event";
  a2.currentTarget = c2;
  Ub(d2, b2, void 0, a2);
  a2.currentTarget = null;
}
function se(a2, b2) {
  b2 = 0 !== (b2 & 4);
  for (var c2 = 0; c2 < a2.length; c2++) {
    var d2 = a2[c2], e3 = d2.event;
    d2 = d2.listeners;
    a: {
      var f2 = void 0;
      if (b2)
        for (var g2 = d2.length - 1; 0 <= g2; g2--) {
          var h2 = d2[g2], k2 = h2.instance, l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e3.isPropagationStopped())
            break a;
          nf(e3, h2, l2);
          f2 = k2;
        }
      else
        for (g2 = 0; g2 < d2.length; g2++) {
          h2 = d2[g2];
          k2 = h2.instance;
          l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e3.isPropagationStopped())
            break a;
          nf(e3, h2, l2);
          f2 = k2;
        }
    }
  }
  if (Qb)
    throw a2 = Rb, Qb = false, Rb = null, a2;
}
function D(a2, b2) {
  var c2 = b2[of];
  void 0 === c2 && (c2 = b2[of] = /* @__PURE__ */ new Set());
  var d2 = a2 + "__bubble";
  c2.has(d2) || (pf(b2, a2, 2, false), c2.add(d2));
}
function qf(a2, b2, c2) {
  var d2 = 0;
  b2 && (d2 |= 4);
  pf(c2, a2, d2, b2);
}
var rf = "_reactListening" + Math.random().toString(36).slice(2);
function sf(a2) {
  if (!a2[rf]) {
    a2[rf] = true;
    da.forEach(function(b3) {
      "selectionchange" !== b3 && (mf.has(b3) || qf(b3, false, a2), qf(b3, true, a2));
    });
    var b2 = 9 === a2.nodeType ? a2 : a2.ownerDocument;
    null === b2 || b2[rf] || (b2[rf] = true, qf("selectionchange", false, b2));
  }
}
function pf(a2, b2, c2, d2) {
  switch (jd(b2)) {
    case 1:
      var e3 = ed;
      break;
    case 4:
      e3 = gd;
      break;
    default:
      e3 = fd;
  }
  c2 = e3.bind(null, b2, c2, a2);
  e3 = void 0;
  !Lb || "touchstart" !== b2 && "touchmove" !== b2 && "wheel" !== b2 || (e3 = true);
  d2 ? void 0 !== e3 ? a2.addEventListener(b2, c2, { capture: true, passive: e3 }) : a2.addEventListener(b2, c2, true) : void 0 !== e3 ? a2.addEventListener(b2, c2, { passive: e3 }) : a2.addEventListener(b2, c2, false);
}
function hd(a2, b2, c2, d2, e3) {
  var f2 = d2;
  if (0 === (b2 & 1) && 0 === (b2 & 2) && null !== d2)
    a:
      for (; ; ) {
        if (null === d2)
          return;
        var g2 = d2.tag;
        if (3 === g2 || 4 === g2) {
          var h2 = d2.stateNode.containerInfo;
          if (h2 === e3 || 8 === h2.nodeType && h2.parentNode === e3)
            break;
          if (4 === g2)
            for (g2 = d2.return; null !== g2; ) {
              var k2 = g2.tag;
              if (3 === k2 || 4 === k2) {
                if (k2 = g2.stateNode.containerInfo, k2 === e3 || 8 === k2.nodeType && k2.parentNode === e3)
                  return;
              }
              g2 = g2.return;
            }
          for (; null !== h2; ) {
            g2 = Wc(h2);
            if (null === g2)
              return;
            k2 = g2.tag;
            if (5 === k2 || 6 === k2) {
              d2 = f2 = g2;
              continue a;
            }
            h2 = h2.parentNode;
          }
        }
        d2 = d2.return;
      }
  Jb(function() {
    var d3 = f2, e4 = xb(c2), g3 = [];
    a: {
      var h3 = df.get(a2);
      if (void 0 !== h3) {
        var k3 = td, n2 = a2;
        switch (a2) {
          case "keypress":
            if (0 === od(c2))
              break a;
          case "keydown":
          case "keyup":
            k3 = Rd;
            break;
          case "focusin":
            n2 = "focus";
            k3 = Fd;
            break;
          case "focusout":
            n2 = "blur";
            k3 = Fd;
            break;
          case "beforeblur":
          case "afterblur":
            k3 = Fd;
            break;
          case "click":
            if (2 === c2.button)
              break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k3 = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k3 = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k3 = Vd;
            break;
          case $e:
          case af:
          case bf:
            k3 = Hd;
            break;
          case cf:
            k3 = Xd;
            break;
          case "scroll":
            k3 = vd;
            break;
          case "wheel":
            k3 = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            k3 = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k3 = Td;
        }
        var t2 = 0 !== (b2 & 4), J2 = !t2 && "scroll" === a2, x2 = t2 ? null !== h3 ? h3 + "Capture" : null : h3;
        t2 = [];
        for (var w2 = d3, u2; null !== w2; ) {
          u2 = w2;
          var F2 = u2.stateNode;
          5 === u2.tag && null !== F2 && (u2 = F2, null !== x2 && (F2 = Kb(w2, x2), null != F2 && t2.push(tf(w2, F2, u2))));
          if (J2)
            break;
          w2 = w2.return;
        }
        0 < t2.length && (h3 = new k3(h3, n2, null, c2, e4), g3.push({ event: h3, listeners: t2 }));
      }
    }
    if (0 === (b2 & 7)) {
      a: {
        h3 = "mouseover" === a2 || "pointerover" === a2;
        k3 = "mouseout" === a2 || "pointerout" === a2;
        if (h3 && c2 !== wb && (n2 = c2.relatedTarget || c2.fromElement) && (Wc(n2) || n2[uf]))
          break a;
        if (k3 || h3) {
          h3 = e4.window === e4 ? e4 : (h3 = e4.ownerDocument) ? h3.defaultView || h3.parentWindow : window;
          if (k3) {
            if (n2 = c2.relatedTarget || c2.toElement, k3 = d3, n2 = n2 ? Wc(n2) : null, null !== n2 && (J2 = Vb(n2), n2 !== J2 || 5 !== n2.tag && 6 !== n2.tag))
              n2 = null;
          } else
            k3 = null, n2 = d3;
          if (k3 !== n2) {
            t2 = Bd;
            F2 = "onMouseLeave";
            x2 = "onMouseEnter";
            w2 = "mouse";
            if ("pointerout" === a2 || "pointerover" === a2)
              t2 = Td, F2 = "onPointerLeave", x2 = "onPointerEnter", w2 = "pointer";
            J2 = null == k3 ? h3 : ue(k3);
            u2 = null == n2 ? h3 : ue(n2);
            h3 = new t2(F2, w2 + "leave", k3, c2, e4);
            h3.target = J2;
            h3.relatedTarget = u2;
            F2 = null;
            Wc(e4) === d3 && (t2 = new t2(x2, w2 + "enter", n2, c2, e4), t2.target = u2, t2.relatedTarget = J2, F2 = t2);
            J2 = F2;
            if (k3 && n2)
              b: {
                t2 = k3;
                x2 = n2;
                w2 = 0;
                for (u2 = t2; u2; u2 = vf(u2))
                  w2++;
                u2 = 0;
                for (F2 = x2; F2; F2 = vf(F2))
                  u2++;
                for (; 0 < w2 - u2; )
                  t2 = vf(t2), w2--;
                for (; 0 < u2 - w2; )
                  x2 = vf(x2), u2--;
                for (; w2--; ) {
                  if (t2 === x2 || null !== x2 && t2 === x2.alternate)
                    break b;
                  t2 = vf(t2);
                  x2 = vf(x2);
                }
                t2 = null;
              }
            else
              t2 = null;
            null !== k3 && wf(g3, h3, k3, t2, false);
            null !== n2 && null !== J2 && wf(g3, J2, n2, t2, true);
          }
        }
      }
      a: {
        h3 = d3 ? ue(d3) : window;
        k3 = h3.nodeName && h3.nodeName.toLowerCase();
        if ("select" === k3 || "input" === k3 && "file" === h3.type)
          var na = ve;
        else if (me(h3))
          if (we)
            na = Fe;
          else {
            na = De;
            var xa = Ce;
          }
        else
          (k3 = h3.nodeName) && "input" === k3.toLowerCase() && ("checkbox" === h3.type || "radio" === h3.type) && (na = Ee);
        if (na && (na = na(a2, d3))) {
          ne(g3, na, c2, e4);
          break a;
        }
        xa && xa(a2, h3, d3);
        "focusout" === a2 && (xa = h3._wrapperState) && xa.controlled && "number" === h3.type && cb(h3, "number", h3.value);
      }
      xa = d3 ? ue(d3) : window;
      switch (a2) {
        case "focusin":
          if (me(xa) || "true" === xa.contentEditable)
            Qe = xa, Re = d3, Se = null;
          break;
        case "focusout":
          Se = Re = Qe = null;
          break;
        case "mousedown":
          Te = true;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te = false;
          Ue(g3, c2, e4);
          break;
        case "selectionchange":
          if (Pe)
            break;
        case "keydown":
        case "keyup":
          Ue(g3, c2, e4);
      }
      var $a;
      if (ae)
        b: {
          switch (a2) {
            case "compositionstart":
              var ba = "onCompositionStart";
              break b;
            case "compositionend":
              ba = "onCompositionEnd";
              break b;
            case "compositionupdate":
              ba = "onCompositionUpdate";
              break b;
          }
          ba = void 0;
        }
      else
        ie ? ge(a2, c2) && (ba = "onCompositionEnd") : "keydown" === a2 && 229 === c2.keyCode && (ba = "onCompositionStart");
      ba && (de && "ko" !== c2.locale && (ie || "onCompositionStart" !== ba ? "onCompositionEnd" === ba && ie && ($a = nd()) : (kd = e4, ld = "value" in kd ? kd.value : kd.textContent, ie = true)), xa = oe(d3, ba), 0 < xa.length && (ba = new Ld(ba, a2, null, c2, e4), g3.push({ event: ba, listeners: xa }), $a ? ba.data = $a : ($a = he(c2), null !== $a && (ba.data = $a))));
      if ($a = ce ? je(a2, c2) : ke(a2, c2))
        d3 = oe(d3, "onBeforeInput"), 0 < d3.length && (e4 = new Ld("onBeforeInput", "beforeinput", null, c2, e4), g3.push({ event: e4, listeners: d3 }), e4.data = $a);
    }
    se(g3, b2);
  });
}
function tf(a2, b2, c2) {
  return { instance: a2, listener: b2, currentTarget: c2 };
}
function oe(a2, b2) {
  for (var c2 = b2 + "Capture", d2 = []; null !== a2; ) {
    var e3 = a2, f2 = e3.stateNode;
    5 === e3.tag && null !== f2 && (e3 = f2, f2 = Kb(a2, c2), null != f2 && d2.unshift(tf(a2, f2, e3)), f2 = Kb(a2, b2), null != f2 && d2.push(tf(a2, f2, e3)));
    a2 = a2.return;
  }
  return d2;
}
function vf(a2) {
  if (null === a2)
    return null;
  do
    a2 = a2.return;
  while (a2 && 5 !== a2.tag);
  return a2 ? a2 : null;
}
function wf(a2, b2, c2, d2, e3) {
  for (var f2 = b2._reactName, g2 = []; null !== c2 && c2 !== d2; ) {
    var h2 = c2, k2 = h2.alternate, l2 = h2.stateNode;
    if (null !== k2 && k2 === d2)
      break;
    5 === h2.tag && null !== l2 && (h2 = l2, e3 ? (k2 = Kb(c2, f2), null != k2 && g2.unshift(tf(c2, k2, h2))) : e3 || (k2 = Kb(c2, f2), null != k2 && g2.push(tf(c2, k2, h2))));
    c2 = c2.return;
  }
  0 !== g2.length && a2.push({ event: b2, listeners: g2 });
}
var xf = /\r\n?/g, yf = /\u0000|\uFFFD/g;
function zf(a2) {
  return ("string" === typeof a2 ? a2 : "" + a2).replace(xf, "\n").replace(yf, "");
}
function Af(a2, b2, c2) {
  b2 = zf(b2);
  if (zf(a2) !== b2 && c2)
    throw Error(p$1(425));
}
function Bf() {
}
var Cf = null, Df = null;
function Ef(a2, b2) {
  return "textarea" === a2 || "noscript" === a2 || "string" === typeof b2.children || "number" === typeof b2.children || "object" === typeof b2.dangerouslySetInnerHTML && null !== b2.dangerouslySetInnerHTML && null != b2.dangerouslySetInnerHTML.__html;
}
var Ff = "function" === typeof setTimeout ? setTimeout : void 0, Gf = "function" === typeof clearTimeout ? clearTimeout : void 0, Hf = "function" === typeof Promise ? Promise : void 0, Jf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof Hf ? function(a2) {
  return Hf.resolve(null).then(a2).catch(If);
} : Ff;
function If(a2) {
  setTimeout(function() {
    throw a2;
  });
}
function Kf(a2, b2) {
  var c2 = b2, d2 = 0;
  do {
    var e3 = c2.nextSibling;
    a2.removeChild(c2);
    if (e3 && 8 === e3.nodeType)
      if (c2 = e3.data, "/$" === c2) {
        if (0 === d2) {
          a2.removeChild(e3);
          bd(b2);
          return;
        }
        d2--;
      } else
        "$" !== c2 && "$?" !== c2 && "$!" !== c2 || d2++;
    c2 = e3;
  } while (c2);
  bd(b2);
}
function Lf(a2) {
  for (; null != a2; a2 = a2.nextSibling) {
    var b2 = a2.nodeType;
    if (1 === b2 || 3 === b2)
      break;
    if (8 === b2) {
      b2 = a2.data;
      if ("$" === b2 || "$!" === b2 || "$?" === b2)
        break;
      if ("/$" === b2)
        return null;
    }
  }
  return a2;
}
function Mf(a2) {
  a2 = a2.previousSibling;
  for (var b2 = 0; a2; ) {
    if (8 === a2.nodeType) {
      var c2 = a2.data;
      if ("$" === c2 || "$!" === c2 || "$?" === c2) {
        if (0 === b2)
          return a2;
        b2--;
      } else
        "/$" === c2 && b2++;
    }
    a2 = a2.previousSibling;
  }
  return null;
}
var Nf = Math.random().toString(36).slice(2), Of = "__reactFiber$" + Nf, Pf = "__reactProps$" + Nf, uf = "__reactContainer$" + Nf, of = "__reactEvents$" + Nf, Qf = "__reactListeners$" + Nf, Rf = "__reactHandles$" + Nf;
function Wc(a2) {
  var b2 = a2[Of];
  if (b2)
    return b2;
  for (var c2 = a2.parentNode; c2; ) {
    if (b2 = c2[uf] || c2[Of]) {
      c2 = b2.alternate;
      if (null !== b2.child || null !== c2 && null !== c2.child)
        for (a2 = Mf(a2); null !== a2; ) {
          if (c2 = a2[Of])
            return c2;
          a2 = Mf(a2);
        }
      return b2;
    }
    a2 = c2;
    c2 = a2.parentNode;
  }
  return null;
}
function Cb(a2) {
  a2 = a2[Of] || a2[uf];
  return !a2 || 5 !== a2.tag && 6 !== a2.tag && 13 !== a2.tag && 3 !== a2.tag ? null : a2;
}
function ue(a2) {
  if (5 === a2.tag || 6 === a2.tag)
    return a2.stateNode;
  throw Error(p$1(33));
}
function Db(a2) {
  return a2[Pf] || null;
}
var Sf = [], Tf = -1;
function Uf(a2) {
  return { current: a2 };
}
function E(a2) {
  0 > Tf || (a2.current = Sf[Tf], Sf[Tf] = null, Tf--);
}
function G(a2, b2) {
  Tf++;
  Sf[Tf] = a2.current;
  a2.current = b2;
}
var Vf = {}, H = Uf(Vf), Wf = Uf(false), Xf = Vf;
function Yf(a2, b2) {
  var c2 = a2.type.contextTypes;
  if (!c2)
    return Vf;
  var d2 = a2.stateNode;
  if (d2 && d2.__reactInternalMemoizedUnmaskedChildContext === b2)
    return d2.__reactInternalMemoizedMaskedChildContext;
  var e3 = {}, f2;
  for (f2 in c2)
    e3[f2] = b2[f2];
  d2 && (a2 = a2.stateNode, a2.__reactInternalMemoizedUnmaskedChildContext = b2, a2.__reactInternalMemoizedMaskedChildContext = e3);
  return e3;
}
function Zf(a2) {
  a2 = a2.childContextTypes;
  return null !== a2 && void 0 !== a2;
}
function $f() {
  E(Wf);
  E(H);
}
function ag(a2, b2, c2) {
  if (H.current !== Vf)
    throw Error(p$1(168));
  G(H, b2);
  G(Wf, c2);
}
function bg(a2, b2, c2) {
  var d2 = a2.stateNode;
  b2 = b2.childContextTypes;
  if ("function" !== typeof d2.getChildContext)
    return c2;
  d2 = d2.getChildContext();
  for (var e3 in d2)
    if (!(e3 in b2))
      throw Error(p$1(108, Ra(a2) || "Unknown", e3));
  return A$1({}, c2, d2);
}
function cg(a2) {
  a2 = (a2 = a2.stateNode) && a2.__reactInternalMemoizedMergedChildContext || Vf;
  Xf = H.current;
  G(H, a2);
  G(Wf, Wf.current);
  return true;
}
function dg(a2, b2, c2) {
  var d2 = a2.stateNode;
  if (!d2)
    throw Error(p$1(169));
  c2 ? (a2 = bg(a2, b2, Xf), d2.__reactInternalMemoizedMergedChildContext = a2, E(Wf), E(H), G(H, a2)) : E(Wf);
  G(Wf, c2);
}
var eg = null, fg = false, gg = false;
function hg(a2) {
  null === eg ? eg = [a2] : eg.push(a2);
}
function ig(a2) {
  fg = true;
  hg(a2);
}
function jg() {
  if (!gg && null !== eg) {
    gg = true;
    var a2 = 0, b2 = C;
    try {
      var c2 = eg;
      for (C = 1; a2 < c2.length; a2++) {
        var d2 = c2[a2];
        do
          d2 = d2(true);
        while (null !== d2);
      }
      eg = null;
      fg = false;
    } catch (e3) {
      throw null !== eg && (eg = eg.slice(a2 + 1)), ac(fc, jg), e3;
    } finally {
      C = b2, gg = false;
    }
  }
  return null;
}
var kg = [], lg = 0, mg = null, ng = 0, og = [], pg = 0, qg = null, rg = 1, sg = "";
function tg(a2, b2) {
  kg[lg++] = ng;
  kg[lg++] = mg;
  mg = a2;
  ng = b2;
}
function ug(a2, b2, c2) {
  og[pg++] = rg;
  og[pg++] = sg;
  og[pg++] = qg;
  qg = a2;
  var d2 = rg;
  a2 = sg;
  var e3 = 32 - oc(d2) - 1;
  d2 &= ~(1 << e3);
  c2 += 1;
  var f2 = 32 - oc(b2) + e3;
  if (30 < f2) {
    var g2 = e3 - e3 % 5;
    f2 = (d2 & (1 << g2) - 1).toString(32);
    d2 >>= g2;
    e3 -= g2;
    rg = 1 << 32 - oc(b2) + e3 | c2 << e3 | d2;
    sg = f2 + a2;
  } else
    rg = 1 << f2 | c2 << e3 | d2, sg = a2;
}
function vg(a2) {
  null !== a2.return && (tg(a2, 1), ug(a2, 1, 0));
}
function wg(a2) {
  for (; a2 === mg; )
    mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;
  for (; a2 === qg; )
    qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], og[pg] = null;
}
var xg = null, yg = null, I = false, zg = null;
function Ag(a2, b2) {
  var c2 = Bg(5, null, null, 0);
  c2.elementType = "DELETED";
  c2.stateNode = b2;
  c2.return = a2;
  b2 = a2.deletions;
  null === b2 ? (a2.deletions = [c2], a2.flags |= 16) : b2.push(c2);
}
function Cg(a2, b2) {
  switch (a2.tag) {
    case 5:
      var c2 = a2.type;
      b2 = 1 !== b2.nodeType || c2.toLowerCase() !== b2.nodeName.toLowerCase() ? null : b2;
      return null !== b2 ? (a2.stateNode = b2, xg = a2, yg = Lf(b2.firstChild), true) : false;
    case 6:
      return b2 = "" === a2.pendingProps || 3 !== b2.nodeType ? null : b2, null !== b2 ? (a2.stateNode = b2, xg = a2, yg = null, true) : false;
    case 13:
      return b2 = 8 !== b2.nodeType ? null : b2, null !== b2 ? (c2 = null !== qg ? { id: rg, overflow: sg } : null, a2.memoizedState = { dehydrated: b2, treeContext: c2, retryLane: 1073741824 }, c2 = Bg(18, null, null, 0), c2.stateNode = b2, c2.return = a2, a2.child = c2, xg = a2, yg = null, true) : false;
    default:
      return false;
  }
}
function Dg(a2) {
  return 0 !== (a2.mode & 1) && 0 === (a2.flags & 128);
}
function Eg(a2) {
  if (I) {
    var b2 = yg;
    if (b2) {
      var c2 = b2;
      if (!Cg(a2, b2)) {
        if (Dg(a2))
          throw Error(p$1(418));
        b2 = Lf(c2.nextSibling);
        var d2 = xg;
        b2 && Cg(a2, b2) ? Ag(d2, c2) : (a2.flags = a2.flags & -4097 | 2, I = false, xg = a2);
      }
    } else {
      if (Dg(a2))
        throw Error(p$1(418));
      a2.flags = a2.flags & -4097 | 2;
      I = false;
      xg = a2;
    }
  }
}
function Fg(a2) {
  for (a2 = a2.return; null !== a2 && 5 !== a2.tag && 3 !== a2.tag && 13 !== a2.tag; )
    a2 = a2.return;
  xg = a2;
}
function Gg(a2) {
  if (a2 !== xg)
    return false;
  if (!I)
    return Fg(a2), I = true, false;
  var b2;
  (b2 = 3 !== a2.tag) && !(b2 = 5 !== a2.tag) && (b2 = a2.type, b2 = "head" !== b2 && "body" !== b2 && !Ef(a2.type, a2.memoizedProps));
  if (b2 && (b2 = yg)) {
    if (Dg(a2))
      throw Hg(), Error(p$1(418));
    for (; b2; )
      Ag(a2, b2), b2 = Lf(b2.nextSibling);
  }
  Fg(a2);
  if (13 === a2.tag) {
    a2 = a2.memoizedState;
    a2 = null !== a2 ? a2.dehydrated : null;
    if (!a2)
      throw Error(p$1(317));
    a: {
      a2 = a2.nextSibling;
      for (b2 = 0; a2; ) {
        if (8 === a2.nodeType) {
          var c2 = a2.data;
          if ("/$" === c2) {
            if (0 === b2) {
              yg = Lf(a2.nextSibling);
              break a;
            }
            b2--;
          } else
            "$" !== c2 && "$!" !== c2 && "$?" !== c2 || b2++;
        }
        a2 = a2.nextSibling;
      }
      yg = null;
    }
  } else
    yg = xg ? Lf(a2.stateNode.nextSibling) : null;
  return true;
}
function Hg() {
  for (var a2 = yg; a2; )
    a2 = Lf(a2.nextSibling);
}
function Ig() {
  yg = xg = null;
  I = false;
}
function Jg(a2) {
  null === zg ? zg = [a2] : zg.push(a2);
}
var Kg = ua.ReactCurrentBatchConfig;
function Lg(a2, b2) {
  if (a2 && a2.defaultProps) {
    b2 = A$1({}, b2);
    a2 = a2.defaultProps;
    for (var c2 in a2)
      void 0 === b2[c2] && (b2[c2] = a2[c2]);
    return b2;
  }
  return b2;
}
var Mg = Uf(null), Ng = null, Og = null, Pg = null;
function Qg() {
  Pg = Og = Ng = null;
}
function Rg(a2) {
  var b2 = Mg.current;
  E(Mg);
  a2._currentValue = b2;
}
function Sg(a2, b2, c2) {
  for (; null !== a2; ) {
    var d2 = a2.alternate;
    (a2.childLanes & b2) !== b2 ? (a2.childLanes |= b2, null !== d2 && (d2.childLanes |= b2)) : null !== d2 && (d2.childLanes & b2) !== b2 && (d2.childLanes |= b2);
    if (a2 === c2)
      break;
    a2 = a2.return;
  }
}
function Tg(a2, b2) {
  Ng = a2;
  Pg = Og = null;
  a2 = a2.dependencies;
  null !== a2 && null !== a2.firstContext && (0 !== (a2.lanes & b2) && (Ug = true), a2.firstContext = null);
}
function Vg(a2) {
  var b2 = a2._currentValue;
  if (Pg !== a2)
    if (a2 = { context: a2, memoizedValue: b2, next: null }, null === Og) {
      if (null === Ng)
        throw Error(p$1(308));
      Og = a2;
      Ng.dependencies = { lanes: 0, firstContext: a2 };
    } else
      Og = Og.next = a2;
  return b2;
}
var Wg = null;
function Xg(a2) {
  null === Wg ? Wg = [a2] : Wg.push(a2);
}
function Yg(a2, b2, c2, d2) {
  var e3 = b2.interleaved;
  null === e3 ? (c2.next = c2, Xg(b2)) : (c2.next = e3.next, e3.next = c2);
  b2.interleaved = c2;
  return Zg(a2, d2);
}
function Zg(a2, b2) {
  a2.lanes |= b2;
  var c2 = a2.alternate;
  null !== c2 && (c2.lanes |= b2);
  c2 = a2;
  for (a2 = a2.return; null !== a2; )
    a2.childLanes |= b2, c2 = a2.alternate, null !== c2 && (c2.childLanes |= b2), c2 = a2, a2 = a2.return;
  return 3 === c2.tag ? c2.stateNode : null;
}
var $g = false;
function ah(a2) {
  a2.updateQueue = { baseState: a2.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
}
function bh(a2, b2) {
  a2 = a2.updateQueue;
  b2.updateQueue === a2 && (b2.updateQueue = { baseState: a2.baseState, firstBaseUpdate: a2.firstBaseUpdate, lastBaseUpdate: a2.lastBaseUpdate, shared: a2.shared, effects: a2.effects });
}
function ch(a2, b2) {
  return { eventTime: a2, lane: b2, tag: 0, payload: null, callback: null, next: null };
}
function dh(a2, b2, c2) {
  var d2 = a2.updateQueue;
  if (null === d2)
    return null;
  d2 = d2.shared;
  if (0 !== (K & 2)) {
    var e3 = d2.pending;
    null === e3 ? b2.next = b2 : (b2.next = e3.next, e3.next = b2);
    d2.pending = b2;
    return Zg(a2, c2);
  }
  e3 = d2.interleaved;
  null === e3 ? (b2.next = b2, Xg(d2)) : (b2.next = e3.next, e3.next = b2);
  d2.interleaved = b2;
  return Zg(a2, c2);
}
function eh(a2, b2, c2) {
  b2 = b2.updateQueue;
  if (null !== b2 && (b2 = b2.shared, 0 !== (c2 & 4194240))) {
    var d2 = b2.lanes;
    d2 &= a2.pendingLanes;
    c2 |= d2;
    b2.lanes = c2;
    Cc(a2, c2);
  }
}
function fh(a2, b2) {
  var c2 = a2.updateQueue, d2 = a2.alternate;
  if (null !== d2 && (d2 = d2.updateQueue, c2 === d2)) {
    var e3 = null, f2 = null;
    c2 = c2.firstBaseUpdate;
    if (null !== c2) {
      do {
        var g2 = { eventTime: c2.eventTime, lane: c2.lane, tag: c2.tag, payload: c2.payload, callback: c2.callback, next: null };
        null === f2 ? e3 = f2 = g2 : f2 = f2.next = g2;
        c2 = c2.next;
      } while (null !== c2);
      null === f2 ? e3 = f2 = b2 : f2 = f2.next = b2;
    } else
      e3 = f2 = b2;
    c2 = { baseState: d2.baseState, firstBaseUpdate: e3, lastBaseUpdate: f2, shared: d2.shared, effects: d2.effects };
    a2.updateQueue = c2;
    return;
  }
  a2 = c2.lastBaseUpdate;
  null === a2 ? c2.firstBaseUpdate = b2 : a2.next = b2;
  c2.lastBaseUpdate = b2;
}
function gh(a2, b2, c2, d2) {
  var e3 = a2.updateQueue;
  $g = false;
  var f2 = e3.firstBaseUpdate, g2 = e3.lastBaseUpdate, h2 = e3.shared.pending;
  if (null !== h2) {
    e3.shared.pending = null;
    var k2 = h2, l2 = k2.next;
    k2.next = null;
    null === g2 ? f2 = l2 : g2.next = l2;
    g2 = k2;
    var m2 = a2.alternate;
    null !== m2 && (m2 = m2.updateQueue, h2 = m2.lastBaseUpdate, h2 !== g2 && (null === h2 ? m2.firstBaseUpdate = l2 : h2.next = l2, m2.lastBaseUpdate = k2));
  }
  if (null !== f2) {
    var q2 = e3.baseState;
    g2 = 0;
    m2 = l2 = k2 = null;
    h2 = f2;
    do {
      var r2 = h2.lane, y2 = h2.eventTime;
      if ((d2 & r2) === r2) {
        null !== m2 && (m2 = m2.next = {
          eventTime: y2,
          lane: 0,
          tag: h2.tag,
          payload: h2.payload,
          callback: h2.callback,
          next: null
        });
        a: {
          var n2 = a2, t2 = h2;
          r2 = b2;
          y2 = c2;
          switch (t2.tag) {
            case 1:
              n2 = t2.payload;
              if ("function" === typeof n2) {
                q2 = n2.call(y2, q2, r2);
                break a;
              }
              q2 = n2;
              break a;
            case 3:
              n2.flags = n2.flags & -65537 | 128;
            case 0:
              n2 = t2.payload;
              r2 = "function" === typeof n2 ? n2.call(y2, q2, r2) : n2;
              if (null === r2 || void 0 === r2)
                break a;
              q2 = A$1({}, q2, r2);
              break a;
            case 2:
              $g = true;
          }
        }
        null !== h2.callback && 0 !== h2.lane && (a2.flags |= 64, r2 = e3.effects, null === r2 ? e3.effects = [h2] : r2.push(h2));
      } else
        y2 = { eventTime: y2, lane: r2, tag: h2.tag, payload: h2.payload, callback: h2.callback, next: null }, null === m2 ? (l2 = m2 = y2, k2 = q2) : m2 = m2.next = y2, g2 |= r2;
      h2 = h2.next;
      if (null === h2)
        if (h2 = e3.shared.pending, null === h2)
          break;
        else
          r2 = h2, h2 = r2.next, r2.next = null, e3.lastBaseUpdate = r2, e3.shared.pending = null;
    } while (1);
    null === m2 && (k2 = q2);
    e3.baseState = k2;
    e3.firstBaseUpdate = l2;
    e3.lastBaseUpdate = m2;
    b2 = e3.shared.interleaved;
    if (null !== b2) {
      e3 = b2;
      do
        g2 |= e3.lane, e3 = e3.next;
      while (e3 !== b2);
    } else
      null === f2 && (e3.shared.lanes = 0);
    hh |= g2;
    a2.lanes = g2;
    a2.memoizedState = q2;
  }
}
function ih(a2, b2, c2) {
  a2 = b2.effects;
  b2.effects = null;
  if (null !== a2)
    for (b2 = 0; b2 < a2.length; b2++) {
      var d2 = a2[b2], e3 = d2.callback;
      if (null !== e3) {
        d2.callback = null;
        d2 = c2;
        if ("function" !== typeof e3)
          throw Error(p$1(191, e3));
        e3.call(d2);
      }
    }
}
var jh = new aa.Component().refs;
function kh(a2, b2, c2, d2) {
  b2 = a2.memoizedState;
  c2 = c2(d2, b2);
  c2 = null === c2 || void 0 === c2 ? b2 : A$1({}, b2, c2);
  a2.memoizedState = c2;
  0 === a2.lanes && (a2.updateQueue.baseState = c2);
}
var nh = { isMounted: function(a2) {
  return (a2 = a2._reactInternals) ? Vb(a2) === a2 : false;
}, enqueueSetState: function(a2, b2, c2) {
  a2 = a2._reactInternals;
  var d2 = L(), e3 = lh(a2), f2 = ch(d2, e3);
  f2.payload = b2;
  void 0 !== c2 && null !== c2 && (f2.callback = c2);
  b2 = dh(a2, f2, e3);
  null !== b2 && (mh(b2, a2, e3, d2), eh(b2, a2, e3));
}, enqueueReplaceState: function(a2, b2, c2) {
  a2 = a2._reactInternals;
  var d2 = L(), e3 = lh(a2), f2 = ch(d2, e3);
  f2.tag = 1;
  f2.payload = b2;
  void 0 !== c2 && null !== c2 && (f2.callback = c2);
  b2 = dh(a2, f2, e3);
  null !== b2 && (mh(b2, a2, e3, d2), eh(b2, a2, e3));
}, enqueueForceUpdate: function(a2, b2) {
  a2 = a2._reactInternals;
  var c2 = L(), d2 = lh(a2), e3 = ch(c2, d2);
  e3.tag = 2;
  void 0 !== b2 && null !== b2 && (e3.callback = b2);
  b2 = dh(a2, e3, d2);
  null !== b2 && (mh(b2, a2, d2, c2), eh(b2, a2, d2));
} };
function oh(a2, b2, c2, d2, e3, f2, g2) {
  a2 = a2.stateNode;
  return "function" === typeof a2.shouldComponentUpdate ? a2.shouldComponentUpdate(d2, f2, g2) : b2.prototype && b2.prototype.isPureReactComponent ? !Ie(c2, d2) || !Ie(e3, f2) : true;
}
function ph(a2, b2, c2) {
  var d2 = false, e3 = Vf;
  var f2 = b2.contextType;
  "object" === typeof f2 && null !== f2 ? f2 = Vg(f2) : (e3 = Zf(b2) ? Xf : H.current, d2 = b2.contextTypes, f2 = (d2 = null !== d2 && void 0 !== d2) ? Yf(a2, e3) : Vf);
  b2 = new b2(c2, f2);
  a2.memoizedState = null !== b2.state && void 0 !== b2.state ? b2.state : null;
  b2.updater = nh;
  a2.stateNode = b2;
  b2._reactInternals = a2;
  d2 && (a2 = a2.stateNode, a2.__reactInternalMemoizedUnmaskedChildContext = e3, a2.__reactInternalMemoizedMaskedChildContext = f2);
  return b2;
}
function qh(a2, b2, c2, d2) {
  a2 = b2.state;
  "function" === typeof b2.componentWillReceiveProps && b2.componentWillReceiveProps(c2, d2);
  "function" === typeof b2.UNSAFE_componentWillReceiveProps && b2.UNSAFE_componentWillReceiveProps(c2, d2);
  b2.state !== a2 && nh.enqueueReplaceState(b2, b2.state, null);
}
function rh(a2, b2, c2, d2) {
  var e3 = a2.stateNode;
  e3.props = c2;
  e3.state = a2.memoizedState;
  e3.refs = jh;
  ah(a2);
  var f2 = b2.contextType;
  "object" === typeof f2 && null !== f2 ? e3.context = Vg(f2) : (f2 = Zf(b2) ? Xf : H.current, e3.context = Yf(a2, f2));
  e3.state = a2.memoizedState;
  f2 = b2.getDerivedStateFromProps;
  "function" === typeof f2 && (kh(a2, b2, f2, c2), e3.state = a2.memoizedState);
  "function" === typeof b2.getDerivedStateFromProps || "function" === typeof e3.getSnapshotBeforeUpdate || "function" !== typeof e3.UNSAFE_componentWillMount && "function" !== typeof e3.componentWillMount || (b2 = e3.state, "function" === typeof e3.componentWillMount && e3.componentWillMount(), "function" === typeof e3.UNSAFE_componentWillMount && e3.UNSAFE_componentWillMount(), b2 !== e3.state && nh.enqueueReplaceState(e3, e3.state, null), gh(a2, c2, e3, d2), e3.state = a2.memoizedState);
  "function" === typeof e3.componentDidMount && (a2.flags |= 4194308);
}
function sh(a2, b2, c2) {
  a2 = c2.ref;
  if (null !== a2 && "function" !== typeof a2 && "object" !== typeof a2) {
    if (c2._owner) {
      c2 = c2._owner;
      if (c2) {
        if (1 !== c2.tag)
          throw Error(p$1(309));
        var d2 = c2.stateNode;
      }
      if (!d2)
        throw Error(p$1(147, a2));
      var e3 = d2, f2 = "" + a2;
      if (null !== b2 && null !== b2.ref && "function" === typeof b2.ref && b2.ref._stringRef === f2)
        return b2.ref;
      b2 = function(a3) {
        var b3 = e3.refs;
        b3 === jh && (b3 = e3.refs = {});
        null === a3 ? delete b3[f2] : b3[f2] = a3;
      };
      b2._stringRef = f2;
      return b2;
    }
    if ("string" !== typeof a2)
      throw Error(p$1(284));
    if (!c2._owner)
      throw Error(p$1(290, a2));
  }
  return a2;
}
function th(a2, b2) {
  a2 = Object.prototype.toString.call(b2);
  throw Error(p$1(31, "[object Object]" === a2 ? "object with keys {" + Object.keys(b2).join(", ") + "}" : a2));
}
function uh(a2) {
  var b2 = a2._init;
  return b2(a2._payload);
}
function vh(a2) {
  function b2(b3, c3) {
    if (a2) {
      var d3 = b3.deletions;
      null === d3 ? (b3.deletions = [c3], b3.flags |= 16) : d3.push(c3);
    }
  }
  function c2(c3, d3) {
    if (!a2)
      return null;
    for (; null !== d3; )
      b2(c3, d3), d3 = d3.sibling;
    return null;
  }
  function d2(a3, b3) {
    for (a3 = /* @__PURE__ */ new Map(); null !== b3; )
      null !== b3.key ? a3.set(b3.key, b3) : a3.set(b3.index, b3), b3 = b3.sibling;
    return a3;
  }
  function e3(a3, b3) {
    a3 = wh(a3, b3);
    a3.index = 0;
    a3.sibling = null;
    return a3;
  }
  function f2(b3, c3, d3) {
    b3.index = d3;
    if (!a2)
      return b3.flags |= 1048576, c3;
    d3 = b3.alternate;
    if (null !== d3)
      return d3 = d3.index, d3 < c3 ? (b3.flags |= 2, c3) : d3;
    b3.flags |= 2;
    return c3;
  }
  function g2(b3) {
    a2 && null === b3.alternate && (b3.flags |= 2);
    return b3;
  }
  function h2(a3, b3, c3, d3) {
    if (null === b3 || 6 !== b3.tag)
      return b3 = xh(c3, a3.mode, d3), b3.return = a3, b3;
    b3 = e3(b3, c3);
    b3.return = a3;
    return b3;
  }
  function k2(a3, b3, c3, d3) {
    var f3 = c3.type;
    if (f3 === ya)
      return m2(a3, b3, c3.props.children, d3, c3.key);
    if (null !== b3 && (b3.elementType === f3 || "object" === typeof f3 && null !== f3 && f3.$$typeof === Ha && uh(f3) === b3.type))
      return d3 = e3(b3, c3.props), d3.ref = sh(a3, b3, c3), d3.return = a3, d3;
    d3 = yh(c3.type, c3.key, c3.props, null, a3.mode, d3);
    d3.ref = sh(a3, b3, c3);
    d3.return = a3;
    return d3;
  }
  function l2(a3, b3, c3, d3) {
    if (null === b3 || 4 !== b3.tag || b3.stateNode.containerInfo !== c3.containerInfo || b3.stateNode.implementation !== c3.implementation)
      return b3 = zh(c3, a3.mode, d3), b3.return = a3, b3;
    b3 = e3(b3, c3.children || []);
    b3.return = a3;
    return b3;
  }
  function m2(a3, b3, c3, d3, f3) {
    if (null === b3 || 7 !== b3.tag)
      return b3 = Ah(c3, a3.mode, d3, f3), b3.return = a3, b3;
    b3 = e3(b3, c3);
    b3.return = a3;
    return b3;
  }
  function q2(a3, b3, c3) {
    if ("string" === typeof b3 && "" !== b3 || "number" === typeof b3)
      return b3 = xh("" + b3, a3.mode, c3), b3.return = a3, b3;
    if ("object" === typeof b3 && null !== b3) {
      switch (b3.$$typeof) {
        case va:
          return c3 = yh(b3.type, b3.key, b3.props, null, a3.mode, c3), c3.ref = sh(a3, null, b3), c3.return = a3, c3;
        case wa:
          return b3 = zh(b3, a3.mode, c3), b3.return = a3, b3;
        case Ha:
          var d3 = b3._init;
          return q2(a3, d3(b3._payload), c3);
      }
      if (eb(b3) || Ka(b3))
        return b3 = Ah(b3, a3.mode, c3, null), b3.return = a3, b3;
      th(a3, b3);
    }
    return null;
  }
  function r2(a3, b3, c3, d3) {
    var e4 = null !== b3 ? b3.key : null;
    if ("string" === typeof c3 && "" !== c3 || "number" === typeof c3)
      return null !== e4 ? null : h2(a3, b3, "" + c3, d3);
    if ("object" === typeof c3 && null !== c3) {
      switch (c3.$$typeof) {
        case va:
          return c3.key === e4 ? k2(a3, b3, c3, d3) : null;
        case wa:
          return c3.key === e4 ? l2(a3, b3, c3, d3) : null;
        case Ha:
          return e4 = c3._init, r2(
            a3,
            b3,
            e4(c3._payload),
            d3
          );
      }
      if (eb(c3) || Ka(c3))
        return null !== e4 ? null : m2(a3, b3, c3, d3, null);
      th(a3, c3);
    }
    return null;
  }
  function y2(a3, b3, c3, d3, e4) {
    if ("string" === typeof d3 && "" !== d3 || "number" === typeof d3)
      return a3 = a3.get(c3) || null, h2(b3, a3, "" + d3, e4);
    if ("object" === typeof d3 && null !== d3) {
      switch (d3.$$typeof) {
        case va:
          return a3 = a3.get(null === d3.key ? c3 : d3.key) || null, k2(b3, a3, d3, e4);
        case wa:
          return a3 = a3.get(null === d3.key ? c3 : d3.key) || null, l2(b3, a3, d3, e4);
        case Ha:
          var f3 = d3._init;
          return y2(a3, b3, c3, f3(d3._payload), e4);
      }
      if (eb(d3) || Ka(d3))
        return a3 = a3.get(c3) || null, m2(b3, a3, d3, e4, null);
      th(b3, d3);
    }
    return null;
  }
  function n2(e4, g3, h3, k3) {
    for (var l3 = null, m3 = null, u2 = g3, w2 = g3 = 0, x2 = null; null !== u2 && w2 < h3.length; w2++) {
      u2.index > w2 ? (x2 = u2, u2 = null) : x2 = u2.sibling;
      var n3 = r2(e4, u2, h3[w2], k3);
      if (null === n3) {
        null === u2 && (u2 = x2);
        break;
      }
      a2 && u2 && null === n3.alternate && b2(e4, u2);
      g3 = f2(n3, g3, w2);
      null === m3 ? l3 = n3 : m3.sibling = n3;
      m3 = n3;
      u2 = x2;
    }
    if (w2 === h3.length)
      return c2(e4, u2), I && tg(e4, w2), l3;
    if (null === u2) {
      for (; w2 < h3.length; w2++)
        u2 = q2(e4, h3[w2], k3), null !== u2 && (g3 = f2(u2, g3, w2), null === m3 ? l3 = u2 : m3.sibling = u2, m3 = u2);
      I && tg(e4, w2);
      return l3;
    }
    for (u2 = d2(e4, u2); w2 < h3.length; w2++)
      x2 = y2(u2, e4, w2, h3[w2], k3), null !== x2 && (a2 && null !== x2.alternate && u2.delete(null === x2.key ? w2 : x2.key), g3 = f2(x2, g3, w2), null === m3 ? l3 = x2 : m3.sibling = x2, m3 = x2);
    a2 && u2.forEach(function(a3) {
      return b2(e4, a3);
    });
    I && tg(e4, w2);
    return l3;
  }
  function t2(e4, g3, h3, k3) {
    var l3 = Ka(h3);
    if ("function" !== typeof l3)
      throw Error(p$1(150));
    h3 = l3.call(h3);
    if (null == h3)
      throw Error(p$1(151));
    for (var u2 = l3 = null, m3 = g3, w2 = g3 = 0, x2 = null, n3 = h3.next(); null !== m3 && !n3.done; w2++, n3 = h3.next()) {
      m3.index > w2 ? (x2 = m3, m3 = null) : x2 = m3.sibling;
      var t3 = r2(e4, m3, n3.value, k3);
      if (null === t3) {
        null === m3 && (m3 = x2);
        break;
      }
      a2 && m3 && null === t3.alternate && b2(e4, m3);
      g3 = f2(t3, g3, w2);
      null === u2 ? l3 = t3 : u2.sibling = t3;
      u2 = t3;
      m3 = x2;
    }
    if (n3.done)
      return c2(
        e4,
        m3
      ), I && tg(e4, w2), l3;
    if (null === m3) {
      for (; !n3.done; w2++, n3 = h3.next())
        n3 = q2(e4, n3.value, k3), null !== n3 && (g3 = f2(n3, g3, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
      I && tg(e4, w2);
      return l3;
    }
    for (m3 = d2(e4, m3); !n3.done; w2++, n3 = h3.next())
      n3 = y2(m3, e4, w2, n3.value, k3), null !== n3 && (a2 && null !== n3.alternate && m3.delete(null === n3.key ? w2 : n3.key), g3 = f2(n3, g3, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
    a2 && m3.forEach(function(a3) {
      return b2(e4, a3);
    });
    I && tg(e4, w2);
    return l3;
  }
  function J2(a3, d3, f3, h3) {
    "object" === typeof f3 && null !== f3 && f3.type === ya && null === f3.key && (f3 = f3.props.children);
    if ("object" === typeof f3 && null !== f3) {
      switch (f3.$$typeof) {
        case va:
          a: {
            for (var k3 = f3.key, l3 = d3; null !== l3; ) {
              if (l3.key === k3) {
                k3 = f3.type;
                if (k3 === ya) {
                  if (7 === l3.tag) {
                    c2(a3, l3.sibling);
                    d3 = e3(l3, f3.props.children);
                    d3.return = a3;
                    a3 = d3;
                    break a;
                  }
                } else if (l3.elementType === k3 || "object" === typeof k3 && null !== k3 && k3.$$typeof === Ha && uh(k3) === l3.type) {
                  c2(a3, l3.sibling);
                  d3 = e3(l3, f3.props);
                  d3.ref = sh(a3, l3, f3);
                  d3.return = a3;
                  a3 = d3;
                  break a;
                }
                c2(a3, l3);
                break;
              } else
                b2(a3, l3);
              l3 = l3.sibling;
            }
            f3.type === ya ? (d3 = Ah(f3.props.children, a3.mode, h3, f3.key), d3.return = a3, a3 = d3) : (h3 = yh(f3.type, f3.key, f3.props, null, a3.mode, h3), h3.ref = sh(a3, d3, f3), h3.return = a3, a3 = h3);
          }
          return g2(a3);
        case wa:
          a: {
            for (l3 = f3.key; null !== d3; ) {
              if (d3.key === l3)
                if (4 === d3.tag && d3.stateNode.containerInfo === f3.containerInfo && d3.stateNode.implementation === f3.implementation) {
                  c2(a3, d3.sibling);
                  d3 = e3(d3, f3.children || []);
                  d3.return = a3;
                  a3 = d3;
                  break a;
                } else {
                  c2(a3, d3);
                  break;
                }
              else
                b2(a3, d3);
              d3 = d3.sibling;
            }
            d3 = zh(f3, a3.mode, h3);
            d3.return = a3;
            a3 = d3;
          }
          return g2(a3);
        case Ha:
          return l3 = f3._init, J2(a3, d3, l3(f3._payload), h3);
      }
      if (eb(f3))
        return n2(a3, d3, f3, h3);
      if (Ka(f3))
        return t2(a3, d3, f3, h3);
      th(a3, f3);
    }
    return "string" === typeof f3 && "" !== f3 || "number" === typeof f3 ? (f3 = "" + f3, null !== d3 && 6 === d3.tag ? (c2(a3, d3.sibling), d3 = e3(d3, f3), d3.return = a3, a3 = d3) : (c2(a3, d3), d3 = xh(f3, a3.mode, h3), d3.return = a3, a3 = d3), g2(a3)) : c2(a3, d3);
  }
  return J2;
}
var Bh = vh(true), Ch = vh(false), Dh = {}, Eh = Uf(Dh), Fh = Uf(Dh), Gh = Uf(Dh);
function Hh(a2) {
  if (a2 === Dh)
    throw Error(p$1(174));
  return a2;
}
function Ih(a2, b2) {
  G(Gh, b2);
  G(Fh, a2);
  G(Eh, Dh);
  a2 = b2.nodeType;
  switch (a2) {
    case 9:
    case 11:
      b2 = (b2 = b2.documentElement) ? b2.namespaceURI : lb(null, "");
      break;
    default:
      a2 = 8 === a2 ? b2.parentNode : b2, b2 = a2.namespaceURI || null, a2 = a2.tagName, b2 = lb(b2, a2);
  }
  E(Eh);
  G(Eh, b2);
}
function Jh() {
  E(Eh);
  E(Fh);
  E(Gh);
}
function Kh(a2) {
  Hh(Gh.current);
  var b2 = Hh(Eh.current);
  var c2 = lb(b2, a2.type);
  b2 !== c2 && (G(Fh, a2), G(Eh, c2));
}
function Lh(a2) {
  Fh.current === a2 && (E(Eh), E(Fh));
}
var M$1 = Uf(0);
function Mh(a2) {
  for (var b2 = a2; null !== b2; ) {
    if (13 === b2.tag) {
      var c2 = b2.memoizedState;
      if (null !== c2 && (c2 = c2.dehydrated, null === c2 || "$?" === c2.data || "$!" === c2.data))
        return b2;
    } else if (19 === b2.tag && void 0 !== b2.memoizedProps.revealOrder) {
      if (0 !== (b2.flags & 128))
        return b2;
    } else if (null !== b2.child) {
      b2.child.return = b2;
      b2 = b2.child;
      continue;
    }
    if (b2 === a2)
      break;
    for (; null === b2.sibling; ) {
      if (null === b2.return || b2.return === a2)
        return null;
      b2 = b2.return;
    }
    b2.sibling.return = b2.return;
    b2 = b2.sibling;
  }
  return null;
}
var Nh = [];
function Oh() {
  for (var a2 = 0; a2 < Nh.length; a2++)
    Nh[a2]._workInProgressVersionPrimary = null;
  Nh.length = 0;
}
var Ph = ua.ReactCurrentDispatcher, Qh = ua.ReactCurrentBatchConfig, Rh = 0, N = null, O = null, P$1 = null, Sh = false, Th = false, Uh = 0, Vh = 0;
function Q() {
  throw Error(p$1(321));
}
function Wh(a2, b2) {
  if (null === b2)
    return false;
  for (var c2 = 0; c2 < b2.length && c2 < a2.length; c2++)
    if (!He(a2[c2], b2[c2]))
      return false;
  return true;
}
function Xh(a2, b2, c2, d2, e3, f2) {
  Rh = f2;
  N = b2;
  b2.memoizedState = null;
  b2.updateQueue = null;
  b2.lanes = 0;
  Ph.current = null === a2 || null === a2.memoizedState ? Yh : Zh;
  a2 = c2(d2, e3);
  if (Th) {
    f2 = 0;
    do {
      Th = false;
      Uh = 0;
      if (25 <= f2)
        throw Error(p$1(301));
      f2 += 1;
      P$1 = O = null;
      b2.updateQueue = null;
      Ph.current = $h;
      a2 = c2(d2, e3);
    } while (Th);
  }
  Ph.current = ai;
  b2 = null !== O && null !== O.next;
  Rh = 0;
  P$1 = O = N = null;
  Sh = false;
  if (b2)
    throw Error(p$1(300));
  return a2;
}
function bi() {
  var a2 = 0 !== Uh;
  Uh = 0;
  return a2;
}
function ci() {
  var a2 = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
  null === P$1 ? N.memoizedState = P$1 = a2 : P$1 = P$1.next = a2;
  return P$1;
}
function di() {
  if (null === O) {
    var a2 = N.alternate;
    a2 = null !== a2 ? a2.memoizedState : null;
  } else
    a2 = O.next;
  var b2 = null === P$1 ? N.memoizedState : P$1.next;
  if (null !== b2)
    P$1 = b2, O = a2;
  else {
    if (null === a2)
      throw Error(p$1(310));
    O = a2;
    a2 = { memoizedState: O.memoizedState, baseState: O.baseState, baseQueue: O.baseQueue, queue: O.queue, next: null };
    null === P$1 ? N.memoizedState = P$1 = a2 : P$1 = P$1.next = a2;
  }
  return P$1;
}
function ei(a2, b2) {
  return "function" === typeof b2 ? b2(a2) : b2;
}
function fi(a2) {
  var b2 = di(), c2 = b2.queue;
  if (null === c2)
    throw Error(p$1(311));
  c2.lastRenderedReducer = a2;
  var d2 = O, e3 = d2.baseQueue, f2 = c2.pending;
  if (null !== f2) {
    if (null !== e3) {
      var g2 = e3.next;
      e3.next = f2.next;
      f2.next = g2;
    }
    d2.baseQueue = e3 = f2;
    c2.pending = null;
  }
  if (null !== e3) {
    f2 = e3.next;
    d2 = d2.baseState;
    var h2 = g2 = null, k2 = null, l2 = f2;
    do {
      var m2 = l2.lane;
      if ((Rh & m2) === m2)
        null !== k2 && (k2 = k2.next = { lane: 0, action: l2.action, hasEagerState: l2.hasEagerState, eagerState: l2.eagerState, next: null }), d2 = l2.hasEagerState ? l2.eagerState : a2(d2, l2.action);
      else {
        var q2 = {
          lane: m2,
          action: l2.action,
          hasEagerState: l2.hasEagerState,
          eagerState: l2.eagerState,
          next: null
        };
        null === k2 ? (h2 = k2 = q2, g2 = d2) : k2 = k2.next = q2;
        N.lanes |= m2;
        hh |= m2;
      }
      l2 = l2.next;
    } while (null !== l2 && l2 !== f2);
    null === k2 ? g2 = d2 : k2.next = h2;
    He(d2, b2.memoizedState) || (Ug = true);
    b2.memoizedState = d2;
    b2.baseState = g2;
    b2.baseQueue = k2;
    c2.lastRenderedState = d2;
  }
  a2 = c2.interleaved;
  if (null !== a2) {
    e3 = a2;
    do
      f2 = e3.lane, N.lanes |= f2, hh |= f2, e3 = e3.next;
    while (e3 !== a2);
  } else
    null === e3 && (c2.lanes = 0);
  return [b2.memoizedState, c2.dispatch];
}
function gi(a2) {
  var b2 = di(), c2 = b2.queue;
  if (null === c2)
    throw Error(p$1(311));
  c2.lastRenderedReducer = a2;
  var d2 = c2.dispatch, e3 = c2.pending, f2 = b2.memoizedState;
  if (null !== e3) {
    c2.pending = null;
    var g2 = e3 = e3.next;
    do
      f2 = a2(f2, g2.action), g2 = g2.next;
    while (g2 !== e3);
    He(f2, b2.memoizedState) || (Ug = true);
    b2.memoizedState = f2;
    null === b2.baseQueue && (b2.baseState = f2);
    c2.lastRenderedState = f2;
  }
  return [f2, d2];
}
function hi() {
}
function ii(a2, b2) {
  var c2 = N, d2 = di(), e3 = b2(), f2 = !He(d2.memoizedState, e3);
  f2 && (d2.memoizedState = e3, Ug = true);
  d2 = d2.queue;
  ji(ki.bind(null, c2, d2, a2), [a2]);
  if (d2.getSnapshot !== b2 || f2 || null !== P$1 && P$1.memoizedState.tag & 1) {
    c2.flags |= 2048;
    li(9, mi.bind(null, c2, d2, e3, b2), void 0, null);
    if (null === R)
      throw Error(p$1(349));
    0 !== (Rh & 30) || ni(c2, b2, e3);
  }
  return e3;
}
function ni(a2, b2, c2) {
  a2.flags |= 16384;
  a2 = { getSnapshot: b2, value: c2 };
  b2 = N.updateQueue;
  null === b2 ? (b2 = { lastEffect: null, stores: null }, N.updateQueue = b2, b2.stores = [a2]) : (c2 = b2.stores, null === c2 ? b2.stores = [a2] : c2.push(a2));
}
function mi(a2, b2, c2, d2) {
  b2.value = c2;
  b2.getSnapshot = d2;
  oi(b2) && pi$3(a2);
}
function ki(a2, b2, c2) {
  return c2(function() {
    oi(b2) && pi$3(a2);
  });
}
function oi(a2) {
  var b2 = a2.getSnapshot;
  a2 = a2.value;
  try {
    var c2 = b2();
    return !He(a2, c2);
  } catch (d2) {
    return true;
  }
}
function pi$3(a2) {
  var b2 = Zg(a2, 1);
  null !== b2 && mh(b2, a2, 1, -1);
}
function qi(a2) {
  var b2 = ci();
  "function" === typeof a2 && (a2 = a2());
  b2.memoizedState = b2.baseState = a2;
  a2 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: ei, lastRenderedState: a2 };
  b2.queue = a2;
  a2 = a2.dispatch = ri.bind(null, N, a2);
  return [b2.memoizedState, a2];
}
function li(a2, b2, c2, d2) {
  a2 = { tag: a2, create: b2, destroy: c2, deps: d2, next: null };
  b2 = N.updateQueue;
  null === b2 ? (b2 = { lastEffect: null, stores: null }, N.updateQueue = b2, b2.lastEffect = a2.next = a2) : (c2 = b2.lastEffect, null === c2 ? b2.lastEffect = a2.next = a2 : (d2 = c2.next, c2.next = a2, a2.next = d2, b2.lastEffect = a2));
  return a2;
}
function si() {
  return di().memoizedState;
}
function ti(a2, b2, c2, d2) {
  var e3 = ci();
  N.flags |= a2;
  e3.memoizedState = li(1 | b2, c2, void 0, void 0 === d2 ? null : d2);
}
function ui(a2, b2, c2, d2) {
  var e3 = di();
  d2 = void 0 === d2 ? null : d2;
  var f2 = void 0;
  if (null !== O) {
    var g2 = O.memoizedState;
    f2 = g2.destroy;
    if (null !== d2 && Wh(d2, g2.deps)) {
      e3.memoizedState = li(b2, c2, f2, d2);
      return;
    }
  }
  N.flags |= a2;
  e3.memoizedState = li(1 | b2, c2, f2, d2);
}
function vi(a2, b2) {
  return ti(8390656, 8, a2, b2);
}
function ji(a2, b2) {
  return ui(2048, 8, a2, b2);
}
function wi(a2, b2) {
  return ui(4, 2, a2, b2);
}
function xi(a2, b2) {
  return ui(4, 4, a2, b2);
}
function yi(a2, b2) {
  if ("function" === typeof b2)
    return a2 = a2(), b2(a2), function() {
      b2(null);
    };
  if (null !== b2 && void 0 !== b2)
    return a2 = a2(), b2.current = a2, function() {
      b2.current = null;
    };
}
function zi(a2, b2, c2) {
  c2 = null !== c2 && void 0 !== c2 ? c2.concat([a2]) : null;
  return ui(4, 4, yi.bind(null, b2, a2), c2);
}
function Ai() {
}
function Bi(a2, b2) {
  var c2 = di();
  b2 = void 0 === b2 ? null : b2;
  var d2 = c2.memoizedState;
  if (null !== d2 && null !== b2 && Wh(b2, d2[1]))
    return d2[0];
  c2.memoizedState = [a2, b2];
  return a2;
}
function Ci(a2, b2) {
  var c2 = di();
  b2 = void 0 === b2 ? null : b2;
  var d2 = c2.memoizedState;
  if (null !== d2 && null !== b2 && Wh(b2, d2[1]))
    return d2[0];
  a2 = a2();
  c2.memoizedState = [a2, b2];
  return a2;
}
function Di(a2, b2, c2) {
  if (0 === (Rh & 21))
    return a2.baseState && (a2.baseState = false, Ug = true), a2.memoizedState = c2;
  He(c2, b2) || (c2 = yc(), N.lanes |= c2, hh |= c2, a2.baseState = true);
  return b2;
}
function Ei(a2, b2) {
  var c2 = C;
  C = 0 !== c2 && 4 > c2 ? c2 : 4;
  a2(true);
  var d2 = Qh.transition;
  Qh.transition = {};
  try {
    a2(false), b2();
  } finally {
    C = c2, Qh.transition = d2;
  }
}
function Fi() {
  return di().memoizedState;
}
function Gi(a2, b2, c2) {
  var d2 = lh(a2);
  c2 = { lane: d2, action: c2, hasEagerState: false, eagerState: null, next: null };
  if (Hi(a2))
    Ii(b2, c2);
  else if (c2 = Yg(a2, b2, c2, d2), null !== c2) {
    var e3 = L();
    mh(c2, a2, d2, e3);
    Ji(c2, b2, d2);
  }
}
function ri(a2, b2, c2) {
  var d2 = lh(a2), e3 = { lane: d2, action: c2, hasEagerState: false, eagerState: null, next: null };
  if (Hi(a2))
    Ii(b2, e3);
  else {
    var f2 = a2.alternate;
    if (0 === a2.lanes && (null === f2 || 0 === f2.lanes) && (f2 = b2.lastRenderedReducer, null !== f2))
      try {
        var g2 = b2.lastRenderedState, h2 = f2(g2, c2);
        e3.hasEagerState = true;
        e3.eagerState = h2;
        if (He(h2, g2)) {
          var k2 = b2.interleaved;
          null === k2 ? (e3.next = e3, Xg(b2)) : (e3.next = k2.next, k2.next = e3);
          b2.interleaved = e3;
          return;
        }
      } catch (l2) {
      } finally {
      }
    c2 = Yg(a2, b2, e3, d2);
    null !== c2 && (e3 = L(), mh(c2, a2, d2, e3), Ji(c2, b2, d2));
  }
}
function Hi(a2) {
  var b2 = a2.alternate;
  return a2 === N || null !== b2 && b2 === N;
}
function Ii(a2, b2) {
  Th = Sh = true;
  var c2 = a2.pending;
  null === c2 ? b2.next = b2 : (b2.next = c2.next, c2.next = b2);
  a2.pending = b2;
}
function Ji(a2, b2, c2) {
  if (0 !== (c2 & 4194240)) {
    var d2 = b2.lanes;
    d2 &= a2.pendingLanes;
    c2 |= d2;
    b2.lanes = c2;
    Cc(a2, c2);
  }
}
var ai = { readContext: Vg, useCallback: Q, useContext: Q, useEffect: Q, useImperativeHandle: Q, useInsertionEffect: Q, useLayoutEffect: Q, useMemo: Q, useReducer: Q, useRef: Q, useState: Q, useDebugValue: Q, useDeferredValue: Q, useTransition: Q, useMutableSource: Q, useSyncExternalStore: Q, useId: Q, unstable_isNewReconciler: false }, Yh = { readContext: Vg, useCallback: function(a2, b2) {
  ci().memoizedState = [a2, void 0 === b2 ? null : b2];
  return a2;
}, useContext: Vg, useEffect: vi, useImperativeHandle: function(a2, b2, c2) {
  c2 = null !== c2 && void 0 !== c2 ? c2.concat([a2]) : null;
  return ti(
    4194308,
    4,
    yi.bind(null, b2, a2),
    c2
  );
}, useLayoutEffect: function(a2, b2) {
  return ti(4194308, 4, a2, b2);
}, useInsertionEffect: function(a2, b2) {
  return ti(4, 2, a2, b2);
}, useMemo: function(a2, b2) {
  var c2 = ci();
  b2 = void 0 === b2 ? null : b2;
  a2 = a2();
  c2.memoizedState = [a2, b2];
  return a2;
}, useReducer: function(a2, b2, c2) {
  var d2 = ci();
  b2 = void 0 !== c2 ? c2(b2) : b2;
  d2.memoizedState = d2.baseState = b2;
  a2 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a2, lastRenderedState: b2 };
  d2.queue = a2;
  a2 = a2.dispatch = Gi.bind(null, N, a2);
  return [d2.memoizedState, a2];
}, useRef: function(a2) {
  var b2 = ci();
  a2 = { current: a2 };
  return b2.memoizedState = a2;
}, useState: qi, useDebugValue: Ai, useDeferredValue: function(a2) {
  return ci().memoizedState = a2;
}, useTransition: function() {
  var a2 = qi(false), b2 = a2[0];
  a2 = Ei.bind(null, a2[1]);
  ci().memoizedState = a2;
  return [b2, a2];
}, useMutableSource: function() {
}, useSyncExternalStore: function(a2, b2, c2) {
  var d2 = N, e3 = ci();
  if (I) {
    if (void 0 === c2)
      throw Error(p$1(407));
    c2 = c2();
  } else {
    c2 = b2();
    if (null === R)
      throw Error(p$1(349));
    0 !== (Rh & 30) || ni(d2, b2, c2);
  }
  e3.memoizedState = c2;
  var f2 = { value: c2, getSnapshot: b2 };
  e3.queue = f2;
  vi(ki.bind(
    null,
    d2,
    f2,
    a2
  ), [a2]);
  d2.flags |= 2048;
  li(9, mi.bind(null, d2, f2, c2, b2), void 0, null);
  return c2;
}, useId: function() {
  var a2 = ci(), b2 = R.identifierPrefix;
  if (I) {
    var c2 = sg;
    var d2 = rg;
    c2 = (d2 & ~(1 << 32 - oc(d2) - 1)).toString(32) + c2;
    b2 = ":" + b2 + "R" + c2;
    c2 = Uh++;
    0 < c2 && (b2 += "H" + c2.toString(32));
    b2 += ":";
  } else
    c2 = Vh++, b2 = ":" + b2 + "r" + c2.toString(32) + ":";
  return a2.memoizedState = b2;
}, unstable_isNewReconciler: false }, Zh = {
  readContext: Vg,
  useCallback: Bi,
  useContext: Vg,
  useEffect: ji,
  useImperativeHandle: zi,
  useInsertionEffect: wi,
  useLayoutEffect: xi,
  useMemo: Ci,
  useReducer: fi,
  useRef: si,
  useState: function() {
    return fi(ei);
  },
  useDebugValue: Ai,
  useDeferredValue: function(a2) {
    var b2 = di();
    return Di(b2, O.memoizedState, a2);
  },
  useTransition: function() {
    var a2 = fi(ei)[0], b2 = di().memoizedState;
    return [a2, b2];
  },
  useMutableSource: hi,
  useSyncExternalStore: ii,
  useId: Fi,
  unstable_isNewReconciler: false
}, $h = { readContext: Vg, useCallback: Bi, useContext: Vg, useEffect: ji, useImperativeHandle: zi, useInsertionEffect: wi, useLayoutEffect: xi, useMemo: Ci, useReducer: gi, useRef: si, useState: function() {
  return gi(ei);
}, useDebugValue: Ai, useDeferredValue: function(a2) {
  var b2 = di();
  return null === O ? b2.memoizedState = a2 : Di(b2, O.memoizedState, a2);
}, useTransition: function() {
  var a2 = gi(ei)[0], b2 = di().memoizedState;
  return [a2, b2];
}, useMutableSource: hi, useSyncExternalStore: ii, useId: Fi, unstable_isNewReconciler: false };
function Ki(a2, b2) {
  try {
    var c2 = "", d2 = b2;
    do
      c2 += Pa(d2), d2 = d2.return;
    while (d2);
    var e3 = c2;
  } catch (f2) {
    e3 = "\nError generating stack: " + f2.message + "\n" + f2.stack;
  }
  return { value: a2, source: b2, stack: e3, digest: null };
}
function Li(a2, b2, c2) {
  return { value: a2, source: null, stack: null != c2 ? c2 : null, digest: null != b2 ? b2 : null };
}
function Mi(a2, b2) {
  try {
    console.error(b2.value);
  } catch (c2) {
    setTimeout(function() {
      throw c2;
    });
  }
}
var Ni = "function" === typeof WeakMap ? WeakMap : Map;
function Oi(a2, b2, c2) {
  c2 = ch(-1, c2);
  c2.tag = 3;
  c2.payload = { element: null };
  var d2 = b2.value;
  c2.callback = function() {
    Pi || (Pi = true, Qi = d2);
    Mi(a2, b2);
  };
  return c2;
}
function Ri(a2, b2, c2) {
  c2 = ch(-1, c2);
  c2.tag = 3;
  var d2 = a2.type.getDerivedStateFromError;
  if ("function" === typeof d2) {
    var e3 = b2.value;
    c2.payload = function() {
      return d2(e3);
    };
    c2.callback = function() {
      Mi(a2, b2);
    };
  }
  var f2 = a2.stateNode;
  null !== f2 && "function" === typeof f2.componentDidCatch && (c2.callback = function() {
    Mi(a2, b2);
    "function" !== typeof d2 && (null === Si ? Si = /* @__PURE__ */ new Set([this]) : Si.add(this));
    var c3 = b2.stack;
    this.componentDidCatch(b2.value, { componentStack: null !== c3 ? c3 : "" });
  });
  return c2;
}
function Ti(a2, b2, c2) {
  var d2 = a2.pingCache;
  if (null === d2) {
    d2 = a2.pingCache = new Ni();
    var e3 = /* @__PURE__ */ new Set();
    d2.set(b2, e3);
  } else
    e3 = d2.get(b2), void 0 === e3 && (e3 = /* @__PURE__ */ new Set(), d2.set(b2, e3));
  e3.has(c2) || (e3.add(c2), a2 = Ui.bind(null, a2, b2, c2), b2.then(a2, a2));
}
function Vi(a2) {
  do {
    var b2;
    if (b2 = 13 === a2.tag)
      b2 = a2.memoizedState, b2 = null !== b2 ? null !== b2.dehydrated ? true : false : true;
    if (b2)
      return a2;
    a2 = a2.return;
  } while (null !== a2);
  return null;
}
function Wi(a2, b2, c2, d2, e3) {
  if (0 === (a2.mode & 1))
    return a2 === b2 ? a2.flags |= 65536 : (a2.flags |= 128, c2.flags |= 131072, c2.flags &= -52805, 1 === c2.tag && (null === c2.alternate ? c2.tag = 17 : (b2 = ch(-1, 1), b2.tag = 2, dh(c2, b2, 1))), c2.lanes |= 1), a2;
  a2.flags |= 65536;
  a2.lanes = e3;
  return a2;
}
var Xi = ua.ReactCurrentOwner, Ug = false;
function Yi(a2, b2, c2, d2) {
  b2.child = null === a2 ? Ch(b2, null, c2, d2) : Bh(b2, a2.child, c2, d2);
}
function Zi(a2, b2, c2, d2, e3) {
  c2 = c2.render;
  var f2 = b2.ref;
  Tg(b2, e3);
  d2 = Xh(a2, b2, c2, d2, f2, e3);
  c2 = bi();
  if (null !== a2 && !Ug)
    return b2.updateQueue = a2.updateQueue, b2.flags &= -2053, a2.lanes &= ~e3, $i(a2, b2, e3);
  I && c2 && vg(b2);
  b2.flags |= 1;
  Yi(a2, b2, d2, e3);
  return b2.child;
}
function aj(a2, b2, c2, d2, e3) {
  if (null === a2) {
    var f2 = c2.type;
    if ("function" === typeof f2 && !bj(f2) && void 0 === f2.defaultProps && null === c2.compare && void 0 === c2.defaultProps)
      return b2.tag = 15, b2.type = f2, cj(a2, b2, f2, d2, e3);
    a2 = yh(c2.type, null, d2, b2, b2.mode, e3);
    a2.ref = b2.ref;
    a2.return = b2;
    return b2.child = a2;
  }
  f2 = a2.child;
  if (0 === (a2.lanes & e3)) {
    var g2 = f2.memoizedProps;
    c2 = c2.compare;
    c2 = null !== c2 ? c2 : Ie;
    if (c2(g2, d2) && a2.ref === b2.ref)
      return $i(a2, b2, e3);
  }
  b2.flags |= 1;
  a2 = wh(f2, d2);
  a2.ref = b2.ref;
  a2.return = b2;
  return b2.child = a2;
}
function cj(a2, b2, c2, d2, e3) {
  if (null !== a2) {
    var f2 = a2.memoizedProps;
    if (Ie(f2, d2) && a2.ref === b2.ref)
      if (Ug = false, b2.pendingProps = d2 = f2, 0 !== (a2.lanes & e3))
        0 !== (a2.flags & 131072) && (Ug = true);
      else
        return b2.lanes = a2.lanes, $i(a2, b2, e3);
  }
  return dj(a2, b2, c2, d2, e3);
}
function ej(a2, b2, c2) {
  var d2 = b2.pendingProps, e3 = d2.children, f2 = null !== a2 ? a2.memoizedState : null;
  if ("hidden" === d2.mode)
    if (0 === (b2.mode & 1))
      b2.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, G(fj, gj), gj |= c2;
    else {
      if (0 === (c2 & 1073741824))
        return a2 = null !== f2 ? f2.baseLanes | c2 : c2, b2.lanes = b2.childLanes = 1073741824, b2.memoizedState = { baseLanes: a2, cachePool: null, transitions: null }, b2.updateQueue = null, G(fj, gj), gj |= a2, null;
      b2.memoizedState = { baseLanes: 0, cachePool: null, transitions: null };
      d2 = null !== f2 ? f2.baseLanes : c2;
      G(fj, gj);
      gj |= d2;
    }
  else
    null !== f2 ? (d2 = f2.baseLanes | c2, b2.memoizedState = null) : d2 = c2, G(fj, gj), gj |= d2;
  Yi(a2, b2, e3, c2);
  return b2.child;
}
function hj(a2, b2) {
  var c2 = b2.ref;
  if (null === a2 && null !== c2 || null !== a2 && a2.ref !== c2)
    b2.flags |= 512, b2.flags |= 2097152;
}
function dj(a2, b2, c2, d2, e3) {
  var f2 = Zf(c2) ? Xf : H.current;
  f2 = Yf(b2, f2);
  Tg(b2, e3);
  c2 = Xh(a2, b2, c2, d2, f2, e3);
  d2 = bi();
  if (null !== a2 && !Ug)
    return b2.updateQueue = a2.updateQueue, b2.flags &= -2053, a2.lanes &= ~e3, $i(a2, b2, e3);
  I && d2 && vg(b2);
  b2.flags |= 1;
  Yi(a2, b2, c2, e3);
  return b2.child;
}
function ij(a2, b2, c2, d2, e3) {
  if (Zf(c2)) {
    var f2 = true;
    cg(b2);
  } else
    f2 = false;
  Tg(b2, e3);
  if (null === b2.stateNode)
    jj(a2, b2), ph(b2, c2, d2), rh(b2, c2, d2, e3), d2 = true;
  else if (null === a2) {
    var g2 = b2.stateNode, h2 = b2.memoizedProps;
    g2.props = h2;
    var k2 = g2.context, l2 = c2.contextType;
    "object" === typeof l2 && null !== l2 ? l2 = Vg(l2) : (l2 = Zf(c2) ? Xf : H.current, l2 = Yf(b2, l2));
    var m2 = c2.getDerivedStateFromProps, q2 = "function" === typeof m2 || "function" === typeof g2.getSnapshotBeforeUpdate;
    q2 || "function" !== typeof g2.UNSAFE_componentWillReceiveProps && "function" !== typeof g2.componentWillReceiveProps || (h2 !== d2 || k2 !== l2) && qh(b2, g2, d2, l2);
    $g = false;
    var r2 = b2.memoizedState;
    g2.state = r2;
    gh(b2, d2, g2, e3);
    k2 = b2.memoizedState;
    h2 !== d2 || r2 !== k2 || Wf.current || $g ? ("function" === typeof m2 && (kh(b2, c2, m2, d2), k2 = b2.memoizedState), (h2 = $g || oh(b2, c2, h2, d2, r2, k2, l2)) ? (q2 || "function" !== typeof g2.UNSAFE_componentWillMount && "function" !== typeof g2.componentWillMount || ("function" === typeof g2.componentWillMount && g2.componentWillMount(), "function" === typeof g2.UNSAFE_componentWillMount && g2.UNSAFE_componentWillMount()), "function" === typeof g2.componentDidMount && (b2.flags |= 4194308)) : ("function" === typeof g2.componentDidMount && (b2.flags |= 4194308), b2.memoizedProps = d2, b2.memoizedState = k2), g2.props = d2, g2.state = k2, g2.context = l2, d2 = h2) : ("function" === typeof g2.componentDidMount && (b2.flags |= 4194308), d2 = false);
  } else {
    g2 = b2.stateNode;
    bh(a2, b2);
    h2 = b2.memoizedProps;
    l2 = b2.type === b2.elementType ? h2 : Lg(b2.type, h2);
    g2.props = l2;
    q2 = b2.pendingProps;
    r2 = g2.context;
    k2 = c2.contextType;
    "object" === typeof k2 && null !== k2 ? k2 = Vg(k2) : (k2 = Zf(c2) ? Xf : H.current, k2 = Yf(b2, k2));
    var y2 = c2.getDerivedStateFromProps;
    (m2 = "function" === typeof y2 || "function" === typeof g2.getSnapshotBeforeUpdate) || "function" !== typeof g2.UNSAFE_componentWillReceiveProps && "function" !== typeof g2.componentWillReceiveProps || (h2 !== q2 || r2 !== k2) && qh(b2, g2, d2, k2);
    $g = false;
    r2 = b2.memoizedState;
    g2.state = r2;
    gh(b2, d2, g2, e3);
    var n2 = b2.memoizedState;
    h2 !== q2 || r2 !== n2 || Wf.current || $g ? ("function" === typeof y2 && (kh(b2, c2, y2, d2), n2 = b2.memoizedState), (l2 = $g || oh(b2, c2, l2, d2, r2, n2, k2) || false) ? (m2 || "function" !== typeof g2.UNSAFE_componentWillUpdate && "function" !== typeof g2.componentWillUpdate || ("function" === typeof g2.componentWillUpdate && g2.componentWillUpdate(d2, n2, k2), "function" === typeof g2.UNSAFE_componentWillUpdate && g2.UNSAFE_componentWillUpdate(d2, n2, k2)), "function" === typeof g2.componentDidUpdate && (b2.flags |= 4), "function" === typeof g2.getSnapshotBeforeUpdate && (b2.flags |= 1024)) : ("function" !== typeof g2.componentDidUpdate || h2 === a2.memoizedProps && r2 === a2.memoizedState || (b2.flags |= 4), "function" !== typeof g2.getSnapshotBeforeUpdate || h2 === a2.memoizedProps && r2 === a2.memoizedState || (b2.flags |= 1024), b2.memoizedProps = d2, b2.memoizedState = n2), g2.props = d2, g2.state = n2, g2.context = k2, d2 = l2) : ("function" !== typeof g2.componentDidUpdate || h2 === a2.memoizedProps && r2 === a2.memoizedState || (b2.flags |= 4), "function" !== typeof g2.getSnapshotBeforeUpdate || h2 === a2.memoizedProps && r2 === a2.memoizedState || (b2.flags |= 1024), d2 = false);
  }
  return kj(a2, b2, c2, d2, f2, e3);
}
function kj(a2, b2, c2, d2, e3, f2) {
  hj(a2, b2);
  var g2 = 0 !== (b2.flags & 128);
  if (!d2 && !g2)
    return e3 && dg(b2, c2, false), $i(a2, b2, f2);
  d2 = b2.stateNode;
  Xi.current = b2;
  var h2 = g2 && "function" !== typeof c2.getDerivedStateFromError ? null : d2.render();
  b2.flags |= 1;
  null !== a2 && g2 ? (b2.child = Bh(b2, a2.child, null, f2), b2.child = Bh(b2, null, h2, f2)) : Yi(a2, b2, h2, f2);
  b2.memoizedState = d2.state;
  e3 && dg(b2, c2, true);
  return b2.child;
}
function lj(a2) {
  var b2 = a2.stateNode;
  b2.pendingContext ? ag(a2, b2.pendingContext, b2.pendingContext !== b2.context) : b2.context && ag(a2, b2.context, false);
  Ih(a2, b2.containerInfo);
}
function mj(a2, b2, c2, d2, e3) {
  Ig();
  Jg(e3);
  b2.flags |= 256;
  Yi(a2, b2, c2, d2);
  return b2.child;
}
var nj = { dehydrated: null, treeContext: null, retryLane: 0 };
function oj(a2) {
  return { baseLanes: a2, cachePool: null, transitions: null };
}
function pj(a2, b2, c2) {
  var d2 = b2.pendingProps, e3 = M$1.current, f2 = false, g2 = 0 !== (b2.flags & 128), h2;
  (h2 = g2) || (h2 = null !== a2 && null === a2.memoizedState ? false : 0 !== (e3 & 2));
  if (h2)
    f2 = true, b2.flags &= -129;
  else if (null === a2 || null !== a2.memoizedState)
    e3 |= 1;
  G(M$1, e3 & 1);
  if (null === a2) {
    Eg(b2);
    a2 = b2.memoizedState;
    if (null !== a2 && (a2 = a2.dehydrated, null !== a2))
      return 0 === (b2.mode & 1) ? b2.lanes = 1 : "$!" === a2.data ? b2.lanes = 8 : b2.lanes = 1073741824, null;
    g2 = d2.children;
    a2 = d2.fallback;
    return f2 ? (d2 = b2.mode, f2 = b2.child, g2 = { mode: "hidden", children: g2 }, 0 === (d2 & 1) && null !== f2 ? (f2.childLanes = 0, f2.pendingProps = g2) : f2 = qj(g2, d2, 0, null), a2 = Ah(a2, d2, c2, null), f2.return = b2, a2.return = b2, f2.sibling = a2, b2.child = f2, b2.child.memoizedState = oj(c2), b2.memoizedState = nj, a2) : rj(b2, g2);
  }
  e3 = a2.memoizedState;
  if (null !== e3 && (h2 = e3.dehydrated, null !== h2))
    return sj(a2, b2, g2, d2, h2, e3, c2);
  if (f2) {
    f2 = d2.fallback;
    g2 = b2.mode;
    e3 = a2.child;
    h2 = e3.sibling;
    var k2 = { mode: "hidden", children: d2.children };
    0 === (g2 & 1) && b2.child !== e3 ? (d2 = b2.child, d2.childLanes = 0, d2.pendingProps = k2, b2.deletions = null) : (d2 = wh(e3, k2), d2.subtreeFlags = e3.subtreeFlags & 14680064);
    null !== h2 ? f2 = wh(h2, f2) : (f2 = Ah(f2, g2, c2, null), f2.flags |= 2);
    f2.return = b2;
    d2.return = b2;
    d2.sibling = f2;
    b2.child = d2;
    d2 = f2;
    f2 = b2.child;
    g2 = a2.child.memoizedState;
    g2 = null === g2 ? oj(c2) : { baseLanes: g2.baseLanes | c2, cachePool: null, transitions: g2.transitions };
    f2.memoizedState = g2;
    f2.childLanes = a2.childLanes & ~c2;
    b2.memoizedState = nj;
    return d2;
  }
  f2 = a2.child;
  a2 = f2.sibling;
  d2 = wh(f2, { mode: "visible", children: d2.children });
  0 === (b2.mode & 1) && (d2.lanes = c2);
  d2.return = b2;
  d2.sibling = null;
  null !== a2 && (c2 = b2.deletions, null === c2 ? (b2.deletions = [a2], b2.flags |= 16) : c2.push(a2));
  b2.child = d2;
  b2.memoizedState = null;
  return d2;
}
function rj(a2, b2) {
  b2 = qj({ mode: "visible", children: b2 }, a2.mode, 0, null);
  b2.return = a2;
  return a2.child = b2;
}
function tj(a2, b2, c2, d2) {
  null !== d2 && Jg(d2);
  Bh(b2, a2.child, null, c2);
  a2 = rj(b2, b2.pendingProps.children);
  a2.flags |= 2;
  b2.memoizedState = null;
  return a2;
}
function sj(a2, b2, c2, d2, e3, f2, g2) {
  if (c2) {
    if (b2.flags & 256)
      return b2.flags &= -257, d2 = Li(Error(p$1(422))), tj(a2, b2, g2, d2);
    if (null !== b2.memoizedState)
      return b2.child = a2.child, b2.flags |= 128, null;
    f2 = d2.fallback;
    e3 = b2.mode;
    d2 = qj({ mode: "visible", children: d2.children }, e3, 0, null);
    f2 = Ah(f2, e3, g2, null);
    f2.flags |= 2;
    d2.return = b2;
    f2.return = b2;
    d2.sibling = f2;
    b2.child = d2;
    0 !== (b2.mode & 1) && Bh(b2, a2.child, null, g2);
    b2.child.memoizedState = oj(g2);
    b2.memoizedState = nj;
    return f2;
  }
  if (0 === (b2.mode & 1))
    return tj(a2, b2, g2, null);
  if ("$!" === e3.data) {
    d2 = e3.nextSibling && e3.nextSibling.dataset;
    if (d2)
      var h2 = d2.dgst;
    d2 = h2;
    f2 = Error(p$1(419));
    d2 = Li(f2, d2, void 0);
    return tj(a2, b2, g2, d2);
  }
  h2 = 0 !== (g2 & a2.childLanes);
  if (Ug || h2) {
    d2 = R;
    if (null !== d2) {
      switch (g2 & -g2) {
        case 4:
          e3 = 2;
          break;
        case 16:
          e3 = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          e3 = 32;
          break;
        case 536870912:
          e3 = 268435456;
          break;
        default:
          e3 = 0;
      }
      e3 = 0 !== (e3 & (d2.suspendedLanes | g2)) ? 0 : e3;
      0 !== e3 && e3 !== f2.retryLane && (f2.retryLane = e3, Zg(a2, e3), mh(d2, a2, e3, -1));
    }
    uj();
    d2 = Li(Error(p$1(421)));
    return tj(a2, b2, g2, d2);
  }
  if ("$?" === e3.data)
    return b2.flags |= 128, b2.child = a2.child, b2 = vj.bind(null, a2), e3._reactRetry = b2, null;
  a2 = f2.treeContext;
  yg = Lf(e3.nextSibling);
  xg = b2;
  I = true;
  zg = null;
  null !== a2 && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = a2.id, sg = a2.overflow, qg = b2);
  b2 = rj(b2, d2.children);
  b2.flags |= 4096;
  return b2;
}
function wj(a2, b2, c2) {
  a2.lanes |= b2;
  var d2 = a2.alternate;
  null !== d2 && (d2.lanes |= b2);
  Sg(a2.return, b2, c2);
}
function xj(a2, b2, c2, d2, e3) {
  var f2 = a2.memoizedState;
  null === f2 ? a2.memoizedState = { isBackwards: b2, rendering: null, renderingStartTime: 0, last: d2, tail: c2, tailMode: e3 } : (f2.isBackwards = b2, f2.rendering = null, f2.renderingStartTime = 0, f2.last = d2, f2.tail = c2, f2.tailMode = e3);
}
function yj(a2, b2, c2) {
  var d2 = b2.pendingProps, e3 = d2.revealOrder, f2 = d2.tail;
  Yi(a2, b2, d2.children, c2);
  d2 = M$1.current;
  if (0 !== (d2 & 2))
    d2 = d2 & 1 | 2, b2.flags |= 128;
  else {
    if (null !== a2 && 0 !== (a2.flags & 128))
      a:
        for (a2 = b2.child; null !== a2; ) {
          if (13 === a2.tag)
            null !== a2.memoizedState && wj(a2, c2, b2);
          else if (19 === a2.tag)
            wj(a2, c2, b2);
          else if (null !== a2.child) {
            a2.child.return = a2;
            a2 = a2.child;
            continue;
          }
          if (a2 === b2)
            break a;
          for (; null === a2.sibling; ) {
            if (null === a2.return || a2.return === b2)
              break a;
            a2 = a2.return;
          }
          a2.sibling.return = a2.return;
          a2 = a2.sibling;
        }
    d2 &= 1;
  }
  G(M$1, d2);
  if (0 === (b2.mode & 1))
    b2.memoizedState = null;
  else
    switch (e3) {
      case "forwards":
        c2 = b2.child;
        for (e3 = null; null !== c2; )
          a2 = c2.alternate, null !== a2 && null === Mh(a2) && (e3 = c2), c2 = c2.sibling;
        c2 = e3;
        null === c2 ? (e3 = b2.child, b2.child = null) : (e3 = c2.sibling, c2.sibling = null);
        xj(b2, false, e3, c2, f2);
        break;
      case "backwards":
        c2 = null;
        e3 = b2.child;
        for (b2.child = null; null !== e3; ) {
          a2 = e3.alternate;
          if (null !== a2 && null === Mh(a2)) {
            b2.child = e3;
            break;
          }
          a2 = e3.sibling;
          e3.sibling = c2;
          c2 = e3;
          e3 = a2;
        }
        xj(b2, true, c2, null, f2);
        break;
      case "together":
        xj(b2, false, null, null, void 0);
        break;
      default:
        b2.memoizedState = null;
    }
  return b2.child;
}
function jj(a2, b2) {
  0 === (b2.mode & 1) && null !== a2 && (a2.alternate = null, b2.alternate = null, b2.flags |= 2);
}
function $i(a2, b2, c2) {
  null !== a2 && (b2.dependencies = a2.dependencies);
  hh |= b2.lanes;
  if (0 === (c2 & b2.childLanes))
    return null;
  if (null !== a2 && b2.child !== a2.child)
    throw Error(p$1(153));
  if (null !== b2.child) {
    a2 = b2.child;
    c2 = wh(a2, a2.pendingProps);
    b2.child = c2;
    for (c2.return = b2; null !== a2.sibling; )
      a2 = a2.sibling, c2 = c2.sibling = wh(a2, a2.pendingProps), c2.return = b2;
    c2.sibling = null;
  }
  return b2.child;
}
function zj(a2, b2, c2) {
  switch (b2.tag) {
    case 3:
      lj(b2);
      Ig();
      break;
    case 5:
      Kh(b2);
      break;
    case 1:
      Zf(b2.type) && cg(b2);
      break;
    case 4:
      Ih(b2, b2.stateNode.containerInfo);
      break;
    case 10:
      var d2 = b2.type._context, e3 = b2.memoizedProps.value;
      G(Mg, d2._currentValue);
      d2._currentValue = e3;
      break;
    case 13:
      d2 = b2.memoizedState;
      if (null !== d2) {
        if (null !== d2.dehydrated)
          return G(M$1, M$1.current & 1), b2.flags |= 128, null;
        if (0 !== (c2 & b2.child.childLanes))
          return pj(a2, b2, c2);
        G(M$1, M$1.current & 1);
        a2 = $i(a2, b2, c2);
        return null !== a2 ? a2.sibling : null;
      }
      G(M$1, M$1.current & 1);
      break;
    case 19:
      d2 = 0 !== (c2 & b2.childLanes);
      if (0 !== (a2.flags & 128)) {
        if (d2)
          return yj(a2, b2, c2);
        b2.flags |= 128;
      }
      e3 = b2.memoizedState;
      null !== e3 && (e3.rendering = null, e3.tail = null, e3.lastEffect = null);
      G(M$1, M$1.current);
      if (d2)
        break;
      else
        return null;
    case 22:
    case 23:
      return b2.lanes = 0, ej(a2, b2, c2);
  }
  return $i(a2, b2, c2);
}
var Aj, Bj, Cj, Dj;
Aj = function(a2, b2) {
  for (var c2 = b2.child; null !== c2; ) {
    if (5 === c2.tag || 6 === c2.tag)
      a2.appendChild(c2.stateNode);
    else if (4 !== c2.tag && null !== c2.child) {
      c2.child.return = c2;
      c2 = c2.child;
      continue;
    }
    if (c2 === b2)
      break;
    for (; null === c2.sibling; ) {
      if (null === c2.return || c2.return === b2)
        return;
      c2 = c2.return;
    }
    c2.sibling.return = c2.return;
    c2 = c2.sibling;
  }
};
Bj = function() {
};
Cj = function(a2, b2, c2, d2) {
  var e3 = a2.memoizedProps;
  if (e3 !== d2) {
    a2 = b2.stateNode;
    Hh(Eh.current);
    var f2 = null;
    switch (c2) {
      case "input":
        e3 = Ya(a2, e3);
        d2 = Ya(a2, d2);
        f2 = [];
        break;
      case "select":
        e3 = A$1({}, e3, { value: void 0 });
        d2 = A$1({}, d2, { value: void 0 });
        f2 = [];
        break;
      case "textarea":
        e3 = gb(a2, e3);
        d2 = gb(a2, d2);
        f2 = [];
        break;
      default:
        "function" !== typeof e3.onClick && "function" === typeof d2.onClick && (a2.onclick = Bf);
    }
    ub(c2, d2);
    var g2;
    c2 = null;
    for (l2 in e3)
      if (!d2.hasOwnProperty(l2) && e3.hasOwnProperty(l2) && null != e3[l2])
        if ("style" === l2) {
          var h2 = e3[l2];
          for (g2 in h2)
            h2.hasOwnProperty(g2) && (c2 || (c2 = {}), c2[g2] = "");
        } else
          "dangerouslySetInnerHTML" !== l2 && "children" !== l2 && "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && "autoFocus" !== l2 && (ea.hasOwnProperty(l2) ? f2 || (f2 = []) : (f2 = f2 || []).push(l2, null));
    for (l2 in d2) {
      var k2 = d2[l2];
      h2 = null != e3 ? e3[l2] : void 0;
      if (d2.hasOwnProperty(l2) && k2 !== h2 && (null != k2 || null != h2))
        if ("style" === l2)
          if (h2) {
            for (g2 in h2)
              !h2.hasOwnProperty(g2) || k2 && k2.hasOwnProperty(g2) || (c2 || (c2 = {}), c2[g2] = "");
            for (g2 in k2)
              k2.hasOwnProperty(g2) && h2[g2] !== k2[g2] && (c2 || (c2 = {}), c2[g2] = k2[g2]);
          } else
            c2 || (f2 || (f2 = []), f2.push(
              l2,
              c2
            )), c2 = k2;
        else
          "dangerouslySetInnerHTML" === l2 ? (k2 = k2 ? k2.__html : void 0, h2 = h2 ? h2.__html : void 0, null != k2 && h2 !== k2 && (f2 = f2 || []).push(l2, k2)) : "children" === l2 ? "string" !== typeof k2 && "number" !== typeof k2 || (f2 = f2 || []).push(l2, "" + k2) : "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && (ea.hasOwnProperty(l2) ? (null != k2 && "onScroll" === l2 && D("scroll", a2), f2 || h2 === k2 || (f2 = [])) : (f2 = f2 || []).push(l2, k2));
    }
    c2 && (f2 = f2 || []).push("style", c2);
    var l2 = f2;
    if (b2.updateQueue = l2)
      b2.flags |= 4;
  }
};
Dj = function(a2, b2, c2, d2) {
  c2 !== d2 && (b2.flags |= 4);
};
function Ej(a2, b2) {
  if (!I)
    switch (a2.tailMode) {
      case "hidden":
        b2 = a2.tail;
        for (var c2 = null; null !== b2; )
          null !== b2.alternate && (c2 = b2), b2 = b2.sibling;
        null === c2 ? a2.tail = null : c2.sibling = null;
        break;
      case "collapsed":
        c2 = a2.tail;
        for (var d2 = null; null !== c2; )
          null !== c2.alternate && (d2 = c2), c2 = c2.sibling;
        null === d2 ? b2 || null === a2.tail ? a2.tail = null : a2.tail.sibling = null : d2.sibling = null;
    }
}
function S(a2) {
  var b2 = null !== a2.alternate && a2.alternate.child === a2.child, c2 = 0, d2 = 0;
  if (b2)
    for (var e3 = a2.child; null !== e3; )
      c2 |= e3.lanes | e3.childLanes, d2 |= e3.subtreeFlags & 14680064, d2 |= e3.flags & 14680064, e3.return = a2, e3 = e3.sibling;
  else
    for (e3 = a2.child; null !== e3; )
      c2 |= e3.lanes | e3.childLanes, d2 |= e3.subtreeFlags, d2 |= e3.flags, e3.return = a2, e3 = e3.sibling;
  a2.subtreeFlags |= d2;
  a2.childLanes = c2;
  return b2;
}
function Fj(a2, b2, c2) {
  var d2 = b2.pendingProps;
  wg(b2);
  switch (b2.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return S(b2), null;
    case 1:
      return Zf(b2.type) && $f(), S(b2), null;
    case 3:
      d2 = b2.stateNode;
      Jh();
      E(Wf);
      E(H);
      Oh();
      d2.pendingContext && (d2.context = d2.pendingContext, d2.pendingContext = null);
      if (null === a2 || null === a2.child)
        Gg(b2) ? b2.flags |= 4 : null === a2 || a2.memoizedState.isDehydrated && 0 === (b2.flags & 256) || (b2.flags |= 1024, null !== zg && (Gj(zg), zg = null));
      Bj(a2, b2);
      S(b2);
      return null;
    case 5:
      Lh(b2);
      var e3 = Hh(Gh.current);
      c2 = b2.type;
      if (null !== a2 && null != b2.stateNode)
        Cj(a2, b2, c2, d2, e3), a2.ref !== b2.ref && (b2.flags |= 512, b2.flags |= 2097152);
      else {
        if (!d2) {
          if (null === b2.stateNode)
            throw Error(p$1(166));
          S(b2);
          return null;
        }
        a2 = Hh(Eh.current);
        if (Gg(b2)) {
          d2 = b2.stateNode;
          c2 = b2.type;
          var f2 = b2.memoizedProps;
          d2[Of] = b2;
          d2[Pf] = f2;
          a2 = 0 !== (b2.mode & 1);
          switch (c2) {
            case "dialog":
              D("cancel", d2);
              D("close", d2);
              break;
            case "iframe":
            case "object":
            case "embed":
              D("load", d2);
              break;
            case "video":
            case "audio":
              for (e3 = 0; e3 < lf.length; e3++)
                D(lf[e3], d2);
              break;
            case "source":
              D("error", d2);
              break;
            case "img":
            case "image":
            case "link":
              D(
                "error",
                d2
              );
              D("load", d2);
              break;
            case "details":
              D("toggle", d2);
              break;
            case "input":
              Za(d2, f2);
              D("invalid", d2);
              break;
            case "select":
              d2._wrapperState = { wasMultiple: !!f2.multiple };
              D("invalid", d2);
              break;
            case "textarea":
              hb(d2, f2), D("invalid", d2);
          }
          ub(c2, f2);
          e3 = null;
          for (var g2 in f2)
            if (f2.hasOwnProperty(g2)) {
              var h2 = f2[g2];
              "children" === g2 ? "string" === typeof h2 ? d2.textContent !== h2 && (true !== f2.suppressHydrationWarning && Af(d2.textContent, h2, a2), e3 = ["children", h2]) : "number" === typeof h2 && d2.textContent !== "" + h2 && (true !== f2.suppressHydrationWarning && Af(
                d2.textContent,
                h2,
                a2
              ), e3 = ["children", "" + h2]) : ea.hasOwnProperty(g2) && null != h2 && "onScroll" === g2 && D("scroll", d2);
            }
          switch (c2) {
            case "input":
              Va(d2);
              db(d2, f2, true);
              break;
            case "textarea":
              Va(d2);
              jb(d2);
              break;
            case "select":
            case "option":
              break;
            default:
              "function" === typeof f2.onClick && (d2.onclick = Bf);
          }
          d2 = e3;
          b2.updateQueue = d2;
          null !== d2 && (b2.flags |= 4);
        } else {
          g2 = 9 === e3.nodeType ? e3 : e3.ownerDocument;
          "http://www.w3.org/1999/xhtml" === a2 && (a2 = kb(c2));
          "http://www.w3.org/1999/xhtml" === a2 ? "script" === c2 ? (a2 = g2.createElement("div"), a2.innerHTML = "<script><\/script>", a2 = a2.removeChild(a2.firstChild)) : "string" === typeof d2.is ? a2 = g2.createElement(c2, { is: d2.is }) : (a2 = g2.createElement(c2), "select" === c2 && (g2 = a2, d2.multiple ? g2.multiple = true : d2.size && (g2.size = d2.size))) : a2 = g2.createElementNS(a2, c2);
          a2[Of] = b2;
          a2[Pf] = d2;
          Aj(a2, b2, false, false);
          b2.stateNode = a2;
          a: {
            g2 = vb(c2, d2);
            switch (c2) {
              case "dialog":
                D("cancel", a2);
                D("close", a2);
                e3 = d2;
                break;
              case "iframe":
              case "object":
              case "embed":
                D("load", a2);
                e3 = d2;
                break;
              case "video":
              case "audio":
                for (e3 = 0; e3 < lf.length; e3++)
                  D(lf[e3], a2);
                e3 = d2;
                break;
              case "source":
                D("error", a2);
                e3 = d2;
                break;
              case "img":
              case "image":
              case "link":
                D(
                  "error",
                  a2
                );
                D("load", a2);
                e3 = d2;
                break;
              case "details":
                D("toggle", a2);
                e3 = d2;
                break;
              case "input":
                Za(a2, d2);
                e3 = Ya(a2, d2);
                D("invalid", a2);
                break;
              case "option":
                e3 = d2;
                break;
              case "select":
                a2._wrapperState = { wasMultiple: !!d2.multiple };
                e3 = A$1({}, d2, { value: void 0 });
                D("invalid", a2);
                break;
              case "textarea":
                hb(a2, d2);
                e3 = gb(a2, d2);
                D("invalid", a2);
                break;
              default:
                e3 = d2;
            }
            ub(c2, e3);
            h2 = e3;
            for (f2 in h2)
              if (h2.hasOwnProperty(f2)) {
                var k2 = h2[f2];
                "style" === f2 ? sb(a2, k2) : "dangerouslySetInnerHTML" === f2 ? (k2 = k2 ? k2.__html : void 0, null != k2 && nb(a2, k2)) : "children" === f2 ? "string" === typeof k2 ? ("textarea" !== c2 || "" !== k2) && ob(a2, k2) : "number" === typeof k2 && ob(a2, "" + k2) : "suppressContentEditableWarning" !== f2 && "suppressHydrationWarning" !== f2 && "autoFocus" !== f2 && (ea.hasOwnProperty(f2) ? null != k2 && "onScroll" === f2 && D("scroll", a2) : null != k2 && ta(a2, f2, k2, g2));
              }
            switch (c2) {
              case "input":
                Va(a2);
                db(a2, d2, false);
                break;
              case "textarea":
                Va(a2);
                jb(a2);
                break;
              case "option":
                null != d2.value && a2.setAttribute("value", "" + Sa(d2.value));
                break;
              case "select":
                a2.multiple = !!d2.multiple;
                f2 = d2.value;
                null != f2 ? fb(a2, !!d2.multiple, f2, false) : null != d2.defaultValue && fb(
                  a2,
                  !!d2.multiple,
                  d2.defaultValue,
                  true
                );
                break;
              default:
                "function" === typeof e3.onClick && (a2.onclick = Bf);
            }
            switch (c2) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                d2 = !!d2.autoFocus;
                break a;
              case "img":
                d2 = true;
                break a;
              default:
                d2 = false;
            }
          }
          d2 && (b2.flags |= 4);
        }
        null !== b2.ref && (b2.flags |= 512, b2.flags |= 2097152);
      }
      S(b2);
      return null;
    case 6:
      if (a2 && null != b2.stateNode)
        Dj(a2, b2, a2.memoizedProps, d2);
      else {
        if ("string" !== typeof d2 && null === b2.stateNode)
          throw Error(p$1(166));
        c2 = Hh(Gh.current);
        Hh(Eh.current);
        if (Gg(b2)) {
          d2 = b2.stateNode;
          c2 = b2.memoizedProps;
          d2[Of] = b2;
          if (f2 = d2.nodeValue !== c2) {
            if (a2 = xg, null !== a2)
              switch (a2.tag) {
                case 3:
                  Af(d2.nodeValue, c2, 0 !== (a2.mode & 1));
                  break;
                case 5:
                  true !== a2.memoizedProps.suppressHydrationWarning && Af(d2.nodeValue, c2, 0 !== (a2.mode & 1));
              }
          }
          f2 && (b2.flags |= 4);
        } else
          d2 = (9 === c2.nodeType ? c2 : c2.ownerDocument).createTextNode(d2), d2[Of] = b2, b2.stateNode = d2;
      }
      S(b2);
      return null;
    case 13:
      E(M$1);
      d2 = b2.memoizedState;
      if (null === a2 || null !== a2.memoizedState && null !== a2.memoizedState.dehydrated) {
        if (I && null !== yg && 0 !== (b2.mode & 1) && 0 === (b2.flags & 128))
          Hg(), Ig(), b2.flags |= 98560, f2 = false;
        else if (f2 = Gg(b2), null !== d2 && null !== d2.dehydrated) {
          if (null === a2) {
            if (!f2)
              throw Error(p$1(318));
            f2 = b2.memoizedState;
            f2 = null !== f2 ? f2.dehydrated : null;
            if (!f2)
              throw Error(p$1(317));
            f2[Of] = b2;
          } else
            Ig(), 0 === (b2.flags & 128) && (b2.memoizedState = null), b2.flags |= 4;
          S(b2);
          f2 = false;
        } else
          null !== zg && (Gj(zg), zg = null), f2 = true;
        if (!f2)
          return b2.flags & 65536 ? b2 : null;
      }
      if (0 !== (b2.flags & 128))
        return b2.lanes = c2, b2;
      d2 = null !== d2;
      d2 !== (null !== a2 && null !== a2.memoizedState) && d2 && (b2.child.flags |= 8192, 0 !== (b2.mode & 1) && (null === a2 || 0 !== (M$1.current & 1) ? 0 === T && (T = 3) : uj()));
      null !== b2.updateQueue && (b2.flags |= 4);
      S(b2);
      return null;
    case 4:
      return Jh(), Bj(a2, b2), null === a2 && sf(b2.stateNode.containerInfo), S(b2), null;
    case 10:
      return Rg(b2.type._context), S(b2), null;
    case 17:
      return Zf(b2.type) && $f(), S(b2), null;
    case 19:
      E(M$1);
      f2 = b2.memoizedState;
      if (null === f2)
        return S(b2), null;
      d2 = 0 !== (b2.flags & 128);
      g2 = f2.rendering;
      if (null === g2)
        if (d2)
          Ej(f2, false);
        else {
          if (0 !== T || null !== a2 && 0 !== (a2.flags & 128))
            for (a2 = b2.child; null !== a2; ) {
              g2 = Mh(a2);
              if (null !== g2) {
                b2.flags |= 128;
                Ej(f2, false);
                d2 = g2.updateQueue;
                null !== d2 && (b2.updateQueue = d2, b2.flags |= 4);
                b2.subtreeFlags = 0;
                d2 = c2;
                for (c2 = b2.child; null !== c2; )
                  f2 = c2, a2 = d2, f2.flags &= 14680066, g2 = f2.alternate, null === g2 ? (f2.childLanes = 0, f2.lanes = a2, f2.child = null, f2.subtreeFlags = 0, f2.memoizedProps = null, f2.memoizedState = null, f2.updateQueue = null, f2.dependencies = null, f2.stateNode = null) : (f2.childLanes = g2.childLanes, f2.lanes = g2.lanes, f2.child = g2.child, f2.subtreeFlags = 0, f2.deletions = null, f2.memoizedProps = g2.memoizedProps, f2.memoizedState = g2.memoizedState, f2.updateQueue = g2.updateQueue, f2.type = g2.type, a2 = g2.dependencies, f2.dependencies = null === a2 ? null : { lanes: a2.lanes, firstContext: a2.firstContext }), c2 = c2.sibling;
                G(M$1, M$1.current & 1 | 2);
                return b2.child;
              }
              a2 = a2.sibling;
            }
          null !== f2.tail && B() > Hj && (b2.flags |= 128, d2 = true, Ej(f2, false), b2.lanes = 4194304);
        }
      else {
        if (!d2)
          if (a2 = Mh(g2), null !== a2) {
            if (b2.flags |= 128, d2 = true, c2 = a2.updateQueue, null !== c2 && (b2.updateQueue = c2, b2.flags |= 4), Ej(f2, true), null === f2.tail && "hidden" === f2.tailMode && !g2.alternate && !I)
              return S(b2), null;
          } else
            2 * B() - f2.renderingStartTime > Hj && 1073741824 !== c2 && (b2.flags |= 128, d2 = true, Ej(f2, false), b2.lanes = 4194304);
        f2.isBackwards ? (g2.sibling = b2.child, b2.child = g2) : (c2 = f2.last, null !== c2 ? c2.sibling = g2 : b2.child = g2, f2.last = g2);
      }
      if (null !== f2.tail)
        return b2 = f2.tail, f2.rendering = b2, f2.tail = b2.sibling, f2.renderingStartTime = B(), b2.sibling = null, c2 = M$1.current, G(M$1, d2 ? c2 & 1 | 2 : c2 & 1), b2;
      S(b2);
      return null;
    case 22:
    case 23:
      return Ij(), d2 = null !== b2.memoizedState, null !== a2 && null !== a2.memoizedState !== d2 && (b2.flags |= 8192), d2 && 0 !== (b2.mode & 1) ? 0 !== (gj & 1073741824) && (S(b2), b2.subtreeFlags & 6 && (b2.flags |= 8192)) : S(b2), null;
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(p$1(156, b2.tag));
}
function Jj(a2, b2) {
  wg(b2);
  switch (b2.tag) {
    case 1:
      return Zf(b2.type) && $f(), a2 = b2.flags, a2 & 65536 ? (b2.flags = a2 & -65537 | 128, b2) : null;
    case 3:
      return Jh(), E(Wf), E(H), Oh(), a2 = b2.flags, 0 !== (a2 & 65536) && 0 === (a2 & 128) ? (b2.flags = a2 & -65537 | 128, b2) : null;
    case 5:
      return Lh(b2), null;
    case 13:
      E(M$1);
      a2 = b2.memoizedState;
      if (null !== a2 && null !== a2.dehydrated) {
        if (null === b2.alternate)
          throw Error(p$1(340));
        Ig();
      }
      a2 = b2.flags;
      return a2 & 65536 ? (b2.flags = a2 & -65537 | 128, b2) : null;
    case 19:
      return E(M$1), null;
    case 4:
      return Jh(), null;
    case 10:
      return Rg(b2.type._context), null;
    case 22:
    case 23:
      return Ij(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Kj = false, U = false, Lj = "function" === typeof WeakSet ? WeakSet : Set, V = null;
function Mj(a2, b2) {
  var c2 = a2.ref;
  if (null !== c2)
    if ("function" === typeof c2)
      try {
        c2(null);
      } catch (d2) {
        W(a2, b2, d2);
      }
    else
      c2.current = null;
}
function Nj(a2, b2, c2) {
  try {
    c2();
  } catch (d2) {
    W(a2, b2, d2);
  }
}
var Oj = false;
function Pj(a2, b2) {
  Cf = dd;
  a2 = Me();
  if (Ne(a2)) {
    if ("selectionStart" in a2)
      var c2 = { start: a2.selectionStart, end: a2.selectionEnd };
    else
      a: {
        c2 = (c2 = a2.ownerDocument) && c2.defaultView || window;
        var d2 = c2.getSelection && c2.getSelection();
        if (d2 && 0 !== d2.rangeCount) {
          c2 = d2.anchorNode;
          var e3 = d2.anchorOffset, f2 = d2.focusNode;
          d2 = d2.focusOffset;
          try {
            c2.nodeType, f2.nodeType;
          } catch (F2) {
            c2 = null;
            break a;
          }
          var g2 = 0, h2 = -1, k2 = -1, l2 = 0, m2 = 0, q2 = a2, r2 = null;
          b:
            for (; ; ) {
              for (var y2; ; ) {
                q2 !== c2 || 0 !== e3 && 3 !== q2.nodeType || (h2 = g2 + e3);
                q2 !== f2 || 0 !== d2 && 3 !== q2.nodeType || (k2 = g2 + d2);
                3 === q2.nodeType && (g2 += q2.nodeValue.length);
                if (null === (y2 = q2.firstChild))
                  break;
                r2 = q2;
                q2 = y2;
              }
              for (; ; ) {
                if (q2 === a2)
                  break b;
                r2 === c2 && ++l2 === e3 && (h2 = g2);
                r2 === f2 && ++m2 === d2 && (k2 = g2);
                if (null !== (y2 = q2.nextSibling))
                  break;
                q2 = r2;
                r2 = q2.parentNode;
              }
              q2 = y2;
            }
          c2 = -1 === h2 || -1 === k2 ? null : { start: h2, end: k2 };
        } else
          c2 = null;
      }
    c2 = c2 || { start: 0, end: 0 };
  } else
    c2 = null;
  Df = { focusedElem: a2, selectionRange: c2 };
  dd = false;
  for (V = b2; null !== V; )
    if (b2 = V, a2 = b2.child, 0 !== (b2.subtreeFlags & 1028) && null !== a2)
      a2.return = b2, V = a2;
    else
      for (; null !== V; ) {
        b2 = V;
        try {
          var n2 = b2.alternate;
          if (0 !== (b2.flags & 1024))
            switch (b2.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (null !== n2) {
                  var t2 = n2.memoizedProps, J2 = n2.memoizedState, x2 = b2.stateNode, w2 = x2.getSnapshotBeforeUpdate(b2.elementType === b2.type ? t2 : Lg(b2.type, t2), J2);
                  x2.__reactInternalSnapshotBeforeUpdate = w2;
                }
                break;
              case 3:
                var u2 = b2.stateNode.containerInfo;
                1 === u2.nodeType ? u2.textContent = "" : 9 === u2.nodeType && u2.documentElement && u2.removeChild(u2.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(p$1(163));
            }
        } catch (F2) {
          W(b2, b2.return, F2);
        }
        a2 = b2.sibling;
        if (null !== a2) {
          a2.return = b2.return;
          V = a2;
          break;
        }
        V = b2.return;
      }
  n2 = Oj;
  Oj = false;
  return n2;
}
function Qj(a2, b2, c2) {
  var d2 = b2.updateQueue;
  d2 = null !== d2 ? d2.lastEffect : null;
  if (null !== d2) {
    var e3 = d2 = d2.next;
    do {
      if ((e3.tag & a2) === a2) {
        var f2 = e3.destroy;
        e3.destroy = void 0;
        void 0 !== f2 && Nj(b2, c2, f2);
      }
      e3 = e3.next;
    } while (e3 !== d2);
  }
}
function Rj(a2, b2) {
  b2 = b2.updateQueue;
  b2 = null !== b2 ? b2.lastEffect : null;
  if (null !== b2) {
    var c2 = b2 = b2.next;
    do {
      if ((c2.tag & a2) === a2) {
        var d2 = c2.create;
        c2.destroy = d2();
      }
      c2 = c2.next;
    } while (c2 !== b2);
  }
}
function Sj(a2) {
  var b2 = a2.ref;
  if (null !== b2) {
    var c2 = a2.stateNode;
    switch (a2.tag) {
      case 5:
        a2 = c2;
        break;
      default:
        a2 = c2;
    }
    "function" === typeof b2 ? b2(a2) : b2.current = a2;
  }
}
function Tj(a2) {
  var b2 = a2.alternate;
  null !== b2 && (a2.alternate = null, Tj(b2));
  a2.child = null;
  a2.deletions = null;
  a2.sibling = null;
  5 === a2.tag && (b2 = a2.stateNode, null !== b2 && (delete b2[Of], delete b2[Pf], delete b2[of], delete b2[Qf], delete b2[Rf]));
  a2.stateNode = null;
  a2.return = null;
  a2.dependencies = null;
  a2.memoizedProps = null;
  a2.memoizedState = null;
  a2.pendingProps = null;
  a2.stateNode = null;
  a2.updateQueue = null;
}
function Uj(a2) {
  return 5 === a2.tag || 3 === a2.tag || 4 === a2.tag;
}
function Vj(a2) {
  a:
    for (; ; ) {
      for (; null === a2.sibling; ) {
        if (null === a2.return || Uj(a2.return))
          return null;
        a2 = a2.return;
      }
      a2.sibling.return = a2.return;
      for (a2 = a2.sibling; 5 !== a2.tag && 6 !== a2.tag && 18 !== a2.tag; ) {
        if (a2.flags & 2)
          continue a;
        if (null === a2.child || 4 === a2.tag)
          continue a;
        else
          a2.child.return = a2, a2 = a2.child;
      }
      if (!(a2.flags & 2))
        return a2.stateNode;
    }
}
function Wj(a2, b2, c2) {
  var d2 = a2.tag;
  if (5 === d2 || 6 === d2)
    a2 = a2.stateNode, b2 ? 8 === c2.nodeType ? c2.parentNode.insertBefore(a2, b2) : c2.insertBefore(a2, b2) : (8 === c2.nodeType ? (b2 = c2.parentNode, b2.insertBefore(a2, c2)) : (b2 = c2, b2.appendChild(a2)), c2 = c2._reactRootContainer, null !== c2 && void 0 !== c2 || null !== b2.onclick || (b2.onclick = Bf));
  else if (4 !== d2 && (a2 = a2.child, null !== a2))
    for (Wj(a2, b2, c2), a2 = a2.sibling; null !== a2; )
      Wj(a2, b2, c2), a2 = a2.sibling;
}
function Xj(a2, b2, c2) {
  var d2 = a2.tag;
  if (5 === d2 || 6 === d2)
    a2 = a2.stateNode, b2 ? c2.insertBefore(a2, b2) : c2.appendChild(a2);
  else if (4 !== d2 && (a2 = a2.child, null !== a2))
    for (Xj(a2, b2, c2), a2 = a2.sibling; null !== a2; )
      Xj(a2, b2, c2), a2 = a2.sibling;
}
var X$1 = null, Yj = false;
function Zj(a2, b2, c2) {
  for (c2 = c2.child; null !== c2; )
    ak(a2, b2, c2), c2 = c2.sibling;
}
function ak(a2, b2, c2) {
  if (lc && "function" === typeof lc.onCommitFiberUnmount)
    try {
      lc.onCommitFiberUnmount(kc, c2);
    } catch (h2) {
    }
  switch (c2.tag) {
    case 5:
      U || Mj(c2, b2);
    case 6:
      var d2 = X$1, e3 = Yj;
      X$1 = null;
      Zj(a2, b2, c2);
      X$1 = d2;
      Yj = e3;
      null !== X$1 && (Yj ? (a2 = X$1, c2 = c2.stateNode, 8 === a2.nodeType ? a2.parentNode.removeChild(c2) : a2.removeChild(c2)) : X$1.removeChild(c2.stateNode));
      break;
    case 18:
      null !== X$1 && (Yj ? (a2 = X$1, c2 = c2.stateNode, 8 === a2.nodeType ? Kf(a2.parentNode, c2) : 1 === a2.nodeType && Kf(a2, c2), bd(a2)) : Kf(X$1, c2.stateNode));
      break;
    case 4:
      d2 = X$1;
      e3 = Yj;
      X$1 = c2.stateNode.containerInfo;
      Yj = true;
      Zj(a2, b2, c2);
      X$1 = d2;
      Yj = e3;
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (!U && (d2 = c2.updateQueue, null !== d2 && (d2 = d2.lastEffect, null !== d2))) {
        e3 = d2 = d2.next;
        do {
          var f2 = e3, g2 = f2.destroy;
          f2 = f2.tag;
          void 0 !== g2 && (0 !== (f2 & 2) ? Nj(c2, b2, g2) : 0 !== (f2 & 4) && Nj(c2, b2, g2));
          e3 = e3.next;
        } while (e3 !== d2);
      }
      Zj(a2, b2, c2);
      break;
    case 1:
      if (!U && (Mj(c2, b2), d2 = c2.stateNode, "function" === typeof d2.componentWillUnmount))
        try {
          d2.props = c2.memoizedProps, d2.state = c2.memoizedState, d2.componentWillUnmount();
        } catch (h2) {
          W(c2, b2, h2);
        }
      Zj(a2, b2, c2);
      break;
    case 21:
      Zj(a2, b2, c2);
      break;
    case 22:
      c2.mode & 1 ? (U = (d2 = U) || null !== c2.memoizedState, Zj(a2, b2, c2), U = d2) : Zj(a2, b2, c2);
      break;
    default:
      Zj(a2, b2, c2);
  }
}
function bk(a2) {
  var b2 = a2.updateQueue;
  if (null !== b2) {
    a2.updateQueue = null;
    var c2 = a2.stateNode;
    null === c2 && (c2 = a2.stateNode = new Lj());
    b2.forEach(function(b3) {
      var d2 = ck.bind(null, a2, b3);
      c2.has(b3) || (c2.add(b3), b3.then(d2, d2));
    });
  }
}
function dk(a2, b2) {
  var c2 = b2.deletions;
  if (null !== c2)
    for (var d2 = 0; d2 < c2.length; d2++) {
      var e3 = c2[d2];
      try {
        var f2 = a2, g2 = b2, h2 = g2;
        a:
          for (; null !== h2; ) {
            switch (h2.tag) {
              case 5:
                X$1 = h2.stateNode;
                Yj = false;
                break a;
              case 3:
                X$1 = h2.stateNode.containerInfo;
                Yj = true;
                break a;
              case 4:
                X$1 = h2.stateNode.containerInfo;
                Yj = true;
                break a;
            }
            h2 = h2.return;
          }
        if (null === X$1)
          throw Error(p$1(160));
        ak(f2, g2, e3);
        X$1 = null;
        Yj = false;
        var k2 = e3.alternate;
        null !== k2 && (k2.return = null);
        e3.return = null;
      } catch (l2) {
        W(e3, b2, l2);
      }
    }
  if (b2.subtreeFlags & 12854)
    for (b2 = b2.child; null !== b2; )
      ek(b2, a2), b2 = b2.sibling;
}
function ek(a2, b2) {
  var c2 = a2.alternate, d2 = a2.flags;
  switch (a2.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      dk(b2, a2);
      fk(a2);
      if (d2 & 4) {
        try {
          Qj(3, a2, a2.return), Rj(3, a2);
        } catch (t2) {
          W(a2, a2.return, t2);
        }
        try {
          Qj(5, a2, a2.return);
        } catch (t2) {
          W(a2, a2.return, t2);
        }
      }
      break;
    case 1:
      dk(b2, a2);
      fk(a2);
      d2 & 512 && null !== c2 && Mj(c2, c2.return);
      break;
    case 5:
      dk(b2, a2);
      fk(a2);
      d2 & 512 && null !== c2 && Mj(c2, c2.return);
      if (a2.flags & 32) {
        var e3 = a2.stateNode;
        try {
          ob(e3, "");
        } catch (t2) {
          W(a2, a2.return, t2);
        }
      }
      if (d2 & 4 && (e3 = a2.stateNode, null != e3)) {
        var f2 = a2.memoizedProps, g2 = null !== c2 ? c2.memoizedProps : f2, h2 = a2.type, k2 = a2.updateQueue;
        a2.updateQueue = null;
        if (null !== k2)
          try {
            "input" === h2 && "radio" === f2.type && null != f2.name && ab(e3, f2);
            vb(h2, g2);
            var l2 = vb(h2, f2);
            for (g2 = 0; g2 < k2.length; g2 += 2) {
              var m2 = k2[g2], q2 = k2[g2 + 1];
              "style" === m2 ? sb(e3, q2) : "dangerouslySetInnerHTML" === m2 ? nb(e3, q2) : "children" === m2 ? ob(e3, q2) : ta(e3, m2, q2, l2);
            }
            switch (h2) {
              case "input":
                bb(e3, f2);
                break;
              case "textarea":
                ib(e3, f2);
                break;
              case "select":
                var r2 = e3._wrapperState.wasMultiple;
                e3._wrapperState.wasMultiple = !!f2.multiple;
                var y2 = f2.value;
                null != y2 ? fb(e3, !!f2.multiple, y2, false) : r2 !== !!f2.multiple && (null != f2.defaultValue ? fb(
                  e3,
                  !!f2.multiple,
                  f2.defaultValue,
                  true
                ) : fb(e3, !!f2.multiple, f2.multiple ? [] : "", false));
            }
            e3[Pf] = f2;
          } catch (t2) {
            W(a2, a2.return, t2);
          }
      }
      break;
    case 6:
      dk(b2, a2);
      fk(a2);
      if (d2 & 4) {
        if (null === a2.stateNode)
          throw Error(p$1(162));
        e3 = a2.stateNode;
        f2 = a2.memoizedProps;
        try {
          e3.nodeValue = f2;
        } catch (t2) {
          W(a2, a2.return, t2);
        }
      }
      break;
    case 3:
      dk(b2, a2);
      fk(a2);
      if (d2 & 4 && null !== c2 && c2.memoizedState.isDehydrated)
        try {
          bd(b2.containerInfo);
        } catch (t2) {
          W(a2, a2.return, t2);
        }
      break;
    case 4:
      dk(b2, a2);
      fk(a2);
      break;
    case 13:
      dk(b2, a2);
      fk(a2);
      e3 = a2.child;
      e3.flags & 8192 && (f2 = null !== e3.memoizedState, e3.stateNode.isHidden = f2, !f2 || null !== e3.alternate && null !== e3.alternate.memoizedState || (gk = B()));
      d2 & 4 && bk(a2);
      break;
    case 22:
      m2 = null !== c2 && null !== c2.memoizedState;
      a2.mode & 1 ? (U = (l2 = U) || m2, dk(b2, a2), U = l2) : dk(b2, a2);
      fk(a2);
      if (d2 & 8192) {
        l2 = null !== a2.memoizedState;
        if ((a2.stateNode.isHidden = l2) && !m2 && 0 !== (a2.mode & 1))
          for (V = a2, m2 = a2.child; null !== m2; ) {
            for (q2 = V = m2; null !== V; ) {
              r2 = V;
              y2 = r2.child;
              switch (r2.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                  Qj(4, r2, r2.return);
                  break;
                case 1:
                  Mj(r2, r2.return);
                  var n2 = r2.stateNode;
                  if ("function" === typeof n2.componentWillUnmount) {
                    d2 = r2;
                    c2 = r2.return;
                    try {
                      b2 = d2, n2.props = b2.memoizedProps, n2.state = b2.memoizedState, n2.componentWillUnmount();
                    } catch (t2) {
                      W(d2, c2, t2);
                    }
                  }
                  break;
                case 5:
                  Mj(r2, r2.return);
                  break;
                case 22:
                  if (null !== r2.memoizedState) {
                    hk(q2);
                    continue;
                  }
              }
              null !== y2 ? (y2.return = r2, V = y2) : hk(q2);
            }
            m2 = m2.sibling;
          }
        a:
          for (m2 = null, q2 = a2; ; ) {
            if (5 === q2.tag) {
              if (null === m2) {
                m2 = q2;
                try {
                  e3 = q2.stateNode, l2 ? (f2 = e3.style, "function" === typeof f2.setProperty ? f2.setProperty("display", "none", "important") : f2.display = "none") : (h2 = q2.stateNode, k2 = q2.memoizedProps.style, g2 = void 0 !== k2 && null !== k2 && k2.hasOwnProperty("display") ? k2.display : null, h2.style.display = rb("display", g2));
                } catch (t2) {
                  W(a2, a2.return, t2);
                }
              }
            } else if (6 === q2.tag) {
              if (null === m2)
                try {
                  q2.stateNode.nodeValue = l2 ? "" : q2.memoizedProps;
                } catch (t2) {
                  W(a2, a2.return, t2);
                }
            } else if ((22 !== q2.tag && 23 !== q2.tag || null === q2.memoizedState || q2 === a2) && null !== q2.child) {
              q2.child.return = q2;
              q2 = q2.child;
              continue;
            }
            if (q2 === a2)
              break a;
            for (; null === q2.sibling; ) {
              if (null === q2.return || q2.return === a2)
                break a;
              m2 === q2 && (m2 = null);
              q2 = q2.return;
            }
            m2 === q2 && (m2 = null);
            q2.sibling.return = q2.return;
            q2 = q2.sibling;
          }
      }
      break;
    case 19:
      dk(b2, a2);
      fk(a2);
      d2 & 4 && bk(a2);
      break;
    case 21:
      break;
    default:
      dk(
        b2,
        a2
      ), fk(a2);
  }
}
function fk(a2) {
  var b2 = a2.flags;
  if (b2 & 2) {
    try {
      a: {
        for (var c2 = a2.return; null !== c2; ) {
          if (Uj(c2)) {
            var d2 = c2;
            break a;
          }
          c2 = c2.return;
        }
        throw Error(p$1(160));
      }
      switch (d2.tag) {
        case 5:
          var e3 = d2.stateNode;
          d2.flags & 32 && (ob(e3, ""), d2.flags &= -33);
          var f2 = Vj(a2);
          Xj(a2, f2, e3);
          break;
        case 3:
        case 4:
          var g2 = d2.stateNode.containerInfo, h2 = Vj(a2);
          Wj(a2, h2, g2);
          break;
        default:
          throw Error(p$1(161));
      }
    } catch (k2) {
      W(a2, a2.return, k2);
    }
    a2.flags &= -3;
  }
  b2 & 4096 && (a2.flags &= -4097);
}
function ik(a2, b2, c2) {
  V = a2;
  jk(a2);
}
function jk(a2, b2, c2) {
  for (var d2 = 0 !== (a2.mode & 1); null !== V; ) {
    var e3 = V, f2 = e3.child;
    if (22 === e3.tag && d2) {
      var g2 = null !== e3.memoizedState || Kj;
      if (!g2) {
        var h2 = e3.alternate, k2 = null !== h2 && null !== h2.memoizedState || U;
        h2 = Kj;
        var l2 = U;
        Kj = g2;
        if ((U = k2) && !l2)
          for (V = e3; null !== V; )
            g2 = V, k2 = g2.child, 22 === g2.tag && null !== g2.memoizedState ? kk(e3) : null !== k2 ? (k2.return = g2, V = k2) : kk(e3);
        for (; null !== f2; )
          V = f2, jk(f2), f2 = f2.sibling;
        V = e3;
        Kj = h2;
        U = l2;
      }
      lk(a2);
    } else
      0 !== (e3.subtreeFlags & 8772) && null !== f2 ? (f2.return = e3, V = f2) : lk(a2);
  }
}
function lk(a2) {
  for (; null !== V; ) {
    var b2 = V;
    if (0 !== (b2.flags & 8772)) {
      var c2 = b2.alternate;
      try {
        if (0 !== (b2.flags & 8772))
          switch (b2.tag) {
            case 0:
            case 11:
            case 15:
              U || Rj(5, b2);
              break;
            case 1:
              var d2 = b2.stateNode;
              if (b2.flags & 4 && !U)
                if (null === c2)
                  d2.componentDidMount();
                else {
                  var e3 = b2.elementType === b2.type ? c2.memoizedProps : Lg(b2.type, c2.memoizedProps);
                  d2.componentDidUpdate(e3, c2.memoizedState, d2.__reactInternalSnapshotBeforeUpdate);
                }
              var f2 = b2.updateQueue;
              null !== f2 && ih(b2, f2, d2);
              break;
            case 3:
              var g2 = b2.updateQueue;
              if (null !== g2) {
                c2 = null;
                if (null !== b2.child)
                  switch (b2.child.tag) {
                    case 5:
                      c2 = b2.child.stateNode;
                      break;
                    case 1:
                      c2 = b2.child.stateNode;
                  }
                ih(b2, g2, c2);
              }
              break;
            case 5:
              var h2 = b2.stateNode;
              if (null === c2 && b2.flags & 4) {
                c2 = h2;
                var k2 = b2.memoizedProps;
                switch (b2.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    k2.autoFocus && c2.focus();
                    break;
                  case "img":
                    k2.src && (c2.src = k2.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (null === b2.memoizedState) {
                var l2 = b2.alternate;
                if (null !== l2) {
                  var m2 = l2.memoizedState;
                  if (null !== m2) {
                    var q2 = m2.dehydrated;
                    null !== q2 && bd(q2);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(p$1(163));
          }
        U || b2.flags & 512 && Sj(b2);
      } catch (r2) {
        W(b2, b2.return, r2);
      }
    }
    if (b2 === a2) {
      V = null;
      break;
    }
    c2 = b2.sibling;
    if (null !== c2) {
      c2.return = b2.return;
      V = c2;
      break;
    }
    V = b2.return;
  }
}
function hk(a2) {
  for (; null !== V; ) {
    var b2 = V;
    if (b2 === a2) {
      V = null;
      break;
    }
    var c2 = b2.sibling;
    if (null !== c2) {
      c2.return = b2.return;
      V = c2;
      break;
    }
    V = b2.return;
  }
}
function kk(a2) {
  for (; null !== V; ) {
    var b2 = V;
    try {
      switch (b2.tag) {
        case 0:
        case 11:
        case 15:
          var c2 = b2.return;
          try {
            Rj(4, b2);
          } catch (k2) {
            W(b2, c2, k2);
          }
          break;
        case 1:
          var d2 = b2.stateNode;
          if ("function" === typeof d2.componentDidMount) {
            var e3 = b2.return;
            try {
              d2.componentDidMount();
            } catch (k2) {
              W(b2, e3, k2);
            }
          }
          var f2 = b2.return;
          try {
            Sj(b2);
          } catch (k2) {
            W(b2, f2, k2);
          }
          break;
        case 5:
          var g2 = b2.return;
          try {
            Sj(b2);
          } catch (k2) {
            W(b2, g2, k2);
          }
      }
    } catch (k2) {
      W(b2, b2.return, k2);
    }
    if (b2 === a2) {
      V = null;
      break;
    }
    var h2 = b2.sibling;
    if (null !== h2) {
      h2.return = b2.return;
      V = h2;
      break;
    }
    V = b2.return;
  }
}
var mk = Math.ceil, nk = ua.ReactCurrentDispatcher, ok = ua.ReactCurrentOwner, pk = ua.ReactCurrentBatchConfig, K = 0, R = null, Y = null, Z = 0, gj = 0, fj = Uf(0), T = 0, qk = null, hh = 0, rk = 0, sk = 0, tk = null, uk = null, gk = 0, Hj = Infinity, vk = null, Pi = false, Qi = null, Si = null, wk = false, xk = null, yk = 0, zk = 0, Ak = null, Bk = -1, Ck = 0;
function L() {
  return 0 !== (K & 6) ? B() : -1 !== Bk ? Bk : Bk = B();
}
function lh(a2) {
  if (0 === (a2.mode & 1))
    return 1;
  if (0 !== (K & 2) && 0 !== Z)
    return Z & -Z;
  if (null !== Kg.transition)
    return 0 === Ck && (Ck = yc()), Ck;
  a2 = C;
  if (0 !== a2)
    return a2;
  a2 = window.event;
  a2 = void 0 === a2 ? 16 : jd(a2.type);
  return a2;
}
function mh(a2, b2, c2, d2) {
  if (50 < zk)
    throw zk = 0, Ak = null, Error(p$1(185));
  Ac(a2, c2, d2);
  if (0 === (K & 2) || a2 !== R)
    a2 === R && (0 === (K & 2) && (rk |= c2), 4 === T && Dk(a2, Z)), Ek(a2, d2), 1 === c2 && 0 === K && 0 === (b2.mode & 1) && (Hj = B() + 500, fg && jg());
}
function Ek(a2, b2) {
  var c2 = a2.callbackNode;
  wc(a2, b2);
  var d2 = uc(a2, a2 === R ? Z : 0);
  if (0 === d2)
    null !== c2 && bc(c2), a2.callbackNode = null, a2.callbackPriority = 0;
  else if (b2 = d2 & -d2, a2.callbackPriority !== b2) {
    null != c2 && bc(c2);
    if (1 === b2)
      0 === a2.tag ? ig(Fk.bind(null, a2)) : hg(Fk.bind(null, a2)), Jf(function() {
        0 === (K & 6) && jg();
      }), c2 = null;
    else {
      switch (Dc(d2)) {
        case 1:
          c2 = fc;
          break;
        case 4:
          c2 = gc;
          break;
        case 16:
          c2 = hc;
          break;
        case 536870912:
          c2 = jc;
          break;
        default:
          c2 = hc;
      }
      c2 = Gk(c2, Hk.bind(null, a2));
    }
    a2.callbackPriority = b2;
    a2.callbackNode = c2;
  }
}
function Hk(a2, b2) {
  Bk = -1;
  Ck = 0;
  if (0 !== (K & 6))
    throw Error(p$1(327));
  var c2 = a2.callbackNode;
  if (Ik() && a2.callbackNode !== c2)
    return null;
  var d2 = uc(a2, a2 === R ? Z : 0);
  if (0 === d2)
    return null;
  if (0 !== (d2 & 30) || 0 !== (d2 & a2.expiredLanes) || b2)
    b2 = Jk(a2, d2);
  else {
    b2 = d2;
    var e3 = K;
    K |= 2;
    var f2 = Kk();
    if (R !== a2 || Z !== b2)
      vk = null, Hj = B() + 500, Lk(a2, b2);
    do
      try {
        Mk();
        break;
      } catch (h2) {
        Nk(a2, h2);
      }
    while (1);
    Qg();
    nk.current = f2;
    K = e3;
    null !== Y ? b2 = 0 : (R = null, Z = 0, b2 = T);
  }
  if (0 !== b2) {
    2 === b2 && (e3 = xc(a2), 0 !== e3 && (d2 = e3, b2 = Ok(a2, e3)));
    if (1 === b2)
      throw c2 = qk, Lk(a2, 0), Dk(a2, d2), Ek(a2, B()), c2;
    if (6 === b2)
      Dk(a2, d2);
    else {
      e3 = a2.current.alternate;
      if (0 === (d2 & 30) && !Pk(e3) && (b2 = Jk(a2, d2), 2 === b2 && (f2 = xc(a2), 0 !== f2 && (d2 = f2, b2 = Ok(a2, f2))), 1 === b2))
        throw c2 = qk, Lk(a2, 0), Dk(a2, d2), Ek(a2, B()), c2;
      a2.finishedWork = e3;
      a2.finishedLanes = d2;
      switch (b2) {
        case 0:
        case 1:
          throw Error(p$1(345));
        case 2:
          Qk(a2, uk, vk);
          break;
        case 3:
          Dk(a2, d2);
          if ((d2 & 130023424) === d2 && (b2 = gk + 500 - B(), 10 < b2)) {
            if (0 !== uc(a2, 0))
              break;
            e3 = a2.suspendedLanes;
            if ((e3 & d2) !== d2) {
              L();
              a2.pingedLanes |= a2.suspendedLanes & e3;
              break;
            }
            a2.timeoutHandle = Ff(Qk.bind(null, a2, uk, vk), b2);
            break;
          }
          Qk(a2, uk, vk);
          break;
        case 4:
          Dk(a2, d2);
          if ((d2 & 4194240) === d2)
            break;
          b2 = a2.eventTimes;
          for (e3 = -1; 0 < d2; ) {
            var g2 = 31 - oc(d2);
            f2 = 1 << g2;
            g2 = b2[g2];
            g2 > e3 && (e3 = g2);
            d2 &= ~f2;
          }
          d2 = e3;
          d2 = B() - d2;
          d2 = (120 > d2 ? 120 : 480 > d2 ? 480 : 1080 > d2 ? 1080 : 1920 > d2 ? 1920 : 3e3 > d2 ? 3e3 : 4320 > d2 ? 4320 : 1960 * mk(d2 / 1960)) - d2;
          if (10 < d2) {
            a2.timeoutHandle = Ff(Qk.bind(null, a2, uk, vk), d2);
            break;
          }
          Qk(a2, uk, vk);
          break;
        case 5:
          Qk(a2, uk, vk);
          break;
        default:
          throw Error(p$1(329));
      }
    }
  }
  Ek(a2, B());
  return a2.callbackNode === c2 ? Hk.bind(null, a2) : null;
}
function Ok(a2, b2) {
  var c2 = tk;
  a2.current.memoizedState.isDehydrated && (Lk(a2, b2).flags |= 256);
  a2 = Jk(a2, b2);
  2 !== a2 && (b2 = uk, uk = c2, null !== b2 && Gj(b2));
  return a2;
}
function Gj(a2) {
  null === uk ? uk = a2 : uk.push.apply(uk, a2);
}
function Pk(a2) {
  for (var b2 = a2; ; ) {
    if (b2.flags & 16384) {
      var c2 = b2.updateQueue;
      if (null !== c2 && (c2 = c2.stores, null !== c2))
        for (var d2 = 0; d2 < c2.length; d2++) {
          var e3 = c2[d2], f2 = e3.getSnapshot;
          e3 = e3.value;
          try {
            if (!He(f2(), e3))
              return false;
          } catch (g2) {
            return false;
          }
        }
    }
    c2 = b2.child;
    if (b2.subtreeFlags & 16384 && null !== c2)
      c2.return = b2, b2 = c2;
    else {
      if (b2 === a2)
        break;
      for (; null === b2.sibling; ) {
        if (null === b2.return || b2.return === a2)
          return true;
        b2 = b2.return;
      }
      b2.sibling.return = b2.return;
      b2 = b2.sibling;
    }
  }
  return true;
}
function Dk(a2, b2) {
  b2 &= ~sk;
  b2 &= ~rk;
  a2.suspendedLanes |= b2;
  a2.pingedLanes &= ~b2;
  for (a2 = a2.expirationTimes; 0 < b2; ) {
    var c2 = 31 - oc(b2), d2 = 1 << c2;
    a2[c2] = -1;
    b2 &= ~d2;
  }
}
function Fk(a2) {
  if (0 !== (K & 6))
    throw Error(p$1(327));
  Ik();
  var b2 = uc(a2, 0);
  if (0 === (b2 & 1))
    return Ek(a2, B()), null;
  var c2 = Jk(a2, b2);
  if (0 !== a2.tag && 2 === c2) {
    var d2 = xc(a2);
    0 !== d2 && (b2 = d2, c2 = Ok(a2, d2));
  }
  if (1 === c2)
    throw c2 = qk, Lk(a2, 0), Dk(a2, b2), Ek(a2, B()), c2;
  if (6 === c2)
    throw Error(p$1(345));
  a2.finishedWork = a2.current.alternate;
  a2.finishedLanes = b2;
  Qk(a2, uk, vk);
  Ek(a2, B());
  return null;
}
function Rk(a2, b2) {
  var c2 = K;
  K |= 1;
  try {
    return a2(b2);
  } finally {
    K = c2, 0 === K && (Hj = B() + 500, fg && jg());
  }
}
function Sk(a2) {
  null !== xk && 0 === xk.tag && 0 === (K & 6) && Ik();
  var b2 = K;
  K |= 1;
  var c2 = pk.transition, d2 = C;
  try {
    if (pk.transition = null, C = 1, a2)
      return a2();
  } finally {
    C = d2, pk.transition = c2, K = b2, 0 === (K & 6) && jg();
  }
}
function Ij() {
  gj = fj.current;
  E(fj);
}
function Lk(a2, b2) {
  a2.finishedWork = null;
  a2.finishedLanes = 0;
  var c2 = a2.timeoutHandle;
  -1 !== c2 && (a2.timeoutHandle = -1, Gf(c2));
  if (null !== Y)
    for (c2 = Y.return; null !== c2; ) {
      var d2 = c2;
      wg(d2);
      switch (d2.tag) {
        case 1:
          d2 = d2.type.childContextTypes;
          null !== d2 && void 0 !== d2 && $f();
          break;
        case 3:
          Jh();
          E(Wf);
          E(H);
          Oh();
          break;
        case 5:
          Lh(d2);
          break;
        case 4:
          Jh();
          break;
        case 13:
          E(M$1);
          break;
        case 19:
          E(M$1);
          break;
        case 10:
          Rg(d2.type._context);
          break;
        case 22:
        case 23:
          Ij();
      }
      c2 = c2.return;
    }
  R = a2;
  Y = a2 = wh(a2.current, null);
  Z = gj = b2;
  T = 0;
  qk = null;
  sk = rk = hh = 0;
  uk = tk = null;
  if (null !== Wg) {
    for (b2 = 0; b2 < Wg.length; b2++)
      if (c2 = Wg[b2], d2 = c2.interleaved, null !== d2) {
        c2.interleaved = null;
        var e3 = d2.next, f2 = c2.pending;
        if (null !== f2) {
          var g2 = f2.next;
          f2.next = e3;
          d2.next = g2;
        }
        c2.pending = d2;
      }
    Wg = null;
  }
  return a2;
}
function Nk(a2, b2) {
  do {
    var c2 = Y;
    try {
      Qg();
      Ph.current = ai;
      if (Sh) {
        for (var d2 = N.memoizedState; null !== d2; ) {
          var e3 = d2.queue;
          null !== e3 && (e3.pending = null);
          d2 = d2.next;
        }
        Sh = false;
      }
      Rh = 0;
      P$1 = O = N = null;
      Th = false;
      Uh = 0;
      ok.current = null;
      if (null === c2 || null === c2.return) {
        T = 1;
        qk = b2;
        Y = null;
        break;
      }
      a: {
        var f2 = a2, g2 = c2.return, h2 = c2, k2 = b2;
        b2 = Z;
        h2.flags |= 32768;
        if (null !== k2 && "object" === typeof k2 && "function" === typeof k2.then) {
          var l2 = k2, m2 = h2, q2 = m2.tag;
          if (0 === (m2.mode & 1) && (0 === q2 || 11 === q2 || 15 === q2)) {
            var r2 = m2.alternate;
            r2 ? (m2.updateQueue = r2.updateQueue, m2.memoizedState = r2.memoizedState, m2.lanes = r2.lanes) : (m2.updateQueue = null, m2.memoizedState = null);
          }
          var y2 = Vi(g2);
          if (null !== y2) {
            y2.flags &= -257;
            Wi(y2, g2, h2, f2, b2);
            y2.mode & 1 && Ti(f2, l2, b2);
            b2 = y2;
            k2 = l2;
            var n2 = b2.updateQueue;
            if (null === n2) {
              var t2 = /* @__PURE__ */ new Set();
              t2.add(k2);
              b2.updateQueue = t2;
            } else
              n2.add(k2);
            break a;
          } else {
            if (0 === (b2 & 1)) {
              Ti(f2, l2, b2);
              uj();
              break a;
            }
            k2 = Error(p$1(426));
          }
        } else if (I && h2.mode & 1) {
          var J2 = Vi(g2);
          if (null !== J2) {
            0 === (J2.flags & 65536) && (J2.flags |= 256);
            Wi(J2, g2, h2, f2, b2);
            Jg(Ki(k2, h2));
            break a;
          }
        }
        f2 = k2 = Ki(k2, h2);
        4 !== T && (T = 2);
        null === tk ? tk = [f2] : tk.push(f2);
        f2 = g2;
        do {
          switch (f2.tag) {
            case 3:
              f2.flags |= 65536;
              b2 &= -b2;
              f2.lanes |= b2;
              var x2 = Oi(f2, k2, b2);
              fh(f2, x2);
              break a;
            case 1:
              h2 = k2;
              var w2 = f2.type, u2 = f2.stateNode;
              if (0 === (f2.flags & 128) && ("function" === typeof w2.getDerivedStateFromError || null !== u2 && "function" === typeof u2.componentDidCatch && (null === Si || !Si.has(u2)))) {
                f2.flags |= 65536;
                b2 &= -b2;
                f2.lanes |= b2;
                var F2 = Ri(f2, h2, b2);
                fh(f2, F2);
                break a;
              }
          }
          f2 = f2.return;
        } while (null !== f2);
      }
      Tk(c2);
    } catch (na) {
      b2 = na;
      Y === c2 && null !== c2 && (Y = c2 = c2.return);
      continue;
    }
    break;
  } while (1);
}
function Kk() {
  var a2 = nk.current;
  nk.current = ai;
  return null === a2 ? ai : a2;
}
function uj() {
  if (0 === T || 3 === T || 2 === T)
    T = 4;
  null === R || 0 === (hh & 268435455) && 0 === (rk & 268435455) || Dk(R, Z);
}
function Jk(a2, b2) {
  var c2 = K;
  K |= 2;
  var d2 = Kk();
  if (R !== a2 || Z !== b2)
    vk = null, Lk(a2, b2);
  do
    try {
      Uk();
      break;
    } catch (e3) {
      Nk(a2, e3);
    }
  while (1);
  Qg();
  K = c2;
  nk.current = d2;
  if (null !== Y)
    throw Error(p$1(261));
  R = null;
  Z = 0;
  return T;
}
function Uk() {
  for (; null !== Y; )
    Vk(Y);
}
function Mk() {
  for (; null !== Y && !cc(); )
    Vk(Y);
}
function Vk(a2) {
  var b2 = Wk(a2.alternate, a2, gj);
  a2.memoizedProps = a2.pendingProps;
  null === b2 ? Tk(a2) : Y = b2;
  ok.current = null;
}
function Tk(a2) {
  var b2 = a2;
  do {
    var c2 = b2.alternate;
    a2 = b2.return;
    if (0 === (b2.flags & 32768)) {
      if (c2 = Fj(c2, b2, gj), null !== c2) {
        Y = c2;
        return;
      }
    } else {
      c2 = Jj(c2, b2);
      if (null !== c2) {
        c2.flags &= 32767;
        Y = c2;
        return;
      }
      if (null !== a2)
        a2.flags |= 32768, a2.subtreeFlags = 0, a2.deletions = null;
      else {
        T = 6;
        Y = null;
        return;
      }
    }
    b2 = b2.sibling;
    if (null !== b2) {
      Y = b2;
      return;
    }
    Y = b2 = a2;
  } while (null !== b2);
  0 === T && (T = 5);
}
function Qk(a2, b2, c2) {
  var d2 = C, e3 = pk.transition;
  try {
    pk.transition = null, C = 1, Xk(a2, b2, c2, d2);
  } finally {
    pk.transition = e3, C = d2;
  }
  return null;
}
function Xk(a2, b2, c2, d2) {
  do
    Ik();
  while (null !== xk);
  if (0 !== (K & 6))
    throw Error(p$1(327));
  c2 = a2.finishedWork;
  var e3 = a2.finishedLanes;
  if (null === c2)
    return null;
  a2.finishedWork = null;
  a2.finishedLanes = 0;
  if (c2 === a2.current)
    throw Error(p$1(177));
  a2.callbackNode = null;
  a2.callbackPriority = 0;
  var f2 = c2.lanes | c2.childLanes;
  Bc(a2, f2);
  a2 === R && (Y = R = null, Z = 0);
  0 === (c2.subtreeFlags & 2064) && 0 === (c2.flags & 2064) || wk || (wk = true, Gk(hc, function() {
    Ik();
    return null;
  }));
  f2 = 0 !== (c2.flags & 15990);
  if (0 !== (c2.subtreeFlags & 15990) || f2) {
    f2 = pk.transition;
    pk.transition = null;
    var g2 = C;
    C = 1;
    var h2 = K;
    K |= 4;
    ok.current = null;
    Pj(a2, c2);
    ek(c2, a2);
    Oe(Df);
    dd = !!Cf;
    Df = Cf = null;
    a2.current = c2;
    ik(c2);
    dc();
    K = h2;
    C = g2;
    pk.transition = f2;
  } else
    a2.current = c2;
  wk && (wk = false, xk = a2, yk = e3);
  f2 = a2.pendingLanes;
  0 === f2 && (Si = null);
  mc(c2.stateNode);
  Ek(a2, B());
  if (null !== b2)
    for (d2 = a2.onRecoverableError, c2 = 0; c2 < b2.length; c2++)
      e3 = b2[c2], d2(e3.value, { componentStack: e3.stack, digest: e3.digest });
  if (Pi)
    throw Pi = false, a2 = Qi, Qi = null, a2;
  0 !== (yk & 1) && 0 !== a2.tag && Ik();
  f2 = a2.pendingLanes;
  0 !== (f2 & 1) ? a2 === Ak ? zk++ : (zk = 0, Ak = a2) : zk = 0;
  jg();
  return null;
}
function Ik() {
  if (null !== xk) {
    var a2 = Dc(yk), b2 = pk.transition, c2 = C;
    try {
      pk.transition = null;
      C = 16 > a2 ? 16 : a2;
      if (null === xk)
        var d2 = false;
      else {
        a2 = xk;
        xk = null;
        yk = 0;
        if (0 !== (K & 6))
          throw Error(p$1(331));
        var e3 = K;
        K |= 4;
        for (V = a2.current; null !== V; ) {
          var f2 = V, g2 = f2.child;
          if (0 !== (V.flags & 16)) {
            var h2 = f2.deletions;
            if (null !== h2) {
              for (var k2 = 0; k2 < h2.length; k2++) {
                var l2 = h2[k2];
                for (V = l2; null !== V; ) {
                  var m2 = V;
                  switch (m2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(8, m2, f2);
                  }
                  var q2 = m2.child;
                  if (null !== q2)
                    q2.return = m2, V = q2;
                  else
                    for (; null !== V; ) {
                      m2 = V;
                      var r2 = m2.sibling, y2 = m2.return;
                      Tj(m2);
                      if (m2 === l2) {
                        V = null;
                        break;
                      }
                      if (null !== r2) {
                        r2.return = y2;
                        V = r2;
                        break;
                      }
                      V = y2;
                    }
                }
              }
              var n2 = f2.alternate;
              if (null !== n2) {
                var t2 = n2.child;
                if (null !== t2) {
                  n2.child = null;
                  do {
                    var J2 = t2.sibling;
                    t2.sibling = null;
                    t2 = J2;
                  } while (null !== t2);
                }
              }
              V = f2;
            }
          }
          if (0 !== (f2.subtreeFlags & 2064) && null !== g2)
            g2.return = f2, V = g2;
          else
            b:
              for (; null !== V; ) {
                f2 = V;
                if (0 !== (f2.flags & 2048))
                  switch (f2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(9, f2, f2.return);
                  }
                var x2 = f2.sibling;
                if (null !== x2) {
                  x2.return = f2.return;
                  V = x2;
                  break b;
                }
                V = f2.return;
              }
        }
        var w2 = a2.current;
        for (V = w2; null !== V; ) {
          g2 = V;
          var u2 = g2.child;
          if (0 !== (g2.subtreeFlags & 2064) && null !== u2)
            u2.return = g2, V = u2;
          else
            b:
              for (g2 = w2; null !== V; ) {
                h2 = V;
                if (0 !== (h2.flags & 2048))
                  try {
                    switch (h2.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Rj(9, h2);
                    }
                  } catch (na) {
                    W(h2, h2.return, na);
                  }
                if (h2 === g2) {
                  V = null;
                  break b;
                }
                var F2 = h2.sibling;
                if (null !== F2) {
                  F2.return = h2.return;
                  V = F2;
                  break b;
                }
                V = h2.return;
              }
        }
        K = e3;
        jg();
        if (lc && "function" === typeof lc.onPostCommitFiberRoot)
          try {
            lc.onPostCommitFiberRoot(kc, a2);
          } catch (na) {
          }
        d2 = true;
      }
      return d2;
    } finally {
      C = c2, pk.transition = b2;
    }
  }
  return false;
}
function Yk(a2, b2, c2) {
  b2 = Ki(c2, b2);
  b2 = Oi(a2, b2, 1);
  a2 = dh(a2, b2, 1);
  b2 = L();
  null !== a2 && (Ac(a2, 1, b2), Ek(a2, b2));
}
function W(a2, b2, c2) {
  if (3 === a2.tag)
    Yk(a2, a2, c2);
  else
    for (; null !== b2; ) {
      if (3 === b2.tag) {
        Yk(b2, a2, c2);
        break;
      } else if (1 === b2.tag) {
        var d2 = b2.stateNode;
        if ("function" === typeof b2.type.getDerivedStateFromError || "function" === typeof d2.componentDidCatch && (null === Si || !Si.has(d2))) {
          a2 = Ki(c2, a2);
          a2 = Ri(b2, a2, 1);
          b2 = dh(b2, a2, 1);
          a2 = L();
          null !== b2 && (Ac(b2, 1, a2), Ek(b2, a2));
          break;
        }
      }
      b2 = b2.return;
    }
}
function Ui(a2, b2, c2) {
  var d2 = a2.pingCache;
  null !== d2 && d2.delete(b2);
  b2 = L();
  a2.pingedLanes |= a2.suspendedLanes & c2;
  R === a2 && (Z & c2) === c2 && (4 === T || 3 === T && (Z & 130023424) === Z && 500 > B() - gk ? Lk(a2, 0) : sk |= c2);
  Ek(a2, b2);
}
function Zk(a2, b2) {
  0 === b2 && (0 === (a2.mode & 1) ? b2 = 1 : (b2 = sc, sc <<= 1, 0 === (sc & 130023424) && (sc = 4194304)));
  var c2 = L();
  a2 = Zg(a2, b2);
  null !== a2 && (Ac(a2, b2, c2), Ek(a2, c2));
}
function vj(a2) {
  var b2 = a2.memoizedState, c2 = 0;
  null !== b2 && (c2 = b2.retryLane);
  Zk(a2, c2);
}
function ck(a2, b2) {
  var c2 = 0;
  switch (a2.tag) {
    case 13:
      var d2 = a2.stateNode;
      var e3 = a2.memoizedState;
      null !== e3 && (c2 = e3.retryLane);
      break;
    case 19:
      d2 = a2.stateNode;
      break;
    default:
      throw Error(p$1(314));
  }
  null !== d2 && d2.delete(b2);
  Zk(a2, c2);
}
var Wk;
Wk = function(a2, b2, c2) {
  if (null !== a2)
    if (a2.memoizedProps !== b2.pendingProps || Wf.current)
      Ug = true;
    else {
      if (0 === (a2.lanes & c2) && 0 === (b2.flags & 128))
        return Ug = false, zj(a2, b2, c2);
      Ug = 0 !== (a2.flags & 131072) ? true : false;
    }
  else
    Ug = false, I && 0 !== (b2.flags & 1048576) && ug(b2, ng, b2.index);
  b2.lanes = 0;
  switch (b2.tag) {
    case 2:
      var d2 = b2.type;
      jj(a2, b2);
      a2 = b2.pendingProps;
      var e3 = Yf(b2, H.current);
      Tg(b2, c2);
      e3 = Xh(null, b2, d2, a2, e3, c2);
      var f2 = bi();
      b2.flags |= 1;
      "object" === typeof e3 && null !== e3 && "function" === typeof e3.render && void 0 === e3.$$typeof ? (b2.tag = 1, b2.memoizedState = null, b2.updateQueue = null, Zf(d2) ? (f2 = true, cg(b2)) : f2 = false, b2.memoizedState = null !== e3.state && void 0 !== e3.state ? e3.state : null, ah(b2), e3.updater = nh, b2.stateNode = e3, e3._reactInternals = b2, rh(b2, d2, a2, c2), b2 = kj(null, b2, d2, true, f2, c2)) : (b2.tag = 0, I && f2 && vg(b2), Yi(null, b2, e3, c2), b2 = b2.child);
      return b2;
    case 16:
      d2 = b2.elementType;
      a: {
        jj(a2, b2);
        a2 = b2.pendingProps;
        e3 = d2._init;
        d2 = e3(d2._payload);
        b2.type = d2;
        e3 = b2.tag = $k(d2);
        a2 = Lg(d2, a2);
        switch (e3) {
          case 0:
            b2 = dj(null, b2, d2, a2, c2);
            break a;
          case 1:
            b2 = ij(null, b2, d2, a2, c2);
            break a;
          case 11:
            b2 = Zi(null, b2, d2, a2, c2);
            break a;
          case 14:
            b2 = aj(null, b2, d2, Lg(d2.type, a2), c2);
            break a;
        }
        throw Error(p$1(
          306,
          d2,
          ""
        ));
      }
      return b2;
    case 0:
      return d2 = b2.type, e3 = b2.pendingProps, e3 = b2.elementType === d2 ? e3 : Lg(d2, e3), dj(a2, b2, d2, e3, c2);
    case 1:
      return d2 = b2.type, e3 = b2.pendingProps, e3 = b2.elementType === d2 ? e3 : Lg(d2, e3), ij(a2, b2, d2, e3, c2);
    case 3:
      a: {
        lj(b2);
        if (null === a2)
          throw Error(p$1(387));
        d2 = b2.pendingProps;
        f2 = b2.memoizedState;
        e3 = f2.element;
        bh(a2, b2);
        gh(b2, d2, null, c2);
        var g2 = b2.memoizedState;
        d2 = g2.element;
        if (f2.isDehydrated)
          if (f2 = { element: d2, isDehydrated: false, cache: g2.cache, pendingSuspenseBoundaries: g2.pendingSuspenseBoundaries, transitions: g2.transitions }, b2.updateQueue.baseState = f2, b2.memoizedState = f2, b2.flags & 256) {
            e3 = Ki(Error(p$1(423)), b2);
            b2 = mj(a2, b2, d2, c2, e3);
            break a;
          } else if (d2 !== e3) {
            e3 = Ki(Error(p$1(424)), b2);
            b2 = mj(a2, b2, d2, c2, e3);
            break a;
          } else
            for (yg = Lf(b2.stateNode.containerInfo.firstChild), xg = b2, I = true, zg = null, c2 = Ch(b2, null, d2, c2), b2.child = c2; c2; )
              c2.flags = c2.flags & -3 | 4096, c2 = c2.sibling;
        else {
          Ig();
          if (d2 === e3) {
            b2 = $i(a2, b2, c2);
            break a;
          }
          Yi(a2, b2, d2, c2);
        }
        b2 = b2.child;
      }
      return b2;
    case 5:
      return Kh(b2), null === a2 && Eg(b2), d2 = b2.type, e3 = b2.pendingProps, f2 = null !== a2 ? a2.memoizedProps : null, g2 = e3.children, Ef(d2, e3) ? g2 = null : null !== f2 && Ef(d2, f2) && (b2.flags |= 32), hj(a2, b2), Yi(a2, b2, g2, c2), b2.child;
    case 6:
      return null === a2 && Eg(b2), null;
    case 13:
      return pj(a2, b2, c2);
    case 4:
      return Ih(b2, b2.stateNode.containerInfo), d2 = b2.pendingProps, null === a2 ? b2.child = Bh(b2, null, d2, c2) : Yi(a2, b2, d2, c2), b2.child;
    case 11:
      return d2 = b2.type, e3 = b2.pendingProps, e3 = b2.elementType === d2 ? e3 : Lg(d2, e3), Zi(a2, b2, d2, e3, c2);
    case 7:
      return Yi(a2, b2, b2.pendingProps, c2), b2.child;
    case 8:
      return Yi(a2, b2, b2.pendingProps.children, c2), b2.child;
    case 12:
      return Yi(a2, b2, b2.pendingProps.children, c2), b2.child;
    case 10:
      a: {
        d2 = b2.type._context;
        e3 = b2.pendingProps;
        f2 = b2.memoizedProps;
        g2 = e3.value;
        G(Mg, d2._currentValue);
        d2._currentValue = g2;
        if (null !== f2)
          if (He(f2.value, g2)) {
            if (f2.children === e3.children && !Wf.current) {
              b2 = $i(a2, b2, c2);
              break a;
            }
          } else
            for (f2 = b2.child, null !== f2 && (f2.return = b2); null !== f2; ) {
              var h2 = f2.dependencies;
              if (null !== h2) {
                g2 = f2.child;
                for (var k2 = h2.firstContext; null !== k2; ) {
                  if (k2.context === d2) {
                    if (1 === f2.tag) {
                      k2 = ch(-1, c2 & -c2);
                      k2.tag = 2;
                      var l2 = f2.updateQueue;
                      if (null !== l2) {
                        l2 = l2.shared;
                        var m2 = l2.pending;
                        null === m2 ? k2.next = k2 : (k2.next = m2.next, m2.next = k2);
                        l2.pending = k2;
                      }
                    }
                    f2.lanes |= c2;
                    k2 = f2.alternate;
                    null !== k2 && (k2.lanes |= c2);
                    Sg(
                      f2.return,
                      c2,
                      b2
                    );
                    h2.lanes |= c2;
                    break;
                  }
                  k2 = k2.next;
                }
              } else if (10 === f2.tag)
                g2 = f2.type === b2.type ? null : f2.child;
              else if (18 === f2.tag) {
                g2 = f2.return;
                if (null === g2)
                  throw Error(p$1(341));
                g2.lanes |= c2;
                h2 = g2.alternate;
                null !== h2 && (h2.lanes |= c2);
                Sg(g2, c2, b2);
                g2 = f2.sibling;
              } else
                g2 = f2.child;
              if (null !== g2)
                g2.return = f2;
              else
                for (g2 = f2; null !== g2; ) {
                  if (g2 === b2) {
                    g2 = null;
                    break;
                  }
                  f2 = g2.sibling;
                  if (null !== f2) {
                    f2.return = g2.return;
                    g2 = f2;
                    break;
                  }
                  g2 = g2.return;
                }
              f2 = g2;
            }
        Yi(a2, b2, e3.children, c2);
        b2 = b2.child;
      }
      return b2;
    case 9:
      return e3 = b2.type, d2 = b2.pendingProps.children, Tg(b2, c2), e3 = Vg(e3), d2 = d2(e3), b2.flags |= 1, Yi(a2, b2, d2, c2), b2.child;
    case 14:
      return d2 = b2.type, e3 = Lg(d2, b2.pendingProps), e3 = Lg(d2.type, e3), aj(a2, b2, d2, e3, c2);
    case 15:
      return cj(a2, b2, b2.type, b2.pendingProps, c2);
    case 17:
      return d2 = b2.type, e3 = b2.pendingProps, e3 = b2.elementType === d2 ? e3 : Lg(d2, e3), jj(a2, b2), b2.tag = 1, Zf(d2) ? (a2 = true, cg(b2)) : a2 = false, Tg(b2, c2), ph(b2, d2, e3), rh(b2, d2, e3, c2), kj(null, b2, d2, true, a2, c2);
    case 19:
      return yj(a2, b2, c2);
    case 22:
      return ej(a2, b2, c2);
  }
  throw Error(p$1(156, b2.tag));
};
function Gk(a2, b2) {
  return ac(a2, b2);
}
function al(a2, b2, c2, d2) {
  this.tag = a2;
  this.key = c2;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b2;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d2;
  this.subtreeFlags = this.flags = 0;
  this.deletions = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function Bg(a2, b2, c2, d2) {
  return new al(a2, b2, c2, d2);
}
function bj(a2) {
  a2 = a2.prototype;
  return !(!a2 || !a2.isReactComponent);
}
function $k(a2) {
  if ("function" === typeof a2)
    return bj(a2) ? 1 : 0;
  if (void 0 !== a2 && null !== a2) {
    a2 = a2.$$typeof;
    if (a2 === Da)
      return 11;
    if (a2 === Ga)
      return 14;
  }
  return 2;
}
function wh(a2, b2) {
  var c2 = a2.alternate;
  null === c2 ? (c2 = Bg(a2.tag, b2, a2.key, a2.mode), c2.elementType = a2.elementType, c2.type = a2.type, c2.stateNode = a2.stateNode, c2.alternate = a2, a2.alternate = c2) : (c2.pendingProps = b2, c2.type = a2.type, c2.flags = 0, c2.subtreeFlags = 0, c2.deletions = null);
  c2.flags = a2.flags & 14680064;
  c2.childLanes = a2.childLanes;
  c2.lanes = a2.lanes;
  c2.child = a2.child;
  c2.memoizedProps = a2.memoizedProps;
  c2.memoizedState = a2.memoizedState;
  c2.updateQueue = a2.updateQueue;
  b2 = a2.dependencies;
  c2.dependencies = null === b2 ? null : { lanes: b2.lanes, firstContext: b2.firstContext };
  c2.sibling = a2.sibling;
  c2.index = a2.index;
  c2.ref = a2.ref;
  return c2;
}
function yh(a2, b2, c2, d2, e3, f2) {
  var g2 = 2;
  d2 = a2;
  if ("function" === typeof a2)
    bj(a2) && (g2 = 1);
  else if ("string" === typeof a2)
    g2 = 5;
  else
    a:
      switch (a2) {
        case ya:
          return Ah(c2.children, e3, f2, b2);
        case za:
          g2 = 8;
          e3 |= 8;
          break;
        case Aa:
          return a2 = Bg(12, c2, b2, e3 | 2), a2.elementType = Aa, a2.lanes = f2, a2;
        case Ea:
          return a2 = Bg(13, c2, b2, e3), a2.elementType = Ea, a2.lanes = f2, a2;
        case Fa:
          return a2 = Bg(19, c2, b2, e3), a2.elementType = Fa, a2.lanes = f2, a2;
        case Ia:
          return qj(c2, e3, f2, b2);
        default:
          if ("object" === typeof a2 && null !== a2)
            switch (a2.$$typeof) {
              case Ba:
                g2 = 10;
                break a;
              case Ca:
                g2 = 9;
                break a;
              case Da:
                g2 = 11;
                break a;
              case Ga:
                g2 = 14;
                break a;
              case Ha:
                g2 = 16;
                d2 = null;
                break a;
            }
          throw Error(p$1(130, null == a2 ? a2 : typeof a2, ""));
      }
  b2 = Bg(g2, c2, b2, e3);
  b2.elementType = a2;
  b2.type = d2;
  b2.lanes = f2;
  return b2;
}
function Ah(a2, b2, c2, d2) {
  a2 = Bg(7, a2, d2, b2);
  a2.lanes = c2;
  return a2;
}
function qj(a2, b2, c2, d2) {
  a2 = Bg(22, a2, d2, b2);
  a2.elementType = Ia;
  a2.lanes = c2;
  a2.stateNode = { isHidden: false };
  return a2;
}
function xh(a2, b2, c2) {
  a2 = Bg(6, a2, null, b2);
  a2.lanes = c2;
  return a2;
}
function zh(a2, b2, c2) {
  b2 = Bg(4, null !== a2.children ? a2.children : [], a2.key, b2);
  b2.lanes = c2;
  b2.stateNode = { containerInfo: a2.containerInfo, pendingChildren: null, implementation: a2.implementation };
  return b2;
}
function bl(a2, b2, c2, d2, e3) {
  this.tag = b2;
  this.containerInfo = a2;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.callbackNode = this.pendingContext = this.context = null;
  this.callbackPriority = 0;
  this.eventTimes = zc(0);
  this.expirationTimes = zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = zc(0);
  this.identifierPrefix = d2;
  this.onRecoverableError = e3;
  this.mutableSourceEagerHydrationData = null;
}
function cl(a2, b2, c2, d2, e3, f2, g2, h2, k2) {
  a2 = new bl(a2, b2, c2, h2, k2);
  1 === b2 ? (b2 = 1, true === f2 && (b2 |= 8)) : b2 = 0;
  f2 = Bg(3, null, null, b2);
  a2.current = f2;
  f2.stateNode = a2;
  f2.memoizedState = { element: d2, isDehydrated: c2, cache: null, transitions: null, pendingSuspenseBoundaries: null };
  ah(f2);
  return a2;
}
function dl(a2, b2, c2) {
  var d2 = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return { $$typeof: wa, key: null == d2 ? null : "" + d2, children: a2, containerInfo: b2, implementation: c2 };
}
function el(a2) {
  if (!a2)
    return Vf;
  a2 = a2._reactInternals;
  a: {
    if (Vb(a2) !== a2 || 1 !== a2.tag)
      throw Error(p$1(170));
    var b2 = a2;
    do {
      switch (b2.tag) {
        case 3:
          b2 = b2.stateNode.context;
          break a;
        case 1:
          if (Zf(b2.type)) {
            b2 = b2.stateNode.__reactInternalMemoizedMergedChildContext;
            break a;
          }
      }
      b2 = b2.return;
    } while (null !== b2);
    throw Error(p$1(171));
  }
  if (1 === a2.tag) {
    var c2 = a2.type;
    if (Zf(c2))
      return bg(a2, c2, b2);
  }
  return b2;
}
function fl(a2, b2, c2, d2, e3, f2, g2, h2, k2) {
  a2 = cl(c2, d2, true, a2, e3, f2, g2, h2, k2);
  a2.context = el(null);
  c2 = a2.current;
  d2 = L();
  e3 = lh(c2);
  f2 = ch(d2, e3);
  f2.callback = void 0 !== b2 && null !== b2 ? b2 : null;
  dh(c2, f2, e3);
  a2.current.lanes = e3;
  Ac(a2, e3, d2);
  Ek(a2, d2);
  return a2;
}
function gl(a2, b2, c2, d2) {
  var e3 = b2.current, f2 = L(), g2 = lh(e3);
  c2 = el(c2);
  null === b2.context ? b2.context = c2 : b2.pendingContext = c2;
  b2 = ch(f2, g2);
  b2.payload = { element: a2 };
  d2 = void 0 === d2 ? null : d2;
  null !== d2 && (b2.callback = d2);
  a2 = dh(e3, b2, g2);
  null !== a2 && (mh(a2, e3, g2, f2), eh(a2, e3, g2));
  return g2;
}
function hl(a2) {
  a2 = a2.current;
  if (!a2.child)
    return null;
  switch (a2.child.tag) {
    case 5:
      return a2.child.stateNode;
    default:
      return a2.child.stateNode;
  }
}
function il(a2, b2) {
  a2 = a2.memoizedState;
  if (null !== a2 && null !== a2.dehydrated) {
    var c2 = a2.retryLane;
    a2.retryLane = 0 !== c2 && c2 < b2 ? c2 : b2;
  }
}
function jl(a2, b2) {
  il(a2, b2);
  (a2 = a2.alternate) && il(a2, b2);
}
function kl() {
  return null;
}
var ll = "function" === typeof reportError ? reportError : function(a2) {
  console.error(a2);
};
function ml(a2) {
  this._internalRoot = a2;
}
nl.prototype.render = ml.prototype.render = function(a2) {
  var b2 = this._internalRoot;
  if (null === b2)
    throw Error(p$1(409));
  gl(a2, b2, null, null);
};
nl.prototype.unmount = ml.prototype.unmount = function() {
  var a2 = this._internalRoot;
  if (null !== a2) {
    this._internalRoot = null;
    var b2 = a2.containerInfo;
    Sk(function() {
      gl(null, a2, null, null);
    });
    b2[uf] = null;
  }
};
function nl(a2) {
  this._internalRoot = a2;
}
nl.prototype.unstable_scheduleHydration = function(a2) {
  if (a2) {
    var b2 = Hc();
    a2 = { blockedOn: null, target: a2, priority: b2 };
    for (var c2 = 0; c2 < Qc.length && 0 !== b2 && b2 < Qc[c2].priority; c2++)
      ;
    Qc.splice(c2, 0, a2);
    0 === c2 && Vc(a2);
  }
};
function ol(a2) {
  return !(!a2 || 1 !== a2.nodeType && 9 !== a2.nodeType && 11 !== a2.nodeType);
}
function pl(a2) {
  return !(!a2 || 1 !== a2.nodeType && 9 !== a2.nodeType && 11 !== a2.nodeType && (8 !== a2.nodeType || " react-mount-point-unstable " !== a2.nodeValue));
}
function ql() {
}
function rl(a2, b2, c2, d2, e3) {
  if (e3) {
    if ("function" === typeof d2) {
      var f2 = d2;
      d2 = function() {
        var a3 = hl(g2);
        f2.call(a3);
      };
    }
    var g2 = fl(b2, d2, a2, 0, null, false, false, "", ql);
    a2._reactRootContainer = g2;
    a2[uf] = g2.current;
    sf(8 === a2.nodeType ? a2.parentNode : a2);
    Sk();
    return g2;
  }
  for (; e3 = a2.lastChild; )
    a2.removeChild(e3);
  if ("function" === typeof d2) {
    var h2 = d2;
    d2 = function() {
      var a3 = hl(k2);
      h2.call(a3);
    };
  }
  var k2 = cl(a2, 0, false, null, null, false, false, "", ql);
  a2._reactRootContainer = k2;
  a2[uf] = k2.current;
  sf(8 === a2.nodeType ? a2.parentNode : a2);
  Sk(function() {
    gl(b2, k2, c2, d2);
  });
  return k2;
}
function sl(a2, b2, c2, d2, e3) {
  var f2 = c2._reactRootContainer;
  if (f2) {
    var g2 = f2;
    if ("function" === typeof e3) {
      var h2 = e3;
      e3 = function() {
        var a3 = hl(g2);
        h2.call(a3);
      };
    }
    gl(b2, g2, a2, e3);
  } else
    g2 = rl(c2, b2, a2, e3, d2);
  return hl(g2);
}
Ec = function(a2) {
  switch (a2.tag) {
    case 3:
      var b2 = a2.stateNode;
      if (b2.current.memoizedState.isDehydrated) {
        var c2 = tc(b2.pendingLanes);
        0 !== c2 && (Cc(b2, c2 | 1), Ek(b2, B()), 0 === (K & 6) && (Hj = B() + 500, jg()));
      }
      break;
    case 13:
      Sk(function() {
        var b3 = Zg(a2, 1);
        if (null !== b3) {
          var c3 = L();
          mh(b3, a2, 1, c3);
        }
      }), jl(a2, 1);
  }
};
Fc = function(a2) {
  if (13 === a2.tag) {
    var b2 = Zg(a2, 134217728);
    if (null !== b2) {
      var c2 = L();
      mh(b2, a2, 134217728, c2);
    }
    jl(a2, 134217728);
  }
};
Gc = function(a2) {
  if (13 === a2.tag) {
    var b2 = lh(a2), c2 = Zg(a2, b2);
    if (null !== c2) {
      var d2 = L();
      mh(c2, a2, b2, d2);
    }
    jl(a2, b2);
  }
};
Hc = function() {
  return C;
};
Ic = function(a2, b2) {
  var c2 = C;
  try {
    return C = a2, b2();
  } finally {
    C = c2;
  }
};
yb = function(a2, b2, c2) {
  switch (b2) {
    case "input":
      bb(a2, c2);
      b2 = c2.name;
      if ("radio" === c2.type && null != b2) {
        for (c2 = a2; c2.parentNode; )
          c2 = c2.parentNode;
        c2 = c2.querySelectorAll("input[name=" + JSON.stringify("" + b2) + '][type="radio"]');
        for (b2 = 0; b2 < c2.length; b2++) {
          var d2 = c2[b2];
          if (d2 !== a2 && d2.form === a2.form) {
            var e3 = Db(d2);
            if (!e3)
              throw Error(p$1(90));
            Wa(d2);
            bb(d2, e3);
          }
        }
      }
      break;
    case "textarea":
      ib(a2, c2);
      break;
    case "select":
      b2 = c2.value, null != b2 && fb(a2, !!c2.multiple, b2, false);
  }
};
Gb = Rk;
Hb = Sk;
var tl = { usingClientEntryPoint: false, Events: [Cb, ue, Db, Eb, Fb, Rk] }, ul = { findFiberByHostInstance: Wc, bundleType: 0, version: "18.2.0", rendererPackageName: "react-dom" };
var vl = { bundleType: ul.bundleType, version: ul.version, rendererPackageName: ul.rendererPackageName, rendererConfig: ul.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ua.ReactCurrentDispatcher, findHostInstanceByFiber: function(a2) {
  a2 = Zb(a2);
  return null === a2 ? null : a2.stateNode;
}, findFiberByHostInstance: ul.findFiberByHostInstance || kl, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.2.0-next-9e3b772b8-20220608" };
if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
  var wl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!wl.isDisabled && wl.supportsFiber)
    try {
      kc = wl.inject(vl), lc = wl;
    } catch (a2) {
    }
}
reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tl;
reactDom_production_min.createPortal = function(a2, b2) {
  var c2 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  if (!ol(b2))
    throw Error(p$1(200));
  return dl(a2, b2, null, c2);
};
reactDom_production_min.createRoot = function(a2, b2) {
  if (!ol(a2))
    throw Error(p$1(299));
  var c2 = false, d2 = "", e3 = ll;
  null !== b2 && void 0 !== b2 && (true === b2.unstable_strictMode && (c2 = true), void 0 !== b2.identifierPrefix && (d2 = b2.identifierPrefix), void 0 !== b2.onRecoverableError && (e3 = b2.onRecoverableError));
  b2 = cl(a2, 1, false, null, null, c2, false, d2, e3);
  a2[uf] = b2.current;
  sf(8 === a2.nodeType ? a2.parentNode : a2);
  return new ml(b2);
};
reactDom_production_min.findDOMNode = function(a2) {
  if (null == a2)
    return null;
  if (1 === a2.nodeType)
    return a2;
  var b2 = a2._reactInternals;
  if (void 0 === b2) {
    if ("function" === typeof a2.render)
      throw Error(p$1(188));
    a2 = Object.keys(a2).join(",");
    throw Error(p$1(268, a2));
  }
  a2 = Zb(b2);
  a2 = null === a2 ? null : a2.stateNode;
  return a2;
};
reactDom_production_min.flushSync = function(a2) {
  return Sk(a2);
};
reactDom_production_min.hydrate = function(a2, b2, c2) {
  if (!pl(b2))
    throw Error(p$1(200));
  return sl(null, a2, b2, true, c2);
};
reactDom_production_min.hydrateRoot = function(a2, b2, c2) {
  if (!ol(a2))
    throw Error(p$1(405));
  var d2 = null != c2 && c2.hydratedSources || null, e3 = false, f2 = "", g2 = ll;
  null !== c2 && void 0 !== c2 && (true === c2.unstable_strictMode && (e3 = true), void 0 !== c2.identifierPrefix && (f2 = c2.identifierPrefix), void 0 !== c2.onRecoverableError && (g2 = c2.onRecoverableError));
  b2 = fl(b2, null, a2, 1, null != c2 ? c2 : null, e3, false, f2, g2);
  a2[uf] = b2.current;
  sf(a2);
  if (d2)
    for (a2 = 0; a2 < d2.length; a2++)
      c2 = d2[a2], e3 = c2._getVersion, e3 = e3(c2._source), null == b2.mutableSourceEagerHydrationData ? b2.mutableSourceEagerHydrationData = [c2, e3] : b2.mutableSourceEagerHydrationData.push(
        c2,
        e3
      );
  return new nl(b2);
};
reactDom_production_min.render = function(a2, b2, c2) {
  if (!pl(b2))
    throw Error(p$1(200));
  return sl(null, a2, b2, false, c2);
};
reactDom_production_min.unmountComponentAtNode = function(a2) {
  if (!pl(a2))
    throw Error(p$1(40));
  return a2._reactRootContainer ? (Sk(function() {
    sl(null, null, a2, false, function() {
      a2._reactRootContainer = null;
      a2[uf] = null;
    });
  }), true) : false;
};
reactDom_production_min.unstable_batchedUpdates = Rk;
reactDom_production_min.unstable_renderSubtreeIntoContainer = function(a2, b2, c2, d2) {
  if (!pl(c2))
    throw Error(p$1(200));
  if (null == a2 || void 0 === a2._reactInternals)
    throw Error(p$1(38));
  return sl(a2, b2, c2, false, d2);
};
reactDom_production_min.version = "18.2.0-next-9e3b772b8-20220608";
function checkDCE() {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
    return;
  }
  try {
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    console.error(err);
  }
}
{
  checkDCE();
  reactDom.exports = reactDom_production_min;
}
var reactDomExports = reactDom.exports;
const ReactDOM = /* @__PURE__ */ getDefaultExportFromCjs(reactDomExports);
var createRoot;
var m$1 = reactDomExports;
{
  createRoot = m$1.createRoot;
  m$1.hydrateRoot;
}
/**
   * table-core
   *
   * Copyright (c) TanStack
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   */
function functionalUpdate(updater, input) {
  return typeof updater === "function" ? updater(input) : updater;
}
function makeStateUpdater(key, instance) {
  return (updater) => {
    instance.setState((old) => {
      return {
        ...old,
        [key]: functionalUpdate(updater, old[key])
      };
    });
  };
}
function isFunction$5(d2) {
  return d2 instanceof Function;
}
function isNumberArray$1(d2) {
  return Array.isArray(d2) && d2.every((val) => typeof val === "number");
}
function flattenBy(arr, getChildren) {
  const flat = [];
  const recurse = (subArr) => {
    subArr.forEach((item) => {
      flat.push(item);
      const children2 = getChildren(item);
      if (children2 != null && children2.length) {
        recurse(children2);
      }
    });
  };
  recurse(arr);
  return flat;
}
function memo(getDeps, fn, opts) {
  let deps = [];
  let result;
  return (depArgs) => {
    let depTime;
    if (opts.key && opts.debug)
      depTime = Date.now();
    const newDeps = getDeps(depArgs);
    const depsChanged = newDeps.length !== deps.length || newDeps.some((dep, index2) => deps[index2] !== dep);
    if (!depsChanged) {
      return result;
    }
    deps = newDeps;
    let resultTime;
    if (opts.key && opts.debug)
      resultTime = Date.now();
    result = fn(...newDeps);
    opts == null || opts.onChange == null || opts.onChange(result);
    if (opts.key && opts.debug) {
      if (opts != null && opts.debug()) {
        const depEndTime = Math.round((Date.now() - depTime) * 100) / 100;
        const resultEndTime = Math.round((Date.now() - resultTime) * 100) / 100;
        const resultFpsPercentage = resultEndTime / 16;
        const pad2 = (str, num) => {
          str = String(str);
          while (str.length < num) {
            str = " " + str;
          }
          return str;
        };
        console.info(`%c⏱ ${pad2(resultEndTime, 5)} /${pad2(depEndTime, 5)} ms`, `
            font-size: .6rem;
            font-weight: bold;
            color: hsl(${Math.max(0, Math.min(120 - 120 * resultFpsPercentage, 120))}deg 100% 31%);`, opts == null ? void 0 : opts.key);
      }
    }
    return result;
  };
}
function getMemoOptions(tableOptions, debugLevel, key, onChange) {
  return {
    debug: () => {
      var _tableOptions$debugAl;
      return (_tableOptions$debugAl = tableOptions == null ? void 0 : tableOptions.debugAll) != null ? _tableOptions$debugAl : tableOptions[debugLevel];
    },
    key: false,
    onChange
  };
}
function createCell(table, row, column, columnId) {
  const getRenderValue = () => {
    var _cell$getValue;
    return (_cell$getValue = cell.getValue()) != null ? _cell$getValue : table.options.renderFallbackValue;
  };
  const cell = {
    id: `${row.id}_${column.id}`,
    row,
    column,
    getValue: () => row.getValue(columnId),
    renderValue: getRenderValue,
    getContext: memo(() => [table, column, row, cell], (table2, column2, row2, cell2) => ({
      table: table2,
      column: column2,
      row: row2,
      cell: cell2,
      getValue: cell2.getValue,
      renderValue: cell2.renderValue
    }), getMemoOptions(table.options, "debugCells"))
  };
  table._features.forEach((feature2) => {
    feature2.createCell == null || feature2.createCell(cell, column, row, table);
  }, {});
  return cell;
}
function createColumn(table, columnDef, depth, parent) {
  var _ref, _resolvedColumnDef$id;
  const defaultColumn = table._getDefaultColumnDef();
  const resolvedColumnDef = {
    ...defaultColumn,
    ...columnDef
  };
  const accessorKey = resolvedColumnDef.accessorKey;
  let id2 = (_ref = (_resolvedColumnDef$id = resolvedColumnDef.id) != null ? _resolvedColumnDef$id : accessorKey ? accessorKey.replace(".", "_") : void 0) != null ? _ref : typeof resolvedColumnDef.header === "string" ? resolvedColumnDef.header : void 0;
  let accessorFn;
  if (resolvedColumnDef.accessorFn) {
    accessorFn = resolvedColumnDef.accessorFn;
  } else if (accessorKey) {
    if (accessorKey.includes(".")) {
      accessorFn = (originalRow) => {
        let result = originalRow;
        for (const key of accessorKey.split(".")) {
          var _result;
          result = (_result = result) == null ? void 0 : _result[key];
        }
        return result;
      };
    } else {
      accessorFn = (originalRow) => originalRow[resolvedColumnDef.accessorKey];
    }
  }
  if (!id2) {
    throw new Error();
  }
  let column = {
    id: `${String(id2)}`,
    accessorFn,
    parent,
    depth,
    columnDef: resolvedColumnDef,
    columns: [],
    getFlatColumns: memo(() => [true], () => {
      var _column$columns;
      return [column, ...(_column$columns = column.columns) == null ? void 0 : _column$columns.flatMap((d2) => d2.getFlatColumns())];
    }, getMemoOptions(table.options, "debugColumns")),
    getLeafColumns: memo(() => [table._getOrderColumnsFn()], (orderColumns2) => {
      var _column$columns2;
      if ((_column$columns2 = column.columns) != null && _column$columns2.length) {
        let leafColumns = column.columns.flatMap((column2) => column2.getLeafColumns());
        return orderColumns2(leafColumns);
      }
      return [column];
    }, getMemoOptions(table.options, "debugColumns"))
  };
  for (const feature2 of table._features) {
    feature2.createColumn == null || feature2.createColumn(column, table);
  }
  return column;
}
const debug = "debugHeaders";
function createHeader(table, column, options) {
  var _options$id;
  const id2 = (_options$id = options.id) != null ? _options$id : column.id;
  let header = {
    id: id2,
    column,
    index: options.index,
    isPlaceholder: !!options.isPlaceholder,
    placeholderId: options.placeholderId,
    depth: options.depth,
    subHeaders: [],
    colSpan: 0,
    rowSpan: 0,
    headerGroup: null,
    getLeafHeaders: () => {
      const leafHeaders = [];
      const recurseHeader = (h2) => {
        if (h2.subHeaders && h2.subHeaders.length) {
          h2.subHeaders.map(recurseHeader);
        }
        leafHeaders.push(h2);
      };
      recurseHeader(header);
      return leafHeaders;
    },
    getContext: () => ({
      table,
      header,
      column
    })
  };
  table._features.forEach((feature2) => {
    feature2.createHeader == null || feature2.createHeader(header, table);
  });
  return header;
}
const Headers = {
  createTable: (table) => {
    table.getHeaderGroups = memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allColumns, leafColumns, left, right) => {
      var _left$map$filter, _right$map$filter;
      const leftColumns = (_left$map$filter = left == null ? void 0 : left.map((columnId) => leafColumns.find((d2) => d2.id === columnId)).filter(Boolean)) != null ? _left$map$filter : [];
      const rightColumns = (_right$map$filter = right == null ? void 0 : right.map((columnId) => leafColumns.find((d2) => d2.id === columnId)).filter(Boolean)) != null ? _right$map$filter : [];
      const centerColumns = leafColumns.filter((column) => !(left != null && left.includes(column.id)) && !(right != null && right.includes(column.id)));
      const headerGroups = buildHeaderGroups(allColumns, [...leftColumns, ...centerColumns, ...rightColumns], table);
      return headerGroups;
    }, getMemoOptions(table.options, debug));
    table.getCenterHeaderGroups = memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allColumns, leafColumns, left, right) => {
      leafColumns = leafColumns.filter((column) => !(left != null && left.includes(column.id)) && !(right != null && right.includes(column.id)));
      return buildHeaderGroups(allColumns, leafColumns, table, "center");
    }, getMemoOptions(table.options, debug));
    table.getLeftHeaderGroups = memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.left], (allColumns, leafColumns, left) => {
      var _left$map$filter2;
      const orderedLeafColumns = (_left$map$filter2 = left == null ? void 0 : left.map((columnId) => leafColumns.find((d2) => d2.id === columnId)).filter(Boolean)) != null ? _left$map$filter2 : [];
      return buildHeaderGroups(allColumns, orderedLeafColumns, table, "left");
    }, getMemoOptions(table.options, debug));
    table.getRightHeaderGroups = memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.right], (allColumns, leafColumns, right) => {
      var _right$map$filter2;
      const orderedLeafColumns = (_right$map$filter2 = right == null ? void 0 : right.map((columnId) => leafColumns.find((d2) => d2.id === columnId)).filter(Boolean)) != null ? _right$map$filter2 : [];
      return buildHeaderGroups(allColumns, orderedLeafColumns, table, "right");
    }, getMemoOptions(table.options, debug));
    table.getFooterGroups = memo(() => [table.getHeaderGroups()], (headerGroups) => {
      return [...headerGroups].reverse();
    }, getMemoOptions(table.options, debug));
    table.getLeftFooterGroups = memo(() => [table.getLeftHeaderGroups()], (headerGroups) => {
      return [...headerGroups].reverse();
    }, getMemoOptions(table.options, debug));
    table.getCenterFooterGroups = memo(() => [table.getCenterHeaderGroups()], (headerGroups) => {
      return [...headerGroups].reverse();
    }, getMemoOptions(table.options, debug));
    table.getRightFooterGroups = memo(() => [table.getRightHeaderGroups()], (headerGroups) => {
      return [...headerGroups].reverse();
    }, getMemoOptions(table.options, debug));
    table.getFlatHeaders = memo(() => [table.getHeaderGroups()], (headerGroups) => {
      return headerGroups.map((headerGroup) => {
        return headerGroup.headers;
      }).flat();
    }, getMemoOptions(table.options, debug));
    table.getLeftFlatHeaders = memo(() => [table.getLeftHeaderGroups()], (left) => {
      return left.map((headerGroup) => {
        return headerGroup.headers;
      }).flat();
    }, getMemoOptions(table.options, debug));
    table.getCenterFlatHeaders = memo(() => [table.getCenterHeaderGroups()], (left) => {
      return left.map((headerGroup) => {
        return headerGroup.headers;
      }).flat();
    }, getMemoOptions(table.options, debug));
    table.getRightFlatHeaders = memo(() => [table.getRightHeaderGroups()], (left) => {
      return left.map((headerGroup) => {
        return headerGroup.headers;
      }).flat();
    }, getMemoOptions(table.options, debug));
    table.getCenterLeafHeaders = memo(() => [table.getCenterFlatHeaders()], (flatHeaders) => {
      return flatHeaders.filter((header) => {
        var _header$subHeaders;
        return !((_header$subHeaders = header.subHeaders) != null && _header$subHeaders.length);
      });
    }, getMemoOptions(table.options, debug));
    table.getLeftLeafHeaders = memo(() => [table.getLeftFlatHeaders()], (flatHeaders) => {
      return flatHeaders.filter((header) => {
        var _header$subHeaders2;
        return !((_header$subHeaders2 = header.subHeaders) != null && _header$subHeaders2.length);
      });
    }, getMemoOptions(table.options, debug));
    table.getRightLeafHeaders = memo(() => [table.getRightFlatHeaders()], (flatHeaders) => {
      return flatHeaders.filter((header) => {
        var _header$subHeaders3;
        return !((_header$subHeaders3 = header.subHeaders) != null && _header$subHeaders3.length);
      });
    }, getMemoOptions(table.options, debug));
    table.getLeafHeaders = memo(() => [table.getLeftHeaderGroups(), table.getCenterHeaderGroups(), table.getRightHeaderGroups()], (left, center, right) => {
      var _left$0$headers, _left$, _center$0$headers, _center$, _right$0$headers, _right$;
      return [...(_left$0$headers = (_left$ = left[0]) == null ? void 0 : _left$.headers) != null ? _left$0$headers : [], ...(_center$0$headers = (_center$ = center[0]) == null ? void 0 : _center$.headers) != null ? _center$0$headers : [], ...(_right$0$headers = (_right$ = right[0]) == null ? void 0 : _right$.headers) != null ? _right$0$headers : []].map((header) => {
        return header.getLeafHeaders();
      }).flat();
    }, getMemoOptions(table.options, debug));
  }
};
function buildHeaderGroups(allColumns, columnsToGroup, table, headerFamily) {
  var _headerGroups$0$heade, _headerGroups$;
  let maxDepth2 = 0;
  const findMaxDepth = function(columns3, depth) {
    if (depth === void 0) {
      depth = 1;
    }
    maxDepth2 = Math.max(maxDepth2, depth);
    columns3.filter((column) => column.getIsVisible()).forEach((column) => {
      var _column$columns;
      if ((_column$columns = column.columns) != null && _column$columns.length) {
        findMaxDepth(column.columns, depth + 1);
      }
    }, 0);
  };
  findMaxDepth(allColumns);
  let headerGroups = [];
  const createHeaderGroup = (headersToGroup, depth) => {
    const headerGroup = {
      depth,
      id: [headerFamily, `${depth}`].filter(Boolean).join("_"),
      headers: []
    };
    const pendingParentHeaders = [];
    headersToGroup.forEach((headerToGroup) => {
      const latestPendingParentHeader = [...pendingParentHeaders].reverse()[0];
      const isLeafHeader = headerToGroup.column.depth === headerGroup.depth;
      let column;
      let isPlaceholder = false;
      if (isLeafHeader && headerToGroup.column.parent) {
        column = headerToGroup.column.parent;
      } else {
        column = headerToGroup.column;
        isPlaceholder = true;
      }
      if (latestPendingParentHeader && (latestPendingParentHeader == null ? void 0 : latestPendingParentHeader.column) === column) {
        latestPendingParentHeader.subHeaders.push(headerToGroup);
      } else {
        const header = createHeader(table, column, {
          id: [headerFamily, depth, column.id, headerToGroup == null ? void 0 : headerToGroup.id].filter(Boolean).join("_"),
          isPlaceholder,
          placeholderId: isPlaceholder ? `${pendingParentHeaders.filter((d2) => d2.column === column).length}` : void 0,
          depth,
          index: pendingParentHeaders.length
        });
        header.subHeaders.push(headerToGroup);
        pendingParentHeaders.push(header);
      }
      headerGroup.headers.push(headerToGroup);
      headerToGroup.headerGroup = headerGroup;
    });
    headerGroups.push(headerGroup);
    if (depth > 0) {
      createHeaderGroup(pendingParentHeaders, depth - 1);
    }
  };
  const bottomHeaders = columnsToGroup.map((column, index2) => createHeader(table, column, {
    depth: maxDepth2,
    index: index2
  }));
  createHeaderGroup(bottomHeaders, maxDepth2 - 1);
  headerGroups.reverse();
  const recurseHeadersForSpans = (headers) => {
    const filteredHeaders = headers.filter((header) => header.column.getIsVisible());
    return filteredHeaders.map((header) => {
      let colSpan = 0;
      let rowSpan = 0;
      let childRowSpans = [0];
      if (header.subHeaders && header.subHeaders.length) {
        childRowSpans = [];
        recurseHeadersForSpans(header.subHeaders).forEach((_ref) => {
          let {
            colSpan: childColSpan,
            rowSpan: childRowSpan
          } = _ref;
          colSpan += childColSpan;
          childRowSpans.push(childRowSpan);
        });
      } else {
        colSpan = 1;
      }
      const minChildRowSpan = Math.min(...childRowSpans);
      rowSpan = rowSpan + minChildRowSpan;
      header.colSpan = colSpan;
      header.rowSpan = rowSpan;
      return {
        colSpan,
        rowSpan
      };
    });
  };
  recurseHeadersForSpans((_headerGroups$0$heade = (_headerGroups$ = headerGroups[0]) == null ? void 0 : _headerGroups$.headers) != null ? _headerGroups$0$heade : []);
  return headerGroups;
}
const createRow = (table, id2, original, rowIndex, depth, subRows, parentId) => {
  let row = {
    id: id2,
    index: rowIndex,
    original,
    depth,
    parentId,
    _valuesCache: {},
    _uniqueValuesCache: {},
    getValue: (columnId) => {
      if (row._valuesCache.hasOwnProperty(columnId)) {
        return row._valuesCache[columnId];
      }
      const column = table.getColumn(columnId);
      if (!(column != null && column.accessorFn)) {
        return void 0;
      }
      row._valuesCache[columnId] = column.accessorFn(row.original, rowIndex);
      return row._valuesCache[columnId];
    },
    getUniqueValues: (columnId) => {
      if (row._uniqueValuesCache.hasOwnProperty(columnId)) {
        return row._uniqueValuesCache[columnId];
      }
      const column = table.getColumn(columnId);
      if (!(column != null && column.accessorFn)) {
        return void 0;
      }
      if (!column.columnDef.getUniqueValues) {
        row._uniqueValuesCache[columnId] = [row.getValue(columnId)];
        return row._uniqueValuesCache[columnId];
      }
      row._uniqueValuesCache[columnId] = column.columnDef.getUniqueValues(row.original, rowIndex);
      return row._uniqueValuesCache[columnId];
    },
    renderValue: (columnId) => {
      var _row$getValue;
      return (_row$getValue = row.getValue(columnId)) != null ? _row$getValue : table.options.renderFallbackValue;
    },
    subRows: subRows != null ? subRows : [],
    getLeafRows: () => flattenBy(row.subRows, (d2) => d2.subRows),
    getParentRow: () => row.parentId ? table.getRow(row.parentId, true) : void 0,
    getParentRows: () => {
      let parentRows = [];
      let currentRow = row;
      while (true) {
        const parentRow = currentRow.getParentRow();
        if (!parentRow)
          break;
        parentRows.push(parentRow);
        currentRow = parentRow;
      }
      return parentRows.reverse();
    },
    getAllCells: memo(() => [table.getAllLeafColumns()], (leafColumns) => {
      return leafColumns.map((column) => {
        return createCell(table, row, column, column.id);
      });
    }, getMemoOptions(table.options, "debugRows")),
    _getAllCellsByColumnId: memo(() => [row.getAllCells()], (allCells) => {
      return allCells.reduce((acc, cell) => {
        acc[cell.column.id] = cell;
        return acc;
      }, {});
    }, getMemoOptions(table.options, "debugRows"))
  };
  for (let i2 = 0; i2 < table._features.length; i2++) {
    const feature2 = table._features[i2];
    feature2 == null || feature2.createRow == null || feature2.createRow(row, table);
  }
  return row;
};
const ColumnFaceting = {
  createColumn: (column, table) => {
    column._getFacetedRowModel = table.options.getFacetedRowModel && table.options.getFacetedRowModel(table, column.id);
    column.getFacetedRowModel = () => {
      if (!column._getFacetedRowModel) {
        return table.getPreFilteredRowModel();
      }
      return column._getFacetedRowModel();
    };
    column._getFacetedUniqueValues = table.options.getFacetedUniqueValues && table.options.getFacetedUniqueValues(table, column.id);
    column.getFacetedUniqueValues = () => {
      if (!column._getFacetedUniqueValues) {
        return /* @__PURE__ */ new Map();
      }
      return column._getFacetedUniqueValues();
    };
    column._getFacetedMinMaxValues = table.options.getFacetedMinMaxValues && table.options.getFacetedMinMaxValues(table, column.id);
    column.getFacetedMinMaxValues = () => {
      if (!column._getFacetedMinMaxValues) {
        return void 0;
      }
      return column._getFacetedMinMaxValues();
    };
  }
};
const includesString = (row, columnId, filterValue) => {
  var _row$getValue;
  const search = filterValue.toLowerCase();
  return Boolean((_row$getValue = row.getValue(columnId)) == null || (_row$getValue = _row$getValue.toString()) == null || (_row$getValue = _row$getValue.toLowerCase()) == null ? void 0 : _row$getValue.includes(search));
};
includesString.autoRemove = (val) => testFalsey(val);
const includesStringSensitive = (row, columnId, filterValue) => {
  var _row$getValue2;
  return Boolean((_row$getValue2 = row.getValue(columnId)) == null || (_row$getValue2 = _row$getValue2.toString()) == null ? void 0 : _row$getValue2.includes(filterValue));
};
includesStringSensitive.autoRemove = (val) => testFalsey(val);
const equalsString = (row, columnId, filterValue) => {
  var _row$getValue3;
  return ((_row$getValue3 = row.getValue(columnId)) == null || (_row$getValue3 = _row$getValue3.toString()) == null ? void 0 : _row$getValue3.toLowerCase()) === (filterValue == null ? void 0 : filterValue.toLowerCase());
};
equalsString.autoRemove = (val) => testFalsey(val);
const arrIncludes = (row, columnId, filterValue) => {
  var _row$getValue4;
  return (_row$getValue4 = row.getValue(columnId)) == null ? void 0 : _row$getValue4.includes(filterValue);
};
arrIncludes.autoRemove = (val) => testFalsey(val) || !(val != null && val.length);
const arrIncludesAll = (row, columnId, filterValue) => {
  return !filterValue.some((val) => {
    var _row$getValue5;
    return !((_row$getValue5 = row.getValue(columnId)) != null && _row$getValue5.includes(val));
  });
};
arrIncludesAll.autoRemove = (val) => testFalsey(val) || !(val != null && val.length);
const arrIncludesSome = (row, columnId, filterValue) => {
  return filterValue.some((val) => {
    var _row$getValue6;
    return (_row$getValue6 = row.getValue(columnId)) == null ? void 0 : _row$getValue6.includes(val);
  });
};
arrIncludesSome.autoRemove = (val) => testFalsey(val) || !(val != null && val.length);
const equals = (row, columnId, filterValue) => {
  return row.getValue(columnId) === filterValue;
};
equals.autoRemove = (val) => testFalsey(val);
const weakEquals = (row, columnId, filterValue) => {
  return row.getValue(columnId) == filterValue;
};
weakEquals.autoRemove = (val) => testFalsey(val);
const inNumberRange = (row, columnId, filterValue) => {
  let [min2, max2] = filterValue;
  const rowValue = row.getValue(columnId);
  return rowValue >= min2 && rowValue <= max2;
};
inNumberRange.resolveFilterValue = (val) => {
  let [unsafeMin, unsafeMax] = val;
  let parsedMin = typeof unsafeMin !== "number" ? parseFloat(unsafeMin) : unsafeMin;
  let parsedMax = typeof unsafeMax !== "number" ? parseFloat(unsafeMax) : unsafeMax;
  let min2 = unsafeMin === null || Number.isNaN(parsedMin) ? -Infinity : parsedMin;
  let max2 = unsafeMax === null || Number.isNaN(parsedMax) ? Infinity : parsedMax;
  if (min2 > max2) {
    const temp = min2;
    min2 = max2;
    max2 = temp;
  }
  return [min2, max2];
};
inNumberRange.autoRemove = (val) => testFalsey(val) || testFalsey(val[0]) && testFalsey(val[1]);
const filterFns = {
  includesString,
  includesStringSensitive,
  equalsString,
  arrIncludes,
  arrIncludesAll,
  arrIncludesSome,
  equals,
  weakEquals,
  inNumberRange
};
function testFalsey(val) {
  return val === void 0 || val === null || val === "";
}
const ColumnFiltering = {
  getDefaultColumnDef: () => {
    return {
      filterFn: "auto"
    };
  },
  getInitialState: (state) => {
    return {
      columnFilters: [],
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onColumnFiltersChange: makeStateUpdater("columnFilters", table),
      filterFromLeafRows: false,
      maxLeafRowFilterDepth: 100
    };
  },
  createColumn: (column, table) => {
    column.getAutoFilterFn = () => {
      const firstRow = table.getCoreRowModel().flatRows[0];
      const value = firstRow == null ? void 0 : firstRow.getValue(column.id);
      if (typeof value === "string") {
        return filterFns.includesString;
      }
      if (typeof value === "number") {
        return filterFns.inNumberRange;
      }
      if (typeof value === "boolean") {
        return filterFns.equals;
      }
      if (value !== null && typeof value === "object") {
        return filterFns.equals;
      }
      if (Array.isArray(value)) {
        return filterFns.arrIncludes;
      }
      return filterFns.weakEquals;
    };
    column.getFilterFn = () => {
      var _table$options$filter, _table$options$filter2;
      return isFunction$5(column.columnDef.filterFn) ? column.columnDef.filterFn : column.columnDef.filterFn === "auto" ? column.getAutoFilterFn() : (
        // @ts-ignore
        (_table$options$filter = (_table$options$filter2 = table.options.filterFns) == null ? void 0 : _table$options$filter2[column.columnDef.filterFn]) != null ? _table$options$filter : filterFns[column.columnDef.filterFn]
      );
    };
    column.getCanFilter = () => {
      var _column$columnDef$ena, _table$options$enable, _table$options$enable2;
      return ((_column$columnDef$ena = column.columnDef.enableColumnFilter) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableColumnFilters) != null ? _table$options$enable : true) && ((_table$options$enable2 = table.options.enableFilters) != null ? _table$options$enable2 : true) && !!column.accessorFn;
    };
    column.getIsFiltered = () => column.getFilterIndex() > -1;
    column.getFilterValue = () => {
      var _table$getState$colum;
      return (_table$getState$colum = table.getState().columnFilters) == null || (_table$getState$colum = _table$getState$colum.find((d2) => d2.id === column.id)) == null ? void 0 : _table$getState$colum.value;
    };
    column.getFilterIndex = () => {
      var _table$getState$colum2, _table$getState$colum3;
      return (_table$getState$colum2 = (_table$getState$colum3 = table.getState().columnFilters) == null ? void 0 : _table$getState$colum3.findIndex((d2) => d2.id === column.id)) != null ? _table$getState$colum2 : -1;
    };
    column.setFilterValue = (value) => {
      table.setColumnFilters((old) => {
        const filterFn = column.getFilterFn();
        const previousFilter = old == null ? void 0 : old.find((d2) => d2.id === column.id);
        const newFilter = functionalUpdate(value, previousFilter ? previousFilter.value : void 0);
        if (shouldAutoRemoveFilter(filterFn, newFilter, column)) {
          var _old$filter;
          return (_old$filter = old == null ? void 0 : old.filter((d2) => d2.id !== column.id)) != null ? _old$filter : [];
        }
        const newFilterObj = {
          id: column.id,
          value: newFilter
        };
        if (previousFilter) {
          var _old$map;
          return (_old$map = old == null ? void 0 : old.map((d2) => {
            if (d2.id === column.id) {
              return newFilterObj;
            }
            return d2;
          })) != null ? _old$map : [];
        }
        if (old != null && old.length) {
          return [...old, newFilterObj];
        }
        return [newFilterObj];
      });
    };
  },
  createRow: (row, _table) => {
    row.columnFilters = {};
    row.columnFiltersMeta = {};
  },
  createTable: (table) => {
    table.setColumnFilters = (updater) => {
      const leafColumns = table.getAllLeafColumns();
      const updateFn = (old) => {
        var _functionalUpdate;
        return (_functionalUpdate = functionalUpdate(updater, old)) == null ? void 0 : _functionalUpdate.filter((filter2) => {
          const column = leafColumns.find((d2) => d2.id === filter2.id);
          if (column) {
            const filterFn = column.getFilterFn();
            if (shouldAutoRemoveFilter(filterFn, filter2.value, column)) {
              return false;
            }
          }
          return true;
        });
      };
      table.options.onColumnFiltersChange == null || table.options.onColumnFiltersChange(updateFn);
    };
    table.resetColumnFilters = (defaultState) => {
      var _table$initialState$c, _table$initialState;
      table.setColumnFilters(defaultState ? [] : (_table$initialState$c = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.columnFilters) != null ? _table$initialState$c : []);
    };
    table.getPreFilteredRowModel = () => table.getCoreRowModel();
    table.getFilteredRowModel = () => {
      if (!table._getFilteredRowModel && table.options.getFilteredRowModel) {
        table._getFilteredRowModel = table.options.getFilteredRowModel(table);
      }
      if (table.options.manualFiltering || !table._getFilteredRowModel) {
        return table.getPreFilteredRowModel();
      }
      return table._getFilteredRowModel();
    };
  }
};
function shouldAutoRemoveFilter(filterFn, value, column) {
  return (filterFn && filterFn.autoRemove ? filterFn.autoRemove(value, column) : false) || typeof value === "undefined" || typeof value === "string" && !value;
}
const sum = (columnId, _leafRows, childRows) => {
  return childRows.reduce((sum2, next) => {
    const nextValue = next.getValue(columnId);
    return sum2 + (typeof nextValue === "number" ? nextValue : 0);
  }, 0);
};
const min$4 = (columnId, _leafRows, childRows) => {
  let min2;
  childRows.forEach((row) => {
    const value = row.getValue(columnId);
    if (value != null && (min2 > value || min2 === void 0 && value >= value)) {
      min2 = value;
    }
  });
  return min2;
};
const max$4 = (columnId, _leafRows, childRows) => {
  let max2;
  childRows.forEach((row) => {
    const value = row.getValue(columnId);
    if (value != null && (max2 < value || max2 === void 0 && value >= value)) {
      max2 = value;
    }
  });
  return max2;
};
const extent$1 = (columnId, _leafRows, childRows) => {
  let min2;
  let max2;
  childRows.forEach((row) => {
    const value = row.getValue(columnId);
    if (value != null) {
      if (min2 === void 0) {
        if (value >= value)
          min2 = max2 = value;
      } else {
        if (min2 > value)
          min2 = value;
        if (max2 < value)
          max2 = value;
      }
    }
  });
  return [min2, max2];
};
const mean = (columnId, leafRows) => {
  let count2 = 0;
  let sum2 = 0;
  leafRows.forEach((row) => {
    let value = row.getValue(columnId);
    if (value != null && (value = +value) >= value) {
      ++count2, sum2 += value;
    }
  });
  if (count2)
    return sum2 / count2;
  return;
};
const median = (columnId, leafRows) => {
  if (!leafRows.length) {
    return;
  }
  const values = leafRows.map((row) => row.getValue(columnId));
  if (!isNumberArray$1(values)) {
    return;
  }
  if (values.length === 1) {
    return values[0];
  }
  const mid = Math.floor(values.length / 2);
  const nums = values.sort((a2, b2) => a2 - b2);
  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2;
};
const unique = (columnId, leafRows) => {
  return Array.from(new Set(leafRows.map((d2) => d2.getValue(columnId))).values());
};
const uniqueCount = (columnId, leafRows) => {
  return new Set(leafRows.map((d2) => d2.getValue(columnId))).size;
};
const count$1 = (_columnId, leafRows) => {
  return leafRows.length;
};
const aggregationFns = {
  sum,
  min: min$4,
  max: max$4,
  extent: extent$1,
  mean,
  median,
  unique,
  uniqueCount,
  count: count$1
};
const ColumnGrouping = {
  getDefaultColumnDef: () => {
    return {
      aggregatedCell: (props) => {
        var _toString, _props$getValue;
        return (_toString = (_props$getValue = props.getValue()) == null || _props$getValue.toString == null ? void 0 : _props$getValue.toString()) != null ? _toString : null;
      },
      aggregationFn: "auto"
    };
  },
  getInitialState: (state) => {
    return {
      grouping: [],
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onGroupingChange: makeStateUpdater("grouping", table),
      groupedColumnMode: "reorder"
    };
  },
  createColumn: (column, table) => {
    column.toggleGrouping = () => {
      table.setGrouping((old) => {
        if (old != null && old.includes(column.id)) {
          return old.filter((d2) => d2 !== column.id);
        }
        return [...old != null ? old : [], column.id];
      });
    };
    column.getCanGroup = () => {
      var _column$columnDef$ena, _table$options$enable;
      return ((_column$columnDef$ena = column.columnDef.enableGrouping) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableGrouping) != null ? _table$options$enable : true) && (!!column.accessorFn || !!column.columnDef.getGroupingValue);
    };
    column.getIsGrouped = () => {
      var _table$getState$group;
      return (_table$getState$group = table.getState().grouping) == null ? void 0 : _table$getState$group.includes(column.id);
    };
    column.getGroupedIndex = () => {
      var _table$getState$group2;
      return (_table$getState$group2 = table.getState().grouping) == null ? void 0 : _table$getState$group2.indexOf(column.id);
    };
    column.getToggleGroupingHandler = () => {
      const canGroup = column.getCanGroup();
      return () => {
        if (!canGroup)
          return;
        column.toggleGrouping();
      };
    };
    column.getAutoAggregationFn = () => {
      const firstRow = table.getCoreRowModel().flatRows[0];
      const value = firstRow == null ? void 0 : firstRow.getValue(column.id);
      if (typeof value === "number") {
        return aggregationFns.sum;
      }
      if (Object.prototype.toString.call(value) === "[object Date]") {
        return aggregationFns.extent;
      }
    };
    column.getAggregationFn = () => {
      var _table$options$aggreg, _table$options$aggreg2;
      if (!column) {
        throw new Error();
      }
      return isFunction$5(column.columnDef.aggregationFn) ? column.columnDef.aggregationFn : column.columnDef.aggregationFn === "auto" ? column.getAutoAggregationFn() : (_table$options$aggreg = (_table$options$aggreg2 = table.options.aggregationFns) == null ? void 0 : _table$options$aggreg2[column.columnDef.aggregationFn]) != null ? _table$options$aggreg : aggregationFns[column.columnDef.aggregationFn];
    };
  },
  createTable: (table) => {
    table.setGrouping = (updater) => table.options.onGroupingChange == null ? void 0 : table.options.onGroupingChange(updater);
    table.resetGrouping = (defaultState) => {
      var _table$initialState$g, _table$initialState;
      table.setGrouping(defaultState ? [] : (_table$initialState$g = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.grouping) != null ? _table$initialState$g : []);
    };
    table.getPreGroupedRowModel = () => table.getFilteredRowModel();
    table.getGroupedRowModel = () => {
      if (!table._getGroupedRowModel && table.options.getGroupedRowModel) {
        table._getGroupedRowModel = table.options.getGroupedRowModel(table);
      }
      if (table.options.manualGrouping || !table._getGroupedRowModel) {
        return table.getPreGroupedRowModel();
      }
      return table._getGroupedRowModel();
    };
  },
  createRow: (row, table) => {
    row.getIsGrouped = () => !!row.groupingColumnId;
    row.getGroupingValue = (columnId) => {
      if (row._groupingValuesCache.hasOwnProperty(columnId)) {
        return row._groupingValuesCache[columnId];
      }
      const column = table.getColumn(columnId);
      if (!(column != null && column.columnDef.getGroupingValue)) {
        return row.getValue(columnId);
      }
      row._groupingValuesCache[columnId] = column.columnDef.getGroupingValue(row.original);
      return row._groupingValuesCache[columnId];
    };
    row._groupingValuesCache = {};
  },
  createCell: (cell, column, row, table) => {
    cell.getIsGrouped = () => column.getIsGrouped() && column.id === row.groupingColumnId;
    cell.getIsPlaceholder = () => !cell.getIsGrouped() && column.getIsGrouped();
    cell.getIsAggregated = () => {
      var _row$subRows;
      return !cell.getIsGrouped() && !cell.getIsPlaceholder() && !!((_row$subRows = row.subRows) != null && _row$subRows.length);
    };
  }
};
function orderColumns(leafColumns, grouping, groupedColumnMode) {
  if (!(grouping != null && grouping.length) || !groupedColumnMode) {
    return leafColumns;
  }
  const nonGroupingColumns = leafColumns.filter((col) => !grouping.includes(col.id));
  if (groupedColumnMode === "remove") {
    return nonGroupingColumns;
  }
  const groupingColumns = grouping.map((g2) => leafColumns.find((col) => col.id === g2)).filter(Boolean);
  return [...groupingColumns, ...nonGroupingColumns];
}
const ColumnOrdering = {
  getInitialState: (state) => {
    return {
      columnOrder: [],
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onColumnOrderChange: makeStateUpdater("columnOrder", table)
    };
  },
  createColumn: (column, table) => {
    column.getIndex = memo((position) => [_getVisibleLeafColumns(table, position)], (columns3) => columns3.findIndex((d2) => d2.id === column.id), getMemoOptions(table.options, "debugColumns"));
    column.getIsFirstColumn = (position) => {
      var _columns$;
      const columns3 = _getVisibleLeafColumns(table, position);
      return ((_columns$ = columns3[0]) == null ? void 0 : _columns$.id) === column.id;
    };
    column.getIsLastColumn = (position) => {
      var _columns;
      const columns3 = _getVisibleLeafColumns(table, position);
      return ((_columns = columns3[columns3.length - 1]) == null ? void 0 : _columns.id) === column.id;
    };
  },
  createTable: (table) => {
    table.setColumnOrder = (updater) => table.options.onColumnOrderChange == null ? void 0 : table.options.onColumnOrderChange(updater);
    table.resetColumnOrder = (defaultState) => {
      var _table$initialState$c;
      table.setColumnOrder(defaultState ? [] : (_table$initialState$c = table.initialState.columnOrder) != null ? _table$initialState$c : []);
    };
    table._getOrderColumnsFn = memo(() => [table.getState().columnOrder, table.getState().grouping, table.options.groupedColumnMode], (columnOrder, grouping, groupedColumnMode) => (columns3) => {
      let orderedColumns = [];
      if (!(columnOrder != null && columnOrder.length)) {
        orderedColumns = columns3;
      } else {
        const columnOrderCopy = [...columnOrder];
        const columnsCopy = [...columns3];
        while (columnsCopy.length && columnOrderCopy.length) {
          const targetColumnId = columnOrderCopy.shift();
          const foundIndex = columnsCopy.findIndex((d2) => d2.id === targetColumnId);
          if (foundIndex > -1) {
            orderedColumns.push(columnsCopy.splice(foundIndex, 1)[0]);
          }
        }
        orderedColumns = [...orderedColumns, ...columnsCopy];
      }
      return orderColumns(orderedColumns, grouping, groupedColumnMode);
    }, getMemoOptions(table.options, "debugTable"));
  }
};
const getDefaultColumnPinningState = () => ({
  left: [],
  right: []
});
const ColumnPinning = {
  getInitialState: (state) => {
    return {
      columnPinning: getDefaultColumnPinningState(),
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onColumnPinningChange: makeStateUpdater("columnPinning", table)
    };
  },
  createColumn: (column, table) => {
    column.pin = (position) => {
      const columnIds = column.getLeafColumns().map((d2) => d2.id).filter(Boolean);
      table.setColumnPinning((old) => {
        var _old$left3, _old$right3;
        if (position === "right") {
          var _old$left, _old$right;
          return {
            left: ((_old$left = old == null ? void 0 : old.left) != null ? _old$left : []).filter((d2) => !(columnIds != null && columnIds.includes(d2))),
            right: [...((_old$right = old == null ? void 0 : old.right) != null ? _old$right : []).filter((d2) => !(columnIds != null && columnIds.includes(d2))), ...columnIds]
          };
        }
        if (position === "left") {
          var _old$left2, _old$right2;
          return {
            left: [...((_old$left2 = old == null ? void 0 : old.left) != null ? _old$left2 : []).filter((d2) => !(columnIds != null && columnIds.includes(d2))), ...columnIds],
            right: ((_old$right2 = old == null ? void 0 : old.right) != null ? _old$right2 : []).filter((d2) => !(columnIds != null && columnIds.includes(d2)))
          };
        }
        return {
          left: ((_old$left3 = old == null ? void 0 : old.left) != null ? _old$left3 : []).filter((d2) => !(columnIds != null && columnIds.includes(d2))),
          right: ((_old$right3 = old == null ? void 0 : old.right) != null ? _old$right3 : []).filter((d2) => !(columnIds != null && columnIds.includes(d2)))
        };
      });
    };
    column.getCanPin = () => {
      const leafColumns = column.getLeafColumns();
      return leafColumns.some((d2) => {
        var _d$columnDef$enablePi, _ref, _table$options$enable;
        return ((_d$columnDef$enablePi = d2.columnDef.enablePinning) != null ? _d$columnDef$enablePi : true) && ((_ref = (_table$options$enable = table.options.enableColumnPinning) != null ? _table$options$enable : table.options.enablePinning) != null ? _ref : true);
      });
    };
    column.getIsPinned = () => {
      const leafColumnIds = column.getLeafColumns().map((d2) => d2.id);
      const {
        left,
        right
      } = table.getState().columnPinning;
      const isLeft = leafColumnIds.some((d2) => left == null ? void 0 : left.includes(d2));
      const isRight = leafColumnIds.some((d2) => right == null ? void 0 : right.includes(d2));
      return isLeft ? "left" : isRight ? "right" : false;
    };
    column.getPinnedIndex = () => {
      var _table$getState$colum, _table$getState$colum2;
      const position = column.getIsPinned();
      return position ? (_table$getState$colum = (_table$getState$colum2 = table.getState().columnPinning) == null || (_table$getState$colum2 = _table$getState$colum2[position]) == null ? void 0 : _table$getState$colum2.indexOf(column.id)) != null ? _table$getState$colum : -1 : 0;
    };
  },
  createRow: (row, table) => {
    row.getCenterVisibleCells = memo(() => [row._getAllVisibleCells(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allCells, left, right) => {
      const leftAndRight = [...left != null ? left : [], ...right != null ? right : []];
      return allCells.filter((d2) => !leftAndRight.includes(d2.column.id));
    }, getMemoOptions(table.options, "debugRows"));
    row.getLeftVisibleCells = memo(() => [row._getAllVisibleCells(), table.getState().columnPinning.left], (allCells, left) => {
      const cells = (left != null ? left : []).map((columnId) => allCells.find((cell) => cell.column.id === columnId)).filter(Boolean).map((d2) => ({
        ...d2,
        position: "left"
      }));
      return cells;
    }, getMemoOptions(table.options, "debugRows"));
    row.getRightVisibleCells = memo(() => [row._getAllVisibleCells(), table.getState().columnPinning.right], (allCells, right) => {
      const cells = (right != null ? right : []).map((columnId) => allCells.find((cell) => cell.column.id === columnId)).filter(Boolean).map((d2) => ({
        ...d2,
        position: "right"
      }));
      return cells;
    }, getMemoOptions(table.options, "debugRows"));
  },
  createTable: (table) => {
    table.setColumnPinning = (updater) => table.options.onColumnPinningChange == null ? void 0 : table.options.onColumnPinningChange(updater);
    table.resetColumnPinning = (defaultState) => {
      var _table$initialState$c, _table$initialState;
      return table.setColumnPinning(defaultState ? getDefaultColumnPinningState() : (_table$initialState$c = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.columnPinning) != null ? _table$initialState$c : getDefaultColumnPinningState());
    };
    table.getIsSomeColumnsPinned = (position) => {
      var _pinningState$positio;
      const pinningState = table.getState().columnPinning;
      if (!position) {
        var _pinningState$left, _pinningState$right;
        return Boolean(((_pinningState$left = pinningState.left) == null ? void 0 : _pinningState$left.length) || ((_pinningState$right = pinningState.right) == null ? void 0 : _pinningState$right.length));
      }
      return Boolean((_pinningState$positio = pinningState[position]) == null ? void 0 : _pinningState$positio.length);
    };
    table.getLeftLeafColumns = memo(() => [table.getAllLeafColumns(), table.getState().columnPinning.left], (allColumns, left) => {
      return (left != null ? left : []).map((columnId) => allColumns.find((column) => column.id === columnId)).filter(Boolean);
    }, getMemoOptions(table.options, "debugColumns"));
    table.getRightLeafColumns = memo(() => [table.getAllLeafColumns(), table.getState().columnPinning.right], (allColumns, right) => {
      return (right != null ? right : []).map((columnId) => allColumns.find((column) => column.id === columnId)).filter(Boolean);
    }, getMemoOptions(table.options, "debugColumns"));
    table.getCenterLeafColumns = memo(() => [table.getAllLeafColumns(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allColumns, left, right) => {
      const leftAndRight = [...left != null ? left : [], ...right != null ? right : []];
      return allColumns.filter((d2) => !leftAndRight.includes(d2.id));
    }, getMemoOptions(table.options, "debugColumns"));
  }
};
const defaultColumnSizing = {
  size: 150,
  minSize: 20,
  maxSize: Number.MAX_SAFE_INTEGER
};
const getDefaultColumnSizingInfoState = () => ({
  startOffset: null,
  startSize: null,
  deltaOffset: null,
  deltaPercentage: null,
  isResizingColumn: false,
  columnSizingStart: []
});
const ColumnSizing = {
  getDefaultColumnDef: () => {
    return defaultColumnSizing;
  },
  getInitialState: (state) => {
    return {
      columnSizing: {},
      columnSizingInfo: getDefaultColumnSizingInfoState(),
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      columnResizeMode: "onEnd",
      columnResizeDirection: "ltr",
      onColumnSizingChange: makeStateUpdater("columnSizing", table),
      onColumnSizingInfoChange: makeStateUpdater("columnSizingInfo", table)
    };
  },
  createColumn: (column, table) => {
    column.getSize = () => {
      var _column$columnDef$min, _ref, _column$columnDef$max;
      const columnSize = table.getState().columnSizing[column.id];
      return Math.min(Math.max((_column$columnDef$min = column.columnDef.minSize) != null ? _column$columnDef$min : defaultColumnSizing.minSize, (_ref = columnSize != null ? columnSize : column.columnDef.size) != null ? _ref : defaultColumnSizing.size), (_column$columnDef$max = column.columnDef.maxSize) != null ? _column$columnDef$max : defaultColumnSizing.maxSize);
    };
    column.getStart = memo((position) => [position, _getVisibleLeafColumns(table, position), table.getState().columnSizing], (position, columns3) => columns3.slice(0, column.getIndex(position)).reduce((sum2, column2) => sum2 + column2.getSize(), 0), getMemoOptions(table.options, "debugColumns"));
    column.getAfter = memo((position) => [position, _getVisibleLeafColumns(table, position), table.getState().columnSizing], (position, columns3) => columns3.slice(column.getIndex(position) + 1).reduce((sum2, column2) => sum2 + column2.getSize(), 0), getMemoOptions(table.options, "debugColumns"));
    column.resetSize = () => {
      table.setColumnSizing((_ref2) => {
        let {
          [column.id]: _,
          ...rest
        } = _ref2;
        return rest;
      });
    };
    column.getCanResize = () => {
      var _column$columnDef$ena, _table$options$enable;
      return ((_column$columnDef$ena = column.columnDef.enableResizing) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableColumnResizing) != null ? _table$options$enable : true);
    };
    column.getIsResizing = () => {
      return table.getState().columnSizingInfo.isResizingColumn === column.id;
    };
  },
  createHeader: (header, table) => {
    header.getSize = () => {
      let sum2 = 0;
      const recurse = (header2) => {
        if (header2.subHeaders.length) {
          header2.subHeaders.forEach(recurse);
        } else {
          var _header$column$getSiz;
          sum2 += (_header$column$getSiz = header2.column.getSize()) != null ? _header$column$getSiz : 0;
        }
      };
      recurse(header);
      return sum2;
    };
    header.getStart = () => {
      if (header.index > 0) {
        const prevSiblingHeader = header.headerGroup.headers[header.index - 1];
        return prevSiblingHeader.getStart() + prevSiblingHeader.getSize();
      }
      return 0;
    };
    header.getResizeHandler = (_contextDocument) => {
      const column = table.getColumn(header.column.id);
      const canResize = column == null ? void 0 : column.getCanResize();
      return (e3) => {
        if (!column || !canResize) {
          return;
        }
        e3.persist == null || e3.persist();
        if (isTouchStartEvent(e3)) {
          if (e3.touches && e3.touches.length > 1) {
            return;
          }
        }
        const startSize = header.getSize();
        const columnSizingStart = header ? header.getLeafHeaders().map((d2) => [d2.column.id, d2.column.getSize()]) : [[column.id, column.getSize()]];
        const clientX = isTouchStartEvent(e3) ? Math.round(e3.touches[0].clientX) : e3.clientX;
        const newColumnSizing = {};
        const updateOffset = (eventType, clientXPos) => {
          if (typeof clientXPos !== "number") {
            return;
          }
          table.setColumnSizingInfo((old) => {
            var _old$startOffset, _old$startSize;
            const deltaDirection = table.options.columnResizeDirection === "rtl" ? -1 : 1;
            const deltaOffset = (clientXPos - ((_old$startOffset = old == null ? void 0 : old.startOffset) != null ? _old$startOffset : 0)) * deltaDirection;
            const deltaPercentage = Math.max(deltaOffset / ((_old$startSize = old == null ? void 0 : old.startSize) != null ? _old$startSize : 0), -0.999999);
            old.columnSizingStart.forEach((_ref3) => {
              let [columnId, headerSize] = _ref3;
              newColumnSizing[columnId] = Math.round(Math.max(headerSize + headerSize * deltaPercentage, 0) * 100) / 100;
            });
            return {
              ...old,
              deltaOffset,
              deltaPercentage
            };
          });
          if (table.options.columnResizeMode === "onChange" || eventType === "end") {
            table.setColumnSizing((old) => ({
              ...old,
              ...newColumnSizing
            }));
          }
        };
        const onMove = (clientXPos) => updateOffset("move", clientXPos);
        const onEnd = (clientXPos) => {
          updateOffset("end", clientXPos);
          table.setColumnSizingInfo((old) => ({
            ...old,
            isResizingColumn: false,
            startOffset: null,
            startSize: null,
            deltaOffset: null,
            deltaPercentage: null,
            columnSizingStart: []
          }));
        };
        const contextDocument = _contextDocument || typeof document !== "undefined" ? document : null;
        const mouseEvents = {
          moveHandler: (e22) => onMove(e22.clientX),
          upHandler: (e22) => {
            contextDocument == null || contextDocument.removeEventListener("mousemove", mouseEvents.moveHandler);
            contextDocument == null || contextDocument.removeEventListener("mouseup", mouseEvents.upHandler);
            onEnd(e22.clientX);
          }
        };
        const touchEvents = {
          moveHandler: (e22) => {
            if (e22.cancelable) {
              e22.preventDefault();
              e22.stopPropagation();
            }
            onMove(e22.touches[0].clientX);
            return false;
          },
          upHandler: (e22) => {
            var _e$touches$;
            contextDocument == null || contextDocument.removeEventListener("touchmove", touchEvents.moveHandler);
            contextDocument == null || contextDocument.removeEventListener("touchend", touchEvents.upHandler);
            if (e22.cancelable) {
              e22.preventDefault();
              e22.stopPropagation();
            }
            onEnd((_e$touches$ = e22.touches[0]) == null ? void 0 : _e$touches$.clientX);
          }
        };
        const passiveIfSupported = passiveEventSupported() ? {
          passive: false
        } : false;
        if (isTouchStartEvent(e3)) {
          contextDocument == null || contextDocument.addEventListener("touchmove", touchEvents.moveHandler, passiveIfSupported);
          contextDocument == null || contextDocument.addEventListener("touchend", touchEvents.upHandler, passiveIfSupported);
        } else {
          contextDocument == null || contextDocument.addEventListener("mousemove", mouseEvents.moveHandler, passiveIfSupported);
          contextDocument == null || contextDocument.addEventListener("mouseup", mouseEvents.upHandler, passiveIfSupported);
        }
        table.setColumnSizingInfo((old) => ({
          ...old,
          startOffset: clientX,
          startSize,
          deltaOffset: 0,
          deltaPercentage: 0,
          columnSizingStart,
          isResizingColumn: column.id
        }));
      };
    };
  },
  createTable: (table) => {
    table.setColumnSizing = (updater) => table.options.onColumnSizingChange == null ? void 0 : table.options.onColumnSizingChange(updater);
    table.setColumnSizingInfo = (updater) => table.options.onColumnSizingInfoChange == null ? void 0 : table.options.onColumnSizingInfoChange(updater);
    table.resetColumnSizing = (defaultState) => {
      var _table$initialState$c;
      table.setColumnSizing(defaultState ? {} : (_table$initialState$c = table.initialState.columnSizing) != null ? _table$initialState$c : {});
    };
    table.resetHeaderSizeInfo = (defaultState) => {
      var _table$initialState$c2;
      table.setColumnSizingInfo(defaultState ? getDefaultColumnSizingInfoState() : (_table$initialState$c2 = table.initialState.columnSizingInfo) != null ? _table$initialState$c2 : getDefaultColumnSizingInfoState());
    };
    table.getTotalSize = () => {
      var _table$getHeaderGroup, _table$getHeaderGroup2;
      return (_table$getHeaderGroup = (_table$getHeaderGroup2 = table.getHeaderGroups()[0]) == null ? void 0 : _table$getHeaderGroup2.headers.reduce((sum2, header) => {
        return sum2 + header.getSize();
      }, 0)) != null ? _table$getHeaderGroup : 0;
    };
    table.getLeftTotalSize = () => {
      var _table$getLeftHeaderG, _table$getLeftHeaderG2;
      return (_table$getLeftHeaderG = (_table$getLeftHeaderG2 = table.getLeftHeaderGroups()[0]) == null ? void 0 : _table$getLeftHeaderG2.headers.reduce((sum2, header) => {
        return sum2 + header.getSize();
      }, 0)) != null ? _table$getLeftHeaderG : 0;
    };
    table.getCenterTotalSize = () => {
      var _table$getCenterHeade, _table$getCenterHeade2;
      return (_table$getCenterHeade = (_table$getCenterHeade2 = table.getCenterHeaderGroups()[0]) == null ? void 0 : _table$getCenterHeade2.headers.reduce((sum2, header) => {
        return sum2 + header.getSize();
      }, 0)) != null ? _table$getCenterHeade : 0;
    };
    table.getRightTotalSize = () => {
      var _table$getRightHeader, _table$getRightHeader2;
      return (_table$getRightHeader = (_table$getRightHeader2 = table.getRightHeaderGroups()[0]) == null ? void 0 : _table$getRightHeader2.headers.reduce((sum2, header) => {
        return sum2 + header.getSize();
      }, 0)) != null ? _table$getRightHeader : 0;
    };
  }
};
let passiveSupported$1 = null;
function passiveEventSupported() {
  if (typeof passiveSupported$1 === "boolean")
    return passiveSupported$1;
  let supported = false;
  try {
    const options = {
      get passive() {
        supported = true;
        return false;
      }
    };
    const noop2 = () => {
    };
    window.addEventListener("test", noop2, options);
    window.removeEventListener("test", noop2);
  } catch (err) {
    supported = false;
  }
  passiveSupported$1 = supported;
  return passiveSupported$1;
}
function isTouchStartEvent(e3) {
  return e3.type === "touchstart";
}
const ColumnVisibility = {
  getInitialState: (state) => {
    return {
      columnVisibility: {},
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onColumnVisibilityChange: makeStateUpdater("columnVisibility", table)
    };
  },
  createColumn: (column, table) => {
    column.toggleVisibility = (value) => {
      if (column.getCanHide()) {
        table.setColumnVisibility((old) => ({
          ...old,
          [column.id]: value != null ? value : !column.getIsVisible()
        }));
      }
    };
    column.getIsVisible = () => {
      var _ref, _table$getState$colum;
      const childColumns = column.columns;
      return (_ref = childColumns.length ? childColumns.some((c2) => c2.getIsVisible()) : (_table$getState$colum = table.getState().columnVisibility) == null ? void 0 : _table$getState$colum[column.id]) != null ? _ref : true;
    };
    column.getCanHide = () => {
      var _column$columnDef$ena, _table$options$enable;
      return ((_column$columnDef$ena = column.columnDef.enableHiding) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableHiding) != null ? _table$options$enable : true);
    };
    column.getToggleVisibilityHandler = () => {
      return (e3) => {
        column.toggleVisibility == null || column.toggleVisibility(e3.target.checked);
      };
    };
  },
  createRow: (row, table) => {
    row._getAllVisibleCells = memo(() => [row.getAllCells(), table.getState().columnVisibility], (cells) => {
      return cells.filter((cell) => cell.column.getIsVisible());
    }, getMemoOptions(table.options, "debugRows"));
    row.getVisibleCells = memo(() => [row.getLeftVisibleCells(), row.getCenterVisibleCells(), row.getRightVisibleCells()], (left, center, right) => [...left, ...center, ...right], getMemoOptions(table.options, "debugRows"));
  },
  createTable: (table) => {
    const makeVisibleColumnsMethod = (key, getColumns2) => {
      return memo(() => [getColumns2(), getColumns2().filter((d2) => d2.getIsVisible()).map((d2) => d2.id).join("_")], (columns3) => {
        return columns3.filter((d2) => d2.getIsVisible == null ? void 0 : d2.getIsVisible());
      }, getMemoOptions(table.options, "debugColumns"));
    };
    table.getVisibleFlatColumns = makeVisibleColumnsMethod("getVisibleFlatColumns", () => table.getAllFlatColumns());
    table.getVisibleLeafColumns = makeVisibleColumnsMethod("getVisibleLeafColumns", () => table.getAllLeafColumns());
    table.getLeftVisibleLeafColumns = makeVisibleColumnsMethod("getLeftVisibleLeafColumns", () => table.getLeftLeafColumns());
    table.getRightVisibleLeafColumns = makeVisibleColumnsMethod("getRightVisibleLeafColumns", () => table.getRightLeafColumns());
    table.getCenterVisibleLeafColumns = makeVisibleColumnsMethod("getCenterVisibleLeafColumns", () => table.getCenterLeafColumns());
    table.setColumnVisibility = (updater) => table.options.onColumnVisibilityChange == null ? void 0 : table.options.onColumnVisibilityChange(updater);
    table.resetColumnVisibility = (defaultState) => {
      var _table$initialState$c;
      table.setColumnVisibility(defaultState ? {} : (_table$initialState$c = table.initialState.columnVisibility) != null ? _table$initialState$c : {});
    };
    table.toggleAllColumnsVisible = (value) => {
      var _value;
      value = (_value = value) != null ? _value : !table.getIsAllColumnsVisible();
      table.setColumnVisibility(table.getAllLeafColumns().reduce((obj, column) => ({
        ...obj,
        [column.id]: !value ? !(column.getCanHide != null && column.getCanHide()) : value
      }), {}));
    };
    table.getIsAllColumnsVisible = () => !table.getAllLeafColumns().some((column) => !(column.getIsVisible != null && column.getIsVisible()));
    table.getIsSomeColumnsVisible = () => table.getAllLeafColumns().some((column) => column.getIsVisible == null ? void 0 : column.getIsVisible());
    table.getToggleAllColumnsVisibilityHandler = () => {
      return (e3) => {
        var _target;
        table.toggleAllColumnsVisible((_target = e3.target) == null ? void 0 : _target.checked);
      };
    };
  }
};
function _getVisibleLeafColumns(table, position) {
  return !position ? table.getVisibleLeafColumns() : position === "center" ? table.getCenterVisibleLeafColumns() : position === "left" ? table.getLeftVisibleLeafColumns() : table.getRightVisibleLeafColumns();
}
const GlobalFaceting = {
  createTable: (table) => {
    table._getGlobalFacetedRowModel = table.options.getFacetedRowModel && table.options.getFacetedRowModel(table, "__global__");
    table.getGlobalFacetedRowModel = () => {
      if (table.options.manualFiltering || !table._getGlobalFacetedRowModel) {
        return table.getPreFilteredRowModel();
      }
      return table._getGlobalFacetedRowModel();
    };
    table._getGlobalFacetedUniqueValues = table.options.getFacetedUniqueValues && table.options.getFacetedUniqueValues(table, "__global__");
    table.getGlobalFacetedUniqueValues = () => {
      if (!table._getGlobalFacetedUniqueValues) {
        return /* @__PURE__ */ new Map();
      }
      return table._getGlobalFacetedUniqueValues();
    };
    table._getGlobalFacetedMinMaxValues = table.options.getFacetedMinMaxValues && table.options.getFacetedMinMaxValues(table, "__global__");
    table.getGlobalFacetedMinMaxValues = () => {
      if (!table._getGlobalFacetedMinMaxValues) {
        return;
      }
      return table._getGlobalFacetedMinMaxValues();
    };
  }
};
const GlobalFiltering = {
  getInitialState: (state) => {
    return {
      globalFilter: void 0,
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onGlobalFilterChange: makeStateUpdater("globalFilter", table),
      globalFilterFn: "auto",
      getColumnCanGlobalFilter: (column) => {
        var _table$getCoreRowMode;
        const value = (_table$getCoreRowMode = table.getCoreRowModel().flatRows[0]) == null || (_table$getCoreRowMode = _table$getCoreRowMode._getAllCellsByColumnId()[column.id]) == null ? void 0 : _table$getCoreRowMode.getValue();
        return typeof value === "string" || typeof value === "number";
      }
    };
  },
  createColumn: (column, table) => {
    column.getCanGlobalFilter = () => {
      var _column$columnDef$ena, _table$options$enable, _table$options$enable2, _table$options$getCol;
      return ((_column$columnDef$ena = column.columnDef.enableGlobalFilter) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableGlobalFilter) != null ? _table$options$enable : true) && ((_table$options$enable2 = table.options.enableFilters) != null ? _table$options$enable2 : true) && ((_table$options$getCol = table.options.getColumnCanGlobalFilter == null ? void 0 : table.options.getColumnCanGlobalFilter(column)) != null ? _table$options$getCol : true) && !!column.accessorFn;
    };
  },
  createTable: (table) => {
    table.getGlobalAutoFilterFn = () => {
      return filterFns.includesString;
    };
    table.getGlobalFilterFn = () => {
      var _table$options$filter, _table$options$filter2;
      const {
        globalFilterFn
      } = table.options;
      return isFunction$5(globalFilterFn) ? globalFilterFn : globalFilterFn === "auto" ? table.getGlobalAutoFilterFn() : (_table$options$filter = (_table$options$filter2 = table.options.filterFns) == null ? void 0 : _table$options$filter2[globalFilterFn]) != null ? _table$options$filter : filterFns[globalFilterFn];
    };
    table.setGlobalFilter = (updater) => {
      table.options.onGlobalFilterChange == null || table.options.onGlobalFilterChange(updater);
    };
    table.resetGlobalFilter = (defaultState) => {
      table.setGlobalFilter(defaultState ? void 0 : table.initialState.globalFilter);
    };
  }
};
const RowExpanding = {
  getInitialState: (state) => {
    return {
      expanded: {},
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onExpandedChange: makeStateUpdater("expanded", table),
      paginateExpandedRows: true
    };
  },
  createTable: (table) => {
    let registered = false;
    let queued = false;
    table._autoResetExpanded = () => {
      var _ref, _table$options$autoRe;
      if (!registered) {
        table._queue(() => {
          registered = true;
        });
        return;
      }
      if ((_ref = (_table$options$autoRe = table.options.autoResetAll) != null ? _table$options$autoRe : table.options.autoResetExpanded) != null ? _ref : !table.options.manualExpanding) {
        if (queued)
          return;
        queued = true;
        table._queue(() => {
          table.resetExpanded();
          queued = false;
        });
      }
    };
    table.setExpanded = (updater) => table.options.onExpandedChange == null ? void 0 : table.options.onExpandedChange(updater);
    table.toggleAllRowsExpanded = (expanded) => {
      if (expanded != null ? expanded : !table.getIsAllRowsExpanded()) {
        table.setExpanded(true);
      } else {
        table.setExpanded({});
      }
    };
    table.resetExpanded = (defaultState) => {
      var _table$initialState$e, _table$initialState;
      table.setExpanded(defaultState ? {} : (_table$initialState$e = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.expanded) != null ? _table$initialState$e : {});
    };
    table.getCanSomeRowsExpand = () => {
      return table.getPrePaginationRowModel().flatRows.some((row) => row.getCanExpand());
    };
    table.getToggleAllRowsExpandedHandler = () => {
      return (e3) => {
        e3.persist == null || e3.persist();
        table.toggleAllRowsExpanded();
      };
    };
    table.getIsSomeRowsExpanded = () => {
      const expanded = table.getState().expanded;
      return expanded === true || Object.values(expanded).some(Boolean);
    };
    table.getIsAllRowsExpanded = () => {
      const expanded = table.getState().expanded;
      if (typeof expanded === "boolean") {
        return expanded === true;
      }
      if (!Object.keys(expanded).length) {
        return false;
      }
      if (table.getRowModel().flatRows.some((row) => !row.getIsExpanded())) {
        return false;
      }
      return true;
    };
    table.getExpandedDepth = () => {
      let maxDepth2 = 0;
      const rowIds = table.getState().expanded === true ? Object.keys(table.getRowModel().rowsById) : Object.keys(table.getState().expanded);
      rowIds.forEach((id2) => {
        const splitId = id2.split(".");
        maxDepth2 = Math.max(maxDepth2, splitId.length);
      });
      return maxDepth2;
    };
    table.getPreExpandedRowModel = () => table.getSortedRowModel();
    table.getExpandedRowModel = () => {
      if (!table._getExpandedRowModel && table.options.getExpandedRowModel) {
        table._getExpandedRowModel = table.options.getExpandedRowModel(table);
      }
      if (table.options.manualExpanding || !table._getExpandedRowModel) {
        return table.getPreExpandedRowModel();
      }
      return table._getExpandedRowModel();
    };
  },
  createRow: (row, table) => {
    row.toggleExpanded = (expanded) => {
      table.setExpanded((old) => {
        var _expanded;
        const exists = old === true ? true : !!(old != null && old[row.id]);
        let oldExpanded = {};
        if (old === true) {
          Object.keys(table.getRowModel().rowsById).forEach((rowId) => {
            oldExpanded[rowId] = true;
          });
        } else {
          oldExpanded = old;
        }
        expanded = (_expanded = expanded) != null ? _expanded : !exists;
        if (!exists && expanded) {
          return {
            ...oldExpanded,
            [row.id]: true
          };
        }
        if (exists && !expanded) {
          const {
            [row.id]: _,
            ...rest
          } = oldExpanded;
          return rest;
        }
        return old;
      });
    };
    row.getIsExpanded = () => {
      var _table$options$getIsR;
      const expanded = table.getState().expanded;
      return !!((_table$options$getIsR = table.options.getIsRowExpanded == null ? void 0 : table.options.getIsRowExpanded(row)) != null ? _table$options$getIsR : expanded === true || (expanded == null ? void 0 : expanded[row.id]));
    };
    row.getCanExpand = () => {
      var _table$options$getRow, _table$options$enable, _row$subRows;
      return (_table$options$getRow = table.options.getRowCanExpand == null ? void 0 : table.options.getRowCanExpand(row)) != null ? _table$options$getRow : ((_table$options$enable = table.options.enableExpanding) != null ? _table$options$enable : true) && !!((_row$subRows = row.subRows) != null && _row$subRows.length);
    };
    row.getIsAllParentsExpanded = () => {
      let isFullyExpanded = true;
      let currentRow = row;
      while (isFullyExpanded && currentRow.parentId) {
        currentRow = table.getRow(currentRow.parentId, true);
        isFullyExpanded = currentRow.getIsExpanded();
      }
      return isFullyExpanded;
    };
    row.getToggleExpandedHandler = () => {
      const canExpand = row.getCanExpand();
      return () => {
        if (!canExpand)
          return;
        row.toggleExpanded();
      };
    };
  }
};
const defaultPageIndex = 0;
const defaultPageSize = 10;
const getDefaultPaginationState = () => ({
  pageIndex: defaultPageIndex,
  pageSize: defaultPageSize
});
const RowPagination = {
  getInitialState: (state) => {
    return {
      ...state,
      pagination: {
        ...getDefaultPaginationState(),
        ...state == null ? void 0 : state.pagination
      }
    };
  },
  getDefaultOptions: (table) => {
    return {
      onPaginationChange: makeStateUpdater("pagination", table)
    };
  },
  createTable: (table) => {
    let registered = false;
    let queued = false;
    table._autoResetPageIndex = () => {
      var _ref, _table$options$autoRe;
      if (!registered) {
        table._queue(() => {
          registered = true;
        });
        return;
      }
      if ((_ref = (_table$options$autoRe = table.options.autoResetAll) != null ? _table$options$autoRe : table.options.autoResetPageIndex) != null ? _ref : !table.options.manualPagination) {
        if (queued)
          return;
        queued = true;
        table._queue(() => {
          table.resetPageIndex();
          queued = false;
        });
      }
    };
    table.setPagination = (updater) => {
      const safeUpdater = (old) => {
        let newState = functionalUpdate(updater, old);
        return newState;
      };
      return table.options.onPaginationChange == null ? void 0 : table.options.onPaginationChange(safeUpdater);
    };
    table.resetPagination = (defaultState) => {
      var _table$initialState$p;
      table.setPagination(defaultState ? getDefaultPaginationState() : (_table$initialState$p = table.initialState.pagination) != null ? _table$initialState$p : getDefaultPaginationState());
    };
    table.setPageIndex = (updater) => {
      table.setPagination((old) => {
        let pageIndex = functionalUpdate(updater, old.pageIndex);
        const maxPageIndex = typeof table.options.pageCount === "undefined" || table.options.pageCount === -1 ? Number.MAX_SAFE_INTEGER : table.options.pageCount - 1;
        pageIndex = Math.max(0, Math.min(pageIndex, maxPageIndex));
        return {
          ...old,
          pageIndex
        };
      });
    };
    table.resetPageIndex = (defaultState) => {
      var _table$initialState$p2, _table$initialState;
      table.setPageIndex(defaultState ? defaultPageIndex : (_table$initialState$p2 = (_table$initialState = table.initialState) == null || (_table$initialState = _table$initialState.pagination) == null ? void 0 : _table$initialState.pageIndex) != null ? _table$initialState$p2 : defaultPageIndex);
    };
    table.resetPageSize = (defaultState) => {
      var _table$initialState$p3, _table$initialState2;
      table.setPageSize(defaultState ? defaultPageSize : (_table$initialState$p3 = (_table$initialState2 = table.initialState) == null || (_table$initialState2 = _table$initialState2.pagination) == null ? void 0 : _table$initialState2.pageSize) != null ? _table$initialState$p3 : defaultPageSize);
    };
    table.setPageSize = (updater) => {
      table.setPagination((old) => {
        const pageSize = Math.max(1, functionalUpdate(updater, old.pageSize));
        const topRowIndex = old.pageSize * old.pageIndex;
        const pageIndex = Math.floor(topRowIndex / pageSize);
        return {
          ...old,
          pageIndex,
          pageSize
        };
      });
    };
    table.setPageCount = (updater) => table.setPagination((old) => {
      var _table$options$pageCo;
      let newPageCount = functionalUpdate(updater, (_table$options$pageCo = table.options.pageCount) != null ? _table$options$pageCo : -1);
      if (typeof newPageCount === "number") {
        newPageCount = Math.max(-1, newPageCount);
      }
      return {
        ...old,
        pageCount: newPageCount
      };
    });
    table.getPageOptions = memo(() => [table.getPageCount()], (pageCount) => {
      let pageOptions = [];
      if (pageCount && pageCount > 0) {
        pageOptions = [...new Array(pageCount)].fill(null).map((_, i2) => i2);
      }
      return pageOptions;
    }, getMemoOptions(table.options, "debugTable"));
    table.getCanPreviousPage = () => table.getState().pagination.pageIndex > 0;
    table.getCanNextPage = () => {
      const {
        pageIndex
      } = table.getState().pagination;
      const pageCount = table.getPageCount();
      if (pageCount === -1) {
        return true;
      }
      if (pageCount === 0) {
        return false;
      }
      return pageIndex < pageCount - 1;
    };
    table.previousPage = () => {
      return table.setPageIndex((old) => old - 1);
    };
    table.nextPage = () => {
      return table.setPageIndex((old) => {
        return old + 1;
      });
    };
    table.firstPage = () => {
      return table.setPageIndex(0);
    };
    table.lastPage = () => {
      return table.setPageIndex(table.getPageCount() - 1);
    };
    table.getPrePaginationRowModel = () => table.getExpandedRowModel();
    table.getPaginationRowModel = () => {
      if (!table._getPaginationRowModel && table.options.getPaginationRowModel) {
        table._getPaginationRowModel = table.options.getPaginationRowModel(table);
      }
      if (table.options.manualPagination || !table._getPaginationRowModel) {
        return table.getPrePaginationRowModel();
      }
      return table._getPaginationRowModel();
    };
    table.getPageCount = () => {
      var _table$options$pageCo2;
      return (_table$options$pageCo2 = table.options.pageCount) != null ? _table$options$pageCo2 : Math.ceil(table.getRowCount() / table.getState().pagination.pageSize);
    };
    table.getRowCount = () => {
      var _table$options$rowCou;
      return (_table$options$rowCou = table.options.rowCount) != null ? _table$options$rowCou : table.getPrePaginationRowModel().rows.length;
    };
  }
};
const getDefaultRowPinningState = () => ({
  top: [],
  bottom: []
});
const RowPinning = {
  getInitialState: (state) => {
    return {
      rowPinning: getDefaultRowPinningState(),
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onRowPinningChange: makeStateUpdater("rowPinning", table)
    };
  },
  createRow: (row, table) => {
    row.pin = (position, includeLeafRows, includeParentRows) => {
      const leafRowIds = includeLeafRows ? row.getLeafRows().map((_ref) => {
        let {
          id: id2
        } = _ref;
        return id2;
      }) : [];
      const parentRowIds = includeParentRows ? row.getParentRows().map((_ref2) => {
        let {
          id: id2
        } = _ref2;
        return id2;
      }) : [];
      const rowIds = /* @__PURE__ */ new Set([...parentRowIds, row.id, ...leafRowIds]);
      table.setRowPinning((old) => {
        var _old$top3, _old$bottom3;
        if (position === "bottom") {
          var _old$top, _old$bottom;
          return {
            top: ((_old$top = old == null ? void 0 : old.top) != null ? _old$top : []).filter((d2) => !(rowIds != null && rowIds.has(d2))),
            bottom: [...((_old$bottom = old == null ? void 0 : old.bottom) != null ? _old$bottom : []).filter((d2) => !(rowIds != null && rowIds.has(d2))), ...Array.from(rowIds)]
          };
        }
        if (position === "top") {
          var _old$top2, _old$bottom2;
          return {
            top: [...((_old$top2 = old == null ? void 0 : old.top) != null ? _old$top2 : []).filter((d2) => !(rowIds != null && rowIds.has(d2))), ...Array.from(rowIds)],
            bottom: ((_old$bottom2 = old == null ? void 0 : old.bottom) != null ? _old$bottom2 : []).filter((d2) => !(rowIds != null && rowIds.has(d2)))
          };
        }
        return {
          top: ((_old$top3 = old == null ? void 0 : old.top) != null ? _old$top3 : []).filter((d2) => !(rowIds != null && rowIds.has(d2))),
          bottom: ((_old$bottom3 = old == null ? void 0 : old.bottom) != null ? _old$bottom3 : []).filter((d2) => !(rowIds != null && rowIds.has(d2)))
        };
      });
    };
    row.getCanPin = () => {
      var _ref3;
      const {
        enableRowPinning,
        enablePinning
      } = table.options;
      if (typeof enableRowPinning === "function") {
        return enableRowPinning(row);
      }
      return (_ref3 = enableRowPinning != null ? enableRowPinning : enablePinning) != null ? _ref3 : true;
    };
    row.getIsPinned = () => {
      const rowIds = [row.id];
      const {
        top,
        bottom
      } = table.getState().rowPinning;
      const isTop = rowIds.some((d2) => top == null ? void 0 : top.includes(d2));
      const isBottom = rowIds.some((d2) => bottom == null ? void 0 : bottom.includes(d2));
      return isTop ? "top" : isBottom ? "bottom" : false;
    };
    row.getPinnedIndex = () => {
      var _table$_getPinnedRows, _visiblePinnedRowIds$;
      const position = row.getIsPinned();
      if (!position)
        return -1;
      const visiblePinnedRowIds = (_table$_getPinnedRows = table._getPinnedRows(position)) == null ? void 0 : _table$_getPinnedRows.map((_ref4) => {
        let {
          id: id2
        } = _ref4;
        return id2;
      });
      return (_visiblePinnedRowIds$ = visiblePinnedRowIds == null ? void 0 : visiblePinnedRowIds.indexOf(row.id)) != null ? _visiblePinnedRowIds$ : -1;
    };
  },
  createTable: (table) => {
    table.setRowPinning = (updater) => table.options.onRowPinningChange == null ? void 0 : table.options.onRowPinningChange(updater);
    table.resetRowPinning = (defaultState) => {
      var _table$initialState$r, _table$initialState;
      return table.setRowPinning(defaultState ? getDefaultRowPinningState() : (_table$initialState$r = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.rowPinning) != null ? _table$initialState$r : getDefaultRowPinningState());
    };
    table.getIsSomeRowsPinned = (position) => {
      var _pinningState$positio;
      const pinningState = table.getState().rowPinning;
      if (!position) {
        var _pinningState$top, _pinningState$bottom;
        return Boolean(((_pinningState$top = pinningState.top) == null ? void 0 : _pinningState$top.length) || ((_pinningState$bottom = pinningState.bottom) == null ? void 0 : _pinningState$bottom.length));
      }
      return Boolean((_pinningState$positio = pinningState[position]) == null ? void 0 : _pinningState$positio.length);
    };
    table._getPinnedRows = memo((position) => [table.getRowModel().rows, table.getState().rowPinning[position], position], (visibleRows, pinnedRowIds, position) => {
      var _table$options$keepPi;
      const rows = ((_table$options$keepPi = table.options.keepPinnedRows) != null ? _table$options$keepPi : true) ? (
        //get all rows that are pinned even if they would not be otherwise visible
        //account for expanded parent rows, but not pagination or filtering
        (pinnedRowIds != null ? pinnedRowIds : []).map((rowId) => {
          const row = table.getRow(rowId, true);
          return row.getIsAllParentsExpanded() ? row : null;
        })
      ) : (
        //else get only visible rows that are pinned
        (pinnedRowIds != null ? pinnedRowIds : []).map((rowId) => visibleRows.find((row) => row.id === rowId))
      );
      return rows.filter(Boolean).map((d2) => ({
        ...d2,
        position
      }));
    }, getMemoOptions(table.options, "debugRows"));
    table.getTopRows = () => table._getPinnedRows("top");
    table.getBottomRows = () => table._getPinnedRows("bottom");
    table.getCenterRows = memo(() => [table.getRowModel().rows, table.getState().rowPinning.top, table.getState().rowPinning.bottom], (allRows, top, bottom) => {
      const topAndBottom = /* @__PURE__ */ new Set([...top != null ? top : [], ...bottom != null ? bottom : []]);
      return allRows.filter((d2) => !topAndBottom.has(d2.id));
    }, getMemoOptions(table.options, "debugRows"));
  }
};
const RowSelection = {
  getInitialState: (state) => {
    return {
      rowSelection: {},
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onRowSelectionChange: makeStateUpdater("rowSelection", table),
      enableRowSelection: true,
      enableMultiRowSelection: true,
      enableSubRowSelection: true
      // enableGroupingRowSelection: false,
      // isAdditiveSelectEvent: (e: unknown) => !!e.metaKey,
      // isInclusiveSelectEvent: (e: unknown) => !!e.shiftKey,
    };
  },
  createTable: (table) => {
    table.setRowSelection = (updater) => table.options.onRowSelectionChange == null ? void 0 : table.options.onRowSelectionChange(updater);
    table.resetRowSelection = (defaultState) => {
      var _table$initialState$r;
      return table.setRowSelection(defaultState ? {} : (_table$initialState$r = table.initialState.rowSelection) != null ? _table$initialState$r : {});
    };
    table.toggleAllRowsSelected = (value) => {
      table.setRowSelection((old) => {
        value = typeof value !== "undefined" ? value : !table.getIsAllRowsSelected();
        const rowSelection = {
          ...old
        };
        const preGroupedFlatRows = table.getPreGroupedRowModel().flatRows;
        if (value) {
          preGroupedFlatRows.forEach((row) => {
            if (!row.getCanSelect()) {
              return;
            }
            rowSelection[row.id] = true;
          });
        } else {
          preGroupedFlatRows.forEach((row) => {
            delete rowSelection[row.id];
          });
        }
        return rowSelection;
      });
    };
    table.toggleAllPageRowsSelected = (value) => table.setRowSelection((old) => {
      const resolvedValue = typeof value !== "undefined" ? value : !table.getIsAllPageRowsSelected();
      const rowSelection = {
        ...old
      };
      table.getRowModel().rows.forEach((row) => {
        mutateRowIsSelected(rowSelection, row.id, resolvedValue, true, table);
      });
      return rowSelection;
    });
    table.getPreSelectedRowModel = () => table.getCoreRowModel();
    table.getSelectedRowModel = memo(() => [table.getState().rowSelection, table.getCoreRowModel()], (rowSelection, rowModel) => {
      if (!Object.keys(rowSelection).length) {
        return {
          rows: [],
          flatRows: [],
          rowsById: {}
        };
      }
      return selectRowsFn(table, rowModel);
    }, getMemoOptions(table.options, "debugTable"));
    table.getFilteredSelectedRowModel = memo(() => [table.getState().rowSelection, table.getFilteredRowModel()], (rowSelection, rowModel) => {
      if (!Object.keys(rowSelection).length) {
        return {
          rows: [],
          flatRows: [],
          rowsById: {}
        };
      }
      return selectRowsFn(table, rowModel);
    }, getMemoOptions(table.options, "debugTable"));
    table.getGroupedSelectedRowModel = memo(() => [table.getState().rowSelection, table.getSortedRowModel()], (rowSelection, rowModel) => {
      if (!Object.keys(rowSelection).length) {
        return {
          rows: [],
          flatRows: [],
          rowsById: {}
        };
      }
      return selectRowsFn(table, rowModel);
    }, getMemoOptions(table.options, "debugTable"));
    table.getIsAllRowsSelected = () => {
      const preGroupedFlatRows = table.getFilteredRowModel().flatRows;
      const {
        rowSelection
      } = table.getState();
      let isAllRowsSelected = Boolean(preGroupedFlatRows.length && Object.keys(rowSelection).length);
      if (isAllRowsSelected) {
        if (preGroupedFlatRows.some((row) => row.getCanSelect() && !rowSelection[row.id])) {
          isAllRowsSelected = false;
        }
      }
      return isAllRowsSelected;
    };
    table.getIsAllPageRowsSelected = () => {
      const paginationFlatRows = table.getPaginationRowModel().flatRows.filter((row) => row.getCanSelect());
      const {
        rowSelection
      } = table.getState();
      let isAllPageRowsSelected = !!paginationFlatRows.length;
      if (isAllPageRowsSelected && paginationFlatRows.some((row) => !rowSelection[row.id])) {
        isAllPageRowsSelected = false;
      }
      return isAllPageRowsSelected;
    };
    table.getIsSomeRowsSelected = () => {
      var _table$getState$rowSe;
      const totalSelected = Object.keys((_table$getState$rowSe = table.getState().rowSelection) != null ? _table$getState$rowSe : {}).length;
      return totalSelected > 0 && totalSelected < table.getFilteredRowModel().flatRows.length;
    };
    table.getIsSomePageRowsSelected = () => {
      const paginationFlatRows = table.getPaginationRowModel().flatRows;
      return table.getIsAllPageRowsSelected() ? false : paginationFlatRows.filter((row) => row.getCanSelect()).some((d2) => d2.getIsSelected() || d2.getIsSomeSelected());
    };
    table.getToggleAllRowsSelectedHandler = () => {
      return (e3) => {
        table.toggleAllRowsSelected(e3.target.checked);
      };
    };
    table.getToggleAllPageRowsSelectedHandler = () => {
      return (e3) => {
        table.toggleAllPageRowsSelected(e3.target.checked);
      };
    };
  },
  createRow: (row, table) => {
    row.toggleSelected = (value, opts) => {
      const isSelected = row.getIsSelected();
      table.setRowSelection((old) => {
        var _opts$selectChildren;
        value = typeof value !== "undefined" ? value : !isSelected;
        if (row.getCanSelect() && isSelected === value) {
          return old;
        }
        const selectedRowIds = {
          ...old
        };
        mutateRowIsSelected(selectedRowIds, row.id, value, (_opts$selectChildren = opts == null ? void 0 : opts.selectChildren) != null ? _opts$selectChildren : true, table);
        return selectedRowIds;
      });
    };
    row.getIsSelected = () => {
      const {
        rowSelection
      } = table.getState();
      return isRowSelected(row, rowSelection);
    };
    row.getIsSomeSelected = () => {
      const {
        rowSelection
      } = table.getState();
      return isSubRowSelected(row, rowSelection) === "some";
    };
    row.getIsAllSubRowsSelected = () => {
      const {
        rowSelection
      } = table.getState();
      return isSubRowSelected(row, rowSelection) === "all";
    };
    row.getCanSelect = () => {
      var _table$options$enable;
      if (typeof table.options.enableRowSelection === "function") {
        return table.options.enableRowSelection(row);
      }
      return (_table$options$enable = table.options.enableRowSelection) != null ? _table$options$enable : true;
    };
    row.getCanSelectSubRows = () => {
      var _table$options$enable2;
      if (typeof table.options.enableSubRowSelection === "function") {
        return table.options.enableSubRowSelection(row);
      }
      return (_table$options$enable2 = table.options.enableSubRowSelection) != null ? _table$options$enable2 : true;
    };
    row.getCanMultiSelect = () => {
      var _table$options$enable3;
      if (typeof table.options.enableMultiRowSelection === "function") {
        return table.options.enableMultiRowSelection(row);
      }
      return (_table$options$enable3 = table.options.enableMultiRowSelection) != null ? _table$options$enable3 : true;
    };
    row.getToggleSelectedHandler = () => {
      const canSelect = row.getCanSelect();
      return (e3) => {
        var _target;
        if (!canSelect)
          return;
        row.toggleSelected((_target = e3.target) == null ? void 0 : _target.checked);
      };
    };
  }
};
const mutateRowIsSelected = (selectedRowIds, id2, value, includeChildren, table) => {
  var _row$subRows;
  const row = table.getRow(id2, true);
  if (value) {
    if (!row.getCanMultiSelect()) {
      Object.keys(selectedRowIds).forEach((key) => delete selectedRowIds[key]);
    }
    if (row.getCanSelect()) {
      selectedRowIds[id2] = true;
    }
  } else {
    delete selectedRowIds[id2];
  }
  if (includeChildren && (_row$subRows = row.subRows) != null && _row$subRows.length && row.getCanSelectSubRows()) {
    row.subRows.forEach((row2) => mutateRowIsSelected(selectedRowIds, row2.id, value, includeChildren, table));
  }
};
function selectRowsFn(table, rowModel) {
  const rowSelection = table.getState().rowSelection;
  const newSelectedFlatRows = [];
  const newSelectedRowsById = {};
  const recurseRows = function(rows, depth) {
    return rows.map((row) => {
      var _row$subRows2;
      const isSelected = isRowSelected(row, rowSelection);
      if (isSelected) {
        newSelectedFlatRows.push(row);
        newSelectedRowsById[row.id] = row;
      }
      if ((_row$subRows2 = row.subRows) != null && _row$subRows2.length) {
        row = {
          ...row,
          subRows: recurseRows(row.subRows)
        };
      }
      if (isSelected) {
        return row;
      }
    }).filter(Boolean);
  };
  return {
    rows: recurseRows(rowModel.rows),
    flatRows: newSelectedFlatRows,
    rowsById: newSelectedRowsById
  };
}
function isRowSelected(row, selection2) {
  var _selection$row$id;
  return (_selection$row$id = selection2[row.id]) != null ? _selection$row$id : false;
}
function isSubRowSelected(row, selection2, table) {
  var _row$subRows3;
  if (!((_row$subRows3 = row.subRows) != null && _row$subRows3.length))
    return false;
  let allChildrenSelected = true;
  let someSelected = false;
  row.subRows.forEach((subRow) => {
    if (someSelected && !allChildrenSelected) {
      return;
    }
    if (subRow.getCanSelect()) {
      if (isRowSelected(subRow, selection2)) {
        someSelected = true;
      } else {
        allChildrenSelected = false;
      }
    }
    if (subRow.subRows && subRow.subRows.length) {
      const subRowChildrenSelected = isSubRowSelected(subRow, selection2);
      if (subRowChildrenSelected === "all") {
        someSelected = true;
      } else if (subRowChildrenSelected === "some") {
        someSelected = true;
        allChildrenSelected = false;
      } else {
        allChildrenSelected = false;
      }
    }
  });
  return allChildrenSelected ? "all" : someSelected ? "some" : false;
}
const reSplitAlphaNumeric = /([0-9]+)/gm;
const alphanumeric = (rowA, rowB, columnId) => {
  return compareAlphanumeric(toString$4(rowA.getValue(columnId)).toLowerCase(), toString$4(rowB.getValue(columnId)).toLowerCase());
};
const alphanumericCaseSensitive = (rowA, rowB, columnId) => {
  return compareAlphanumeric(toString$4(rowA.getValue(columnId)), toString$4(rowB.getValue(columnId)));
};
const text = (rowA, rowB, columnId) => {
  return compareBasic(toString$4(rowA.getValue(columnId)).toLowerCase(), toString$4(rowB.getValue(columnId)).toLowerCase());
};
const textCaseSensitive = (rowA, rowB, columnId) => {
  return compareBasic(toString$4(rowA.getValue(columnId)), toString$4(rowB.getValue(columnId)));
};
const datetime = (rowA, rowB, columnId) => {
  const a2 = rowA.getValue(columnId);
  const b2 = rowB.getValue(columnId);
  return a2 > b2 ? 1 : a2 < b2 ? -1 : 0;
};
const basic = (rowA, rowB, columnId) => {
  return compareBasic(rowA.getValue(columnId), rowB.getValue(columnId));
};
function compareBasic(a2, b2) {
  return a2 === b2 ? 0 : a2 > b2 ? 1 : -1;
}
function toString$4(a2) {
  if (typeof a2 === "number") {
    if (isNaN(a2) || a2 === Infinity || a2 === -Infinity) {
      return "";
    }
    return String(a2);
  }
  if (typeof a2 === "string") {
    return a2;
  }
  return "";
}
function compareAlphanumeric(aStr, bStr) {
  const a2 = aStr.split(reSplitAlphaNumeric).filter(Boolean);
  const b2 = bStr.split(reSplitAlphaNumeric).filter(Boolean);
  while (a2.length && b2.length) {
    const aa2 = a2.shift();
    const bb2 = b2.shift();
    const an = parseInt(aa2, 10);
    const bn = parseInt(bb2, 10);
    const combo = [an, bn].sort();
    if (isNaN(combo[0])) {
      if (aa2 > bb2) {
        return 1;
      }
      if (bb2 > aa2) {
        return -1;
      }
      continue;
    }
    if (isNaN(combo[1])) {
      return isNaN(an) ? -1 : 1;
    }
    if (an > bn) {
      return 1;
    }
    if (bn > an) {
      return -1;
    }
  }
  return a2.length - b2.length;
}
const sortingFns = {
  alphanumeric,
  alphanumericCaseSensitive,
  text,
  textCaseSensitive,
  datetime,
  basic
};
const RowSorting = {
  getInitialState: (state) => {
    return {
      sorting: [],
      ...state
    };
  },
  getDefaultColumnDef: () => {
    return {
      sortingFn: "auto",
      sortUndefined: 1
    };
  },
  getDefaultOptions: (table) => {
    return {
      onSortingChange: makeStateUpdater("sorting", table),
      isMultiSortEvent: (e3) => {
        return e3.shiftKey;
      }
    };
  },
  createColumn: (column, table) => {
    column.getAutoSortingFn = () => {
      const firstRows = table.getFilteredRowModel().flatRows.slice(10);
      let isString2 = false;
      for (const row of firstRows) {
        const value = row == null ? void 0 : row.getValue(column.id);
        if (Object.prototype.toString.call(value) === "[object Date]") {
          return sortingFns.datetime;
        }
        if (typeof value === "string") {
          isString2 = true;
          if (value.split(reSplitAlphaNumeric).length > 1) {
            return sortingFns.alphanumeric;
          }
        }
      }
      if (isString2) {
        return sortingFns.text;
      }
      return sortingFns.basic;
    };
    column.getAutoSortDir = () => {
      const firstRow = table.getFilteredRowModel().flatRows[0];
      const value = firstRow == null ? void 0 : firstRow.getValue(column.id);
      if (typeof value === "string") {
        return "asc";
      }
      return "desc";
    };
    column.getSortingFn = () => {
      var _table$options$sortin, _table$options$sortin2;
      if (!column) {
        throw new Error();
      }
      return isFunction$5(column.columnDef.sortingFn) ? column.columnDef.sortingFn : column.columnDef.sortingFn === "auto" ? column.getAutoSortingFn() : (_table$options$sortin = (_table$options$sortin2 = table.options.sortingFns) == null ? void 0 : _table$options$sortin2[column.columnDef.sortingFn]) != null ? _table$options$sortin : sortingFns[column.columnDef.sortingFn];
    };
    column.toggleSorting = (desc, multi) => {
      const nextSortingOrder = column.getNextSortingOrder();
      const hasManualValue = typeof desc !== "undefined" && desc !== null;
      table.setSorting((old) => {
        const existingSorting = old == null ? void 0 : old.find((d2) => d2.id === column.id);
        const existingIndex = old == null ? void 0 : old.findIndex((d2) => d2.id === column.id);
        let newSorting = [];
        let sortAction;
        let nextDesc = hasManualValue ? desc : nextSortingOrder === "desc";
        if (old != null && old.length && column.getCanMultiSort() && multi) {
          if (existingSorting) {
            sortAction = "toggle";
          } else {
            sortAction = "add";
          }
        } else {
          if (old != null && old.length && existingIndex !== old.length - 1) {
            sortAction = "replace";
          } else if (existingSorting) {
            sortAction = "toggle";
          } else {
            sortAction = "replace";
          }
        }
        if (sortAction === "toggle") {
          if (!hasManualValue) {
            if (!nextSortingOrder) {
              sortAction = "remove";
            }
          }
        }
        if (sortAction === "add") {
          var _table$options$maxMul;
          newSorting = [...old, {
            id: column.id,
            desc: nextDesc
          }];
          newSorting.splice(0, newSorting.length - ((_table$options$maxMul = table.options.maxMultiSortColCount) != null ? _table$options$maxMul : Number.MAX_SAFE_INTEGER));
        } else if (sortAction === "toggle") {
          newSorting = old.map((d2) => {
            if (d2.id === column.id) {
              return {
                ...d2,
                desc: nextDesc
              };
            }
            return d2;
          });
        } else if (sortAction === "remove") {
          newSorting = old.filter((d2) => d2.id !== column.id);
        } else {
          newSorting = [{
            id: column.id,
            desc: nextDesc
          }];
        }
        return newSorting;
      });
    };
    column.getFirstSortDir = () => {
      var _ref, _column$columnDef$sor;
      const sortDescFirst = (_ref = (_column$columnDef$sor = column.columnDef.sortDescFirst) != null ? _column$columnDef$sor : table.options.sortDescFirst) != null ? _ref : column.getAutoSortDir() === "desc";
      return sortDescFirst ? "desc" : "asc";
    };
    column.getNextSortingOrder = (multi) => {
      var _table$options$enable, _table$options$enable2;
      const firstSortDirection = column.getFirstSortDir();
      const isSorted = column.getIsSorted();
      if (!isSorted) {
        return firstSortDirection;
      }
      if (isSorted !== firstSortDirection && ((_table$options$enable = table.options.enableSortingRemoval) != null ? _table$options$enable : true) && // If enableSortRemove, enable in general
      (multi ? (_table$options$enable2 = table.options.enableMultiRemove) != null ? _table$options$enable2 : true : true)) {
        return false;
      }
      return isSorted === "desc" ? "asc" : "desc";
    };
    column.getCanSort = () => {
      var _column$columnDef$ena, _table$options$enable3;
      return ((_column$columnDef$ena = column.columnDef.enableSorting) != null ? _column$columnDef$ena : true) && ((_table$options$enable3 = table.options.enableSorting) != null ? _table$options$enable3 : true) && !!column.accessorFn;
    };
    column.getCanMultiSort = () => {
      var _ref2, _column$columnDef$ena2;
      return (_ref2 = (_column$columnDef$ena2 = column.columnDef.enableMultiSort) != null ? _column$columnDef$ena2 : table.options.enableMultiSort) != null ? _ref2 : !!column.accessorFn;
    };
    column.getIsSorted = () => {
      var _table$getState$sorti;
      const columnSort = (_table$getState$sorti = table.getState().sorting) == null ? void 0 : _table$getState$sorti.find((d2) => d2.id === column.id);
      return !columnSort ? false : columnSort.desc ? "desc" : "asc";
    };
    column.getSortIndex = () => {
      var _table$getState$sorti2, _table$getState$sorti3;
      return (_table$getState$sorti2 = (_table$getState$sorti3 = table.getState().sorting) == null ? void 0 : _table$getState$sorti3.findIndex((d2) => d2.id === column.id)) != null ? _table$getState$sorti2 : -1;
    };
    column.clearSorting = () => {
      table.setSorting((old) => old != null && old.length ? old.filter((d2) => d2.id !== column.id) : []);
    };
    column.getToggleSortingHandler = () => {
      const canSort = column.getCanSort();
      return (e3) => {
        if (!canSort)
          return;
        e3.persist == null || e3.persist();
        column.toggleSorting == null || column.toggleSorting(void 0, column.getCanMultiSort() ? table.options.isMultiSortEvent == null ? void 0 : table.options.isMultiSortEvent(e3) : false);
      };
    };
  },
  createTable: (table) => {
    table.setSorting = (updater) => table.options.onSortingChange == null ? void 0 : table.options.onSortingChange(updater);
    table.resetSorting = (defaultState) => {
      var _table$initialState$s, _table$initialState;
      table.setSorting(defaultState ? [] : (_table$initialState$s = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.sorting) != null ? _table$initialState$s : []);
    };
    table.getPreSortedRowModel = () => table.getGroupedRowModel();
    table.getSortedRowModel = () => {
      if (!table._getSortedRowModel && table.options.getSortedRowModel) {
        table._getSortedRowModel = table.options.getSortedRowModel(table);
      }
      if (table.options.manualSorting || !table._getSortedRowModel) {
        return table.getPreSortedRowModel();
      }
      return table._getSortedRowModel();
    };
  }
};
const builtInFeatures = [
  Headers,
  ColumnVisibility,
  ColumnOrdering,
  ColumnPinning,
  ColumnFaceting,
  ColumnFiltering,
  GlobalFaceting,
  //depends on ColumnFaceting
  GlobalFiltering,
  //depends on ColumnFiltering
  RowSorting,
  ColumnGrouping,
  //depends on RowSorting
  RowExpanding,
  RowPagination,
  RowPinning,
  RowSelection,
  ColumnSizing
];
function createTable(options) {
  var _options$_features, _options$initialState;
  const _features = [...builtInFeatures, ...(_options$_features = options._features) != null ? _options$_features : []];
  let table = {
    _features
  };
  const defaultOptions2 = table._features.reduce((obj, feature2) => {
    return Object.assign(obj, feature2.getDefaultOptions == null ? void 0 : feature2.getDefaultOptions(table));
  }, {});
  const mergeOptions = (options2) => {
    if (table.options.mergeOptions) {
      return table.options.mergeOptions(defaultOptions2, options2);
    }
    return {
      ...defaultOptions2,
      ...options2
    };
  };
  const coreInitialState = {};
  let initialState2 = {
    ...coreInitialState,
    ...(_options$initialState = options.initialState) != null ? _options$initialState : {}
  };
  table._features.forEach((feature2) => {
    var _feature$getInitialSt;
    initialState2 = (_feature$getInitialSt = feature2.getInitialState == null ? void 0 : feature2.getInitialState(initialState2)) != null ? _feature$getInitialSt : initialState2;
  });
  const queued = [];
  let queuedTimeout = false;
  const coreInstance = {
    _features,
    options: {
      ...defaultOptions2,
      ...options
    },
    initialState: initialState2,
    _queue: (cb2) => {
      queued.push(cb2);
      if (!queuedTimeout) {
        queuedTimeout = true;
        Promise.resolve().then(() => {
          while (queued.length) {
            queued.shift()();
          }
          queuedTimeout = false;
        }).catch((error) => setTimeout(() => {
          throw error;
        }));
      }
    },
    reset: () => {
      table.setState(table.initialState);
    },
    setOptions: (updater) => {
      const newOptions = functionalUpdate(updater, table.options);
      table.options = mergeOptions(newOptions);
    },
    getState: () => {
      return table.options.state;
    },
    setState: (updater) => {
      table.options.onStateChange == null || table.options.onStateChange(updater);
    },
    _getRowId: (row, index2, parent) => {
      var _table$options$getRow;
      return (_table$options$getRow = table.options.getRowId == null ? void 0 : table.options.getRowId(row, index2, parent)) != null ? _table$options$getRow : `${parent ? [parent.id, index2].join(".") : index2}`;
    },
    getCoreRowModel: () => {
      if (!table._getCoreRowModel) {
        table._getCoreRowModel = table.options.getCoreRowModel(table);
      }
      return table._getCoreRowModel();
    },
    // The final calls start at the bottom of the model,
    // expanded rows, which then work their way up
    getRowModel: () => {
      return table.getPaginationRowModel();
    },
    //in next version, we should just pass in the row model as the optional 2nd arg
    getRow: (id2, searchAll) => {
      let row = (searchAll ? table.getPrePaginationRowModel() : table.getRowModel()).rowsById[id2];
      if (!row) {
        row = table.getCoreRowModel().rowsById[id2];
        if (!row) {
          throw new Error();
        }
      }
      return row;
    },
    _getDefaultColumnDef: memo(() => [table.options.defaultColumn], (defaultColumn) => {
      var _defaultColumn;
      defaultColumn = (_defaultColumn = defaultColumn) != null ? _defaultColumn : {};
      return {
        header: (props) => {
          const resolvedColumnDef = props.header.column.columnDef;
          if (resolvedColumnDef.accessorKey) {
            return resolvedColumnDef.accessorKey;
          }
          if (resolvedColumnDef.accessorFn) {
            return resolvedColumnDef.id;
          }
          return null;
        },
        // footer: props => props.header.column.id,
        cell: (props) => {
          var _props$renderValue$to, _props$renderValue;
          return (_props$renderValue$to = (_props$renderValue = props.renderValue()) == null || _props$renderValue.toString == null ? void 0 : _props$renderValue.toString()) != null ? _props$renderValue$to : null;
        },
        ...table._features.reduce((obj, feature2) => {
          return Object.assign(obj, feature2.getDefaultColumnDef == null ? void 0 : feature2.getDefaultColumnDef());
        }, {}),
        ...defaultColumn
      };
    }, getMemoOptions(options, "debugColumns")),
    _getColumnDefs: () => table.options.columns,
    getAllColumns: memo(() => [table._getColumnDefs()], (columnDefs) => {
      const recurseColumns = function(columnDefs2, parent, depth) {
        if (depth === void 0) {
          depth = 0;
        }
        return columnDefs2.map((columnDef) => {
          const column = createColumn(table, columnDef, depth, parent);
          const groupingColumnDef = columnDef;
          column.columns = groupingColumnDef.columns ? recurseColumns(groupingColumnDef.columns, column, depth + 1) : [];
          return column;
        });
      };
      return recurseColumns(columnDefs);
    }, getMemoOptions(options, "debugColumns")),
    getAllFlatColumns: memo(() => [table.getAllColumns()], (allColumns) => {
      return allColumns.flatMap((column) => {
        return column.getFlatColumns();
      });
    }, getMemoOptions(options, "debugColumns")),
    _getAllFlatColumnsById: memo(() => [table.getAllFlatColumns()], (flatColumns) => {
      return flatColumns.reduce((acc, column) => {
        acc[column.id] = column;
        return acc;
      }, {});
    }, getMemoOptions(options, "debugColumns")),
    getAllLeafColumns: memo(() => [table.getAllColumns(), table._getOrderColumnsFn()], (allColumns, orderColumns2) => {
      let leafColumns = allColumns.flatMap((column) => column.getLeafColumns());
      return orderColumns2(leafColumns);
    }, getMemoOptions(options, "debugColumns")),
    getColumn: (columnId) => {
      const column = table._getAllFlatColumnsById()[columnId];
      return column;
    }
  };
  Object.assign(table, coreInstance);
  for (let index2 = 0; index2 < table._features.length; index2++) {
    const feature2 = table._features[index2];
    feature2 == null || feature2.createTable == null || feature2.createTable(table);
  }
  return table;
}
function getCoreRowModel() {
  return (table) => memo(() => [table.options.data], (data2) => {
    const rowModel = {
      rows: [],
      flatRows: [],
      rowsById: {}
    };
    const accessRows = function(originalRows, depth, parentRow) {
      if (depth === void 0) {
        depth = 0;
      }
      const rows = [];
      for (let i2 = 0; i2 < originalRows.length; i2++) {
        const row = createRow(table, table._getRowId(originalRows[i2], i2, parentRow), originalRows[i2], i2, depth, void 0, parentRow == null ? void 0 : parentRow.id);
        rowModel.flatRows.push(row);
        rowModel.rowsById[row.id] = row;
        rows.push(row);
        if (table.options.getSubRows) {
          var _row$originalSubRows;
          row.originalSubRows = table.options.getSubRows(originalRows[i2], i2);
          if ((_row$originalSubRows = row.originalSubRows) != null && _row$originalSubRows.length) {
            row.subRows = accessRows(row.originalSubRows, depth + 1, row);
          }
        }
      }
      return rows;
    };
    rowModel.rows = accessRows(data2);
    return rowModel;
  }, getMemoOptions(table.options, "debugTable", "getRowModel", () => table._autoResetPageIndex()));
}
function expandRows(rowModel) {
  const expandedRows = [];
  const handleRow = (row) => {
    var _row$subRows;
    expandedRows.push(row);
    if ((_row$subRows = row.subRows) != null && _row$subRows.length && row.getIsExpanded()) {
      row.subRows.forEach(handleRow);
    }
  };
  rowModel.rows.forEach(handleRow);
  return {
    rows: expandedRows,
    flatRows: rowModel.flatRows,
    rowsById: rowModel.rowsById
  };
}
function filterRows(rows, filterRowImpl, table) {
  if (table.options.filterFromLeafRows) {
    return filterRowModelFromLeafs(rows, filterRowImpl, table);
  }
  return filterRowModelFromRoot(rows, filterRowImpl, table);
}
function filterRowModelFromLeafs(rowsToFilter, filterRow, table) {
  var _table$options$maxLea;
  const newFilteredFlatRows = [];
  const newFilteredRowsById = {};
  const maxDepth2 = (_table$options$maxLea = table.options.maxLeafRowFilterDepth) != null ? _table$options$maxLea : 100;
  const recurseFilterRows = function(rowsToFilter2, depth) {
    if (depth === void 0) {
      depth = 0;
    }
    const rows = [];
    for (let i2 = 0; i2 < rowsToFilter2.length; i2++) {
      var _row$subRows;
      let row = rowsToFilter2[i2];
      const newRow = createRow(table, row.id, row.original, row.index, row.depth, void 0, row.parentId);
      newRow.columnFilters = row.columnFilters;
      if ((_row$subRows = row.subRows) != null && _row$subRows.length && depth < maxDepth2) {
        newRow.subRows = recurseFilterRows(row.subRows, depth + 1);
        row = newRow;
        if (filterRow(row) && !newRow.subRows.length) {
          rows.push(row);
          newFilteredRowsById[row.id] = row;
          newFilteredFlatRows.push(row);
          continue;
        }
        if (filterRow(row) || newRow.subRows.length) {
          rows.push(row);
          newFilteredRowsById[row.id] = row;
          newFilteredFlatRows.push(row);
          continue;
        }
      } else {
        row = newRow;
        if (filterRow(row)) {
          rows.push(row);
          newFilteredRowsById[row.id] = row;
          newFilteredFlatRows.push(row);
        }
      }
    }
    return rows;
  };
  return {
    rows: recurseFilterRows(rowsToFilter),
    flatRows: newFilteredFlatRows,
    rowsById: newFilteredRowsById
  };
}
function filterRowModelFromRoot(rowsToFilter, filterRow, table) {
  var _table$options$maxLea2;
  const newFilteredFlatRows = [];
  const newFilteredRowsById = {};
  const maxDepth2 = (_table$options$maxLea2 = table.options.maxLeafRowFilterDepth) != null ? _table$options$maxLea2 : 100;
  const recurseFilterRows = function(rowsToFilter2, depth) {
    if (depth === void 0) {
      depth = 0;
    }
    const rows = [];
    for (let i2 = 0; i2 < rowsToFilter2.length; i2++) {
      let row = rowsToFilter2[i2];
      const pass = filterRow(row);
      if (pass) {
        var _row$subRows2;
        if ((_row$subRows2 = row.subRows) != null && _row$subRows2.length && depth < maxDepth2) {
          const newRow = createRow(table, row.id, row.original, row.index, row.depth, void 0, row.parentId);
          newRow.subRows = recurseFilterRows(row.subRows, depth + 1);
          row = newRow;
        }
        rows.push(row);
        newFilteredFlatRows.push(row);
        newFilteredRowsById[row.id] = row;
      }
    }
    return rows;
  };
  return {
    rows: recurseFilterRows(rowsToFilter),
    flatRows: newFilteredFlatRows,
    rowsById: newFilteredRowsById
  };
}
function getFilteredRowModel() {
  return (table) => memo(() => [table.getPreFilteredRowModel(), table.getState().columnFilters, table.getState().globalFilter], (rowModel, columnFilters, globalFilter) => {
    if (!rowModel.rows.length || !(columnFilters != null && columnFilters.length) && !globalFilter) {
      for (let i2 = 0; i2 < rowModel.flatRows.length; i2++) {
        rowModel.flatRows[i2].columnFilters = {};
        rowModel.flatRows[i2].columnFiltersMeta = {};
      }
      return rowModel;
    }
    const resolvedColumnFilters = [];
    const resolvedGlobalFilters = [];
    (columnFilters != null ? columnFilters : []).forEach((d2) => {
      var _filterFn$resolveFilt;
      const column = table.getColumn(d2.id);
      if (!column) {
        return;
      }
      const filterFn = column.getFilterFn();
      if (!filterFn) {
        return;
      }
      resolvedColumnFilters.push({
        id: d2.id,
        filterFn,
        resolvedValue: (_filterFn$resolveFilt = filterFn.resolveFilterValue == null ? void 0 : filterFn.resolveFilterValue(d2.value)) != null ? _filterFn$resolveFilt : d2.value
      });
    });
    const filterableIds = columnFilters.map((d2) => d2.id);
    const globalFilterFn = table.getGlobalFilterFn();
    const globallyFilterableColumns = table.getAllLeafColumns().filter((column) => column.getCanGlobalFilter());
    if (globalFilter && globalFilterFn && globallyFilterableColumns.length) {
      filterableIds.push("__global__");
      globallyFilterableColumns.forEach((column) => {
        var _globalFilterFn$resol;
        resolvedGlobalFilters.push({
          id: column.id,
          filterFn: globalFilterFn,
          resolvedValue: (_globalFilterFn$resol = globalFilterFn.resolveFilterValue == null ? void 0 : globalFilterFn.resolveFilterValue(globalFilter)) != null ? _globalFilterFn$resol : globalFilter
        });
      });
    }
    let currentColumnFilter;
    let currentGlobalFilter;
    for (let j = 0; j < rowModel.flatRows.length; j++) {
      const row = rowModel.flatRows[j];
      row.columnFilters = {};
      if (resolvedColumnFilters.length) {
        for (let i2 = 0; i2 < resolvedColumnFilters.length; i2++) {
          currentColumnFilter = resolvedColumnFilters[i2];
          const id2 = currentColumnFilter.id;
          row.columnFilters[id2] = currentColumnFilter.filterFn(row, id2, currentColumnFilter.resolvedValue, (filterMeta) => {
            row.columnFiltersMeta[id2] = filterMeta;
          });
        }
      }
      if (resolvedGlobalFilters.length) {
        for (let i2 = 0; i2 < resolvedGlobalFilters.length; i2++) {
          currentGlobalFilter = resolvedGlobalFilters[i2];
          const id2 = currentGlobalFilter.id;
          if (currentGlobalFilter.filterFn(row, id2, currentGlobalFilter.resolvedValue, (filterMeta) => {
            row.columnFiltersMeta[id2] = filterMeta;
          })) {
            row.columnFilters.__global__ = true;
            break;
          }
        }
        if (row.columnFilters.__global__ !== true) {
          row.columnFilters.__global__ = false;
        }
      }
    }
    const filterRowsImpl = (row) => {
      for (let i2 = 0; i2 < filterableIds.length; i2++) {
        if (row.columnFilters[filterableIds[i2]] === false) {
          return false;
        }
      }
      return true;
    };
    return filterRows(rowModel.rows, filterRowsImpl, table);
  }, getMemoOptions(table.options, "debugTable", "getFilteredRowModel", () => table._autoResetPageIndex()));
}
function getPaginationRowModel(opts) {
  return (table) => memo(() => [table.getState().pagination, table.getPrePaginationRowModel(), table.options.paginateExpandedRows ? void 0 : table.getState().expanded], (pagination, rowModel) => {
    if (!rowModel.rows.length) {
      return rowModel;
    }
    const {
      pageSize,
      pageIndex
    } = pagination;
    let {
      rows,
      flatRows,
      rowsById
    } = rowModel;
    const pageStart = pageSize * pageIndex;
    const pageEnd = pageStart + pageSize;
    rows = rows.slice(pageStart, pageEnd);
    let paginatedRowModel;
    if (!table.options.paginateExpandedRows) {
      paginatedRowModel = expandRows({
        rows,
        flatRows,
        rowsById
      });
    } else {
      paginatedRowModel = {
        rows,
        flatRows,
        rowsById
      };
    }
    paginatedRowModel.flatRows = [];
    const handleRow = (row) => {
      paginatedRowModel.flatRows.push(row);
      if (row.subRows.length) {
        row.subRows.forEach(handleRow);
      }
    };
    paginatedRowModel.rows.forEach(handleRow);
    return paginatedRowModel;
  }, getMemoOptions(table.options, "debugTable"));
}
function getSortedRowModel() {
  return (table) => memo(() => [table.getState().sorting, table.getPreSortedRowModel()], (sorting, rowModel) => {
    if (!rowModel.rows.length || !(sorting != null && sorting.length)) {
      return rowModel;
    }
    const sortingState = table.getState().sorting;
    const sortedFlatRows = [];
    const availableSorting = sortingState.filter((sort) => {
      var _table$getColumn;
      return (_table$getColumn = table.getColumn(sort.id)) == null ? void 0 : _table$getColumn.getCanSort();
    });
    const columnInfoById = {};
    availableSorting.forEach((sortEntry) => {
      const column = table.getColumn(sortEntry.id);
      if (!column)
        return;
      columnInfoById[sortEntry.id] = {
        sortUndefined: column.columnDef.sortUndefined,
        invertSorting: column.columnDef.invertSorting,
        sortingFn: column.getSortingFn()
      };
    });
    const sortData = (rows) => {
      const sortedData = rows.map((row) => ({
        ...row
      }));
      sortedData.sort((rowA, rowB) => {
        for (let i2 = 0; i2 < availableSorting.length; i2 += 1) {
          var _sortEntry$desc;
          const sortEntry = availableSorting[i2];
          const columnInfo = columnInfoById[sortEntry.id];
          const sortUndefined = columnInfo.sortUndefined;
          const isDesc = (_sortEntry$desc = sortEntry == null ? void 0 : sortEntry.desc) != null ? _sortEntry$desc : false;
          let sortInt = 0;
          if (sortUndefined) {
            const aValue = rowA.getValue(sortEntry.id);
            const bValue = rowB.getValue(sortEntry.id);
            const aUndefined = aValue === void 0;
            const bUndefined = bValue === void 0;
            if (aUndefined || bUndefined) {
              if (sortUndefined === "first")
                return aUndefined ? -1 : 1;
              if (sortUndefined === "last")
                return aUndefined ? 1 : -1;
              sortInt = aUndefined && bUndefined ? 0 : aUndefined ? sortUndefined : -sortUndefined;
            }
          }
          if (sortInt === 0) {
            sortInt = columnInfo.sortingFn(rowA, rowB, sortEntry.id);
          }
          if (sortInt !== 0) {
            if (isDesc) {
              sortInt *= -1;
            }
            if (columnInfo.invertSorting) {
              sortInt *= -1;
            }
            return sortInt;
          }
        }
        return rowA.index - rowB.index;
      });
      sortedData.forEach((row) => {
        var _row$subRows;
        sortedFlatRows.push(row);
        if ((_row$subRows = row.subRows) != null && _row$subRows.length) {
          row.subRows = sortData(row.subRows);
        }
      });
      return sortedData;
    };
    return {
      rows: sortData(rowModel.rows),
      flatRows: sortedFlatRows,
      rowsById: rowModel.rowsById
    };
  }, getMemoOptions(table.options, "debugTable", "getSortedRowModel", () => table._autoResetPageIndex()));
}
/**
   * react-table
   *
   * Copyright (c) TanStack
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   */
function flexRender(Comp, props) {
  return !Comp ? null : isReactComponent(Comp) ? /* @__PURE__ */ reactExports.createElement(Comp, props) : Comp;
}
function isReactComponent(component) {
  return isClassComponent(component) || typeof component === "function" || isExoticComponent(component);
}
function isClassComponent(component) {
  return typeof component === "function" && (() => {
    const proto2 = Object.getPrototypeOf(component);
    return proto2.prototype && proto2.prototype.isReactComponent;
  })();
}
function isExoticComponent(component) {
  return typeof component === "object" && typeof component.$$typeof === "symbol" && ["react.memo", "react.forward_ref"].includes(component.$$typeof.description);
}
function useReactTable(options) {
  const resolvedOptions = {
    state: {},
    // Dummy state
    onStateChange: () => {
    },
    // noop
    renderFallbackValue: null,
    ...options
  };
  const [tableRef] = reactExports.useState(() => ({
    current: createTable(resolvedOptions)
  }));
  const [state, setState] = reactExports.useState(() => tableRef.current.initialState);
  tableRef.current.setOptions((prev) => ({
    ...prev,
    ...options,
    state: {
      ...state,
      ...options.state
    },
    // Similarly, we'll maintain both our internal state and any user-provided
    // state.
    onStateChange: (updater) => {
      setState(updater);
      options.onStateChange == null || options.onStateChange(updater);
    }
  }));
  return tableRef.current;
}
function r$2(e3) {
  var t2, f2, n2 = "";
  if ("string" == typeof e3 || "number" == typeof e3)
    n2 += e3;
  else if ("object" == typeof e3)
    if (Array.isArray(e3)) {
      var o2 = e3.length;
      for (t2 = 0; t2 < o2; t2++)
        e3[t2] && (f2 = r$2(e3[t2])) && (n2 && (n2 += " "), n2 += f2);
    } else
      for (f2 in e3)
        e3[f2] && (n2 && (n2 += " "), n2 += f2);
  return n2;
}
function clsx$1() {
  for (var e3, t2, f2 = 0, n2 = "", o2 = arguments.length; f2 < o2; f2++)
    (e3 = arguments[f2]) && (t2 = r$2(e3)) && (n2 && (n2 += " "), n2 += t2);
  return n2;
}
const CLASS_PART_SEPARATOR = "-";
function createClassUtils(config2) {
  const classMap = createClassMap(config2);
  const {
    conflictingClassGroups,
    conflictingClassGroupModifiers
  } = config2;
  function getClassGroupId(className) {
    const classParts = className.split(CLASS_PART_SEPARATOR);
    if (classParts[0] === "" && classParts.length !== 1) {
      classParts.shift();
    }
    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);
  }
  function getConflictingClassGroupIds(classGroupId, hasPostfixModifier) {
    const conflicts = conflictingClassGroups[classGroupId] || [];
    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {
      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];
    }
    return conflicts;
  }
  return {
    getClassGroupId,
    getConflictingClassGroupIds
  };
}
function getGroupRecursive(classParts, classPartObject) {
  if (classParts.length === 0) {
    return classPartObject.classGroupId;
  }
  const currentClassPart = classParts[0];
  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);
  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : void 0;
  if (classGroupFromNextClassPart) {
    return classGroupFromNextClassPart;
  }
  if (classPartObject.validators.length === 0) {
    return void 0;
  }
  const classRest = classParts.join(CLASS_PART_SEPARATOR);
  return classPartObject.validators.find(({
    validator
  }) => validator(classRest))?.classGroupId;
}
const arbitraryPropertyRegex = /^\[(.+)\]$/;
function getGroupIdForArbitraryProperty(className) {
  if (arbitraryPropertyRegex.test(className)) {
    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];
    const property2 = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(":"));
    if (property2) {
      return "arbitrary.." + property2;
    }
  }
}
function createClassMap(config2) {
  const {
    theme,
    prefix: prefix2
  } = config2;
  const classMap = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  const prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config2.classGroups), prefix2);
  prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {
    processClassesRecursively(classGroup, classMap, classGroupId, theme);
  });
  return classMap;
}
function processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {
  classGroup.forEach((classDefinition) => {
    if (typeof classDefinition === "string") {
      const classPartObjectToEdit = classDefinition === "" ? classPartObject : getPart(classPartObject, classDefinition);
      classPartObjectToEdit.classGroupId = classGroupId;
      return;
    }
    if (typeof classDefinition === "function") {
      if (isThemeGetter(classDefinition)) {
        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);
        return;
      }
      classPartObject.validators.push({
        validator: classDefinition,
        classGroupId
      });
      return;
    }
    Object.entries(classDefinition).forEach(([key, classGroup2]) => {
      processClassesRecursively(classGroup2, getPart(classPartObject, key), classGroupId, theme);
    });
  });
}
function getPart(classPartObject, path) {
  let currentClassPartObject = classPartObject;
  path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {
    if (!currentClassPartObject.nextPart.has(pathPart)) {
      currentClassPartObject.nextPart.set(pathPart, {
        nextPart: /* @__PURE__ */ new Map(),
        validators: []
      });
    }
    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);
  });
  return currentClassPartObject;
}
function isThemeGetter(func) {
  return func.isThemeGetter;
}
function getPrefixedClassGroupEntries(classGroupEntries, prefix2) {
  if (!prefix2) {
    return classGroupEntries;
  }
  return classGroupEntries.map(([classGroupId, classGroup]) => {
    const prefixedClassGroup = classGroup.map((classDefinition) => {
      if (typeof classDefinition === "string") {
        return prefix2 + classDefinition;
      }
      if (typeof classDefinition === "object") {
        return Object.fromEntries(Object.entries(classDefinition).map(([key, value]) => [prefix2 + key, value]));
      }
      return classDefinition;
    });
    return [classGroupId, prefixedClassGroup];
  });
}
function createLruCache(maxCacheSize) {
  if (maxCacheSize < 1) {
    return {
      get: () => void 0,
      set: () => {
      }
    };
  }
  let cacheSize = 0;
  let cache = /* @__PURE__ */ new Map();
  let previousCache = /* @__PURE__ */ new Map();
  function update(key, value) {
    cache.set(key, value);
    cacheSize++;
    if (cacheSize > maxCacheSize) {
      cacheSize = 0;
      previousCache = cache;
      cache = /* @__PURE__ */ new Map();
    }
  }
  return {
    get(key) {
      let value = cache.get(key);
      if (value !== void 0) {
        return value;
      }
      if ((value = previousCache.get(key)) !== void 0) {
        update(key, value);
        return value;
      }
    },
    set(key, value) {
      if (cache.has(key)) {
        cache.set(key, value);
      } else {
        update(key, value);
      }
    }
  };
}
const IMPORTANT_MODIFIER = "!";
function createSplitModifiers(config2) {
  const separator = config2.separator;
  const isSeparatorSingleCharacter = separator.length === 1;
  const firstSeparatorCharacter = separator[0];
  const separatorLength = separator.length;
  return function splitModifiers(className) {
    const modifiers = [];
    let bracketDepth = 0;
    let modifierStart = 0;
    let postfixModifierPosition;
    for (let index2 = 0; index2 < className.length; index2++) {
      let currentCharacter = className[index2];
      if (bracketDepth === 0) {
        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index2, index2 + separatorLength) === separator)) {
          modifiers.push(className.slice(modifierStart, index2));
          modifierStart = index2 + separatorLength;
          continue;
        }
        if (currentCharacter === "/") {
          postfixModifierPosition = index2;
          continue;
        }
      }
      if (currentCharacter === "[") {
        bracketDepth++;
      } else if (currentCharacter === "]") {
        bracketDepth--;
      }
    }
    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);
    const hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);
    const baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;
    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : void 0;
    return {
      modifiers,
      hasImportantModifier,
      baseClassName,
      maybePostfixModifierPosition
    };
  };
}
function sortModifiers(modifiers) {
  if (modifiers.length <= 1) {
    return modifiers;
  }
  const sortedModifiers = [];
  let unsortedModifiers = [];
  modifiers.forEach((modifier) => {
    const isArbitraryVariant = modifier[0] === "[";
    if (isArbitraryVariant) {
      sortedModifiers.push(...unsortedModifiers.sort(), modifier);
      unsortedModifiers = [];
    } else {
      unsortedModifiers.push(modifier);
    }
  });
  sortedModifiers.push(...unsortedModifiers.sort());
  return sortedModifiers;
}
function createConfigUtils(config2) {
  return {
    cache: createLruCache(config2.cacheSize),
    splitModifiers: createSplitModifiers(config2),
    ...createClassUtils(config2)
  };
}
const SPLIT_CLASSES_REGEX = /\s+/;
function mergeClassList(classList2, configUtils) {
  const {
    splitModifiers,
    getClassGroupId,
    getConflictingClassGroupIds
  } = configUtils;
  const classGroupsInConflict = /* @__PURE__ */ new Set();
  return classList2.trim().split(SPLIT_CLASSES_REGEX).map((originalClassName) => {
    const {
      modifiers,
      hasImportantModifier,
      baseClassName,
      maybePostfixModifierPosition
    } = splitModifiers(originalClassName);
    let classGroupId = getClassGroupId(maybePostfixModifierPosition ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);
    let hasPostfixModifier = Boolean(maybePostfixModifierPosition);
    if (!classGroupId) {
      if (!maybePostfixModifierPosition) {
        return {
          isTailwindClass: false,
          originalClassName
        };
      }
      classGroupId = getClassGroupId(baseClassName);
      if (!classGroupId) {
        return {
          isTailwindClass: false,
          originalClassName
        };
      }
      hasPostfixModifier = false;
    }
    const variantModifier = sortModifiers(modifiers).join(":");
    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;
    return {
      isTailwindClass: true,
      modifierId,
      classGroupId,
      originalClassName,
      hasPostfixModifier
    };
  }).reverse().filter((parsed) => {
    if (!parsed.isTailwindClass) {
      return true;
    }
    const {
      modifierId,
      classGroupId,
      hasPostfixModifier
    } = parsed;
    const classId = modifierId + classGroupId;
    if (classGroupsInConflict.has(classId)) {
      return false;
    }
    classGroupsInConflict.add(classId);
    getConflictingClassGroupIds(classGroupId, hasPostfixModifier).forEach((group) => classGroupsInConflict.add(modifierId + group));
    return true;
  }).reverse().map((parsed) => parsed.originalClassName).join(" ");
}
function twJoin() {
  let index2 = 0;
  let argument;
  let resolvedValue;
  let string2 = "";
  while (index2 < arguments.length) {
    if (argument = arguments[index2++]) {
      if (resolvedValue = toValue(argument)) {
        string2 && (string2 += " ");
        string2 += resolvedValue;
      }
    }
  }
  return string2;
}
function toValue(mix) {
  if (typeof mix === "string") {
    return mix;
  }
  let resolvedValue;
  let string2 = "";
  for (let k2 = 0; k2 < mix.length; k2++) {
    if (mix[k2]) {
      if (resolvedValue = toValue(mix[k2])) {
        string2 && (string2 += " ");
        string2 += resolvedValue;
      }
    }
  }
  return string2;
}
function createTailwindMerge(createConfigFirst, ...createConfigRest) {
  let configUtils;
  let cacheGet;
  let cacheSet;
  let functionToCall = initTailwindMerge;
  function initTailwindMerge(classList2) {
    const config2 = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());
    configUtils = createConfigUtils(config2);
    cacheGet = configUtils.cache.get;
    cacheSet = configUtils.cache.set;
    functionToCall = tailwindMerge;
    return tailwindMerge(classList2);
  }
  function tailwindMerge(classList2) {
    const cachedResult = cacheGet(classList2);
    if (cachedResult) {
      return cachedResult;
    }
    const result = mergeClassList(classList2, configUtils);
    cacheSet(classList2, result);
    return result;
  }
  return function callTailwindMerge() {
    return functionToCall(twJoin.apply(null, arguments));
  };
}
function fromTheme(key) {
  const themeGetter = (theme) => theme[key] || [];
  themeGetter.isThemeGetter = true;
  return themeGetter;
}
const arbitraryValueRegex = /^\[(?:([a-z-]+):)?(.+)\]$/i;
const fractionRegex = /^\d+\/\d+$/;
const stringLengths = /* @__PURE__ */ new Set(["px", "full", "screen"]);
const tshirtUnitRegex = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/;
const lengthUnitRegex = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/;
const colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/;
const shadowRegex = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/;
const imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/;
function isLength$4(value) {
  return isNumber$4(value) || stringLengths.has(value) || fractionRegex.test(value);
}
function isArbitraryLength(value) {
  return getIsArbitraryValue(value, "length", isLengthOnly);
}
function isNumber$4(value) {
  return Boolean(value) && !Number.isNaN(Number(value));
}
function isArbitraryNumber(value) {
  return getIsArbitraryValue(value, "number", isNumber$4);
}
function isInteger(value) {
  return Boolean(value) && Number.isInteger(Number(value));
}
function isPercent$1(value) {
  return value.endsWith("%") && isNumber$4(value.slice(0, -1));
}
function isArbitraryValue(value) {
  return arbitraryValueRegex.test(value);
}
function isTshirtSize(value) {
  return tshirtUnitRegex.test(value);
}
const sizeLabels = /* @__PURE__ */ new Set(["length", "size", "percentage"]);
function isArbitrarySize(value) {
  return getIsArbitraryValue(value, sizeLabels, isNever);
}
function isArbitraryPosition(value) {
  return getIsArbitraryValue(value, "position", isNever);
}
const imageLabels = /* @__PURE__ */ new Set(["image", "url"]);
function isArbitraryImage(value) {
  return getIsArbitraryValue(value, imageLabels, isImage);
}
function isArbitraryShadow(value) {
  return getIsArbitraryValue(value, "", isShadow);
}
function isAny() {
  return true;
}
function getIsArbitraryValue(value, label, testValue) {
  const result = arbitraryValueRegex.exec(value);
  if (result) {
    if (result[1]) {
      return typeof label === "string" ? result[1] === label : label.has(result[1]);
    }
    return testValue(result[2]);
  }
  return false;
}
function isLengthOnly(value) {
  return lengthUnitRegex.test(value) && !colorFunctionRegex.test(value);
}
function isNever() {
  return false;
}
function isShadow(value) {
  return shadowRegex.test(value);
}
function isImage(value) {
  return imageRegex.test(value);
}
function getDefaultConfig() {
  const colors = fromTheme("colors");
  const spacing = fromTheme("spacing");
  const blur = fromTheme("blur");
  const brightness = fromTheme("brightness");
  const borderColor = fromTheme("borderColor");
  const borderRadius = fromTheme("borderRadius");
  const borderSpacing = fromTheme("borderSpacing");
  const borderWidth = fromTheme("borderWidth");
  const contrast = fromTheme("contrast");
  const grayscale = fromTheme("grayscale");
  const hueRotate = fromTheme("hueRotate");
  const invert = fromTheme("invert");
  const gap = fromTheme("gap");
  const gradientColorStops = fromTheme("gradientColorStops");
  const gradientColorStopPositions = fromTheme("gradientColorStopPositions");
  const inset = fromTheme("inset");
  const margin = fromTheme("margin");
  const opacity = fromTheme("opacity");
  const padding = fromTheme("padding");
  const saturate = fromTheme("saturate");
  const scale = fromTheme("scale");
  const sepia = fromTheme("sepia");
  const skew = fromTheme("skew");
  const space = fromTheme("space");
  const translate = fromTheme("translate");
  const getOverscroll = () => ["auto", "contain", "none"];
  const getOverflow = () => ["auto", "hidden", "clip", "visible", "scroll"];
  const getSpacingWithAutoAndArbitrary = () => ["auto", isArbitraryValue, spacing];
  const getSpacingWithArbitrary = () => [isArbitraryValue, spacing];
  const getLengthWithEmptyAndArbitrary = () => ["", isLength$4, isArbitraryLength];
  const getNumberWithAutoAndArbitrary = () => ["auto", isNumber$4, isArbitraryValue];
  const getPositions = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"];
  const getLineStyles = () => ["solid", "dashed", "dotted", "double", "none"];
  const getBlendModes = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity", "plus-lighter"];
  const getAlign = () => ["start", "end", "center", "between", "around", "evenly", "stretch"];
  const getZeroAndEmpty = () => ["", "0", isArbitraryValue];
  const getBreaks = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"];
  const getNumber = () => [isNumber$4, isArbitraryNumber];
  const getNumberAndArbitrary = () => [isNumber$4, isArbitraryValue];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [isAny],
      spacing: [isLength$4, isArbitraryLength],
      blur: ["none", "", isTshirtSize, isArbitraryValue],
      brightness: getNumber(),
      borderColor: [colors],
      borderRadius: ["none", "", "full", isTshirtSize, isArbitraryValue],
      borderSpacing: getSpacingWithArbitrary(),
      borderWidth: getLengthWithEmptyAndArbitrary(),
      contrast: getNumber(),
      grayscale: getZeroAndEmpty(),
      hueRotate: getNumberAndArbitrary(),
      invert: getZeroAndEmpty(),
      gap: getSpacingWithArbitrary(),
      gradientColorStops: [colors],
      gradientColorStopPositions: [isPercent$1, isArbitraryLength],
      inset: getSpacingWithAutoAndArbitrary(),
      margin: getSpacingWithAutoAndArbitrary(),
      opacity: getNumber(),
      padding: getSpacingWithArbitrary(),
      saturate: getNumber(),
      scale: getNumber(),
      sepia: getZeroAndEmpty(),
      skew: getNumberAndArbitrary(),
      space: getSpacingWithArbitrary(),
      translate: getSpacingWithArbitrary()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", isArbitraryValue]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [isTshirtSize]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": getBreaks()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": getBreaks()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...getPositions(), isArbitraryValue]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: getOverflow()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": getOverflow()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": getOverflow()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: getOverscroll()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": getOverscroll()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": getOverscroll()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [inset]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [inset]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [inset]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [inset]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [inset]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [inset]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [inset]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [inset]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [inset]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", isInteger, isArbitraryValue]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: getSpacingWithAutoAndArbitrary()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", isArbitraryValue]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: getZeroAndEmpty()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: getZeroAndEmpty()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", isInteger, isArbitraryValue]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [isAny]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", isInteger, isArbitraryValue]
        }, isArbitraryValue]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [isAny]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [isInteger, isArbitraryValue]
        }, isArbitraryValue]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", isArbitraryValue]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", isArbitraryValue]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [gap]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [gap]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [gap]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...getAlign()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...getAlign(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...getAlign(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [padding]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [padding]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [padding]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [padding]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [padding]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [padding]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [padding]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [padding]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [padding]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [margin]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [margin]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [margin]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [margin]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [margin]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [margin]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [margin]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [margin]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [margin]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [space]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [space]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", isArbitraryValue, spacing]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [isArbitraryValue, spacing, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [isArbitraryValue, spacing, "none", "full", "min", "max", "fit", "prose", {
          screen: [isTshirtSize]
        }, isTshirtSize]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [isArbitraryValue, spacing, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [isArbitraryValue, spacing, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [isArbitraryValue, spacing, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [isArbitraryValue, spacing, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", isTshirtSize, isArbitraryLength]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", isArbitraryNumber]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [isAny]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractons"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", isArbitraryValue]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", isNumber$4, isArbitraryNumber]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", isLength$4, isArbitraryValue]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", isArbitraryValue]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", isArbitraryValue]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [colors]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [opacity]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [colors]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [opacity]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...getLineStyles(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", isLength$4, isArbitraryLength]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", isLength$4, isArbitraryValue]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [colors]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: getSpacingWithArbitrary()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", isArbitraryValue]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", isArbitraryValue]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [opacity]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...getPositions(), isArbitraryPosition]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", isArbitrarySize]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, isArbitraryImage]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [colors]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [gradientColorStopPositions]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [gradientColorStopPositions]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [gradientColorStopPositions]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [gradientColorStops]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [gradientColorStops]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [gradientColorStops]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [borderRadius]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [borderRadius]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [borderRadius]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [borderRadius]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [borderRadius]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [borderRadius]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [borderRadius]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [borderRadius]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [borderRadius]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [borderRadius]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [borderRadius]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [borderRadius]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [borderRadius]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [borderRadius]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [borderRadius]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [borderWidth]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [borderWidth]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [borderWidth]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [borderWidth]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [borderWidth]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [borderWidth]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [borderWidth]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [borderWidth]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [borderWidth]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [opacity]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...getLineStyles(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [borderWidth]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [borderWidth]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [opacity]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: getLineStyles()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [borderColor]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [borderColor]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [borderColor]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [borderColor]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [borderColor]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [borderColor]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [borderColor]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [borderColor]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...getLineStyles()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [isLength$4, isArbitraryValue]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [isLength$4, isArbitraryLength]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [colors]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: getLengthWithEmptyAndArbitrary()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [colors]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [opacity]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [isLength$4, isArbitraryLength]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [colors]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", isTshirtSize, isArbitraryShadow]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [isAny]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [opacity]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": getBlendModes()
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": getBlendModes()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [blur]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [brightness]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [contrast]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", isTshirtSize, isArbitraryValue]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [grayscale]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [hueRotate]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [invert]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [saturate]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [sepia]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [blur]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [brightness]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [contrast]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [grayscale]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [hueRotate]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [invert]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [opacity]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [saturate]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [sepia]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [borderSpacing]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [borderSpacing]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [borderSpacing]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", isArbitraryValue]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: getNumberAndArbitrary()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", isArbitraryValue]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: getNumberAndArbitrary()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", isArbitraryValue]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [scale]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [scale]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [scale]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [isInteger, isArbitraryValue]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [translate]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [translate]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [skew]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [skew]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", isArbitraryValue]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", colors]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", isArbitraryValue]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [colors]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", isArbitraryValue]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [colors, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [isLength$4, isArbitraryLength, isArbitraryNumber]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [colors, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}
const twMerge = /* @__PURE__ */ createTailwindMerge(getDefaultConfig);
function cn(...inputs) {
  return twMerge(clsx$1(inputs));
}
const Input = reactExports.forwardRef(
  ({ className, type: type2, ...props }, ref) => {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(
      "input",
      {
        type: type2,
        className: cn(
          "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
          className
        ),
        ref,
        ...props
      }
    );
  }
);
Input.displayName = "Input";
function SearchBar({ onChange }) {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex w-full max-w-sm items-center space-x-2", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
    Input,
    {
      type: "text",
      placeholder: "Hash",
      className: "w-full",
      onChange: (e3) => onChange(e3.target.value)
    }
  ) });
}
const Table = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "relative w-full overflow-auto", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
  "table",
  {
    ref,
    className: cn("w-full caption-bottom text-sm", className),
    ...props
  }
) }));
Table.displayName = "Table";
const TableHeader = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx("thead", { ref, className: cn("[&_tr]:border-b", className), ...props }));
TableHeader.displayName = "TableHeader";
const TableBody = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  "tbody",
  {
    ref,
    className: cn("[&_tr:last-child]:border-0", className),
    ...props
  }
));
TableBody.displayName = "TableBody";
const TableFooter = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  "tfoot",
  {
    ref,
    className: cn(
      "border-t bg-muted/50 font-medium [&>tr]:last:border-b-0",
      className
    ),
    ...props
  }
));
TableFooter.displayName = "TableFooter";
const TableRow = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  "tr",
  {
    ref,
    className: cn(
      "border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted",
      className
    ),
    ...props
  }
));
TableRow.displayName = "TableRow";
const TableHead = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  "th",
  {
    ref,
    className: cn(
      "h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0",
      className
    ),
    ...props
  }
));
TableHead.displayName = "TableHead";
const TableCell = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  "td",
  {
    ref,
    className: cn("p-4 align-middle [&:has([role=checkbox])]:pr-0", className),
    ...props
  }
));
TableCell.displayName = "TableCell";
const TableCaption = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  "caption",
  {
    ref,
    className: cn("mt-4 text-sm text-muted-foreground", className),
    ...props
  }
));
TableCaption.displayName = "TableCaption";
function _extends$y() {
  _extends$y = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$y.apply(this, arguments);
}
function $6ed0406888f73fc4$var$setRef(ref, value) {
  if (typeof ref === "function")
    ref(value);
  else if (ref !== null && ref !== void 0)
    ref.current = value;
}
function $6ed0406888f73fc4$export$43e446d32b3d21af(...refs) {
  return (node) => refs.forEach(
    (ref) => $6ed0406888f73fc4$var$setRef(ref, node)
  );
}
function $6ed0406888f73fc4$export$c7b2cbe3552a0d05(...refs) {
  return reactExports.useCallback($6ed0406888f73fc4$export$43e446d32b3d21af(...refs), refs);
}
const $5e63c961fc1ce211$export$8c6ed5c666ac1360 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { children: children2, ...slotProps } = props;
  const childrenArray = reactExports.Children.toArray(children2);
  const slottable = childrenArray.find($5e63c961fc1ce211$var$isSlottable);
  if (slottable) {
    const newElement = slottable.props.children;
    const newChildren = childrenArray.map((child) => {
      if (child === slottable) {
        if (reactExports.Children.count(newElement) > 1)
          return reactExports.Children.only(null);
        return /* @__PURE__ */ reactExports.isValidElement(newElement) ? newElement.props.children : null;
      } else
        return child;
    });
    return /* @__PURE__ */ reactExports.createElement($5e63c961fc1ce211$var$SlotClone, _extends$y({}, slotProps, {
      ref: forwardedRef
    }), /* @__PURE__ */ reactExports.isValidElement(newElement) ? /* @__PURE__ */ reactExports.cloneElement(newElement, void 0, newChildren) : null);
  }
  return /* @__PURE__ */ reactExports.createElement($5e63c961fc1ce211$var$SlotClone, _extends$y({}, slotProps, {
    ref: forwardedRef
  }), children2);
});
$5e63c961fc1ce211$export$8c6ed5c666ac1360.displayName = "Slot";
const $5e63c961fc1ce211$var$SlotClone = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { children: children2, ...slotProps } = props;
  if (/* @__PURE__ */ reactExports.isValidElement(children2))
    return /* @__PURE__ */ reactExports.cloneElement(children2, {
      ...$5e63c961fc1ce211$var$mergeProps(slotProps, children2.props),
      ref: forwardedRef ? $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, children2.ref) : children2.ref
    });
  return reactExports.Children.count(children2) > 1 ? reactExports.Children.only(null) : null;
});
$5e63c961fc1ce211$var$SlotClone.displayName = "SlotClone";
const $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 = ({ children: children2 }) => {
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, children2);
};
function $5e63c961fc1ce211$var$isSlottable(child) {
  return /* @__PURE__ */ reactExports.isValidElement(child) && child.type === $5e63c961fc1ce211$export$d9f1ccf0bdb05d45;
}
function $5e63c961fc1ce211$var$mergeProps(slotProps, childProps) {
  const overrideProps = {
    ...childProps
  };
  for (const propName in childProps) {
    const slotPropValue = slotProps[propName];
    const childPropValue = childProps[propName];
    const isHandler = /^on[A-Z]/.test(propName);
    if (isHandler) {
      if (slotPropValue && childPropValue)
        overrideProps[propName] = (...args) => {
          childPropValue(...args);
          slotPropValue(...args);
        };
      else if (slotPropValue)
        overrideProps[propName] = slotPropValue;
    } else if (propName === "style")
      overrideProps[propName] = {
        ...slotPropValue,
        ...childPropValue
      };
    else if (propName === "className")
      overrideProps[propName] = [
        slotPropValue,
        childPropValue
      ].filter(Boolean).join(" ");
  }
  return {
    ...slotProps,
    ...overrideProps
  };
}
function r$1(e3) {
  var t2, f2, n2 = "";
  if ("string" == typeof e3 || "number" == typeof e3)
    n2 += e3;
  else if ("object" == typeof e3)
    if (Array.isArray(e3))
      for (t2 = 0; t2 < e3.length; t2++)
        e3[t2] && (f2 = r$1(e3[t2])) && (n2 && (n2 += " "), n2 += f2);
    else
      for (t2 in e3)
        e3[t2] && (n2 && (n2 += " "), n2 += t2);
  return n2;
}
function clsx() {
  for (var e3, t2, f2 = 0, n2 = ""; f2 < arguments.length; )
    (e3 = arguments[f2++]) && (t2 = r$1(e3)) && (n2 && (n2 += " "), n2 += t2);
  return n2;
}
const falsyToString = (value) => typeof value === "boolean" ? "".concat(value) : value === 0 ? "0" : value;
const cx = clsx;
const cva = (base, config2) => {
  return (props) => {
    var ref;
    if ((config2 === null || config2 === void 0 ? void 0 : config2.variants) == null)
      return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);
    const { variants, defaultVariants } = config2;
    const getVariantClassNames = Object.keys(variants).map((variant) => {
      const variantProp = props === null || props === void 0 ? void 0 : props[variant];
      const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];
      if (variantProp === null)
        return null;
      const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);
      return variants[variant][variantKey];
    });
    const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param) => {
      let [key, value] = param;
      if (value === void 0) {
        return acc;
      }
      acc[key] = value;
      return acc;
    }, {});
    const getCompoundVariantClassNames = config2 === null || config2 === void 0 ? void 0 : (ref = config2.compoundVariants) === null || ref === void 0 ? void 0 : ref.reduce((acc, param1) => {
      let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param1;
      return Object.entries(compoundVariantOptions).every((param) => {
        let [key, value] = param;
        return Array.isArray(value) ? value.includes({
          ...defaultVariants,
          ...propsWithoutUndefined
        }[key]) : {
          ...defaultVariants,
          ...propsWithoutUndefined
        }[key] === value;
      }) ? [
        ...acc,
        cvClass,
        cvClassName
      ] : acc;
    }, []);
    return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);
  };
};
const buttonVariants = cva(
  "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground hover:bg-primary/90",
        destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
        outline: "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
        secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline"
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-10 w-10"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
);
const Button = reactExports.forwardRef(
  ({ className, variant, size: size2, asChild = false, ...props }, ref) => {
    const Comp = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : "button";
    return /* @__PURE__ */ jsxRuntimeExports.jsx(
      Comp,
      {
        className: cn(buttonVariants({ variant, size: size2, className })),
        ref,
        ...props
      }
    );
  }
);
Button.displayName = "Button";
function DataTable$4({
  columns: columns3,
  data: data2,
  onFileAdded
}) {
  const [globalFilter, setGlobalFilter] = reactExports.useState("");
  const fileInputRef = reactExports.useRef(null);
  const [isDropdownVisible, setIsDropdownVisible] = reactExports.useState(false);
  const dropdownRef = reactExports.useRef(null);
  reactExports.useEffect(() => {
    if (fileInputRef.current) {
      fileInputRef.current.setAttribute("webkitdirectory", "true");
      fileInputRef.current.setAttribute("directory", "true");
    }
  }, []);
  reactExports.useEffect(() => {
    const handleClickOutside = (event) => {
      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
        setIsDropdownVisible(false);
      }
    };
    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);
  const fuzzyTextFilterFn = (row, value) => {
    const cellValue = row.original["hash"];
    return cellValue && typeof cellValue === "string" ? cellValue.toLowerCase().includes(value.toLowerCase()) : false;
  };
  const table = useReactTable({
    data: data2,
    columns: columns3,
    state: {
      globalFilter
    },
    onGlobalFilterChange: setGlobalFilter,
    globalFilterFn: fuzzyTextFilterFn,
    getCoreRowModel: getCoreRowModel(),
    getFilteredRowModel: getFilteredRowModel(),
    getPaginationRowModel: getPaginationRowModel(),
    getSortedRowModel: getSortedRowModel()
  });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex flex-col py-4 w-full bg-white text-black", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center justify-between py-2", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "w-1/2", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        SearchBar,
        {
          value: globalFilter,
          onChange: (value) => setGlobalFilter(String(value))
        }
      ) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "w-1/2 flex justify-end relative", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "button",
          {
            id: "file-upload",
            className: "border border-black hover:bg-gray-100 text-black font-medium py-2 px-4 rounded-lg transition duration-150 ease-in-out",
            onClick: () => setIsDropdownVisible(!isDropdownVisible),
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-black", children: "+" }),
              " Import"
            ]
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "div",
          {
            ref: dropdownRef,
            className: `origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 divide-y divide-gray-300 ${isDropdownVisible ? "block" : "hidden"}`,
            id: "file-upload-dropdown",
            style: { top: "100%" },
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "label",
                {
                  htmlFor: "file-upload-file",
                  className: "block px-4 py-2 text-sm text-gray-800 hover:bg-gray-100 border-b border-gray-300 cursor-pointer",
                  children: [
                    "File",
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                      "input",
                      {
                        id: "file-upload-file",
                        type: "file",
                        ref: fileInputRef,
                        className: "hidden",
                        onChange: async (e3) => {
                          const file = e3.target.files ? e3.target.files[0] : null;
                          if (file) {
                            await onFileAdded(file);
                          }
                        }
                      }
                    )
                  ]
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "label",
                {
                  htmlFor: "folder-upload",
                  className: "block px-4 py-2 text-sm text-gray-800 hover:bg-gray-100 cursor-pointer",
                  children: [
                    "Folder",
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                      "input",
                      {
                        id: "folder-upload",
                        type: "file",
                        ref: fileInputRef,
                        className: "hidden",
                        onChange: async (e3) => {
                          const items2 = e3.target.files ? e3.target.files : null;
                          if (items2) {
                            for (let i2 = 0; i2 < items2.length; i2++) {
                              await onFileAdded(items2[i2]);
                            }
                          }
                        }
                      }
                    )
                  ]
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "block px-4 py-2 text-sm text-gray-800 hover:bg-gray-100 cursor-pointer", children: "New folder" })
            ]
          }
        )
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "rounded-md border overflow-visible bg-white", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(Table, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(TableHeader, { children: table.getHeaderGroups().map((headerGroup) => /* @__PURE__ */ jsxRuntimeExports.jsx(TableRow, { children: headerGroup.headers.map((header) => {
        return /* @__PURE__ */ jsxRuntimeExports.jsx(TableHead, { className: "bg-gray-50 text-black", children: header.isPlaceholder ? null : flexRender(
          header.column.columnDef.header,
          header.getContext()
        ) }, header.id);
      }) }, headerGroup.id)) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(TableBody, { children: table.getRowModel().rows?.length ? table.getRowModel().rows.map((row) => /* @__PURE__ */ jsxRuntimeExports.jsx(
        TableRow,
        {
          className: row.getIsSelected() ? "selected-row bg-gray-100" : "unselected-row bg-white",
          children: row.getVisibleCells().map((cell) => /* @__PURE__ */ jsxRuntimeExports.jsx(TableCell, { className: "text-black", children: flexRender(
            cell.column.columnDef.cell,
            cell.getContext()
          ) }, cell.id))
        },
        row.id
      )) : /* @__PURE__ */ jsxRuntimeExports.jsx(TableRow, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        TableCell,
        {
          colSpan: columns3.length,
          className: "h-24 text-center text-black",
          children: "No results."
        }
      ) }) })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center justify-end space-x-2 py-4 pb-8", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Button,
        {
          variant: "outline",
          size: "sm",
          className: "text-black border-black",
          onClick: () => table.previousPage(),
          disabled: !table.getCanPreviousPage(),
          children: "Previous"
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Button,
        {
          variant: "outline",
          size: "sm",
          className: "text-black border-black",
          onClick: () => table.nextPage(),
          disabled: !table.getCanNextPage(),
          children: "Next"
        }
      )
    ] })
  ] });
}
function $c512c27ab02ef895$export$50c7b4e9d9f19c1(scopeName, createContextScopeDeps = []) {
  let defaultContexts = [];
  function $c512c27ab02ef895$export$fd42f52fd3ae1109(rootComponentName, defaultContext) {
    const BaseContext = /* @__PURE__ */ reactExports.createContext(defaultContext);
    const index2 = defaultContexts.length;
    defaultContexts = [
      ...defaultContexts,
      defaultContext
    ];
    function Provider(props) {
      const { scope, children: children2, ...context } = props;
      const Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index2]) || BaseContext;
      const value = reactExports.useMemo(
        () => context,
        Object.values(context)
      );
      return /* @__PURE__ */ reactExports.createElement(Context.Provider, {
        value
      }, children2);
    }
    function useContext(consumerName, scope) {
      const Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index2]) || BaseContext;
      const context = reactExports.useContext(Context);
      if (context)
        return context;
      if (defaultContext !== void 0)
        return defaultContext;
      throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
    }
    Provider.displayName = rootComponentName + "Provider";
    return [
      Provider,
      useContext
    ];
  }
  const createScope = () => {
    const scopeContexts = defaultContexts.map((defaultContext) => {
      return /* @__PURE__ */ reactExports.createContext(defaultContext);
    });
    return function useScope(scope) {
      const contexts = (scope === null || scope === void 0 ? void 0 : scope[scopeName]) || scopeContexts;
      return reactExports.useMemo(
        () => ({
          [`__scope${scopeName}`]: {
            ...scope,
            [scopeName]: contexts
          }
        }),
        [
          scope,
          contexts
        ]
      );
    };
  };
  createScope.scopeName = scopeName;
  return [
    $c512c27ab02ef895$export$fd42f52fd3ae1109,
    $c512c27ab02ef895$var$composeContextScopes(createScope, ...createContextScopeDeps)
  ];
}
function $c512c27ab02ef895$var$composeContextScopes(...scopes) {
  const baseScope = scopes[0];
  if (scopes.length === 1)
    return baseScope;
  const createScope1 = () => {
    const scopeHooks = scopes.map(
      (createScope) => ({
        useScope: createScope(),
        scopeName: createScope.scopeName
      })
    );
    return function useComposedScopes(overrideScopes) {
      const nextScopes1 = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {
        const scopeProps = useScope(overrideScopes);
        const currentScope = scopeProps[`__scope${scopeName}`];
        return {
          ...nextScopes,
          ...currentScope
        };
      }, {});
      return reactExports.useMemo(
        () => ({
          [`__scope${baseScope.scopeName}`]: nextScopes1
        }),
        [
          nextScopes1
        ]
      );
    };
  };
  createScope1.scopeName = baseScope.scopeName;
  return createScope1;
}
function $e42e1063c40fb3ef$export$b9ecd428b558ff10(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {
  return function handleEvent(event) {
    originalEventHandler === null || originalEventHandler === void 0 || originalEventHandler(event);
    if (checkForDefaultPrevented === false || !event.defaultPrevented)
      return ourEventHandler === null || ourEventHandler === void 0 ? void 0 : ourEventHandler(event);
  };
}
function $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback) {
  const callbackRef = reactExports.useRef(callback);
  reactExports.useEffect(() => {
    callbackRef.current = callback;
  });
  return reactExports.useMemo(
    () => (...args) => {
      var _callbackRef$current;
      return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);
    },
    []
  );
}
function $71cd76cc60e0454e$export$6f32135080cb4c3({ prop, defaultProp, onChange = () => {
} }) {
  const [uncontrolledProp, setUncontrolledProp] = $71cd76cc60e0454e$var$useUncontrolledState({
    defaultProp,
    onChange
  });
  const isControlled = prop !== void 0;
  const value1 = isControlled ? prop : uncontrolledProp;
  const handleChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onChange);
  const setValue = reactExports.useCallback((nextValue) => {
    if (isControlled) {
      const setter = nextValue;
      const value = typeof nextValue === "function" ? setter(prop) : nextValue;
      if (value !== prop)
        handleChange(value);
    } else
      setUncontrolledProp(nextValue);
  }, [
    isControlled,
    prop,
    setUncontrolledProp,
    handleChange
  ]);
  return [
    value1,
    setValue
  ];
}
function $71cd76cc60e0454e$var$useUncontrolledState({ defaultProp, onChange }) {
  const uncontrolledState = reactExports.useState(defaultProp);
  const [value] = uncontrolledState;
  const prevValueRef = reactExports.useRef(value);
  const handleChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onChange);
  reactExports.useEffect(() => {
    if (prevValueRef.current !== value) {
      handleChange(value);
      prevValueRef.current = value;
    }
  }, [
    value,
    prevValueRef,
    handleChange
  ]);
  return uncontrolledState;
}
function $010c2913dbd2fe3d$export$5cae361ad82dce8b(value) {
  const ref = reactExports.useRef({
    value,
    previous: value
  });
  return reactExports.useMemo(() => {
    if (ref.current.value !== value) {
      ref.current.previous = ref.current.value;
      ref.current.value = value;
    }
    return ref.current.previous;
  }, [
    value
  ]);
}
const $9f79659886946c16$export$e5c5a5f917a5871c = Boolean(globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) ? reactExports.useLayoutEffect : () => {
};
function $db6c3485150b8e66$export$1ab7ae714698c4b8(element) {
  const [size2, setSize] = reactExports.useState(void 0);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (element) {
      setSize({
        width: element.offsetWidth,
        height: element.offsetHeight
      });
      const resizeObserver = new ResizeObserver((entries) => {
        if (!Array.isArray(entries))
          return;
        if (!entries.length)
          return;
        const entry = entries[0];
        let width;
        let height;
        if ("borderBoxSize" in entry) {
          const borderSizeEntry = entry["borderBoxSize"];
          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;
          width = borderSize["inlineSize"];
          height = borderSize["blockSize"];
        } else {
          width = element.offsetWidth;
          height = element.offsetHeight;
        }
        setSize({
          width,
          height
        });
      });
      resizeObserver.observe(element, {
        box: "border-box"
      });
      return () => resizeObserver.unobserve(element);
    } else
      setSize(void 0);
  }, [
    element
  ]);
  return size2;
}
function $fe963b355347cc68$export$3e6543de14f8614f(initialState2, machine) {
  return reactExports.useReducer((state, event) => {
    const nextState = machine[state][event];
    return nextState !== null && nextState !== void 0 ? nextState : state;
  }, initialState2);
}
const $921a889cee6df7e8$export$99c2b779aa4e8b8b = (props) => {
  const { present, children: children2 } = props;
  const presence = $921a889cee6df7e8$var$usePresence(present);
  const child = typeof children2 === "function" ? children2({
    present: presence.isPresent
  }) : reactExports.Children.only(children2);
  const ref = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(presence.ref, child.ref);
  const forceMount = typeof children2 === "function";
  return forceMount || presence.isPresent ? /* @__PURE__ */ reactExports.cloneElement(child, {
    ref
  }) : null;
};
$921a889cee6df7e8$export$99c2b779aa4e8b8b.displayName = "Presence";
function $921a889cee6df7e8$var$usePresence(present) {
  const [node1, setNode] = reactExports.useState();
  const stylesRef = reactExports.useRef({});
  const prevPresentRef = reactExports.useRef(present);
  const prevAnimationNameRef = reactExports.useRef("none");
  const initialState2 = present ? "mounted" : "unmounted";
  const [state, send] = $fe963b355347cc68$export$3e6543de14f8614f(initialState2, {
    mounted: {
      UNMOUNT: "unmounted",
      ANIMATION_OUT: "unmountSuspended"
    },
    unmountSuspended: {
      MOUNT: "mounted",
      ANIMATION_END: "unmounted"
    },
    unmounted: {
      MOUNT: "mounted"
    }
  });
  reactExports.useEffect(() => {
    const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
    prevAnimationNameRef.current = state === "mounted" ? currentAnimationName : "none";
  }, [
    state
  ]);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    const styles = stylesRef.current;
    const wasPresent = prevPresentRef.current;
    const hasPresentChanged = wasPresent !== present;
    if (hasPresentChanged) {
      const prevAnimationName = prevAnimationNameRef.current;
      const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(styles);
      if (present)
        send("MOUNT");
      else if (currentAnimationName === "none" || (styles === null || styles === void 0 ? void 0 : styles.display) === "none")
        send("UNMOUNT");
      else {
        const isAnimating = prevAnimationName !== currentAnimationName;
        if (wasPresent && isAnimating)
          send("ANIMATION_OUT");
        else
          send("UNMOUNT");
      }
      prevPresentRef.current = present;
    }
  }, [
    present,
    send
  ]);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (node1) {
      const handleAnimationEnd = (event) => {
        const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
        const isCurrentAnimation = currentAnimationName.includes(event.animationName);
        if (event.target === node1 && isCurrentAnimation)
          reactDomExports.flushSync(
            () => send("ANIMATION_END")
          );
      };
      const handleAnimationStart = (event) => {
        if (event.target === node1)
          prevAnimationNameRef.current = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
      };
      node1.addEventListener("animationstart", handleAnimationStart);
      node1.addEventListener("animationcancel", handleAnimationEnd);
      node1.addEventListener("animationend", handleAnimationEnd);
      return () => {
        node1.removeEventListener("animationstart", handleAnimationStart);
        node1.removeEventListener("animationcancel", handleAnimationEnd);
        node1.removeEventListener("animationend", handleAnimationEnd);
      };
    } else
      send("ANIMATION_END");
  }, [
    node1,
    send
  ]);
  return {
    isPresent: [
      "mounted",
      "unmountSuspended"
    ].includes(state),
    ref: reactExports.useCallback((node) => {
      if (node)
        stylesRef.current = getComputedStyle(node);
      setNode(node);
    }, [])
  };
}
function $921a889cee6df7e8$var$getAnimationName(styles) {
  return (styles === null || styles === void 0 ? void 0 : styles.animationName) || "none";
}
const $8927f6f2acc4f386$var$NODES = [
  "a",
  "button",
  "div",
  "form",
  "h2",
  "h3",
  "img",
  "input",
  "label",
  "li",
  "nav",
  "ol",
  "p",
  "span",
  "svg",
  "ul"
];
const $8927f6f2acc4f386$export$250ffa63cdc0d034 = $8927f6f2acc4f386$var$NODES.reduce((primitive, node) => {
  const Node2 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
    const { asChild, ...primitiveProps } = props;
    const Comp = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : node;
    reactExports.useEffect(() => {
      window[Symbol.for("radix-ui")] = true;
    }, []);
    return /* @__PURE__ */ reactExports.createElement(Comp, _extends$y({}, primitiveProps, {
      ref: forwardedRef
    }));
  });
  Node2.displayName = `Primitive.${node}`;
  return {
    ...primitive,
    [node]: Node2
  };
}, {});
function $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, event) {
  if (target)
    reactDomExports.flushSync(
      () => target.dispatchEvent(event)
    );
}
const $e698a72e93240346$var$CHECKBOX_NAME = "Checkbox";
const [$e698a72e93240346$var$createCheckboxContext, $e698a72e93240346$export$b566c4ff5488ea01] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($e698a72e93240346$var$CHECKBOX_NAME);
const [$e698a72e93240346$var$CheckboxProvider, $e698a72e93240346$var$useCheckboxContext] = $e698a72e93240346$var$createCheckboxContext($e698a72e93240346$var$CHECKBOX_NAME);
const $e698a72e93240346$export$48513f6b9f8ce62d = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeCheckbox, name, checked: checkedProp, defaultChecked, required, disabled, value = "on", onCheckedChange, ...checkboxProps } = props;
  const [button, setButton] = reactExports.useState(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setButton(node)
  );
  const hasConsumerStoppedPropagationRef = reactExports.useRef(false);
  const isFormControl = button ? Boolean(button.closest("form")) : true;
  const [checked = false, setChecked] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: checkedProp,
    defaultProp: defaultChecked,
    onChange: onCheckedChange
  });
  const initialCheckedStateRef = reactExports.useRef(checked);
  reactExports.useEffect(() => {
    const form = button === null || button === void 0 ? void 0 : button.form;
    if (form) {
      const reset = () => setChecked(initialCheckedStateRef.current);
      form.addEventListener("reset", reset);
      return () => form.removeEventListener("reset", reset);
    }
  }, [
    button,
    setChecked
  ]);
  return /* @__PURE__ */ reactExports.createElement($e698a72e93240346$var$CheckboxProvider, {
    scope: __scopeCheckbox,
    state: checked,
    disabled
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends$y({
    type: "button",
    role: "checkbox",
    "aria-checked": $e698a72e93240346$var$isIndeterminate(checked) ? "mixed" : checked,
    "aria-required": required,
    "data-state": $e698a72e93240346$var$getState(checked),
    "data-disabled": disabled ? "" : void 0,
    disabled,
    value
  }, checkboxProps, {
    ref: composedRefs,
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      if (event.key === "Enter")
        event.preventDefault();
    }),
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, (event) => {
      setChecked(
        (prevChecked) => $e698a72e93240346$var$isIndeterminate(prevChecked) ? true : !prevChecked
      );
      if (isFormControl) {
        hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
        if (!hasConsumerStoppedPropagationRef.current)
          event.stopPropagation();
      }
    })
  })), isFormControl && /* @__PURE__ */ reactExports.createElement($e698a72e93240346$var$BubbleInput, {
    control: button,
    bubbles: !hasConsumerStoppedPropagationRef.current,
    name,
    value,
    checked,
    required,
    disabled,
    style: {
      transform: "translateX(-100%)"
    }
  }));
});
const $e698a72e93240346$var$INDICATOR_NAME = "CheckboxIndicator";
const $e698a72e93240346$export$59aad738f51d1c05 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeCheckbox, forceMount, ...indicatorProps } = props;
  const context = $e698a72e93240346$var$useCheckboxContext($e698a72e93240346$var$INDICATOR_NAME, __scopeCheckbox);
  return /* @__PURE__ */ reactExports.createElement($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || $e698a72e93240346$var$isIndeterminate(context.state) || context.state === true
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends$y({
    "data-state": $e698a72e93240346$var$getState(context.state),
    "data-disabled": context.disabled ? "" : void 0
  }, indicatorProps, {
    ref: forwardedRef,
    style: {
      pointerEvents: "none",
      ...props.style
    }
  })));
});
const $e698a72e93240346$var$BubbleInput = (props) => {
  const { control, checked, bubbles = true, ...inputProps } = props;
  const ref = reactExports.useRef(null);
  const prevChecked = $010c2913dbd2fe3d$export$5cae361ad82dce8b(checked);
  const controlSize = $db6c3485150b8e66$export$1ab7ae714698c4b8(control);
  reactExports.useEffect(() => {
    const input = ref.current;
    const inputProto = window.HTMLInputElement.prototype;
    const descriptor = Object.getOwnPropertyDescriptor(inputProto, "checked");
    const setChecked = descriptor.set;
    if (prevChecked !== checked && setChecked) {
      const event = new Event("click", {
        bubbles
      });
      input.indeterminate = $e698a72e93240346$var$isIndeterminate(checked);
      setChecked.call(input, $e698a72e93240346$var$isIndeterminate(checked) ? false : checked);
      input.dispatchEvent(event);
    }
  }, [
    prevChecked,
    checked,
    bubbles
  ]);
  return /* @__PURE__ */ reactExports.createElement("input", _extends$y({
    type: "checkbox",
    "aria-hidden": true,
    defaultChecked: $e698a72e93240346$var$isIndeterminate(checked) ? false : checked
  }, inputProps, {
    tabIndex: -1,
    ref,
    style: {
      ...props.style,
      ...controlSize,
      position: "absolute",
      pointerEvents: "none",
      opacity: 0,
      margin: 0
    }
  }));
};
function $e698a72e93240346$var$isIndeterminate(checked) {
  return checked === "indeterminate";
}
function $e698a72e93240346$var$getState(checked) {
  return $e698a72e93240346$var$isIndeterminate(checked) ? "indeterminate" : checked ? "checked" : "unchecked";
}
const $e698a72e93240346$export$be92b6f5f03c0fe9 = $e698a72e93240346$export$48513f6b9f8ce62d;
const $e698a72e93240346$export$adb584737d712b70 = $e698a72e93240346$export$59aad738f51d1c05;
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
var defaultAttributes = {
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: 2,
  strokeLinecap: "round",
  strokeLinejoin: "round"
};
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const toKebabCase = (string2) => string2.replace(/([a-z0-9])([A-Z])/g, "$1-$2").toLowerCase().trim();
const createLucideIcon = (iconName, iconNode) => {
  const Component = reactExports.forwardRef(
    ({
      color: color2 = "currentColor",
      size: size2 = 24,
      strokeWidth = 2,
      absoluteStrokeWidth,
      className = "",
      children: children2,
      ...rest
    }, ref) => {
      return reactExports.createElement(
        "svg",
        {
          ref,
          ...defaultAttributes,
          width: size2,
          height: size2,
          stroke: color2,
          strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size2) : strokeWidth,
          className: ["lucide", `lucide-${toKebabCase(iconName)}`, className].join(" "),
          ...rest
        },
        [
          ...iconNode.map(([tag, attrs]) => reactExports.createElement(tag, attrs)),
          ...Array.isArray(children2) ? children2 : [children2]
        ]
      );
    }
  );
  Component.displayName = `${iconName}`;
  return Component;
};
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const AlignRight = createLucideIcon("AlignRight", [
  ["line", { x1: "21", x2: "3", y1: "6", y2: "6", key: "1fp77t" }],
  ["line", { x1: "21", x2: "9", y1: "12", y2: "12", key: "1uyos4" }],
  ["line", { x1: "21", x2: "7", y1: "18", y2: "18", key: "1g9eri" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ArrowUpDown = createLucideIcon("ArrowUpDown", [
  ["path", { d: "m21 16-4 4-4-4", key: "f6ql7i" }],
  ["path", { d: "M17 20V4", key: "1ejh1v" }],
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const BarChart2 = createLucideIcon("BarChart2", [
  ["line", { x1: "18", x2: "18", y1: "20", y2: "10", key: "1xfpm4" }],
  ["line", { x1: "12", x2: "12", y1: "20", y2: "4", key: "be30l9" }],
  ["line", { x1: "6", x2: "6", y1: "20", y2: "14", key: "1r4le6" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Check = createLucideIcon("Check", [["path", { d: "M20 6 9 17l-5-5", key: "1gmf2c" }]]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ChevronDown = createLucideIcon("ChevronDown", [
  ["path", { d: "m6 9 6 6 6-6", key: "qrunsl" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ChevronFirst = createLucideIcon("ChevronFirst", [
  ["path", { d: "m17 18-6-6 6-6", key: "1yerx2" }],
  ["path", { d: "M7 6v12", key: "1p53r6" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ChevronLast = createLucideIcon("ChevronLast", [
  ["path", { d: "m7 18 6-6-6-6", key: "lwmzdw" }],
  ["path", { d: "M17 6v12", key: "1o0aio" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ChevronUp = createLucideIcon("ChevronUp", [["path", { d: "m18 15-6-6-6 6", key: "153udz" }]]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ChevronsDown = createLucideIcon("ChevronsDown", [
  ["path", { d: "m7 6 5 5 5-5", key: "1lc07p" }],
  ["path", { d: "m7 13 5 5 5-5", key: "1d48rs" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ChevronsRight = createLucideIcon("ChevronsRight", [
  ["path", { d: "m6 17 5-5-5-5", key: "xnjwq" }],
  ["path", { d: "m13 17 5-5-5-5", key: "17xmmf" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ChevronsUp = createLucideIcon("ChevronsUp", [
  ["path", { d: "m17 11-5-5-5 5", key: "e8nh98" }],
  ["path", { d: "m17 18-5-5-5 5", key: "2avn1x" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const CircleDollarSign = createLucideIcon("CircleDollarSign", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8", key: "1h4pet" }],
  ["path", { d: "M12 18V6", key: "zqpxq5" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Circle = createLucideIcon("Circle", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Copy = createLucideIcon("Copy", [
  ["rect", { width: "14", height: "14", x: "8", y: "8", rx: "2", ry: "2", key: "17jyea" }],
  ["path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2", key: "zix9uf" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Cpu = createLucideIcon("Cpu", [
  ["rect", { x: "4", y: "4", width: "16", height: "16", rx: "2", key: "1vbyd7" }],
  ["rect", { x: "9", y: "9", width: "6", height: "6", key: "o3kz5p" }],
  ["path", { d: "M15 2v2", key: "13l42r" }],
  ["path", { d: "M15 20v2", key: "15mkzm" }],
  ["path", { d: "M2 15h2", key: "1gxd5l" }],
  ["path", { d: "M2 9h2", key: "1bbxkp" }],
  ["path", { d: "M20 15h2", key: "19e6y8" }],
  ["path", { d: "M20 9h2", key: "19tzq7" }],
  ["path", { d: "M9 2v2", key: "165o2o" }],
  ["path", { d: "M9 20v2", key: "i2bqo8" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Download = createLucideIcon("Download", [
  ["path", { d: "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4", key: "ih7n3h" }],
  ["polyline", { points: "7 10 12 15 17 10", key: "2ggqvy" }],
  ["line", { x1: "12", x2: "12", y1: "15", y2: "3", key: "1vk2je" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Filter = createLucideIcon("Filter", [
  ["polygon", { points: "22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3", key: "1yg77f" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Globe = createLucideIcon("Globe", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20", key: "13o1zl" }],
  ["path", { d: "M2 12h20", key: "9i4pu4" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const HandCoins = createLucideIcon("HandCoins", [
  ["path", { d: "M11 15h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 17", key: "geh8rc" }],
  [
    "path",
    {
      d: "m7 21 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9",
      key: "1fto5m"
    }
  ],
  ["path", { d: "m2 16 6 6", key: "1pfhp9" }],
  ["circle", { cx: "16", cy: "9", r: "2.9", key: "1n0dlu" }],
  ["circle", { cx: "6", cy: "5", r: "3", key: "151irh" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Info = createLucideIcon("Info", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M12 16v-4", key: "1dtifu" }],
  ["path", { d: "M12 8h.01", key: "e9boi3" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const LayoutDashboard = createLucideIcon("LayoutDashboard", [
  ["rect", { width: "7", height: "9", x: "3", y: "3", rx: "1", key: "10lvy0" }],
  ["rect", { width: "7", height: "5", x: "14", y: "3", rx: "1", key: "16une8" }],
  ["rect", { width: "7", height: "9", x: "14", y: "12", rx: "1", key: "1hutg5" }],
  ["rect", { width: "7", height: "5", x: "3", y: "16", rx: "1", key: "ldoo1y" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const MoreVertical = createLucideIcon("MoreVertical", [
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }],
  ["circle", { cx: "12", cy: "5", r: "1", key: "gxeob9" }],
  ["circle", { cx: "12", cy: "19", r: "1", key: "lyex9k" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const MoveDown = createLucideIcon("MoveDown", [
  ["path", { d: "M8 18L12 22L16 18", key: "cskvfv" }],
  ["path", { d: "M12 2V22", key: "r89rzk" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const MoveUp = createLucideIcon("MoveUp", [
  ["path", { d: "M8 6L12 2L16 6", key: "1yvkyx" }],
  ["path", { d: "M12 2V22", key: "r89rzk" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Network = createLucideIcon("Network", [
  ["rect", { x: "16", y: "16", width: "6", height: "6", rx: "1", key: "4q2zg0" }],
  ["rect", { x: "2", y: "16", width: "6", height: "6", rx: "1", key: "8cvhb9" }],
  ["rect", { x: "9", y: "2", width: "6", height: "6", rx: "1", key: "1egb70" }],
  ["path", { d: "M5 16v-3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3", key: "1jsf9p" }],
  ["path", { d: "M12 12V8", key: "2874zd" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Pause = createLucideIcon("Pause", [
  ["rect", { width: "4", height: "16", x: "6", y: "4", key: "iffhe4" }],
  ["rect", { width: "4", height: "16", x: "14", y: "4", key: "sjin7j" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Play = createLucideIcon("Play", [
  ["polygon", { points: "5 3 19 12 5 21 5 3", key: "191637" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Receipt = createLucideIcon("Receipt", [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8", key: "1h4pet" }],
  ["path", { d: "M12 17.5v-11", key: "1jc1ny" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Search = createLucideIcon("Search", [
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }],
  ["path", { d: "m21 21-4.3-4.3", key: "1qie3q" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Settings = createLucideIcon("Settings", [
  [
    "path",
    {
      d: "M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z",
      key: "1qme2f"
    }
  ],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Trash2 = createLucideIcon("Trash2", [
  ["path", { d: "M3 6h18", key: "d0wm0j" }],
  ["path", { d: "M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6", key: "4alrt4" }],
  ["path", { d: "M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2", key: "v07s0e" }],
  ["line", { x1: "10", x2: "10", y1: "11", y2: "17", key: "1uufr5" }],
  ["line", { x1: "14", x2: "14", y1: "11", y2: "17", key: "xtxkd" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const TrendingDown = createLucideIcon("TrendingDown", [
  ["polyline", { points: "22 17 13.5 8.5 8.5 13.5 2 7", key: "1r2t7k" }],
  ["polyline", { points: "16 17 22 17 22 11", key: "11uiuu" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const TrendingUp = createLucideIcon("TrendingUp", [
  ["polyline", { points: "22 7 13.5 15.5 8.5 10.5 2 17", key: "126l90" }],
  ["polyline", { points: "16 7 22 7 22 13", key: "kwv8wd" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Upload = createLucideIcon("Upload", [
  ["path", { d: "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4", key: "ih7n3h" }],
  ["polyline", { points: "17 8 12 3 7 8", key: "t8dd8p" }],
  ["line", { x1: "12", x2: "12", y1: "3", y2: "15", key: "widbto" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const X = createLucideIcon("X", [
  ["path", { d: "M18 6 6 18", key: "1bl5f8" }],
  ["path", { d: "m6 6 12 12", key: "d8bk6v" }]
]);
/**
 * @license lucide-react v0.340.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Zap = createLucideIcon("Zap", [
  ["polygon", { points: "13 2 3 14 12 14 11 22 21 10 12 10 13 2", key: "45s27k" }]
]);
const Checkbox = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $e698a72e93240346$export$be92b6f5f03c0fe9,
  {
    ref,
    className: cn(
      "peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground",
      className
    ),
    ...props,
    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      $e698a72e93240346$export$adb584737d712b70,
      {
        className: cn("flex items-center justify-center text-current"),
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(Check, { className: "h-4 w-4" })
      }
    )
  }
));
Checkbox.displayName = $e698a72e93240346$export$be92b6f5f03c0fe9.displayName;
const getColumns = (toggleDropdown, updateActivityName, toggleEdit, updateSelection, updateAllSelections, activities) => {
  const [isModalOpen, setIsModalOpen] = reactExports.useState(false);
  const dropdownRef = reactExports.useRef(null);
  reactExports.useEffect(() => {
    const handleClickOutside = (event) => {
      activities.forEach((activity) => {
        if (activity.showDropdown) {
          const dropdownElement = document.getElementById(
            `dropdown-${activity.id}`
          );
          if (dropdownElement && !dropdownElement.contains(event.target)) {
            toggleDropdown(activity.id);
          }
        }
      });
    };
    document.addEventListener("mousedown", handleClickOutside);
    return () => document.removeEventListener("mousedown", handleClickOutside);
  }, [activities]);
  const selectColumn = {
    id: "select",
    header: ({ table }) => /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      Checkbox,
      {
        checked: table.getIsAllPageRowsSelected() || table.getIsSomePageRowsSelected() && "indeterminate",
        onCheckedChange: (value) => {
          table.toggleAllPageRowsSelected(!!value);
          updateAllSelections(!!value);
        },
        "aria-label": "Select all"
      }
    ) }),
    cell: ({ row }) => /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        className: `row ${row.original.isSelected ? "selected-row" : "not-selected-row"}`,
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          Checkbox,
          {
            checked: row.original.isSelected || false,
            onCheckedChange: (value) => {
              row.toggleSelected(!!value);
              updateSelection(row.original.id, !!value);
            },
            "aria-label": "Select row"
          }
        )
      }
    )
  };
  return [
    selectColumn,
    {
      accessorKey: "name",
      header: "File Name",
      cell: ({ row }) => {
        const truncatedName = row.original.name.length > 24 ? `${row.original.name.substring(0, 24)}...` : row.original.name;
        if (row.original.isEditing) {
          return /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "text",
              defaultValue: row.original.name,
              className: "bg-white text-black border-none",
              onBlur: (e3) => {
                updateActivityName(row.original.id, e3.target.value);
                toggleEdit(row.original.id);
              },
              autoFocus: true,
              onKeyDown: (e3) => {
                if (e3.key === "Enter") {
                  e3.currentTarget.blur();
                }
              }
            }
          );
        }
        return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
          truncatedName,
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { color: "black", fontSize: "smaller" }, children: row.original.hash })
        ] });
      }
    },
    {
      accessorKey: "status",
      header: "Status"
    },
    {
      accessorKey: "size",
      header: "Size"
    },
    {
      accessorKey: "peers",
      header: "Peers",
      cell: ({ row }) => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "text-right", children: row.getValue("peers") || "-" })
    },
    {
      id: "dropdown",
      header: () => null,
      cell: ({ row }) => /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "relative", ref: dropdownRef, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "button",
          {
            onClick: (e3) => {
              const rect = e3.currentTarget.getBoundingClientRect();
              const scrollTop = window.scrollY || document.documentElement.scrollTop;
              const scrollLeft = window.scrollX || document.documentElement.scrollLeft;
              const dropdownElement = document.getElementById(`dropdown-${row.original.id}`);
              if (dropdownElement) {
                dropdownElement.style.position = "fixed";
                dropdownElement.style.top = `${rect.bottom + scrollTop}px`;
                dropdownElement.style.left = `${rect.left + scrollLeft}px`;
              }
              toggleDropdown(row.original.id);
            },
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              "svg",
              {
                className: "w-6 h-6",
                fill: "none",
                stroke: "currentColor",
                viewBox: "0 0 24 24",
                xmlns: "http://www.w3.org/2000/svg",
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "path",
                  {
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                    strokeWidth: "2",
                    d: "M19 9l-7 7-7-7"
                  }
                )
              }
            )
          }
        ),
        row.original.showDropdown && /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "div",
          {
            className: "absolute right-0 mt-2 py-2 w-48 bg-white rounded-md shadow-xl z-20 border border-gray-300",
            id: `dropdown-${row.original.id}`,
            onClick: (e3) => e3.stopPropagation(),
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  href: "#",
                  className: "block px-4 py-2 text-sm text-black hover:bg-gray-300 border-b border-gray-200",
                  children: "Download"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: "block px-4 py-2 text-sm text-black hover:bg-gray-300 border-b border-gray-200 cursor-pointer",
                  onClick: (e3) => {
                    e3.preventDefault();
                    toggleEdit(row.original.id);
                    toggleDropdown(row.original.id);
                  },
                  children: "Rename"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  href: "#",
                  className: "block px-4 py-2 text-sm text-black hover:bg-gray-300 border-b border-gray-200",
                  children: "View File Details"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "div",
                {
                  className: "block px-4 py-2 text-sm text-black hover:bg-gray-300 border-b border-gray-200 cursor-pointer",
                  onClick: () => {
                    navigator.clipboard.writeText(row.original.hash);
                    toggleDropdown(row.original.id);
                  },
                  children: "Copy CID"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "block px-4 py-2 text-sm text-black hover:bg-gray-300 cursor-pointer", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "button",
                  {
                    onClick: (e3) => {
                      e3.stopPropagation();
                      setIsModalOpen(true);
                    },
                    children: "Publish to OrcaNet"
                  }
                ),
                isModalOpen && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "fixed inset-0 bg-white bg-opacity-75 flex justify-center items-center z-50", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "bg-white p-8 rounded-2xl shadow-2xl max-w-lg w-full mx-4", children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex justify-center mb-6", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "svg",
                    {
                      xmlns: "http://www.w3.org/2000/svg",
                      className: "w-12 h-12 text-black",
                      fill: "none",
                      viewBox: "0 0 24 24",
                      stroke: "currentColor",
                      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                        "path",
                        {
                          strokeLinecap: "round",
                          strokeLinejoin: "round",
                          strokeWidth: 2,
                          d: "M11 5H6a2 2 0 00-2 2v6a2 2 0 002 2h5l4 4V1l-4 4zm0 0c9 0 9 4 9 4v2s0 4-9 4v-2"
                        }
                      )
                    }
                  ) }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("h2", { className: "text-2xl font-bold text-black mb-6 text-center", children: "Publish to OrcaNet" }),
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "mb-6", children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-lg font-semibold text-black", children: "CID:" }),
                    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-black", children: row.original.hash })
                  ] }),
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "mb-6", children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-lg font-semibold text-black", children: "Select key for publishing:" }),
                    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "mt-2 text-center", children: [
                      /* @__PURE__ */ jsxRuntimeExports.jsx(
                        "input",
                        {
                          type: "radio",
                          id: "selfKey",
                          name: "publishKey",
                          value: "self",
                          checked: true
                        }
                      ),
                      /* @__PURE__ */ jsxRuntimeExports.jsx(
                        "label",
                        {
                          htmlFor: "selfKey",
                          className: "ml-2 text-black",
                          children: "self"
                        }
                      )
                    ] })
                  ] }),
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center justify-center space-x-4 bg-gray-200 p-4 rounded-b-2xl", children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                      "button",
                      {
                        className: "flex-1 justify-center py-3 px-6 border border-transparent shadow text-lg font-medium rounded-md text-black bg-red-300 hover:bg-red-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition duration-150 ease-in-out",
                        onClick: () => {
                          setIsModalOpen(false);
                          toggleDropdown(row.original.id);
                        },
                        children: "Cancel"
                      }
                    ),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                      "button",
                      {
                        className: "flex-1 justify-center py-3 px-6 border border-transparent shadow text-lg font-medium rounded-md text-white bg-blue-300 hover:bg-blue-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-150 ease-in-out",
                        onClick: () => {
                          setIsModalOpen(false);
                          toggleDropdown(row.original.id);
                        },
                        children: "Publish"
                      }
                    )
                  ] })
                ] }) })
              ] })
            ]
          }
        )
      ] })
    }
  ];
};
const sizeToBytes = (size2) => {
  const units = { KiB: 1024, MiB: 1024 * 1024, GiB: 1024 * 1024 * 1024 };
  const match = size2.match(/(\d+(?:\.\d+)?)\s*(KiB|MiB|GiB)/);
  if (match) {
    const value = parseFloat(match[1]);
    const unit2 = match[2];
    return value * units[unit2];
  }
  return 0;
};
const formatFileSize = (sizeInBytes) => {
  const units = ["Bytes", "KiB", "MiB", "GiB", "TiB", "PiB"];
  let unitIndex = 0;
  let size2 = sizeInBytes;
  while (size2 >= 1024 && unitIndex < units.length - 1) {
    size2 /= 1024;
    unitIndex++;
  }
  return `${size2.toFixed(2)} ${units[unitIndex]}`;
};
function GetActivities() {
  return [];
}
function UploadFile(base64String, name, size2) {
  let concating = base64String + name + size2;
  return concating;
}
function RemoveActivity(id2) {
  return id2;
}
function UpdateActivityName(id2, newName) {
  let id1 = id2 + newName;
  return id1;
}
const HomePage = () => {
  let Status;
  ((Status2) => {
    Status2["UPLOADED"] = "Uploaded";
    Status2["UPLOADING"] = "Uploading";
    Status2["ERROR"] = "Error";
    Status2["PUBLISHED"] = "Published";
  })(Status || (Status = {}));
  const [activities, setActivities] = reactExports.useState([]);
  const [updateTrigger, setUpdateTrigger] = reactExports.useState(false);
  const fetchActivities = async () => {
    try {
      const result = await GetActivities();
      setActivities(result);
    } catch (error) {
      console.error("Failed to fetch activities:", error);
    }
  };
  reactExports.useEffect(() => {
    fetchActivities();
  }, []);
  const isAnyActivitySelected = activities.some(
    (activity) => activity.isSelected
  );
  const totalFiles = activities.length;
  const networkStatus = "Healthy";
  const toggleDropdown = (id2) => {
    if (id2 === -1) {
      setActivities(
        (currentActivities) => currentActivities.map((activity) => ({
          ...activity,
          showDropdown: false
        }))
      );
    } else {
      setActivities(
        (currentActivities) => currentActivities.map(
          (activity) => activity.id === id2 ? { ...activity, showDropdown: !activity.showDropdown } : activity
        )
      );
    }
  };
  const updateActivityName = async (id2, newName) => {
    try {
      await UpdateActivityName(id2, newName);
      await fetchActivities();
    } catch (error) {
      console.error("Failed to update activity name:", error);
    }
  };
  const toggleEdit = (id2) => {
    setActivities(
      (currentActivities) => currentActivities.map(
        (activity) => activity.id === id2 ? { ...activity, isEditing: !activity.isEditing } : activity
      )
    );
  };
  const removeAllSelected = async () => {
    const selectedActivities = activities.filter((activity) => activity.isSelected).map((activity) => activity.id);
    for (const id2 of selectedActivities) {
      await RemoveActivity(id2);
    }
    await fetchActivities();
  };
  const updateSelection = (id2, isSelected) => {
    setActivities(
      (currentActivities) => currentActivities.map(
        (activity) => activity.id === id2 ? { ...activity, isSelected } : activity
      )
    );
  };
  const updateAllSelections = (isSelected) => {
    setActivities(
      (currentActivities) => currentActivities.map((activity) => ({
        ...activity,
        isSelected
      }))
    );
  };
  const addFileToActivities = async (file) => {
    try {
      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = async () => {
        const base64String = reader.result?.toString().split(",")[1];
        if (base64String) {
          const fileSizeInBytes = file.size;
          const fileSizeFormatted = formatFileSize(fileSizeInBytes);
          await UploadFile(base64String, file.name, fileSizeFormatted);
          await fetchActivities();
          setUpdateTrigger((prev) => !prev);
        }
      };
      reader.onerror = (error) => {
        console.error("Error converting file to Base64:", error);
      };
    } catch (error) {
      console.error("Failed to upload file:", error);
    }
  };
  const handleDrop = async (event) => {
    document.getElementById("home-page").style.backgroundColor = "white";
    event.preventDefault();
    const items2 = event.dataTransfer.items;
    const files = [];
    for (let i2 = 0; i2 < items2.length; i2++) {
      const item = items2[i2].webkitGetAsEntry();
      if (item) {
        const fileEntries = await getFilesRecursively(item);
        files.push(...fileEntries);
      }
    }
    for (const file of files) {
      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = async () => {
        const base64String = reader.result?.toString().split(",")[1];
        if (base64String) {
          const fileSizeInBytes = file.size;
          const fileSizeFormatted = formatFileSize(fileSizeInBytes);
          await UploadFile(base64String, file.name, fileSizeFormatted);
          await fetchActivities();
        }
      };
    }
  };
  const getFilesRecursively = async (entry) => {
    const files = [];
    if (entry.isFile) {
      const file = await new Promise((resolve) => entry.file(resolve));
      files.push(file);
    } else if (entry.isDirectory) {
      const dirReader = entry.createReader();
      const entries = await new Promise((resolve) => {
        dirReader.readEntries(resolve);
      });
      for (const childEntry of entries) {
        const childFiles = await getFilesRecursively(childEntry);
        files.push(...childFiles);
      }
    }
    return files;
  };
  const handleDragOver = (event) => {
    event.preventDefault();
    document.getElementById("home-page").style.backgroundColor = "rgba(0, 123, 255, 0.1)";
    event.dataTransfer.dropEffect = "copy";
  };
  const handleDragLeave = (event) => {
    document.getElementById("home-page").style.backgroundColor = "white";
  };
  const totalSizeBytes = activities.reduce((total, activity) => {
    return total + sizeToBytes(activity.size);
  }, 0);
  const totalSizeFormatted = formatFileSize(totalSizeBytes);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "div",
    {
      id: "home-page",
      onDrop: handleDrop,
      onDragOver: handleDragOver,
      onDragLeave: handleDragLeave,
      className: `relative w-full`,
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "dashboard-overview bg-white p-6 rounded-xl shadow-lg mb-6", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("h2", { className: "text-xl font-semibold mb-4 text-gray-800", children: "Dashboard Overview" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "grid grid-cols-3 gap-6", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "file-hosted bg-white p-4 rounded-lg", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "block text-sm font-medium text-gray-600", children: "Files Hosted" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "block text-2xl font-bold text-gray-800", children: totalFiles })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "storage-used bg-white p-4 rounded-lg", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "block text-sm font-medium text-gray-600", children: "Total Storage Used" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "block text-2xl font-bold text-gray-800", children: totalSizeFormatted })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "network-status bg-white p-4 rounded-lg", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "block text-sm font-medium text-gray-600", children: "Network Status" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "span",
                {
                  className: `block text-2xl font-bold ${"text-green-600"}`,
                  children: networkStatus
                }
              )
            ] })
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          DataTable$4,
          {
            columns: getColumns(
              toggleDropdown,
              updateActivityName,
              toggleEdit,
              updateSelection,
              updateAllSelections,
              activities
            ),
            data: activities,
            totalSize: totalSizeFormatted,
            onFileAdded: addFileToActivities,
            activities
          }
        ),
        isAnyActivitySelected && /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "div",
          {
            className: `ml-80 fixed bottom-0 inset-x-0 mx-auto p-4 bg-gray-100 shadow-lg flex items-center justify-between transition-transform duration-300 ease-in-out ${isAnyActivitySelected ? "translate-y-0" : "translate-y-full"}`,
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center space-x-4", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center space-x-2", children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "rounded-full bg-blue-100 text-blue-800 text-sm font-semibold mr-3 px-4 py-1", children: activities.filter((activity) => activity.isSelected).length }),
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "font-semibold", children: [
                    activities.filter((activity) => activity.isSelected).length,
                    " ",
                    "Item selected"
                  ] }),
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "text-sm text-gray-800", children: [
                    "Total size:",
                    " ",
                    formatFileSize(
                      activities.filter((activity) => activity.isSelected).reduce(
                        (total, activity) => total + sizeToBytes(activity.size),
                        0
                      )
                    )
                  ] })
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex space-x-2", children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("button", { className: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-3 text-sm rounded transition ease-in-out focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50", children: "Share link" }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("button", { className: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-3 text-sm rounded transition ease-in-out focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50", children: "Download" }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "button",
                    {
                      onClick: removeAllSelected,
                      className: "bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-3 text-sm rounded transition ease-in-out focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50",
                      children: "Remove"
                    }
                  )
                ] })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "button",
                {
                  onClick: () => updateAllSelections(false),
                  className: "text-gray-800 hover:text-gray-900 transition ease-in-out focus:outline-none",
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "svg",
                    {
                      className: "w-6 h-6",
                      fill: "none",
                      strokeLinecap: "round",
                      strokeLinejoin: "round",
                      strokeWidth: "2",
                      viewBox: "0 0 24 24",
                      stroke: "currentColor",
                      children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M6 18L18 6M6 6l12 12" })
                    }
                  )
                }
              )
            ]
          }
        )
      ]
    }
  );
};
function CardInfo({
  title,
  value,
  percent,
  textColor,
  traffic
}) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex flex-col gap-3", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { children: title }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "text-3xl font-bold text-nowrap", children: [
      value,
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-sm", children: traffic ? "Kb/s" : "Files" })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: `text-lg ${textColor} text-nowrap`, children: percent })
  ] });
}
function CardIcon({
  icon,
  backgroundColor
}) {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: `${backgroundColor} p-3 rounded-lg size-fit float-right`, children: icon });
}
function StatsCard({
  title,
  value,
  percent,
  icon,
  backgroundColor,
  textColor,
  traffic
}) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "border rounded-lg px-5 py-7", children: [
    icon && /* @__PURE__ */ jsxRuntimeExports.jsx(CardIcon, { icon, backgroundColor }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      CardInfo,
      {
        title,
        value,
        percent,
        textColor,
        traffic
      }
    )
  ] });
}
function StatsCardContainer() {
  const cardInfo = [
    {
      title: "Monthly Upload",
      value: 51,
      percent: "+1.5%",
      icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Upload, {}),
      backgroundColor: "bg-teal-200",
      textColor: "text-teal-500"
    },
    {
      title: "Incoming Traffic",
      value: 100,
      percent: "+10.912%",
      icon: /* @__PURE__ */ jsxRuntimeExports.jsx(ChevronsUp, {}),
      backgroundColor: "bg-teal-200",
      textColor: "text-teal-500",
      traffic: true
    },
    {
      title: "Monthly Download",
      value: 10,
      percent: "-0.125%",
      icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Download, {}),
      backgroundColor: "bg-rose-200",
      textColor: "text-rose-500"
    },
    {
      title: "Outgoing Traffic",
      value: 10,
      percent: "-1.212%",
      icon: /* @__PURE__ */ jsxRuntimeExports.jsx(ChevronsDown, {}),
      backgroundColor: "bg-rose-200",
      textColor: "text-rose-500",
      traffic: true
    }
  ];
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "grid grid-cols-2 grid-rows-2 gap-7 col-span-2 font-semibold", children: cardInfo.map((card) => /* @__PURE__ */ jsxRuntimeExports.jsx(StatsCard, { ...card }, card.title)) });
}
var reactApexcharts_min = {};
var apexcharts_common = { exports: {} };
/*!
 * ApexCharts v3.48.0
 * (c) 2018-2024 ApexCharts
 * Released under the MIT License.
 */
(function(module, exports) {
  function t2(t3, e4) {
    var i3 = Object.keys(t3);
    if (Object.getOwnPropertySymbols) {
      var a3 = Object.getOwnPropertySymbols(t3);
      e4 && (a3 = a3.filter(function(e6) {
        return Object.getOwnPropertyDescriptor(t3, e6).enumerable;
      })), i3.push.apply(i3, a3);
    }
    return i3;
  }
  function e3(e4) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var a3 = null != arguments[i3] ? arguments[i3] : {};
      i3 % 2 ? t2(Object(a3), true).forEach(function(t3) {
        o2(e4, t3, a3[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(a3)) : t2(Object(a3)).forEach(function(t3) {
        Object.defineProperty(e4, t3, Object.getOwnPropertyDescriptor(a3, t3));
      });
    }
    return e4;
  }
  function i2(t3) {
    return i2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
      return typeof t4;
    } : function(t4) {
      return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
    }, i2(t3);
  }
  function a2(t3, e4) {
    if (!(t3 instanceof e4))
      throw new TypeError("Cannot call a class as a function");
  }
  function s2(t3, e4) {
    for (var i3 = 0; i3 < e4.length; i3++) {
      var a3 = e4[i3];
      a3.enumerable = a3.enumerable || false, a3.configurable = true, "value" in a3 && (a3.writable = true), Object.defineProperty(t3, a3.key, a3);
    }
  }
  function r2(t3, e4, i3) {
    return e4 && s2(t3.prototype, e4), i3 && s2(t3, i3), t3;
  }
  function o2(t3, e4, i3) {
    return e4 in t3 ? Object.defineProperty(t3, e4, { value: i3, enumerable: true, configurable: true, writable: true }) : t3[e4] = i3, t3;
  }
  function n2(t3, e4) {
    if ("function" != typeof e4 && null !== e4)
      throw new TypeError("Super expression must either be null or a function");
    t3.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t3, writable: true, configurable: true } }), e4 && h2(t3, e4);
  }
  function l2(t3) {
    return l2 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t4) {
      return t4.__proto__ || Object.getPrototypeOf(t4);
    }, l2(t3);
  }
  function h2(t3, e4) {
    return h2 = Object.setPrototypeOf || function(t4, e6) {
      return t4.__proto__ = e6, t4;
    }, h2(t3, e4);
  }
  function c2(t3) {
    if (void 0 === t3)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return t3;
  }
  function d2(t3) {
    var e4 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (t4) {
        return false;
      }
    }();
    return function() {
      var i3, a3 = l2(t3);
      if (e4) {
        var s3 = l2(this).constructor;
        i3 = Reflect.construct(a3, arguments, s3);
      } else
        i3 = a3.apply(this, arguments);
      return function(t4, e6) {
        if (e6 && ("object" == typeof e6 || "function" == typeof e6))
          return e6;
        if (void 0 !== e6)
          throw new TypeError("Derived constructors may only return object or undefined");
        return c2(t4);
      }(this, i3);
    };
  }
  function g2(t3, e4) {
    return function(t4) {
      if (Array.isArray(t4))
        return t4;
    }(t3) || function(t4, e6) {
      var i3 = null == t4 ? null : "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
      if (null == i3)
        return;
      var a3, s3, r3 = [], o3 = true, n3 = false;
      try {
        for (i3 = i3.call(t4); !(o3 = (a3 = i3.next()).done) && (r3.push(a3.value), !e6 || r3.length !== e6); o3 = true)
          ;
      } catch (t5) {
        n3 = true, s3 = t5;
      } finally {
        try {
          o3 || null == i3.return || i3.return();
        } finally {
          if (n3)
            throw s3;
        }
      }
      return r3;
    }(t3, e4) || p2(t3, e4) || function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function u2(t3) {
    return function(t4) {
      if (Array.isArray(t4))
        return f2(t4);
    }(t3) || function(t4) {
      if ("undefined" != typeof Symbol && null != t4[Symbol.iterator] || null != t4["@@iterator"])
        return Array.from(t4);
    }(t3) || p2(t3) || function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function p2(t3, e4) {
    if (t3) {
      if ("string" == typeof t3)
        return f2(t3, e4);
      var i3 = Object.prototype.toString.call(t3).slice(8, -1);
      return "Object" === i3 && t3.constructor && (i3 = t3.constructor.name), "Map" === i3 || "Set" === i3 ? Array.from(t3) : "Arguments" === i3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i3) ? f2(t3, e4) : void 0;
    }
  }
  function f2(t3, e4) {
    (null == e4 || e4 > t3.length) && (e4 = t3.length);
    for (var i3 = 0, a3 = new Array(e4); i3 < e4; i3++)
      a3[i3] = t3[i3];
    return a3;
  }
  var x2 = function() {
    function t3() {
      a2(this, t3);
    }
    return r2(t3, [{ key: "shadeRGBColor", value: function(t4, e4) {
      var i3 = e4.split(","), a3 = t4 < 0 ? 0 : 255, s3 = t4 < 0 ? -1 * t4 : t4, r3 = parseInt(i3[0].slice(4), 10), o3 = parseInt(i3[1], 10), n3 = parseInt(i3[2], 10);
      return "rgb(" + (Math.round((a3 - r3) * s3) + r3) + "," + (Math.round((a3 - o3) * s3) + o3) + "," + (Math.round((a3 - n3) * s3) + n3) + ")";
    } }, { key: "shadeHexColor", value: function(t4, e4) {
      var i3 = parseInt(e4.slice(1), 16), a3 = t4 < 0 ? 0 : 255, s3 = t4 < 0 ? -1 * t4 : t4, r3 = i3 >> 16, o3 = i3 >> 8 & 255, n3 = 255 & i3;
      return "#" + (16777216 + 65536 * (Math.round((a3 - r3) * s3) + r3) + 256 * (Math.round((a3 - o3) * s3) + o3) + (Math.round((a3 - n3) * s3) + n3)).toString(16).slice(1);
    } }, { key: "shadeColor", value: function(e4, i3) {
      return t3.isColorHex(i3) ? this.shadeHexColor(e4, i3) : this.shadeRGBColor(e4, i3);
    } }], [{ key: "bind", value: function(t4, e4) {
      return function() {
        return t4.apply(e4, arguments);
      };
    } }, { key: "isObject", value: function(t4) {
      return t4 && "object" === i2(t4) && !Array.isArray(t4) && null != t4;
    } }, { key: "is", value: function(t4, e4) {
      return Object.prototype.toString.call(e4) === "[object " + t4 + "]";
    } }, { key: "listToArray", value: function(t4) {
      var e4, i3 = [];
      for (e4 = 0; e4 < t4.length; e4++)
        i3[e4] = t4[e4];
      return i3;
    } }, { key: "extend", value: function(t4, e4) {
      var i3 = this;
      "function" != typeof Object.assign && (Object.assign = function(t5) {
        if (null == t5)
          throw new TypeError("Cannot convert undefined or null to object");
        for (var e6 = Object(t5), i4 = 1; i4 < arguments.length; i4++) {
          var a4 = arguments[i4];
          if (null != a4)
            for (var s3 in a4)
              a4.hasOwnProperty(s3) && (e6[s3] = a4[s3]);
        }
        return e6;
      });
      var a3 = Object.assign({}, t4);
      return this.isObject(t4) && this.isObject(e4) && Object.keys(e4).forEach(function(s3) {
        i3.isObject(e4[s3]) && s3 in t4 ? a3[s3] = i3.extend(t4[s3], e4[s3]) : Object.assign(a3, o2({}, s3, e4[s3]));
      }), a3;
    } }, { key: "extendArray", value: function(e4, i3) {
      var a3 = [];
      return e4.map(function(e6) {
        a3.push(t3.extend(i3, e6));
      }), e4 = a3;
    } }, { key: "monthMod", value: function(t4) {
      return t4 % 12;
    } }, { key: "clone", value: function(e4) {
      if (t3.is("Array", e4)) {
        for (var a3 = [], s3 = 0; s3 < e4.length; s3++)
          a3[s3] = this.clone(e4[s3]);
        return a3;
      }
      if (t3.is("Null", e4))
        return null;
      if (t3.is("Date", e4))
        return e4;
      if ("object" === i2(e4)) {
        var r3 = {};
        for (var o3 in e4)
          e4.hasOwnProperty(o3) && (r3[o3] = this.clone(e4[o3]));
        return r3;
      }
      return e4;
    } }, { key: "log10", value: function(t4) {
      return Math.log(t4) / Math.LN10;
    } }, { key: "roundToBase10", value: function(t4) {
      return Math.pow(10, Math.floor(Math.log10(t4)));
    } }, { key: "roundToBase", value: function(t4, e4) {
      return Math.pow(e4, Math.floor(Math.log(t4) / Math.log(e4)));
    } }, { key: "parseNumber", value: function(t4) {
      return null === t4 ? t4 : parseFloat(t4);
    } }, { key: "stripNumber", value: function(t4) {
      var e4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2;
      return Number.isInteger(t4) ? t4 : parseFloat(t4.toPrecision(e4));
    } }, { key: "randomId", value: function() {
      return (Math.random() + 1).toString(36).substring(4);
    } }, { key: "noExponents", value: function(t4) {
      var e4 = String(t4).split(/[eE]/);
      if (1 === e4.length)
        return e4[0];
      var i3 = "", a3 = t4 < 0 ? "-" : "", s3 = e4[0].replace(".", ""), r3 = Number(e4[1]) + 1;
      if (r3 < 0) {
        for (i3 = a3 + "0."; r3++; )
          i3 += "0";
        return i3 + s3.replace(/^-/, "");
      }
      for (r3 -= s3.length; r3--; )
        i3 += "0";
      return s3 + i3;
    } }, { key: "getDimensions", value: function(t4) {
      var e4 = getComputedStyle(t4, null), i3 = t4.clientHeight, a3 = t4.clientWidth;
      return i3 -= parseFloat(e4.paddingTop) + parseFloat(e4.paddingBottom), [a3 -= parseFloat(e4.paddingLeft) + parseFloat(e4.paddingRight), i3];
    } }, { key: "getBoundingClientRect", value: function(t4) {
      var e4 = t4.getBoundingClientRect();
      return { top: e4.top, right: e4.right, bottom: e4.bottom, left: e4.left, width: t4.clientWidth, height: t4.clientHeight, x: e4.left, y: e4.top };
    } }, { key: "getLargestStringFromArr", value: function(t4) {
      return t4.reduce(function(t5, e4) {
        return Array.isArray(e4) && (e4 = e4.reduce(function(t6, e6) {
          return t6.length > e6.length ? t6 : e6;
        })), t5.length > e4.length ? t5 : e4;
      }, 0);
    } }, { key: "hexToRgba", value: function() {
      var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "#999999", e4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0.6;
      "#" !== t4.substring(0, 1) && (t4 = "#999999");
      var i3 = t4.replace("#", "");
      i3 = i3.match(new RegExp("(.{" + i3.length / 3 + "})", "g"));
      for (var a3 = 0; a3 < i3.length; a3++)
        i3[a3] = parseInt(1 === i3[a3].length ? i3[a3] + i3[a3] : i3[a3], 16);
      return void 0 !== e4 && i3.push(e4), "rgba(" + i3.join(",") + ")";
    } }, { key: "getOpacityFromRGBA", value: function(t4) {
      return parseFloat(t4.replace(/^.*,(.+)\)/, "$1"));
    } }, { key: "rgb2hex", value: function(t4) {
      return (t4 = t4.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i)) && 4 === t4.length ? "#" + ("0" + parseInt(t4[1], 10).toString(16)).slice(-2) + ("0" + parseInt(t4[2], 10).toString(16)).slice(-2) + ("0" + parseInt(t4[3], 10).toString(16)).slice(-2) : "";
    } }, { key: "isColorHex", value: function(t4) {
      return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(t4);
    } }, { key: "getPolygonPos", value: function(t4, e4) {
      for (var i3 = [], a3 = 2 * Math.PI / e4, s3 = 0; s3 < e4; s3++) {
        var r3 = {};
        r3.x = t4 * Math.sin(s3 * a3), r3.y = -t4 * Math.cos(s3 * a3), i3.push(r3);
      }
      return i3;
    } }, { key: "polarToCartesian", value: function(t4, e4, i3, a3) {
      var s3 = (a3 - 90) * Math.PI / 180;
      return { x: t4 + i3 * Math.cos(s3), y: e4 + i3 * Math.sin(s3) };
    } }, { key: "escapeString", value: function(t4) {
      var e4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "x", i3 = t4.toString().slice();
      return i3 = i3.replace(/[` ~!@#$%^&*()|+\=?;:'",.<>{}[\]\\/]/gi, e4);
    } }, { key: "negToZero", value: function(t4) {
      return t4 < 0 ? 0 : t4;
    } }, { key: "moveIndexInArray", value: function(t4, e4, i3) {
      if (i3 >= t4.length)
        for (var a3 = i3 - t4.length + 1; a3--; )
          t4.push(void 0);
      return t4.splice(i3, 0, t4.splice(e4, 1)[0]), t4;
    } }, { key: "extractNumber", value: function(t4) {
      return parseFloat(t4.replace(/[^\d.]*/g, ""));
    } }, { key: "findAncestor", value: function(t4, e4) {
      for (; (t4 = t4.parentElement) && !t4.classList.contains(e4); )
        ;
      return t4;
    } }, { key: "setELstyles", value: function(t4, e4) {
      for (var i3 in e4)
        e4.hasOwnProperty(i3) && (t4.style.key = e4[i3]);
    } }, { key: "isNumber", value: function(t4) {
      return !isNaN(t4) && parseFloat(Number(t4)) === t4 && !isNaN(parseInt(t4, 10));
    } }, { key: "isFloat", value: function(t4) {
      return Number(t4) === t4 && t4 % 1 != 0;
    } }, { key: "isSafari", value: function() {
      return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
    } }, { key: "isFirefox", value: function() {
      return navigator.userAgent.toLowerCase().indexOf("firefox") > -1;
    } }, { key: "isIE11", value: function() {
      if (-1 !== window.navigator.userAgent.indexOf("MSIE") || window.navigator.appVersion.indexOf("Trident/") > -1)
        return true;
    } }, { key: "isIE", value: function() {
      var t4 = window.navigator.userAgent, e4 = t4.indexOf("MSIE ");
      if (e4 > 0)
        return parseInt(t4.substring(e4 + 5, t4.indexOf(".", e4)), 10);
      if (t4.indexOf("Trident/") > 0) {
        var i3 = t4.indexOf("rv:");
        return parseInt(t4.substring(i3 + 3, t4.indexOf(".", i3)), 10);
      }
      var a3 = t4.indexOf("Edge/");
      return a3 > 0 && parseInt(t4.substring(a3 + 5, t4.indexOf(".", a3)), 10);
    } }, { key: "getGCD", value: function(t4, e4) {
      var i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 7, a3 = Math.pow(10, i3 - Math.floor(Math.log10(Math.max(t4, e4))));
      for (t4 = Math.round(Math.abs(t4) * a3), e4 = Math.round(Math.abs(e4) * a3); e4; ) {
        var s3 = e4;
        e4 = t4 % e4, t4 = s3;
      }
      return t4 / a3;
    } }, { key: "getPrimeFactors", value: function(t4) {
      for (var e4 = [], i3 = 2; t4 >= 2; )
        t4 % i3 == 0 ? (e4.push(i3), t4 /= i3) : i3++;
      return e4;
    } }, { key: "mod", value: function(t4, e4) {
      var i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 7, a3 = Math.pow(10, i3 - Math.floor(Math.log10(Math.max(t4, e4))));
      return (t4 = Math.round(Math.abs(t4) * a3)) % (e4 = Math.round(Math.abs(e4) * a3)) / a3;
    } }]), t3;
  }(), b2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.setEasingFunctions();
    }
    return r2(t3, [{ key: "setEasingFunctions", value: function() {
      var t4;
      if (!this.w.globals.easing) {
        switch (this.w.config.chart.animations.easing) {
          case "linear":
            t4 = "-";
            break;
          case "easein":
            t4 = "<";
            break;
          case "easeout":
            t4 = ">";
            break;
          case "easeinout":
          default:
            t4 = "<>";
            break;
          case "swing":
            t4 = function(t5) {
              var e4 = 1.70158;
              return (t5 -= 1) * t5 * ((e4 + 1) * t5 + e4) + 1;
            };
            break;
          case "bounce":
            t4 = function(t5) {
              return t5 < 1 / 2.75 ? 7.5625 * t5 * t5 : t5 < 2 / 2.75 ? 7.5625 * (t5 -= 1.5 / 2.75) * t5 + 0.75 : t5 < 2.5 / 2.75 ? 7.5625 * (t5 -= 2.25 / 2.75) * t5 + 0.9375 : 7.5625 * (t5 -= 2.625 / 2.75) * t5 + 0.984375;
            };
            break;
          case "elastic":
            t4 = function(t5) {
              return t5 === !!t5 ? t5 : Math.pow(2, -10 * t5) * Math.sin((t5 - 0.075) * (2 * Math.PI) / 0.3) + 1;
            };
        }
        this.w.globals.easing = t4;
      }
    } }, { key: "animateLine", value: function(t4, e4, i3, a3) {
      t4.attr(e4).animate(a3).attr(i3);
    } }, { key: "animateMarker", value: function(t4, e4, i3, a3, s3, r3) {
      e4 || (e4 = 0), t4.attr({ r: e4, width: e4, height: e4 }).animate(a3, s3).attr({ r: i3, width: i3.width, height: i3.height }).afterAll(function() {
        r3();
      });
    } }, { key: "animateCircle", value: function(t4, e4, i3, a3, s3) {
      t4.attr({ r: e4.r, cx: e4.cx, cy: e4.cy }).animate(a3, s3).attr({ r: i3.r, cx: i3.cx, cy: i3.cy });
    } }, { key: "animateRect", value: function(t4, e4, i3, a3, s3) {
      t4.attr(e4).animate(a3).attr(i3).afterAll(function() {
        return s3();
      });
    } }, { key: "animatePathsGradually", value: function(t4) {
      var e4 = t4.el, i3 = t4.realIndex, a3 = t4.j, s3 = t4.fill, r3 = t4.pathFrom, o3 = t4.pathTo, n3 = t4.speed, l3 = t4.delay, h3 = this.w, c3 = 0;
      h3.config.chart.animations.animateGradually.enabled && (c3 = h3.config.chart.animations.animateGradually.delay), h3.config.chart.animations.dynamicAnimation.enabled && h3.globals.dataChanged && "bar" !== h3.config.chart.type && (c3 = 0), this.morphSVG(e4, i3, a3, "line" !== h3.config.chart.type || h3.globals.comboCharts ? s3 : "stroke", r3, o3, n3, l3 * c3);
    } }, { key: "showDelayedElements", value: function() {
      this.w.globals.delayedElements.forEach(function(t4) {
        var e4 = t4.el;
        e4.classList.remove("apexcharts-element-hidden"), e4.classList.add("apexcharts-hidden-element-shown");
      });
    } }, { key: "animationCompleted", value: function(t4) {
      var e4 = this.w;
      e4.globals.animationEnded || (e4.globals.animationEnded = true, this.showDelayedElements(), "function" == typeof e4.config.chart.events.animationEnd && e4.config.chart.events.animationEnd(this.ctx, { el: t4, w: e4 }));
    } }, { key: "morphSVG", value: function(t4, e4, i3, a3, s3, r3, o3, n3) {
      var l3 = this, h3 = this.w;
      s3 || (s3 = t4.attr("pathFrom")), r3 || (r3 = t4.attr("pathTo"));
      var c3 = function(t5) {
        return "radar" === h3.config.chart.type && (o3 = 1), "M 0 ".concat(h3.globals.gridHeight);
      };
      (!s3 || s3.indexOf("undefined") > -1 || s3.indexOf("NaN") > -1) && (s3 = c3()), (!r3 || r3.indexOf("undefined") > -1 || r3.indexOf("NaN") > -1) && (r3 = c3()), h3.globals.shouldAnimate || (o3 = 1), t4.plot(s3).animate(1, h3.globals.easing, n3).plot(s3).animate(o3, h3.globals.easing, n3).plot(r3).afterAll(function() {
        x2.isNumber(i3) ? i3 === h3.globals.series[h3.globals.maxValsInArrayIndex].length - 2 && h3.globals.shouldAnimate && l3.animationCompleted(t4) : "none" !== a3 && h3.globals.shouldAnimate && (!h3.globals.comboCharts && e4 === h3.globals.series.length - 1 || h3.globals.comboCharts) && l3.animationCompleted(t4), l3.showDelayedElements();
      });
    } }]), t3;
  }(), v2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "getDefaultFilter", value: function(t4, e4) {
      var i3 = this.w;
      t4.unfilter(true), new window.SVG.Filter().size("120%", "180%", "-5%", "-40%"), "none" !== i3.config.states.normal.filter ? this.applyFilter(t4, e4, i3.config.states.normal.filter.type, i3.config.states.normal.filter.value) : i3.config.chart.dropShadow.enabled && this.dropShadow(t4, i3.config.chart.dropShadow, e4);
    } }, { key: "addNormalFilter", value: function(t4, e4) {
      var i3 = this.w;
      i3.config.chart.dropShadow.enabled && !t4.node.classList.contains("apexcharts-marker") && this.dropShadow(t4, i3.config.chart.dropShadow, e4);
    } }, { key: "addLightenFilter", value: function(t4, e4, i3) {
      var a3 = this, s3 = this.w, r3 = i3.intensity;
      t4.unfilter(true);
      new window.SVG.Filter();
      t4.filter(function(t5) {
        var i4 = s3.config.chart.dropShadow;
        (i4.enabled ? a3.addShadow(t5, e4, i4) : t5).componentTransfer({ rgb: { type: "linear", slope: 1.5, intercept: r3 } });
      }), t4.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t4.filterer.node);
    } }, { key: "addDarkenFilter", value: function(t4, e4, i3) {
      var a3 = this, s3 = this.w, r3 = i3.intensity;
      t4.unfilter(true);
      new window.SVG.Filter();
      t4.filter(function(t5) {
        var i4 = s3.config.chart.dropShadow;
        (i4.enabled ? a3.addShadow(t5, e4, i4) : t5).componentTransfer({ rgb: { type: "linear", slope: r3 } });
      }), t4.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t4.filterer.node);
    } }, { key: "applyFilter", value: function(t4, e4, i3) {
      var a3 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0.5;
      switch (i3) {
        case "none":
          this.addNormalFilter(t4, e4);
          break;
        case "lighten":
          this.addLightenFilter(t4, e4, { intensity: a3 });
          break;
        case "darken":
          this.addDarkenFilter(t4, e4, { intensity: a3 });
      }
    } }, { key: "addShadow", value: function(t4, e4, i3) {
      var a3, s3 = this.w, r3 = i3.blur, o3 = i3.top, n3 = i3.left, l3 = i3.color, h3 = i3.opacity;
      if ((null === (a3 = s3.config.chart.dropShadow.enabledOnSeries) || void 0 === a3 ? void 0 : a3.length) > 0 && -1 === s3.config.chart.dropShadow.enabledOnSeries.indexOf(e4))
        return t4;
      var c3 = t4.flood(Array.isArray(l3) ? l3[e4] : l3, h3).composite(t4.sourceAlpha, "in").offset(n3, o3).gaussianBlur(r3).merge(t4.source);
      return t4.blend(t4.source, c3);
    } }, { key: "dropShadow", value: function(t4, e4) {
      var i3, a3, s3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, r3 = e4.top, o3 = e4.left, n3 = e4.blur, l3 = e4.color, h3 = e4.opacity, c3 = e4.noUserSpaceOnUse, d3 = this.w;
      if (t4.unfilter(true), x2.isIE() && "radialBar" === d3.config.chart.type)
        return t4;
      if ((null === (i3 = d3.config.chart.dropShadow.enabledOnSeries) || void 0 === i3 ? void 0 : i3.length) > 0 && -1 === (null === (a3 = d3.config.chart.dropShadow.enabledOnSeries) || void 0 === a3 ? void 0 : a3.indexOf(s3)))
        return t4;
      return l3 = Array.isArray(l3) ? l3[s3] : l3, t4.filter(function(t5) {
        var e6 = null;
        e6 = x2.isSafari() || x2.isFirefox() || x2.isIE() ? t5.flood(l3, h3).composite(t5.sourceAlpha, "in").offset(o3, r3).gaussianBlur(n3) : t5.flood(l3, h3).composite(t5.sourceAlpha, "in").offset(o3, r3).gaussianBlur(n3).merge(t5.source), t5.blend(t5.source, e6);
      }), c3 || t4.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t4.filterer.node), t4;
    } }, { key: "setSelectionFilter", value: function(t4, e4, i3) {
      var a3 = this.w;
      if (void 0 !== a3.globals.selectedDataPoints[e4] && a3.globals.selectedDataPoints[e4].indexOf(i3) > -1) {
        t4.node.setAttribute("selected", true);
        var s3 = a3.config.states.active.filter;
        "none" !== s3 && this.applyFilter(t4, e4, s3.type, s3.value);
      }
    } }, { key: "_scaleFilterSize", value: function(t4) {
      !function(e4) {
        for (var i3 in e4)
          e4.hasOwnProperty(i3) && t4.setAttribute(i3, e4[i3]);
      }({ width: "200%", height: "200%", x: "-50%", y: "-50%" });
    } }]), t3;
  }(), m2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "roundPathCorners", value: function(t4, e4) {
      function i3(t5, e6, i4) {
        var s4 = e6.x - t5.x, r4 = e6.y - t5.y, o4 = Math.sqrt(s4 * s4 + r4 * r4);
        return a3(t5, e6, Math.min(1, i4 / o4));
      }
      function a3(t5, e6, i4) {
        return { x: t5.x + (e6.x - t5.x) * i4, y: t5.y + (e6.y - t5.y) * i4 };
      }
      function s3(t5, e6) {
        t5.length > 2 && (t5[t5.length - 2] = e6.x, t5[t5.length - 1] = e6.y);
      }
      function r3(t5) {
        return { x: parseFloat(t5[t5.length - 2]), y: parseFloat(t5[t5.length - 1]) };
      }
      t4.indexOf("NaN") > -1 && (t4 = "");
      var o3 = t4.split(/[,\s]/).reduce(function(t5, e6) {
        var i4 = e6.match("([a-zA-Z])(.+)");
        return i4 ? (t5.push(i4[1]), t5.push(i4[2])) : t5.push(e6), t5;
      }, []).reduce(function(t5, e6) {
        return parseFloat(e6) == e6 && t5.length ? t5[t5.length - 1].push(e6) : t5.push([e6]), t5;
      }, []), n3 = [];
      if (o3.length > 1) {
        var l3 = r3(o3[0]), h3 = null;
        "Z" == o3[o3.length - 1][0] && o3[0].length > 2 && (h3 = ["L", l3.x, l3.y], o3[o3.length - 1] = h3), n3.push(o3[0]);
        for (var c3 = 1; c3 < o3.length; c3++) {
          var d3 = n3[n3.length - 1], g3 = o3[c3], u3 = g3 == h3 ? o3[1] : o3[c3 + 1];
          if (u3 && d3 && d3.length > 2 && "L" == g3[0] && u3.length > 2 && "L" == u3[0]) {
            var p3, f3, x3 = r3(d3), b3 = r3(g3), v3 = r3(u3);
            p3 = i3(b3, x3, e4), f3 = i3(b3, v3, e4), s3(g3, p3), g3.origPoint = b3, n3.push(g3);
            var m3 = a3(p3, b3, 0.5), y3 = a3(b3, f3, 0.5), w3 = ["C", m3.x, m3.y, y3.x, y3.y, f3.x, f3.y];
            w3.origPoint = b3, n3.push(w3);
          } else
            n3.push(g3);
        }
        if (h3) {
          var k3 = r3(n3[n3.length - 1]);
          n3.push(["Z"]), s3(n3[0], k3);
        }
      } else
        n3 = o3;
      return n3.reduce(function(t5, e6) {
        return t5 + e6.join(" ") + " ";
      }, "");
    } }, { key: "drawLine", value: function(t4, e4, i3, a3) {
      var s3 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "#a8a8a8", r3 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0, o3 = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null, n3 = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : "butt";
      return this.w.globals.dom.Paper.line().attr({ x1: t4, y1: e4, x2: i3, y2: a3, stroke: s3, "stroke-dasharray": r3, "stroke-width": o3, "stroke-linecap": n3 });
    } }, { key: "drawRect", value: function() {
      var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, e4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, a3 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0, s3 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0, r3 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "#fefefe", o3 = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 1, n3 = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null, l3 = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : null, h3 = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : 0, c3 = this.w.globals.dom.Paper.rect();
      return c3.attr({ x: t4, y: e4, width: i3 > 0 ? i3 : 0, height: a3 > 0 ? a3 : 0, rx: s3, ry: s3, opacity: o3, "stroke-width": null !== n3 ? n3 : 0, stroke: null !== l3 ? l3 : "none", "stroke-dasharray": h3 }), c3.node.setAttribute("fill", r3), c3;
    } }, { key: "drawPolygon", value: function(t4) {
      var e4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "#e1e1e1", i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1, a3 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "none";
      return this.w.globals.dom.Paper.polygon(t4).attr({ fill: a3, stroke: e4, "stroke-width": i3 });
    } }, { key: "drawCircle", value: function(t4) {
      var e4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
      t4 < 0 && (t4 = 0);
      var i3 = this.w.globals.dom.Paper.circle(2 * t4);
      return null !== e4 && i3.attr(e4), i3;
    } }, { key: "drawPath", value: function(t4) {
      var e4 = t4.d, i3 = void 0 === e4 ? "" : e4, a3 = t4.stroke, s3 = void 0 === a3 ? "#a8a8a8" : a3, r3 = t4.strokeWidth, o3 = void 0 === r3 ? 1 : r3, n3 = t4.fill, l3 = t4.fillOpacity, h3 = void 0 === l3 ? 1 : l3, c3 = t4.strokeOpacity, d3 = void 0 === c3 ? 1 : c3, g3 = t4.classes, u3 = t4.strokeLinecap, p3 = void 0 === u3 ? null : u3, f3 = t4.strokeDashArray, x3 = void 0 === f3 ? 0 : f3, b3 = this.w;
      return null === p3 && (p3 = b3.config.stroke.lineCap), (i3.indexOf("undefined") > -1 || i3.indexOf("NaN") > -1) && (i3 = "M 0 ".concat(b3.globals.gridHeight)), b3.globals.dom.Paper.path(i3).attr({ fill: n3, "fill-opacity": h3, stroke: s3, "stroke-opacity": d3, "stroke-linecap": p3, "stroke-width": o3, "stroke-dasharray": x3, class: g3 });
    } }, { key: "group", value: function() {
      var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, e4 = this.w.globals.dom.Paper.group();
      return null !== t4 && e4.attr(t4), e4;
    } }, { key: "move", value: function(t4, e4) {
      var i3 = ["M", t4, e4].join(" ");
      return i3;
    } }, { key: "line", value: function(t4, e4) {
      var i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, a3 = null;
      return null === i3 ? a3 = [" L", t4, e4].join(" ") : "H" === i3 ? a3 = [" H", t4].join(" ") : "V" === i3 && (a3 = [" V", e4].join(" ")), a3;
    } }, { key: "curve", value: function(t4, e4, i3, a3, s3, r3) {
      var o3 = ["C", t4, e4, i3, a3, s3, r3].join(" ");
      return o3;
    } }, { key: "quadraticCurve", value: function(t4, e4, i3, a3) {
      return ["Q", t4, e4, i3, a3].join(" ");
    } }, { key: "arc", value: function(t4, e4, i3, a3, s3, r3, o3) {
      var n3 = "A";
      arguments.length > 7 && void 0 !== arguments[7] && arguments[7] && (n3 = "a");
      var l3 = [n3, t4, e4, i3, a3, s3, r3, o3].join(" ");
      return l3;
    } }, { key: "renderPaths", value: function(t4) {
      var i3, a3 = t4.j, s3 = t4.realIndex, r3 = t4.pathFrom, o3 = t4.pathTo, n3 = t4.stroke, l3 = t4.strokeWidth, h3 = t4.strokeLinecap, c3 = t4.fill, d3 = t4.animationDelay, g3 = t4.initialSpeed, u3 = t4.dataChangeSpeed, p3 = t4.className, f3 = t4.shouldClipToGrid, x3 = void 0 === f3 || f3, m3 = t4.bindEventsOnPaths, y3 = void 0 === m3 || m3, w3 = t4.drawShadow, k3 = void 0 === w3 || w3, A6 = this.w, S3 = new v2(this.ctx), C3 = new b2(this.ctx), L3 = this.w.config.chart.animations.enabled, P3 = L3 && this.w.config.chart.animations.dynamicAnimation.enabled, M3 = !!(L3 && !A6.globals.resized || P3 && A6.globals.dataChanged && A6.globals.shouldAnimate);
      M3 ? i3 = r3 : (i3 = o3, A6.globals.animationEnded = true);
      var I3 = A6.config.stroke.dashArray, T3 = 0;
      T3 = Array.isArray(I3) ? I3[s3] : A6.config.stroke.dashArray;
      var z3 = this.drawPath({ d: i3, stroke: n3, strokeWidth: l3, fill: c3, fillOpacity: 1, classes: p3, strokeLinecap: h3, strokeDashArray: T3 });
      if (z3.attr("index", s3), x3 && z3.attr({ "clip-path": "url(#gridRectMask".concat(A6.globals.cuid, ")") }), "none" !== A6.config.states.normal.filter.type)
        S3.getDefaultFilter(z3, s3);
      else if (A6.config.chart.dropShadow.enabled && k3) {
        var X4 = A6.config.chart.dropShadow;
        S3.dropShadow(z3, X4, s3);
      }
      y3 && (z3.node.addEventListener("mouseenter", this.pathMouseEnter.bind(this, z3)), z3.node.addEventListener("mouseleave", this.pathMouseLeave.bind(this, z3)), z3.node.addEventListener("mousedown", this.pathMouseDown.bind(this, z3))), z3.attr({ pathTo: o3, pathFrom: r3 });
      var E3 = { el: z3, j: a3, realIndex: s3, pathFrom: r3, pathTo: o3, fill: c3, strokeWidth: l3, delay: d3 };
      return !L3 || A6.globals.resized || A6.globals.dataChanged ? !A6.globals.resized && A6.globals.dataChanged || C3.showDelayedElements() : C3.animatePathsGradually(e3(e3({}, E3), {}, { speed: g3 })), A6.globals.dataChanged && P3 && M3 && C3.animatePathsGradually(e3(e3({}, E3), {}, { speed: u3 })), z3;
    } }, { key: "drawPattern", value: function(t4, e4, i3) {
      var a3 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "#a8a8a8", s3 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0;
      return this.w.globals.dom.Paper.pattern(e4, i3, function(r3) {
        "horizontalLines" === t4 ? r3.line(0, 0, i3, 0).stroke({ color: a3, width: s3 + 1 }) : "verticalLines" === t4 ? r3.line(0, 0, 0, e4).stroke({ color: a3, width: s3 + 1 }) : "slantedLines" === t4 ? r3.line(0, 0, e4, i3).stroke({ color: a3, width: s3 }) : "squares" === t4 ? r3.rect(e4, i3).fill("none").stroke({ color: a3, width: s3 }) : "circles" === t4 && r3.circle(e4).fill("none").stroke({ color: a3, width: s3 });
      });
    } }, { key: "drawGradient", value: function(t4, e4, i3, a3, s3) {
      var r3, o3 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null, n3 = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null, l3 = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null, h3 = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : 0, c3 = this.w;
      e4.length < 9 && 0 === e4.indexOf("#") && (e4 = x2.hexToRgba(e4, a3)), i3.length < 9 && 0 === i3.indexOf("#") && (i3 = x2.hexToRgba(i3, s3));
      var d3 = 0, g3 = 1, u3 = 1, p3 = null;
      null !== n3 && (d3 = void 0 !== n3[0] ? n3[0] / 100 : 0, g3 = void 0 !== n3[1] ? n3[1] / 100 : 1, u3 = void 0 !== n3[2] ? n3[2] / 100 : 1, p3 = void 0 !== n3[3] ? n3[3] / 100 : null);
      var f3 = !("donut" !== c3.config.chart.type && "pie" !== c3.config.chart.type && "polarArea" !== c3.config.chart.type && "bubble" !== c3.config.chart.type);
      if (r3 = null === l3 || 0 === l3.length ? c3.globals.dom.Paper.gradient(f3 ? "radial" : "linear", function(t5) {
        t5.at(d3, e4, a3), t5.at(g3, i3, s3), t5.at(u3, i3, s3), null !== p3 && t5.at(p3, e4, a3);
      }) : c3.globals.dom.Paper.gradient(f3 ? "radial" : "linear", function(t5) {
        (Array.isArray(l3[h3]) ? l3[h3] : l3).forEach(function(e6) {
          t5.at(e6.offset / 100, e6.color, e6.opacity);
        });
      }), f3) {
        var b3 = c3.globals.gridWidth / 2, v3 = c3.globals.gridHeight / 2;
        "bubble" !== c3.config.chart.type ? r3.attr({ gradientUnits: "userSpaceOnUse", cx: b3, cy: v3, r: o3 }) : r3.attr({ cx: 0.5, cy: 0.5, r: 0.8, fx: 0.2, fy: 0.2 });
      } else
        "vertical" === t4 ? r3.from(0, 0).to(0, 1) : "diagonal" === t4 ? r3.from(0, 0).to(1, 1) : "horizontal" === t4 ? r3.from(0, 1).to(1, 1) : "diagonal2" === t4 && r3.from(1, 0).to(0, 1);
      return r3;
    } }, { key: "getTextBasedOnMaxWidth", value: function(t4) {
      var e4 = t4.text, i3 = t4.maxWidth, a3 = t4.fontSize, s3 = t4.fontFamily, r3 = this.getTextRects(e4, a3, s3), o3 = r3.width / e4.length, n3 = Math.floor(i3 / o3);
      return i3 < r3.width ? e4.slice(0, n3 - 3) + "..." : e4;
    } }, { key: "drawText", value: function(t4) {
      var i3 = this, a3 = t4.x, s3 = t4.y, r3 = t4.text, o3 = t4.textAnchor, n3 = t4.fontSize, l3 = t4.fontFamily, h3 = t4.fontWeight, c3 = t4.foreColor, d3 = t4.opacity, g3 = t4.maxWidth, u3 = t4.cssClass, p3 = void 0 === u3 ? "" : u3, f3 = t4.isPlainText, x3 = void 0 === f3 || f3, b3 = t4.dominantBaseline, v3 = void 0 === b3 ? "auto" : b3, m3 = this.w;
      void 0 === r3 && (r3 = "");
      var y3 = r3;
      o3 || (o3 = "start"), c3 && c3.length || (c3 = m3.config.chart.foreColor), l3 = l3 || m3.config.chart.fontFamily, h3 = h3 || "regular";
      var w3, k3 = { maxWidth: g3, fontSize: n3 = n3 || "11px", fontFamily: l3 };
      return Array.isArray(r3) ? w3 = m3.globals.dom.Paper.text(function(t5) {
        for (var a4 = 0; a4 < r3.length; a4++)
          y3 = r3[a4], g3 && (y3 = i3.getTextBasedOnMaxWidth(e3({ text: r3[a4] }, k3))), 0 === a4 ? t5.tspan(y3) : t5.tspan(y3).newLine();
      }) : (g3 && (y3 = this.getTextBasedOnMaxWidth(e3({ text: r3 }, k3))), w3 = x3 ? m3.globals.dom.Paper.plain(r3) : m3.globals.dom.Paper.text(function(t5) {
        return t5.tspan(y3);
      })), w3.attr({ x: a3, y: s3, "text-anchor": o3, "dominant-baseline": v3, "font-size": n3, "font-family": l3, "font-weight": h3, fill: c3, class: "apexcharts-text " + p3 }), w3.node.style.fontFamily = l3, w3.node.style.opacity = d3, w3;
    } }, { key: "createGroupWithAttributes", value: function(t4, e4, i3, a3) {
      var s3 = this.group();
      return i3.forEach(function(t5) {
        return s3.add(t5);
      }), s3.attr({ class: a3.class ? a3.class : "", cy: e4, cx: t4 }), s3;
    } }, { key: "drawPlus", value: function(t4, e4, i3, a3) {
      var s3 = i3 / 2, r3 = this.drawLine(t4, e4 - s3, t4, e4 + s3, a3.pointStrokeColor, a3.pointStrokeDashArray, a3.pointStrokeWidth, a3.pointStrokeLineCap), o3 = this.drawLine(t4 - s3, e4, t4 + s3, e4, a3.pointStrokeColor, a3.pointStrokeDashArray, a3.pointStrokeWidth, a3.pointStrokeLineCap);
      return this.createGroupWithAttributes(t4, e4, [r3, o3], a3);
    } }, { key: "drawX", value: function(t4, e4, i3, a3) {
      var s3 = i3 / 2, r3 = this.drawLine(t4 - s3, e4 - s3, t4 + s3, e4 + s3, a3.pointStrokeColor, a3.pointStrokeDashArray, a3.pointStrokeWidth, a3.pointStrokeLineCap), o3 = this.drawLine(t4 - s3, e4 + s3, t4 + s3, e4 - s3, a3.pointStrokeColor, a3.pointStrokeDashArray, a3.pointStrokeWidth, a3.pointStrokeLineCap);
      return this.createGroupWithAttributes(t4, e4, [r3, o3], a3);
    } }, { key: "drawMarker", value: function(t4, e4, i3) {
      t4 = t4 || 0;
      var a3 = i3.pSize || 0, s3 = null;
      if ("X" === (null == i3 ? void 0 : i3.shape) || "x" === (null == i3 ? void 0 : i3.shape))
        s3 = this.drawX(t4, e4, a3, i3);
      else if ("plus" === (null == i3 ? void 0 : i3.shape) || "+" === (null == i3 ? void 0 : i3.shape))
        s3 = this.drawPlus(t4, e4, a3, i3);
      else if ("square" === i3.shape || "rect" === i3.shape) {
        var r3 = void 0 === i3.pRadius ? a3 / 2 : i3.pRadius;
        null !== e4 && a3 || (a3 = 0, r3 = 0);
        var o3 = 1.2 * a3 + r3, n3 = this.drawRect(o3, o3, o3, o3, r3);
        n3.attr({ x: t4 - o3 / 2, y: e4 - o3 / 2, cx: t4, cy: e4, class: i3.class ? i3.class : "", fill: i3.pointFillColor, "fill-opacity": i3.pointFillOpacity ? i3.pointFillOpacity : 1, stroke: i3.pointStrokeColor, "stroke-width": i3.pointStrokeWidth ? i3.pointStrokeWidth : 0, "stroke-opacity": i3.pointStrokeOpacity ? i3.pointStrokeOpacity : 1 }), s3 = n3;
      } else
        "circle" !== i3.shape && i3.shape || (x2.isNumber(e4) || (a3 = 0, e4 = 0), s3 = this.drawCircle(a3, { cx: t4, cy: e4, class: i3.class ? i3.class : "", stroke: i3.pointStrokeColor, fill: i3.pointFillColor, "fill-opacity": i3.pointFillOpacity ? i3.pointFillOpacity : 1, "stroke-width": i3.pointStrokeWidth ? i3.pointStrokeWidth : 0, "stroke-opacity": i3.pointStrokeOpacity ? i3.pointStrokeOpacity : 1 }));
      return s3;
    } }, { key: "pathMouseEnter", value: function(t4, e4) {
      var i3 = this.w, a3 = new v2(this.ctx), s3 = parseInt(t4.node.getAttribute("index"), 10), r3 = parseInt(t4.node.getAttribute("j"), 10);
      if ("function" == typeof i3.config.chart.events.dataPointMouseEnter && i3.config.chart.events.dataPointMouseEnter(e4, this.ctx, { seriesIndex: s3, dataPointIndex: r3, w: i3 }), this.ctx.events.fireEvent("dataPointMouseEnter", [e4, this.ctx, { seriesIndex: s3, dataPointIndex: r3, w: i3 }]), ("none" === i3.config.states.active.filter.type || "true" !== t4.node.getAttribute("selected")) && "none" !== i3.config.states.hover.filter.type && !i3.globals.isTouchDevice) {
        var o3 = i3.config.states.hover.filter;
        a3.applyFilter(t4, s3, o3.type, o3.value);
      }
    } }, { key: "pathMouseLeave", value: function(t4, e4) {
      var i3 = this.w, a3 = new v2(this.ctx), s3 = parseInt(t4.node.getAttribute("index"), 10), r3 = parseInt(t4.node.getAttribute("j"), 10);
      "function" == typeof i3.config.chart.events.dataPointMouseLeave && i3.config.chart.events.dataPointMouseLeave(e4, this.ctx, { seriesIndex: s3, dataPointIndex: r3, w: i3 }), this.ctx.events.fireEvent("dataPointMouseLeave", [e4, this.ctx, { seriesIndex: s3, dataPointIndex: r3, w: i3 }]), "none" !== i3.config.states.active.filter.type && "true" === t4.node.getAttribute("selected") || "none" !== i3.config.states.hover.filter.type && a3.getDefaultFilter(t4, s3);
    } }, { key: "pathMouseDown", value: function(t4, e4) {
      var i3 = this.w, a3 = new v2(this.ctx), s3 = parseInt(t4.node.getAttribute("index"), 10), r3 = parseInt(t4.node.getAttribute("j"), 10), o3 = "false";
      if ("true" === t4.node.getAttribute("selected")) {
        if (t4.node.setAttribute("selected", "false"), i3.globals.selectedDataPoints[s3].indexOf(r3) > -1) {
          var n3 = i3.globals.selectedDataPoints[s3].indexOf(r3);
          i3.globals.selectedDataPoints[s3].splice(n3, 1);
        }
      } else {
        if (!i3.config.states.active.allowMultipleDataPointsSelection && i3.globals.selectedDataPoints.length > 0) {
          i3.globals.selectedDataPoints = [];
          var l3 = i3.globals.dom.Paper.select(".apexcharts-series path").members, h3 = i3.globals.dom.Paper.select(".apexcharts-series circle, .apexcharts-series rect").members, c3 = function(t5) {
            Array.prototype.forEach.call(t5, function(t6) {
              t6.node.setAttribute("selected", "false"), a3.getDefaultFilter(t6, s3);
            });
          };
          c3(l3), c3(h3);
        }
        t4.node.setAttribute("selected", "true"), o3 = "true", void 0 === i3.globals.selectedDataPoints[s3] && (i3.globals.selectedDataPoints[s3] = []), i3.globals.selectedDataPoints[s3].push(r3);
      }
      if ("true" === o3) {
        var d3 = i3.config.states.active.filter;
        if ("none" !== d3)
          a3.applyFilter(t4, s3, d3.type, d3.value);
        else if ("none" !== i3.config.states.hover.filter && !i3.globals.isTouchDevice) {
          var g3 = i3.config.states.hover.filter;
          a3.applyFilter(t4, s3, g3.type, g3.value);
        }
      } else if ("none" !== i3.config.states.active.filter.type)
        if ("none" === i3.config.states.hover.filter.type || i3.globals.isTouchDevice)
          a3.getDefaultFilter(t4, s3);
        else {
          g3 = i3.config.states.hover.filter;
          a3.applyFilter(t4, s3, g3.type, g3.value);
        }
      "function" == typeof i3.config.chart.events.dataPointSelection && i3.config.chart.events.dataPointSelection(e4, this.ctx, { selectedDataPoints: i3.globals.selectedDataPoints, seriesIndex: s3, dataPointIndex: r3, w: i3 }), e4 && this.ctx.events.fireEvent("dataPointSelection", [e4, this.ctx, { selectedDataPoints: i3.globals.selectedDataPoints, seriesIndex: s3, dataPointIndex: r3, w: i3 }]);
    } }, { key: "rotateAroundCenter", value: function(t4) {
      var e4 = {};
      return t4 && "function" == typeof t4.getBBox && (e4 = t4.getBBox()), { x: e4.x + e4.width / 2, y: e4.y + e4.height / 2 };
    } }, { key: "getTextRects", value: function(t4, e4, i3, a3) {
      var s3 = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4], r3 = this.w, o3 = this.drawText({ x: -200, y: -200, text: t4, textAnchor: "start", fontSize: e4, fontFamily: i3, foreColor: "#fff", opacity: 0 });
      a3 && o3.attr("transform", a3), r3.globals.dom.Paper.add(o3);
      var n3 = o3.bbox();
      return s3 || (n3 = o3.node.getBoundingClientRect()), o3.remove(), { width: n3.width, height: n3.height };
    } }, { key: "placeTextWithEllipsis", value: function(t4, e4, i3) {
      if ("function" == typeof t4.getComputedTextLength && (t4.textContent = e4, e4.length > 0 && t4.getComputedTextLength() >= i3 / 1.1)) {
        for (var a3 = e4.length - 3; a3 > 0; a3 -= 3)
          if (t4.getSubStringLength(0, a3) <= i3 / 1.1)
            return void (t4.textContent = e4.substring(0, a3) + "...");
        t4.textContent = ".";
      }
    } }], [{ key: "setAttrs", value: function(t4, e4) {
      for (var i3 in e4)
        e4.hasOwnProperty(i3) && t4.setAttribute(i3, e4[i3]);
    } }]), t3;
  }(), y2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "getStackedSeriesTotals", value: function() {
      var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], e4 = this.w, i3 = [];
      if (0 === e4.globals.series.length)
        return i3;
      for (var a3 = 0; a3 < e4.globals.series[e4.globals.maxValsInArrayIndex].length; a3++) {
        for (var s3 = 0, r3 = 0; r3 < e4.globals.series.length; r3++)
          void 0 !== e4.globals.series[r3][a3] && -1 === t4.indexOf(r3) && (s3 += e4.globals.series[r3][a3]);
        i3.push(s3);
      }
      return i3;
    } }, { key: "getSeriesTotalByIndex", value: function() {
      var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
      return null === t4 ? this.w.config.series.reduce(function(t5, e4) {
        return t5 + e4;
      }, 0) : this.w.globals.series[t4].reduce(function(t5, e4) {
        return t5 + e4;
      }, 0);
    } }, { key: "getStackedSeriesTotalsByGroups", value: function() {
      var t4 = this, e4 = this.w, i3 = [];
      return e4.globals.seriesGroups.forEach(function(a3) {
        var s3 = [];
        e4.config.series.forEach(function(t5, e6) {
          a3.indexOf(t5.name) > -1 && s3.push(e6);
        });
        var r3 = e4.globals.series.map(function(t5, e6) {
          return -1 === s3.indexOf(e6) ? e6 : -1;
        }).filter(function(t5) {
          return -1 !== t5;
        });
        i3.push(t4.getStackedSeriesTotals(r3));
      }), i3;
    } }, { key: "isSeriesNull", value: function() {
      var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
      return 0 === (null === t4 ? this.w.config.series.filter(function(t5) {
        return null !== t5;
      }) : this.w.config.series[t4].data.filter(function(t5) {
        return null !== t5;
      })).length;
    } }, { key: "seriesHaveSameValues", value: function(t4) {
      return this.w.globals.series[t4].every(function(t5, e4, i3) {
        return t5 === i3[0];
      });
    } }, { key: "getCategoryLabels", value: function(t4) {
      var e4 = this.w, i3 = t4.slice();
      return e4.config.xaxis.convertedCatToNumeric && (i3 = t4.map(function(t5, i4) {
        return e4.config.xaxis.labels.formatter(t5 - e4.globals.minX + 1);
      })), i3;
    } }, { key: "getLargestSeries", value: function() {
      var t4 = this.w;
      t4.globals.maxValsInArrayIndex = t4.globals.series.map(function(t5) {
        return t5.length;
      }).indexOf(Math.max.apply(Math, t4.globals.series.map(function(t5) {
        return t5.length;
      })));
    } }, { key: "getLargestMarkerSize", value: function() {
      var t4 = this.w, e4 = 0;
      return t4.globals.markers.size.forEach(function(t5) {
        e4 = Math.max(e4, t5);
      }), t4.config.markers.discrete && t4.config.markers.discrete.length && t4.config.markers.discrete.forEach(function(t5) {
        e4 = Math.max(e4, t5.size);
      }), e4 > 0 && (e4 += t4.config.markers.hover.sizeOffset + 1), t4.globals.markers.largestSize = e4, e4;
    } }, { key: "getSeriesTotals", value: function() {
      var t4 = this.w;
      t4.globals.seriesTotals = t4.globals.series.map(function(t5, e4) {
        var i3 = 0;
        if (Array.isArray(t5))
          for (var a3 = 0; a3 < t5.length; a3++)
            i3 += t5[a3];
        else
          i3 += t5;
        return i3;
      });
    } }, { key: "getSeriesTotalsXRange", value: function(t4, e4) {
      var i3 = this.w;
      return i3.globals.series.map(function(a3, s3) {
        for (var r3 = 0, o3 = 0; o3 < a3.length; o3++)
          i3.globals.seriesX[s3][o3] > t4 && i3.globals.seriesX[s3][o3] < e4 && (r3 += a3[o3]);
        return r3;
      });
    } }, { key: "getPercentSeries", value: function() {
      var t4 = this.w;
      t4.globals.seriesPercent = t4.globals.series.map(function(e4, i3) {
        var a3 = [];
        if (Array.isArray(e4))
          for (var s3 = 0; s3 < e4.length; s3++) {
            var r3 = t4.globals.stackedSeriesTotals[s3], o3 = 0;
            r3 && (o3 = 100 * e4[s3] / r3), a3.push(o3);
          }
        else {
          var n3 = 100 * e4 / t4.globals.seriesTotals.reduce(function(t5, e6) {
            return t5 + e6;
          }, 0);
          a3.push(n3);
        }
        return a3;
      });
    } }, { key: "getCalculatedRatios", value: function() {
      var t4, e4, i3, a3 = this, s3 = this.w, r3 = s3.globals, o3 = [], n3 = 0, l3 = [], h3 = 0.1, c3 = 0;
      if (r3.yRange = [], r3.isMultipleYAxis)
        for (var d3 = 0; d3 < r3.minYArr.length; d3++)
          r3.yRange.push(Math.abs(r3.minYArr[d3] - r3.maxYArr[d3])), l3.push(0);
      else
        r3.yRange.push(Math.abs(r3.minY - r3.maxY));
      r3.xRange = Math.abs(r3.maxX - r3.minX), r3.zRange = Math.abs(r3.maxZ - r3.minZ);
      for (var g3 = 0; g3 < r3.yRange.length; g3++)
        o3.push(r3.yRange[g3] / r3.gridHeight);
      if (e4 = r3.xRange / r3.gridWidth, t4 = r3.yRange / r3.gridWidth, i3 = r3.xRange / r3.gridHeight, (n3 = r3.zRange / r3.gridHeight * 16) || (n3 = 1), r3.minY !== Number.MIN_VALUE && 0 !== Math.abs(r3.minY) && (r3.hasNegs = true), s3.globals.seriesYAxisReverseMap.length > 0) {
        var u3 = function(t5, e6) {
          var i4 = s3.config.yaxis[s3.globals.seriesYAxisReverseMap[e6]], r4 = t5 < 0 ? -1 : 1;
          return t5 = Math.abs(t5), i4.logarithmic && (t5 = a3.getBaseLog(i4.logBase, t5)), -r4 * t5 / o3[e6];
        };
        if (r3.isMultipleYAxis) {
          l3 = [];
          for (var p3 = 0; p3 < o3.length; p3++)
            l3.push(u3(r3.minYArr[p3], p3));
        } else
          (l3 = []).push(u3(r3.minY, 0)), r3.minY !== Number.MIN_VALUE && 0 !== Math.abs(r3.minY) && (h3 = -r3.minY / t4, c3 = r3.minX / e4);
      } else
        (l3 = []).push(0), h3 = 0, c3 = 0;
      return { yRatio: o3, invertedYRatio: t4, zRatio: n3, xRatio: e4, invertedXRatio: i3, baseLineInvertedY: h3, baseLineY: l3, baseLineX: c3 };
    } }, { key: "getLogSeries", value: function(t4) {
      var e4 = this, i3 = this.w;
      return i3.globals.seriesLog = t4.map(function(t5, a3) {
        var s3 = i3.globals.seriesYAxisReverseMap[a3];
        return i3.config.yaxis[s3] && i3.config.yaxis[s3].logarithmic ? t5.map(function(t6) {
          return null === t6 ? null : e4.getLogVal(i3.config.yaxis[s3].logBase, t6, a3);
        }) : t5;
      }), i3.globals.invalidLogScale ? t4 : i3.globals.seriesLog;
    } }, { key: "getBaseLog", value: function(t4, e4) {
      return Math.log(e4) / Math.log(t4);
    } }, { key: "getLogVal", value: function(t4, e4, i3) {
      if (e4 <= 0)
        return 0;
      var a3 = this.w, s3 = 0 === a3.globals.minYArr[i3] ? -1 : this.getBaseLog(t4, a3.globals.minYArr[i3]), r3 = (0 === a3.globals.maxYArr[i3] ? 0 : this.getBaseLog(t4, a3.globals.maxYArr[i3])) - s3;
      return e4 < 1 ? e4 / r3 : (this.getBaseLog(t4, e4) - s3) / r3;
    } }, { key: "getLogYRatios", value: function(t4) {
      var e4 = this, i3 = this.w, a3 = this.w.globals;
      return a3.yLogRatio = t4.slice(), a3.logYRange = a3.yRange.map(function(t5, s3) {
        var r3 = i3.globals.seriesYAxisReverseMap[s3];
        if (i3.config.yaxis[r3] && e4.w.config.yaxis[r3].logarithmic) {
          var o3, n3 = -Number.MAX_VALUE, l3 = Number.MIN_VALUE;
          return a3.seriesLog.forEach(function(t6, e6) {
            t6.forEach(function(t7) {
              i3.config.yaxis[e6] && i3.config.yaxis[e6].logarithmic && (n3 = Math.max(t7, n3), l3 = Math.min(t7, l3));
            });
          }), o3 = Math.pow(a3.yRange[s3], Math.abs(l3 - n3) / a3.yRange[s3]), a3.yLogRatio[s3] = o3 / a3.gridHeight, o3;
        }
      }), a3.invalidLogScale ? t4.slice() : a3.yLogRatio;
    } }], [{ key: "checkComboSeries", value: function(t4, e4) {
      var i3 = false, a3 = 0, s3 = 0;
      return void 0 === e4 && (e4 = "line"), t4.length && void 0 !== t4[0].type && t4.forEach(function(t5) {
        "bar" !== t5.type && "column" !== t5.type && "candlestick" !== t5.type && "boxPlot" !== t5.type || a3++, void 0 !== t5.type && t5.type !== e4 && s3++;
      }), s3 > 0 && (i3 = true), { comboBarCount: a3, comboCharts: i3 };
    } }, { key: "extendArrayProps", value: function(t4, e4, i3) {
      var a3, s3, r3, o3, n3, l3;
      (null !== (a3 = e4) && void 0 !== a3 && a3.yaxis && (e4 = t4.extendYAxis(e4, i3)), null !== (s3 = e4) && void 0 !== s3 && s3.annotations) && (e4.annotations.yaxis && (e4 = t4.extendYAxisAnnotations(e4)), null !== (r3 = e4) && void 0 !== r3 && null !== (o3 = r3.annotations) && void 0 !== o3 && o3.xaxis && (e4 = t4.extendXAxisAnnotations(e4)), null !== (n3 = e4) && void 0 !== n3 && null !== (l3 = n3.annotations) && void 0 !== l3 && l3.points && (e4 = t4.extendPointAnnotations(e4)));
      return e4;
    } }]), t3;
  }(), w2 = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.annoCtx = e4;
    }
    return r2(t3, [{ key: "setOrientations", value: function(t4) {
      var e4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, i3 = this.w;
      if ("vertical" === t4.label.orientation) {
        var a3 = null !== e4 ? e4 : 0, s3 = i3.globals.dom.baseEl.querySelector(".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(a3, "']"));
        if (null !== s3) {
          var r3 = s3.getBoundingClientRect();
          s3.setAttribute("x", parseFloat(s3.getAttribute("x")) - r3.height + 4), "top" === t4.label.position ? s3.setAttribute("y", parseFloat(s3.getAttribute("y")) + r3.width) : s3.setAttribute("y", parseFloat(s3.getAttribute("y")) - r3.width);
          var o3 = this.annoCtx.graphics.rotateAroundCenter(s3), n3 = o3.x, l3 = o3.y;
          s3.setAttribute("transform", "rotate(-90 ".concat(n3, " ").concat(l3, ")"));
        }
      }
    } }, { key: "addBackgroundToAnno", value: function(t4, e4) {
      var i3 = this.w;
      if (!t4 || void 0 === e4.label.text || void 0 !== e4.label.text && !String(e4.label.text).trim())
        return null;
      var a3 = i3.globals.dom.baseEl.querySelector(".apexcharts-grid").getBoundingClientRect(), s3 = t4.getBoundingClientRect(), r3 = e4.label.style.padding.left, o3 = e4.label.style.padding.right, n3 = e4.label.style.padding.top, l3 = e4.label.style.padding.bottom;
      "vertical" === e4.label.orientation && (n3 = e4.label.style.padding.left, l3 = e4.label.style.padding.right, r3 = e4.label.style.padding.top, o3 = e4.label.style.padding.bottom);
      var h3 = s3.left - a3.left - r3, c3 = s3.top - a3.top - n3, d3 = this.annoCtx.graphics.drawRect(h3 - i3.globals.barPadForNumericAxis, c3, s3.width + r3 + o3, s3.height + n3 + l3, e4.label.borderRadius, e4.label.style.background, 1, e4.label.borderWidth, e4.label.borderColor, 0);
      return e4.id && d3.node.classList.add(e4.id), d3;
    } }, { key: "annotationsBackground", value: function() {
      var t4 = this, e4 = this.w, i3 = function(i4, a3, s3) {
        var r3 = e4.globals.dom.baseEl.querySelector(".apexcharts-".concat(s3, "-annotations .apexcharts-").concat(s3, "-annotation-label[rel='").concat(a3, "']"));
        if (r3) {
          var o3 = r3.parentNode, n3 = t4.addBackgroundToAnno(r3, i4);
          n3 && (o3.insertBefore(n3.node, r3), i4.label.mouseEnter && n3.node.addEventListener("mouseenter", i4.label.mouseEnter.bind(t4, i4)), i4.label.mouseLeave && n3.node.addEventListener("mouseleave", i4.label.mouseLeave.bind(t4, i4)), i4.label.click && n3.node.addEventListener("click", i4.label.click.bind(t4, i4)));
        }
      };
      e4.config.annotations.xaxis.map(function(t5, e6) {
        i3(t5, e6, "xaxis");
      }), e4.config.annotations.yaxis.map(function(t5, e6) {
        i3(t5, e6, "yaxis");
      }), e4.config.annotations.points.map(function(t5, e6) {
        i3(t5, e6, "point");
      });
    } }, { key: "getY1Y2", value: function(t4, e4) {
      var i3, a3 = "y1" === t4 ? e4.y : e4.y2, s3 = false, r3 = this.w;
      if (this.annoCtx.invertAxis) {
        var o3 = r3.globals.labels;
        r3.config.xaxis.convertedCatToNumeric && (o3 = r3.globals.categoryLabels);
        var n3 = o3.indexOf(a3), l3 = r3.globals.dom.baseEl.querySelector(".apexcharts-yaxis-texts-g text:nth-child(" + (n3 + 1) + ")");
        i3 = l3 ? parseFloat(l3.getAttribute("y")) : (r3.globals.gridHeight / o3.length - 1) * (n3 + 1) - r3.globals.barHeight, void 0 !== e4.seriesIndex && r3.globals.barHeight && (i3 = i3 - r3.globals.barHeight / 2 * (r3.globals.series.length - 1) + r3.globals.barHeight * e4.seriesIndex);
      } else {
        var h3, c3 = r3.globals.seriesYAxisMap[e4.yAxisIndex][0];
        if (r3.config.yaxis[e4.yAxisIndex].logarithmic)
          h3 = (a3 = new y2(this.annoCtx.ctx).getLogVal(r3.config.yaxis[e4.yAxisIndex].logBase, a3, c3)) / r3.globals.yLogRatio[c3];
        else
          h3 = (a3 - r3.globals.minYArr[c3]) / (r3.globals.yRange[c3] / r3.globals.gridHeight);
        h3 > r3.globals.gridHeight ? (h3 = r3.globals.gridHeight, s3 = true) : h3 < 0 && (h3 = 0, s3 = true), i3 = r3.globals.gridHeight - h3, !e4.marker || void 0 !== e4.y && null !== e4.y || (i3 = 0), r3.config.yaxis[e4.yAxisIndex] && r3.config.yaxis[e4.yAxisIndex].reversed && (i3 = h3);
      }
      return "string" == typeof a3 && a3.indexOf("px") > -1 && (i3 = parseFloat(a3)), { yP: i3, clipped: s3 };
    } }, { key: "getX1X2", value: function(t4, e4) {
      var i3, a3 = "x1" === t4 ? e4.x : e4.x2, s3 = this.w, r3 = this.annoCtx.invertAxis ? s3.globals.minY : s3.globals.minX, o3 = this.annoCtx.invertAxis ? s3.globals.maxY : s3.globals.maxX, n3 = this.annoCtx.invertAxis ? s3.globals.yRange[0] : s3.globals.xRange, l3 = false;
      return i3 = this.annoCtx.inversedReversedAxis ? (o3 - a3) / (n3 / s3.globals.gridWidth) : (a3 - r3) / (n3 / s3.globals.gridWidth), "category" !== s3.config.xaxis.type && !s3.config.xaxis.convertedCatToNumeric || this.annoCtx.invertAxis || s3.globals.dataFormatXNumeric || s3.config.chart.sparkline.enabled || (i3 = this.getStringX(a3)), "string" == typeof a3 && a3.indexOf("px") > -1 && (i3 = parseFloat(a3)), null == a3 && e4.marker && (i3 = s3.globals.gridWidth), void 0 !== e4.seriesIndex && s3.globals.barWidth && !this.annoCtx.invertAxis && (i3 = i3 - s3.globals.barWidth / 2 * (s3.globals.series.length - 1) + s3.globals.barWidth * e4.seriesIndex), i3 > s3.globals.gridWidth ? (i3 = s3.globals.gridWidth, l3 = true) : i3 < 0 && (i3 = 0, l3 = true), { x: i3, clipped: l3 };
    } }, { key: "getStringX", value: function(t4) {
      var e4 = this.w, i3 = t4;
      e4.config.xaxis.convertedCatToNumeric && e4.globals.categoryLabels.length && (t4 = e4.globals.categoryLabels.indexOf(t4) + 1);
      var a3 = e4.globals.labels.indexOf(t4), s3 = e4.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g text:nth-child(" + (a3 + 1) + ")");
      return s3 && (i3 = parseFloat(s3.getAttribute("x"))), i3;
    } }]), t3;
  }(), k2 = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.annoCtx = e4, this.invertAxis = this.annoCtx.invertAxis, this.helpers = new w2(this.annoCtx);
    }
    return r2(t3, [{ key: "addXaxisAnnotation", value: function(t4, e4, i3) {
      var a3, s3 = this.w, r3 = this.helpers.getX1X2("x1", t4), o3 = r3.x, n3 = r3.clipped, l3 = true, h3 = t4.label.text, c3 = t4.strokeDashArray;
      if (x2.isNumber(o3)) {
        if (null === t4.x2 || void 0 === t4.x2) {
          if (!n3) {
            var d3 = this.annoCtx.graphics.drawLine(o3 + t4.offsetX, 0 + t4.offsetY, o3 + t4.offsetX, s3.globals.gridHeight + t4.offsetY, t4.borderColor, c3, t4.borderWidth);
            e4.appendChild(d3.node), t4.id && d3.node.classList.add(t4.id);
          }
        } else {
          var g3 = this.helpers.getX1X2("x2", t4);
          if (a3 = g3.x, l3 = g3.clipped, !n3 || !l3) {
            if (a3 < o3) {
              var u3 = o3;
              o3 = a3, a3 = u3;
            }
            var p3 = this.annoCtx.graphics.drawRect(o3 + t4.offsetX, 0 + t4.offsetY, a3 - o3, s3.globals.gridHeight + t4.offsetY, 0, t4.fillColor, t4.opacity, 1, t4.borderColor, c3);
            p3.node.classList.add("apexcharts-annotation-rect"), p3.attr("clip-path", "url(#gridRectMask".concat(s3.globals.cuid, ")")), e4.appendChild(p3.node), t4.id && p3.node.classList.add(t4.id);
          }
        }
        if (!n3 || !l3) {
          var f3 = this.annoCtx.graphics.getTextRects(h3, parseFloat(t4.label.style.fontSize)), b3 = "top" === t4.label.position ? 4 : "center" === t4.label.position ? s3.globals.gridHeight / 2 + ("vertical" === t4.label.orientation ? f3.width / 2 : 0) : s3.globals.gridHeight, v3 = this.annoCtx.graphics.drawText({ x: o3 + t4.label.offsetX, y: b3 + t4.label.offsetY - ("vertical" === t4.label.orientation ? "top" === t4.label.position ? f3.width / 2 - 12 : -f3.width / 2 : 0), text: h3, textAnchor: t4.label.textAnchor, fontSize: t4.label.style.fontSize, fontFamily: t4.label.style.fontFamily, fontWeight: t4.label.style.fontWeight, foreColor: t4.label.style.color, cssClass: "apexcharts-xaxis-annotation-label ".concat(t4.label.style.cssClass, " ").concat(t4.id ? t4.id : "") });
          v3.attr({ rel: i3 }), e4.appendChild(v3.node), this.annoCtx.helpers.setOrientations(t4, i3);
        }
      }
    } }, { key: "drawXAxisAnnotations", value: function() {
      var t4 = this, e4 = this.w, i3 = this.annoCtx.graphics.group({ class: "apexcharts-xaxis-annotations" });
      return e4.config.annotations.xaxis.map(function(e6, a3) {
        t4.addXaxisAnnotation(e6, i3.node, a3);
      }), i3;
    } }]), t3;
  }(), A5 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.months31 = [1, 3, 5, 7, 8, 10, 12], this.months30 = [2, 4, 6, 9, 11], this.daysCntOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
    }
    return r2(t3, [{ key: "isValidDate", value: function(t4) {
      return "number" != typeof t4 && !isNaN(this.parseDate(t4));
    } }, { key: "getTimeStamp", value: function(t4) {
      return Date.parse(t4) ? this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(t4).toISOString().substr(0, 25)).getTime() : new Date(t4).getTime() : t4;
    } }, { key: "getDate", value: function(t4) {
      return this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(t4).toUTCString()) : new Date(t4);
    } }, { key: "parseDate", value: function(t4) {
      var e4 = Date.parse(t4);
      if (!isNaN(e4))
        return this.getTimeStamp(t4);
      var i3 = Date.parse(t4.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
      return i3 = this.getTimeStamp(i3);
    } }, { key: "parseDateWithTimezone", value: function(t4) {
      return Date.parse(t4.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
    } }, { key: "formatDate", value: function(t4, e4) {
      var i3 = this.w.globals.locale, a3 = this.w.config.xaxis.labels.datetimeUTC, s3 = ["\0"].concat(u2(i3.months)), r3 = [""].concat(u2(i3.shortMonths)), o3 = [""].concat(u2(i3.days)), n3 = [""].concat(u2(i3.shortDays));
      function l3(t5, e6) {
        var i4 = t5 + "";
        for (e6 = e6 || 2; i4.length < e6; )
          i4 = "0" + i4;
        return i4;
      }
      var h3 = a3 ? t4.getUTCFullYear() : t4.getFullYear();
      e4 = (e4 = (e4 = e4.replace(/(^|[^\\])yyyy+/g, "$1" + h3)).replace(/(^|[^\\])yy/g, "$1" + h3.toString().substr(2, 2))).replace(/(^|[^\\])y/g, "$1" + h3);
      var c3 = (a3 ? t4.getUTCMonth() : t4.getMonth()) + 1;
      e4 = (e4 = (e4 = (e4 = e4.replace(/(^|[^\\])MMMM+/g, "$1" + s3[0])).replace(/(^|[^\\])MMM/g, "$1" + r3[0])).replace(/(^|[^\\])MM/g, "$1" + l3(c3))).replace(/(^|[^\\])M/g, "$1" + c3);
      var d3 = a3 ? t4.getUTCDate() : t4.getDate();
      e4 = (e4 = (e4 = (e4 = e4.replace(/(^|[^\\])dddd+/g, "$1" + o3[0])).replace(/(^|[^\\])ddd/g, "$1" + n3[0])).replace(/(^|[^\\])dd/g, "$1" + l3(d3))).replace(/(^|[^\\])d/g, "$1" + d3);
      var g3 = a3 ? t4.getUTCHours() : t4.getHours(), p3 = g3 > 12 ? g3 - 12 : 0 === g3 ? 12 : g3;
      e4 = (e4 = (e4 = (e4 = e4.replace(/(^|[^\\])HH+/g, "$1" + l3(g3))).replace(/(^|[^\\])H/g, "$1" + g3)).replace(/(^|[^\\])hh+/g, "$1" + l3(p3))).replace(/(^|[^\\])h/g, "$1" + p3);
      var f3 = a3 ? t4.getUTCMinutes() : t4.getMinutes();
      e4 = (e4 = e4.replace(/(^|[^\\])mm+/g, "$1" + l3(f3))).replace(/(^|[^\\])m/g, "$1" + f3);
      var x3 = a3 ? t4.getUTCSeconds() : t4.getSeconds();
      e4 = (e4 = e4.replace(/(^|[^\\])ss+/g, "$1" + l3(x3))).replace(/(^|[^\\])s/g, "$1" + x3);
      var b3 = a3 ? t4.getUTCMilliseconds() : t4.getMilliseconds();
      e4 = e4.replace(/(^|[^\\])fff+/g, "$1" + l3(b3, 3)), b3 = Math.round(b3 / 10), e4 = e4.replace(/(^|[^\\])ff/g, "$1" + l3(b3)), b3 = Math.round(b3 / 10);
      var v3 = g3 < 12 ? "AM" : "PM";
      e4 = (e4 = (e4 = e4.replace(/(^|[^\\])f/g, "$1" + b3)).replace(/(^|[^\\])TT+/g, "$1" + v3)).replace(/(^|[^\\])T/g, "$1" + v3.charAt(0));
      var m3 = v3.toLowerCase();
      e4 = (e4 = e4.replace(/(^|[^\\])tt+/g, "$1" + m3)).replace(/(^|[^\\])t/g, "$1" + m3.charAt(0));
      var y3 = -t4.getTimezoneOffset(), w3 = a3 || !y3 ? "Z" : y3 > 0 ? "+" : "-";
      if (!a3) {
        var k3 = (y3 = Math.abs(y3)) % 60;
        w3 += l3(Math.floor(y3 / 60)) + ":" + l3(k3);
      }
      e4 = e4.replace(/(^|[^\\])K/g, "$1" + w3);
      var A6 = (a3 ? t4.getUTCDay() : t4.getDay()) + 1;
      return e4 = (e4 = (e4 = (e4 = (e4 = e4.replace(new RegExp(o3[0], "g"), o3[A6])).replace(new RegExp(n3[0], "g"), n3[A6])).replace(new RegExp(s3[0], "g"), s3[c3])).replace(new RegExp(r3[0], "g"), r3[c3])).replace(/\\(.)/g, "$1");
    } }, { key: "getTimeUnitsfromTimestamp", value: function(t4, e4, i3) {
      var a3 = this.w;
      void 0 !== a3.config.xaxis.min && (t4 = a3.config.xaxis.min), void 0 !== a3.config.xaxis.max && (e4 = a3.config.xaxis.max);
      var s3 = this.getDate(t4), r3 = this.getDate(e4), o3 = this.formatDate(s3, "yyyy MM dd HH mm ss fff").split(" "), n3 = this.formatDate(r3, "yyyy MM dd HH mm ss fff").split(" ");
      return { minMillisecond: parseInt(o3[6], 10), maxMillisecond: parseInt(n3[6], 10), minSecond: parseInt(o3[5], 10), maxSecond: parseInt(n3[5], 10), minMinute: parseInt(o3[4], 10), maxMinute: parseInt(n3[4], 10), minHour: parseInt(o3[3], 10), maxHour: parseInt(n3[3], 10), minDate: parseInt(o3[2], 10), maxDate: parseInt(n3[2], 10), minMonth: parseInt(o3[1], 10) - 1, maxMonth: parseInt(n3[1], 10) - 1, minYear: parseInt(o3[0], 10), maxYear: parseInt(n3[0], 10) };
    } }, { key: "isLeapYear", value: function(t4) {
      return t4 % 4 == 0 && t4 % 100 != 0 || t4 % 400 == 0;
    } }, { key: "calculcateLastDaysOfMonth", value: function(t4, e4, i3) {
      return this.determineDaysOfMonths(t4, e4) - i3;
    } }, { key: "determineDaysOfYear", value: function(t4) {
      var e4 = 365;
      return this.isLeapYear(t4) && (e4 = 366), e4;
    } }, { key: "determineRemainingDaysOfYear", value: function(t4, e4, i3) {
      var a3 = this.daysCntOfYear[e4] + i3;
      return e4 > 1 && this.isLeapYear() && a3++, a3;
    } }, { key: "determineDaysOfMonths", value: function(t4, e4) {
      var i3 = 30;
      switch (t4 = x2.monthMod(t4), true) {
        case this.months30.indexOf(t4) > -1:
          2 === t4 && (i3 = this.isLeapYear(e4) ? 29 : 28);
          break;
        case this.months31.indexOf(t4) > -1:
        default:
          i3 = 31;
      }
      return i3;
    } }]), t3;
  }(), S2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.tooltipKeyFormat = "dd MMM";
    }
    return r2(t3, [{ key: "xLabelFormat", value: function(t4, e4, i3, a3) {
      var s3 = this.w;
      if ("datetime" === s3.config.xaxis.type && void 0 === s3.config.xaxis.labels.formatter && void 0 === s3.config.tooltip.x.formatter) {
        var r3 = new A5(this.ctx);
        return r3.formatDate(r3.getDate(e4), s3.config.tooltip.x.format);
      }
      return t4(e4, i3, a3);
    } }, { key: "defaultGeneralFormatter", value: function(t4) {
      return Array.isArray(t4) ? t4.map(function(t5) {
        return t5;
      }) : t4;
    } }, { key: "defaultYFormatter", value: function(t4, e4, i3) {
      var a3 = this.w;
      if (x2.isNumber(t4))
        if (0 !== a3.globals.yValueDecimal)
          t4 = t4.toFixed(void 0 !== e4.decimalsInFloat ? e4.decimalsInFloat : a3.globals.yValueDecimal);
        else {
          var s3 = t4.toFixed(0);
          t4 = t4 == s3 ? s3 : t4.toFixed(1);
        }
      return t4;
    } }, { key: "setLabelFormatters", value: function() {
      var t4 = this, e4 = this.w;
      return e4.globals.xaxisTooltipFormatter = function(e6) {
        return t4.defaultGeneralFormatter(e6);
      }, e4.globals.ttKeyFormatter = function(e6) {
        return t4.defaultGeneralFormatter(e6);
      }, e4.globals.ttZFormatter = function(t5) {
        return t5;
      }, e4.globals.legendFormatter = function(e6) {
        return t4.defaultGeneralFormatter(e6);
      }, void 0 !== e4.config.xaxis.labels.formatter ? e4.globals.xLabelFormatter = e4.config.xaxis.labels.formatter : e4.globals.xLabelFormatter = function(t5) {
        if (x2.isNumber(t5)) {
          if (!e4.config.xaxis.convertedCatToNumeric && "numeric" === e4.config.xaxis.type) {
            if (x2.isNumber(e4.config.xaxis.decimalsInFloat))
              return t5.toFixed(e4.config.xaxis.decimalsInFloat);
            var i3 = e4.globals.maxX - e4.globals.minX;
            return i3 > 0 && i3 < 100 ? t5.toFixed(1) : t5.toFixed(0);
          }
          if (e4.globals.isBarHorizontal) {
            if (e4.globals.maxY - e4.globals.minYArr < 4)
              return t5.toFixed(1);
          }
          return t5.toFixed(0);
        }
        return t5;
      }, "function" == typeof e4.config.tooltip.x.formatter ? e4.globals.ttKeyFormatter = e4.config.tooltip.x.formatter : e4.globals.ttKeyFormatter = e4.globals.xLabelFormatter, "function" == typeof e4.config.xaxis.tooltip.formatter && (e4.globals.xaxisTooltipFormatter = e4.config.xaxis.tooltip.formatter), (Array.isArray(e4.config.tooltip.y) || void 0 !== e4.config.tooltip.y.formatter) && (e4.globals.ttVal = e4.config.tooltip.y), void 0 !== e4.config.tooltip.z.formatter && (e4.globals.ttZFormatter = e4.config.tooltip.z.formatter), void 0 !== e4.config.legend.formatter && (e4.globals.legendFormatter = e4.config.legend.formatter), e4.config.yaxis.forEach(function(i3, a3) {
        void 0 !== i3.labels.formatter ? e4.globals.yLabelFormatters[a3] = i3.labels.formatter : e4.globals.yLabelFormatters[a3] = function(s3) {
          return e4.globals.xyCharts ? Array.isArray(s3) ? s3.map(function(e6) {
            return t4.defaultYFormatter(e6, i3, a3);
          }) : t4.defaultYFormatter(s3, i3, a3) : s3;
        };
      }), e4.globals;
    } }, { key: "heatmapLabelFormatters", value: function() {
      var t4 = this.w;
      if ("heatmap" === t4.config.chart.type) {
        t4.globals.yAxisScale[0].result = t4.globals.seriesNames.slice();
        var e4 = t4.globals.seriesNames.reduce(function(t5, e6) {
          return t5.length > e6.length ? t5 : e6;
        }, 0);
        t4.globals.yAxisScale[0].niceMax = e4, t4.globals.yAxisScale[0].niceMin = e4;
      }
    } }]), t3;
  }(), C2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "getLabel", value: function(t4, e4, i3, a3) {
      var s3 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [], r3 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "12px", o3 = !(arguments.length > 6 && void 0 !== arguments[6]) || arguments[6], n3 = this.w, l3 = void 0 === t4[a3] ? "" : t4[a3], h3 = l3, c3 = n3.globals.xLabelFormatter, d3 = n3.config.xaxis.labels.formatter, g3 = false, u3 = new S2(this.ctx), p3 = l3;
      o3 && (h3 = u3.xLabelFormat(c3, l3, p3, { i: a3, dateFormatter: new A5(this.ctx).formatDate, w: n3 }), void 0 !== d3 && (h3 = d3(l3, t4[a3], { i: a3, dateFormatter: new A5(this.ctx).formatDate, w: n3 })));
      var f3, x3;
      e4.length > 0 ? (f3 = e4[a3].unit, x3 = null, e4.forEach(function(t5) {
        "month" === t5.unit ? x3 = "year" : "day" === t5.unit ? x3 = "month" : "hour" === t5.unit ? x3 = "day" : "minute" === t5.unit && (x3 = "hour");
      }), g3 = x3 === f3, i3 = e4[a3].position, h3 = e4[a3].value) : "datetime" === n3.config.xaxis.type && void 0 === d3 && (h3 = ""), void 0 === h3 && (h3 = ""), h3 = Array.isArray(h3) ? h3 : h3.toString();
      var b3 = new m2(this.ctx), v3 = {};
      v3 = n3.globals.rotateXLabels && o3 ? b3.getTextRects(h3, parseInt(r3, 10), null, "rotate(".concat(n3.config.xaxis.labels.rotate, " 0 0)"), false) : b3.getTextRects(h3, parseInt(r3, 10));
      var y3 = !n3.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
      return !Array.isArray(h3) && ("NaN" === String(h3) || s3.indexOf(h3) >= 0 && y3) && (h3 = ""), { x: i3, text: h3, textRect: v3, isBold: g3 };
    } }, { key: "checkLabelBasedOnTickamount", value: function(t4, e4, i3) {
      var a3 = this.w, s3 = a3.config.xaxis.tickAmount;
      return "dataPoints" === s3 && (s3 = Math.round(a3.globals.gridWidth / 120)), s3 > i3 || t4 % Math.round(i3 / (s3 + 1)) == 0 || (e4.text = ""), e4;
    } }, { key: "checkForOverflowingLabels", value: function(t4, e4, i3, a3, s3) {
      var r3 = this.w;
      if (0 === t4 && r3.globals.skipFirstTimelinelabel && (e4.text = ""), t4 === i3 - 1 && r3.globals.skipLastTimelinelabel && (e4.text = ""), r3.config.xaxis.labels.hideOverlappingLabels && a3.length > 0) {
        var o3 = s3[s3.length - 1];
        e4.x < o3.textRect.width / (r3.globals.rotateXLabels ? Math.abs(r3.config.xaxis.labels.rotate) / 12 : 1.01) + o3.x && (e4.text = "");
      }
      return e4;
    } }, { key: "checkForReversedLabels", value: function(t4, e4) {
      var i3 = this.w;
      return i3.config.yaxis[t4] && i3.config.yaxis[t4].reversed && e4.reverse(), e4;
    } }, { key: "isYAxisHidden", value: function(t4) {
      var e4 = this.w, i3 = new y2(this.ctx);
      return !e4.globals.seriesYAxisMap[t4].some(function(t5) {
        return -1 === e4.globals.collapsedSeriesIndices.indexOf(t5);
      }) || !e4.config.yaxis[t4].show || !e4.config.yaxis[t4].showForNullSeries && i3.isSeriesNull(t4);
    } }, { key: "getYAxisForeColor", value: function(t4, e4) {
      var i3 = this.w;
      return Array.isArray(t4) && i3.globals.yAxisScale[e4] && this.ctx.theme.pushExtraColors(t4, i3.globals.yAxisScale[e4].result.length, false), t4;
    } }, { key: "drawYAxisTicks", value: function(t4, e4, i3, a3, s3, r3, o3) {
      var n3 = this.w, l3 = new m2(this.ctx), h3 = n3.globals.translateY;
      if (a3.show && e4 > 0) {
        true === n3.config.yaxis[s3].opposite && (t4 += a3.width);
        for (var c3 = e4; c3 >= 0; c3--) {
          var d3 = h3 + e4 / 10 + n3.config.yaxis[s3].labels.offsetY - 1;
          n3.globals.isBarHorizontal && (d3 = r3 * c3), "heatmap" === n3.config.chart.type && (d3 += r3 / 2);
          var g3 = l3.drawLine(t4 + i3.offsetX - a3.width + a3.offsetX, d3 + a3.offsetY, t4 + i3.offsetX + a3.offsetX, d3 + a3.offsetY, a3.color);
          o3.add(g3), h3 += r3;
        }
      }
    } }]), t3;
  }(), L2 = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.annoCtx = e4, this.helpers = new w2(this.annoCtx), this.axesUtils = new C2(this.annoCtx);
    }
    return r2(t3, [{ key: "addYaxisAnnotation", value: function(t4, e4, i3) {
      var a3, s3 = this.w, r3 = t4.strokeDashArray, o3 = this.helpers.getY1Y2("y1", t4), n3 = o3.yP, l3 = o3.clipped, h3 = true, c3 = false, d3 = t4.label.text;
      if (null === t4.y2 || void 0 === t4.y2) {
        if (!l3) {
          c3 = true;
          var g3 = this.annoCtx.graphics.drawLine(0 + t4.offsetX, n3 + t4.offsetY, this._getYAxisAnnotationWidth(t4), n3 + t4.offsetY, t4.borderColor, r3, t4.borderWidth);
          e4.appendChild(g3.node), t4.id && g3.node.classList.add(t4.id);
        }
      } else {
        if (a3 = (o3 = this.helpers.getY1Y2("y2", t4)).yP, h3 = o3.clipped, a3 > n3) {
          var u3 = n3;
          n3 = a3, a3 = u3;
        }
        if (!l3 || !h3) {
          c3 = true;
          var p3 = this.annoCtx.graphics.drawRect(0 + t4.offsetX, a3 + t4.offsetY, this._getYAxisAnnotationWidth(t4), n3 - a3, 0, t4.fillColor, t4.opacity, 1, t4.borderColor, r3);
          p3.node.classList.add("apexcharts-annotation-rect"), p3.attr("clip-path", "url(#gridRectMask".concat(s3.globals.cuid, ")")), e4.appendChild(p3.node), t4.id && p3.node.classList.add(t4.id);
        }
      }
      if (c3) {
        var f3 = "right" === t4.label.position ? s3.globals.gridWidth : "center" === t4.label.position ? s3.globals.gridWidth / 2 : 0, x3 = this.annoCtx.graphics.drawText({ x: f3 + t4.label.offsetX, y: (null != a3 ? a3 : n3) + t4.label.offsetY - 3, text: d3, textAnchor: t4.label.textAnchor, fontSize: t4.label.style.fontSize, fontFamily: t4.label.style.fontFamily, fontWeight: t4.label.style.fontWeight, foreColor: t4.label.style.color, cssClass: "apexcharts-yaxis-annotation-label ".concat(t4.label.style.cssClass, " ").concat(t4.id ? t4.id : "") });
        x3.attr({ rel: i3 }), e4.appendChild(x3.node);
      }
    } }, { key: "_getYAxisAnnotationWidth", value: function(t4) {
      var e4 = this.w;
      e4.globals.gridWidth;
      return (t4.width.indexOf("%") > -1 ? e4.globals.gridWidth * parseInt(t4.width, 10) / 100 : parseInt(t4.width, 10)) + t4.offsetX;
    } }, { key: "drawYAxisAnnotations", value: function() {
      var t4 = this, e4 = this.w, i3 = this.annoCtx.graphics.group({ class: "apexcharts-yaxis-annotations" });
      return e4.config.annotations.yaxis.forEach(function(a3, s3) {
        e4.globals.seriesYAxisMap[a3.yAxisIndex][0], t4.axesUtils.isYAxisHidden(a3.yAxisIndex) || t4.addYaxisAnnotation(a3, i3.node, s3);
      }), i3;
    } }]), t3;
  }(), P2 = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.annoCtx = e4, this.helpers = new w2(this.annoCtx);
    }
    return r2(t3, [{ key: "addPointAnnotation", value: function(t4, e4, i3) {
      this.w;
      var a3 = this.helpers.getX1X2("x1", t4), s3 = a3.x, r3 = a3.clipped, o3 = (a3 = this.helpers.getY1Y2("y1", t4)).yP, n3 = a3.clipped;
      if (x2.isNumber(s3) && !n3 && !r3) {
        var l3 = { pSize: t4.marker.size, pointStrokeWidth: t4.marker.strokeWidth, pointFillColor: t4.marker.fillColor, pointStrokeColor: t4.marker.strokeColor, shape: t4.marker.shape, pRadius: t4.marker.radius, class: "apexcharts-point-annotation-marker ".concat(t4.marker.cssClass, " ").concat(t4.id ? t4.id : "") }, h3 = this.annoCtx.graphics.drawMarker(s3 + t4.marker.offsetX, o3 + t4.marker.offsetY, l3);
        e4.appendChild(h3.node);
        var c3 = t4.label.text ? t4.label.text : "", d3 = this.annoCtx.graphics.drawText({ x: s3 + t4.label.offsetX, y: o3 + t4.label.offsetY - t4.marker.size - parseFloat(t4.label.style.fontSize) / 1.6, text: c3, textAnchor: t4.label.textAnchor, fontSize: t4.label.style.fontSize, fontFamily: t4.label.style.fontFamily, fontWeight: t4.label.style.fontWeight, foreColor: t4.label.style.color, cssClass: "apexcharts-point-annotation-label ".concat(t4.label.style.cssClass, " ").concat(t4.id ? t4.id : "") });
        if (d3.attr({ rel: i3 }), e4.appendChild(d3.node), t4.customSVG.SVG) {
          var g3 = this.annoCtx.graphics.group({ class: "apexcharts-point-annotations-custom-svg " + t4.customSVG.cssClass });
          g3.attr({ transform: "translate(".concat(s3 + t4.customSVG.offsetX, ", ").concat(o3 + t4.customSVG.offsetY, ")") }), g3.node.innerHTML = t4.customSVG.SVG, e4.appendChild(g3.node);
        }
        if (t4.image.path) {
          var u3 = t4.image.width ? t4.image.width : 20, p3 = t4.image.height ? t4.image.height : 20;
          h3 = this.annoCtx.addImage({ x: s3 + t4.image.offsetX - u3 / 2, y: o3 + t4.image.offsetY - p3 / 2, width: u3, height: p3, path: t4.image.path, appendTo: ".apexcharts-point-annotations" });
        }
        t4.mouseEnter && h3.node.addEventListener("mouseenter", t4.mouseEnter.bind(this, t4)), t4.mouseLeave && h3.node.addEventListener("mouseleave", t4.mouseLeave.bind(this, t4)), t4.click && h3.node.addEventListener("click", t4.click.bind(this, t4));
      }
    } }, { key: "drawPointAnnotations", value: function() {
      var t4 = this, e4 = this.w, i3 = this.annoCtx.graphics.group({ class: "apexcharts-point-annotations" });
      return e4.config.annotations.points.map(function(e6, a3) {
        t4.addPointAnnotation(e6, i3.node, a3);
      }), i3;
    } }]), t3;
  }();
  var M2 = { name: "en", options: { months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], toolbar: { exportToSVG: "Download SVG", exportToPNG: "Download PNG", exportToCSV: "Download CSV", menu: "Menu", selection: "Selection", selectionZoom: "Selection Zoom", zoomIn: "Zoom In", zoomOut: "Zoom Out", pan: "Panning", reset: "Reset Zoom" } } }, I2 = function() {
    function t3() {
      a2(this, t3), this.yAxis = { show: true, showAlways: false, showForNullSeries: true, seriesName: void 0, opposite: false, reversed: false, logarithmic: false, logBase: 10, tickAmount: void 0, stepSize: void 0, forceNiceScale: false, max: void 0, min: void 0, floating: false, decimalsInFloat: void 0, labels: { show: true, minWidth: 0, maxWidth: 160, offsetX: 0, offsetY: 0, align: void 0, rotate: 0, padding: 20, style: { colors: [], fontSize: "11px", fontWeight: 400, fontFamily: void 0, cssClass: "" }, formatter: void 0 }, axisBorder: { show: false, color: "#e0e0e0", width: 1, offsetX: 0, offsetY: 0 }, axisTicks: { show: false, color: "#e0e0e0", width: 6, offsetX: 0, offsetY: 0 }, title: { text: void 0, rotate: -90, offsetY: 0, offsetX: 0, style: { color: void 0, fontSize: "11px", fontWeight: 900, fontFamily: void 0, cssClass: "" } }, tooltip: { enabled: false, offsetX: 0 }, crosshairs: { show: true, position: "front", stroke: { color: "#b6b6b6", width: 1, dashArray: 0 } } }, this.pointAnnotation = { id: void 0, x: 0, y: null, yAxisIndex: 0, seriesIndex: void 0, mouseEnter: void 0, mouseLeave: void 0, click: void 0, marker: { size: 4, fillColor: "#fff", strokeWidth: 2, strokeColor: "#333", shape: "circle", offsetX: 0, offsetY: 0, radius: 2, cssClass: "" }, label: { borderColor: "#c2c2c2", borderWidth: 1, borderRadius: 2, text: void 0, textAnchor: "middle", offsetX: 0, offsetY: 0, mouseEnter: void 0, mouseLeave: void 0, click: void 0, style: { background: "#fff", color: void 0, fontSize: "11px", fontFamily: void 0, fontWeight: 400, cssClass: "", padding: { left: 5, right: 5, top: 2, bottom: 2 } } }, customSVG: { SVG: void 0, cssClass: void 0, offsetX: 0, offsetY: 0 }, image: { path: void 0, width: 20, height: 20, offsetX: 0, offsetY: 0 } }, this.yAxisAnnotation = { id: void 0, y: 0, y2: null, strokeDashArray: 1, fillColor: "#c2c2c2", borderColor: "#c2c2c2", borderWidth: 1, opacity: 0.3, offsetX: 0, offsetY: 0, width: "100%", yAxisIndex: 0, label: { borderColor: "#c2c2c2", borderWidth: 1, borderRadius: 2, text: void 0, textAnchor: "end", position: "right", offsetX: 0, offsetY: -3, mouseEnter: void 0, mouseLeave: void 0, click: void 0, style: { background: "#fff", color: void 0, fontSize: "11px", fontFamily: void 0, fontWeight: 400, cssClass: "", padding: { left: 5, right: 5, top: 2, bottom: 2 } } } }, this.xAxisAnnotation = { id: void 0, x: 0, x2: null, strokeDashArray: 1, fillColor: "#c2c2c2", borderColor: "#c2c2c2", borderWidth: 1, opacity: 0.3, offsetX: 0, offsetY: 0, label: { borderColor: "#c2c2c2", borderWidth: 1, borderRadius: 2, text: void 0, textAnchor: "middle", orientation: "vertical", position: "top", offsetX: 0, offsetY: 0, mouseEnter: void 0, mouseLeave: void 0, click: void 0, style: { background: "#fff", color: void 0, fontSize: "11px", fontFamily: void 0, fontWeight: 400, cssClass: "", padding: { left: 5, right: 5, top: 2, bottom: 2 } } } }, this.text = { x: 0, y: 0, text: "", textAnchor: "start", foreColor: void 0, fontSize: "13px", fontFamily: void 0, fontWeight: 400, appendTo: ".apexcharts-annotations", backgroundColor: "transparent", borderColor: "#c2c2c2", borderRadius: 0, borderWidth: 0, paddingLeft: 4, paddingRight: 4, paddingTop: 2, paddingBottom: 2 };
    }
    return r2(t3, [{ key: "init", value: function() {
      return { annotations: { yaxis: [this.yAxisAnnotation], xaxis: [this.xAxisAnnotation], points: [this.pointAnnotation], texts: [], images: [], shapes: [] }, chart: { animations: { enabled: true, easing: "easeinout", speed: 800, animateGradually: { delay: 150, enabled: true }, dynamicAnimation: { enabled: true, speed: 350 } }, background: "transparent", locales: [M2], defaultLocale: "en", dropShadow: { enabled: false, enabledOnSeries: void 0, top: 2, left: 2, blur: 4, color: "#000", opacity: 0.35 }, events: { animationEnd: void 0, beforeMount: void 0, mounted: void 0, updated: void 0, click: void 0, mouseMove: void 0, mouseLeave: void 0, xAxisLabelClick: void 0, legendClick: void 0, markerClick: void 0, selection: void 0, dataPointSelection: void 0, dataPointMouseEnter: void 0, dataPointMouseLeave: void 0, beforeZoom: void 0, beforeResetZoom: void 0, zoomed: void 0, scrolled: void 0, brushScrolled: void 0 }, foreColor: "#373d3f", fontFamily: "Helvetica, Arial, sans-serif", height: "auto", parentHeightOffset: 15, redrawOnParentResize: true, redrawOnWindowResize: true, id: void 0, group: void 0, nonce: void 0, offsetX: 0, offsetY: 0, selection: { enabled: false, type: "x", fill: { color: "#24292e", opacity: 0.1 }, stroke: { width: 1, color: "#24292e", opacity: 0.4, dashArray: 3 }, xaxis: { min: void 0, max: void 0 }, yaxis: { min: void 0, max: void 0 } }, sparkline: { enabled: false }, brush: { enabled: false, autoScaleYaxis: true, target: void 0, targets: void 0 }, stacked: false, stackOnlyBar: true, stackType: "normal", toolbar: { show: true, offsetX: 0, offsetY: 0, tools: { download: true, selection: true, zoom: true, zoomin: true, zoomout: true, pan: true, reset: true, customIcons: [] }, export: { csv: { filename: void 0, columnDelimiter: ",", headerCategory: "category", headerValue: "value", dateFormatter: function(t4) {
        return new Date(t4).toDateString();
      } }, png: { filename: void 0 }, svg: { filename: void 0 } }, autoSelected: "zoom" }, type: "line", width: "100%", zoom: { enabled: true, type: "x", autoScaleYaxis: false, zoomedArea: { fill: { color: "#90CAF9", opacity: 0.4 }, stroke: { color: "#0D47A1", opacity: 0.4, width: 1 } } } }, plotOptions: { area: { fillTo: "origin" }, bar: { horizontal: false, columnWidth: "70%", barHeight: "70%", distributed: false, borderRadius: 0, borderRadiusApplication: "around", borderRadiusWhenStacked: "last", rangeBarOverlap: true, rangeBarGroupRows: false, hideZeroBarsWhenGrouped: false, isDumbbell: false, dumbbellColors: void 0, isFunnel: false, isFunnel3d: true, colors: { ranges: [], backgroundBarColors: [], backgroundBarOpacity: 1, backgroundBarRadius: 0 }, dataLabels: { position: "top", maxItems: 100, hideOverflowingLabels: true, orientation: "horizontal", total: { enabled: false, formatter: void 0, offsetX: 0, offsetY: 0, style: { color: "#373d3f", fontSize: "12px", fontFamily: void 0, fontWeight: 600 } } } }, bubble: { zScaling: true, minBubbleRadius: void 0, maxBubbleRadius: void 0 }, candlestick: { colors: { upward: "#00B746", downward: "#EF403C" }, wick: { useFillColor: true } }, boxPlot: { colors: { upper: "#00E396", lower: "#008FFB" } }, heatmap: { radius: 2, enableShades: true, shadeIntensity: 0.5, reverseNegativeShade: false, distributed: false, useFillColorAsStroke: false, colorScale: { inverse: false, ranges: [], min: void 0, max: void 0 } }, treemap: { enableShades: true, shadeIntensity: 0.5, distributed: false, reverseNegativeShade: false, useFillColorAsStroke: false, borderRadius: 4, dataLabels: { format: "scale" }, colorScale: { inverse: false, ranges: [], min: void 0, max: void 0 } }, radialBar: { inverseOrder: false, startAngle: 0, endAngle: 360, offsetX: 0, offsetY: 0, hollow: { margin: 5, size: "50%", background: "transparent", image: void 0, imageWidth: 150, imageHeight: 150, imageOffsetX: 0, imageOffsetY: 0, imageClipped: true, position: "front", dropShadow: { enabled: false, top: 0, left: 0, blur: 3, color: "#000", opacity: 0.5 } }, track: { show: true, startAngle: void 0, endAngle: void 0, background: "#f2f2f2", strokeWidth: "97%", opacity: 1, margin: 5, dropShadow: { enabled: false, top: 0, left: 0, blur: 3, color: "#000", opacity: 0.5 } }, dataLabels: { show: true, name: { show: true, fontSize: "16px", fontFamily: void 0, fontWeight: 600, color: void 0, offsetY: 0, formatter: function(t4) {
        return t4;
      } }, value: { show: true, fontSize: "14px", fontFamily: void 0, fontWeight: 400, color: void 0, offsetY: 16, formatter: function(t4) {
        return t4 + "%";
      } }, total: { show: false, label: "Total", fontSize: "16px", fontWeight: 600, fontFamily: void 0, color: void 0, formatter: function(t4) {
        return t4.globals.seriesTotals.reduce(function(t5, e4) {
          return t5 + e4;
        }, 0) / t4.globals.series.length + "%";
      } } }, barLabels: { enabled: false, margin: 5, useSeriesColors: true, fontFamily: void 0, fontWeight: 600, fontSize: "16px", formatter: function(t4) {
        return t4;
      }, onClick: void 0 } }, pie: { customScale: 1, offsetX: 0, offsetY: 0, startAngle: 0, endAngle: 360, expandOnClick: true, dataLabels: { offset: 0, minAngleToShowLabel: 10 }, donut: { size: "65%", background: "transparent", labels: { show: false, name: { show: true, fontSize: "16px", fontFamily: void 0, fontWeight: 600, color: void 0, offsetY: -10, formatter: function(t4) {
        return t4;
      } }, value: { show: true, fontSize: "20px", fontFamily: void 0, fontWeight: 400, color: void 0, offsetY: 10, formatter: function(t4) {
        return t4;
      } }, total: { show: false, showAlways: false, label: "Total", fontSize: "16px", fontWeight: 400, fontFamily: void 0, color: void 0, formatter: function(t4) {
        return t4.globals.seriesTotals.reduce(function(t5, e4) {
          return t5 + e4;
        }, 0);
      } } } } }, polarArea: { rings: { strokeWidth: 1, strokeColor: "#e8e8e8" }, spokes: { strokeWidth: 1, connectorColors: "#e8e8e8" } }, radar: { size: void 0, offsetX: 0, offsetY: 0, polygons: { strokeWidth: 1, strokeColors: "#e8e8e8", connectorColors: "#e8e8e8", fill: { colors: void 0 } } } }, colors: void 0, dataLabels: { enabled: true, enabledOnSeries: void 0, formatter: function(t4) {
        return null !== t4 ? t4 : "";
      }, textAnchor: "middle", distributed: false, offsetX: 0, offsetY: 0, style: { fontSize: "12px", fontFamily: void 0, fontWeight: 600, colors: void 0 }, background: { enabled: true, foreColor: "#fff", borderRadius: 2, padding: 4, opacity: 0.9, borderWidth: 1, borderColor: "#fff", dropShadow: { enabled: false, top: 1, left: 1, blur: 1, color: "#000", opacity: 0.45 } }, dropShadow: { enabled: false, top: 1, left: 1, blur: 1, color: "#000", opacity: 0.45 } }, fill: { type: "solid", colors: void 0, opacity: 0.85, gradient: { shade: "dark", type: "horizontal", shadeIntensity: 0.5, gradientToColors: void 0, inverseColors: true, opacityFrom: 1, opacityTo: 1, stops: [0, 50, 100], colorStops: [] }, image: { src: [], width: void 0, height: void 0 }, pattern: { style: "squares", width: 6, height: 6, strokeWidth: 2 } }, forecastDataPoints: { count: 0, fillOpacity: 0.5, strokeWidth: void 0, dashArray: 4 }, grid: { show: true, borderColor: "#e0e0e0", strokeDashArray: 0, position: "back", xaxis: { lines: { show: false } }, yaxis: { lines: { show: true } }, row: { colors: void 0, opacity: 0.5 }, column: { colors: void 0, opacity: 0.5 }, padding: { top: 0, right: 10, bottom: 0, left: 12 } }, labels: [], legend: { show: true, showForSingleSeries: false, showForNullSeries: true, showForZeroSeries: true, floating: false, position: "bottom", horizontalAlign: "center", inverseOrder: false, fontSize: "12px", fontFamily: void 0, fontWeight: 400, width: void 0, height: void 0, formatter: void 0, tooltipHoverFormatter: void 0, offsetX: -20, offsetY: 4, customLegendItems: [], labels: { colors: void 0, useSeriesColors: false }, markers: { width: 12, height: 12, strokeWidth: 0, fillColors: void 0, strokeColor: "#fff", radius: 12, customHTML: void 0, offsetX: 0, offsetY: 0, onClick: void 0 }, itemMargin: { horizontal: 5, vertical: 2 }, onItemClick: { toggleDataSeries: true }, onItemHover: { highlightDataSeries: true } }, markers: { discrete: [], size: 0, colors: void 0, strokeColors: "#fff", strokeWidth: 2, strokeOpacity: 0.9, strokeDashArray: 0, fillOpacity: 1, shape: "circle", width: 8, height: 8, radius: 2, offsetX: 0, offsetY: 0, onClick: void 0, onDblClick: void 0, showNullDataPoints: true, hover: { size: void 0, sizeOffset: 3 } }, noData: { text: void 0, align: "center", verticalAlign: "middle", offsetX: 0, offsetY: 0, style: { color: void 0, fontSize: "14px", fontFamily: void 0 } }, responsive: [], series: void 0, states: { normal: { filter: { type: "none", value: 0 } }, hover: { filter: { type: "lighten", value: 0.1 } }, active: { allowMultipleDataPointsSelection: false, filter: { type: "darken", value: 0.5 } } }, title: { text: void 0, align: "left", margin: 5, offsetX: 0, offsetY: 0, floating: false, style: { fontSize: "14px", fontWeight: 900, fontFamily: void 0, color: void 0 } }, subtitle: { text: void 0, align: "left", margin: 5, offsetX: 0, offsetY: 30, floating: false, style: { fontSize: "12px", fontWeight: 400, fontFamily: void 0, color: void 0 } }, stroke: { show: true, curve: "smooth", lineCap: "butt", width: 2, colors: void 0, dashArray: 0, fill: { type: "solid", colors: void 0, opacity: 0.85, gradient: { shade: "dark", type: "horizontal", shadeIntensity: 0.5, gradientToColors: void 0, inverseColors: true, opacityFrom: 1, opacityTo: 1, stops: [0, 50, 100], colorStops: [] } } }, tooltip: { enabled: true, enabledOnSeries: void 0, shared: true, hideEmptySeries: false, followCursor: false, intersect: false, inverseOrder: false, custom: void 0, fillSeriesColor: false, theme: "light", cssClass: "", style: { fontSize: "12px", fontFamily: void 0 }, onDatasetHover: { highlightDataSeries: false }, x: { show: true, format: "dd MMM", formatter: void 0 }, y: { formatter: void 0, title: { formatter: function(t4) {
        return t4 ? t4 + ": " : "";
      } } }, z: { formatter: void 0, title: "Size: " }, marker: { show: true, fillColors: void 0 }, items: { display: "flex" }, fixed: { enabled: false, position: "topRight", offsetX: 0, offsetY: 0 } }, xaxis: { type: "category", categories: [], convertedCatToNumeric: false, offsetX: 0, offsetY: 0, overwriteCategories: void 0, labels: { show: true, rotate: -45, rotateAlways: false, hideOverlappingLabels: true, trim: false, minHeight: void 0, maxHeight: 120, showDuplicates: true, style: { colors: [], fontSize: "12px", fontWeight: 400, fontFamily: void 0, cssClass: "" }, offsetX: 0, offsetY: 0, format: void 0, formatter: void 0, datetimeUTC: true, datetimeFormatter: { year: "yyyy", month: "MMM 'yy", day: "dd MMM", hour: "HH:mm", minute: "HH:mm:ss", second: "HH:mm:ss" } }, group: { groups: [], style: { colors: [], fontSize: "12px", fontWeight: 400, fontFamily: void 0, cssClass: "" } }, axisBorder: { show: true, color: "#e0e0e0", width: "100%", height: 1, offsetX: 0, offsetY: 0 }, axisTicks: { show: true, color: "#e0e0e0", height: 6, offsetX: 0, offsetY: 0 }, stepSize: void 0, tickAmount: void 0, tickPlacement: "on", min: void 0, max: void 0, range: void 0, floating: false, decimalsInFloat: void 0, position: "bottom", title: { text: void 0, offsetX: 0, offsetY: 0, style: { color: void 0, fontSize: "12px", fontWeight: 900, fontFamily: void 0, cssClass: "" } }, crosshairs: { show: true, width: 1, position: "back", opacity: 0.9, stroke: { color: "#b6b6b6", width: 1, dashArray: 3 }, fill: { type: "solid", color: "#B1B9C4", gradient: { colorFrom: "#D8E3F0", colorTo: "#BED1E6", stops: [0, 100], opacityFrom: 0.4, opacityTo: 0.5 } }, dropShadow: { enabled: false, left: 0, top: 0, blur: 1, opacity: 0.4 } }, tooltip: { enabled: true, offsetY: 0, formatter: void 0, style: { fontSize: "12px", fontFamily: void 0 } } }, yaxis: this.yAxis, theme: { mode: "light", palette: "palette1", monochrome: { enabled: false, color: "#008FFB", shadeTo: "light", shadeIntensity: 0.65 } } };
    } }]), t3;
  }(), T2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.graphics = new m2(this.ctx), this.w.globals.isBarHorizontal && (this.invertAxis = true), this.helpers = new w2(this), this.xAxisAnnotations = new k2(this), this.yAxisAnnotations = new L2(this), this.pointsAnnotations = new P2(this), this.w.globals.isBarHorizontal && this.w.config.yaxis[0].reversed && (this.inversedReversedAxis = true), this.xDivision = this.w.globals.gridWidth / this.w.globals.dataPoints;
    }
    return r2(t3, [{ key: "drawAxesAnnotations", value: function() {
      var t4 = this.w;
      if (t4.globals.axisCharts) {
        for (var e4 = this.yAxisAnnotations.drawYAxisAnnotations(), i3 = this.xAxisAnnotations.drawXAxisAnnotations(), a3 = this.pointsAnnotations.drawPointAnnotations(), s3 = t4.config.chart.animations.enabled, r3 = [e4, i3, a3], o3 = [i3.node, e4.node, a3.node], n3 = 0; n3 < 3; n3++)
          t4.globals.dom.elGraphical.add(r3[n3]), !s3 || t4.globals.resized || t4.globals.dataChanged || "scatter" !== t4.config.chart.type && "bubble" !== t4.config.chart.type && t4.globals.dataPoints > 1 && o3[n3].classList.add("apexcharts-element-hidden"), t4.globals.delayedElements.push({ el: o3[n3], index: 0 });
        this.helpers.annotationsBackground();
      }
    } }, { key: "drawImageAnnos", value: function() {
      var t4 = this;
      this.w.config.annotations.images.map(function(e4, i3) {
        t4.addImage(e4, i3);
      });
    } }, { key: "drawTextAnnos", value: function() {
      var t4 = this;
      this.w.config.annotations.texts.map(function(e4, i3) {
        t4.addText(e4, i3);
      });
    } }, { key: "addXaxisAnnotation", value: function(t4, e4, i3) {
      this.xAxisAnnotations.addXaxisAnnotation(t4, e4, i3);
    } }, { key: "addYaxisAnnotation", value: function(t4, e4, i3) {
      this.yAxisAnnotations.addYaxisAnnotation(t4, e4, i3);
    } }, { key: "addPointAnnotation", value: function(t4, e4, i3) {
      this.pointsAnnotations.addPointAnnotation(t4, e4, i3);
    } }, { key: "addText", value: function(t4, e4) {
      var i3 = t4.x, a3 = t4.y, s3 = t4.text, r3 = t4.textAnchor, o3 = t4.foreColor, n3 = t4.fontSize, l3 = t4.fontFamily, h3 = t4.fontWeight, c3 = t4.cssClass, d3 = t4.backgroundColor, g3 = t4.borderWidth, u3 = t4.strokeDashArray, p3 = t4.borderRadius, f3 = t4.borderColor, x3 = t4.appendTo, b3 = void 0 === x3 ? ".apexcharts-svg" : x3, v3 = t4.paddingLeft, m3 = void 0 === v3 ? 4 : v3, y3 = t4.paddingRight, w3 = void 0 === y3 ? 4 : y3, k3 = t4.paddingBottom, A6 = void 0 === k3 ? 2 : k3, S3 = t4.paddingTop, C3 = void 0 === S3 ? 2 : S3, L3 = this.w, P3 = this.graphics.drawText({ x: i3, y: a3, text: s3, textAnchor: r3 || "start", fontSize: n3 || "12px", fontWeight: h3 || "regular", fontFamily: l3 || L3.config.chart.fontFamily, foreColor: o3 || L3.config.chart.foreColor, cssClass: c3 }), M3 = L3.globals.dom.baseEl.querySelector(b3);
      M3 && M3.appendChild(P3.node);
      var I3 = P3.bbox();
      if (s3) {
        var T3 = this.graphics.drawRect(I3.x - m3, I3.y - C3, I3.width + m3 + w3, I3.height + A6 + C3, p3, d3 || "transparent", 1, g3, f3, u3);
        M3.insertBefore(T3.node, P3.node);
      }
    } }, { key: "addImage", value: function(t4, e4) {
      var i3 = this.w, a3 = t4.path, s3 = t4.x, r3 = void 0 === s3 ? 0 : s3, o3 = t4.y, n3 = void 0 === o3 ? 0 : o3, l3 = t4.width, h3 = void 0 === l3 ? 20 : l3, c3 = t4.height, d3 = void 0 === c3 ? 20 : c3, g3 = t4.appendTo, u3 = void 0 === g3 ? ".apexcharts-svg" : g3, p3 = i3.globals.dom.Paper.image(a3);
      p3.size(h3, d3).move(r3, n3);
      var f3 = i3.globals.dom.baseEl.querySelector(u3);
      return f3 && f3.appendChild(p3.node), p3;
    } }, { key: "addXaxisAnnotationExternal", value: function(t4, e4, i3) {
      return this.addAnnotationExternal({ params: t4, pushToMemory: e4, context: i3, type: "xaxis", contextMethod: i3.addXaxisAnnotation }), i3;
    } }, { key: "addYaxisAnnotationExternal", value: function(t4, e4, i3) {
      return this.addAnnotationExternal({ params: t4, pushToMemory: e4, context: i3, type: "yaxis", contextMethod: i3.addYaxisAnnotation }), i3;
    } }, { key: "addPointAnnotationExternal", value: function(t4, e4, i3) {
      return void 0 === this.invertAxis && (this.invertAxis = i3.w.globals.isBarHorizontal), this.addAnnotationExternal({ params: t4, pushToMemory: e4, context: i3, type: "point", contextMethod: i3.addPointAnnotation }), i3;
    } }, { key: "addAnnotationExternal", value: function(t4) {
      var e4 = t4.params, i3 = t4.pushToMemory, a3 = t4.context, s3 = t4.type, r3 = t4.contextMethod, o3 = a3, n3 = o3.w, l3 = n3.globals.dom.baseEl.querySelector(".apexcharts-".concat(s3, "-annotations")), h3 = l3.childNodes.length + 1, c3 = new I2(), d3 = Object.assign({}, "xaxis" === s3 ? c3.xAxisAnnotation : "yaxis" === s3 ? c3.yAxisAnnotation : c3.pointAnnotation), g3 = x2.extend(d3, e4);
      switch (s3) {
        case "xaxis":
          this.addXaxisAnnotation(g3, l3, h3);
          break;
        case "yaxis":
          this.addYaxisAnnotation(g3, l3, h3);
          break;
        case "point":
          this.addPointAnnotation(g3, l3, h3);
      }
      var u3 = n3.globals.dom.baseEl.querySelector(".apexcharts-".concat(s3, "-annotations .apexcharts-").concat(s3, "-annotation-label[rel='").concat(h3, "']")), p3 = this.helpers.addBackgroundToAnno(u3, g3);
      return p3 && l3.insertBefore(p3.node, u3), i3 && n3.globals.memory.methodsToExec.push({ context: o3, id: g3.id ? g3.id : x2.randomId(), method: r3, label: "addAnnotation", params: e4 }), a3;
    } }, { key: "clearAnnotations", value: function(t4) {
      var e4 = t4.w, i3 = e4.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations");
      e4.globals.memory.methodsToExec.map(function(t5, i4) {
        "addText" !== t5.label && "addAnnotation" !== t5.label || e4.globals.memory.methodsToExec.splice(i4, 1);
      }), i3 = x2.listToArray(i3), Array.prototype.forEach.call(i3, function(t5) {
        for (; t5.firstChild; )
          t5.removeChild(t5.firstChild);
      });
    } }, { key: "removeAnnotation", value: function(t4, e4) {
      var i3 = t4.w, a3 = i3.globals.dom.baseEl.querySelectorAll(".".concat(e4));
      a3 && (i3.globals.memory.methodsToExec.map(function(t5, a4) {
        t5.id === e4 && i3.globals.memory.methodsToExec.splice(a4, 1);
      }), Array.prototype.forEach.call(a3, function(t5) {
        t5.parentElement.removeChild(t5);
      }));
    } }]), t3;
  }(), z2 = function(t3) {
    var e4, i3 = t3.isTimeline, a3 = t3.ctx, s3 = t3.seriesIndex, r3 = t3.dataPointIndex, o3 = t3.y1, n3 = t3.y2, l3 = t3.w, h3 = l3.globals.seriesRangeStart[s3][r3], c3 = l3.globals.seriesRangeEnd[s3][r3], d3 = l3.globals.labels[r3], g3 = l3.config.series[s3].name ? l3.config.series[s3].name : "", u3 = l3.globals.ttKeyFormatter, p3 = l3.config.tooltip.y.title.formatter, f3 = { w: l3, seriesIndex: s3, dataPointIndex: r3, start: h3, end: c3 };
    ("function" == typeof p3 && (g3 = p3(g3, f3)), null !== (e4 = l3.config.series[s3].data[r3]) && void 0 !== e4 && e4.x && (d3 = l3.config.series[s3].data[r3].x), i3) || "datetime" === l3.config.xaxis.type && (d3 = new S2(a3).xLabelFormat(l3.globals.ttKeyFormatter, d3, d3, { i: void 0, dateFormatter: new A5(a3).formatDate, w: l3 }));
    "function" == typeof u3 && (d3 = u3(d3, f3)), Number.isFinite(o3) && Number.isFinite(n3) && (h3 = o3, c3 = n3);
    var x3 = "", b3 = "", v3 = l3.globals.colors[s3];
    if (void 0 === l3.config.tooltip.x.formatter)
      if ("datetime" === l3.config.xaxis.type) {
        var m3 = new A5(a3);
        x3 = m3.formatDate(m3.getDate(h3), l3.config.tooltip.x.format), b3 = m3.formatDate(m3.getDate(c3), l3.config.tooltip.x.format);
      } else
        x3 = h3, b3 = c3;
    else
      x3 = l3.config.tooltip.x.formatter(h3), b3 = l3.config.tooltip.x.formatter(c3);
    return { start: h3, end: c3, startVal: x3, endVal: b3, ylabel: d3, color: v3, seriesName: g3 };
  }, X3 = function(t3) {
    var e4 = t3.color, i3 = t3.seriesName, a3 = t3.ylabel, s3 = t3.start, r3 = t3.end, o3 = t3.seriesIndex, n3 = t3.dataPointIndex, l3 = t3.ctx.tooltip.tooltipLabels.getFormatters(o3);
    s3 = l3.yLbFormatter(s3), r3 = l3.yLbFormatter(r3);
    var h3 = l3.yLbFormatter(t3.w.globals.series[o3][n3]), c3 = '<span class="value start-value">\n  '.concat(s3, '\n  </span> <span class="separator">-</span> <span class="value end-value">\n  ').concat(r3, "\n  </span>");
    return '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' + e4 + '">' + (i3 || "") + '</span></div><div> <span class="category">' + a3 + ": </span> " + (t3.w.globals.comboCharts ? "rangeArea" === t3.w.config.series[o3].type || "rangeBar" === t3.w.config.series[o3].type ? c3 : "<span>".concat(h3, "</span>") : c3) + " </div></div>";
  }, E2 = function() {
    function t3(e4) {
      a2(this, t3), this.opts = e4;
    }
    return r2(t3, [{ key: "hideYAxis", value: function() {
      this.opts.yaxis[0].show = false, this.opts.yaxis[0].title.text = "", this.opts.yaxis[0].axisBorder.show = false, this.opts.yaxis[0].axisTicks.show = false, this.opts.yaxis[0].floating = true;
    } }, { key: "line", value: function() {
      return { chart: { animations: { easing: "swing" } }, dataLabels: { enabled: false }, stroke: { width: 5, curve: "straight" }, markers: { size: 0, hover: { sizeOffset: 6 } }, xaxis: { crosshairs: { width: 1 } } };
    } }, { key: "sparkline", value: function(t4) {
      this.hideYAxis();
      return x2.extend(t4, { grid: { show: false, padding: { left: 0, right: 0, top: 0, bottom: 0 } }, legend: { show: false }, xaxis: { labels: { show: false }, tooltip: { enabled: false }, axisBorder: { show: false }, axisTicks: { show: false } }, chart: { toolbar: { show: false }, zoom: { enabled: false } }, dataLabels: { enabled: false } });
    } }, { key: "bar", value: function() {
      return { chart: { stacked: false, animations: { easing: "swing" } }, plotOptions: { bar: { dataLabels: { position: "center" } } }, dataLabels: { style: { colors: ["#fff"] }, background: { enabled: false } }, stroke: { width: 0, lineCap: "round" }, fill: { opacity: 0.85 }, legend: { markers: { shape: "square", radius: 2, size: 8 } }, tooltip: { shared: false, intersect: true }, xaxis: { tooltip: { enabled: false }, tickPlacement: "between", crosshairs: { width: "barWidth", position: "back", fill: { type: "gradient" }, dropShadow: { enabled: false }, stroke: { width: 0 } } } };
    } }, { key: "funnel", value: function() {
      return this.hideYAxis(), e3(e3({}, this.bar()), {}, { chart: { animations: { easing: "linear", speed: 800, animateGradually: { enabled: false } } }, plotOptions: { bar: { horizontal: true, borderRadiusApplication: "around", borderRadius: 0, dataLabels: { position: "center" } } }, grid: { show: false, padding: { left: 0, right: 0 } }, xaxis: { labels: { show: false }, tooltip: { enabled: false }, axisBorder: { show: false }, axisTicks: { show: false } } });
    } }, { key: "candlestick", value: function() {
      var t4 = this;
      return { stroke: { width: 1, colors: ["#333"] }, fill: { opacity: 1 }, dataLabels: { enabled: false }, tooltip: { shared: true, custom: function(e4) {
        var i3 = e4.seriesIndex, a3 = e4.dataPointIndex, s3 = e4.w;
        return t4._getBoxTooltip(s3, i3, a3, ["Open", "High", "", "Low", "Close"], "candlestick");
      } }, states: { active: { filter: { type: "none" } } }, xaxis: { crosshairs: { width: 1 } } };
    } }, { key: "boxPlot", value: function() {
      var t4 = this;
      return { chart: { animations: { dynamicAnimation: { enabled: false } } }, stroke: { width: 1, colors: ["#24292e"] }, dataLabels: { enabled: false }, tooltip: { shared: true, custom: function(e4) {
        var i3 = e4.seriesIndex, a3 = e4.dataPointIndex, s3 = e4.w;
        return t4._getBoxTooltip(s3, i3, a3, ["Minimum", "Q1", "Median", "Q3", "Maximum"], "boxPlot");
      } }, markers: { size: 5, strokeWidth: 1, strokeColors: "#111" }, xaxis: { crosshairs: { width: 1 } } };
    } }, { key: "rangeBar", value: function() {
      return { chart: { animations: { animateGradually: false } }, stroke: { width: 0, lineCap: "square" }, plotOptions: { bar: { borderRadius: 0, dataLabels: { position: "center" } } }, dataLabels: { enabled: false, formatter: function(t4, e4) {
        e4.ctx;
        var i3 = e4.seriesIndex, a3 = e4.dataPointIndex, s3 = e4.w, r3 = function() {
          var t5 = s3.globals.seriesRangeStart[i3][a3];
          return s3.globals.seriesRangeEnd[i3][a3] - t5;
        };
        return s3.globals.comboCharts ? "rangeBar" === s3.config.series[i3].type || "rangeArea" === s3.config.series[i3].type ? r3() : t4 : r3();
      }, background: { enabled: false }, style: { colors: ["#fff"] } }, markers: { size: 10 }, tooltip: { shared: false, followCursor: true, custom: function(t4) {
        return t4.w.config.plotOptions && t4.w.config.plotOptions.bar && t4.w.config.plotOptions.bar.horizontal ? function(t5) {
          var i3 = z2(e3(e3({}, t5), {}, { isTimeline: true })), a3 = i3.color, s3 = i3.seriesName, r3 = i3.ylabel, o3 = i3.startVal, n3 = i3.endVal;
          return X3(e3(e3({}, t5), {}, { color: a3, seriesName: s3, ylabel: r3, start: o3, end: n3 }));
        }(t4) : function(t5) {
          var i3 = z2(t5), a3 = i3.color, s3 = i3.seriesName, r3 = i3.ylabel, o3 = i3.start, n3 = i3.end;
          return X3(e3(e3({}, t5), {}, { color: a3, seriesName: s3, ylabel: r3, start: o3, end: n3 }));
        }(t4);
      } }, xaxis: { tickPlacement: "between", tooltip: { enabled: false }, crosshairs: { stroke: { width: 0 } } } };
    } }, { key: "dumbbell", value: function(t4) {
      var e4, i3;
      return null !== (e4 = t4.plotOptions.bar) && void 0 !== e4 && e4.barHeight || (t4.plotOptions.bar.barHeight = 2), null !== (i3 = t4.plotOptions.bar) && void 0 !== i3 && i3.columnWidth || (t4.plotOptions.bar.columnWidth = 2), t4;
    } }, { key: "area", value: function() {
      return { stroke: { width: 4, fill: { type: "solid", gradient: { inverseColors: false, shade: "light", type: "vertical", opacityFrom: 0.65, opacityTo: 0.5, stops: [0, 100, 100] } } }, fill: { type: "gradient", gradient: { inverseColors: false, shade: "light", type: "vertical", opacityFrom: 0.65, opacityTo: 0.5, stops: [0, 100, 100] } }, markers: { size: 0, hover: { sizeOffset: 6 } }, tooltip: { followCursor: false } };
    } }, { key: "rangeArea", value: function() {
      return { stroke: { curve: "straight", width: 0 }, fill: { type: "solid", opacity: 0.6 }, markers: { size: 0 }, states: { hover: { filter: { type: "none" } }, active: { filter: { type: "none" } } }, tooltip: { intersect: false, shared: true, followCursor: true, custom: function(t4) {
        return function(t5) {
          var i3 = z2(t5), a3 = i3.color, s3 = i3.seriesName, r3 = i3.ylabel, o3 = i3.start, n3 = i3.end;
          return X3(e3(e3({}, t5), {}, { color: a3, seriesName: s3, ylabel: r3, start: o3, end: n3 }));
        }(t4);
      } } };
    } }, { key: "brush", value: function(t4) {
      return x2.extend(t4, { chart: { toolbar: { autoSelected: "selection", show: false }, zoom: { enabled: false } }, dataLabels: { enabled: false }, stroke: { width: 1 }, tooltip: { enabled: false }, xaxis: { tooltip: { enabled: false } } });
    } }, { key: "stacked100", value: function(t4) {
      t4.dataLabels = t4.dataLabels || {}, t4.dataLabels.formatter = t4.dataLabels.formatter || void 0;
      var e4 = t4.dataLabels.formatter;
      return t4.yaxis.forEach(function(e6, i3) {
        t4.yaxis[i3].min = 0, t4.yaxis[i3].max = 100;
      }), "bar" === t4.chart.type && (t4.dataLabels.formatter = e4 || function(t5) {
        return "number" == typeof t5 && t5 ? t5.toFixed(0) + "%" : t5;
      }), t4;
    } }, { key: "stackedBars", value: function() {
      var t4 = this.bar();
      return e3(e3({}, t4), {}, { plotOptions: e3(e3({}, t4.plotOptions), {}, { bar: e3(e3({}, t4.plotOptions.bar), {}, { borderRadiusApplication: "end", borderRadiusWhenStacked: "last" }) }) });
    } }, { key: "convertCatToNumeric", value: function(t4) {
      return t4.xaxis.convertedCatToNumeric = true, t4;
    } }, { key: "convertCatToNumericXaxis", value: function(t4, e4, i3) {
      t4.xaxis.type = "numeric", t4.xaxis.labels = t4.xaxis.labels || {}, t4.xaxis.labels.formatter = t4.xaxis.labels.formatter || function(t5) {
        return x2.isNumber(t5) ? Math.floor(t5) : t5;
      };
      var a3 = t4.xaxis.labels.formatter, s3 = t4.xaxis.categories && t4.xaxis.categories.length ? t4.xaxis.categories : t4.labels;
      return i3 && i3.length && (s3 = i3.map(function(t5) {
        return Array.isArray(t5) ? t5 : String(t5);
      })), s3 && s3.length && (t4.xaxis.labels.formatter = function(t5) {
        return x2.isNumber(t5) ? a3(s3[Math.floor(t5) - 1]) : a3(t5);
      }), t4.xaxis.categories = [], t4.labels = [], t4.xaxis.tickAmount = t4.xaxis.tickAmount || "dataPoints", t4;
    } }, { key: "bubble", value: function() {
      return { dataLabels: { style: { colors: ["#fff"] } }, tooltip: { shared: false, intersect: true }, xaxis: { crosshairs: { width: 0 } }, fill: { type: "solid", gradient: { shade: "light", inverse: true, shadeIntensity: 0.55, opacityFrom: 0.4, opacityTo: 0.8 } } };
    } }, { key: "scatter", value: function() {
      return { dataLabels: { enabled: false }, tooltip: { shared: false, intersect: true }, markers: { size: 6, strokeWidth: 1, hover: { sizeOffset: 2 } } };
    } }, { key: "heatmap", value: function() {
      return { chart: { stacked: false }, fill: { opacity: 1 }, dataLabels: { style: { colors: ["#fff"] } }, stroke: { colors: ["#fff"] }, tooltip: { followCursor: true, marker: { show: false }, x: { show: false } }, legend: { position: "top", markers: { shape: "square", size: 10, offsetY: 2 } }, grid: { padding: { right: 20 } } };
    } }, { key: "treemap", value: function() {
      return { chart: { zoom: { enabled: false } }, dataLabels: { style: { fontSize: 14, fontWeight: 600, colors: ["#fff"] } }, stroke: { show: true, width: 2, colors: ["#fff"] }, legend: { show: false }, fill: { gradient: { stops: [0, 100] } }, tooltip: { followCursor: true, x: { show: false } }, grid: { padding: { left: 0, right: 0 } }, xaxis: { crosshairs: { show: false }, tooltip: { enabled: false } } };
    } }, { key: "pie", value: function() {
      return { chart: { toolbar: { show: false } }, plotOptions: { pie: { donut: { labels: { show: false } } } }, dataLabels: { formatter: function(t4) {
        return t4.toFixed(1) + "%";
      }, style: { colors: ["#fff"] }, background: { enabled: false }, dropShadow: { enabled: true } }, stroke: { colors: ["#fff"] }, fill: { opacity: 1, gradient: { shade: "light", stops: [0, 100] } }, tooltip: { theme: "dark", fillSeriesColor: true }, legend: { position: "right" } };
    } }, { key: "donut", value: function() {
      return { chart: { toolbar: { show: false } }, dataLabels: { formatter: function(t4) {
        return t4.toFixed(1) + "%";
      }, style: { colors: ["#fff"] }, background: { enabled: false }, dropShadow: { enabled: true } }, stroke: { colors: ["#fff"] }, fill: { opacity: 1, gradient: { shade: "light", shadeIntensity: 0.35, stops: [80, 100], opacityFrom: 1, opacityTo: 1 } }, tooltip: { theme: "dark", fillSeriesColor: true }, legend: { position: "right" } };
    } }, { key: "polarArea", value: function() {
      return { chart: { toolbar: { show: false } }, dataLabels: { formatter: function(t4) {
        return t4.toFixed(1) + "%";
      }, enabled: false }, stroke: { show: true, width: 2 }, fill: { opacity: 0.7 }, tooltip: { theme: "dark", fillSeriesColor: true }, legend: { position: "right" } };
    } }, { key: "radar", value: function() {
      return this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels.offsetY ? this.opts.yaxis[0].labels.offsetY : 6, { dataLabels: { enabled: false, style: { fontSize: "11px" } }, stroke: { width: 2 }, markers: { size: 3, strokeWidth: 1, strokeOpacity: 1 }, fill: { opacity: 0.2 }, tooltip: { shared: false, intersect: true, followCursor: true }, grid: { show: false }, xaxis: { labels: { formatter: function(t4) {
        return t4;
      }, style: { colors: ["#a8a8a8"], fontSize: "11px" } }, tooltip: { enabled: false }, crosshairs: { show: false } } };
    } }, { key: "radialBar", value: function() {
      return { chart: { animations: { dynamicAnimation: { enabled: true, speed: 800 } }, toolbar: { show: false } }, fill: { gradient: { shade: "dark", shadeIntensity: 0.4, inverseColors: false, type: "diagonal2", opacityFrom: 1, opacityTo: 1, stops: [70, 98, 100] } }, legend: { show: false, position: "right" }, tooltip: { enabled: false, fillSeriesColor: true } };
    } }, { key: "_getBoxTooltip", value: function(t4, e4, i3, a3, s3) {
      var r3 = t4.globals.seriesCandleO[e4][i3], o3 = t4.globals.seriesCandleH[e4][i3], n3 = t4.globals.seriesCandleM[e4][i3], l3 = t4.globals.seriesCandleL[e4][i3], h3 = t4.globals.seriesCandleC[e4][i3];
      return t4.config.series[e4].type && t4.config.series[e4].type !== s3 ? '<div class="apexcharts-custom-tooltip">\n          '.concat(t4.config.series[e4].name ? t4.config.series[e4].name : "series-" + (e4 + 1), ": <strong>").concat(t4.globals.series[e4][i3], "</strong>\n        </div>") : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(t4.config.chart.type, '">') + "<div>".concat(a3[0], ': <span class="value">') + r3 + "</span></div>" + "<div>".concat(a3[1], ': <span class="value">') + o3 + "</span></div>" + (n3 ? "<div>".concat(a3[2], ': <span class="value">') + n3 + "</span></div>" : "") + "<div>".concat(a3[3], ': <span class="value">') + l3 + "</span></div>" + "<div>".concat(a3[4], ': <span class="value">') + h3 + "</span></div></div>";
    } }]), t3;
  }(), Y3 = function() {
    function t3(e4) {
      a2(this, t3), this.opts = e4;
    }
    return r2(t3, [{ key: "init", value: function(t4) {
      var e4 = t4.responsiveOverride, a3 = this.opts, s3 = new I2(), r3 = new E2(a3);
      this.chartType = a3.chart.type, a3 = this.extendYAxis(a3), a3 = this.extendAnnotations(a3);
      var o3 = s3.init(), n3 = {};
      if (a3 && "object" === i2(a3)) {
        var l3, h3, c3, d3, g3, u3, p3, f3, b3 = {};
        b3 = -1 !== ["line", "area", "bar", "candlestick", "boxPlot", "rangeBar", "rangeArea", "bubble", "scatter", "heatmap", "treemap", "pie", "polarArea", "donut", "radar", "radialBar"].indexOf(a3.chart.type) ? r3[a3.chart.type]() : r3.line(), null !== (l3 = a3.plotOptions) && void 0 !== l3 && null !== (h3 = l3.bar) && void 0 !== h3 && h3.isFunnel && (b3 = r3.funnel()), a3.chart.stacked && "bar" === a3.chart.type && (b3 = r3.stackedBars()), null !== (c3 = a3.chart.brush) && void 0 !== c3 && c3.enabled && (b3 = r3.brush(b3)), a3.chart.stacked && "100%" === a3.chart.stackType && (a3 = r3.stacked100(a3)), null !== (d3 = a3.plotOptions) && void 0 !== d3 && null !== (g3 = d3.bar) && void 0 !== g3 && g3.isDumbbell && (a3 = r3.dumbbell(a3)), this.checkForDarkTheme(window.Apex), this.checkForDarkTheme(a3), a3.xaxis = a3.xaxis || window.Apex.xaxis || {}, e4 || (a3.xaxis.convertedCatToNumeric = false), (null !== (u3 = (a3 = this.checkForCatToNumericXAxis(this.chartType, b3, a3)).chart.sparkline) && void 0 !== u3 && u3.enabled || null !== (p3 = window.Apex.chart) && void 0 !== p3 && null !== (f3 = p3.sparkline) && void 0 !== f3 && f3.enabled) && (b3 = r3.sparkline(b3)), n3 = x2.extend(o3, b3);
      }
      var v3 = x2.extend(n3, window.Apex);
      return o3 = x2.extend(v3, a3), o3 = this.handleUserInputErrors(o3);
    } }, { key: "checkForCatToNumericXAxis", value: function(t4, e4, i3) {
      var a3, s3, r3 = new E2(i3), o3 = ("bar" === t4 || "boxPlot" === t4) && (null === (a3 = i3.plotOptions) || void 0 === a3 || null === (s3 = a3.bar) || void 0 === s3 ? void 0 : s3.horizontal), n3 = "pie" === t4 || "polarArea" === t4 || "donut" === t4 || "radar" === t4 || "radialBar" === t4 || "heatmap" === t4, l3 = "datetime" !== i3.xaxis.type && "numeric" !== i3.xaxis.type, h3 = i3.xaxis.tickPlacement ? i3.xaxis.tickPlacement : e4.xaxis && e4.xaxis.tickPlacement;
      return o3 || n3 || !l3 || "between" === h3 || (i3 = r3.convertCatToNumeric(i3)), i3;
    } }, { key: "extendYAxis", value: function(t4, e4) {
      var i3 = new I2();
      (void 0 === t4.yaxis || !t4.yaxis || Array.isArray(t4.yaxis) && 0 === t4.yaxis.length) && (t4.yaxis = {}), t4.yaxis.constructor !== Array && window.Apex.yaxis && window.Apex.yaxis.constructor !== Array && (t4.yaxis = x2.extend(t4.yaxis, window.Apex.yaxis)), t4.yaxis.constructor !== Array ? t4.yaxis = [x2.extend(i3.yAxis, t4.yaxis)] : t4.yaxis = x2.extendArray(t4.yaxis, i3.yAxis);
      var a3 = false;
      t4.yaxis.forEach(function(t5) {
        t5.logarithmic && (a3 = true);
      });
      var s3 = t4.series;
      return e4 && !s3 && (s3 = e4.config.series), a3 && s3.length !== t4.yaxis.length && s3.length && (t4.yaxis = s3.map(function(e6, a4) {
        if (e6.name || (s3[a4].name = "series-".concat(a4 + 1)), t4.yaxis[a4])
          return t4.yaxis[a4].seriesName = s3[a4].name, t4.yaxis[a4];
        var r3 = x2.extend(i3.yAxis, t4.yaxis[0]);
        return r3.show = false, r3;
      })), a3 && s3.length > 1 && s3.length !== t4.yaxis.length && console.warn("A multi-series logarithmic chart should have equal number of series and y-axes"), t4;
    } }, { key: "extendAnnotations", value: function(t4) {
      return void 0 === t4.annotations && (t4.annotations = {}, t4.annotations.yaxis = [], t4.annotations.xaxis = [], t4.annotations.points = []), t4 = this.extendYAxisAnnotations(t4), t4 = this.extendXAxisAnnotations(t4), t4 = this.extendPointAnnotations(t4);
    } }, { key: "extendYAxisAnnotations", value: function(t4) {
      var e4 = new I2();
      return t4.annotations.yaxis = x2.extendArray(void 0 !== t4.annotations.yaxis ? t4.annotations.yaxis : [], e4.yAxisAnnotation), t4;
    } }, { key: "extendXAxisAnnotations", value: function(t4) {
      var e4 = new I2();
      return t4.annotations.xaxis = x2.extendArray(void 0 !== t4.annotations.xaxis ? t4.annotations.xaxis : [], e4.xAxisAnnotation), t4;
    } }, { key: "extendPointAnnotations", value: function(t4) {
      var e4 = new I2();
      return t4.annotations.points = x2.extendArray(void 0 !== t4.annotations.points ? t4.annotations.points : [], e4.pointAnnotation), t4;
    } }, { key: "checkForDarkTheme", value: function(t4) {
      t4.theme && "dark" === t4.theme.mode && (t4.tooltip || (t4.tooltip = {}), "light" !== t4.tooltip.theme && (t4.tooltip.theme = "dark"), t4.chart.foreColor || (t4.chart.foreColor = "#f6f7f8"), t4.chart.background || (t4.chart.background = "#424242"), t4.theme.palette || (t4.theme.palette = "palette4"));
    } }, { key: "handleUserInputErrors", value: function(t4) {
      var e4 = t4;
      if (e4.tooltip.shared && e4.tooltip.intersect)
        throw new Error("tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.");
      if ("bar" === e4.chart.type && e4.plotOptions.bar.horizontal) {
        if (e4.yaxis.length > 1)
          throw new Error("Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false");
        e4.yaxis[0].reversed && (e4.yaxis[0].opposite = true), e4.xaxis.tooltip.enabled = false, e4.yaxis[0].tooltip.enabled = false, e4.chart.zoom.enabled = false;
      }
      return "bar" !== e4.chart.type && "rangeBar" !== e4.chart.type || e4.tooltip.shared && "barWidth" === e4.xaxis.crosshairs.width && e4.series.length > 1 && (e4.xaxis.crosshairs.width = "tickWidth"), "candlestick" !== e4.chart.type && "boxPlot" !== e4.chart.type || e4.yaxis[0].reversed && (console.warn("Reversed y-axis in ".concat(e4.chart.type, " chart is not supported.")), e4.yaxis[0].reversed = false), e4;
    } }]), t3;
  }(), F2 = function() {
    function t3() {
      a2(this, t3);
    }
    return r2(t3, [{ key: "initGlobalVars", value: function(t4) {
      t4.series = [], t4.seriesCandleO = [], t4.seriesCandleH = [], t4.seriesCandleM = [], t4.seriesCandleL = [], t4.seriesCandleC = [], t4.seriesRangeStart = [], t4.seriesRangeEnd = [], t4.seriesRange = [], t4.seriesPercent = [], t4.seriesGoals = [], t4.seriesX = [], t4.seriesZ = [], t4.seriesNames = [], t4.seriesTotals = [], t4.seriesLog = [], t4.seriesColors = [], t4.stackedSeriesTotals = [], t4.seriesXvalues = [], t4.seriesYvalues = [], t4.labels = [], t4.hasXaxisGroups = false, t4.groups = [], t4.hasSeriesGroups = false, t4.seriesGroups = [], t4.categoryLabels = [], t4.timescaleLabels = [], t4.noLabelsProvided = false, t4.resizeTimer = null, t4.selectionResizeTimer = null, t4.delayedElements = [], t4.pointsArray = [], t4.dataLabelsRects = [], t4.isXNumeric = false, t4.skipLastTimelinelabel = false, t4.skipFirstTimelinelabel = false, t4.isDataXYZ = false, t4.isMultiLineX = false, t4.isMultipleYAxis = false, t4.maxY = -Number.MAX_VALUE, t4.minY = Number.MIN_VALUE, t4.minYArr = [], t4.maxYArr = [], t4.maxX = -Number.MAX_VALUE, t4.minX = Number.MAX_VALUE, t4.initialMaxX = -Number.MAX_VALUE, t4.initialMinX = Number.MAX_VALUE, t4.maxDate = 0, t4.minDate = Number.MAX_VALUE, t4.minZ = Number.MAX_VALUE, t4.maxZ = -Number.MAX_VALUE, t4.minXDiff = Number.MAX_VALUE, t4.yAxisScale = [], t4.xAxisScale = null, t4.xAxisTicksPositions = [], t4.yLabelsCoords = [], t4.yTitleCoords = [], t4.barPadForNumericAxis = 0, t4.padHorizontal = 0, t4.xRange = 0, t4.yRange = [], t4.zRange = 0, t4.dataPoints = 0, t4.xTickAmount = 0, t4.multiAxisTickAmount = 0;
    } }, { key: "globalVars", value: function(t4) {
      return { chartID: null, cuid: null, events: { beforeMount: [], mounted: [], updated: [], clicked: [], selection: [], dataPointSelection: [], zoomed: [], scrolled: [] }, colors: [], clientX: null, clientY: null, fill: { colors: [] }, stroke: { colors: [] }, dataLabels: { style: { colors: [] } }, radarPolygons: { fill: { colors: [] } }, markers: { colors: [], size: t4.markers.size, largestSize: 0 }, animationEnded: false, isTouchDevice: "ontouchstart" in window || navigator.msMaxTouchPoints, isDirty: false, isExecCalled: false, initialConfig: null, initialSeries: [], lastXAxis: [], lastYAxis: [], columnSeries: null, labels: [], timescaleLabels: [], noLabelsProvided: false, allSeriesCollapsed: false, collapsedSeries: [], collapsedSeriesIndices: [], ancillaryCollapsedSeries: [], ancillaryCollapsedSeriesIndices: [], risingSeries: [], dataFormatXNumeric: false, capturedSeriesIndex: -1, capturedDataPointIndex: -1, selectedDataPoints: [], goldenPadding: 35, invalidLogScale: false, ignoreYAxisIndexes: [], maxValsInArrayIndex: 0, radialSize: 0, selection: void 0, zoomEnabled: "zoom" === t4.chart.toolbar.autoSelected && t4.chart.toolbar.tools.zoom && t4.chart.zoom.enabled, panEnabled: "pan" === t4.chart.toolbar.autoSelected && t4.chart.toolbar.tools.pan, selectionEnabled: "selection" === t4.chart.toolbar.autoSelected && t4.chart.toolbar.tools.selection, yaxis: null, mousedown: false, lastClientPosition: {}, visibleXRange: void 0, yValueDecimal: 0, total: 0, SVGNS: "http://www.w3.org/2000/svg", svgWidth: 0, svgHeight: 0, noData: false, locale: {}, dom: {}, memory: { methodsToExec: [] }, shouldAnimate: true, skipLastTimelinelabel: false, skipFirstTimelinelabel: false, delayedElements: [], axisCharts: true, isDataXYZ: false, resized: false, resizeTimer: null, comboCharts: false, dataChanged: false, previousPaths: [], allSeriesHasEqualX: true, pointsArray: [], dataLabelsRects: [], lastDrawnDataLabelsIndexes: [], hasNullValues: false, easing: null, zoomed: false, gridWidth: 0, gridHeight: 0, rotateXLabels: false, defaultLabels: false, xLabelFormatter: void 0, yLabelFormatters: [], xaxisTooltipFormatter: void 0, ttKeyFormatter: void 0, ttVal: void 0, ttZFormatter: void 0, LINE_HEIGHT_RATIO: 1.618, xAxisLabelsHeight: 0, xAxisGroupLabelsHeight: 0, xAxisLabelsWidth: 0, yAxisLabelsWidth: 0, scaleX: 1, scaleY: 1, translateX: 0, translateY: 0, translateYAxisX: [], yAxisWidths: [], translateXAxisY: 0, translateXAxisX: 0, tooltip: null, niceScaleAllowedMagMsd: [[1, 1, 2, 5, 5, 5, 10, 10, 10, 10, 10], [1, 1, 2, 5, 5, 5, 10, 10, 10, 10, 10]], niceScaleDefaultTicks: [1, 2, 4, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 12, 12, 12, 12, 12, 12, 12, 12, 12, 24], seriesYAxisMap: [], seriesYAxisReverseMap: [] };
    } }, { key: "init", value: function(t4) {
      var e4 = this.globalVars(t4);
      return this.initGlobalVars(e4), e4.initialConfig = x2.extend({}, t4), e4.initialSeries = x2.clone(t4.series), e4.lastXAxis = x2.clone(e4.initialConfig.xaxis), e4.lastYAxis = x2.clone(e4.initialConfig.yaxis), e4;
    } }]), t3;
  }(), R2 = function() {
    function t3(e4) {
      a2(this, t3), this.opts = e4;
    }
    return r2(t3, [{ key: "init", value: function() {
      var t4 = new Y3(this.opts).init({ responsiveOverride: false });
      return { config: t4, globals: new F2().init(t4) };
    } }]), t3;
  }(), H2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.opts = null, this.seriesIndex = 0;
    }
    return r2(t3, [{ key: "clippedImgArea", value: function(t4) {
      var e4 = this.w, i3 = e4.config, a3 = parseInt(e4.globals.gridWidth, 10), s3 = parseInt(e4.globals.gridHeight, 10), r3 = a3 > s3 ? a3 : s3, o3 = t4.image, n3 = 0, l3 = 0;
      void 0 === t4.width && void 0 === t4.height ? void 0 !== i3.fill.image.width && void 0 !== i3.fill.image.height ? (n3 = i3.fill.image.width + 1, l3 = i3.fill.image.height) : (n3 = r3 + 1, l3 = r3) : (n3 = t4.width, l3 = t4.height);
      var h3 = document.createElementNS(e4.globals.SVGNS, "pattern");
      m2.setAttrs(h3, { id: t4.patternID, patternUnits: t4.patternUnits ? t4.patternUnits : "userSpaceOnUse", width: n3 + "px", height: l3 + "px" });
      var c3 = document.createElementNS(e4.globals.SVGNS, "image");
      h3.appendChild(c3), c3.setAttributeNS(window.SVG.xlink, "href", o3), m2.setAttrs(c3, { x: 0, y: 0, preserveAspectRatio: "none", width: n3 + "px", height: l3 + "px" }), c3.style.opacity = t4.opacity, e4.globals.dom.elDefs.node.appendChild(h3);
    } }, { key: "getSeriesIndex", value: function(t4) {
      var e4 = this.w, i3 = e4.config.chart.type;
      return ("bar" === i3 || "rangeBar" === i3) && e4.config.plotOptions.bar.distributed || "heatmap" === i3 || "treemap" === i3 ? this.seriesIndex = t4.seriesNumber : this.seriesIndex = t4.seriesNumber % e4.globals.series.length, this.seriesIndex;
    } }, { key: "fillPath", value: function(t4) {
      var e4 = this.w;
      this.opts = t4;
      var i3, a3, s3, r3 = this.w.config;
      this.seriesIndex = this.getSeriesIndex(t4);
      var o3 = this.getFillColors()[this.seriesIndex];
      void 0 !== e4.globals.seriesColors[this.seriesIndex] && (o3 = e4.globals.seriesColors[this.seriesIndex]), "function" == typeof o3 && (o3 = o3({ seriesIndex: this.seriesIndex, dataPointIndex: t4.dataPointIndex, value: t4.value, w: e4 }));
      var n3 = t4.fillType ? t4.fillType : this.getFillType(this.seriesIndex), l3 = Array.isArray(r3.fill.opacity) ? r3.fill.opacity[this.seriesIndex] : r3.fill.opacity;
      t4.color && (o3 = t4.color), o3 || (o3 = "#fff", console.warn("undefined color - ApexCharts"));
      var h3 = o3;
      if (-1 === o3.indexOf("rgb") ? o3.length < 9 && (h3 = x2.hexToRgba(o3, l3)) : o3.indexOf("rgba") > -1 && (l3 = x2.getOpacityFromRGBA(o3)), t4.opacity && (l3 = t4.opacity), "pattern" === n3 && (a3 = this.handlePatternFill({ fillConfig: t4.fillConfig, patternFill: a3, fillColor: o3, fillOpacity: l3, defaultColor: h3 })), "gradient" === n3 && (s3 = this.handleGradientFill({ fillConfig: t4.fillConfig, fillColor: o3, fillOpacity: l3, i: this.seriesIndex })), "image" === n3) {
        var c3 = r3.fill.image.src, d3 = t4.patternID ? t4.patternID : "";
        this.clippedImgArea({ opacity: l3, image: Array.isArray(c3) ? t4.seriesNumber < c3.length ? c3[t4.seriesNumber] : c3[0] : c3, width: t4.width ? t4.width : void 0, height: t4.height ? t4.height : void 0, patternUnits: t4.patternUnits, patternID: "pattern".concat(e4.globals.cuid).concat(t4.seriesNumber + 1).concat(d3) }), i3 = "url(#pattern".concat(e4.globals.cuid).concat(t4.seriesNumber + 1).concat(d3, ")");
      } else
        i3 = "gradient" === n3 ? s3 : "pattern" === n3 ? a3 : h3;
      return t4.solid && (i3 = h3), i3;
    } }, { key: "getFillType", value: function(t4) {
      var e4 = this.w;
      return Array.isArray(e4.config.fill.type) ? e4.config.fill.type[t4] : e4.config.fill.type;
    } }, { key: "getFillColors", value: function() {
      var t4 = this.w, e4 = t4.config, i3 = this.opts, a3 = [];
      return t4.globals.comboCharts ? "line" === t4.config.series[this.seriesIndex].type ? Array.isArray(t4.globals.stroke.colors) ? a3 = t4.globals.stroke.colors : a3.push(t4.globals.stroke.colors) : Array.isArray(t4.globals.fill.colors) ? a3 = t4.globals.fill.colors : a3.push(t4.globals.fill.colors) : "line" === e4.chart.type ? Array.isArray(t4.globals.stroke.colors) ? a3 = t4.globals.stroke.colors : a3.push(t4.globals.stroke.colors) : Array.isArray(t4.globals.fill.colors) ? a3 = t4.globals.fill.colors : a3.push(t4.globals.fill.colors), void 0 !== i3.fillColors && (a3 = [], Array.isArray(i3.fillColors) ? a3 = i3.fillColors.slice() : a3.push(i3.fillColors)), a3;
    } }, { key: "handlePatternFill", value: function(t4) {
      var e4 = t4.fillConfig, i3 = t4.patternFill, a3 = t4.fillColor, s3 = t4.fillOpacity, r3 = t4.defaultColor, o3 = this.w.config.fill;
      e4 && (o3 = e4);
      var n3 = this.opts, l3 = new m2(this.ctx), h3 = Array.isArray(o3.pattern.strokeWidth) ? o3.pattern.strokeWidth[this.seriesIndex] : o3.pattern.strokeWidth, c3 = a3;
      Array.isArray(o3.pattern.style) ? i3 = void 0 !== o3.pattern.style[n3.seriesNumber] ? l3.drawPattern(o3.pattern.style[n3.seriesNumber], o3.pattern.width, o3.pattern.height, c3, h3, s3) : r3 : i3 = l3.drawPattern(o3.pattern.style, o3.pattern.width, o3.pattern.height, c3, h3, s3);
      return i3;
    } }, { key: "handleGradientFill", value: function(t4) {
      var i3 = t4.fillColor, a3 = t4.fillOpacity, s3 = t4.fillConfig, r3 = t4.i, o3 = this.w.config.fill;
      s3 && (o3 = e3(e3({}, o3), s3));
      var n3, l3 = this.opts, h3 = new m2(this.ctx), c3 = new x2(), d3 = o3.gradient.type, g3 = i3, u3 = void 0 === o3.gradient.opacityFrom ? a3 : Array.isArray(o3.gradient.opacityFrom) ? o3.gradient.opacityFrom[r3] : o3.gradient.opacityFrom;
      g3.indexOf("rgba") > -1 && (u3 = x2.getOpacityFromRGBA(g3));
      var p3 = void 0 === o3.gradient.opacityTo ? a3 : Array.isArray(o3.gradient.opacityTo) ? o3.gradient.opacityTo[r3] : o3.gradient.opacityTo;
      if (void 0 === o3.gradient.gradientToColors || 0 === o3.gradient.gradientToColors.length)
        n3 = "dark" === o3.gradient.shade ? c3.shadeColor(-1 * parseFloat(o3.gradient.shadeIntensity), i3.indexOf("rgb") > -1 ? x2.rgb2hex(i3) : i3) : c3.shadeColor(parseFloat(o3.gradient.shadeIntensity), i3.indexOf("rgb") > -1 ? x2.rgb2hex(i3) : i3);
      else if (o3.gradient.gradientToColors[l3.seriesNumber]) {
        var f3 = o3.gradient.gradientToColors[l3.seriesNumber];
        n3 = f3, f3.indexOf("rgba") > -1 && (p3 = x2.getOpacityFromRGBA(f3));
      } else
        n3 = i3;
      if (o3.gradient.gradientFrom && (g3 = o3.gradient.gradientFrom), o3.gradient.gradientTo && (n3 = o3.gradient.gradientTo), o3.gradient.inverseColors) {
        var b3 = g3;
        g3 = n3, n3 = b3;
      }
      return g3.indexOf("rgb") > -1 && (g3 = x2.rgb2hex(g3)), n3.indexOf("rgb") > -1 && (n3 = x2.rgb2hex(n3)), h3.drawGradient(d3, g3, n3, u3, p3, l3.size, o3.gradient.stops, o3.gradient.colorStops, r3);
    } }]), t3;
  }(), D2 = function() {
    function t3(e4, i3) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "setGlobalMarkerSize", value: function() {
      var t4 = this.w;
      if (t4.globals.markers.size = Array.isArray(t4.config.markers.size) ? t4.config.markers.size : [t4.config.markers.size], t4.globals.markers.size.length > 0) {
        if (t4.globals.markers.size.length < t4.globals.series.length + 1)
          for (var e4 = 0; e4 <= t4.globals.series.length; e4++)
            void 0 === t4.globals.markers.size[e4] && t4.globals.markers.size.push(t4.globals.markers.size[0]);
      } else
        t4.globals.markers.size = t4.config.series.map(function(e6) {
          return t4.config.markers.size;
        });
    } }, { key: "plotChartMarkers", value: function(t4, e4, i3, a3) {
      var s3, r3 = arguments.length > 4 && void 0 !== arguments[4] && arguments[4], o3 = this.w, n3 = e4, l3 = t4, h3 = null, c3 = new m2(this.ctx), d3 = o3.config.markers.discrete && o3.config.markers.discrete.length;
      if ((o3.globals.markers.size[e4] > 0 || r3 || d3) && (h3 = c3.group({ class: r3 || d3 ? "" : "apexcharts-series-markers" })).attr("clip-path", "url(#gridRectMarkerMask".concat(o3.globals.cuid, ")")), Array.isArray(l3.x))
        for (var g3 = 0; g3 < l3.x.length; g3++) {
          var u3 = i3;
          1 === i3 && 0 === g3 && (u3 = 0), 1 === i3 && 1 === g3 && (u3 = 1);
          var p3 = "apexcharts-marker";
          if ("line" !== o3.config.chart.type && "area" !== o3.config.chart.type || o3.globals.comboCharts || o3.config.tooltip.intersect || (p3 += " no-pointer-events"), (Array.isArray(o3.config.markers.size) ? o3.globals.markers.size[e4] > 0 : o3.config.markers.size > 0) || r3 || d3) {
            x2.isNumber(l3.y[g3]) ? p3 += " w".concat(x2.randomId()) : p3 = "apexcharts-nullpoint";
            var f3 = this.getMarkerConfig({ cssClass: p3, seriesIndex: e4, dataPointIndex: u3 });
            o3.config.series[n3].data[u3] && (o3.config.series[n3].data[u3].fillColor && (f3.pointFillColor = o3.config.series[n3].data[u3].fillColor), o3.config.series[n3].data[u3].strokeColor && (f3.pointStrokeColor = o3.config.series[n3].data[u3].strokeColor)), a3 && (f3.pSize = a3), (l3.x[g3] < 0 || l3.x[g3] > o3.globals.gridWidth || l3.y[g3] < -o3.globals.markers.largestSize || l3.y[g3] > o3.globals.gridHeight + o3.globals.markers.largestSize) && (f3.pSize = 0), (s3 = c3.drawMarker(l3.x[g3], l3.y[g3], f3)).attr("rel", u3), s3.attr("j", u3), s3.attr("index", e4), s3.node.setAttribute("default-marker-size", f3.pSize), new v2(this.ctx).setSelectionFilter(s3, e4, u3), this.addEvents(s3), h3 && h3.add(s3);
          } else
            void 0 === o3.globals.pointsArray[e4] && (o3.globals.pointsArray[e4] = []), o3.globals.pointsArray[e4].push([l3.x[g3], l3.y[g3]]);
        }
      return h3;
    } }, { key: "getMarkerConfig", value: function(t4) {
      var e4 = t4.cssClass, i3 = t4.seriesIndex, a3 = t4.dataPointIndex, s3 = void 0 === a3 ? null : a3, r3 = t4.finishRadius, o3 = void 0 === r3 ? null : r3, n3 = this.w, l3 = this.getMarkerStyle(i3), h3 = n3.globals.markers.size[i3], c3 = n3.config.markers;
      return null !== s3 && c3.discrete.length && c3.discrete.map(function(t5) {
        t5.seriesIndex === i3 && t5.dataPointIndex === s3 && (l3.pointStrokeColor = t5.strokeColor, l3.pointFillColor = t5.fillColor, h3 = t5.size, l3.pointShape = t5.shape);
      }), { pSize: null === o3 ? h3 : o3, pRadius: c3.radius, width: Array.isArray(c3.width) ? c3.width[i3] : c3.width, height: Array.isArray(c3.height) ? c3.height[i3] : c3.height, pointStrokeWidth: Array.isArray(c3.strokeWidth) ? c3.strokeWidth[i3] : c3.strokeWidth, pointStrokeColor: l3.pointStrokeColor, pointFillColor: l3.pointFillColor, shape: l3.pointShape || (Array.isArray(c3.shape) ? c3.shape[i3] : c3.shape), class: e4, pointStrokeOpacity: Array.isArray(c3.strokeOpacity) ? c3.strokeOpacity[i3] : c3.strokeOpacity, pointStrokeDashArray: Array.isArray(c3.strokeDashArray) ? c3.strokeDashArray[i3] : c3.strokeDashArray, pointFillOpacity: Array.isArray(c3.fillOpacity) ? c3.fillOpacity[i3] : c3.fillOpacity, seriesIndex: i3 };
    } }, { key: "addEvents", value: function(t4) {
      var e4 = this.w, i3 = new m2(this.ctx);
      t4.node.addEventListener("mouseenter", i3.pathMouseEnter.bind(this.ctx, t4)), t4.node.addEventListener("mouseleave", i3.pathMouseLeave.bind(this.ctx, t4)), t4.node.addEventListener("mousedown", i3.pathMouseDown.bind(this.ctx, t4)), t4.node.addEventListener("click", e4.config.markers.onClick), t4.node.addEventListener("dblclick", e4.config.markers.onDblClick), t4.node.addEventListener("touchstart", i3.pathMouseDown.bind(this.ctx, t4), { passive: true });
    } }, { key: "getMarkerStyle", value: function(t4) {
      var e4 = this.w, i3 = e4.globals.markers.colors, a3 = e4.config.markers.strokeColor || e4.config.markers.strokeColors;
      return { pointStrokeColor: Array.isArray(a3) ? a3[t4] : a3, pointFillColor: Array.isArray(i3) ? i3[t4] : i3 };
    } }]), t3;
  }(), O2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;
    }
    return r2(t3, [{ key: "draw", value: function(t4, e4, i3) {
      var a3 = this.w, s3 = new m2(this.ctx), r3 = i3.realIndex, o3 = i3.pointsPos, n3 = i3.zRatio, l3 = i3.elParent, h3 = s3.group({ class: "apexcharts-series-markers apexcharts-series-".concat(a3.config.chart.type) });
      if (h3.attr("clip-path", "url(#gridRectMarkerMask".concat(a3.globals.cuid, ")")), Array.isArray(o3.x))
        for (var c3 = 0; c3 < o3.x.length; c3++) {
          var d3 = e4 + 1, g3 = true;
          0 === e4 && 0 === c3 && (d3 = 0), 0 === e4 && 1 === c3 && (d3 = 1);
          var u3 = 0, p3 = a3.globals.markers.size[r3];
          if (n3 !== 1 / 0) {
            var f3 = a3.config.plotOptions.bubble;
            p3 = a3.globals.seriesZ[r3][d3], f3.zScaling && (p3 /= n3), f3.minBubbleRadius && p3 < f3.minBubbleRadius && (p3 = f3.minBubbleRadius), f3.maxBubbleRadius && p3 > f3.maxBubbleRadius && (p3 = f3.maxBubbleRadius);
          }
          a3.config.chart.animations.enabled || (u3 = p3);
          var x3 = o3.x[c3], b3 = o3.y[c3];
          if (u3 = u3 || 0, null !== b3 && void 0 !== a3.globals.series[r3][d3] || (g3 = false), g3) {
            var v3 = this.drawPoint(x3, b3, u3, p3, r3, d3, e4);
            h3.add(v3);
          }
          l3.add(h3);
        }
    } }, { key: "drawPoint", value: function(t4, e4, i3, a3, s3, r3, o3) {
      var n3 = this.w, l3 = s3, h3 = new b2(this.ctx), c3 = new v2(this.ctx), d3 = new H2(this.ctx), g3 = new D2(this.ctx), u3 = new m2(this.ctx), p3 = g3.getMarkerConfig({ cssClass: "apexcharts-marker", seriesIndex: l3, dataPointIndex: r3, finishRadius: "bubble" === n3.config.chart.type || n3.globals.comboCharts && n3.config.series[s3] && "bubble" === n3.config.series[s3].type ? a3 : null });
      a3 = p3.pSize;
      var f3, x3 = d3.fillPath({ seriesNumber: s3, dataPointIndex: r3, color: p3.pointFillColor, patternUnits: "objectBoundingBox", value: n3.globals.series[s3][o3] });
      if ("circle" === p3.shape ? f3 = u3.drawCircle(i3) : "square" !== p3.shape && "rect" !== p3.shape || (f3 = u3.drawRect(0, 0, p3.width - p3.pointStrokeWidth / 2, p3.height - p3.pointStrokeWidth / 2, p3.pRadius)), n3.config.series[l3].data[r3] && n3.config.series[l3].data[r3].fillColor && (x3 = n3.config.series[l3].data[r3].fillColor), f3.attr({ x: t4 - p3.width / 2 - p3.pointStrokeWidth / 2, y: e4 - p3.height / 2 - p3.pointStrokeWidth / 2, cx: t4, cy: e4, fill: x3, "fill-opacity": p3.pointFillOpacity, stroke: p3.pointStrokeColor, r: a3, "stroke-width": p3.pointStrokeWidth, "stroke-dasharray": p3.pointStrokeDashArray, "stroke-opacity": p3.pointStrokeOpacity }), n3.config.chart.dropShadow.enabled) {
        var y3 = n3.config.chart.dropShadow;
        c3.dropShadow(f3, y3, s3);
      }
      if (!this.initialAnim || n3.globals.dataChanged || n3.globals.resized)
        n3.globals.animationEnded = true;
      else {
        var w3 = n3.config.chart.animations.speed;
        h3.animateMarker(f3, 0, "circle" === p3.shape ? a3 : { width: p3.width, height: p3.height }, w3, n3.globals.easing, function() {
          window.setTimeout(function() {
            h3.animationCompleted(f3);
          }, 100);
        });
      }
      if (n3.globals.dataChanged && "circle" === p3.shape)
        if (this.dynamicAnim) {
          var k3, A6, S3, C3, L3 = n3.config.chart.animations.dynamicAnimation.speed;
          null != (C3 = n3.globals.previousPaths[s3] && n3.globals.previousPaths[s3][o3]) && (k3 = C3.x, A6 = C3.y, S3 = void 0 !== C3.r ? C3.r : a3);
          for (var P3 = 0; P3 < n3.globals.collapsedSeries.length; P3++)
            n3.globals.collapsedSeries[P3].index === s3 && (L3 = 1, a3 = 0);
          0 === t4 && 0 === e4 && (a3 = 0), h3.animateCircle(f3, { cx: k3, cy: A6, r: S3 }, { cx: t4, cy: e4, r: a3 }, L3, n3.globals.easing);
        } else
          f3.attr({ r: a3 });
      return f3.attr({ rel: r3, j: r3, index: s3, "default-marker-size": a3 }), c3.setSelectionFilter(f3, s3, r3), g3.addEvents(f3), f3.node.classList.add("apexcharts-marker"), f3;
    } }, { key: "centerTextInBubble", value: function(t4) {
      var e4 = this.w;
      return { y: t4 += parseInt(e4.config.dataLabels.style.fontSize, 10) / 4 };
    } }]), t3;
  }(), N2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "dataLabelsCorrection", value: function(t4, e4, i3, a3, s3, r3, o3) {
      var n3 = this.w, l3 = false, h3 = new m2(this.ctx).getTextRects(i3, o3), c3 = h3.width, d3 = h3.height;
      e4 < 0 && (e4 = 0), e4 > n3.globals.gridHeight + d3 && (e4 = n3.globals.gridHeight + d3 / 2), void 0 === n3.globals.dataLabelsRects[a3] && (n3.globals.dataLabelsRects[a3] = []), n3.globals.dataLabelsRects[a3].push({ x: t4, y: e4, width: c3, height: d3 });
      var g3 = n3.globals.dataLabelsRects[a3].length - 2, u3 = void 0 !== n3.globals.lastDrawnDataLabelsIndexes[a3] ? n3.globals.lastDrawnDataLabelsIndexes[a3][n3.globals.lastDrawnDataLabelsIndexes[a3].length - 1] : 0;
      if (void 0 !== n3.globals.dataLabelsRects[a3][g3]) {
        var p3 = n3.globals.dataLabelsRects[a3][u3];
        (t4 > p3.x + p3.width || e4 > p3.y + p3.height || e4 + d3 < p3.y || t4 + c3 < p3.x) && (l3 = true);
      }
      return (0 === s3 || r3) && (l3 = true), { x: t4, y: e4, textRects: h3, drawnextLabel: l3 };
    } }, { key: "drawDataLabel", value: function(t4) {
      var e4 = this, i3 = t4.type, a3 = t4.pos, s3 = t4.i, r3 = t4.j, o3 = t4.isRangeStart, n3 = t4.strokeWidth, l3 = void 0 === n3 ? 2 : n3, h3 = this.w, c3 = new m2(this.ctx), d3 = h3.config.dataLabels, g3 = 0, u3 = 0, p3 = r3, f3 = null;
      if (-1 !== h3.globals.collapsedSeriesIndices.indexOf(s3) || !d3.enabled || !Array.isArray(a3.x))
        return f3;
      f3 = c3.group({ class: "apexcharts-data-labels" });
      for (var x3 = 0; x3 < a3.x.length; x3++)
        if (g3 = a3.x[x3] + d3.offsetX, u3 = a3.y[x3] + d3.offsetY + l3, !isNaN(g3)) {
          1 === r3 && 0 === x3 && (p3 = 0), 1 === r3 && 1 === x3 && (p3 = 1);
          var b3 = h3.globals.series[s3][p3];
          "rangeArea" === i3 && (b3 = o3 ? h3.globals.seriesRangeStart[s3][p3] : h3.globals.seriesRangeEnd[s3][p3]);
          var v3 = "", y3 = function(t5) {
            return h3.config.dataLabels.formatter(t5, { ctx: e4.ctx, seriesIndex: s3, dataPointIndex: p3, w: h3 });
          };
          if ("bubble" === h3.config.chart.type)
            v3 = y3(b3 = h3.globals.seriesZ[s3][p3]), u3 = a3.y[x3], u3 = new O2(this.ctx).centerTextInBubble(u3, s3, p3).y;
          else
            void 0 !== b3 && (v3 = y3(b3));
          this.plotDataLabelsText({ x: g3, y: u3, text: v3, i: s3, j: p3, parent: f3, offsetCorrection: true, dataLabelsConfig: h3.config.dataLabels });
        }
      return f3;
    } }, { key: "plotDataLabelsText", value: function(t4) {
      var e4 = this.w, i3 = new m2(this.ctx), a3 = t4.x, s3 = t4.y, r3 = t4.i, o3 = t4.j, n3 = t4.text, l3 = t4.textAnchor, h3 = t4.fontSize, c3 = t4.parent, d3 = t4.dataLabelsConfig, g3 = t4.color, u3 = t4.alwaysDrawDataLabel, p3 = t4.offsetCorrection;
      if (!(Array.isArray(e4.config.dataLabels.enabledOnSeries) && e4.config.dataLabels.enabledOnSeries.indexOf(r3) < 0)) {
        var f3 = { x: a3, y: s3, drawnextLabel: true, textRects: null };
        p3 && (f3 = this.dataLabelsCorrection(a3, s3, n3, r3, o3, u3, parseInt(d3.style.fontSize, 10))), e4.globals.zoomed || (a3 = f3.x, s3 = f3.y), f3.textRects && (a3 < -20 - f3.textRects.width || a3 > e4.globals.gridWidth + f3.textRects.width + 30) && (n3 = "");
        var x3 = e4.globals.dataLabels.style.colors[r3];
        (("bar" === e4.config.chart.type || "rangeBar" === e4.config.chart.type) && e4.config.plotOptions.bar.distributed || e4.config.dataLabels.distributed) && (x3 = e4.globals.dataLabels.style.colors[o3]), "function" == typeof x3 && (x3 = x3({ series: e4.globals.series, seriesIndex: r3, dataPointIndex: o3, w: e4 })), g3 && (x3 = g3);
        var b3 = d3.offsetX, y3 = d3.offsetY;
        if ("bar" !== e4.config.chart.type && "rangeBar" !== e4.config.chart.type || (b3 = 0, y3 = 0), f3.drawnextLabel) {
          var w3 = i3.drawText({ width: 100, height: parseInt(d3.style.fontSize, 10), x: a3 + b3, y: s3 + y3, foreColor: x3, textAnchor: l3 || d3.textAnchor, text: n3, fontSize: h3 || d3.style.fontSize, fontFamily: d3.style.fontFamily, fontWeight: d3.style.fontWeight || "normal" });
          if (w3.attr({ class: "apexcharts-datalabel", cx: a3, cy: s3 }), d3.dropShadow.enabled) {
            var k3 = d3.dropShadow;
            new v2(this.ctx).dropShadow(w3, k3);
          }
          c3.add(w3), void 0 === e4.globals.lastDrawnDataLabelsIndexes[r3] && (e4.globals.lastDrawnDataLabelsIndexes[r3] = []), e4.globals.lastDrawnDataLabelsIndexes[r3].push(o3);
        }
      }
    } }, { key: "addBackgroundToDataLabel", value: function(t4, e4) {
      var i3 = this.w, a3 = i3.config.dataLabels.background, s3 = a3.padding, r3 = a3.padding / 2, o3 = e4.width, n3 = e4.height, l3 = new m2(this.ctx).drawRect(e4.x - s3, e4.y - r3 / 2, o3 + 2 * s3, n3 + r3, a3.borderRadius, "transparent" === i3.config.chart.background ? "#fff" : i3.config.chart.background, a3.opacity, a3.borderWidth, a3.borderColor);
      a3.dropShadow.enabled && new v2(this.ctx).dropShadow(l3, a3.dropShadow);
      return l3;
    } }, { key: "dataLabelsBackground", value: function() {
      var t4 = this.w;
      if ("bubble" !== t4.config.chart.type)
        for (var e4 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels text"), i3 = 0; i3 < e4.length; i3++) {
          var a3 = e4[i3], s3 = a3.getBBox(), r3 = null;
          if (s3.width && s3.height && (r3 = this.addBackgroundToDataLabel(a3, s3)), r3) {
            a3.parentNode.insertBefore(r3.node, a3);
            var o3 = a3.getAttribute("fill");
            t4.config.chart.animations.enabled && !t4.globals.resized && !t4.globals.dataChanged ? r3.animate().attr({ fill: o3 }) : r3.attr({ fill: o3 }), a3.setAttribute("fill", t4.config.dataLabels.background.foreColor);
          }
        }
    } }, { key: "bringForward", value: function() {
      for (var t4 = this.w, e4 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels"), i3 = t4.globals.dom.baseEl.querySelector(".apexcharts-plot-series:last-child"), a3 = 0; a3 < e4.length; a3++)
        i3 && i3.insertBefore(e4[a3], i3.nextSibling);
    } }]), t3;
  }(), W2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.legendInactiveClass = "legend-mouseover-inactive";
    }
    return r2(t3, [{ key: "getAllSeriesEls", value: function() {
      return this.w.globals.dom.baseEl.getElementsByClassName("apexcharts-series");
    } }, { key: "getSeriesByName", value: function(t4) {
      return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner .apexcharts-series[seriesName='".concat(x2.escapeString(t4), "']"));
    } }, { key: "isSeriesHidden", value: function(t4) {
      var e4 = this.getSeriesByName(t4), i3 = parseInt(e4.getAttribute("data:realIndex"), 10);
      return { isHidden: e4.classList.contains("apexcharts-series-collapsed"), realIndex: i3 };
    } }, { key: "addCollapsedClassToSeries", value: function(t4, e4) {
      var i3 = this.w;
      function a3(i4) {
        for (var a4 = 0; a4 < i4.length; a4++)
          i4[a4].index === e4 && t4.node.classList.add("apexcharts-series-collapsed");
      }
      a3(i3.globals.collapsedSeries), a3(i3.globals.ancillaryCollapsedSeries);
    } }, { key: "toggleSeries", value: function(t4) {
      var e4 = this.isSeriesHidden(t4);
      return this.ctx.legend.legendHelpers.toggleDataSeries(e4.realIndex, e4.isHidden), e4.isHidden;
    } }, { key: "showSeries", value: function(t4) {
      var e4 = this.isSeriesHidden(t4);
      e4.isHidden && this.ctx.legend.legendHelpers.toggleDataSeries(e4.realIndex, true);
    } }, { key: "hideSeries", value: function(t4) {
      var e4 = this.isSeriesHidden(t4);
      e4.isHidden || this.ctx.legend.legendHelpers.toggleDataSeries(e4.realIndex, false);
    } }, { key: "resetSeries", value: function() {
      var t4 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], e4 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i3 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], a3 = this.w, s3 = x2.clone(a3.globals.initialSeries);
      a3.globals.previousPaths = [], i3 ? (a3.globals.collapsedSeries = [], a3.globals.ancillaryCollapsedSeries = [], a3.globals.collapsedSeriesIndices = [], a3.globals.ancillaryCollapsedSeriesIndices = []) : s3 = this.emptyCollapsedSeries(s3), a3.config.series = s3, t4 && (e4 && (a3.globals.zoomed = false, this.ctx.updateHelpers.revertDefaultAxisMinMax()), this.ctx.updateHelpers._updateSeries(s3, a3.config.chart.animations.dynamicAnimation.enabled));
    } }, { key: "emptyCollapsedSeries", value: function(t4) {
      for (var e4 = this.w, i3 = 0; i3 < t4.length; i3++)
        e4.globals.collapsedSeriesIndices.indexOf(i3) > -1 && (t4[i3].data = []);
      return t4;
    } }, { key: "toggleSeriesOnHover", value: function(t4, e4) {
      var i3 = this.w;
      e4 || (e4 = t4.target);
      var a3 = i3.globals.dom.baseEl.querySelectorAll(".apexcharts-series, .apexcharts-datalabels");
      if ("mousemove" === t4.type) {
        var s3 = parseInt(e4.getAttribute("rel"), 10) - 1, r3 = null, o3 = null;
        i3.globals.axisCharts || "radialBar" === i3.config.chart.type ? i3.globals.axisCharts ? (r3 = i3.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(s3, "']")), o3 = i3.globals.dom.baseEl.querySelector(".apexcharts-datalabels[data\\:realIndex='".concat(s3, "']"))) : r3 = i3.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(s3 + 1, "']")) : r3 = i3.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(s3 + 1, "'] path"));
        for (var n3 = 0; n3 < a3.length; n3++)
          a3[n3].classList.add(this.legendInactiveClass);
        null !== r3 && (i3.globals.axisCharts || r3.parentNode.classList.remove(this.legendInactiveClass), r3.classList.remove(this.legendInactiveClass), null !== o3 && o3.classList.remove(this.legendInactiveClass));
      } else if ("mouseout" === t4.type)
        for (var l3 = 0; l3 < a3.length; l3++)
          a3[l3].classList.remove(this.legendInactiveClass);
    } }, { key: "highlightRangeInSeries", value: function(t4, e4) {
      var i3 = this, a3 = this.w, s3 = a3.globals.dom.baseEl.getElementsByClassName("apexcharts-heatmap-rect"), r3 = function(t5) {
        for (var e6 = 0; e6 < s3.length; e6++)
          s3[e6].classList[t5](i3.legendInactiveClass);
      };
      if ("mousemove" === t4.type) {
        var o3 = parseInt(e4.getAttribute("rel"), 10) - 1;
        r3("add"), function(t5) {
          for (var e6 = 0; e6 < s3.length; e6++) {
            var a4 = parseInt(s3[e6].getAttribute("val"), 10);
            a4 >= t5.from && a4 <= t5.to && s3[e6].classList.remove(i3.legendInactiveClass);
          }
        }(a3.config.plotOptions.heatmap.colorScale.ranges[o3]);
      } else
        "mouseout" === t4.type && r3("remove");
    } }, { key: "getActiveConfigSeriesIndex", value: function() {
      var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "asc", e4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], i3 = this.w, a3 = 0;
      if (i3.config.series.length > 1) {
        for (var s3 = i3.config.series.map(function(t5, a4) {
          return t5.data && t5.data.length > 0 && -1 === i3.globals.collapsedSeriesIndices.indexOf(a4) && (!i3.globals.comboCharts || 0 === e4.length || e4.length && e4.indexOf(i3.config.series[a4].type) > -1) ? a4 : -1;
        }), r3 = "asc" === t4 ? 0 : s3.length - 1; "asc" === t4 ? r3 < s3.length : r3 >= 0; "asc" === t4 ? r3++ : r3--)
          if (-1 !== s3[r3]) {
            a3 = s3[r3];
            break;
          }
      }
      return a3;
    } }, { key: "getBarSeriesIndices", value: function() {
      return this.w.globals.comboCharts ? this.w.config.series.map(function(t4, e4) {
        return "bar" === t4.type || "column" === t4.type ? e4 : -1;
      }).filter(function(t4) {
        return -1 !== t4;
      }) : this.w.config.series.map(function(t4, e4) {
        return e4;
      });
    } }, { key: "getPreviousPaths", value: function() {
      var t4 = this.w;
      function e4(e6, i4, a4) {
        for (var s4 = e6[i4].childNodes, r3 = { type: a4, paths: [], realIndex: e6[i4].getAttribute("data:realIndex") }, o3 = 0; o3 < s4.length; o3++)
          if (s4[o3].hasAttribute("pathTo")) {
            var n3 = s4[o3].getAttribute("pathTo");
            r3.paths.push({ d: n3 });
          }
        t4.globals.previousPaths.push(r3);
      }
      t4.globals.previousPaths = [];
      ["line", "area", "bar", "rangebar", "rangeArea", "candlestick", "radar"].forEach(function(i4) {
        for (var a4, s4 = (a4 = i4, t4.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(a4, "-series .apexcharts-series"))), r3 = 0; r3 < s4.length; r3++)
          e4(s4, r3, i4);
      }), this.handlePrevBubbleScatterPaths("bubble"), this.handlePrevBubbleScatterPaths("scatter");
      var i3 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t4.config.chart.type, " .apexcharts-series"));
      if (i3.length > 0)
        for (var a3 = function(e6) {
          for (var i4 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t4.config.chart.type, " .apexcharts-series[data\\:realIndex='").concat(e6, "'] rect")), a4 = [], s4 = function(t5) {
            var e7 = function(e8) {
              return i4[t5].getAttribute(e8);
            }, s5 = { x: parseFloat(e7("x")), y: parseFloat(e7("y")), width: parseFloat(e7("width")), height: parseFloat(e7("height")) };
            a4.push({ rect: s5, color: i4[t5].getAttribute("color") });
          }, r3 = 0; r3 < i4.length; r3++)
            s4(r3);
          t4.globals.previousPaths.push(a4);
        }, s3 = 0; s3 < i3.length; s3++)
          a3(s3);
      t4.globals.axisCharts || (t4.globals.previousPaths = t4.globals.series);
    } }, { key: "handlePrevBubbleScatterPaths", value: function(t4) {
      var e4 = this.w, i3 = e4.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t4, "-series .apexcharts-series"));
      if (i3.length > 0)
        for (var a3 = 0; a3 < i3.length; a3++) {
          for (var s3 = e4.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t4, "-series .apexcharts-series[data\\:realIndex='").concat(a3, "'] circle")), r3 = [], o3 = 0; o3 < s3.length; o3++)
            r3.push({ x: s3[o3].getAttribute("cx"), y: s3[o3].getAttribute("cy"), r: s3[o3].getAttribute("r") });
          e4.globals.previousPaths.push(r3);
        }
    } }, { key: "clearPreviousPaths", value: function() {
      var t4 = this.w;
      t4.globals.previousPaths = [], t4.globals.allSeriesCollapsed = false;
    } }, { key: "handleNoData", value: function() {
      var t4 = this.w, e4 = t4.config.noData, i3 = new m2(this.ctx), a3 = t4.globals.svgWidth / 2, s3 = t4.globals.svgHeight / 2, r3 = "middle";
      if (t4.globals.noData = true, t4.globals.animationEnded = true, "left" === e4.align ? (a3 = 10, r3 = "start") : "right" === e4.align && (a3 = t4.globals.svgWidth - 10, r3 = "end"), "top" === e4.verticalAlign ? s3 = 50 : "bottom" === e4.verticalAlign && (s3 = t4.globals.svgHeight - 50), a3 += e4.offsetX, s3 = s3 + parseInt(e4.style.fontSize, 10) + 2 + e4.offsetY, void 0 !== e4.text && "" !== e4.text) {
        var o3 = i3.drawText({ x: a3, y: s3, text: e4.text, textAnchor: r3, fontSize: e4.style.fontSize, fontFamily: e4.style.fontFamily, foreColor: e4.style.color, opacity: 1, class: "apexcharts-text-nodata" });
        t4.globals.dom.Paper.add(o3);
      }
    } }, { key: "setNullSeriesToZeroValues", value: function(t4) {
      for (var e4 = this.w, i3 = 0; i3 < t4.length; i3++)
        if (0 === t4[i3].length)
          for (var a3 = 0; a3 < t4[e4.globals.maxValsInArrayIndex].length; a3++)
            t4[i3].push(0);
      return t4;
    } }, { key: "hasAllSeriesEqualX", value: function() {
      for (var t4 = true, e4 = this.w, i3 = this.filteredSeriesX(), a3 = 0; a3 < i3.length - 1; a3++)
        if (i3[a3][0] !== i3[a3 + 1][0]) {
          t4 = false;
          break;
        }
      return e4.globals.allSeriesHasEqualX = t4, t4;
    } }, { key: "filteredSeriesX", value: function() {
      var t4 = this.w.globals.seriesX.map(function(t5) {
        return t5.length > 0 ? t5 : [];
      });
      return t4;
    } }]), t3;
  }(), B2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.twoDSeries = [], this.threeDSeries = [], this.twoDSeriesX = [], this.seriesGoals = [], this.coreUtils = new y2(this.ctx);
    }
    return r2(t3, [{ key: "isMultiFormat", value: function() {
      return this.isFormatXY() || this.isFormat2DArray();
    } }, { key: "isFormatXY", value: function() {
      var t4 = this.w.config.series.slice(), e4 = new W2(this.ctx);
      if (this.activeSeriesIndex = e4.getActiveConfigSeriesIndex(), void 0 !== t4[this.activeSeriesIndex].data && t4[this.activeSeriesIndex].data.length > 0 && null !== t4[this.activeSeriesIndex].data[0] && void 0 !== t4[this.activeSeriesIndex].data[0].x && null !== t4[this.activeSeriesIndex].data[0])
        return true;
    } }, { key: "isFormat2DArray", value: function() {
      var t4 = this.w.config.series.slice(), e4 = new W2(this.ctx);
      if (this.activeSeriesIndex = e4.getActiveConfigSeriesIndex(), void 0 !== t4[this.activeSeriesIndex].data && t4[this.activeSeriesIndex].data.length > 0 && void 0 !== t4[this.activeSeriesIndex].data[0] && null !== t4[this.activeSeriesIndex].data[0] && t4[this.activeSeriesIndex].data[0].constructor === Array)
        return true;
    } }, { key: "handleFormat2DArray", value: function(t4, e4) {
      for (var i3 = this.w.config, a3 = this.w.globals, s3 = "boxPlot" === i3.chart.type || "boxPlot" === i3.series[e4].type, r3 = 0; r3 < t4[e4].data.length; r3++)
        if (void 0 !== t4[e4].data[r3][1] && (Array.isArray(t4[e4].data[r3][1]) && 4 === t4[e4].data[r3][1].length && !s3 ? this.twoDSeries.push(x2.parseNumber(t4[e4].data[r3][1][3])) : t4[e4].data[r3].length >= 5 ? this.twoDSeries.push(x2.parseNumber(t4[e4].data[r3][4])) : this.twoDSeries.push(x2.parseNumber(t4[e4].data[r3][1])), a3.dataFormatXNumeric = true), "datetime" === i3.xaxis.type) {
          var o3 = new Date(t4[e4].data[r3][0]);
          o3 = new Date(o3).getTime(), this.twoDSeriesX.push(o3);
        } else
          this.twoDSeriesX.push(t4[e4].data[r3][0]);
      for (var n3 = 0; n3 < t4[e4].data.length; n3++)
        void 0 !== t4[e4].data[n3][2] && (this.threeDSeries.push(t4[e4].data[n3][2]), a3.isDataXYZ = true);
    } }, { key: "handleFormatXY", value: function(t4, e4) {
      var i3 = this.w.config, a3 = this.w.globals, s3 = new A5(this.ctx), r3 = e4;
      a3.collapsedSeriesIndices.indexOf(e4) > -1 && (r3 = this.activeSeriesIndex);
      for (var o3 = 0; o3 < t4[e4].data.length; o3++)
        void 0 !== t4[e4].data[o3].y && (Array.isArray(t4[e4].data[o3].y) ? this.twoDSeries.push(x2.parseNumber(t4[e4].data[o3].y[t4[e4].data[o3].y.length - 1])) : this.twoDSeries.push(x2.parseNumber(t4[e4].data[o3].y))), void 0 !== t4[e4].data[o3].goals && Array.isArray(t4[e4].data[o3].goals) ? (void 0 === this.seriesGoals[e4] && (this.seriesGoals[e4] = []), this.seriesGoals[e4].push(t4[e4].data[o3].goals)) : (void 0 === this.seriesGoals[e4] && (this.seriesGoals[e4] = []), this.seriesGoals[e4].push(null));
      for (var n3 = 0; n3 < t4[r3].data.length; n3++) {
        var l3 = "string" == typeof t4[r3].data[n3].x, h3 = Array.isArray(t4[r3].data[n3].x), c3 = !h3 && !!s3.isValidDate(t4[r3].data[n3].x);
        if (l3 || c3)
          if (l3 || i3.xaxis.convertedCatToNumeric) {
            var d3 = a3.isBarHorizontal && a3.isRangeData;
            "datetime" !== i3.xaxis.type || d3 ? (this.fallbackToCategory = true, this.twoDSeriesX.push(t4[r3].data[n3].x), isNaN(t4[r3].data[n3].x) || "category" === this.w.config.xaxis.type || "string" == typeof t4[r3].data[n3].x || (a3.isXNumeric = true)) : this.twoDSeriesX.push(s3.parseDate(t4[r3].data[n3].x));
          } else
            "datetime" === i3.xaxis.type ? this.twoDSeriesX.push(s3.parseDate(t4[r3].data[n3].x.toString())) : (a3.dataFormatXNumeric = true, a3.isXNumeric = true, this.twoDSeriesX.push(parseFloat(t4[r3].data[n3].x)));
        else
          h3 ? (this.fallbackToCategory = true, this.twoDSeriesX.push(t4[r3].data[n3].x)) : (a3.isXNumeric = true, a3.dataFormatXNumeric = true, this.twoDSeriesX.push(t4[r3].data[n3].x));
      }
      if (t4[e4].data[0] && void 0 !== t4[e4].data[0].z) {
        for (var g3 = 0; g3 < t4[e4].data.length; g3++)
          this.threeDSeries.push(t4[e4].data[g3].z);
        a3.isDataXYZ = true;
      }
    } }, { key: "handleRangeData", value: function(t4, e4) {
      var i3 = this.w.globals, a3 = {};
      return this.isFormat2DArray() ? a3 = this.handleRangeDataFormat("array", t4, e4) : this.isFormatXY() && (a3 = this.handleRangeDataFormat("xy", t4, e4)), i3.seriesRangeStart.push(void 0 === a3.start ? [] : a3.start), i3.seriesRangeEnd.push(void 0 === a3.end ? [] : a3.end), i3.seriesRange.push(a3.rangeUniques), i3.seriesRange.forEach(function(t5, e6) {
        t5 && t5.forEach(function(t6, e7) {
          t6.y.forEach(function(e8, i4) {
            for (var a4 = 0; a4 < t6.y.length; a4++)
              if (i4 !== a4) {
                var s3 = e8.y1, r3 = e8.y2, o3 = t6.y[a4].y1;
                s3 <= t6.y[a4].y2 && o3 <= r3 && (t6.overlaps.indexOf(e8.rangeName) < 0 && t6.overlaps.push(e8.rangeName), t6.overlaps.indexOf(t6.y[a4].rangeName) < 0 && t6.overlaps.push(t6.y[a4].rangeName));
              }
          });
        });
      }), a3;
    } }, { key: "handleCandleStickBoxData", value: function(t4, e4) {
      var i3 = this.w.globals, a3 = {};
      return this.isFormat2DArray() ? a3 = this.handleCandleStickBoxDataFormat("array", t4, e4) : this.isFormatXY() && (a3 = this.handleCandleStickBoxDataFormat("xy", t4, e4)), i3.seriesCandleO[e4] = a3.o, i3.seriesCandleH[e4] = a3.h, i3.seriesCandleM[e4] = a3.m, i3.seriesCandleL[e4] = a3.l, i3.seriesCandleC[e4] = a3.c, a3;
    } }, { key: "handleRangeDataFormat", value: function(t4, e4, i3) {
      var a3 = [], s3 = [], r3 = e4[i3].data.filter(function(t5, e6, i4) {
        return e6 === i4.findIndex(function(e7) {
          return e7.x === t5.x;
        });
      }).map(function(t5, e6) {
        return { x: t5.x, overlaps: [], y: [] };
      });
      if ("array" === t4)
        for (var o3 = 0; o3 < e4[i3].data.length; o3++)
          Array.isArray(e4[i3].data[o3]) ? (a3.push(e4[i3].data[o3][1][0]), s3.push(e4[i3].data[o3][1][1])) : (a3.push(e4[i3].data[o3]), s3.push(e4[i3].data[o3]));
      else if ("xy" === t4)
        for (var n3 = function(t5) {
          var o4 = Array.isArray(e4[i3].data[t5].y), n4 = x2.randomId(), l4 = e4[i3].data[t5].x, h3 = { y1: o4 ? e4[i3].data[t5].y[0] : e4[i3].data[t5].y, y2: o4 ? e4[i3].data[t5].y[1] : e4[i3].data[t5].y, rangeName: n4 };
          e4[i3].data[t5].rangeName = n4;
          var c3 = r3.findIndex(function(t6) {
            return t6.x === l4;
          });
          r3[c3].y.push(h3), a3.push(h3.y1), s3.push(h3.y2);
        }, l3 = 0; l3 < e4[i3].data.length; l3++)
          n3(l3);
      return { start: a3, end: s3, rangeUniques: r3 };
    } }, { key: "handleCandleStickBoxDataFormat", value: function(t4, e4, i3) {
      var a3 = this.w, s3 = "boxPlot" === a3.config.chart.type || "boxPlot" === a3.config.series[i3].type, r3 = [], o3 = [], n3 = [], l3 = [], h3 = [];
      if ("array" === t4)
        if (s3 && 6 === e4[i3].data[0].length || !s3 && 5 === e4[i3].data[0].length)
          for (var c3 = 0; c3 < e4[i3].data.length; c3++)
            r3.push(e4[i3].data[c3][1]), o3.push(e4[i3].data[c3][2]), s3 ? (n3.push(e4[i3].data[c3][3]), l3.push(e4[i3].data[c3][4]), h3.push(e4[i3].data[c3][5])) : (l3.push(e4[i3].data[c3][3]), h3.push(e4[i3].data[c3][4]));
        else
          for (var d3 = 0; d3 < e4[i3].data.length; d3++)
            Array.isArray(e4[i3].data[d3][1]) && (r3.push(e4[i3].data[d3][1][0]), o3.push(e4[i3].data[d3][1][1]), s3 ? (n3.push(e4[i3].data[d3][1][2]), l3.push(e4[i3].data[d3][1][3]), h3.push(e4[i3].data[d3][1][4])) : (l3.push(e4[i3].data[d3][1][2]), h3.push(e4[i3].data[d3][1][3])));
      else if ("xy" === t4)
        for (var g3 = 0; g3 < e4[i3].data.length; g3++)
          Array.isArray(e4[i3].data[g3].y) && (r3.push(e4[i3].data[g3].y[0]), o3.push(e4[i3].data[g3].y[1]), s3 ? (n3.push(e4[i3].data[g3].y[2]), l3.push(e4[i3].data[g3].y[3]), h3.push(e4[i3].data[g3].y[4])) : (l3.push(e4[i3].data[g3].y[2]), h3.push(e4[i3].data[g3].y[3])));
      return { o: r3, h: o3, m: n3, l: l3, c: h3 };
    } }, { key: "parseDataAxisCharts", value: function(t4) {
      var e4, i3 = this, a3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.ctx, s3 = this.w.config, r3 = this.w.globals, o3 = new A5(a3), n3 = s3.labels.length > 0 ? s3.labels.slice() : s3.xaxis.categories.slice();
      if (r3.isRangeBar = "rangeBar" === s3.chart.type && r3.isBarHorizontal, r3.hasXaxisGroups = "category" === s3.xaxis.type && s3.xaxis.group.groups.length > 0, r3.hasXaxisGroups && (r3.groups = s3.xaxis.group.groups), r3.hasSeriesGroups = null === (e4 = t4[0]) || void 0 === e4 ? void 0 : e4.group, r3.hasSeriesGroups) {
        var l3 = [], h3 = u2(new Set(t4.map(function(t5) {
          return t5.group;
        })));
        t4.forEach(function(t5, e6) {
          var i4 = h3.indexOf(t5.group);
          l3[i4] || (l3[i4] = []), l3[i4].push(t5.name);
        }), r3.seriesGroups = l3;
      }
      for (var c3 = function() {
        for (var t5 = 0; t5 < n3.length; t5++)
          if ("string" == typeof n3[t5]) {
            if (!o3.isValidDate(n3[t5]))
              throw new Error("You have provided invalid Date format. Please provide a valid JavaScript Date");
            i3.twoDSeriesX.push(o3.parseDate(n3[t5]));
          } else
            i3.twoDSeriesX.push(n3[t5]);
      }, d3 = 0; d3 < t4.length; d3++) {
        if (this.twoDSeries = [], this.twoDSeriesX = [], this.threeDSeries = [], void 0 === t4[d3].data)
          return void console.error("It is a possibility that you may have not included 'data' property in series.");
        if ("rangeBar" !== s3.chart.type && "rangeArea" !== s3.chart.type && "rangeBar" !== t4[d3].type && "rangeArea" !== t4[d3].type || (r3.isRangeData = true, "rangeBar" !== s3.chart.type && "rangeArea" !== s3.chart.type || this.handleRangeData(t4, d3)), this.isMultiFormat())
          this.isFormat2DArray() ? this.handleFormat2DArray(t4, d3) : this.isFormatXY() && this.handleFormatXY(t4, d3), "candlestick" !== s3.chart.type && "candlestick" !== t4[d3].type && "boxPlot" !== s3.chart.type && "boxPlot" !== t4[d3].type || this.handleCandleStickBoxData(t4, d3), r3.series.push(this.twoDSeries), r3.labels.push(this.twoDSeriesX), r3.seriesX.push(this.twoDSeriesX), r3.seriesGoals = this.seriesGoals, d3 !== this.activeSeriesIndex || this.fallbackToCategory || (r3.isXNumeric = true);
        else {
          "datetime" === s3.xaxis.type ? (r3.isXNumeric = true, c3(), r3.seriesX.push(this.twoDSeriesX)) : "numeric" === s3.xaxis.type && (r3.isXNumeric = true, n3.length > 0 && (this.twoDSeriesX = n3, r3.seriesX.push(this.twoDSeriesX))), r3.labels.push(this.twoDSeriesX);
          var g3 = t4[d3].data.map(function(t5) {
            return x2.parseNumber(t5);
          });
          r3.series.push(g3);
        }
        r3.seriesZ.push(this.threeDSeries), void 0 !== t4[d3].name ? r3.seriesNames.push(t4[d3].name) : r3.seriesNames.push("series-" + parseInt(d3 + 1, 10)), void 0 !== t4[d3].color ? r3.seriesColors.push(t4[d3].color) : r3.seriesColors.push(void 0);
      }
      return this.w;
    } }, { key: "parseDataNonAxisCharts", value: function(t4) {
      var e4 = this.w.globals, i3 = this.w.config;
      e4.series = t4.slice(), e4.seriesNames = i3.labels.slice();
      for (var a3 = 0; a3 < e4.series.length; a3++)
        void 0 === e4.seriesNames[a3] && e4.seriesNames.push("series-" + (a3 + 1));
      return this.w;
    } }, { key: "handleExternalLabelsData", value: function(t4) {
      var e4 = this.w.config, i3 = this.w.globals;
      if (e4.xaxis.categories.length > 0)
        i3.labels = e4.xaxis.categories;
      else if (e4.labels.length > 0)
        i3.labels = e4.labels.slice();
      else if (this.fallbackToCategory) {
        if (i3.labels = i3.labels[0], i3.seriesRange.length && (i3.seriesRange.map(function(t5) {
          t5.forEach(function(t6) {
            i3.labels.indexOf(t6.x) < 0 && t6.x && i3.labels.push(t6.x);
          });
        }), i3.labels = Array.from(new Set(i3.labels.map(JSON.stringify)), JSON.parse)), e4.xaxis.convertedCatToNumeric)
          new E2(e4).convertCatToNumericXaxis(e4, this.ctx, i3.seriesX[0]), this._generateExternalLabels(t4);
      } else
        this._generateExternalLabels(t4);
    } }, { key: "_generateExternalLabels", value: function(t4) {
      var e4 = this.w.globals, i3 = this.w.config, a3 = [];
      if (e4.axisCharts) {
        if (e4.series.length > 0)
          if (this.isFormatXY())
            for (var s3 = i3.series.map(function(t5, e6) {
              return t5.data.filter(function(t6, e7, i4) {
                return i4.findIndex(function(e8) {
                  return e8.x === t6.x;
                }) === e7;
              });
            }), r3 = s3.reduce(function(t5, e6, i4, a4) {
              return a4[t5].length > e6.length ? t5 : i4;
            }, 0), o3 = 0; o3 < s3[r3].length; o3++)
              a3.push(o3 + 1);
          else
            for (var n3 = 0; n3 < e4.series[e4.maxValsInArrayIndex].length; n3++)
              a3.push(n3 + 1);
        e4.seriesX = [];
        for (var l3 = 0; l3 < t4.length; l3++)
          e4.seriesX.push(a3);
        this.w.globals.isBarHorizontal || (e4.isXNumeric = true);
      }
      if (0 === a3.length) {
        a3 = e4.axisCharts ? [] : e4.series.map(function(t5, e6) {
          return e6 + 1;
        });
        for (var h3 = 0; h3 < t4.length; h3++)
          e4.seriesX.push(a3);
      }
      e4.labels = a3, i3.xaxis.convertedCatToNumeric && (e4.categoryLabels = a3.map(function(t5) {
        return i3.xaxis.labels.formatter(t5);
      })), e4.noLabelsProvided = true;
    } }, { key: "parseData", value: function(t4) {
      var e4 = this.w, i3 = e4.config, a3 = e4.globals;
      if (this.excludeCollapsedSeriesInYAxis(), this.fallbackToCategory = false, this.ctx.core.resetGlobals(), this.ctx.core.isMultipleY(), a3.axisCharts ? (this.parseDataAxisCharts(t4), this.coreUtils.getLargestSeries()) : this.parseDataNonAxisCharts(t4), i3.chart.stacked) {
        var s3 = new W2(this.ctx);
        a3.series = s3.setNullSeriesToZeroValues(a3.series);
      }
      this.coreUtils.getSeriesTotals(), a3.axisCharts && (a3.stackedSeriesTotals = this.coreUtils.getStackedSeriesTotals(), a3.stackedSeriesTotalsByGroups = this.coreUtils.getStackedSeriesTotalsByGroups()), this.coreUtils.getPercentSeries(), a3.dataFormatXNumeric || a3.isXNumeric && ("numeric" !== i3.xaxis.type || 0 !== i3.labels.length || 0 !== i3.xaxis.categories.length) || this.handleExternalLabelsData(t4);
      for (var r3 = this.coreUtils.getCategoryLabels(a3.labels), o3 = 0; o3 < r3.length; o3++)
        if (Array.isArray(r3[o3])) {
          a3.isMultiLineX = true;
          break;
        }
    } }, { key: "excludeCollapsedSeriesInYAxis", value: function() {
      var t4 = this.w, e4 = [];
      t4.globals.seriesYAxisMap.forEach(function(i3, a3) {
        var s3 = 0;
        i3.forEach(function(e6) {
          -1 !== t4.globals.collapsedSeriesIndices.indexOf(e6) && s3++;
        }), s3 > 0 && s3 == i3.length && e4.push(a3);
      }), t4.globals.ignoreYAxisIndexes = e4.map(function(t5) {
        return t5;
      });
    } }]), t3;
  }(), G2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "scaleSvgNode", value: function(t4, e4) {
      var i3 = parseFloat(t4.getAttributeNS(null, "width")), a3 = parseFloat(t4.getAttributeNS(null, "height"));
      t4.setAttributeNS(null, "width", i3 * e4), t4.setAttributeNS(null, "height", a3 * e4), t4.setAttributeNS(null, "viewBox", "0 0 " + i3 + " " + a3);
    } }, { key: "fixSvgStringForIe11", value: function(t4) {
      if (!x2.isIE11())
        return t4.replace(/&nbsp;/g, "&#160;");
      var e4 = 0, i3 = t4.replace(/xmlns="http:\/\/www.w3.org\/2000\/svg"/g, function(t5) {
        return 2 === ++e4 ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"' : t5;
      });
      return i3 = (i3 = i3.replace(/xmlns:NS\d+=""/g, "")).replace(/NS\d+:(\w+:\w+=")/g, "$1");
    } }, { key: "getSvgString", value: function(t4) {
      null == t4 && (t4 = 1);
      var e4 = this.w.globals.dom.Paper.svg();
      if (1 !== t4) {
        var i3 = this.w.globals.dom.Paper.node.cloneNode(true);
        this.scaleSvgNode(i3, t4), e4 = new XMLSerializer().serializeToString(i3);
      }
      return this.fixSvgStringForIe11(e4);
    } }, { key: "cleanup", value: function() {
      var t4 = this.w, e4 = t4.globals.dom.baseEl.getElementsByClassName("apexcharts-xcrosshairs"), i3 = t4.globals.dom.baseEl.getElementsByClassName("apexcharts-ycrosshairs"), a3 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-zoom-rect, .apexcharts-selection-rect");
      Array.prototype.forEach.call(a3, function(t5) {
        t5.setAttribute("width", 0);
      }), e4 && e4[0] && (e4[0].setAttribute("x", -500), e4[0].setAttribute("x1", -500), e4[0].setAttribute("x2", -500)), i3 && i3[0] && (i3[0].setAttribute("y", -100), i3[0].setAttribute("y1", -100), i3[0].setAttribute("y2", -100));
    } }, { key: "svgUrl", value: function() {
      this.cleanup();
      var t4 = this.getSvgString(), e4 = new Blob([t4], { type: "image/svg+xml;charset=utf-8" });
      return URL.createObjectURL(e4);
    } }, { key: "dataURI", value: function(t4) {
      var e4 = this;
      return new Promise(function(i3) {
        var a3 = e4.w, s3 = t4 ? t4.scale || t4.width / a3.globals.svgWidth : 1;
        e4.cleanup();
        var r3 = document.createElement("canvas");
        r3.width = a3.globals.svgWidth * s3, r3.height = parseInt(a3.globals.dom.elWrap.style.height, 10) * s3;
        var o3 = "transparent" === a3.config.chart.background ? "#fff" : a3.config.chart.background, n3 = r3.getContext("2d");
        n3.fillStyle = o3, n3.fillRect(0, 0, r3.width * s3, r3.height * s3);
        var l3 = e4.getSvgString(s3);
        if (window.canvg && x2.isIE11()) {
          var h3 = window.canvg.Canvg.fromString(n3, l3, { ignoreClear: true, ignoreDimensions: true });
          h3.start();
          var c3 = r3.msToBlob();
          h3.stop(), i3({ blob: c3 });
        } else {
          var d3 = "data:image/svg+xml," + encodeURIComponent(l3), g3 = new Image();
          g3.crossOrigin = "anonymous", g3.onload = function() {
            if (n3.drawImage(g3, 0, 0), r3.msToBlob) {
              var t5 = r3.msToBlob();
              i3({ blob: t5 });
            } else {
              var e6 = r3.toDataURL("image/png");
              i3({ imgURI: e6 });
            }
          }, g3.src = d3;
        }
      });
    } }, { key: "exportToSVG", value: function() {
      this.triggerDownload(this.svgUrl(), this.w.config.chart.toolbar.export.svg.filename, ".svg");
    } }, { key: "exportToPng", value: function() {
      var t4 = this;
      this.dataURI().then(function(e4) {
        var i3 = e4.imgURI, a3 = e4.blob;
        a3 ? navigator.msSaveOrOpenBlob(a3, t4.w.globals.chartID + ".png") : t4.triggerDownload(i3, t4.w.config.chart.toolbar.export.png.filename, ".png");
      });
    } }, { key: "exportToCSV", value: function(t4) {
      var e4 = this, i3 = t4.series, a3 = t4.fileName, s3 = t4.columnDelimiter, r3 = void 0 === s3 ? "," : s3, o3 = t4.lineDelimiter, n3 = void 0 === o3 ? "\n" : o3, l3 = this.w;
      i3 || (i3 = l3.config.series);
      var h3, c3, d3 = [], g3 = [], p3 = "", f3 = l3.globals.series.map(function(t5, e6) {
        return -1 === l3.globals.collapsedSeriesIndices.indexOf(e6) ? t5 : [];
      }), b3 = function(t5) {
        return "datetime" === l3.config.xaxis.type && String(t5).length >= 10;
      }, v3 = Math.max.apply(Math, u2(i3.map(function(t5) {
        return t5.data ? t5.data.length : 0;
      }))), m3 = new B2(this.ctx), y3 = new C2(this.ctx), w3 = function(t5) {
        var i4 = "";
        if (l3.globals.axisCharts) {
          if ("category" === l3.config.xaxis.type || l3.config.xaxis.convertedCatToNumeric)
            if (l3.globals.isBarHorizontal) {
              var a4 = l3.globals.yLabelFormatters[0], s4 = new W2(e4.ctx).getActiveConfigSeriesIndex();
              i4 = a4(l3.globals.labels[t5], { seriesIndex: s4, dataPointIndex: t5, w: l3 });
            } else
              i4 = y3.getLabel(l3.globals.labels, l3.globals.timescaleLabels, 0, t5).text;
          "datetime" === l3.config.xaxis.type && (l3.config.xaxis.categories.length ? i4 = l3.config.xaxis.categories[t5] : l3.config.labels.length && (i4 = l3.config.labels[t5]));
        } else
          i4 = l3.config.labels[t5];
        return Array.isArray(i4) && (i4 = i4.join(" ")), x2.isNumber(i4) ? i4 : i4.split(r3).join("");
      }, k3 = function(t5, e6) {
        if (d3.length && 0 === e6 && g3.push(d3.join(r3)), t5.data) {
          t5.data = t5.data.length && t5.data || u2(Array(v3)).map(function() {
            return "";
          });
          for (var a4 = 0; a4 < t5.data.length; a4++) {
            d3 = [];
            var s4 = w3(a4);
            if (s4 || (m3.isFormatXY() ? s4 = i3[e6].data[a4].x : m3.isFormat2DArray() && (s4 = i3[e6].data[a4] ? i3[e6].data[a4][0] : "")), 0 === e6) {
              d3.push(b3(s4) ? l3.config.chart.toolbar.export.csv.dateFormatter(s4) : x2.isNumber(s4) ? s4 : s4.split(r3).join(""));
              for (var o4 = 0; o4 < l3.globals.series.length; o4++) {
                var n4;
                if (m3.isFormatXY())
                  d3.push(null === (n4 = i3[o4].data[a4]) || void 0 === n4 ? void 0 : n4.y);
                else
                  d3.push(f3[o4][a4]);
              }
            }
            ("candlestick" === l3.config.chart.type || t5.type && "candlestick" === t5.type) && (d3.pop(), d3.push(l3.globals.seriesCandleO[e6][a4]), d3.push(l3.globals.seriesCandleH[e6][a4]), d3.push(l3.globals.seriesCandleL[e6][a4]), d3.push(l3.globals.seriesCandleC[e6][a4])), ("boxPlot" === l3.config.chart.type || t5.type && "boxPlot" === t5.type) && (d3.pop(), d3.push(l3.globals.seriesCandleO[e6][a4]), d3.push(l3.globals.seriesCandleH[e6][a4]), d3.push(l3.globals.seriesCandleM[e6][a4]), d3.push(l3.globals.seriesCandleL[e6][a4]), d3.push(l3.globals.seriesCandleC[e6][a4])), "rangeBar" === l3.config.chart.type && (d3.pop(), d3.push(l3.globals.seriesRangeStart[e6][a4]), d3.push(l3.globals.seriesRangeEnd[e6][a4])), d3.length && g3.push(d3.join(r3));
          }
        }
      };
      d3.push(l3.config.chart.toolbar.export.csv.headerCategory), "boxPlot" === l3.config.chart.type ? (d3.push("minimum"), d3.push("q1"), d3.push("median"), d3.push("q3"), d3.push("maximum")) : "candlestick" === l3.config.chart.type ? (d3.push("open"), d3.push("high"), d3.push("low"), d3.push("close")) : "rangeBar" === l3.config.chart.type ? (d3.push("minimum"), d3.push("maximum")) : i3.map(function(t5, e6) {
        var i4 = (t5.name ? t5.name : "series-".concat(e6)) + "";
        l3.globals.axisCharts && d3.push(i4.split(r3).join("") ? i4.split(r3).join("") : "series-".concat(e6));
      }), l3.globals.axisCharts || (d3.push(l3.config.chart.toolbar.export.csv.headerValue), g3.push(d3.join(r3))), l3.globals.allSeriesHasEqualX || !l3.globals.axisCharts || l3.config.xaxis.categories.length || l3.config.labels.length ? i3.map(function(t5, e6) {
        l3.globals.axisCharts ? k3(t5, e6) : ((d3 = []).push(l3.globals.labels[e6].split(r3).join("")), d3.push(f3[e6]), g3.push(d3.join(r3)));
      }) : (h3 = /* @__PURE__ */ new Set(), c3 = {}, i3.forEach(function(t5, e6) {
        null == t5 || t5.data.forEach(function(t6) {
          var a4, s4;
          if (m3.isFormatXY())
            a4 = t6.x, s4 = t6.y;
          else {
            if (!m3.isFormat2DArray())
              return;
            a4 = t6[0], s4 = t6[1];
          }
          c3[a4] || (c3[a4] = Array(i3.length).fill("")), c3[a4][e6] = s4, h3.add(a4);
        });
      }), d3.length && g3.push(d3.join(r3)), Array.from(h3).sort().forEach(function(t5) {
        g3.push([b3(t5) && "datetime" === l3.config.xaxis.type ? l3.config.chart.toolbar.export.csv.dateFormatter(t5) : x2.isNumber(t5) ? t5 : t5.split(r3).join(""), c3[t5].join(r3)]);
      })), p3 += g3.join(n3), this.triggerDownload("data:text/csv; charset=utf-8," + encodeURIComponent("\uFEFF" + p3), a3 || l3.config.chart.toolbar.export.csv.filename, ".csv");
    } }, { key: "triggerDownload", value: function(t4, e4, i3) {
      var a3 = document.createElement("a");
      a3.href = t4, a3.download = (e4 || this.w.globals.chartID) + i3, document.body.appendChild(a3), a3.click(), document.body.removeChild(a3);
    } }]), t3;
  }(), V2 = function() {
    function t3(e4, i3) {
      a2(this, t3), this.ctx = e4, this.elgrid = i3, this.w = e4.w;
      var s3 = this.w;
      this.axesUtils = new C2(e4), this.xaxisLabels = s3.globals.labels.slice(), s3.globals.timescaleLabels.length > 0 && !s3.globals.isBarHorizontal && (this.xaxisLabels = s3.globals.timescaleLabels.slice()), s3.config.xaxis.overwriteCategories && (this.xaxisLabels = s3.config.xaxis.overwriteCategories), this.drawnLabels = [], this.drawnLabelsRects = [], "top" === s3.config.xaxis.position ? this.offY = 0 : this.offY = s3.globals.gridHeight + 1, this.offY = this.offY + s3.config.xaxis.axisBorder.offsetY, this.isCategoryBarHorizontal = "bar" === s3.config.chart.type && s3.config.plotOptions.bar.horizontal, this.xaxisFontSize = s3.config.xaxis.labels.style.fontSize, this.xaxisFontFamily = s3.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = s3.config.xaxis.labels.style.colors, this.xaxisBorderWidth = s3.config.xaxis.axisBorder.width, this.isCategoryBarHorizontal && (this.xaxisBorderWidth = s3.config.yaxis[0].axisBorder.width.toString()), this.xaxisBorderWidth.indexOf("%") > -1 ? this.xaxisBorderWidth = s3.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10) / 100 : this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10), this.xaxisBorderHeight = s3.config.xaxis.axisBorder.height, this.yaxis = s3.config.yaxis[0];
    }
    return r2(t3, [{ key: "drawXaxis", value: function() {
      var t4 = this.w, e4 = new m2(this.ctx), i3 = e4.group({ class: "apexcharts-xaxis", transform: "translate(".concat(t4.config.xaxis.offsetX, ", ").concat(t4.config.xaxis.offsetY, ")") }), a3 = e4.group({ class: "apexcharts-xaxis-texts-g", transform: "translate(".concat(t4.globals.translateXAxisX, ", ").concat(t4.globals.translateXAxisY, ")") });
      i3.add(a3);
      for (var s3 = [], r3 = 0; r3 < this.xaxisLabels.length; r3++)
        s3.push(this.xaxisLabels[r3]);
      if (this.drawXAxisLabelAndGroup(true, e4, a3, s3, t4.globals.isXNumeric, function(t5, e6) {
        return e6;
      }), t4.globals.hasXaxisGroups) {
        var o3 = t4.globals.groups;
        s3 = [];
        for (var n3 = 0; n3 < o3.length; n3++)
          s3.push(o3[n3].title);
        var l3 = {};
        t4.config.xaxis.group.style && (l3.xaxisFontSize = t4.config.xaxis.group.style.fontSize, l3.xaxisFontFamily = t4.config.xaxis.group.style.fontFamily, l3.xaxisForeColors = t4.config.xaxis.group.style.colors, l3.fontWeight = t4.config.xaxis.group.style.fontWeight, l3.cssClass = t4.config.xaxis.group.style.cssClass), this.drawXAxisLabelAndGroup(false, e4, a3, s3, false, function(t5, e6) {
          return o3[t5].cols * e6;
        }, l3);
      }
      if (void 0 !== t4.config.xaxis.title.text) {
        var h3 = e4.group({ class: "apexcharts-xaxis-title" }), c3 = e4.drawText({ x: t4.globals.gridWidth / 2 + t4.config.xaxis.title.offsetX, y: this.offY + parseFloat(this.xaxisFontSize) + ("bottom" === t4.config.xaxis.position ? t4.globals.xAxisLabelsHeight : -t4.globals.xAxisLabelsHeight - 10) + t4.config.xaxis.title.offsetY, text: t4.config.xaxis.title.text, textAnchor: "middle", fontSize: t4.config.xaxis.title.style.fontSize, fontFamily: t4.config.xaxis.title.style.fontFamily, fontWeight: t4.config.xaxis.title.style.fontWeight, foreColor: t4.config.xaxis.title.style.color, cssClass: "apexcharts-xaxis-title-text " + t4.config.xaxis.title.style.cssClass });
        h3.add(c3), i3.add(h3);
      }
      if (t4.config.xaxis.axisBorder.show) {
        var d3 = t4.globals.barPadForNumericAxis, g3 = e4.drawLine(t4.globals.padHorizontal + t4.config.xaxis.axisBorder.offsetX - d3, this.offY, this.xaxisBorderWidth + d3, this.offY, t4.config.xaxis.axisBorder.color, 0, this.xaxisBorderHeight);
        this.elgrid && this.elgrid.elGridBorders && t4.config.grid.show ? this.elgrid.elGridBorders.add(g3) : i3.add(g3);
      }
      return i3;
    } }, { key: "drawXAxisLabelAndGroup", value: function(t4, e4, i3, a3, s3, r3) {
      var o3, n3 = this, l3 = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : {}, h3 = [], c3 = [], d3 = this.w, g3 = l3.xaxisFontSize || this.xaxisFontSize, u3 = l3.xaxisFontFamily || this.xaxisFontFamily, p3 = l3.xaxisForeColors || this.xaxisForeColors, f3 = l3.fontWeight || d3.config.xaxis.labels.style.fontWeight, x3 = l3.cssClass || d3.config.xaxis.labels.style.cssClass, b3 = d3.globals.padHorizontal, v3 = a3.length, m3 = "category" === d3.config.xaxis.type ? d3.globals.dataPoints : v3;
      if (0 === m3 && v3 > m3 && (m3 = v3), s3) {
        var y3 = m3 > 1 ? m3 - 1 : m3;
        o3 = d3.globals.gridWidth / Math.min(y3, v3 - 1), b3 = b3 + r3(0, o3) / 2 + d3.config.xaxis.labels.offsetX;
      } else
        o3 = d3.globals.gridWidth / m3, b3 = b3 + r3(0, o3) + d3.config.xaxis.labels.offsetX;
      for (var w3 = function(s4) {
        var l4 = b3 - r3(s4, o3) / 2 + d3.config.xaxis.labels.offsetX;
        0 === s4 && 1 === v3 && o3 / 2 === b3 && 1 === m3 && (l4 = d3.globals.gridWidth / 2);
        var y4 = n3.axesUtils.getLabel(a3, d3.globals.timescaleLabels, l4, s4, h3, g3, t4), w4 = 28;
        d3.globals.rotateXLabels && t4 && (w4 = 22), d3.config.xaxis.title.text && "top" === d3.config.xaxis.position && (w4 += parseFloat(d3.config.xaxis.title.style.fontSize) + 2), t4 || (w4 = w4 + parseFloat(g3) + (d3.globals.xAxisLabelsHeight - d3.globals.xAxisGroupLabelsHeight) + (d3.globals.rotateXLabels ? 10 : 0)), y4 = void 0 !== d3.config.xaxis.tickAmount && "dataPoints" !== d3.config.xaxis.tickAmount && "datetime" !== d3.config.xaxis.type ? n3.axesUtils.checkLabelBasedOnTickamount(s4, y4, v3) : n3.axesUtils.checkForOverflowingLabels(s4, y4, v3, h3, c3);
        if (d3.config.xaxis.labels.show) {
          var k4 = e4.drawText({ x: y4.x, y: n3.offY + d3.config.xaxis.labels.offsetY + w4 - ("top" === d3.config.xaxis.position ? d3.globals.xAxisHeight + d3.config.xaxis.axisTicks.height - 2 : 0), text: y4.text, textAnchor: "middle", fontWeight: y4.isBold ? 600 : f3, fontSize: g3, fontFamily: u3, foreColor: Array.isArray(p3) ? t4 && d3.config.xaxis.convertedCatToNumeric ? p3[d3.globals.minX + s4 - 1] : p3[s4] : p3, isPlainText: false, cssClass: (t4 ? "apexcharts-xaxis-label " : "apexcharts-xaxis-group-label ") + x3 });
          if (i3.add(k4), k4.on("click", function(t5) {
            if ("function" == typeof d3.config.chart.events.xAxisLabelClick) {
              var e6 = Object.assign({}, d3, { labelIndex: s4 });
              d3.config.chart.events.xAxisLabelClick(t5, n3.ctx, e6);
            }
          }), t4) {
            var A6 = document.createElementNS(d3.globals.SVGNS, "title");
            A6.textContent = Array.isArray(y4.text) ? y4.text.join(" ") : y4.text, k4.node.appendChild(A6), "" !== y4.text && (h3.push(y4.text), c3.push(y4));
          }
        }
        s4 < v3 - 1 && (b3 += r3(s4 + 1, o3));
      }, k3 = 0; k3 <= v3 - 1; k3++)
        w3(k3);
    } }, { key: "drawXaxisInversed", value: function(t4) {
      var e4, i3, a3 = this, s3 = this.w, r3 = new m2(this.ctx), o3 = s3.config.yaxis[0].opposite ? s3.globals.translateYAxisX[t4] : 0, n3 = r3.group({ class: "apexcharts-yaxis apexcharts-xaxis-inversed", rel: t4 }), l3 = r3.group({ class: "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g", transform: "translate(" + o3 + ", 0)" });
      n3.add(l3);
      var h3 = [];
      if (s3.config.yaxis[t4].show)
        for (var c3 = 0; c3 < this.xaxisLabels.length; c3++)
          h3.push(this.xaxisLabels[c3]);
      e4 = s3.globals.gridHeight / h3.length, i3 = -e4 / 2.2;
      var d3 = s3.globals.yLabelFormatters[0], g3 = s3.config.yaxis[0].labels;
      if (g3.show)
        for (var u3 = function(o4) {
          var n4 = void 0 === h3[o4] ? "" : h3[o4];
          n4 = d3(n4, { seriesIndex: t4, dataPointIndex: o4, w: s3 });
          var c4 = a3.axesUtils.getYAxisForeColor(g3.style.colors, t4), u4 = 0;
          Array.isArray(n4) && (u4 = n4.length / 2 * parseInt(g3.style.fontSize, 10));
          var p4 = g3.offsetX - 15, f4 = "end";
          a3.yaxis.opposite && (f4 = "start"), "left" === s3.config.yaxis[0].labels.align ? (p4 = g3.offsetX, f4 = "start") : "center" === s3.config.yaxis[0].labels.align ? (p4 = g3.offsetX, f4 = "middle") : "right" === s3.config.yaxis[0].labels.align && (f4 = "end");
          var x4 = r3.drawText({ x: p4, y: i3 + e4 + g3.offsetY - u4, text: n4, textAnchor: f4, foreColor: Array.isArray(c4) ? c4[o4] : c4, fontSize: g3.style.fontSize, fontFamily: g3.style.fontFamily, fontWeight: g3.style.fontWeight, isPlainText: false, cssClass: "apexcharts-yaxis-label " + g3.style.cssClass, maxWidth: g3.maxWidth });
          l3.add(x4), x4.on("click", function(t5) {
            if ("function" == typeof s3.config.chart.events.xAxisLabelClick) {
              var e6 = Object.assign({}, s3, { labelIndex: o4 });
              s3.config.chart.events.xAxisLabelClick(t5, a3.ctx, e6);
            }
          });
          var b4 = document.createElementNS(s3.globals.SVGNS, "title");
          if (b4.textContent = Array.isArray(n4) ? n4.join(" ") : n4, x4.node.appendChild(b4), 0 !== s3.config.yaxis[t4].labels.rotate) {
            var v4 = r3.rotateAroundCenter(x4.node);
            x4.node.setAttribute("transform", "rotate(".concat(s3.config.yaxis[t4].labels.rotate, " 0 ").concat(v4.y, ")"));
          }
          i3 += e4;
        }, p3 = 0; p3 <= h3.length - 1; p3++)
          u3(p3);
      if (void 0 !== s3.config.yaxis[0].title.text) {
        var f3 = r3.group({ class: "apexcharts-yaxis-title apexcharts-xaxis-title-inversed", transform: "translate(" + o3 + ", 0)" }), x3 = r3.drawText({ x: s3.config.yaxis[0].title.offsetX, y: s3.globals.gridHeight / 2 + s3.config.yaxis[0].title.offsetY, text: s3.config.yaxis[0].title.text, textAnchor: "middle", foreColor: s3.config.yaxis[0].title.style.color, fontSize: s3.config.yaxis[0].title.style.fontSize, fontWeight: s3.config.yaxis[0].title.style.fontWeight, fontFamily: s3.config.yaxis[0].title.style.fontFamily, cssClass: "apexcharts-yaxis-title-text " + s3.config.yaxis[0].title.style.cssClass });
        f3.add(x3), n3.add(f3);
      }
      var b3 = 0;
      this.isCategoryBarHorizontal && s3.config.yaxis[0].opposite && (b3 = s3.globals.gridWidth);
      var v3 = s3.config.xaxis.axisBorder;
      if (v3.show) {
        var y3 = r3.drawLine(s3.globals.padHorizontal + v3.offsetX + b3, 1 + v3.offsetY, s3.globals.padHorizontal + v3.offsetX + b3, s3.globals.gridHeight + v3.offsetY, v3.color, 0);
        this.elgrid && this.elgrid.elGridBorders && s3.config.grid.show ? this.elgrid.elGridBorders.add(y3) : n3.add(y3);
      }
      return s3.config.yaxis[0].axisTicks.show && this.axesUtils.drawYAxisTicks(b3, h3.length, s3.config.yaxis[0].axisBorder, s3.config.yaxis[0].axisTicks, 0, e4, n3), n3;
    } }, { key: "drawXaxisTicks", value: function(t4, e4, i3) {
      var a3 = this.w, s3 = t4;
      if (!(t4 < 0 || t4 - 2 > a3.globals.gridWidth)) {
        var r3 = this.offY + a3.config.xaxis.axisTicks.offsetY;
        if (e4 = e4 + r3 + a3.config.xaxis.axisTicks.height, "top" === a3.config.xaxis.position && (e4 = r3 - a3.config.xaxis.axisTicks.height), a3.config.xaxis.axisTicks.show) {
          var o3 = new m2(this.ctx).drawLine(t4 + a3.config.xaxis.axisTicks.offsetX, r3 + a3.config.xaxis.offsetY, s3 + a3.config.xaxis.axisTicks.offsetX, e4 + a3.config.xaxis.offsetY, a3.config.xaxis.axisTicks.color);
          i3.add(o3), o3.node.classList.add("apexcharts-xaxis-tick");
        }
      }
    } }, { key: "getXAxisTicksPositions", value: function() {
      var t4 = this.w, e4 = [], i3 = this.xaxisLabels.length, a3 = t4.globals.padHorizontal;
      if (t4.globals.timescaleLabels.length > 0)
        for (var s3 = 0; s3 < i3; s3++)
          a3 = this.xaxisLabels[s3].position, e4.push(a3);
      else
        for (var r3 = i3, o3 = 0; o3 < r3; o3++) {
          var n3 = r3;
          t4.globals.isXNumeric && "bar" !== t4.config.chart.type && (n3 -= 1), a3 += t4.globals.gridWidth / n3, e4.push(a3);
        }
      return e4;
    } }, { key: "xAxisLabelCorrections", value: function() {
      var t4 = this.w, e4 = new m2(this.ctx), i3 = t4.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g"), a3 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-texts-g text:not(.apexcharts-xaxis-group-label)"), s3 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-inversed text"), r3 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-inversed-texts-g text tspan");
      if (t4.globals.rotateXLabels || t4.config.xaxis.labels.rotateAlways)
        for (var o3 = 0; o3 < a3.length; o3++) {
          var n3 = e4.rotateAroundCenter(a3[o3]);
          n3.y = n3.y - 1, n3.x = n3.x + 1, a3[o3].setAttribute("transform", "rotate(".concat(t4.config.xaxis.labels.rotate, " ").concat(n3.x, " ").concat(n3.y, ")")), a3[o3].setAttribute("text-anchor", "end");
          i3.setAttribute("transform", "translate(0, ".concat(-10, ")"));
          var l3 = a3[o3].childNodes;
          t4.config.xaxis.labels.trim && Array.prototype.forEach.call(l3, function(i4) {
            e4.placeTextWithEllipsis(i4, i4.textContent, t4.globals.xAxisLabelsHeight - ("bottom" === t4.config.legend.position ? 20 : 10));
          });
        }
      else
        !function() {
          for (var i4 = t4.globals.gridWidth / (t4.globals.labels.length + 1), s4 = 0; s4 < a3.length; s4++) {
            var r4 = a3[s4].childNodes;
            t4.config.xaxis.labels.trim && "datetime" !== t4.config.xaxis.type && Array.prototype.forEach.call(r4, function(t5) {
              e4.placeTextWithEllipsis(t5, t5.textContent, i4);
            });
          }
        }();
      if (s3.length > 0) {
        var h3 = s3[s3.length - 1].getBBox(), c3 = s3[0].getBBox();
        h3.x < -20 && s3[s3.length - 1].parentNode.removeChild(s3[s3.length - 1]), c3.x + c3.width > t4.globals.gridWidth && !t4.globals.isBarHorizontal && s3[0].parentNode.removeChild(s3[0]);
        for (var d3 = 0; d3 < r3.length; d3++)
          e4.placeTextWithEllipsis(r3[d3], r3[d3].textContent, t4.config.yaxis[0].labels.maxWidth - (t4.config.yaxis[0].title.text ? 2 * parseFloat(t4.config.yaxis[0].title.style.fontSize) : 0) - 15);
      }
    } }]), t3;
  }(), j = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
      var i3 = this.w;
      this.xaxisLabels = i3.globals.labels.slice(), this.axesUtils = new C2(e4), this.isRangeBar = i3.globals.seriesRange.length && i3.globals.isBarHorizontal, i3.globals.timescaleLabels.length > 0 && (this.xaxisLabels = i3.globals.timescaleLabels.slice());
    }
    return r2(t3, [{ key: "drawGridArea", value: function() {
      var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, e4 = this.w, i3 = new m2(this.ctx);
      null === t4 && (t4 = i3.group({ class: "apexcharts-grid" }));
      var a3 = i3.drawLine(e4.globals.padHorizontal, 1, e4.globals.padHorizontal, e4.globals.gridHeight, "transparent"), s3 = i3.drawLine(e4.globals.padHorizontal, e4.globals.gridHeight, e4.globals.gridWidth, e4.globals.gridHeight, "transparent");
      return t4.add(s3), t4.add(a3), t4;
    } }, { key: "drawGrid", value: function() {
      var t4 = null;
      return this.w.globals.axisCharts && (t4 = this.renderGrid(), this.drawGridArea(t4.el)), t4;
    } }, { key: "createGridMask", value: function() {
      var t4 = this.w, e4 = t4.globals, i3 = new m2(this.ctx), a3 = Array.isArray(t4.config.stroke.width) ? 0 : t4.config.stroke.width;
      if (Array.isArray(t4.config.stroke.width)) {
        var s3 = 0;
        t4.config.stroke.width.forEach(function(t5) {
          s3 = Math.max(s3, t5);
        }), a3 = s3;
      }
      e4.dom.elGridRectMask = document.createElementNS(e4.SVGNS, "clipPath"), e4.dom.elGridRectMask.setAttribute("id", "gridRectMask".concat(e4.cuid)), e4.dom.elGridRectMarkerMask = document.createElementNS(e4.SVGNS, "clipPath"), e4.dom.elGridRectMarkerMask.setAttribute("id", "gridRectMarkerMask".concat(e4.cuid)), e4.dom.elForecastMask = document.createElementNS(e4.SVGNS, "clipPath"), e4.dom.elForecastMask.setAttribute("id", "forecastMask".concat(e4.cuid)), e4.dom.elNonForecastMask = document.createElementNS(e4.SVGNS, "clipPath"), e4.dom.elNonForecastMask.setAttribute("id", "nonForecastMask".concat(e4.cuid));
      var r3 = t4.config.chart.type, o3 = 0, n3 = 0;
      ("bar" === r3 || "rangeBar" === r3 || "candlestick" === r3 || "boxPlot" === r3 || t4.globals.comboBarCount > 0) && t4.globals.isXNumeric && !t4.globals.isBarHorizontal && (o3 = t4.config.grid.padding.left, n3 = t4.config.grid.padding.right, e4.barPadForNumericAxis > o3 && (o3 = e4.barPadForNumericAxis, n3 = e4.barPadForNumericAxis)), e4.dom.elGridRect = i3.drawRect(-a3 / 2 - o3 - 2, -a3 / 2 - 2, e4.gridWidth + a3 + n3 + o3 + 4, e4.gridHeight + a3 + 4, 0, "#fff");
      var l3 = t4.globals.markers.largestSize + 1;
      e4.dom.elGridRectMarker = i3.drawRect(2 * -l3, 2 * -l3, e4.gridWidth + 4 * l3, e4.gridHeight + 4 * l3, 0, "#fff"), e4.dom.elGridRectMask.appendChild(e4.dom.elGridRect.node), e4.dom.elGridRectMarkerMask.appendChild(e4.dom.elGridRectMarker.node);
      var h3 = e4.dom.baseEl.querySelector("defs");
      h3.appendChild(e4.dom.elGridRectMask), h3.appendChild(e4.dom.elForecastMask), h3.appendChild(e4.dom.elNonForecastMask), h3.appendChild(e4.dom.elGridRectMarkerMask);
    } }, { key: "_drawGridLines", value: function(t4) {
      var e4 = t4.i, i3 = t4.x1, a3 = t4.y1, s3 = t4.x2, r3 = t4.y2, o3 = t4.xCount, n3 = t4.parent, l3 = this.w;
      if (!(0 === e4 && l3.globals.skipFirstTimelinelabel || e4 === o3 - 1 && l3.globals.skipLastTimelinelabel && !l3.config.xaxis.labels.formatter || "radar" === l3.config.chart.type)) {
        l3.config.grid.xaxis.lines.show && this._drawGridLine({ i: e4, x1: i3, y1: a3, x2: s3, y2: r3, xCount: o3, parent: n3 });
        var h3 = 0;
        if (l3.globals.hasXaxisGroups && "between" === l3.config.xaxis.tickPlacement) {
          var c3 = l3.globals.groups;
          if (c3) {
            for (var d3 = 0, g3 = 0; d3 < e4 && g3 < c3.length; g3++)
              d3 += c3[g3].cols;
            d3 === e4 && (h3 = 0.6 * l3.globals.xAxisLabelsHeight);
          }
        }
        new V2(this.ctx).drawXaxisTicks(i3, h3, l3.globals.dom.elGraphical);
      }
    } }, { key: "_drawGridLine", value: function(t4) {
      var e4 = t4.i, i3 = t4.x1, a3 = t4.y1, s3 = t4.x2, r3 = t4.y2, o3 = t4.xCount, n3 = t4.parent, l3 = this.w, h3 = false, c3 = n3.node.classList.contains("apexcharts-gridlines-horizontal"), d3 = l3.config.grid.strokeDashArray, g3 = l3.globals.barPadForNumericAxis;
      (0 === a3 && 0 === r3 || 0 === i3 && 0 === s3) && (h3 = true), a3 === l3.globals.gridHeight && r3 === l3.globals.gridHeight && (h3 = true), !l3.globals.isBarHorizontal || 0 !== e4 && e4 !== o3 - 1 || (h3 = true);
      var u3 = new m2(this).drawLine(i3 - (c3 ? g3 : 0), a3, s3 + (c3 ? g3 : 0), r3, l3.config.grid.borderColor, d3);
      u3.node.classList.add("apexcharts-gridline"), h3 && l3.config.grid.show ? this.elGridBorders.add(u3) : n3.add(u3);
    } }, { key: "_drawGridBandRect", value: function(t4) {
      var e4 = t4.c, i3 = t4.x1, a3 = t4.y1, s3 = t4.x2, r3 = t4.y2, o3 = t4.type, n3 = this.w, l3 = new m2(this.ctx), h3 = n3.globals.barPadForNumericAxis;
      if ("column" !== o3 || "datetime" !== n3.config.xaxis.type) {
        var c3 = n3.config.grid[o3].colors[e4], d3 = l3.drawRect(i3 - ("row" === o3 ? h3 : 0), a3, s3 + ("row" === o3 ? 2 * h3 : 0), r3, 0, c3, n3.config.grid[o3].opacity);
        this.elg.add(d3), d3.attr("clip-path", "url(#gridRectMask".concat(n3.globals.cuid, ")")), d3.node.classList.add("apexcharts-grid-".concat(o3));
      }
    } }, { key: "_drawXYLines", value: function(t4) {
      var e4 = this, i3 = t4.xCount, a3 = t4.tickAmount, s3 = this.w;
      if (s3.config.grid.xaxis.lines.show || s3.config.xaxis.axisTicks.show) {
        var r3, o3 = s3.globals.padHorizontal, n3 = s3.globals.gridHeight;
        s3.globals.timescaleLabels.length ? function(t5) {
          for (var a4 = t5.xC, s4 = t5.x1, r4 = t5.y1, o4 = t5.x2, n4 = t5.y2, l4 = 0; l4 < a4; l4++)
            s4 = e4.xaxisLabels[l4].position, o4 = e4.xaxisLabels[l4].position, e4._drawGridLines({ i: l4, x1: s4, y1: r4, x2: o4, y2: n4, xCount: i3, parent: e4.elgridLinesV });
        }({ xC: i3, x1: o3, y1: 0, x2: r3, y2: n3 }) : (s3.globals.isXNumeric && (i3 = s3.globals.xAxisScale.result.length), function(t5) {
          for (var a4 = t5.xC, r4 = t5.x1, o4 = t5.y1, n4 = t5.x2, l4 = t5.y2, h4 = 0; h4 < a4 + (s3.globals.isXNumeric ? 0 : 1); h4++)
            0 === h4 && 1 === a4 && 1 === s3.globals.dataPoints && (n4 = r4 = s3.globals.gridWidth / 2), e4._drawGridLines({ i: h4, x1: r4, y1: o4, x2: n4, y2: l4, xCount: i3, parent: e4.elgridLinesV }), n4 = r4 += s3.globals.gridWidth / (s3.globals.isXNumeric ? a4 - 1 : a4);
        }({ xC: i3, x1: o3, y1: 0, x2: r3, y2: n3 }));
      }
      if (s3.config.grid.yaxis.lines.show) {
        var l3 = 0, h3 = 0, c3 = s3.globals.gridWidth, d3 = a3 + 1;
        this.isRangeBar && (d3 = s3.globals.labels.length);
        for (var g3 = 0; g3 < d3 + (this.isRangeBar ? 1 : 0); g3++)
          this._drawGridLine({ i: g3, xCount: d3 + (this.isRangeBar ? 1 : 0), x1: 0, y1: l3, x2: c3, y2: h3, parent: this.elgridLinesH }), h3 = l3 += s3.globals.gridHeight / (this.isRangeBar ? d3 : a3);
      }
    } }, { key: "_drawInvertedXYLines", value: function(t4) {
      var e4 = t4.xCount, i3 = this.w;
      if (i3.config.grid.xaxis.lines.show || i3.config.xaxis.axisTicks.show)
        for (var a3, s3 = i3.globals.padHorizontal, r3 = i3.globals.gridHeight, o3 = 0; o3 < e4 + 1; o3++) {
          i3.config.grid.xaxis.lines.show && this._drawGridLine({ i: o3, xCount: e4 + 1, x1: s3, y1: 0, x2: a3, y2: r3, parent: this.elgridLinesV }), new V2(this.ctx).drawXaxisTicks(s3, 0, i3.globals.dom.elGraphical), a3 = s3 += i3.globals.gridWidth / e4;
        }
      if (i3.config.grid.yaxis.lines.show)
        for (var n3 = 0, l3 = 0, h3 = i3.globals.gridWidth, c3 = 0; c3 < i3.globals.dataPoints + 1; c3++)
          this._drawGridLine({ i: c3, xCount: i3.globals.dataPoints + 1, x1: 0, y1: n3, x2: h3, y2: l3, parent: this.elgridLinesH }), l3 = n3 += i3.globals.gridHeight / i3.globals.dataPoints;
    } }, { key: "renderGrid", value: function() {
      var t4 = this.w, e4 = new m2(this.ctx);
      this.elg = e4.group({ class: "apexcharts-grid" }), this.elgridLinesH = e4.group({ class: "apexcharts-gridlines-horizontal" }), this.elgridLinesV = e4.group({ class: "apexcharts-gridlines-vertical" }), this.elGridBorders = e4.group({ class: "apexcharts-grid-borders" }), this.elg.add(this.elgridLinesH), this.elg.add(this.elgridLinesV), t4.config.grid.show || (this.elgridLinesV.hide(), this.elgridLinesH.hide(), this.elGridBorders.hide());
      for (var i3 = 0; i3 < t4.globals.seriesYAxisMap.length && -1 !== t4.globals.ignoreYAxisIndexes.indexOf(i3); )
        i3++;
      i3 === t4.globals.seriesYAxisMap.length && (i3 = 0);
      var a3, s3 = t4.globals.yAxisScale[i3].result.length - 1;
      if (!t4.globals.isBarHorizontal || this.isRangeBar) {
        var r3, o3, n3;
        if (a3 = this.xaxisLabels.length, this.isRangeBar)
          a3--, s3 = t4.globals.labels.length, t4.config.xaxis.tickAmount && t4.config.xaxis.labels.formatter && (a3 = t4.config.xaxis.tickAmount), (null === (r3 = t4.globals.yAxisScale) || void 0 === r3 || null === (o3 = r3[i3]) || void 0 === o3 || null === (n3 = o3.result) || void 0 === n3 ? void 0 : n3.length) > 0 && "datetime" !== t4.config.xaxis.type && (a3 = t4.globals.yAxisScale[i3].result.length - 1);
        this._drawXYLines({ xCount: a3, tickAmount: s3 });
      } else
        a3 = s3, s3 = t4.globals.xTickAmount, this._drawInvertedXYLines({ xCount: a3, tickAmount: s3 });
      return this.drawGridBands(a3, s3), { el: this.elg, elGridBorders: this.elGridBorders, xAxisTickWidth: t4.globals.gridWidth / a3 };
    } }, { key: "drawGridBands", value: function(t4, e4) {
      var i3 = this.w;
      if (void 0 !== i3.config.grid.row.colors && i3.config.grid.row.colors.length > 0)
        for (var a3 = 0, s3 = i3.globals.gridHeight / e4, r3 = i3.globals.gridWidth, o3 = 0, n3 = 0; o3 < e4; o3++, n3++)
          n3 >= i3.config.grid.row.colors.length && (n3 = 0), this._drawGridBandRect({ c: n3, x1: 0, y1: a3, x2: r3, y2: s3, type: "row" }), a3 += i3.globals.gridHeight / e4;
      if (void 0 !== i3.config.grid.column.colors && i3.config.grid.column.colors.length > 0)
        for (var l3 = i3.globals.isBarHorizontal || "on" !== i3.config.xaxis.tickPlacement || "category" !== i3.config.xaxis.type && !i3.config.xaxis.convertedCatToNumeric ? t4 : t4 - 1, h3 = i3.globals.padHorizontal, c3 = i3.globals.padHorizontal + i3.globals.gridWidth / l3, d3 = i3.globals.gridHeight, g3 = 0, u3 = 0; g3 < t4; g3++, u3++)
          u3 >= i3.config.grid.column.colors.length && (u3 = 0), this._drawGridBandRect({ c: u3, x1: h3, y1: 0, x2: c3, y2: d3, type: "column" }), h3 += i3.globals.gridWidth / l3;
    } }]), t3;
  }(), _ = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "niceScale", value: function(t4, e4) {
      var i3, a3, s3, r3, o3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, n3 = 1e-11, l3 = this.w, h3 = l3.globals;
      h3.isBarHorizontal ? (i3 = l3.config.xaxis, a3 = Math.max((h3.svgWidth - 100) / 25, 2)) : (i3 = l3.config.yaxis[o3], a3 = Math.max((h3.svgHeight - 100) / 15, 2)), s3 = void 0 !== i3.min && null !== i3.min, r3 = void 0 !== i3.max && null !== i3.min;
      var c3 = void 0 !== i3.stepSize && null !== i3.stepSize, d3 = void 0 !== i3.tickAmount && null !== i3.tickAmount, g3 = d3 ? i3.tickAmount : i3.forceNiceScale ? h3.niceScaleDefaultTicks[Math.min(Math.round(a3 / 2), h3.niceScaleDefaultTicks.length - 1)] : 10;
      if (h3.isMultipleYAxis && !d3 && h3.multiAxisTickAmount > 0 && (g3 = h3.multiAxisTickAmount, d3 = true), g3 = "dataPoints" === g3 ? h3.dataPoints - 1 : Math.abs(Math.round(g3)), (t4 === Number.MIN_VALUE && 0 === e4 || !x2.isNumber(t4) && !x2.isNumber(e4) || t4 === Number.MIN_VALUE && e4 === -Number.MAX_VALUE) && (t4 = 0, e4 = g3, h3.allSeriesCollapsed = false), t4 > e4) {
        console.warn("axis.min cannot be greater than axis.max: swapping min and max");
        var u3 = e4;
        e4 = t4, t4 = u3;
      } else
        t4 === e4 && (t4 = 0 === t4 ? 0 : t4 - 1, e4 = 0 === e4 ? 2 : e4 + 1);
      var p3 = [];
      g3 < 1 && (g3 = 1);
      var f3 = g3, b3 = Math.abs(e4 - t4);
      if (i3.forceNiceScale) {
        !s3 && t4 > 0 && t4 / b3 < 0.15 && (t4 = 0, s3 = true), !r3 && e4 < 0 && -e4 / b3 < 0.15 && (e4 = 0, r3 = true), b3 = Math.abs(e4 - t4);
      }
      var v3 = b3 / f3, m3 = v3, y3 = Math.floor(Math.log10(m3)), w3 = Math.pow(10, y3), k3 = Math.ceil(m3 / w3);
      if (v3 = m3 = (k3 = h3.niceScaleAllowedMagMsd[0 === h3.yValueDecimal ? 0 : 1][k3]) * w3, h3.isBarHorizontal && i3.stepSize && "datetime" !== i3.type ? (v3 = i3.stepSize, c3 = true) : c3 && (v3 = i3.stepSize), c3 && i3.forceNiceScale) {
        var A6 = Math.floor(Math.log10(v3));
        v3 *= Math.pow(10, y3 - A6);
      }
      if (s3 && r3) {
        var S3 = b3 / f3;
        if (d3)
          if (c3)
            if (0 != x2.mod(b3, v3)) {
              var C3 = x2.getGCD(v3, S3);
              v3 = S3 / C3 < 10 ? C3 : S3;
            } else
              0 == x2.mod(v3, S3) ? v3 = S3 : (S3 = v3, d3 = false);
          else
            v3 = S3;
        else if (c3)
          0 == x2.mod(b3, v3) ? S3 = v3 : v3 = S3;
        else if (0 == x2.mod(b3, v3))
          S3 = v3;
        else {
          S3 = b3 / (f3 = Math.ceil(b3 / v3));
          var L3 = x2.getGCD(b3, v3);
          b3 / L3 < a3 && (S3 = L3), v3 = S3;
        }
        f3 = Math.round(b3 / v3);
      } else {
        if (s3 || r3)
          if (r3)
            if (d3)
              t4 = e4 - v3 * f3;
            else {
              var P3 = t4;
              t4 = v3 * Math.floor(t4 / v3), Math.abs(e4 - t4) / x2.getGCD(b3, v3) > a3 && (t4 = e4 - v3 * g3, t4 += v3 * Math.floor((P3 - t4) / v3));
            }
          else
            s3 && (e4 = d3 ? t4 + v3 * f3 : v3 * Math.ceil(e4 / v3));
        else if (d3) {
          var M3 = v3 / (e4 - t4 > e4 ? 1 : 2), I3 = M3 * Math.floor(t4 / M3);
          Math.abs(I3 - t4) <= M3 / 2 ? e4 = (t4 = I3) + v3 * f3 : t4 = (e4 = M3 * Math.ceil(e4 / M3)) - v3 * f3;
        } else
          t4 = v3 * Math.floor(t4 / v3), e4 = v3 * Math.ceil(e4 / v3);
        b3 = Math.abs(e4 - t4), v3 = x2.getGCD(b3, v3), f3 = Math.round(b3 / v3);
      }
      if (d3 || s3 || r3 || (f3 = Math.ceil((b3 - n3) / (v3 + n3))) > 16 && x2.getPrimeFactors(f3).length < 2 && f3++, !d3 && i3.forceNiceScale && 0 === h3.yValueDecimal && f3 > b3 && (f3 = b3, v3 = Math.round(b3 / f3)), h3.isMultipleYAxis && 0 == h3.multiAxisTickAmount && (h3.multiAxisTickAmount = f3), f3 > a3 && (!d3 && !c3 || i3.forceNiceScale)) {
        var T3 = x2.getPrimeFactors(f3), z3 = T3.length - 1, X4 = f3;
        t:
          for (var E3 = 0; E3 < z3; E3++)
            for (var Y4 = 0; Y4 <= z3 - E3; Y4++) {
              for (var F3 = Math.min(Y4 + E3, z3), R3 = X4, H3 = 1, D3 = Y4; D3 <= F3; D3++)
                H3 *= T3[D3];
              if ((R3 /= H3) < a3) {
                X4 = R3;
                break t;
              }
            }
        v3 = X4 === f3 ? b3 : b3 / X4;
      }
      var O3 = t4 - v3, N3 = v3 * n3;
      do {
        O3 += v3, p3.push(x2.stripNumber(O3, 7));
      } while (e4 - O3 > N3);
      return { result: p3, niceMin: p3[0], niceMax: p3[p3.length - 1] };
    } }, { key: "linearScale", value: function(t4, e4) {
      var i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10, a3 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0, s3 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : void 0, r3 = Math.abs(e4 - t4);
      "dataPoints" === (i3 = this._adjustTicksForSmallRange(i3, a3, r3)) && (i3 = this.w.globals.dataPoints - 1), s3 || (s3 = r3 / i3), i3 === Number.MAX_VALUE && (i3 = 5, s3 = 1);
      for (var o3 = [], n3 = t4; i3 >= 0; )
        o3.push(n3), n3 += s3, i3 -= 1;
      return { result: o3, niceMin: o3[0], niceMax: o3[o3.length - 1] };
    } }, { key: "logarithmicScaleNice", value: function(t4, e4, i3) {
      e4 <= 0 && (e4 = Math.max(t4, i3)), t4 <= 0 && (t4 = Math.min(e4, i3));
      for (var a3 = [], s3 = Math.ceil(Math.log(e4) / Math.log(i3) + 1), r3 = Math.floor(Math.log(t4) / Math.log(i3)); r3 < s3; r3++)
        a3.push(Math.pow(i3, r3));
      return { result: a3, niceMin: a3[0], niceMax: a3[a3.length - 1] };
    } }, { key: "logarithmicScale", value: function(t4, e4, i3) {
      e4 <= 0 && (e4 = Math.max(t4, i3)), t4 <= 0 && (t4 = Math.min(e4, i3));
      for (var a3 = [], s3 = Math.log(e4) / Math.log(i3), r3 = Math.log(t4) / Math.log(i3), o3 = s3 - r3, n3 = Math.round(o3), l3 = o3 / n3, h3 = 0, c3 = r3; h3 < n3; h3++, c3 += l3)
        a3.push(Math.pow(i3, c3));
      return a3.push(Math.pow(i3, s3)), { result: a3, niceMin: t4, niceMax: e4 };
    } }, { key: "_adjustTicksForSmallRange", value: function(t4, e4, i3) {
      var a3 = t4;
      if (void 0 !== e4 && this.w.config.yaxis[e4].labels.formatter && void 0 === this.w.config.yaxis[e4].tickAmount) {
        var s3 = Number(this.w.config.yaxis[e4].labels.formatter(1));
        x2.isNumber(s3) && 0 === this.w.globals.yValueDecimal && (a3 = Math.ceil(i3));
      }
      return a3 < t4 ? a3 : t4;
    } }, { key: "setYScaleForIndex", value: function(t4, e4, i3) {
      var a3 = this.w.globals, s3 = this.w.config, r3 = a3.isBarHorizontal ? s3.xaxis : s3.yaxis[t4];
      void 0 === a3.yAxisScale[t4] && (a3.yAxisScale[t4] = []);
      var o3 = Math.abs(i3 - e4);
      r3.logarithmic && o3 <= 5 && (a3.invalidLogScale = true), r3.logarithmic && o3 > 5 ? (a3.allSeriesCollapsed = false, a3.yAxisScale[t4] = r3.forceNiceScale ? this.logarithmicScaleNice(e4, i3, r3.logBase) : this.logarithmicScale(e4, i3, r3.logBase)) : i3 !== -Number.MAX_VALUE && x2.isNumber(i3) ? (a3.allSeriesCollapsed = false, a3.yAxisScale[t4] = this.niceScale(e4, i3, t4)) : a3.yAxisScale[t4] = this.linearScale(0, 10, 10, t4, s3.yaxis[t4].stepSize);
    } }, { key: "setXScale", value: function(t4, e4) {
      var i3 = this.w, a3 = i3.globals, s3 = Math.abs(e4 - t4);
      return e4 !== -Number.MAX_VALUE && x2.isNumber(e4) ? a3.xAxisScale = this.linearScale(t4, e4, i3.config.xaxis.tickAmount ? i3.config.xaxis.tickAmount : s3 < 10 && s3 > 1 ? s3 + 1 : 10, 0, i3.config.xaxis.stepSize) : a3.xAxisScale = this.linearScale(0, 10, 10), a3.xAxisScale;
    } }, { key: "setMultipleYScales", value: function() {
      var t4 = this.w.globals, e4 = this.w.config, i3 = t4.minYArr, a3 = t4.maxYArr, s3 = [], r3 = [], o3 = [], n3 = e4.yaxis.length !== e4.series.length;
      e4.series.forEach(function(t5, e6) {
        o3.push(e6), r3.push(null);
      }), e4.yaxis.forEach(function(t5, e6) {
        s3[e6] = [];
      });
      var l3, h3 = [];
      e4.yaxis.forEach(function(t5, i4) {
        var a4 = false;
        if (t5.seriesName) {
          var r4 = [];
          Array.isArray(t5.seriesName) ? r4 = t5.seriesName : r4.push(t5.seriesName), r4.forEach(function(t6) {
            e4.series.forEach(function(e6, r5) {
              if (e6.name === t6) {
                i4 === r5 || n3 ? s3[i4].push(r5) : s3[r5].push(i4), a4 = true;
                var l4 = o3.indexOf(r5);
                -1 !== l4 && o3.splice(l4, 1);
              }
            });
          });
        }
        a4 || h3.push(i4);
      }), s3.forEach(function(t5, e6) {
        t5.forEach(function(t6) {
          r3[t6] = e6;
        });
      });
      for (var c3 = 0; c3 < h3.length && (l3 = h3[c3], s3[l3] = [], o3); c3++) {
        var d3 = o3[0];
        o3.shift(), s3[l3].push(d3), r3[d3] = l3;
      }
      l3 && o3.forEach(function(t5) {
        s3[l3].push(t5), r3[t5] = l3;
      }), t4.seriesYAxisMap = s3.map(function(t5) {
        return t5;
      }), t4.seriesYAxisReverseMap = r3.map(function(t5) {
        return t5;
      }), this.sameScaleInMultipleAxes(i3, a3, s3);
    } }, { key: "sameScaleInMultipleAxes", value: function(t4, e4, i3) {
      var a3 = this, s3 = this.w.config, r3 = this.w.globals;
      i3.forEach(function(i4, o3) {
        if (i4.length > 0) {
          var n3 = Number.MAX_VALUE, l3 = -Number.MAX_VALUE;
          if (s3.chart.stacked) {
            for (var h3 = r3.seriesX[i4[0]].map(function(t5) {
              return Number.MIN_VALUE;
            }), c3 = r3.seriesX[i4[0]].map(function(t5) {
              return Number.MIN_VALUE;
            }), d3 = r3.seriesX[i4[0]].map(function(t5) {
              return Number.MIN_VALUE;
            }), g3 = s3.series[i4[0]].type, u3 = 0; u3 < i4.length; u3++) {
              var p3 = i4[u3];
              if (-1 === r3.collapsedSeriesIndices.indexOf(p3))
                for (var f3 = 0; f3 < r3.series[p3].length; f3++) {
                  var x3 = r3.series[p3][f3];
                  x3 >= 0 ? c3[f3] += x3 : d3[f3] += x3, h3[f3] += x3;
                }
            }
            "bar" === g3 ? (n3 = Math.min.apply(null, d3), l3 = Math.max.apply(null, c3)) : (n3 = Math.min.apply(null, h3), l3 = Math.max.apply(null, h3));
          } else {
            for (var b3 = 0; b3 < i4.length; b3++)
              n3 = Math.min(n3, t4[i4[b3]]);
            for (var v3 = 0; v3 < i4.length; v3++)
              l3 = Math.max(l3, e4[i4[v3]]);
          }
          void 0 !== s3.yaxis[o3].min && (n3 = "function" == typeof s3.yaxis[o3].min ? s3.yaxis[o3].min(n3) : s3.yaxis[o3].min), void 0 !== s3.yaxis[o3].max && (l3 = "function" == typeof s3.yaxis[o3].max ? s3.yaxis[o3].max(l3) : s3.yaxis[o3].max), a3.setYScaleForIndex(o3, n3, l3), i4.forEach(function(i5) {
            t4[i5] = r3.yAxisScale[o3].niceMin, e4[i5] = r3.yAxisScale[o3].niceMax;
          });
        }
      });
    } }]), t3;
  }(), U2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.scales = new _(e4);
    }
    return r2(t3, [{ key: "init", value: function() {
      this.setYRange(), this.setXRange(), this.setZRange();
    } }, { key: "getMinYMaxY", value: function(t4) {
      var e4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Number.MAX_VALUE, i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : -Number.MAX_VALUE, a3 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null, s3 = this.w.config, r3 = this.w.globals, o3 = -Number.MAX_VALUE, n3 = Number.MIN_VALUE;
      null === a3 && (a3 = t4 + 1);
      var l3 = 0, h3 = 0, c3 = void 0;
      if (r3.seriesX.length >= a3) {
        var d3, g3;
        l3 = 0, h3 = (c3 = u2(new Set((d3 = []).concat.apply(d3, u2(r3.seriesX.slice(t4, a3)))))).length - 1;
        var p3 = null === (g3 = r3.brushSource) || void 0 === g3 ? void 0 : g3.w.config.chart.brush;
        if (s3.chart.zoom.enabled && s3.chart.zoom.autoScaleYaxis || null != p3 && p3.enabled && null != p3 && p3.autoScaleYaxis) {
          if (s3.xaxis.min)
            for (l3 = 0; l3 < h3 && c3[l3] < s3.xaxis.min; l3++)
              ;
          if (s3.xaxis.max)
            for (; h3 > l3 && c3[h3] > s3.xaxis.max; h3--)
              ;
        }
      }
      var f3 = r3.series, b3 = f3, v3 = f3;
      "candlestick" === s3.chart.type ? (b3 = r3.seriesCandleL, v3 = r3.seriesCandleH) : "boxPlot" === s3.chart.type ? (b3 = r3.seriesCandleO, v3 = r3.seriesCandleC) : r3.isRangeData && (b3 = r3.seriesRangeStart, v3 = r3.seriesRangeEnd);
      for (var m3 = t4; m3 < a3; m3++) {
        r3.dataPoints = Math.max(r3.dataPoints, f3[m3].length);
        var y3 = s3.series[m3].type;
        r3.categoryLabels.length && (r3.dataPoints = r3.categoryLabels.filter(function(t5) {
          return void 0 !== t5;
        }).length), r3.labels.length && "datetime" !== s3.xaxis.type && 0 !== r3.series.reduce(function(t5, e6) {
          return t5 + e6.length;
        }, 0) && (r3.dataPoints = Math.max(r3.dataPoints, r3.labels.length)), c3 || (l3 = 0, h3 = r3.series[m3].length);
        for (var w3 = l3; w3 <= h3 && w3 < r3.series[m3].length; w3++) {
          var k3 = f3[m3][w3];
          if (null !== k3 && x2.isNumber(k3)) {
            switch (void 0 !== v3[m3][w3] && (o3 = Math.max(o3, v3[m3][w3]), e4 = Math.min(e4, v3[m3][w3])), void 0 !== b3[m3][w3] && (e4 = Math.min(e4, b3[m3][w3]), i3 = Math.max(i3, b3[m3][w3])), y3) {
              case "candlestick":
                void 0 !== r3.seriesCandleC[m3][w3] && (o3 = Math.max(o3, r3.seriesCandleH[m3][w3]), e4 = Math.min(e4, r3.seriesCandleL[m3][w3]));
              case "boxPlot":
                void 0 !== r3.seriesCandleC[m3][w3] && (o3 = Math.max(o3, r3.seriesCandleC[m3][w3]), e4 = Math.min(e4, r3.seriesCandleO[m3][w3]));
            }
            y3 && "candlestick" !== y3 && "boxPlot" !== y3 && "rangeArea" !== y3 && "rangeBar" !== y3 && (o3 = Math.max(o3, r3.series[m3][w3]), e4 = Math.min(e4, r3.series[m3][w3])), i3 = o3, r3.seriesGoals[m3] && r3.seriesGoals[m3][w3] && Array.isArray(r3.seriesGoals[m3][w3]) && r3.seriesGoals[m3][w3].forEach(function(t5) {
              n3 !== Number.MIN_VALUE && (n3 = Math.min(n3, t5.value), e4 = n3), o3 = Math.max(o3, t5.value), i3 = o3;
            }), x2.isFloat(k3) && (k3 = x2.noExponents(k3), r3.yValueDecimal = Math.max(r3.yValueDecimal, k3.toString().split(".")[1].length)), n3 > b3[m3][w3] && b3[m3][w3] < 0 && (n3 = b3[m3][w3]);
          } else
            r3.hasNullValues = true;
        }
        "bar" !== y3 && "column" !== y3 || (n3 < 0 && o3 < 0 && (o3 = 0, i3 = Math.max(i3, 0)), n3 === Number.MIN_VALUE && (n3 = 0, e4 = Math.min(e4, 0)));
      }
      return "rangeBar" === s3.chart.type && r3.seriesRangeStart.length && r3.isBarHorizontal && (n3 = e4), "bar" === s3.chart.type && (n3 < 0 && o3 < 0 && (o3 = 0), n3 === Number.MIN_VALUE && (n3 = 0)), { minY: n3, maxY: o3, lowestY: e4, highestY: i3 };
    } }, { key: "setYRange", value: function() {
      var t4 = this.w.globals, e4 = this.w.config;
      t4.maxY = -Number.MAX_VALUE, t4.minY = Number.MIN_VALUE;
      var i3, a3 = Number.MAX_VALUE;
      if (t4.isMultipleYAxis) {
        a3 = Number.MAX_VALUE;
        for (var s3 = 0; s3 < t4.series.length; s3++)
          i3 = this.getMinYMaxY(s3), t4.minYArr[s3] = i3.lowestY, t4.maxYArr[s3] = i3.highestY, a3 = Math.min(a3, i3.lowestY);
      }
      if (i3 = this.getMinYMaxY(0, a3, null, t4.series.length), "bar" === e4.chart.type ? (t4.minY = i3.minY, t4.maxY = i3.maxY) : (t4.minY = i3.lowestY, t4.maxY = i3.highestY), a3 = i3.lowestY, e4.chart.stacked && this._setStackedMinMax(), "line" === e4.chart.type || "area" === e4.chart.type || "scatter" === e4.chart.type || "candlestick" === e4.chart.type || "boxPlot" === e4.chart.type || "rangeBar" === e4.chart.type && !t4.isBarHorizontal ? t4.minY === Number.MIN_VALUE && a3 !== -Number.MAX_VALUE && a3 !== t4.maxY && (t4.minY = a3) : t4.minY = i3.minY, e4.yaxis.forEach(function(e6, i4) {
        void 0 !== e6.max && ("number" == typeof e6.max ? t4.maxYArr[i4] = e6.max : "function" == typeof e6.max && (t4.maxYArr[i4] = e6.max(t4.isMultipleYAxis ? t4.maxYArr[i4] : t4.maxY)), t4.maxY = t4.maxYArr[i4]), void 0 !== e6.min && ("number" == typeof e6.min ? t4.minYArr[i4] = e6.min : "function" == typeof e6.min && (t4.minYArr[i4] = e6.min(t4.isMultipleYAxis ? t4.minYArr[i4] === Number.MIN_VALUE ? 0 : t4.minYArr[i4] : t4.minY)), t4.minY = t4.minYArr[i4]);
      }), t4.isBarHorizontal) {
        ["min", "max"].forEach(function(i4) {
          void 0 !== e4.xaxis[i4] && "number" == typeof e4.xaxis[i4] && ("min" === i4 ? t4.minY = e4.xaxis[i4] : t4.maxY = e4.xaxis[i4]);
        });
      }
      return t4.isMultipleYAxis ? (this.scales.setMultipleYScales(), t4.minY = a3) : (this.scales.setYScaleForIndex(0, t4.minY, t4.maxY), t4.minY = t4.yAxisScale[0].niceMin, t4.maxY = t4.yAxisScale[0].niceMax, t4.minYArr[0] = t4.yAxisScale[0].niceMin, t4.maxYArr[0] = t4.yAxisScale[0].niceMax, t4.seriesYAxisMap = [t4.series.map(function(t5, e6) {
        return e6;
      })], t4.seriesYAxisReverseMap = t4.series.map(function(t5, e6) {
        return 0;
      })), { minY: t4.minY, maxY: t4.maxY, minYArr: t4.minYArr, maxYArr: t4.maxYArr, yAxisScale: t4.yAxisScale };
    } }, { key: "setXRange", value: function() {
      var t4 = this.w.globals, e4 = this.w.config, i3 = "numeric" === e4.xaxis.type || "datetime" === e4.xaxis.type || "category" === e4.xaxis.type && !t4.noLabelsProvided || t4.noLabelsProvided || t4.isXNumeric;
      if (t4.isXNumeric && function() {
        for (var e6 = 0; e6 < t4.series.length; e6++)
          if (t4.labels[e6])
            for (var i4 = 0; i4 < t4.labels[e6].length; i4++)
              null !== t4.labels[e6][i4] && x2.isNumber(t4.labels[e6][i4]) && (t4.maxX = Math.max(t4.maxX, t4.labels[e6][i4]), t4.initialMaxX = Math.max(t4.maxX, t4.labels[e6][i4]), t4.minX = Math.min(t4.minX, t4.labels[e6][i4]), t4.initialMinX = Math.min(t4.minX, t4.labels[e6][i4]));
      }(), t4.noLabelsProvided && 0 === e4.xaxis.categories.length && (t4.maxX = t4.labels[t4.labels.length - 1], t4.initialMaxX = t4.labels[t4.labels.length - 1], t4.minX = 1, t4.initialMinX = 1), t4.isXNumeric || t4.noLabelsProvided || t4.dataFormatXNumeric) {
        var a3;
        if (void 0 === e4.xaxis.tickAmount ? (a3 = Math.round(t4.svgWidth / 150), "numeric" === e4.xaxis.type && t4.dataPoints < 30 && (a3 = t4.dataPoints - 1), a3 > t4.dataPoints && 0 !== t4.dataPoints && (a3 = t4.dataPoints - 1)) : "dataPoints" === e4.xaxis.tickAmount ? (t4.series.length > 1 && (a3 = t4.series[t4.maxValsInArrayIndex].length - 1), t4.isXNumeric && (a3 = t4.maxX - t4.minX - 1)) : a3 = e4.xaxis.tickAmount, t4.xTickAmount = a3, void 0 !== e4.xaxis.max && "number" == typeof e4.xaxis.max && (t4.maxX = e4.xaxis.max), void 0 !== e4.xaxis.min && "number" == typeof e4.xaxis.min && (t4.minX = e4.xaxis.min), void 0 !== e4.xaxis.range && (t4.minX = t4.maxX - e4.xaxis.range), t4.minX !== Number.MAX_VALUE && t4.maxX !== -Number.MAX_VALUE)
          if (e4.xaxis.convertedCatToNumeric && !t4.dataFormatXNumeric) {
            for (var s3 = [], r3 = t4.minX - 1; r3 < t4.maxX; r3++)
              s3.push(r3 + 1);
            t4.xAxisScale = { result: s3, niceMin: s3[0], niceMax: s3[s3.length - 1] };
          } else
            t4.xAxisScale = this.scales.setXScale(t4.minX, t4.maxX);
        else
          t4.xAxisScale = this.scales.linearScale(0, a3, a3, 0, e4.xaxis.stepSize), t4.noLabelsProvided && t4.labels.length > 0 && (t4.xAxisScale = this.scales.linearScale(1, t4.labels.length, a3 - 1, 0, e4.xaxis.stepSize), t4.seriesX = t4.labels.slice());
        i3 && (t4.labels = t4.xAxisScale.result.slice());
      }
      return t4.isBarHorizontal && t4.labels.length && (t4.xTickAmount = t4.labels.length), this._handleSingleDataPoint(), this._getMinXDiff(), { minX: t4.minX, maxX: t4.maxX };
    } }, { key: "setZRange", value: function() {
      var t4 = this.w.globals;
      if (t4.isDataXYZ) {
        for (var e4 = 0; e4 < t4.series.length; e4++)
          if (void 0 !== t4.seriesZ[e4])
            for (var i3 = 0; i3 < t4.seriesZ[e4].length; i3++)
              null !== t4.seriesZ[e4][i3] && x2.isNumber(t4.seriesZ[e4][i3]) && (t4.maxZ = Math.max(t4.maxZ, t4.seriesZ[e4][i3]), t4.minZ = Math.min(t4.minZ, t4.seriesZ[e4][i3]));
      }
    } }, { key: "_handleSingleDataPoint", value: function() {
      var t4 = this.w.globals, e4 = this.w.config;
      if (t4.minX === t4.maxX) {
        var i3 = new A5(this.ctx);
        if ("datetime" === e4.xaxis.type) {
          var a3 = i3.getDate(t4.minX);
          e4.xaxis.labels.datetimeUTC ? a3.setUTCDate(a3.getUTCDate() - 2) : a3.setDate(a3.getDate() - 2), t4.minX = new Date(a3).getTime();
          var s3 = i3.getDate(t4.maxX);
          e4.xaxis.labels.datetimeUTC ? s3.setUTCDate(s3.getUTCDate() + 2) : s3.setDate(s3.getDate() + 2), t4.maxX = new Date(s3).getTime();
        } else
          ("numeric" === e4.xaxis.type || "category" === e4.xaxis.type && !t4.noLabelsProvided) && (t4.minX = t4.minX - 2, t4.initialMinX = t4.minX, t4.maxX = t4.maxX + 2, t4.initialMaxX = t4.maxX);
      }
    } }, { key: "_getMinXDiff", value: function() {
      var t4 = this.w.globals;
      t4.isXNumeric && t4.seriesX.forEach(function(e4, i3) {
        1 === e4.length && e4.push(t4.seriesX[t4.maxValsInArrayIndex][t4.seriesX[t4.maxValsInArrayIndex].length - 1]);
        var a3 = e4.slice();
        a3.sort(function(t5, e6) {
          return t5 - e6;
        }), a3.forEach(function(e6, i4) {
          if (i4 > 0) {
            var s3 = e6 - a3[i4 - 1];
            s3 > 0 && (t4.minXDiff = Math.min(s3, t4.minXDiff));
          }
        }), 1 !== t4.dataPoints && t4.minXDiff !== Number.MAX_VALUE || (t4.minXDiff = 0.5);
      });
    } }, { key: "_setStackedMinMax", value: function() {
      var t4 = this, e4 = this.w.globals;
      if (e4.series.length) {
        var i3 = e4.seriesGroups;
        i3.length || (i3 = [this.w.config.series.map(function(t5) {
          return t5.name;
        })]);
        var a3 = {}, s3 = {};
        i3.forEach(function(i4) {
          a3[i4] = [], s3[i4] = [], t4.w.config.series.map(function(t5, e6) {
            return i4.indexOf(t5.name) > -1 ? e6 : null;
          }).filter(function(t5) {
            return null !== t5;
          }).forEach(function(r3) {
            for (var o3 = 0; o3 < e4.series[e4.maxValsInArrayIndex].length; o3++) {
              var n3, l3;
              void 0 === a3[i4][o3] && (a3[i4][o3] = 0, s3[i4][o3] = 0), (t4.w.config.chart.stacked && !e4.comboCharts || t4.w.config.chart.stacked && e4.comboCharts && (!t4.w.config.chart.stackOnlyBar || "bar" === (null === (n3 = t4.w.config.series) || void 0 === n3 || null === (l3 = n3[r3]) || void 0 === l3 ? void 0 : l3.type))) && null !== e4.series[r3][o3] && x2.isNumber(e4.series[r3][o3]) && (e4.series[r3][o3] > 0 ? a3[i4][o3] += parseFloat(e4.series[r3][o3]) + 1e-4 : s3[i4][o3] += parseFloat(e4.series[r3][o3]));
            }
          });
        }), Object.entries(a3).forEach(function(t5) {
          var i4 = g2(t5, 1)[0];
          a3[i4].forEach(function(t6, r3) {
            e4.maxY = Math.max(e4.maxY, a3[i4][r3]), e4.minY = Math.min(e4.minY, s3[i4][r3]);
          });
        });
      }
    } }]), t3;
  }(), q2 = function() {
    function t3(e4, i3) {
      a2(this, t3), this.ctx = e4, this.elgrid = i3, this.w = e4.w;
      var s3 = this.w;
      this.xaxisFontSize = s3.config.xaxis.labels.style.fontSize, this.axisFontFamily = s3.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = s3.config.xaxis.labels.style.colors, this.isCategoryBarHorizontal = "bar" === s3.config.chart.type && s3.config.plotOptions.bar.horizontal, this.xAxisoffX = 0, "bottom" === s3.config.xaxis.position && (this.xAxisoffX = s3.globals.gridHeight), this.drawnLabels = [], this.axesUtils = new C2(e4);
    }
    return r2(t3, [{ key: "drawYaxis", value: function(t4) {
      var e4 = this, i3 = this.w, a3 = new m2(this.ctx), s3 = i3.config.yaxis[t4].labels.style, r3 = s3.fontSize, o3 = s3.fontFamily, n3 = s3.fontWeight, l3 = a3.group({ class: "apexcharts-yaxis", rel: t4, transform: "translate(" + i3.globals.translateYAxisX[t4] + ", 0)" });
      if (this.axesUtils.isYAxisHidden(t4))
        return l3;
      var h3 = a3.group({ class: "apexcharts-yaxis-texts-g" });
      l3.add(h3);
      var c3 = i3.globals.yAxisScale[t4].result.length - 1, d3 = i3.globals.gridHeight / c3, g3 = i3.globals.translateY, u3 = i3.globals.yLabelFormatters[t4], p3 = i3.globals.yAxisScale[t4].result.slice();
      p3 = this.axesUtils.checkForReversedLabels(t4, p3);
      var f3 = "";
      if (i3.config.yaxis[t4].labels.show)
        for (var x3 = function(l4) {
          var x4 = p3[l4];
          x4 = u3(x4, l4, i3);
          var b4 = i3.config.yaxis[t4].labels.padding;
          i3.config.yaxis[t4].opposite && 0 !== i3.config.yaxis.length && (b4 *= -1);
          var v4 = "end";
          i3.config.yaxis[t4].opposite && (v4 = "start"), "left" === i3.config.yaxis[t4].labels.align ? v4 = "start" : "center" === i3.config.yaxis[t4].labels.align ? v4 = "middle" : "right" === i3.config.yaxis[t4].labels.align && (v4 = "end");
          var m3 = e4.axesUtils.getYAxisForeColor(s3.colors, t4), y4 = i3.config.yaxis[t4].labels.offsetY;
          "heatmap" === i3.config.chart.type && (y4 -= (i3.globals.gridHeight / i3.globals.series.length - 1) / 2);
          var w4 = a3.drawText({ x: b4, y: g3 + c3 / 10 + y4 + 1, text: x4, textAnchor: v4, fontSize: r3, fontFamily: o3, fontWeight: n3, maxWidth: i3.config.yaxis[t4].labels.maxWidth, foreColor: Array.isArray(m3) ? m3[l4] : m3, isPlainText: false, cssClass: "apexcharts-yaxis-label " + s3.cssClass });
          l4 === c3 && (f3 = w4), h3.add(w4);
          var k4 = document.createElementNS(i3.globals.SVGNS, "title");
          if (k4.textContent = Array.isArray(x4) ? x4.join(" ") : x4, w4.node.appendChild(k4), 0 !== i3.config.yaxis[t4].labels.rotate) {
            var A7 = a3.rotateAroundCenter(f3.node), S4 = a3.rotateAroundCenter(w4.node);
            w4.node.setAttribute("transform", "rotate(".concat(i3.config.yaxis[t4].labels.rotate, " ").concat(A7.x, " ").concat(S4.y, ")"));
          }
          g3 += d3;
        }, b3 = c3; b3 >= 0; b3--)
          x3(b3);
      if (void 0 !== i3.config.yaxis[t4].title.text) {
        var v3 = a3.group({ class: "apexcharts-yaxis-title" }), y3 = 0;
        i3.config.yaxis[t4].opposite && (y3 = i3.globals.translateYAxisX[t4]);
        var w3 = a3.drawText({ x: y3, y: i3.globals.gridHeight / 2 + i3.globals.translateY + i3.config.yaxis[t4].title.offsetY, text: i3.config.yaxis[t4].title.text, textAnchor: "end", foreColor: i3.config.yaxis[t4].title.style.color, fontSize: i3.config.yaxis[t4].title.style.fontSize, fontWeight: i3.config.yaxis[t4].title.style.fontWeight, fontFamily: i3.config.yaxis[t4].title.style.fontFamily, cssClass: "apexcharts-yaxis-title-text " + i3.config.yaxis[t4].title.style.cssClass });
        v3.add(w3), l3.add(v3);
      }
      var k3 = i3.config.yaxis[t4].axisBorder, A6 = 31 + k3.offsetX;
      if (i3.config.yaxis[t4].opposite && (A6 = -31 - k3.offsetX), k3.show) {
        var S3 = a3.drawLine(A6, i3.globals.translateY + k3.offsetY - 2, A6, i3.globals.gridHeight + i3.globals.translateY + k3.offsetY + 2, k3.color, 0, k3.width);
        l3.add(S3);
      }
      return i3.config.yaxis[t4].axisTicks.show && this.axesUtils.drawYAxisTicks(A6, c3, k3, i3.config.yaxis[t4].axisTicks, t4, d3, l3), l3;
    } }, { key: "drawYaxisInversed", value: function(t4) {
      var e4 = this.w, i3 = new m2(this.ctx), a3 = i3.group({ class: "apexcharts-xaxis apexcharts-yaxis-inversed" }), s3 = i3.group({ class: "apexcharts-xaxis-texts-g", transform: "translate(".concat(e4.globals.translateXAxisX, ", ").concat(e4.globals.translateXAxisY, ")") });
      a3.add(s3);
      var r3 = e4.globals.yAxisScale[t4].result.length - 1, o3 = e4.globals.gridWidth / r3 + 0.1, n3 = o3 + e4.config.xaxis.labels.offsetX, l3 = e4.globals.xLabelFormatter, h3 = e4.globals.yAxisScale[t4].result.slice(), c3 = e4.globals.timescaleLabels;
      c3.length > 0 && (this.xaxisLabels = c3.slice(), r3 = (h3 = c3.slice()).length), h3 = this.axesUtils.checkForReversedLabels(t4, h3);
      var d3 = c3.length;
      if (e4.config.xaxis.labels.show)
        for (var g3 = d3 ? 0 : r3; d3 ? g3 < d3 : g3 >= 0; d3 ? g3++ : g3--) {
          var u3 = h3[g3];
          u3 = l3(u3, g3, e4);
          var p3 = e4.globals.gridWidth + e4.globals.padHorizontal - (n3 - o3 + e4.config.xaxis.labels.offsetX);
          if (c3.length) {
            var f3 = this.axesUtils.getLabel(h3, c3, p3, g3, this.drawnLabels, this.xaxisFontSize);
            p3 = f3.x, u3 = f3.text, this.drawnLabels.push(f3.text), 0 === g3 && e4.globals.skipFirstTimelinelabel && (u3 = ""), g3 === h3.length - 1 && e4.globals.skipLastTimelinelabel && (u3 = "");
          }
          var x3 = i3.drawText({ x: p3, y: this.xAxisoffX + e4.config.xaxis.labels.offsetY + 30 - ("top" === e4.config.xaxis.position ? e4.globals.xAxisHeight + e4.config.xaxis.axisTicks.height - 2 : 0), text: u3, textAnchor: "middle", foreColor: Array.isArray(this.xaxisForeColors) ? this.xaxisForeColors[t4] : this.xaxisForeColors, fontSize: this.xaxisFontSize, fontFamily: this.xaxisFontFamily, fontWeight: e4.config.xaxis.labels.style.fontWeight, isPlainText: false, cssClass: "apexcharts-xaxis-label " + e4.config.xaxis.labels.style.cssClass });
          s3.add(x3), x3.tspan(u3);
          var b3 = document.createElementNS(e4.globals.SVGNS, "title");
          b3.textContent = u3, x3.node.appendChild(b3), n3 += o3;
        }
      return this.inversedYAxisTitleText(a3), this.inversedYAxisBorder(a3), a3;
    } }, { key: "inversedYAxisBorder", value: function(t4) {
      var e4 = this.w, i3 = new m2(this.ctx), a3 = e4.config.xaxis.axisBorder;
      if (a3.show) {
        var s3 = 0;
        "bar" === e4.config.chart.type && e4.globals.isXNumeric && (s3 -= 15);
        var r3 = i3.drawLine(e4.globals.padHorizontal + s3 + a3.offsetX, this.xAxisoffX, e4.globals.gridWidth, this.xAxisoffX, a3.color, 0, a3.height);
        this.elgrid && this.elgrid.elGridBorders && e4.config.grid.show ? this.elgrid.elGridBorders.add(r3) : t4.add(r3);
      }
    } }, { key: "inversedYAxisTitleText", value: function(t4) {
      var e4 = this.w, i3 = new m2(this.ctx);
      if (void 0 !== e4.config.xaxis.title.text) {
        var a3 = i3.group({ class: "apexcharts-xaxis-title apexcharts-yaxis-title-inversed" }), s3 = i3.drawText({ x: e4.globals.gridWidth / 2 + e4.config.xaxis.title.offsetX, y: this.xAxisoffX + parseFloat(this.xaxisFontSize) + parseFloat(e4.config.xaxis.title.style.fontSize) + e4.config.xaxis.title.offsetY + 20, text: e4.config.xaxis.title.text, textAnchor: "middle", fontSize: e4.config.xaxis.title.style.fontSize, fontFamily: e4.config.xaxis.title.style.fontFamily, fontWeight: e4.config.xaxis.title.style.fontWeight, foreColor: e4.config.xaxis.title.style.color, cssClass: "apexcharts-xaxis-title-text " + e4.config.xaxis.title.style.cssClass });
        a3.add(s3), t4.add(a3);
      }
    } }, { key: "yAxisTitleRotate", value: function(t4, e4) {
      var i3 = this.w, a3 = new m2(this.ctx), s3 = { width: 0, height: 0 }, r3 = { width: 0, height: 0 }, o3 = i3.globals.dom.baseEl.querySelector(" .apexcharts-yaxis[rel='".concat(t4, "'] .apexcharts-yaxis-texts-g"));
      null !== o3 && (s3 = o3.getBoundingClientRect());
      var n3 = i3.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(t4, "'] .apexcharts-yaxis-title text"));
      if (null !== n3 && (r3 = n3.getBoundingClientRect()), null !== n3) {
        var l3 = this.xPaddingForYAxisTitle(t4, s3, r3, e4);
        n3.setAttribute("x", l3.xPos - (e4 ? 10 : 0));
      }
      if (null !== n3) {
        var h3 = a3.rotateAroundCenter(n3);
        n3.setAttribute("transform", "rotate(".concat(e4 ? -1 * i3.config.yaxis[t4].title.rotate : i3.config.yaxis[t4].title.rotate, " ").concat(h3.x, " ").concat(h3.y, ")"));
      }
    } }, { key: "xPaddingForYAxisTitle", value: function(t4, e4, i3, a3) {
      var s3 = this.w, r3 = 0, o3 = 0, n3 = 10;
      return void 0 === s3.config.yaxis[t4].title.text || t4 < 0 ? { xPos: o3, padd: 0 } : (a3 ? (o3 = e4.width + s3.config.yaxis[t4].title.offsetX + i3.width / 2 + n3 / 2, 0 === (r3 += 1) && (o3 -= n3 / 2)) : (o3 = -1 * e4.width + s3.config.yaxis[t4].title.offsetX + n3 / 2 + i3.width / 2, s3.globals.isBarHorizontal && (n3 = 25, o3 = -1 * e4.width - s3.config.yaxis[t4].title.offsetX - n3)), { xPos: o3, padd: n3 });
    } }, { key: "setYAxisXPosition", value: function(t4, e4) {
      var i3 = this.w, a3 = 0, s3 = 0, r3 = 18, o3 = 1;
      i3.config.yaxis.length > 1 && (this.multipleYs = true), i3.config.yaxis.map(function(n3, l3) {
        var h3 = i3.globals.ignoreYAxisIndexes.indexOf(l3) > -1 || !n3.show || n3.floating || 0 === t4[l3].width, c3 = t4[l3].width + e4[l3].width;
        n3.opposite ? i3.globals.isBarHorizontal ? (s3 = i3.globals.gridWidth + i3.globals.translateX - 1, i3.globals.translateYAxisX[l3] = s3 - n3.labels.offsetX) : (s3 = i3.globals.gridWidth + i3.globals.translateX + o3, h3 || (o3 = o3 + c3 + 20), i3.globals.translateYAxisX[l3] = s3 - n3.labels.offsetX + 20) : (a3 = i3.globals.translateX - r3, h3 || (r3 = r3 + c3 + 20), i3.globals.translateYAxisX[l3] = a3 + n3.labels.offsetX);
      });
    } }, { key: "setYAxisTextAlignments", value: function() {
      var t4 = this.w, e4 = t4.globals.dom.baseEl.getElementsByClassName("apexcharts-yaxis");
      (e4 = x2.listToArray(e4)).forEach(function(e6, i3) {
        var a3 = t4.config.yaxis[i3];
        if (a3 && !a3.floating && void 0 !== a3.labels.align) {
          var s3 = t4.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(i3, "'] .apexcharts-yaxis-texts-g")), r3 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis[rel='".concat(i3, "'] .apexcharts-yaxis-label"));
          r3 = x2.listToArray(r3);
          var o3 = s3.getBoundingClientRect();
          "left" === a3.labels.align ? (r3.forEach(function(t5, e7) {
            t5.setAttribute("text-anchor", "start");
          }), a3.opposite || s3.setAttribute("transform", "translate(-".concat(o3.width, ", 0)"))) : "center" === a3.labels.align ? (r3.forEach(function(t5, e7) {
            t5.setAttribute("text-anchor", "middle");
          }), s3.setAttribute("transform", "translate(".concat(o3.width / 2 * (a3.opposite ? 1 : -1), ", 0)"))) : "right" === a3.labels.align && (r3.forEach(function(t5, e7) {
            t5.setAttribute("text-anchor", "end");
          }), a3.opposite && s3.setAttribute("transform", "translate(".concat(o3.width, ", 0)")));
        }
      });
    } }]), t3;
  }(), Z3 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.documentEvent = x2.bind(this.documentEvent, this);
    }
    return r2(t3, [{ key: "addEventListener", value: function(t4, e4) {
      var i3 = this.w;
      i3.globals.events.hasOwnProperty(t4) ? i3.globals.events[t4].push(e4) : i3.globals.events[t4] = [e4];
    } }, { key: "removeEventListener", value: function(t4, e4) {
      var i3 = this.w;
      if (i3.globals.events.hasOwnProperty(t4)) {
        var a3 = i3.globals.events[t4].indexOf(e4);
        -1 !== a3 && i3.globals.events[t4].splice(a3, 1);
      }
    } }, { key: "fireEvent", value: function(t4, e4) {
      var i3 = this.w;
      if (i3.globals.events.hasOwnProperty(t4)) {
        e4 && e4.length || (e4 = []);
        for (var a3 = i3.globals.events[t4], s3 = a3.length, r3 = 0; r3 < s3; r3++)
          a3[r3].apply(null, e4);
      }
    } }, { key: "setupEventHandlers", value: function() {
      var t4 = this, e4 = this.w, i3 = this.ctx, a3 = e4.globals.dom.baseEl.querySelector(e4.globals.chartClass);
      this.ctx.eventList.forEach(function(t5) {
        a3.addEventListener(t5, function(t6) {
          var a4 = Object.assign({}, e4, { seriesIndex: e4.globals.capturedSeriesIndex, dataPointIndex: e4.globals.capturedDataPointIndex });
          "mousemove" === t6.type || "touchmove" === t6.type ? "function" == typeof e4.config.chart.events.mouseMove && e4.config.chart.events.mouseMove(t6, i3, a4) : "mouseleave" === t6.type || "touchleave" === t6.type ? "function" == typeof e4.config.chart.events.mouseLeave && e4.config.chart.events.mouseLeave(t6, i3, a4) : ("mouseup" === t6.type && 1 === t6.which || "touchend" === t6.type) && ("function" == typeof e4.config.chart.events.click && e4.config.chart.events.click(t6, i3, a4), i3.ctx.events.fireEvent("click", [t6, i3, a4]));
        }, { capture: false, passive: true });
      }), this.ctx.eventList.forEach(function(i4) {
        e4.globals.dom.baseEl.addEventListener(i4, t4.documentEvent, { passive: true });
      }), this.ctx.core.setupBrushHandler();
    } }, { key: "documentEvent", value: function(t4) {
      var e4 = this.w, i3 = t4.target.className;
      if ("click" === t4.type) {
        var a3 = e4.globals.dom.baseEl.querySelector(".apexcharts-menu");
        a3 && a3.classList.contains("apexcharts-menu-open") && "apexcharts-menu-icon" !== i3 && a3.classList.remove("apexcharts-menu-open");
      }
      e4.globals.clientX = "touchmove" === t4.type ? t4.touches[0].clientX : t4.clientX, e4.globals.clientY = "touchmove" === t4.type ? t4.touches[0].clientY : t4.clientY;
    } }]), t3;
  }(), $ = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "setCurrentLocaleValues", value: function(t4) {
      var e4 = this.w.config.chart.locales;
      window.Apex.chart && window.Apex.chart.locales && window.Apex.chart.locales.length > 0 && (e4 = this.w.config.chart.locales.concat(window.Apex.chart.locales));
      var i3 = e4.filter(function(e6) {
        return e6.name === t4;
      })[0];
      if (!i3)
        throw new Error("Wrong locale name provided. Please make sure you set the correct locale name in options");
      var a3 = x2.extend(M2, i3);
      this.w.globals.locale = a3.options;
    } }]), t3;
  }(), J2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "drawAxis", value: function(t4, e4) {
      var i3, a3, s3 = this, r3 = this.w.globals, o3 = this.w.config, n3 = new V2(this.ctx, e4), l3 = new q2(this.ctx, e4);
      r3.axisCharts && "radar" !== t4 && (r3.isBarHorizontal ? (a3 = l3.drawYaxisInversed(0), i3 = n3.drawXaxisInversed(0), r3.dom.elGraphical.add(i3), r3.dom.elGraphical.add(a3)) : (i3 = n3.drawXaxis(), r3.dom.elGraphical.add(i3), o3.yaxis.map(function(t5, e6) {
        if (-1 === r3.ignoreYAxisIndexes.indexOf(e6) && (a3 = l3.drawYaxis(e6), r3.dom.Paper.add(a3), "back" === s3.w.config.grid.position)) {
          var i4 = r3.dom.Paper.children()[1];
          i4.remove(), r3.dom.Paper.add(i4);
        }
      })));
    } }]), t3;
  }(), Q2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "drawXCrosshairs", value: function() {
      var t4 = this.w, e4 = new m2(this.ctx), i3 = new v2(this.ctx), a3 = t4.config.xaxis.crosshairs.fill.gradient, s3 = t4.config.xaxis.crosshairs.dropShadow, r3 = t4.config.xaxis.crosshairs.fill.type, o3 = a3.colorFrom, n3 = a3.colorTo, l3 = a3.opacityFrom, h3 = a3.opacityTo, c3 = a3.stops, d3 = s3.enabled, g3 = s3.left, u3 = s3.top, p3 = s3.blur, f3 = s3.color, b3 = s3.opacity, y3 = t4.config.xaxis.crosshairs.fill.color;
      if (t4.config.xaxis.crosshairs.show) {
        "gradient" === r3 && (y3 = e4.drawGradient("vertical", o3, n3, l3, h3, null, c3, null));
        var w3 = e4.drawRect();
        1 === t4.config.xaxis.crosshairs.width && (w3 = e4.drawLine());
        var k3 = t4.globals.gridHeight;
        (!x2.isNumber(k3) || k3 < 0) && (k3 = 0);
        var A6 = t4.config.xaxis.crosshairs.width;
        (!x2.isNumber(A6) || A6 < 0) && (A6 = 0), w3.attr({ class: "apexcharts-xcrosshairs", x: 0, y: 0, y2: k3, width: A6, height: k3, fill: y3, filter: "none", "fill-opacity": t4.config.xaxis.crosshairs.opacity, stroke: t4.config.xaxis.crosshairs.stroke.color, "stroke-width": t4.config.xaxis.crosshairs.stroke.width, "stroke-dasharray": t4.config.xaxis.crosshairs.stroke.dashArray }), d3 && (w3 = i3.dropShadow(w3, { left: g3, top: u3, blur: p3, color: f3, opacity: b3 })), t4.globals.dom.elGraphical.add(w3);
      }
    } }, { key: "drawYCrosshairs", value: function() {
      var t4 = this.w, e4 = new m2(this.ctx), i3 = t4.config.yaxis[0].crosshairs, a3 = t4.globals.barPadForNumericAxis;
      if (t4.config.yaxis[0].crosshairs.show) {
        var s3 = e4.drawLine(-a3, 0, t4.globals.gridWidth + a3, 0, i3.stroke.color, i3.stroke.dashArray, i3.stroke.width);
        s3.attr({ class: "apexcharts-ycrosshairs" }), t4.globals.dom.elGraphical.add(s3);
      }
      var r3 = e4.drawLine(-a3, 0, t4.globals.gridWidth + a3, 0, i3.stroke.color, 0, 0);
      r3.attr({ class: "apexcharts-ycrosshairs-hidden" }), t4.globals.dom.elGraphical.add(r3);
    } }]), t3;
  }(), K2 = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "checkResponsiveConfig", value: function(t4) {
      var e4 = this, i3 = this.w, a3 = i3.config;
      if (0 !== a3.responsive.length) {
        var s3 = a3.responsive.slice();
        s3.sort(function(t5, e6) {
          return t5.breakpoint > e6.breakpoint ? 1 : e6.breakpoint > t5.breakpoint ? -1 : 0;
        }).reverse();
        var r3 = new Y3({}), o3 = function() {
          var t5 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, a4 = s3[0].breakpoint, o4 = window.innerWidth > 0 ? window.innerWidth : screen.width;
          if (o4 > a4) {
            var n4 = y2.extendArrayProps(r3, i3.globals.initialConfig, i3);
            t5 = x2.extend(n4, t5), t5 = x2.extend(i3.config, t5), e4.overrideResponsiveOptions(t5);
          } else
            for (var l3 = 0; l3 < s3.length; l3++)
              o4 < s3[l3].breakpoint && (t5 = y2.extendArrayProps(r3, s3[l3].options, i3), t5 = x2.extend(i3.config, t5), e4.overrideResponsiveOptions(t5));
        };
        if (t4) {
          var n3 = y2.extendArrayProps(r3, t4, i3);
          n3 = x2.extend(i3.config, n3), o3(n3 = x2.extend(n3, t4));
        } else
          o3({});
      }
    } }, { key: "overrideResponsiveOptions", value: function(t4) {
      var e4 = new Y3(t4).init({ responsiveOverride: true });
      this.w.config = e4;
    } }]), t3;
  }(), tt = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.colors = [], this.w = e4.w;
      var i3 = this.w;
      this.isColorFn = false, this.isHeatmapDistributed = "treemap" === i3.config.chart.type && i3.config.plotOptions.treemap.distributed || "heatmap" === i3.config.chart.type && i3.config.plotOptions.heatmap.distributed, this.isBarDistributed = i3.config.plotOptions.bar.distributed && ("bar" === i3.config.chart.type || "rangeBar" === i3.config.chart.type);
    }
    return r2(t3, [{ key: "init", value: function() {
      this.setDefaultColors();
    } }, { key: "setDefaultColors", value: function() {
      var t4, e4 = this, i3 = this.w, a3 = new x2();
      if (i3.globals.dom.elWrap.classList.add("apexcharts-theme-".concat(i3.config.theme.mode)), void 0 === i3.config.colors || 0 === (null === (t4 = i3.config.colors) || void 0 === t4 ? void 0 : t4.length) ? i3.globals.colors = this.predefined() : (i3.globals.colors = i3.config.colors, Array.isArray(i3.config.colors) && i3.config.colors.length > 0 && "function" == typeof i3.config.colors[0] && (i3.globals.colors = i3.config.series.map(function(t5, a4) {
        var s4 = i3.config.colors[a4];
        return s4 || (s4 = i3.config.colors[0]), "function" == typeof s4 ? (e4.isColorFn = true, s4({ value: i3.globals.axisCharts ? i3.globals.series[a4][0] ? i3.globals.series[a4][0] : 0 : i3.globals.series[a4], seriesIndex: a4, dataPointIndex: a4, w: i3 })) : s4;
      }))), i3.globals.seriesColors.map(function(t5, e6) {
        t5 && (i3.globals.colors[e6] = t5);
      }), i3.config.theme.monochrome.enabled) {
        var s3 = [], r3 = i3.globals.series.length;
        (this.isBarDistributed || this.isHeatmapDistributed) && (r3 = i3.globals.series[0].length * i3.globals.series.length);
        for (var o3 = i3.config.theme.monochrome.color, n3 = 1 / (r3 / i3.config.theme.monochrome.shadeIntensity), l3 = i3.config.theme.monochrome.shadeTo, h3 = 0, c3 = 0; c3 < r3; c3++) {
          var d3 = void 0;
          "dark" === l3 ? (d3 = a3.shadeColor(-1 * h3, o3), h3 += n3) : (d3 = a3.shadeColor(h3, o3), h3 += n3), s3.push(d3);
        }
        i3.globals.colors = s3.slice();
      }
      var g3 = i3.globals.colors.slice();
      this.pushExtraColors(i3.globals.colors);
      ["fill", "stroke"].forEach(function(t5) {
        void 0 === i3.config[t5].colors ? i3.globals[t5].colors = e4.isColorFn ? i3.config.colors : g3 : i3.globals[t5].colors = i3.config[t5].colors.slice(), e4.pushExtraColors(i3.globals[t5].colors);
      }), void 0 === i3.config.dataLabels.style.colors ? i3.globals.dataLabels.style.colors = g3 : i3.globals.dataLabels.style.colors = i3.config.dataLabels.style.colors.slice(), this.pushExtraColors(i3.globals.dataLabels.style.colors, 50), void 0 === i3.config.plotOptions.radar.polygons.fill.colors ? i3.globals.radarPolygons.fill.colors = ["dark" === i3.config.theme.mode ? "#424242" : "none"] : i3.globals.radarPolygons.fill.colors = i3.config.plotOptions.radar.polygons.fill.colors.slice(), this.pushExtraColors(i3.globals.radarPolygons.fill.colors, 20), void 0 === i3.config.markers.colors ? i3.globals.markers.colors = g3 : i3.globals.markers.colors = i3.config.markers.colors.slice(), this.pushExtraColors(i3.globals.markers.colors);
    } }, { key: "pushExtraColors", value: function(t4, e4) {
      var i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, a3 = this.w, s3 = e4 || a3.globals.series.length;
      if (null === i3 && (i3 = this.isBarDistributed || this.isHeatmapDistributed || "heatmap" === a3.config.chart.type && a3.config.plotOptions.heatmap.colorScale.inverse), i3 && a3.globals.series.length && (s3 = a3.globals.series[a3.globals.maxValsInArrayIndex].length * a3.globals.series.length), t4.length < s3)
        for (var r3 = s3 - t4.length, o3 = 0; o3 < r3; o3++)
          t4.push(t4[o3]);
    } }, { key: "updateThemeOptions", value: function(t4) {
      t4.chart = t4.chart || {}, t4.tooltip = t4.tooltip || {};
      var e4 = t4.theme.mode || "light", i3 = t4.theme.palette ? t4.theme.palette : "dark" === e4 ? "palette4" : "palette1", a3 = t4.chart.foreColor ? t4.chart.foreColor : "dark" === e4 ? "#f6f7f8" : "#373d3f";
      return t4.tooltip.theme = e4, t4.chart.foreColor = a3, t4.theme.palette = i3, t4;
    } }, { key: "predefined", value: function() {
      switch (this.w.config.theme.palette) {
        case "palette1":
        default:
          this.colors = ["#008FFB", "#00E396", "#FEB019", "#FF4560", "#775DD0"];
          break;
        case "palette2":
          this.colors = ["#3f51b5", "#03a9f4", "#4caf50", "#f9ce1d", "#FF9800"];
          break;
        case "palette3":
          this.colors = ["#33b2df", "#546E7A", "#d4526e", "#13d8aa", "#A5978B"];
          break;
        case "palette4":
          this.colors = ["#4ecdc4", "#c7f464", "#81D4FA", "#fd6a6a", "#546E7A"];
          break;
        case "palette5":
          this.colors = ["#2b908f", "#f9a3a4", "#90ee7e", "#fa4443", "#69d2e7"];
          break;
        case "palette6":
          this.colors = ["#449DD1", "#F86624", "#EA3546", "#662E9B", "#C5D86D"];
          break;
        case "palette7":
          this.colors = ["#D7263D", "#1B998B", "#2E294E", "#F46036", "#E2C044"];
          break;
        case "palette8":
          this.colors = ["#662E9B", "#F86624", "#F9C80E", "#EA3546", "#43BCCD"];
          break;
        case "palette9":
          this.colors = ["#5C4742", "#A5978B", "#8D5B4C", "#5A2A27", "#C4BBAF"];
          break;
        case "palette10":
          this.colors = ["#A300D6", "#7D02EB", "#5653FE", "#2983FF", "#00B1F2"];
      }
      return this.colors;
    } }]), t3;
  }(), et = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "draw", value: function() {
      this.drawTitleSubtitle("title"), this.drawTitleSubtitle("subtitle");
    } }, { key: "drawTitleSubtitle", value: function(t4) {
      var e4 = this.w, i3 = "title" === t4 ? e4.config.title : e4.config.subtitle, a3 = e4.globals.svgWidth / 2, s3 = i3.offsetY, r3 = "middle";
      if ("left" === i3.align ? (a3 = 10, r3 = "start") : "right" === i3.align && (a3 = e4.globals.svgWidth - 10, r3 = "end"), a3 += i3.offsetX, s3 = s3 + parseInt(i3.style.fontSize, 10) + i3.margin / 2, void 0 !== i3.text) {
        var o3 = new m2(this.ctx).drawText({ x: a3, y: s3, text: i3.text, textAnchor: r3, fontSize: i3.style.fontSize, fontFamily: i3.style.fontFamily, fontWeight: i3.style.fontWeight, foreColor: i3.style.color, opacity: 1 });
        o3.node.setAttribute("class", "apexcharts-".concat(t4, "-text")), e4.globals.dom.Paper.add(o3);
      }
    } }]), t3;
  }(), it = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.dCtx = e4;
    }
    return r2(t3, [{ key: "getTitleSubtitleCoords", value: function(t4) {
      var e4 = this.w, i3 = 0, a3 = 0, s3 = "title" === t4 ? e4.config.title.floating : e4.config.subtitle.floating, r3 = e4.globals.dom.baseEl.querySelector(".apexcharts-".concat(t4, "-text"));
      if (null !== r3 && !s3) {
        var o3 = r3.getBoundingClientRect();
        i3 = o3.width, a3 = e4.globals.axisCharts ? o3.height + 5 : o3.height;
      }
      return { width: i3, height: a3 };
    } }, { key: "getLegendsRect", value: function() {
      var t4 = this.w, e4 = t4.globals.dom.elLegendWrap;
      t4.config.legend.height || "top" !== t4.config.legend.position && "bottom" !== t4.config.legend.position || (e4.style.maxHeight = t4.globals.svgHeight / 2 + "px");
      var i3 = Object.assign({}, x2.getBoundingClientRect(e4));
      return null !== e4 && !t4.config.legend.floating && t4.config.legend.show ? this.dCtx.lgRect = { x: i3.x, y: i3.y, height: i3.height, width: 0 === i3.height ? 0 : i3.width } : this.dCtx.lgRect = { x: 0, y: 0, height: 0, width: 0 }, "left" !== t4.config.legend.position && "right" !== t4.config.legend.position || 1.5 * this.dCtx.lgRect.width > t4.globals.svgWidth && (this.dCtx.lgRect.width = t4.globals.svgWidth / 1.5), this.dCtx.lgRect;
    } }, { key: "getLargestStringFromMultiArr", value: function(t4, e4) {
      var i3 = t4;
      if (this.w.globals.isMultiLineX) {
        var a3 = e4.map(function(t5, e6) {
          return Array.isArray(t5) ? t5.length : 1;
        }), s3 = Math.max.apply(Math, u2(a3));
        i3 = e4[a3.indexOf(s3)];
      }
      return i3;
    } }]), t3;
  }(), at = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.dCtx = e4;
    }
    return r2(t3, [{ key: "getxAxisLabelsCoords", value: function() {
      var t4, e4 = this.w, i3 = e4.globals.labels.slice();
      if (e4.config.xaxis.convertedCatToNumeric && 0 === i3.length && (i3 = e4.globals.categoryLabels), e4.globals.timescaleLabels.length > 0) {
        var a3 = this.getxAxisTimeScaleLabelsCoords();
        t4 = { width: a3.width, height: a3.height }, e4.globals.rotateXLabels = false;
      } else {
        this.dCtx.lgWidthForSideLegends = "left" !== e4.config.legend.position && "right" !== e4.config.legend.position || e4.config.legend.floating ? 0 : this.dCtx.lgRect.width;
        var s3 = e4.globals.xLabelFormatter, r3 = x2.getLargestStringFromArr(i3), o3 = this.dCtx.dimHelpers.getLargestStringFromMultiArr(r3, i3);
        e4.globals.isBarHorizontal && (o3 = r3 = e4.globals.yAxisScale[0].result.reduce(function(t5, e6) {
          return t5.length > e6.length ? t5 : e6;
        }, 0));
        var n3 = new S2(this.dCtx.ctx), l3 = r3;
        r3 = n3.xLabelFormat(s3, r3, l3, { i: void 0, dateFormatter: new A5(this.dCtx.ctx).formatDate, w: e4 }), o3 = n3.xLabelFormat(s3, o3, l3, { i: void 0, dateFormatter: new A5(this.dCtx.ctx).formatDate, w: e4 }), (e4.config.xaxis.convertedCatToNumeric && void 0 === r3 || "" === String(r3).trim()) && (o3 = r3 = "1");
        var h3 = new m2(this.dCtx.ctx), c3 = h3.getTextRects(r3, e4.config.xaxis.labels.style.fontSize), d3 = c3;
        if (r3 !== o3 && (d3 = h3.getTextRects(o3, e4.config.xaxis.labels.style.fontSize)), (t4 = { width: c3.width >= d3.width ? c3.width : d3.width, height: c3.height >= d3.height ? c3.height : d3.height }).width * i3.length > e4.globals.svgWidth - this.dCtx.lgWidthForSideLegends - this.dCtx.yAxisWidth - this.dCtx.gridPad.left - this.dCtx.gridPad.right && 0 !== e4.config.xaxis.labels.rotate || e4.config.xaxis.labels.rotateAlways) {
          if (!e4.globals.isBarHorizontal) {
            e4.globals.rotateXLabels = true;
            var g3 = function(t5) {
              return h3.getTextRects(t5, e4.config.xaxis.labels.style.fontSize, e4.config.xaxis.labels.style.fontFamily, "rotate(".concat(e4.config.xaxis.labels.rotate, " 0 0)"), false);
            };
            c3 = g3(r3), r3 !== o3 && (d3 = g3(o3)), t4.height = (c3.height > d3.height ? c3.height : d3.height) / 1.5, t4.width = c3.width > d3.width ? c3.width : d3.width;
          }
        } else
          e4.globals.rotateXLabels = false;
      }
      return e4.config.xaxis.labels.show || (t4 = { width: 0, height: 0 }), { width: t4.width, height: t4.height };
    } }, { key: "getxAxisGroupLabelsCoords", value: function() {
      var t4, e4 = this.w;
      if (!e4.globals.hasXaxisGroups)
        return { width: 0, height: 0 };
      var i3, a3 = (null === (t4 = e4.config.xaxis.group.style) || void 0 === t4 ? void 0 : t4.fontSize) || e4.config.xaxis.labels.style.fontSize, s3 = e4.globals.groups.map(function(t5) {
        return t5.title;
      }), r3 = x2.getLargestStringFromArr(s3), o3 = this.dCtx.dimHelpers.getLargestStringFromMultiArr(r3, s3), n3 = new m2(this.dCtx.ctx), l3 = n3.getTextRects(r3, a3), h3 = l3;
      return r3 !== o3 && (h3 = n3.getTextRects(o3, a3)), i3 = { width: l3.width >= h3.width ? l3.width : h3.width, height: l3.height >= h3.height ? l3.height : h3.height }, e4.config.xaxis.labels.show || (i3 = { width: 0, height: 0 }), { width: i3.width, height: i3.height };
    } }, { key: "getxAxisTitleCoords", value: function() {
      var t4 = this.w, e4 = 0, i3 = 0;
      if (void 0 !== t4.config.xaxis.title.text) {
        var a3 = new m2(this.dCtx.ctx).getTextRects(t4.config.xaxis.title.text, t4.config.xaxis.title.style.fontSize);
        e4 = a3.width, i3 = a3.height;
      }
      return { width: e4, height: i3 };
    } }, { key: "getxAxisTimeScaleLabelsCoords", value: function() {
      var t4, e4 = this.w;
      this.dCtx.timescaleLabels = e4.globals.timescaleLabels.slice();
      var i3 = this.dCtx.timescaleLabels.map(function(t5) {
        return t5.value;
      }), a3 = i3.reduce(function(t5, e6) {
        return void 0 === t5 ? (console.error("You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"), 0) : t5.length > e6.length ? t5 : e6;
      }, 0);
      return 1.05 * (t4 = new m2(this.dCtx.ctx).getTextRects(a3, e4.config.xaxis.labels.style.fontSize)).width * i3.length > e4.globals.gridWidth && 0 !== e4.config.xaxis.labels.rotate && (e4.globals.overlappingXLabels = true), t4;
    } }, { key: "additionalPaddingXLabels", value: function(t4) {
      var e4 = this, i3 = this.w, a3 = i3.globals, s3 = i3.config, r3 = s3.xaxis.type, o3 = t4.width;
      a3.skipLastTimelinelabel = false, a3.skipFirstTimelinelabel = false;
      var n3 = i3.config.yaxis[0].opposite && i3.globals.isBarHorizontal, l3 = function(t5, n4) {
        s3.yaxis.length > 1 && function(t6) {
          return -1 !== a3.collapsedSeriesIndices.indexOf(t6);
        }(n4) || function(t6) {
          if (e4.dCtx.timescaleLabels && e4.dCtx.timescaleLabels.length) {
            var n5 = e4.dCtx.timescaleLabels[0], l4 = e4.dCtx.timescaleLabels[e4.dCtx.timescaleLabels.length - 1].position + o3 / 1.75 - e4.dCtx.yAxisWidthRight, h3 = n5.position - o3 / 1.75 + e4.dCtx.yAxisWidthLeft, c3 = "right" === i3.config.legend.position && e4.dCtx.lgRect.width > 0 ? e4.dCtx.lgRect.width : 0;
            l4 > a3.svgWidth - a3.translateX - c3 && (a3.skipLastTimelinelabel = true), h3 < -(t6.show && !t6.floating || "bar" !== s3.chart.type && "candlestick" !== s3.chart.type && "rangeBar" !== s3.chart.type && "boxPlot" !== s3.chart.type ? 10 : o3 / 1.75) && (a3.skipFirstTimelinelabel = true);
          } else
            "datetime" === r3 ? e4.dCtx.gridPad.right < o3 && !a3.rotateXLabels && (a3.skipLastTimelinelabel = true) : "datetime" !== r3 && e4.dCtx.gridPad.right < o3 / 2 - e4.dCtx.yAxisWidthRight && !a3.rotateXLabels && !i3.config.xaxis.labels.trim && ("between" !== i3.config.xaxis.tickPlacement || i3.globals.isBarHorizontal) && (e4.dCtx.xPadRight = o3 / 2 + 1);
        }(t5);
      };
      s3.yaxis.forEach(function(t5, i4) {
        n3 ? (e4.dCtx.gridPad.left < o3 && (e4.dCtx.xPadLeft = o3 / 2 + 1), e4.dCtx.xPadRight = o3 / 2 + 1) : l3(t5, i4);
      });
    } }]), t3;
  }(), st = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.dCtx = e4;
    }
    return r2(t3, [{ key: "getyAxisLabelsCoords", value: function() {
      var t4 = this, e4 = this.w, i3 = [], a3 = 10, s3 = new C2(this.dCtx.ctx);
      return e4.config.yaxis.map(function(r3, o3) {
        var n3 = { seriesIndex: o3, dataPointIndex: -1, w: e4 }, l3 = e4.globals.yAxisScale[o3], h3 = 0;
        if (!s3.isYAxisHidden(o3) && r3.labels.show && void 0 !== r3.labels.minWidth && (h3 = r3.labels.minWidth), !s3.isYAxisHidden(o3) && r3.labels.show && l3.result.length) {
          var c3 = e4.globals.yLabelFormatters[o3], d3 = l3.niceMin === Number.MIN_VALUE ? 0 : l3.niceMin, g3 = l3.result.reduce(function(t5, e6) {
            var i4, a4;
            return (null === (i4 = String(c3(t5, n3))) || void 0 === i4 ? void 0 : i4.length) > (null === (a4 = String(c3(e6, n3))) || void 0 === a4 ? void 0 : a4.length) ? t5 : e6;
          }, d3), u3 = g3 = c3(g3, n3);
          if (void 0 !== g3 && 0 !== g3.length || (g3 = l3.niceMax), e4.globals.isBarHorizontal) {
            a3 = 0;
            var p3 = e4.globals.labels.slice();
            g3 = x2.getLargestStringFromArr(p3), g3 = c3(g3, { seriesIndex: o3, dataPointIndex: -1, w: e4 }), u3 = t4.dCtx.dimHelpers.getLargestStringFromMultiArr(g3, p3);
          }
          var f3 = new m2(t4.dCtx.ctx), b3 = "rotate(".concat(r3.labels.rotate, " 0 0)"), v3 = f3.getTextRects(g3, r3.labels.style.fontSize, r3.labels.style.fontFamily, b3, false), y3 = v3;
          g3 !== u3 && (y3 = f3.getTextRects(u3, r3.labels.style.fontSize, r3.labels.style.fontFamily, b3, false)), i3.push({ width: (h3 > y3.width || h3 > v3.width ? h3 : y3.width > v3.width ? y3.width : v3.width) + a3, height: y3.height > v3.height ? y3.height : v3.height });
        } else
          i3.push({ width: 0, height: 0 });
      }), i3;
    } }, { key: "getyAxisTitleCoords", value: function() {
      var t4 = this, e4 = this.w, i3 = [];
      return e4.config.yaxis.map(function(e6, a3) {
        if (e6.show && void 0 !== e6.title.text) {
          var s3 = new m2(t4.dCtx.ctx), r3 = "rotate(".concat(e6.title.rotate, " 0 0)"), o3 = s3.getTextRects(e6.title.text, e6.title.style.fontSize, e6.title.style.fontFamily, r3, false);
          i3.push({ width: o3.width, height: o3.height });
        } else
          i3.push({ width: 0, height: 0 });
      }), i3;
    } }, { key: "getTotalYAxisWidth", value: function() {
      var t4 = this.w, e4 = 0, i3 = 0, a3 = 0, s3 = t4.globals.yAxisScale.length > 1 ? 10 : 0, r3 = new C2(this.dCtx.ctx), o3 = function(o4, n3) {
        var l3 = t4.config.yaxis[n3].floating, h3 = 0;
        o4.width > 0 && !l3 ? (h3 = o4.width + s3, function(e6) {
          return t4.globals.ignoreYAxisIndexes.indexOf(e6) > -1;
        }(n3) && (h3 = h3 - o4.width - s3)) : h3 = l3 || r3.isYAxisHidden(n3) ? 0 : 5, t4.config.yaxis[n3].opposite ? a3 += h3 : i3 += h3, e4 += h3;
      };
      return t4.globals.yLabelsCoords.map(function(t5, e6) {
        o3(t5, e6);
      }), t4.globals.yTitleCoords.map(function(t5, e6) {
        o3(t5, e6);
      }), t4.globals.isBarHorizontal && !t4.config.yaxis[0].floating && (e4 = t4.globals.yLabelsCoords[0].width + t4.globals.yTitleCoords[0].width + 15), this.dCtx.yAxisWidthLeft = i3, this.dCtx.yAxisWidthRight = a3, e4;
    } }]), t3;
  }(), rt = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.dCtx = e4;
    }
    return r2(t3, [{ key: "gridPadForColumnsInNumericAxis", value: function(t4) {
      var e4 = this.w;
      if (e4.globals.noData || e4.globals.allSeriesCollapsed)
        return 0;
      var i3 = function(t5) {
        return "bar" === t5 || "rangeBar" === t5 || "candlestick" === t5 || "boxPlot" === t5;
      }, a3 = e4.config.chart.type, s3 = 0, r3 = i3(a3) ? e4.config.series.length : 1;
      if (e4.globals.comboBarCount > 0 && (r3 = e4.globals.comboBarCount), e4.globals.collapsedSeries.forEach(function(t5) {
        i3(t5.type) && (r3 -= 1);
      }), e4.config.chart.stacked && (r3 = 1), (i3(a3) || e4.globals.comboBarCount > 0) && e4.globals.isXNumeric && !e4.globals.isBarHorizontal && r3 > 0) {
        var o3, n3, l3 = Math.abs(e4.globals.initialMaxX - e4.globals.initialMinX);
        l3 <= 3 && (l3 = e4.globals.dataPoints), o3 = l3 / t4, e4.globals.minXDiff && e4.globals.minXDiff / o3 > 0 && (n3 = e4.globals.minXDiff / o3), n3 > t4 / 2 && (n3 /= 2), (s3 = n3 * parseInt(e4.config.plotOptions.bar.columnWidth, 10) / 100) < 1 && (s3 = 1), e4.globals.barPadForNumericAxis = s3;
      }
      return s3;
    } }, { key: "gridPadFortitleSubtitle", value: function() {
      var t4 = this, e4 = this.w, i3 = e4.globals, a3 = this.dCtx.isSparkline || !e4.globals.axisCharts ? 0 : 10;
      ["title", "subtitle"].forEach(function(i4) {
        void 0 !== e4.config[i4].text ? a3 += e4.config[i4].margin : a3 += t4.dCtx.isSparkline || !e4.globals.axisCharts ? 0 : 5;
      }), !e4.config.legend.show || "bottom" !== e4.config.legend.position || e4.config.legend.floating || e4.globals.axisCharts || (a3 += 10);
      var s3 = this.dCtx.dimHelpers.getTitleSubtitleCoords("title"), r3 = this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
      i3.gridHeight = i3.gridHeight - s3.height - r3.height - a3, i3.translateY = i3.translateY + s3.height + r3.height + a3;
    } }, { key: "setGridXPosForDualYAxis", value: function(t4, e4) {
      var i3 = this.w, a3 = new C2(this.dCtx.ctx);
      i3.config.yaxis.map(function(s3, r3) {
        -1 !== i3.globals.ignoreYAxisIndexes.indexOf(r3) || s3.floating || a3.isYAxisHidden(r3) || (s3.opposite && (i3.globals.translateX = i3.globals.translateX - (e4[r3].width + t4[r3].width) - parseInt(i3.config.yaxis[r3].labels.style.fontSize, 10) / 1.2 - 12), i3.globals.translateX < 2 && (i3.globals.translateX = 2));
      });
    } }]), t3;
  }(), ot = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.lgRect = {}, this.yAxisWidth = 0, this.yAxisWidthLeft = 0, this.yAxisWidthRight = 0, this.xAxisHeight = 0, this.isSparkline = this.w.config.chart.sparkline.enabled, this.dimHelpers = new it(this), this.dimYAxis = new st(this), this.dimXAxis = new at(this), this.dimGrid = new rt(this), this.lgWidthForSideLegends = 0, this.gridPad = this.w.config.grid.padding, this.xPadRight = 0, this.xPadLeft = 0;
    }
    return r2(t3, [{ key: "plotCoords", value: function() {
      var t4 = this, e4 = this.w, i3 = e4.globals;
      this.lgRect = this.dimHelpers.getLegendsRect(), this.isSparkline && ((e4.config.markers.discrete.length > 0 || e4.config.markers.size > 0) && Object.entries(this.gridPad).forEach(function(e6) {
        var i4 = g2(e6, 2), a4 = i4[0], s3 = i4[1];
        t4.gridPad[a4] = Math.max(s3, t4.w.globals.markers.largestSize / 1.5);
      }), this.gridPad.top = Math.max(e4.config.stroke.width / 2, this.gridPad.top), this.gridPad.bottom = Math.max(e4.config.stroke.width / 2, this.gridPad.bottom)), i3.axisCharts ? this.setDimensionsForAxisCharts() : this.setDimensionsForNonAxisCharts(), this.dimGrid.gridPadFortitleSubtitle(), i3.gridHeight = i3.gridHeight - this.gridPad.top - this.gridPad.bottom, i3.gridWidth = i3.gridWidth - this.gridPad.left - this.gridPad.right - this.xPadRight - this.xPadLeft;
      var a3 = this.dimGrid.gridPadForColumnsInNumericAxis(i3.gridWidth);
      i3.gridWidth = i3.gridWidth - 2 * a3, i3.translateX = i3.translateX + this.gridPad.left + this.xPadLeft + (a3 > 0 ? a3 + 4 : 0), i3.translateY = i3.translateY + this.gridPad.top;
    } }, { key: "setDimensionsForAxisCharts", value: function() {
      var t4 = this, e4 = this.w, i3 = e4.globals, a3 = this.dimYAxis.getyAxisLabelsCoords(), s3 = this.dimYAxis.getyAxisTitleCoords();
      e4.globals.yLabelsCoords = [], e4.globals.yTitleCoords = [], e4.config.yaxis.map(function(t5, i4) {
        e4.globals.yLabelsCoords.push({ width: a3[i4].width, index: i4 }), e4.globals.yTitleCoords.push({ width: s3[i4].width, index: i4 });
      }), this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth();
      var r3 = this.dimXAxis.getxAxisLabelsCoords(), o3 = this.dimXAxis.getxAxisGroupLabelsCoords(), n3 = this.dimXAxis.getxAxisTitleCoords();
      this.conditionalChecksForAxisCoords(r3, n3, o3), i3.translateXAxisY = e4.globals.rotateXLabels ? this.xAxisHeight / 8 : -4, i3.translateXAxisX = e4.globals.rotateXLabels && e4.globals.isXNumeric && e4.config.xaxis.labels.rotate <= -45 ? -this.xAxisWidth / 4 : 0, e4.globals.isBarHorizontal && (i3.rotateXLabels = false, i3.translateXAxisY = parseInt(e4.config.xaxis.labels.style.fontSize, 10) / 1.5 * -1), i3.translateXAxisY = i3.translateXAxisY + e4.config.xaxis.labels.offsetY, i3.translateXAxisX = i3.translateXAxisX + e4.config.xaxis.labels.offsetX;
      var l3 = this.yAxisWidth, h3 = this.xAxisHeight;
      i3.xAxisLabelsHeight = this.xAxisHeight - n3.height, i3.xAxisGroupLabelsHeight = i3.xAxisLabelsHeight - r3.height, i3.xAxisLabelsWidth = this.xAxisWidth, i3.xAxisHeight = this.xAxisHeight;
      var c3 = 10;
      ("radar" === e4.config.chart.type || this.isSparkline) && (l3 = 0, h3 = i3.goldenPadding), this.isSparkline && (this.lgRect = { height: 0, width: 0 }), (this.isSparkline || "treemap" === e4.config.chart.type) && (l3 = 0, h3 = 0, c3 = 0), this.isSparkline || this.dimXAxis.additionalPaddingXLabels(r3);
      var d3 = function() {
        i3.translateX = l3, i3.gridHeight = i3.svgHeight - t4.lgRect.height - h3 - (t4.isSparkline || "treemap" === e4.config.chart.type ? 0 : e4.globals.rotateXLabels ? 10 : 15), i3.gridWidth = i3.svgWidth - l3;
      };
      switch ("top" === e4.config.xaxis.position && (c3 = i3.xAxisHeight - e4.config.xaxis.axisTicks.height - 5), e4.config.legend.position) {
        case "bottom":
          i3.translateY = c3, d3();
          break;
        case "top":
          i3.translateY = this.lgRect.height + c3, d3();
          break;
        case "left":
          i3.translateY = c3, i3.translateX = this.lgRect.width + l3, i3.gridHeight = i3.svgHeight - h3 - 12, i3.gridWidth = i3.svgWidth - this.lgRect.width - l3;
          break;
        case "right":
          i3.translateY = c3, i3.translateX = l3, i3.gridHeight = i3.svgHeight - h3 - 12, i3.gridWidth = i3.svgWidth - this.lgRect.width - l3 - 5;
          break;
        default:
          throw new Error("Legend position not supported");
      }
      this.dimGrid.setGridXPosForDualYAxis(s3, a3), new q2(this.ctx).setYAxisXPosition(a3, s3);
    } }, { key: "setDimensionsForNonAxisCharts", value: function() {
      var t4 = this.w, e4 = t4.globals, i3 = t4.config, a3 = 0;
      t4.config.legend.show && !t4.config.legend.floating && (a3 = 20);
      var s3 = "pie" === i3.chart.type || "polarArea" === i3.chart.type || "donut" === i3.chart.type ? "pie" : "radialBar", r3 = i3.plotOptions[s3].offsetY, o3 = i3.plotOptions[s3].offsetX;
      if (!i3.legend.show || i3.legend.floating)
        return e4.gridHeight = e4.svgHeight - i3.grid.padding.left + i3.grid.padding.right, e4.gridWidth = e4.gridHeight, e4.translateY = r3, void (e4.translateX = o3 + (e4.svgWidth - e4.gridWidth) / 2);
      switch (i3.legend.position) {
        case "bottom":
          e4.gridHeight = e4.svgHeight - this.lgRect.height - e4.goldenPadding, e4.gridWidth = e4.svgWidth, e4.translateY = r3 - 10, e4.translateX = o3 + (e4.svgWidth - e4.gridWidth) / 2;
          break;
        case "top":
          e4.gridHeight = e4.svgHeight - this.lgRect.height - e4.goldenPadding, e4.gridWidth = e4.svgWidth, e4.translateY = this.lgRect.height + r3 + 10, e4.translateX = o3 + (e4.svgWidth - e4.gridWidth) / 2;
          break;
        case "left":
          e4.gridWidth = e4.svgWidth - this.lgRect.width - a3, e4.gridHeight = "auto" !== i3.chart.height ? e4.svgHeight : e4.gridWidth, e4.translateY = r3, e4.translateX = o3 + this.lgRect.width + a3;
          break;
        case "right":
          e4.gridWidth = e4.svgWidth - this.lgRect.width - a3 - 5, e4.gridHeight = "auto" !== i3.chart.height ? e4.svgHeight : e4.gridWidth, e4.translateY = r3, e4.translateX = o3 + 10;
          break;
        default:
          throw new Error("Legend position not supported");
      }
    } }, { key: "conditionalChecksForAxisCoords", value: function(t4, e4, i3) {
      var a3 = this.w, s3 = a3.globals.hasXaxisGroups ? 2 : 1, r3 = i3.height + t4.height + e4.height, o3 = a3.globals.isMultiLineX ? 1.2 : a3.globals.LINE_HEIGHT_RATIO, n3 = a3.globals.rotateXLabels ? 22 : 10, l3 = a3.globals.rotateXLabels && "bottom" === a3.config.legend.position ? 10 : 0;
      this.xAxisHeight = r3 * o3 + s3 * n3 + l3, this.xAxisWidth = t4.width, this.xAxisHeight - e4.height > a3.config.xaxis.labels.maxHeight && (this.xAxisHeight = a3.config.xaxis.labels.maxHeight), a3.config.xaxis.labels.minHeight && this.xAxisHeight < a3.config.xaxis.labels.minHeight && (this.xAxisHeight = a3.config.xaxis.labels.minHeight), a3.config.xaxis.floating && (this.xAxisHeight = 0);
      var h3 = 0, c3 = 0;
      a3.config.yaxis.forEach(function(t5) {
        h3 += t5.labels.minWidth, c3 += t5.labels.maxWidth;
      }), this.yAxisWidth < h3 && (this.yAxisWidth = h3), this.yAxisWidth > c3 && (this.yAxisWidth = c3);
    } }]), t3;
  }(), nt = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.lgCtx = e4;
    }
    return r2(t3, [{ key: "getLegendStyles", value: function() {
      var t4, e4, i3, a3 = document.createElement("style");
      a3.setAttribute("type", "text/css");
      var s3 = (null === (t4 = this.lgCtx.ctx) || void 0 === t4 || null === (e4 = t4.opts) || void 0 === e4 || null === (i3 = e4.chart) || void 0 === i3 ? void 0 : i3.nonce) || this.w.config.chart.nonce;
      s3 && a3.setAttribute("nonce", s3);
      var r3 = document.createTextNode("\n      .apexcharts-legend {\n        display: flex;\n        overflow: auto;\n        padding: 0 10px;\n      }\n      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {\n        flex-wrap: wrap\n      }\n      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\n        flex-direction: column;\n        bottom: 0;\n      }\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\n        justify-content: flex-start;\n      }\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {\n        justify-content: center;\n      }\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {\n        justify-content: flex-end;\n      }\n      .apexcharts-legend-series {\n        cursor: pointer;\n        line-height: normal;\n      }\n      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{\n        display: flex;\n        align-items: center;\n      }\n      .apexcharts-legend-text {\n        position: relative;\n        font-size: 14px;\n      }\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\n        pointer-events: none;\n      }\n      .apexcharts-legend-marker {\n        position: relative;\n        display: inline-block;\n        cursor: pointer;\n        margin-right: 3px;\n        border-style: solid;\n      }\n\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{\n        display: inline-block;\n      }\n      .apexcharts-legend-series.apexcharts-no-click {\n        cursor: auto;\n      }\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\n        display: none !important;\n      }\n      .apexcharts-inactive-legend {\n        opacity: 0.45;\n      }");
      return a3.appendChild(r3), a3;
    } }, { key: "getLegendBBox", value: function() {
      var t4 = this.w.globals.dom.baseEl.querySelector(".apexcharts-legend").getBoundingClientRect(), e4 = t4.width;
      return { clwh: t4.height, clww: e4 };
    } }, { key: "appendToForeignObject", value: function() {
      this.w.globals.dom.elLegendForeign.appendChild(this.getLegendStyles());
    } }, { key: "toggleDataSeries", value: function(t4, e4) {
      var i3 = this, a3 = this.w;
      if (a3.globals.axisCharts || "radialBar" === a3.config.chart.type) {
        a3.globals.resized = true;
        var s3 = null, r3 = null;
        if (a3.globals.risingSeries = [], a3.globals.axisCharts ? (s3 = a3.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(t4, "']")), r3 = parseInt(s3.getAttribute("data:realIndex"), 10)) : (s3 = a3.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(t4 + 1, "']")), r3 = parseInt(s3.getAttribute("rel"), 10) - 1), e4)
          [{ cs: a3.globals.collapsedSeries, csi: a3.globals.collapsedSeriesIndices }, { cs: a3.globals.ancillaryCollapsedSeries, csi: a3.globals.ancillaryCollapsedSeriesIndices }].forEach(function(t5) {
            i3.riseCollapsedSeries(t5.cs, t5.csi, r3);
          });
        else
          this.hideSeries({ seriesEl: s3, realIndex: r3 });
      } else {
        var o3 = a3.globals.dom.Paper.select(" .apexcharts-series[rel='".concat(t4 + 1, "'] path")), n3 = a3.config.chart.type;
        if ("pie" === n3 || "polarArea" === n3 || "donut" === n3) {
          var l3 = a3.config.plotOptions.pie.donut.labels;
          new m2(this.lgCtx.ctx).pathMouseDown(o3.members[0], null), this.lgCtx.ctx.pie.printDataLabelsInner(o3.members[0].node, l3);
        }
        o3.fire("click");
      }
    } }, { key: "hideSeries", value: function(t4) {
      var e4 = t4.seriesEl, i3 = t4.realIndex, a3 = this.w, s3 = x2.clone(a3.config.series);
      if (a3.globals.axisCharts) {
        var r3 = a3.config.yaxis[a3.globals.seriesYAxisReverseMap[i3]];
        if (r3 && r3.show && r3.showAlways)
          a3.globals.ancillaryCollapsedSeriesIndices.indexOf(i3) < 0 && (a3.globals.ancillaryCollapsedSeries.push({ index: i3, data: s3[i3].data.slice(), type: e4.parentNode.className.baseVal.split("-")[1] }), a3.globals.ancillaryCollapsedSeriesIndices.push(i3));
        else if (a3.globals.collapsedSeriesIndices.indexOf(i3) < 0) {
          a3.globals.collapsedSeries.push({ index: i3, data: s3[i3].data.slice(), type: e4.parentNode.className.baseVal.split("-")[1] }), a3.globals.collapsedSeriesIndices.push(i3);
          var o3 = a3.globals.risingSeries.indexOf(i3);
          a3.globals.risingSeries.splice(o3, 1);
        }
      } else
        a3.globals.collapsedSeries.push({ index: i3, data: s3[i3] }), a3.globals.collapsedSeriesIndices.push(i3);
      for (var n3 = e4.childNodes, l3 = 0; l3 < n3.length; l3++)
        n3[l3].classList.contains("apexcharts-series-markers-wrap") && (n3[l3].classList.contains("apexcharts-hide") ? n3[l3].classList.remove("apexcharts-hide") : n3[l3].classList.add("apexcharts-hide"));
      a3.globals.allSeriesCollapsed = a3.globals.collapsedSeries.length === a3.config.series.length, s3 = this._getSeriesBasedOnCollapsedState(s3), this.lgCtx.ctx.updateHelpers._updateSeries(s3, a3.config.chart.animations.dynamicAnimation.enabled);
    } }, { key: "riseCollapsedSeries", value: function(t4, e4, i3) {
      var a3 = this.w, s3 = x2.clone(a3.config.series);
      if (t4.length > 0) {
        for (var r3 = 0; r3 < t4.length; r3++)
          t4[r3].index === i3 && (a3.globals.axisCharts ? (s3[i3].data = t4[r3].data.slice(), t4.splice(r3, 1), e4.splice(r3, 1), a3.globals.risingSeries.push(i3)) : (s3[i3] = t4[r3].data, t4.splice(r3, 1), e4.splice(r3, 1), a3.globals.risingSeries.push(i3)));
        s3 = this._getSeriesBasedOnCollapsedState(s3), this.lgCtx.ctx.updateHelpers._updateSeries(s3, a3.config.chart.animations.dynamicAnimation.enabled);
      }
    } }, { key: "_getSeriesBasedOnCollapsedState", value: function(t4) {
      var e4 = this.w;
      return e4.globals.axisCharts ? t4.forEach(function(i3, a3) {
        e4.globals.collapsedSeriesIndices.indexOf(a3) > -1 && (t4[a3].data = []);
      }) : t4.forEach(function(i3, a3) {
        e4.globals.collapsedSeriesIndices.indexOf(a3) > -1 && (t4[a3] = 0);
      }), t4;
    } }]), t3;
  }(), lt = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.onLegendClick = this.onLegendClick.bind(this), this.onLegendHovered = this.onLegendHovered.bind(this), this.isBarsDistributed = "bar" === this.w.config.chart.type && this.w.config.plotOptions.bar.distributed && 1 === this.w.config.series.length, this.legendHelpers = new nt(this);
    }
    return r2(t3, [{ key: "init", value: function() {
      var t4 = this.w, e4 = t4.globals, i3 = t4.config;
      if ((i3.legend.showForSingleSeries && 1 === e4.series.length || this.isBarsDistributed || e4.series.length > 1 || !e4.axisCharts) && i3.legend.show) {
        for (; e4.dom.elLegendWrap.firstChild; )
          e4.dom.elLegendWrap.removeChild(e4.dom.elLegendWrap.firstChild);
        this.drawLegends(), x2.isIE11() ? document.getElementsByTagName("head")[0].appendChild(this.legendHelpers.getLegendStyles()) : this.legendHelpers.appendToForeignObject(), "bottom" === i3.legend.position || "top" === i3.legend.position ? this.legendAlignHorizontal() : "right" !== i3.legend.position && "left" !== i3.legend.position || this.legendAlignVertical();
      }
    } }, { key: "drawLegends", value: function() {
      var t4 = this, e4 = this.w, i3 = e4.config.legend.fontFamily, a3 = e4.globals.seriesNames, s3 = e4.globals.colors.slice();
      if ("heatmap" === e4.config.chart.type) {
        var r3 = e4.config.plotOptions.heatmap.colorScale.ranges;
        a3 = r3.map(function(t5) {
          return t5.name ? t5.name : t5.from + " - " + t5.to;
        }), s3 = r3.map(function(t5) {
          return t5.color;
        });
      } else
        this.isBarsDistributed && (a3 = e4.globals.labels.slice());
      e4.config.legend.customLegendItems.length && (a3 = e4.config.legend.customLegendItems);
      for (var o3 = e4.globals.legendFormatter, n3 = e4.config.legend.inverseOrder, l3 = n3 ? a3.length - 1 : 0; n3 ? l3 >= 0 : l3 <= a3.length - 1; n3 ? l3-- : l3++) {
        var h3, c3 = o3(a3[l3], { seriesIndex: l3, w: e4 }), d3 = false, g3 = false;
        if (e4.globals.collapsedSeries.length > 0)
          for (var u3 = 0; u3 < e4.globals.collapsedSeries.length; u3++)
            e4.globals.collapsedSeries[u3].index === l3 && (d3 = true);
        if (e4.globals.ancillaryCollapsedSeriesIndices.length > 0)
          for (var p3 = 0; p3 < e4.globals.ancillaryCollapsedSeriesIndices.length; p3++)
            e4.globals.ancillaryCollapsedSeriesIndices[p3] === l3 && (g3 = true);
        var f3 = document.createElement("span");
        f3.classList.add("apexcharts-legend-marker");
        var b3 = e4.config.legend.markers.offsetX, v3 = e4.config.legend.markers.offsetY, w3 = e4.config.legend.markers.height, k3 = e4.config.legend.markers.width, A6 = e4.config.legend.markers.strokeWidth, S3 = e4.config.legend.markers.strokeColor, C3 = e4.config.legend.markers.radius, L3 = f3.style;
        L3.background = s3[l3], L3.color = s3[l3], L3.setProperty("background", s3[l3], "important"), e4.config.legend.markers.fillColors && e4.config.legend.markers.fillColors[l3] && (L3.background = e4.config.legend.markers.fillColors[l3]), void 0 !== e4.globals.seriesColors[l3] && (L3.background = e4.globals.seriesColors[l3], L3.color = e4.globals.seriesColors[l3]), L3.height = Array.isArray(w3) ? parseFloat(w3[l3]) + "px" : parseFloat(w3) + "px", L3.width = Array.isArray(k3) ? parseFloat(k3[l3]) + "px" : parseFloat(k3) + "px", L3.left = (Array.isArray(b3) ? parseFloat(b3[l3]) : parseFloat(b3)) + "px", L3.top = (Array.isArray(v3) ? parseFloat(v3[l3]) : parseFloat(v3)) + "px", L3.borderWidth = Array.isArray(A6) ? A6[l3] : A6, L3.borderColor = Array.isArray(S3) ? S3[l3] : S3, L3.borderRadius = Array.isArray(C3) ? parseFloat(C3[l3]) + "px" : parseFloat(C3) + "px", e4.config.legend.markers.customHTML && (Array.isArray(e4.config.legend.markers.customHTML) ? e4.config.legend.markers.customHTML[l3] && (f3.innerHTML = e4.config.legend.markers.customHTML[l3]()) : f3.innerHTML = e4.config.legend.markers.customHTML()), m2.setAttrs(f3, { rel: l3 + 1, "data:collapsed": d3 || g3 }), (d3 || g3) && f3.classList.add("apexcharts-inactive-legend");
        var P3 = document.createElement("div"), M3 = document.createElement("span");
        M3.classList.add("apexcharts-legend-text"), M3.innerHTML = Array.isArray(c3) ? c3.join(" ") : c3;
        var I3 = e4.config.legend.labels.useSeriesColors ? e4.globals.colors[l3] : Array.isArray(e4.config.legend.labels.colors) ? null === (h3 = e4.config.legend.labels.colors) || void 0 === h3 ? void 0 : h3[l3] : e4.config.legend.labels.colors;
        I3 || (I3 = e4.config.chart.foreColor), M3.style.color = I3, M3.style.fontSize = parseFloat(e4.config.legend.fontSize) + "px", M3.style.fontWeight = e4.config.legend.fontWeight, M3.style.fontFamily = i3 || e4.config.chart.fontFamily, m2.setAttrs(M3, { rel: l3 + 1, i: l3, "data:default-text": encodeURIComponent(c3), "data:collapsed": d3 || g3 }), P3.appendChild(f3), P3.appendChild(M3);
        var T3 = new y2(this.ctx);
        if (!e4.config.legend.showForZeroSeries)
          0 === T3.getSeriesTotalByIndex(l3) && T3.seriesHaveSameValues(l3) && !T3.isSeriesNull(l3) && -1 === e4.globals.collapsedSeriesIndices.indexOf(l3) && -1 === e4.globals.ancillaryCollapsedSeriesIndices.indexOf(l3) && P3.classList.add("apexcharts-hidden-zero-series");
        e4.config.legend.showForNullSeries || T3.isSeriesNull(l3) && -1 === e4.globals.collapsedSeriesIndices.indexOf(l3) && -1 === e4.globals.ancillaryCollapsedSeriesIndices.indexOf(l3) && P3.classList.add("apexcharts-hidden-null-series"), e4.globals.dom.elLegendWrap.appendChild(P3), e4.globals.dom.elLegendWrap.classList.add("apexcharts-align-".concat(e4.config.legend.horizontalAlign)), e4.globals.dom.elLegendWrap.classList.add("apx-legend-position-" + e4.config.legend.position), P3.classList.add("apexcharts-legend-series"), P3.style.margin = "".concat(e4.config.legend.itemMargin.vertical, "px ").concat(e4.config.legend.itemMargin.horizontal, "px"), e4.globals.dom.elLegendWrap.style.width = e4.config.legend.width ? e4.config.legend.width + "px" : "", e4.globals.dom.elLegendWrap.style.height = e4.config.legend.height ? e4.config.legend.height + "px" : "", m2.setAttrs(P3, { rel: l3 + 1, seriesName: x2.escapeString(a3[l3]), "data:collapsed": d3 || g3 }), (d3 || g3) && P3.classList.add("apexcharts-inactive-legend"), e4.config.legend.onItemClick.toggleDataSeries || P3.classList.add("apexcharts-no-click");
      }
      e4.globals.dom.elWrap.addEventListener("click", t4.onLegendClick, true), e4.config.legend.onItemHover.highlightDataSeries && 0 === e4.config.legend.customLegendItems.length && (e4.globals.dom.elWrap.addEventListener("mousemove", t4.onLegendHovered, true), e4.globals.dom.elWrap.addEventListener("mouseout", t4.onLegendHovered, true));
    } }, { key: "setLegendWrapXY", value: function(t4, e4) {
      var i3 = this.w, a3 = i3.globals.dom.elLegendWrap, s3 = a3.getBoundingClientRect(), r3 = 0, o3 = 0;
      if ("bottom" === i3.config.legend.position)
        o3 += i3.globals.svgHeight - s3.height / 2;
      else if ("top" === i3.config.legend.position) {
        var n3 = new ot(this.ctx), l3 = n3.dimHelpers.getTitleSubtitleCoords("title").height, h3 = n3.dimHelpers.getTitleSubtitleCoords("subtitle").height;
        o3 = o3 + (l3 > 0 ? l3 - 10 : 0) + (h3 > 0 ? h3 - 10 : 0);
      }
      a3.style.position = "absolute", r3 = r3 + t4 + i3.config.legend.offsetX, o3 = o3 + e4 + i3.config.legend.offsetY, a3.style.left = r3 + "px", a3.style.top = o3 + "px", "bottom" === i3.config.legend.position ? (a3.style.top = "auto", a3.style.bottom = 5 - i3.config.legend.offsetY + "px") : "right" === i3.config.legend.position && (a3.style.left = "auto", a3.style.right = 25 + i3.config.legend.offsetX + "px");
      ["width", "height"].forEach(function(t5) {
        a3.style[t5] && (a3.style[t5] = parseInt(i3.config.legend[t5], 10) + "px");
      });
    } }, { key: "legendAlignHorizontal", value: function() {
      var t4 = this.w;
      t4.globals.dom.elLegendWrap.style.right = 0;
      var e4 = this.legendHelpers.getLegendBBox(), i3 = new ot(this.ctx), a3 = i3.dimHelpers.getTitleSubtitleCoords("title"), s3 = i3.dimHelpers.getTitleSubtitleCoords("subtitle"), r3 = 0;
      "bottom" === t4.config.legend.position ? r3 = -e4.clwh / 1.8 : "top" === t4.config.legend.position && (r3 = a3.height + s3.height + t4.config.title.margin + t4.config.subtitle.margin - 10), this.setLegendWrapXY(20, r3);
    } }, { key: "legendAlignVertical", value: function() {
      var t4 = this.w, e4 = this.legendHelpers.getLegendBBox(), i3 = 0;
      "left" === t4.config.legend.position && (i3 = 20), "right" === t4.config.legend.position && (i3 = t4.globals.svgWidth - e4.clww - 10), this.setLegendWrapXY(i3, 20);
    } }, { key: "onLegendHovered", value: function(t4) {
      var e4 = this.w, i3 = t4.target.classList.contains("apexcharts-legend-series") || t4.target.classList.contains("apexcharts-legend-text") || t4.target.classList.contains("apexcharts-legend-marker");
      if ("heatmap" === e4.config.chart.type || this.isBarsDistributed) {
        if (i3) {
          var a3 = parseInt(t4.target.getAttribute("rel"), 10) - 1;
          this.ctx.events.fireEvent("legendHover", [this.ctx, a3, this.w]), new W2(this.ctx).highlightRangeInSeries(t4, t4.target);
        }
      } else
        !t4.target.classList.contains("apexcharts-inactive-legend") && i3 && new W2(this.ctx).toggleSeriesOnHover(t4, t4.target);
    } }, { key: "onLegendClick", value: function(t4) {
      var e4 = this.w;
      if (!e4.config.legend.customLegendItems.length && (t4.target.classList.contains("apexcharts-legend-series") || t4.target.classList.contains("apexcharts-legend-text") || t4.target.classList.contains("apexcharts-legend-marker"))) {
        var i3 = parseInt(t4.target.getAttribute("rel"), 10) - 1, a3 = "true" === t4.target.getAttribute("data:collapsed"), s3 = this.w.config.chart.events.legendClick;
        "function" == typeof s3 && s3(this.ctx, i3, this.w), this.ctx.events.fireEvent("legendClick", [this.ctx, i3, this.w]);
        var r3 = this.w.config.legend.markers.onClick;
        "function" == typeof r3 && t4.target.classList.contains("apexcharts-legend-marker") && (r3(this.ctx, i3, this.w), this.ctx.events.fireEvent("legendMarkerClick", [this.ctx, i3, this.w])), "treemap" !== e4.config.chart.type && "heatmap" !== e4.config.chart.type && !this.isBarsDistributed && e4.config.legend.onItemClick.toggleDataSeries && this.legendHelpers.toggleDataSeries(i3, a3);
      }
    } }]), t3;
  }(), ht = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
      var i3 = this.w;
      this.ev = this.w.config.chart.events, this.selectedClass = "apexcharts-selected", this.localeValues = this.w.globals.locale.toolbar, this.minX = i3.globals.minX, this.maxX = i3.globals.maxX;
    }
    return r2(t3, [{ key: "createToolbar", value: function() {
      var t4 = this, e4 = this.w, i3 = function() {
        return document.createElement("div");
      }, a3 = i3();
      if (a3.setAttribute("class", "apexcharts-toolbar"), a3.style.top = e4.config.chart.toolbar.offsetY + "px", a3.style.right = 3 - e4.config.chart.toolbar.offsetX + "px", e4.globals.dom.elWrap.appendChild(a3), this.elZoom = i3(), this.elZoomIn = i3(), this.elZoomOut = i3(), this.elPan = i3(), this.elSelection = i3(), this.elZoomReset = i3(), this.elMenuIcon = i3(), this.elMenu = i3(), this.elCustomIcons = [], this.t = e4.config.chart.toolbar.tools, Array.isArray(this.t.customIcons))
        for (var s3 = 0; s3 < this.t.customIcons.length; s3++)
          this.elCustomIcons.push(i3());
      var r3 = [], o3 = function(i4, a4, s4) {
        var o4 = i4.toLowerCase();
        t4.t[o4] && e4.config.chart.zoom.enabled && r3.push({ el: a4, icon: "string" == typeof t4.t[o4] ? t4.t[o4] : s4, title: t4.localeValues[i4], class: "apexcharts-".concat(o4, "-icon") });
      };
      o3("zoomIn", this.elZoomIn, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n'), o3("zoomOut", this.elZoomOut, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n');
      var n3 = function(i4) {
        t4.t[i4] && e4.config.chart[i4].enabled && r3.push({ el: "zoom" === i4 ? t4.elZoom : t4.elSelection, icon: "string" == typeof t4.t[i4] ? t4.t[i4] : "zoom" === i4 ? '<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>\n    <path d="M0 0h24v24H0V0z" fill="none"/>\n    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>\n</svg>' : '<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>\n</svg>', title: t4.localeValues["zoom" === i4 ? "selectionZoom" : "selection"], class: e4.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-".concat(i4, "-icon") });
      };
      n3("zoom"), n3("selection"), this.t.pan && e4.config.chart.zoom.enabled && r3.push({ el: this.elPan, icon: "string" == typeof this.t.pan ? this.t.pan : '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <defs>\n        <path d="M0 0h24v24H0z" id="a"/>\n    </defs>\n    <clipPath id="b">\n        <use overflow="visible" xlink:href="#a"/>\n    </clipPath>\n    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>\n</svg>', title: this.localeValues.pan, class: e4.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-pan-icon" }), o3("reset", this.elZoomReset, '<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>\n    <path d="M0 0h24v24H0z" fill="none"/>\n</svg>'), this.t.download && r3.push({ el: this.elMenuIcon, icon: "string" == typeof this.t.download ? this.t.download : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>', title: this.localeValues.menu, class: "apexcharts-menu-icon" });
      for (var l3 = 0; l3 < this.elCustomIcons.length; l3++)
        r3.push({ el: this.elCustomIcons[l3], icon: this.t.customIcons[l3].icon, title: this.t.customIcons[l3].title, index: this.t.customIcons[l3].index, class: "apexcharts-toolbar-custom-icon " + this.t.customIcons[l3].class });
      r3.forEach(function(t5, e6) {
        t5.index && x2.moveIndexInArray(r3, e6, t5.index);
      });
      for (var h3 = 0; h3 < r3.length; h3++)
        m2.setAttrs(r3[h3].el, { class: r3[h3].class, title: r3[h3].title }), r3[h3].el.innerHTML = r3[h3].icon, a3.appendChild(r3[h3].el);
      this._createHamburgerMenu(a3), e4.globals.zoomEnabled ? this.elZoom.classList.add(this.selectedClass) : e4.globals.panEnabled ? this.elPan.classList.add(this.selectedClass) : e4.globals.selectionEnabled && this.elSelection.classList.add(this.selectedClass), this.addToolbarEventListeners();
    } }, { key: "_createHamburgerMenu", value: function(t4) {
      this.elMenuItems = [], t4.appendChild(this.elMenu), m2.setAttrs(this.elMenu, { class: "apexcharts-menu" });
      for (var e4 = [{ name: "exportSVG", title: this.localeValues.exportToSVG }, { name: "exportPNG", title: this.localeValues.exportToPNG }, { name: "exportCSV", title: this.localeValues.exportToCSV }], i3 = 0; i3 < e4.length; i3++)
        this.elMenuItems.push(document.createElement("div")), this.elMenuItems[i3].innerHTML = e4[i3].title, m2.setAttrs(this.elMenuItems[i3], { class: "apexcharts-menu-item ".concat(e4[i3].name), title: e4[i3].title }), this.elMenu.appendChild(this.elMenuItems[i3]);
    } }, { key: "addToolbarEventListeners", value: function() {
      var t4 = this;
      this.elZoomReset.addEventListener("click", this.handleZoomReset.bind(this)), this.elSelection.addEventListener("click", this.toggleZoomSelection.bind(this, "selection")), this.elZoom.addEventListener("click", this.toggleZoomSelection.bind(this, "zoom")), this.elZoomIn.addEventListener("click", this.handleZoomIn.bind(this)), this.elZoomOut.addEventListener("click", this.handleZoomOut.bind(this)), this.elPan.addEventListener("click", this.togglePanning.bind(this)), this.elMenuIcon.addEventListener("click", this.toggleMenu.bind(this)), this.elMenuItems.forEach(function(e6) {
        e6.classList.contains("exportSVG") ? e6.addEventListener("click", t4.handleDownload.bind(t4, "svg")) : e6.classList.contains("exportPNG") ? e6.addEventListener("click", t4.handleDownload.bind(t4, "png")) : e6.classList.contains("exportCSV") && e6.addEventListener("click", t4.handleDownload.bind(t4, "csv"));
      });
      for (var e4 = 0; e4 < this.t.customIcons.length; e4++)
        this.elCustomIcons[e4].addEventListener("click", this.t.customIcons[e4].click.bind(this, this.ctx, this.ctx.w));
    } }, { key: "toggleZoomSelection", value: function(t4) {
      this.ctx.getSyncedCharts().forEach(function(e4) {
        e4.ctx.toolbar.toggleOtherControls();
        var i3 = "selection" === t4 ? e4.ctx.toolbar.elSelection : e4.ctx.toolbar.elZoom, a3 = "selection" === t4 ? "selectionEnabled" : "zoomEnabled";
        e4.w.globals[a3] = !e4.w.globals[a3], i3.classList.contains(e4.ctx.toolbar.selectedClass) ? i3.classList.remove(e4.ctx.toolbar.selectedClass) : i3.classList.add(e4.ctx.toolbar.selectedClass);
      });
    } }, { key: "getToolbarIconsReference", value: function() {
      var t4 = this.w;
      this.elZoom || (this.elZoom = t4.globals.dom.baseEl.querySelector(".apexcharts-zoom-icon")), this.elPan || (this.elPan = t4.globals.dom.baseEl.querySelector(".apexcharts-pan-icon")), this.elSelection || (this.elSelection = t4.globals.dom.baseEl.querySelector(".apexcharts-selection-icon"));
    } }, { key: "enableZoomPanFromToolbar", value: function(t4) {
      this.toggleOtherControls(), "pan" === t4 ? this.w.globals.panEnabled = true : this.w.globals.zoomEnabled = true;
      var e4 = "pan" === t4 ? this.elPan : this.elZoom, i3 = "pan" === t4 ? this.elZoom : this.elPan;
      e4 && e4.classList.add(this.selectedClass), i3 && i3.classList.remove(this.selectedClass);
    } }, { key: "togglePanning", value: function() {
      this.ctx.getSyncedCharts().forEach(function(t4) {
        t4.ctx.toolbar.toggleOtherControls(), t4.w.globals.panEnabled = !t4.w.globals.panEnabled, t4.ctx.toolbar.elPan.classList.contains(t4.ctx.toolbar.selectedClass) ? t4.ctx.toolbar.elPan.classList.remove(t4.ctx.toolbar.selectedClass) : t4.ctx.toolbar.elPan.classList.add(t4.ctx.toolbar.selectedClass);
      });
    } }, { key: "toggleOtherControls", value: function() {
      var t4 = this, e4 = this.w;
      e4.globals.panEnabled = false, e4.globals.zoomEnabled = false, e4.globals.selectionEnabled = false, this.getToolbarIconsReference(), [this.elPan, this.elSelection, this.elZoom].forEach(function(e6) {
        e6 && e6.classList.remove(t4.selectedClass);
      });
    } }, { key: "handleZoomIn", value: function() {
      var t4 = this.w;
      t4.globals.isRangeBar && (this.minX = t4.globals.minY, this.maxX = t4.globals.maxY);
      var e4 = (this.minX + this.maxX) / 2, i3 = (this.minX + e4) / 2, a3 = (this.maxX + e4) / 2, s3 = this._getNewMinXMaxX(i3, a3);
      t4.globals.disableZoomIn || this.zoomUpdateOptions(s3.minX, s3.maxX);
    } }, { key: "handleZoomOut", value: function() {
      var t4 = this.w;
      if (t4.globals.isRangeBar && (this.minX = t4.globals.minY, this.maxX = t4.globals.maxY), !("datetime" === t4.config.xaxis.type && new Date(this.minX).getUTCFullYear() < 1e3)) {
        var e4 = (this.minX + this.maxX) / 2, i3 = this.minX - (e4 - this.minX), a3 = this.maxX - (e4 - this.maxX), s3 = this._getNewMinXMaxX(i3, a3);
        t4.globals.disableZoomOut || this.zoomUpdateOptions(s3.minX, s3.maxX);
      }
    } }, { key: "_getNewMinXMaxX", value: function(t4, e4) {
      var i3 = this.w.config.xaxis.convertedCatToNumeric;
      return { minX: i3 ? Math.floor(t4) : t4, maxX: i3 ? Math.floor(e4) : e4 };
    } }, { key: "zoomUpdateOptions", value: function(t4, e4) {
      var i3 = this.w;
      if (void 0 !== t4 || void 0 !== e4) {
        if (!(i3.config.xaxis.convertedCatToNumeric && (t4 < 1 && (t4 = 1, e4 = i3.globals.dataPoints), e4 - t4 < 2))) {
          var a3 = { min: t4, max: e4 }, s3 = this.getBeforeZoomRange(a3);
          s3 && (a3 = s3.xaxis);
          var r3 = { xaxis: a3 }, o3 = x2.clone(i3.globals.initialConfig.yaxis);
          i3.config.chart.group || (r3.yaxis = o3), this.w.globals.zoomed = true, this.ctx.updateHelpers._updateOptions(r3, false, this.w.config.chart.animations.dynamicAnimation.enabled), this.zoomCallback(a3, o3);
        }
      } else
        this.handleZoomReset();
    } }, { key: "zoomCallback", value: function(t4, e4) {
      "function" == typeof this.ev.zoomed && this.ev.zoomed(this.ctx, { xaxis: t4, yaxis: e4 });
    } }, { key: "getBeforeZoomRange", value: function(t4, e4) {
      var i3 = null;
      return "function" == typeof this.ev.beforeZoom && (i3 = this.ev.beforeZoom(this, { xaxis: t4, yaxis: e4 })), i3;
    } }, { key: "toggleMenu", value: function() {
      var t4 = this;
      window.setTimeout(function() {
        t4.elMenu.classList.contains("apexcharts-menu-open") ? t4.elMenu.classList.remove("apexcharts-menu-open") : t4.elMenu.classList.add("apexcharts-menu-open");
      }, 0);
    } }, { key: "handleDownload", value: function(t4) {
      var e4 = this.w, i3 = new G2(this.ctx);
      switch (t4) {
        case "svg":
          i3.exportToSVG(this.ctx);
          break;
        case "png":
          i3.exportToPng(this.ctx);
          break;
        case "csv":
          i3.exportToCSV({ series: e4.config.series, columnDelimiter: e4.config.chart.toolbar.export.csv.columnDelimiter });
      }
    } }, { key: "handleZoomReset", value: function(t4) {
      this.ctx.getSyncedCharts().forEach(function(t5) {
        var e4 = t5.w;
        if (e4.globals.lastXAxis.min = e4.globals.initialConfig.xaxis.min, e4.globals.lastXAxis.max = e4.globals.initialConfig.xaxis.max, t5.updateHelpers.revertDefaultAxisMinMax(), "function" == typeof e4.config.chart.events.beforeResetZoom) {
          var i3 = e4.config.chart.events.beforeResetZoom(t5, e4);
          i3 && t5.updateHelpers.revertDefaultAxisMinMax(i3);
        }
        "function" == typeof e4.config.chart.events.zoomed && t5.ctx.toolbar.zoomCallback({ min: e4.config.xaxis.min, max: e4.config.xaxis.max }), e4.globals.zoomed = false;
        var a3 = t5.ctx.series.emptyCollapsedSeries(x2.clone(e4.globals.initialSeries));
        t5.updateHelpers._updateSeries(a3, e4.config.chart.animations.dynamicAnimation.enabled);
      });
    } }, { key: "destroy", value: function() {
      this.elZoom = null, this.elZoomIn = null, this.elZoomOut = null, this.elPan = null, this.elSelection = null, this.elZoomReset = null, this.elMenuIcon = null;
    } }]), t3;
  }(), ct = function(t3) {
    n2(i3, ht);
    var e4 = d2(i3);
    function i3(t4) {
      var s3;
      return a2(this, i3), (s3 = e4.call(this, t4)).ctx = t4, s3.w = t4.w, s3.dragged = false, s3.graphics = new m2(s3.ctx), s3.eventList = ["mousedown", "mouseleave", "mousemove", "touchstart", "touchmove", "mouseup", "touchend"], s3.clientX = 0, s3.clientY = 0, s3.startX = 0, s3.endX = 0, s3.dragX = 0, s3.startY = 0, s3.endY = 0, s3.dragY = 0, s3.moveDirection = "none", s3;
    }
    return r2(i3, [{ key: "init", value: function(t4) {
      var e6 = this, i4 = t4.xyRatios, a3 = this.w, s3 = this;
      this.xyRatios = i4, this.zoomRect = this.graphics.drawRect(0, 0, 0, 0), this.selectionRect = this.graphics.drawRect(0, 0, 0, 0), this.gridRect = a3.globals.dom.baseEl.querySelector(".apexcharts-grid"), this.zoomRect.node.classList.add("apexcharts-zoom-rect"), this.selectionRect.node.classList.add("apexcharts-selection-rect"), a3.globals.dom.elGraphical.add(this.zoomRect), a3.globals.dom.elGraphical.add(this.selectionRect), "x" === a3.config.chart.selection.type ? this.slDraggableRect = this.selectionRect.draggable({ minX: 0, minY: 0, maxX: a3.globals.gridWidth, maxY: a3.globals.gridHeight }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : "y" === a3.config.chart.selection.type ? this.slDraggableRect = this.selectionRect.draggable({ minX: 0, maxX: a3.globals.gridWidth }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : this.slDraggableRect = this.selectionRect.draggable().on("dragmove", this.selectionDragging.bind(this, "dragging")), this.preselectedSelection(), this.hoverArea = a3.globals.dom.baseEl.querySelector("".concat(a3.globals.chartClass, " .apexcharts-svg")), this.hoverArea.classList.add("apexcharts-zoomable"), this.eventList.forEach(function(t5) {
        e6.hoverArea.addEventListener(t5, s3.svgMouseEvents.bind(s3, i4), { capture: false, passive: true });
      });
    } }, { key: "destroy", value: function() {
      this.slDraggableRect && (this.slDraggableRect.draggable(false), this.slDraggableRect.off(), this.selectionRect.off()), this.selectionRect = null, this.zoomRect = null, this.gridRect = null;
    } }, { key: "svgMouseEvents", value: function(t4, e6) {
      var i4 = this.w, a3 = this, s3 = this.ctx.toolbar, r3 = i4.globals.zoomEnabled ? i4.config.chart.zoom.type : i4.config.chart.selection.type, o3 = i4.config.chart.toolbar.autoSelected;
      if (e6.shiftKey ? (this.shiftWasPressed = true, s3.enableZoomPanFromToolbar("pan" === o3 ? "zoom" : "pan")) : this.shiftWasPressed && (s3.enableZoomPanFromToolbar(o3), this.shiftWasPressed = false), e6.target) {
        var n3, l3 = e6.target.classList;
        if (e6.target.parentNode && null !== e6.target.parentNode && (n3 = e6.target.parentNode.classList), !(l3.contains("apexcharts-selection-rect") || l3.contains("apexcharts-legend-marker") || l3.contains("apexcharts-legend-text") || n3 && n3.contains("apexcharts-toolbar"))) {
          if (a3.clientX = "touchmove" === e6.type || "touchstart" === e6.type ? e6.touches[0].clientX : "touchend" === e6.type ? e6.changedTouches[0].clientX : e6.clientX, a3.clientY = "touchmove" === e6.type || "touchstart" === e6.type ? e6.touches[0].clientY : "touchend" === e6.type ? e6.changedTouches[0].clientY : e6.clientY, ("mousedown" === e6.type || "touchmove" === e6.type) && 1 === e6.which) {
            var h3 = a3.gridRect.getBoundingClientRect();
            a3.startX = a3.clientX - h3.left, a3.startY = a3.clientY - h3.top, a3.dragged = false, a3.w.globals.mousedown = true;
          }
          if ("mousemove" === e6.type && 1 === e6.which || "touchmove" === e6.type)
            if (a3.dragged = true, i4.globals.panEnabled) {
              if (i4.globals.selection = null, a3.w.globals.mousedown || "touchmove" === e6.type) {
                if ("touchmove" === e6.type && !a3.w.globals.mousedown) {
                  console.warn("me.w.globals.mousedown ", a3.w.globals.mousedown);
                  var c3 = a3.gridRect.getBoundingClientRect();
                  a3.startX = a3.clientX - c3.left, a3.startY = a3.clientY - c3.top, a3.w.globals.mousedown = true;
                }
                a3.panDragging({ context: a3, zoomtype: r3, xyRatios: t4 });
              }
            } else {
              if ("touchmove" === e6.type) {
                if (!a3.w.globals.mousedown) {
                  var d3 = a3.gridRect.getBoundingClientRect();
                  a3.startX = a3.clientX - d3.left, a3.startY = a3.clientY - d3.top;
                }
                a3.w.globals.mousedown = true;
              }
              (a3.w.globals.mousedown && i4.globals.zoomEnabled || a3.w.globals.mousedown && i4.globals.selectionEnabled) && (a3.selection = a3.selectionDrawing({ context: a3, zoomtype: r3 }));
            }
          if ("mouseup" === e6.type || "touchend" === e6.type || "mouseleave" === e6.type) {
            var g3 = a3.gridRect.getBoundingClientRect();
            a3.w.globals.mousedown && (a3.endX = a3.clientX - g3.left, a3.endY = a3.clientY - g3.top, a3.dragX = Math.abs(a3.endX - a3.startX), a3.dragY = Math.abs(a3.endY - a3.startY), (i4.globals.zoomEnabled || i4.globals.selectionEnabled) && a3.selectionDrawn({ context: a3, zoomtype: r3 }), i4.globals.panEnabled && i4.config.xaxis.convertedCatToNumeric && a3.delayedPanScrolled()), i4.globals.zoomEnabled && a3.hideSelectionRect(this.selectionRect), a3.dragged = false, a3.w.globals.mousedown = false;
          }
          this.makeSelectionRectDraggable();
        }
      }
    } }, { key: "makeSelectionRectDraggable", value: function() {
      var t4 = this.w;
      if (this.selectionRect) {
        var e6 = this.selectionRect.node.getBoundingClientRect();
        e6.width > 0 && e6.height > 0 && this.slDraggableRect.selectize({ points: "l, r", pointSize: 8, pointType: "rect" }).resize({ constraint: { minX: 0, minY: 0, maxX: t4.globals.gridWidth, maxY: t4.globals.gridHeight } }).on("resizing", this.selectionDragging.bind(this, "resizing"));
      }
    } }, { key: "preselectedSelection", value: function() {
      var t4 = this.w, e6 = this.xyRatios;
      if (!t4.globals.zoomEnabled) {
        if (void 0 !== t4.globals.selection && null !== t4.globals.selection)
          this.drawSelectionRect(t4.globals.selection);
        else if (void 0 !== t4.config.chart.selection.xaxis.min && void 0 !== t4.config.chart.selection.xaxis.max) {
          var i4 = (t4.config.chart.selection.xaxis.min - t4.globals.minX) / e6.xRatio, a3 = t4.globals.gridWidth - (t4.globals.maxX - t4.config.chart.selection.xaxis.max) / e6.xRatio - i4;
          t4.globals.isRangeBar && (i4 = (t4.config.chart.selection.xaxis.min - t4.globals.yAxisScale[0].niceMin) / e6.invertedYRatio, a3 = (t4.config.chart.selection.xaxis.max - t4.config.chart.selection.xaxis.min) / e6.invertedYRatio);
          var s3 = { x: i4, y: 0, width: a3, height: t4.globals.gridHeight, translateX: 0, translateY: 0, selectionEnabled: true };
          this.drawSelectionRect(s3), this.makeSelectionRectDraggable(), "function" == typeof t4.config.chart.events.selection && t4.config.chart.events.selection(this.ctx, { xaxis: { min: t4.config.chart.selection.xaxis.min, max: t4.config.chart.selection.xaxis.max }, yaxis: {} });
        }
      }
    } }, { key: "drawSelectionRect", value: function(t4) {
      var e6 = t4.x, i4 = t4.y, a3 = t4.width, s3 = t4.height, r3 = t4.translateX, o3 = void 0 === r3 ? 0 : r3, n3 = t4.translateY, l3 = void 0 === n3 ? 0 : n3, h3 = this.w, c3 = this.zoomRect, d3 = this.selectionRect;
      if (this.dragged || null !== h3.globals.selection) {
        var g3 = { transform: "translate(" + o3 + ", " + l3 + ")" };
        h3.globals.zoomEnabled && this.dragged && (a3 < 0 && (a3 = 1), c3.attr({ x: e6, y: i4, width: a3, height: s3, fill: h3.config.chart.zoom.zoomedArea.fill.color, "fill-opacity": h3.config.chart.zoom.zoomedArea.fill.opacity, stroke: h3.config.chart.zoom.zoomedArea.stroke.color, "stroke-width": h3.config.chart.zoom.zoomedArea.stroke.width, "stroke-opacity": h3.config.chart.zoom.zoomedArea.stroke.opacity }), m2.setAttrs(c3.node, g3)), h3.globals.selectionEnabled && (d3.attr({ x: e6, y: i4, width: a3 > 0 ? a3 : 0, height: s3 > 0 ? s3 : 0, fill: h3.config.chart.selection.fill.color, "fill-opacity": h3.config.chart.selection.fill.opacity, stroke: h3.config.chart.selection.stroke.color, "stroke-width": h3.config.chart.selection.stroke.width, "stroke-dasharray": h3.config.chart.selection.stroke.dashArray, "stroke-opacity": h3.config.chart.selection.stroke.opacity }), m2.setAttrs(d3.node, g3));
      }
    } }, { key: "hideSelectionRect", value: function(t4) {
      t4 && t4.attr({ x: 0, y: 0, width: 0, height: 0 });
    } }, { key: "selectionDrawing", value: function(t4) {
      var e6 = t4.context, i4 = t4.zoomtype, a3 = this.w, s3 = e6, r3 = this.gridRect.getBoundingClientRect(), o3 = s3.startX - 1, n3 = s3.startY, l3 = false, h3 = false, c3 = s3.clientX - r3.left - o3, d3 = s3.clientY - r3.top - n3, g3 = {};
      return Math.abs(c3 + o3) > a3.globals.gridWidth ? c3 = a3.globals.gridWidth - o3 : s3.clientX - r3.left < 0 && (c3 = o3), o3 > s3.clientX - r3.left && (l3 = true, c3 = Math.abs(c3)), n3 > s3.clientY - r3.top && (h3 = true, d3 = Math.abs(d3)), g3 = "x" === i4 ? { x: l3 ? o3 - c3 : o3, y: 0, width: c3, height: a3.globals.gridHeight } : "y" === i4 ? { x: 0, y: h3 ? n3 - d3 : n3, width: a3.globals.gridWidth, height: d3 } : { x: l3 ? o3 - c3 : o3, y: h3 ? n3 - d3 : n3, width: c3, height: d3 }, s3.drawSelectionRect(g3), s3.selectionDragging("resizing"), g3;
    } }, { key: "selectionDragging", value: function(t4, e6) {
      var i4 = this, a3 = this.w, s3 = this.xyRatios, r3 = this.selectionRect, o3 = 0;
      "resizing" === t4 && (o3 = 30);
      var n3 = function(t5) {
        return parseFloat(r3.node.getAttribute(t5));
      }, l3 = { x: n3("x"), y: n3("y"), width: n3("width"), height: n3("height") };
      a3.globals.selection = l3, "function" == typeof a3.config.chart.events.selection && a3.globals.selectionEnabled && (clearTimeout(this.w.globals.selectionResizeTimer), this.w.globals.selectionResizeTimer = window.setTimeout(function() {
        var t5, e7, o4, n4, l4 = i4.gridRect.getBoundingClientRect(), h3 = r3.node.getBoundingClientRect();
        a3.globals.isRangeBar ? (t5 = a3.globals.yAxisScale[0].niceMin + (h3.left - l4.left) * s3.invertedYRatio, e7 = a3.globals.yAxisScale[0].niceMin + (h3.right - l4.left) * s3.invertedYRatio, o4 = 0, n4 = 1) : (t5 = a3.globals.xAxisScale.niceMin + (h3.left - l4.left) * s3.xRatio, e7 = a3.globals.xAxisScale.niceMin + (h3.right - l4.left) * s3.xRatio, o4 = a3.globals.yAxisScale[0].niceMin + (l4.bottom - h3.bottom) * s3.yRatio[0], n4 = a3.globals.yAxisScale[0].niceMax - (h3.top - l4.top) * s3.yRatio[0]);
        var c3 = { xaxis: { min: t5, max: e7 }, yaxis: { min: o4, max: n4 } };
        a3.config.chart.events.selection(i4.ctx, c3), a3.config.chart.brush.enabled && void 0 !== a3.config.chart.events.brushScrolled && a3.config.chart.events.brushScrolled(i4.ctx, c3);
      }, o3));
    } }, { key: "selectionDrawn", value: function(t4) {
      var e6 = t4.context, i4 = t4.zoomtype, a3 = this.w, s3 = e6, r3 = this.xyRatios, o3 = this.ctx.toolbar;
      if (s3.startX > s3.endX) {
        var n3 = s3.startX;
        s3.startX = s3.endX, s3.endX = n3;
      }
      if (s3.startY > s3.endY) {
        var l3 = s3.startY;
        s3.startY = s3.endY, s3.endY = l3;
      }
      var h3 = void 0, c3 = void 0;
      a3.globals.isRangeBar ? (h3 = a3.globals.yAxisScale[0].niceMin + s3.startX * r3.invertedYRatio, c3 = a3.globals.yAxisScale[0].niceMin + s3.endX * r3.invertedYRatio) : (h3 = a3.globals.xAxisScale.niceMin + s3.startX * r3.xRatio, c3 = a3.globals.xAxisScale.niceMin + s3.endX * r3.xRatio);
      var d3 = [], g3 = [];
      if (a3.config.yaxis.forEach(function(t5, e7) {
        var i5 = a3.globals.seriesYAxisMap[e7][0];
        d3.push(a3.globals.yAxisScale[e7].niceMax - r3.yRatio[i5] * s3.startY), g3.push(a3.globals.yAxisScale[e7].niceMax - r3.yRatio[i5] * s3.endY);
      }), s3.dragged && (s3.dragX > 10 || s3.dragY > 10) && h3 !== c3) {
        if (a3.globals.zoomEnabled) {
          var u3 = x2.clone(a3.globals.initialConfig.yaxis), p3 = x2.clone(a3.globals.initialConfig.xaxis);
          if (a3.globals.zoomed = true, a3.config.xaxis.convertedCatToNumeric && (h3 = Math.floor(h3), c3 = Math.floor(c3), h3 < 1 && (h3 = 1, c3 = a3.globals.dataPoints), c3 - h3 < 2 && (c3 = h3 + 1)), "xy" !== i4 && "x" !== i4 || (p3 = { min: h3, max: c3 }), "xy" !== i4 && "y" !== i4 || u3.forEach(function(t5, e7) {
            u3[e7].min = g3[e7], u3[e7].max = d3[e7];
          }), o3) {
            var f3 = o3.getBeforeZoomRange(p3, u3);
            f3 && (p3 = f3.xaxis ? f3.xaxis : p3, u3 = f3.yaxis ? f3.yaxis : u3);
          }
          var b3 = { xaxis: p3 };
          a3.config.chart.group || (b3.yaxis = u3), s3.ctx.updateHelpers._updateOptions(b3, false, s3.w.config.chart.animations.dynamicAnimation.enabled), "function" == typeof a3.config.chart.events.zoomed && o3.zoomCallback(p3, u3);
        } else if (a3.globals.selectionEnabled) {
          var v3, m3 = null;
          v3 = { min: h3, max: c3 }, "xy" !== i4 && "y" !== i4 || (m3 = x2.clone(a3.config.yaxis)).forEach(function(t5, e7) {
            m3[e7].min = g3[e7], m3[e7].max = d3[e7];
          }), a3.globals.selection = s3.selection, "function" == typeof a3.config.chart.events.selection && a3.config.chart.events.selection(s3.ctx, { xaxis: v3, yaxis: m3 });
        }
      }
    } }, { key: "panDragging", value: function(t4) {
      var e6 = t4.context, i4 = this.w, a3 = e6;
      if (void 0 !== i4.globals.lastClientPosition.x) {
        var s3 = i4.globals.lastClientPosition.x - a3.clientX, r3 = i4.globals.lastClientPosition.y - a3.clientY;
        Math.abs(s3) > Math.abs(r3) && s3 > 0 ? this.moveDirection = "left" : Math.abs(s3) > Math.abs(r3) && s3 < 0 ? this.moveDirection = "right" : Math.abs(r3) > Math.abs(s3) && r3 > 0 ? this.moveDirection = "up" : Math.abs(r3) > Math.abs(s3) && r3 < 0 && (this.moveDirection = "down");
      }
      i4.globals.lastClientPosition = { x: a3.clientX, y: a3.clientY };
      var o3 = i4.globals.isRangeBar ? i4.globals.minY : i4.globals.minX, n3 = i4.globals.isRangeBar ? i4.globals.maxY : i4.globals.maxX;
      i4.config.xaxis.convertedCatToNumeric || a3.panScrolled(o3, n3);
    } }, { key: "delayedPanScrolled", value: function() {
      var t4 = this.w, e6 = t4.globals.minX, i4 = t4.globals.maxX, a3 = (t4.globals.maxX - t4.globals.minX) / 2;
      "left" === this.moveDirection ? (e6 = t4.globals.minX + a3, i4 = t4.globals.maxX + a3) : "right" === this.moveDirection && (e6 = t4.globals.minX - a3, i4 = t4.globals.maxX - a3), e6 = Math.floor(e6), i4 = Math.floor(i4), this.updateScrolledChart({ xaxis: { min: e6, max: i4 } }, e6, i4);
    } }, { key: "panScrolled", value: function(t4, e6) {
      var i4 = this.w, a3 = this.xyRatios, s3 = x2.clone(i4.globals.initialConfig.yaxis), r3 = a3.xRatio, o3 = i4.globals.minX, n3 = i4.globals.maxX;
      i4.globals.isRangeBar && (r3 = a3.invertedYRatio, o3 = i4.globals.minY, n3 = i4.globals.maxY), "left" === this.moveDirection ? (t4 = o3 + i4.globals.gridWidth / 15 * r3, e6 = n3 + i4.globals.gridWidth / 15 * r3) : "right" === this.moveDirection && (t4 = o3 - i4.globals.gridWidth / 15 * r3, e6 = n3 - i4.globals.gridWidth / 15 * r3), i4.globals.isRangeBar || (t4 < i4.globals.initialMinX || e6 > i4.globals.initialMaxX) && (t4 = o3, e6 = n3);
      var l3 = { xaxis: { min: t4, max: e6 } };
      i4.config.chart.group || (l3.yaxis = s3), this.updateScrolledChart(l3, t4, e6);
    } }, { key: "updateScrolledChart", value: function(t4, e6, i4) {
      var a3 = this.w;
      this.ctx.updateHelpers._updateOptions(t4, false, false), "function" == typeof a3.config.chart.events.scrolled && a3.config.chart.events.scrolled(this.ctx, { xaxis: { min: e6, max: i4 } });
    } }]), i3;
  }(), dt = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.ttCtx = e4, this.ctx = e4.ctx;
    }
    return r2(t3, [{ key: "getNearestValues", value: function(t4) {
      var e4 = t4.hoverArea, i3 = t4.elGrid, a3 = t4.clientX, s3 = t4.clientY, r3 = this.w, o3 = i3.getBoundingClientRect(), n3 = o3.width, l3 = o3.height, h3 = n3 / (r3.globals.dataPoints - 1), c3 = l3 / r3.globals.dataPoints, d3 = this.hasBars();
      !r3.globals.comboCharts && !d3 || r3.config.xaxis.convertedCatToNumeric || (h3 = n3 / r3.globals.dataPoints);
      var g3 = a3 - o3.left - r3.globals.barPadForNumericAxis, u3 = s3 - o3.top;
      g3 < 0 || u3 < 0 || g3 > n3 || u3 > l3 ? (e4.classList.remove("hovering-zoom"), e4.classList.remove("hovering-pan")) : r3.globals.zoomEnabled ? (e4.classList.remove("hovering-pan"), e4.classList.add("hovering-zoom")) : r3.globals.panEnabled && (e4.classList.remove("hovering-zoom"), e4.classList.add("hovering-pan"));
      var p3 = Math.round(g3 / h3), f3 = Math.floor(u3 / c3);
      d3 && !r3.config.xaxis.convertedCatToNumeric && (p3 = Math.ceil(g3 / h3), p3 -= 1);
      var b3 = null, v3 = null, m3 = r3.globals.seriesXvalues.map(function(t5) {
        return t5.filter(function(t6) {
          return x2.isNumber(t6);
        });
      }), y3 = r3.globals.seriesYvalues.map(function(t5) {
        return t5.filter(function(t6) {
          return x2.isNumber(t6);
        });
      });
      if (r3.globals.isXNumeric) {
        var w3 = this.ttCtx.getElGrid().getBoundingClientRect(), k3 = g3 * (w3.width / n3), A6 = u3 * (w3.height / l3);
        b3 = (v3 = this.closestInMultiArray(k3, A6, m3, y3)).index, p3 = v3.j, null !== b3 && (m3 = r3.globals.seriesXvalues[b3], p3 = (v3 = this.closestInArray(k3, m3)).index);
      }
      return r3.globals.capturedSeriesIndex = null === b3 ? -1 : b3, (!p3 || p3 < 1) && (p3 = 0), r3.globals.isBarHorizontal ? r3.globals.capturedDataPointIndex = f3 : r3.globals.capturedDataPointIndex = p3, { capturedSeries: b3, j: r3.globals.isBarHorizontal ? f3 : p3, hoverX: g3, hoverY: u3 };
    } }, { key: "closestInMultiArray", value: function(t4, e4, i3, a3) {
      var s3 = this.w, r3 = 0, o3 = null, n3 = -1;
      s3.globals.series.length > 1 ? r3 = this.getFirstActiveXArray(i3) : o3 = 0;
      var l3 = i3[r3][0], h3 = Math.abs(t4 - l3);
      if (i3.forEach(function(e6) {
        e6.forEach(function(e7, i4) {
          var a4 = Math.abs(t4 - e7);
          a4 <= h3 && (h3 = a4, n3 = i4);
        });
      }), -1 !== n3) {
        var c3 = a3[r3][n3], d3 = Math.abs(e4 - c3);
        o3 = r3, a3.forEach(function(t5, i4) {
          var a4 = Math.abs(e4 - t5[n3]);
          a4 <= d3 && (d3 = a4, o3 = i4);
        });
      }
      return { index: o3, j: n3 };
    } }, { key: "getFirstActiveXArray", value: function(t4) {
      for (var e4 = this.w, i3 = 0, a3 = t4.map(function(t5, e6) {
        return t5.length > 0 ? e6 : -1;
      }), s3 = 0; s3 < a3.length; s3++)
        if (-1 !== a3[s3] && -1 === e4.globals.collapsedSeriesIndices.indexOf(s3) && -1 === e4.globals.ancillaryCollapsedSeriesIndices.indexOf(s3)) {
          i3 = a3[s3];
          break;
        }
      return i3;
    } }, { key: "closestInArray", value: function(t4, e4) {
      for (var i3 = e4[0], a3 = null, s3 = Math.abs(t4 - i3), r3 = 0; r3 < e4.length; r3++) {
        var o3 = Math.abs(t4 - e4[r3]);
        o3 < s3 && (s3 = o3, a3 = r3);
      }
      return { index: a3 };
    } }, { key: "isXoverlap", value: function(t4) {
      var e4 = [], i3 = this.w.globals.seriesX.filter(function(t5) {
        return void 0 !== t5[0];
      });
      if (i3.length > 0)
        for (var a3 = 0; a3 < i3.length - 1; a3++)
          void 0 !== i3[a3][t4] && void 0 !== i3[a3 + 1][t4] && i3[a3][t4] !== i3[a3 + 1][t4] && e4.push("unEqual");
      return 0 === e4.length;
    } }, { key: "isInitialSeriesSameLen", value: function() {
      for (var t4 = true, e4 = this.w.globals.initialSeries, i3 = 0; i3 < e4.length - 1; i3++)
        if (e4[i3].data.length !== e4[i3 + 1].data.length) {
          t4 = false;
          break;
        }
      return t4;
    } }, { key: "getBarsHeight", value: function(t4) {
      return u2(t4).reduce(function(t5, e4) {
        return t5 + e4.getBBox().height;
      }, 0);
    } }, { key: "getElMarkers", value: function(t4) {
      return "number" == typeof t4 ? this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:realIndex='".concat(t4, "'] .apexcharts-series-markers-wrap > *")) : this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap > *");
    } }, { key: "getAllMarkers", value: function() {
      var t4 = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap");
      (t4 = u2(t4)).sort(function(t5, e6) {
        var i3 = Number(t5.getAttribute("data:realIndex")), a3 = Number(e6.getAttribute("data:realIndex"));
        return a3 < i3 ? 1 : a3 > i3 ? -1 : 0;
      });
      var e4 = [];
      return t4.forEach(function(t5) {
        e4.push(t5.querySelector(".apexcharts-marker"));
      }), e4;
    } }, { key: "hasMarkers", value: function(t4) {
      return this.getElMarkers(t4).length > 0;
    } }, { key: "getElBars", value: function() {
      return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series");
    } }, { key: "hasBars", value: function() {
      return this.getElBars().length > 0;
    } }, { key: "getHoverMarkerSize", value: function(t4) {
      var e4 = this.w, i3 = e4.config.markers.hover.size;
      return void 0 === i3 && (i3 = e4.globals.markers.size[t4] + e4.config.markers.hover.sizeOffset), i3;
    } }, { key: "toggleAllTooltipSeriesGroups", value: function(t4) {
      var e4 = this.w, i3 = this.ttCtx;
      0 === i3.allTooltipSeriesGroups.length && (i3.allTooltipSeriesGroups = e4.globals.dom.baseEl.querySelectorAll(".apexcharts-tooltip-series-group"));
      for (var a3 = i3.allTooltipSeriesGroups, s3 = 0; s3 < a3.length; s3++)
        "enable" === t4 ? (a3[s3].classList.add("apexcharts-active"), a3[s3].style.display = e4.config.tooltip.items.display) : (a3[s3].classList.remove("apexcharts-active"), a3[s3].style.display = "none");
    } }]), t3;
  }(), gt = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.ctx = e4.ctx, this.ttCtx = e4, this.tooltipUtil = new dt(e4);
    }
    return r2(t3, [{ key: "drawSeriesTexts", value: function(t4) {
      var e4 = t4.shared, i3 = void 0 === e4 || e4, a3 = t4.ttItems, s3 = t4.i, r3 = void 0 === s3 ? 0 : s3, o3 = t4.j, n3 = void 0 === o3 ? null : o3, l3 = t4.y1, h3 = t4.y2, c3 = t4.e, d3 = this.w;
      void 0 !== d3.config.tooltip.custom ? this.handleCustomTooltip({ i: r3, j: n3, y1: l3, y2: h3, w: d3 }) : this.toggleActiveInactiveSeries(i3);
      var g3 = this.getValuesToPrint({ i: r3, j: n3 });
      this.printLabels({ i: r3, j: n3, values: g3, ttItems: a3, shared: i3, e: c3 });
      var u3 = this.ttCtx.getElTooltip();
      this.ttCtx.tooltipRect.ttWidth = u3.getBoundingClientRect().width, this.ttCtx.tooltipRect.ttHeight = u3.getBoundingClientRect().height;
    } }, { key: "printLabels", value: function(t4) {
      var i3, a3 = this, s3 = t4.i, r3 = t4.j, o3 = t4.values, n3 = t4.ttItems, l3 = t4.shared, h3 = t4.e, c3 = this.w, d3 = [], g3 = function(t5) {
        return c3.globals.seriesGoals[t5] && c3.globals.seriesGoals[t5][r3] && Array.isArray(c3.globals.seriesGoals[t5][r3]);
      }, u3 = o3.xVal, p3 = o3.zVal, f3 = o3.xAxisTTVal, x3 = "", b3 = c3.globals.colors[s3];
      null !== r3 && c3.config.plotOptions.bar.distributed && (b3 = c3.globals.colors[r3]);
      for (var v3 = function(t5, o4) {
        var v4 = a3.getFormatters(s3);
        x3 = a3.getSeriesName({ fn: v4.yLbTitleFormatter, index: s3, seriesIndex: s3, j: r3 }), "treemap" === c3.config.chart.type && (x3 = v4.yLbTitleFormatter(String(c3.config.series[s3].data[r3].x), { series: c3.globals.series, seriesIndex: s3, dataPointIndex: r3, w: c3 }));
        var m4 = c3.config.tooltip.inverseOrder ? o4 : t5;
        if (c3.globals.axisCharts) {
          var y4 = function(t6) {
            var e4, i4, a4, s4;
            return c3.globals.isRangeData ? v4.yLbFormatter(null === (e4 = c3.globals.seriesRangeStart) || void 0 === e4 || null === (i4 = e4[t6]) || void 0 === i4 ? void 0 : i4[r3], { series: c3.globals.seriesRangeStart, seriesIndex: t6, dataPointIndex: r3, w: c3 }) + " - " + v4.yLbFormatter(null === (a4 = c3.globals.seriesRangeEnd) || void 0 === a4 || null === (s4 = a4[t6]) || void 0 === s4 ? void 0 : s4[r3], { series: c3.globals.seriesRangeEnd, seriesIndex: t6, dataPointIndex: r3, w: c3 }) : v4.yLbFormatter(c3.globals.series[t6][r3], { series: c3.globals.series, seriesIndex: t6, dataPointIndex: r3, w: c3 });
          };
          if (l3)
            v4 = a3.getFormatters(m4), x3 = a3.getSeriesName({ fn: v4.yLbTitleFormatter, index: m4, seriesIndex: s3, j: r3 }), b3 = c3.globals.colors[m4], i3 = y4(m4), g3(m4) && (d3 = c3.globals.seriesGoals[m4][r3].map(function(t6) {
              return { attrs: t6, val: v4.yLbFormatter(t6.value, { seriesIndex: m4, dataPointIndex: r3, w: c3 }) };
            }));
          else {
            var w3, k3 = null == h3 || null === (w3 = h3.target) || void 0 === w3 ? void 0 : w3.getAttribute("fill");
            k3 && (b3 = -1 !== k3.indexOf("url") ? document.querySelector(k3.substr(4).slice(0, -1)).childNodes[0].getAttribute("stroke") : k3), i3 = y4(s3), g3(s3) && Array.isArray(c3.globals.seriesGoals[s3][r3]) && (d3 = c3.globals.seriesGoals[s3][r3].map(function(t6) {
              return { attrs: t6, val: v4.yLbFormatter(t6.value, { seriesIndex: s3, dataPointIndex: r3, w: c3 }) };
            }));
          }
        }
        null === r3 && (i3 = v4.yLbFormatter(c3.globals.series[s3], e3(e3({}, c3), {}, { seriesIndex: s3, dataPointIndex: s3 }))), a3.DOMHandling({ i: s3, t: m4, j: r3, ttItems: n3, values: { val: i3, goalVals: d3, xVal: u3, xAxisTTVal: f3, zVal: p3 }, seriesName: x3, shared: l3, pColor: b3 });
      }, m3 = 0, y3 = c3.globals.series.length - 1; m3 < c3.globals.series.length; m3++, y3--)
        v3(m3, y3);
    } }, { key: "getFormatters", value: function(t4) {
      var e4, i3 = this.w, a3 = i3.globals.yLabelFormatters[t4];
      return void 0 !== i3.globals.ttVal ? Array.isArray(i3.globals.ttVal) ? (a3 = i3.globals.ttVal[t4] && i3.globals.ttVal[t4].formatter, e4 = i3.globals.ttVal[t4] && i3.globals.ttVal[t4].title && i3.globals.ttVal[t4].title.formatter) : (a3 = i3.globals.ttVal.formatter, "function" == typeof i3.globals.ttVal.title.formatter && (e4 = i3.globals.ttVal.title.formatter)) : e4 = i3.config.tooltip.y.title.formatter, "function" != typeof a3 && (a3 = i3.globals.yLabelFormatters[0] ? i3.globals.yLabelFormatters[0] : function(t5) {
        return t5;
      }), "function" != typeof e4 && (e4 = function(t5) {
        return t5;
      }), { yLbFormatter: a3, yLbTitleFormatter: e4 };
    } }, { key: "getSeriesName", value: function(t4) {
      var e4 = t4.fn, i3 = t4.index, a3 = t4.seriesIndex, s3 = t4.j, r3 = this.w;
      return e4(String(r3.globals.seriesNames[i3]), { series: r3.globals.series, seriesIndex: a3, dataPointIndex: s3, w: r3 });
    } }, { key: "DOMHandling", value: function(t4) {
      t4.i;
      var e4 = t4.t, i3 = t4.j, a3 = t4.ttItems, s3 = t4.values, r3 = t4.seriesName, o3 = t4.shared, n3 = t4.pColor, l3 = this.w, h3 = this.ttCtx, c3 = s3.val, d3 = s3.goalVals, g3 = s3.xVal, u3 = s3.xAxisTTVal, p3 = s3.zVal, f3 = null;
      f3 = a3[e4].children, l3.config.tooltip.fillSeriesColor && (a3[e4].style.backgroundColor = n3, f3[0].style.display = "none"), h3.showTooltipTitle && (null === h3.tooltipTitle && (h3.tooltipTitle = l3.globals.dom.baseEl.querySelector(".apexcharts-tooltip-title")), h3.tooltipTitle.innerHTML = g3), h3.isXAxisTooltipEnabled && (h3.xaxisTooltipText.innerHTML = "" !== u3 ? u3 : g3);
      var x3 = a3[e4].querySelector(".apexcharts-tooltip-text-y-label");
      x3 && (x3.innerHTML = r3 || "");
      var b3 = a3[e4].querySelector(".apexcharts-tooltip-text-y-value");
      b3 && (b3.innerHTML = void 0 !== c3 ? c3 : ""), f3[0] && f3[0].classList.contains("apexcharts-tooltip-marker") && (l3.config.tooltip.marker.fillColors && Array.isArray(l3.config.tooltip.marker.fillColors) && (n3 = l3.config.tooltip.marker.fillColors[e4]), f3[0].style.backgroundColor = n3), l3.config.tooltip.marker.show || (f3[0].style.display = "none");
      var v3 = a3[e4].querySelector(".apexcharts-tooltip-text-goals-label"), m3 = a3[e4].querySelector(".apexcharts-tooltip-text-goals-value");
      if (d3.length && l3.globals.seriesGoals[e4]) {
        var y3 = function() {
          var t5 = "<div >", e6 = "<div>";
          d3.forEach(function(i4, a4) {
            t5 += ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '.concat(i4.attrs.strokeColor, '; height: 3px; border-radius: 0; top: 5px;"></span> ').concat(i4.attrs.name, "</div>"), e6 += "<div>".concat(i4.val, "</div>");
          }), v3.innerHTML = t5 + "</div>", m3.innerHTML = e6 + "</div>";
        };
        o3 ? l3.globals.seriesGoals[e4][i3] && Array.isArray(l3.globals.seriesGoals[e4][i3]) ? y3() : (v3.innerHTML = "", m3.innerHTML = "") : y3();
      } else
        v3.innerHTML = "", m3.innerHTML = "";
      null !== p3 && (a3[e4].querySelector(".apexcharts-tooltip-text-z-label").innerHTML = l3.config.tooltip.z.title, a3[e4].querySelector(".apexcharts-tooltip-text-z-value").innerHTML = void 0 !== p3 ? p3 : "");
      if (o3 && f3[0]) {
        if (l3.config.tooltip.hideEmptySeries) {
          var w3 = a3[e4].querySelector(".apexcharts-tooltip-marker"), k3 = a3[e4].querySelector(".apexcharts-tooltip-text");
          0 == parseFloat(c3) ? (w3.style.display = "none", k3.style.display = "none") : (w3.style.display = "block", k3.style.display = "block");
        }
        null == c3 || l3.globals.ancillaryCollapsedSeriesIndices.indexOf(e4) > -1 || l3.globals.collapsedSeriesIndices.indexOf(e4) > -1 ? f3[0].parentNode.style.display = "none" : f3[0].parentNode.style.display = l3.config.tooltip.items.display;
      }
    } }, { key: "toggleActiveInactiveSeries", value: function(t4) {
      var e4 = this.w;
      if (t4)
        this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");
      else {
        this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
        var i3 = e4.globals.dom.baseEl.querySelector(".apexcharts-tooltip-series-group");
        i3 && (i3.classList.add("apexcharts-active"), i3.style.display = e4.config.tooltip.items.display);
      }
    } }, { key: "getValuesToPrint", value: function(t4) {
      var e4 = t4.i, i3 = t4.j, a3 = this.w, s3 = this.ctx.series.filteredSeriesX(), r3 = "", o3 = "", n3 = null, l3 = null, h3 = { series: a3.globals.series, seriesIndex: e4, dataPointIndex: i3, w: a3 }, c3 = a3.globals.ttZFormatter;
      null === i3 ? l3 = a3.globals.series[e4] : a3.globals.isXNumeric && "treemap" !== a3.config.chart.type ? (r3 = s3[e4][i3], 0 === s3[e4].length && (r3 = s3[this.tooltipUtil.getFirstActiveXArray(s3)][i3])) : r3 = void 0 !== a3.globals.labels[i3] ? a3.globals.labels[i3] : "";
      var d3 = r3;
      a3.globals.isXNumeric && "datetime" === a3.config.xaxis.type ? r3 = new S2(this.ctx).xLabelFormat(a3.globals.ttKeyFormatter, d3, d3, { i: void 0, dateFormatter: new A5(this.ctx).formatDate, w: this.w }) : r3 = a3.globals.isBarHorizontal ? a3.globals.yLabelFormatters[0](d3, h3) : a3.globals.xLabelFormatter(d3, h3);
      return void 0 !== a3.config.tooltip.x.formatter && (r3 = a3.globals.ttKeyFormatter(d3, h3)), a3.globals.seriesZ.length > 0 && a3.globals.seriesZ[e4].length > 0 && (n3 = c3(a3.globals.seriesZ[e4][i3], a3)), o3 = "function" == typeof a3.config.xaxis.tooltip.formatter ? a3.globals.xaxisTooltipFormatter(d3, h3) : r3, { val: Array.isArray(l3) ? l3.join(" ") : l3, xVal: Array.isArray(r3) ? r3.join(" ") : r3, xAxisTTVal: Array.isArray(o3) ? o3.join(" ") : o3, zVal: n3 };
    } }, { key: "handleCustomTooltip", value: function(t4) {
      var e4 = t4.i, i3 = t4.j, a3 = t4.y1, s3 = t4.y2, r3 = t4.w, o3 = this.ttCtx.getElTooltip(), n3 = r3.config.tooltip.custom;
      Array.isArray(n3) && n3[e4] && (n3 = n3[e4]), o3.innerHTML = n3({ ctx: this.ctx, series: r3.globals.series, seriesIndex: e4, dataPointIndex: i3, y1: a3, y2: s3, w: r3 });
    } }]), t3;
  }(), ut = function() {
    function t3(e4) {
      a2(this, t3), this.ttCtx = e4, this.ctx = e4.ctx, this.w = e4.w;
    }
    return r2(t3, [{ key: "moveXCrosshairs", value: function(t4) {
      var e4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, i3 = this.ttCtx, a3 = this.w, s3 = i3.getElXCrosshairs(), r3 = t4 - i3.xcrosshairsWidth / 2, o3 = a3.globals.labels.slice().length;
      if (null !== e4 && (r3 = a3.globals.gridWidth / o3 * e4), null === s3 || a3.globals.isBarHorizontal || (s3.setAttribute("x", r3), s3.setAttribute("x1", r3), s3.setAttribute("x2", r3), s3.setAttribute("y2", a3.globals.gridHeight), s3.classList.add("apexcharts-active")), r3 < 0 && (r3 = 0), r3 > a3.globals.gridWidth && (r3 = a3.globals.gridWidth), i3.isXAxisTooltipEnabled) {
        var n3 = r3;
        "tickWidth" !== a3.config.xaxis.crosshairs.width && "barWidth" !== a3.config.xaxis.crosshairs.width || (n3 = r3 + i3.xcrosshairsWidth / 2), this.moveXAxisTooltip(n3);
      }
    } }, { key: "moveYCrosshairs", value: function(t4) {
      var e4 = this.ttCtx;
      null !== e4.ycrosshairs && m2.setAttrs(e4.ycrosshairs, { y1: t4, y2: t4 }), null !== e4.ycrosshairsHidden && m2.setAttrs(e4.ycrosshairsHidden, { y1: t4, y2: t4 });
    } }, { key: "moveXAxisTooltip", value: function(t4) {
      var e4 = this.w, i3 = this.ttCtx;
      if (null !== i3.xaxisTooltip && 0 !== i3.xcrosshairsWidth) {
        i3.xaxisTooltip.classList.add("apexcharts-active");
        var a3 = i3.xaxisOffY + e4.config.xaxis.tooltip.offsetY + e4.globals.translateY + 1 + e4.config.xaxis.offsetY;
        if (t4 -= i3.xaxisTooltip.getBoundingClientRect().width / 2, !isNaN(t4)) {
          t4 += e4.globals.translateX;
          var s3;
          s3 = new m2(this.ctx).getTextRects(i3.xaxisTooltipText.innerHTML), i3.xaxisTooltipText.style.minWidth = s3.width + "px", i3.xaxisTooltip.style.left = t4 + "px", i3.xaxisTooltip.style.top = a3 + "px";
        }
      }
    } }, { key: "moveYAxisTooltip", value: function(t4) {
      var e4 = this.w, i3 = this.ttCtx;
      null === i3.yaxisTTEls && (i3.yaxisTTEls = e4.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
      var a3 = parseInt(i3.ycrosshairsHidden.getAttribute("y1"), 10), s3 = e4.globals.translateY + a3, r3 = i3.yaxisTTEls[t4].getBoundingClientRect().height, o3 = e4.globals.translateYAxisX[t4] - 2;
      e4.config.yaxis[t4].opposite && (o3 -= 26), s3 -= r3 / 2, -1 === e4.globals.ignoreYAxisIndexes.indexOf(t4) ? (i3.yaxisTTEls[t4].classList.add("apexcharts-active"), i3.yaxisTTEls[t4].style.top = s3 + "px", i3.yaxisTTEls[t4].style.left = o3 + e4.config.yaxis[t4].tooltip.offsetX + "px") : i3.yaxisTTEls[t4].classList.remove("apexcharts-active");
    } }, { key: "moveTooltip", value: function(t4, e4) {
      var i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, a3 = this.w, s3 = this.ttCtx, r3 = s3.getElTooltip(), o3 = s3.tooltipRect, n3 = null !== i3 ? parseFloat(i3) : 1, l3 = parseFloat(t4) + n3 + 5, h3 = parseFloat(e4) + n3 / 2;
      if (l3 > a3.globals.gridWidth / 2 && (l3 = l3 - o3.ttWidth - n3 - 10), l3 > a3.globals.gridWidth - o3.ttWidth - 10 && (l3 = a3.globals.gridWidth - o3.ttWidth), l3 < -20 && (l3 = -20), a3.config.tooltip.followCursor) {
        var c3 = s3.getElGrid().getBoundingClientRect();
        (l3 = s3.e.clientX - c3.left) > a3.globals.gridWidth / 2 && (l3 -= s3.tooltipRect.ttWidth), (h3 = s3.e.clientY + a3.globals.translateY - c3.top) > a3.globals.gridHeight / 2 && (h3 -= s3.tooltipRect.ttHeight);
      } else
        a3.globals.isBarHorizontal || o3.ttHeight / 2 + h3 > a3.globals.gridHeight && (h3 = a3.globals.gridHeight - o3.ttHeight + a3.globals.translateY);
      isNaN(l3) || (l3 += a3.globals.translateX, r3.style.left = l3 + "px", r3.style.top = h3 + "px");
    } }, { key: "moveMarkers", value: function(t4, e4) {
      var i3 = this.w, a3 = this.ttCtx;
      if (i3.globals.markers.size[t4] > 0)
        for (var s3 = i3.globals.dom.baseEl.querySelectorAll(" .apexcharts-series[data\\:realIndex='".concat(t4, "'] .apexcharts-marker")), r3 = 0; r3 < s3.length; r3++)
          parseInt(s3[r3].getAttribute("rel"), 10) === e4 && (a3.marker.resetPointsSize(), a3.marker.enlargeCurrentPoint(e4, s3[r3]));
      else
        a3.marker.resetPointsSize(), this.moveDynamicPointOnHover(e4, t4);
    } }, { key: "moveDynamicPointOnHover", value: function(t4, e4) {
      var i3, a3, s3 = this.w, r3 = this.ttCtx, o3 = s3.globals.pointsArray, n3 = r3.tooltipUtil.getHoverMarkerSize(e4), l3 = s3.config.series[e4].type;
      if (!l3 || "column" !== l3 && "candlestick" !== l3 && "boxPlot" !== l3) {
        i3 = o3[e4][t4][0], a3 = o3[e4][t4][1] ? o3[e4][t4][1] : 0;
        var h3 = s3.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(e4, "'] .apexcharts-series-markers circle"));
        h3 && a3 < s3.globals.gridHeight && a3 > 0 && (h3.setAttribute("r", n3), h3.setAttribute("cx", i3), h3.setAttribute("cy", a3)), this.moveXCrosshairs(i3), r3.fixedTooltip || this.moveTooltip(i3, a3, n3);
      }
    } }, { key: "moveDynamicPointsOnHover", value: function(t4) {
      var e4, i3 = this.ttCtx, a3 = i3.w, s3 = 0, r3 = 0, o3 = a3.globals.pointsArray;
      e4 = new W2(this.ctx).getActiveConfigSeriesIndex("asc", ["line", "area", "scatter", "bubble"]);
      var n3 = i3.tooltipUtil.getHoverMarkerSize(e4);
      o3[e4] && (s3 = o3[e4][t4][0], r3 = o3[e4][t4][1]);
      var l3 = i3.tooltipUtil.getAllMarkers();
      if (null !== l3)
        for (var h3 = 0; h3 < a3.globals.series.length; h3++) {
          var c3 = o3[h3];
          if (a3.globals.comboCharts && void 0 === c3 && l3.splice(h3, 0, null), c3 && c3.length) {
            var d3 = o3[h3][t4][1], g3 = void 0;
            if (l3[h3].setAttribute("cx", s3), "rangeArea" === a3.config.chart.type && !a3.globals.comboCharts) {
              var u3 = t4 + a3.globals.series[h3].length;
              g3 = o3[h3][u3][1], d3 -= Math.abs(d3 - g3) / 2;
            }
            null !== d3 && !isNaN(d3) && d3 < a3.globals.gridHeight + n3 && d3 + n3 > 0 ? (l3[h3] && l3[h3].setAttribute("r", n3), l3[h3] && l3[h3].setAttribute("cy", d3)) : l3[h3] && l3[h3].setAttribute("r", 0);
          }
        }
      this.moveXCrosshairs(s3), i3.fixedTooltip || this.moveTooltip(s3, r3 || a3.globals.gridHeight, n3);
    } }, { key: "moveStickyTooltipOverBars", value: function(t4, e4) {
      var i3 = this.w, a3 = this.ttCtx, s3 = i3.globals.columnSeries ? i3.globals.columnSeries.length : i3.globals.series.length, r3 = s3 >= 2 && s3 % 2 == 0 ? Math.floor(s3 / 2) : Math.floor(s3 / 2) + 1;
      i3.globals.isBarHorizontal && (r3 = new W2(this.ctx).getActiveConfigSeriesIndex("desc") + 1);
      var o3 = i3.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[rel='".concat(r3, "'] path[j='").concat(t4, "'], .apexcharts-candlestick-series .apexcharts-series[rel='").concat(r3, "'] path[j='").concat(t4, "'], .apexcharts-boxPlot-series .apexcharts-series[rel='").concat(r3, "'] path[j='").concat(t4, "'], .apexcharts-rangebar-series .apexcharts-series[rel='").concat(r3, "'] path[j='").concat(t4, "']"));
      o3 || "number" != typeof e4 || (o3 = i3.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[data\\:realIndex='".concat(e4, "'] path[j='").concat(t4, "'],\n        .apexcharts-candlestick-series .apexcharts-series[data\\:realIndex='").concat(e4, "'] path[j='").concat(t4, "'],\n        .apexcharts-boxPlot-series .apexcharts-series[data\\:realIndex='").concat(e4, "'] path[j='").concat(t4, "'],\n        .apexcharts-rangebar-series .apexcharts-series[data\\:realIndex='").concat(e4, "'] path[j='").concat(t4, "']")));
      var n3 = o3 ? parseFloat(o3.getAttribute("cx")) : 0, l3 = o3 ? parseFloat(o3.getAttribute("cy")) : 0, h3 = o3 ? parseFloat(o3.getAttribute("barWidth")) : 0, c3 = a3.getElGrid().getBoundingClientRect(), d3 = o3 && (o3.classList.contains("apexcharts-candlestick-area") || o3.classList.contains("apexcharts-boxPlot-area"));
      i3.globals.isXNumeric ? (o3 && !d3 && (n3 -= s3 % 2 != 0 ? h3 / 2 : 0), o3 && d3 && i3.globals.comboCharts && (n3 -= h3 / 2)) : i3.globals.isBarHorizontal || (n3 = a3.xAxisTicksPositions[t4 - 1] + a3.dataPointsDividedWidth / 2, isNaN(n3) && (n3 = a3.xAxisTicksPositions[t4] - a3.dataPointsDividedWidth / 2)), i3.globals.isBarHorizontal ? l3 -= a3.tooltipRect.ttHeight : i3.config.tooltip.followCursor ? l3 = a3.e.clientY - c3.top - a3.tooltipRect.ttHeight / 2 : l3 + a3.tooltipRect.ttHeight + 15 > i3.globals.gridHeight && (l3 = i3.globals.gridHeight), i3.globals.isBarHorizontal || this.moveXCrosshairs(n3), a3.fixedTooltip || this.moveTooltip(n3, l3 || i3.globals.gridHeight);
    } }]), t3;
  }(), pt = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.ttCtx = e4, this.ctx = e4.ctx, this.tooltipPosition = new ut(e4);
    }
    return r2(t3, [{ key: "drawDynamicPoints", value: function() {
      var t4 = this.w, e4 = new m2(this.ctx), i3 = new D2(this.ctx), a3 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
      a3 = u2(a3), t4.config.chart.stacked && a3.sort(function(t5, e6) {
        return parseFloat(t5.getAttribute("data:realIndex")) - parseFloat(e6.getAttribute("data:realIndex"));
      });
      for (var s3 = 0; s3 < a3.length; s3++) {
        var r3 = a3[s3].querySelector(".apexcharts-series-markers-wrap");
        if (null !== r3) {
          var o3 = void 0, n3 = "apexcharts-marker w".concat((Math.random() + 1).toString(36).substring(4));
          "line" !== t4.config.chart.type && "area" !== t4.config.chart.type || t4.globals.comboCharts || t4.config.tooltip.intersect || (n3 += " no-pointer-events");
          var l3 = i3.getMarkerConfig({ cssClass: n3, seriesIndex: Number(r3.getAttribute("data:realIndex")) });
          (o3 = e4.drawMarker(0, 0, l3)).node.setAttribute("default-marker-size", 0);
          var h3 = document.createElementNS(t4.globals.SVGNS, "g");
          h3.classList.add("apexcharts-series-markers"), h3.appendChild(o3.node), r3.appendChild(h3);
        }
      }
    } }, { key: "enlargeCurrentPoint", value: function(t4, e4) {
      var i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, a3 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null, s3 = this.w;
      "bubble" !== s3.config.chart.type && this.newPointSize(t4, e4);
      var r3 = e4.getAttribute("cx"), o3 = e4.getAttribute("cy");
      if (null !== i3 && null !== a3 && (r3 = i3, o3 = a3), this.tooltipPosition.moveXCrosshairs(r3), !this.fixedTooltip) {
        if ("radar" === s3.config.chart.type) {
          var n3 = this.ttCtx.getElGrid().getBoundingClientRect();
          r3 = this.ttCtx.e.clientX - n3.left;
        }
        this.tooltipPosition.moveTooltip(r3, o3, s3.config.markers.hover.size);
      }
    } }, { key: "enlargePoints", value: function(t4) {
      for (var e4 = this.w, i3 = this, a3 = this.ttCtx, s3 = t4, r3 = e4.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), o3 = e4.config.markers.hover.size, n3 = 0; n3 < r3.length; n3++) {
        var l3 = r3[n3].getAttribute("rel"), h3 = r3[n3].getAttribute("index");
        if (void 0 === o3 && (o3 = e4.globals.markers.size[h3] + e4.config.markers.hover.sizeOffset), s3 === parseInt(l3, 10)) {
          i3.newPointSize(s3, r3[n3]);
          var c3 = r3[n3].getAttribute("cx"), d3 = r3[n3].getAttribute("cy");
          i3.tooltipPosition.moveXCrosshairs(c3), a3.fixedTooltip || i3.tooltipPosition.moveTooltip(c3, d3, o3);
        } else
          i3.oldPointSize(r3[n3]);
      }
    } }, { key: "newPointSize", value: function(t4, e4) {
      var i3 = this.w, a3 = i3.config.markers.hover.size, s3 = 0 === t4 ? e4.parentNode.firstChild : e4.parentNode.lastChild;
      if ("0" !== s3.getAttribute("default-marker-size")) {
        var r3 = parseInt(s3.getAttribute("index"), 10);
        void 0 === a3 && (a3 = i3.globals.markers.size[r3] + i3.config.markers.hover.sizeOffset), a3 < 0 && (a3 = 0), s3.setAttribute("r", a3);
      }
    } }, { key: "oldPointSize", value: function(t4) {
      var e4 = parseFloat(t4.getAttribute("default-marker-size"));
      t4.setAttribute("r", e4);
    } }, { key: "resetPointsSize", value: function() {
      for (var t4 = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), e4 = 0; e4 < t4.length; e4++) {
        var i3 = parseFloat(t4[e4].getAttribute("default-marker-size"));
        x2.isNumber(i3) && i3 >= 0 ? t4[e4].setAttribute("r", i3) : t4[e4].setAttribute("r", 0);
      }
    } }]), t3;
  }(), ft = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w;
      var i3 = this.w;
      this.ttCtx = e4, this.isVerticalGroupedRangeBar = !i3.globals.isBarHorizontal && "rangeBar" === i3.config.chart.type && i3.config.plotOptions.bar.rangeBarGroupRows;
    }
    return r2(t3, [{ key: "getAttr", value: function(t4, e4) {
      return parseFloat(t4.target.getAttribute(e4));
    } }, { key: "handleHeatTreeTooltip", value: function(t4) {
      var e4 = t4.e, i3 = t4.opt, a3 = t4.x, s3 = t4.y, r3 = t4.type, o3 = this.ttCtx, n3 = this.w;
      if (e4.target.classList.contains("apexcharts-".concat(r3, "-rect"))) {
        var l3 = this.getAttr(e4, "i"), h3 = this.getAttr(e4, "j"), c3 = this.getAttr(e4, "cx"), d3 = this.getAttr(e4, "cy"), g3 = this.getAttr(e4, "width"), u3 = this.getAttr(e4, "height");
        if (o3.tooltipLabels.drawSeriesTexts({ ttItems: i3.ttItems, i: l3, j: h3, shared: false, e: e4 }), n3.globals.capturedSeriesIndex = l3, n3.globals.capturedDataPointIndex = h3, a3 = c3 + o3.tooltipRect.ttWidth / 2 + g3, s3 = d3 + o3.tooltipRect.ttHeight / 2 - u3 / 2, o3.tooltipPosition.moveXCrosshairs(c3 + g3 / 2), a3 > n3.globals.gridWidth / 2 && (a3 = c3 - o3.tooltipRect.ttWidth / 2 + g3), o3.w.config.tooltip.followCursor) {
          var p3 = n3.globals.dom.elWrap.getBoundingClientRect();
          a3 = n3.globals.clientX - p3.left - (a3 > n3.globals.gridWidth / 2 ? o3.tooltipRect.ttWidth : 0), s3 = n3.globals.clientY - p3.top - (s3 > n3.globals.gridHeight / 2 ? o3.tooltipRect.ttHeight : 0);
        }
      }
      return { x: a3, y: s3 };
    } }, { key: "handleMarkerTooltip", value: function(t4) {
      var e4, i3, a3 = t4.e, s3 = t4.opt, r3 = t4.x, o3 = t4.y, n3 = this.w, l3 = this.ttCtx;
      if (a3.target.classList.contains("apexcharts-marker")) {
        var h3 = parseInt(s3.paths.getAttribute("cx"), 10), c3 = parseInt(s3.paths.getAttribute("cy"), 10), d3 = parseFloat(s3.paths.getAttribute("val"));
        if (i3 = parseInt(s3.paths.getAttribute("rel"), 10), e4 = parseInt(s3.paths.parentNode.parentNode.parentNode.getAttribute("rel"), 10) - 1, l3.intersect) {
          var g3 = x2.findAncestor(s3.paths, "apexcharts-series");
          g3 && (e4 = parseInt(g3.getAttribute("data:realIndex"), 10));
        }
        if (l3.tooltipLabels.drawSeriesTexts({ ttItems: s3.ttItems, i: e4, j: i3, shared: !l3.showOnIntersect && n3.config.tooltip.shared, e: a3 }), "mouseup" === a3.type && l3.markerClick(a3, e4, i3), n3.globals.capturedSeriesIndex = e4, n3.globals.capturedDataPointIndex = i3, r3 = h3, o3 = c3 + n3.globals.translateY - 1.4 * l3.tooltipRect.ttHeight, l3.w.config.tooltip.followCursor) {
          var u3 = l3.getElGrid().getBoundingClientRect();
          o3 = l3.e.clientY + n3.globals.translateY - u3.top;
        }
        d3 < 0 && (o3 = c3), l3.marker.enlargeCurrentPoint(i3, s3.paths, r3, o3);
      }
      return { x: r3, y: o3 };
    } }, { key: "handleBarTooltip", value: function(t4) {
      var e4, i3, a3 = t4.e, s3 = t4.opt, r3 = this.w, o3 = this.ttCtx, n3 = o3.getElTooltip(), l3 = 0, h3 = 0, c3 = 0, d3 = this.getBarTooltipXY({ e: a3, opt: s3 });
      e4 = d3.i;
      var g3 = d3.barHeight, u3 = d3.j;
      r3.globals.capturedSeriesIndex = e4, r3.globals.capturedDataPointIndex = u3, r3.globals.isBarHorizontal && o3.tooltipUtil.hasBars() || !r3.config.tooltip.shared ? (h3 = d3.x, c3 = d3.y, i3 = Array.isArray(r3.config.stroke.width) ? r3.config.stroke.width[e4] : r3.config.stroke.width, l3 = h3) : r3.globals.comboCharts || r3.config.tooltip.shared || (l3 /= 2), isNaN(c3) && (c3 = r3.globals.svgHeight - o3.tooltipRect.ttHeight);
      var p3 = parseInt(s3.paths.parentNode.getAttribute("data:realIndex"), 10), f3 = r3.globals.isMultipleYAxis ? r3.config.yaxis[p3] && r3.config.yaxis[p3].reversed : r3.config.yaxis[0].reversed;
      if (h3 + o3.tooltipRect.ttWidth > r3.globals.gridWidth && !f3 ? h3 -= o3.tooltipRect.ttWidth : h3 < 0 && (h3 = 0), o3.w.config.tooltip.followCursor) {
        var x3 = o3.getElGrid().getBoundingClientRect();
        c3 = o3.e.clientY - x3.top;
      }
      null === o3.tooltip && (o3.tooltip = r3.globals.dom.baseEl.querySelector(".apexcharts-tooltip")), r3.config.tooltip.shared || (r3.globals.comboBarCount > 0 ? o3.tooltipPosition.moveXCrosshairs(l3 + i3 / 2) : o3.tooltipPosition.moveXCrosshairs(l3)), !o3.fixedTooltip && (!r3.config.tooltip.shared || r3.globals.isBarHorizontal && o3.tooltipUtil.hasBars()) && (f3 && (h3 -= o3.tooltipRect.ttWidth) < 0 && (h3 = 0), !f3 || r3.globals.isBarHorizontal && o3.tooltipUtil.hasBars() || (c3 = c3 + g3 - 2 * (r3.globals.series[e4][u3] < 0 ? g3 : 0)), c3 = c3 + r3.globals.translateY - o3.tooltipRect.ttHeight / 2, n3.style.left = h3 + r3.globals.translateX + "px", n3.style.top = c3 + "px");
    } }, { key: "getBarTooltipXY", value: function(t4) {
      var e4 = this, i3 = t4.e, a3 = t4.opt, s3 = this.w, r3 = null, o3 = this.ttCtx, n3 = 0, l3 = 0, h3 = 0, c3 = 0, d3 = 0, g3 = i3.target.classList;
      if (g3.contains("apexcharts-bar-area") || g3.contains("apexcharts-candlestick-area") || g3.contains("apexcharts-boxPlot-area") || g3.contains("apexcharts-rangebar-area")) {
        var u3 = i3.target, p3 = u3.getBoundingClientRect(), f3 = a3.elGrid.getBoundingClientRect(), x3 = p3.height;
        d3 = p3.height;
        var b3 = p3.width, v3 = parseInt(u3.getAttribute("cx"), 10), m3 = parseInt(u3.getAttribute("cy"), 10);
        c3 = parseFloat(u3.getAttribute("barWidth"));
        var y3 = "touchmove" === i3.type ? i3.touches[0].clientX : i3.clientX;
        r3 = parseInt(u3.getAttribute("j"), 10), n3 = parseInt(u3.parentNode.getAttribute("rel"), 10) - 1;
        var w3 = u3.getAttribute("data-range-y1"), k3 = u3.getAttribute("data-range-y2");
        s3.globals.comboCharts && (n3 = parseInt(u3.parentNode.getAttribute("data:realIndex"), 10));
        var A6 = function(t5) {
          return s3.globals.isXNumeric ? v3 - b3 / 2 : e4.isVerticalGroupedRangeBar ? v3 + b3 / 2 : v3 - o3.dataPointsDividedWidth + b3 / 2;
        }, S3 = function() {
          return m3 - o3.dataPointsDividedHeight + x3 / 2 - o3.tooltipRect.ttHeight / 2;
        };
        o3.tooltipLabels.drawSeriesTexts({ ttItems: a3.ttItems, i: n3, j: r3, y1: w3 ? parseInt(w3, 10) : null, y2: k3 ? parseInt(k3, 10) : null, shared: !o3.showOnIntersect && s3.config.tooltip.shared, e: i3 }), s3.config.tooltip.followCursor ? s3.globals.isBarHorizontal ? (l3 = y3 - f3.left + 15, h3 = S3()) : (l3 = A6(), h3 = i3.clientY - f3.top - o3.tooltipRect.ttHeight / 2 - 15) : s3.globals.isBarHorizontal ? ((l3 = v3) < o3.xyRatios.baseLineInvertedY && (l3 = v3 - o3.tooltipRect.ttWidth), h3 = S3()) : (l3 = A6(), h3 = m3);
      }
      return { x: l3, y: h3, barHeight: d3, barWidth: c3, i: n3, j: r3 };
    } }]), t3;
  }(), xt = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.ttCtx = e4;
    }
    return r2(t3, [{ key: "drawXaxisTooltip", value: function() {
      var t4 = this.w, e4 = this.ttCtx, i3 = "bottom" === t4.config.xaxis.position;
      e4.xaxisOffY = i3 ? t4.globals.gridHeight + 1 : -t4.globals.xAxisHeight - t4.config.xaxis.axisTicks.height + 3;
      var a3 = i3 ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom" : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top", s3 = t4.globals.dom.elWrap;
      e4.isXAxisTooltipEnabled && (null === t4.globals.dom.baseEl.querySelector(".apexcharts-xaxistooltip") && (e4.xaxisTooltip = document.createElement("div"), e4.xaxisTooltip.setAttribute("class", a3 + " apexcharts-theme-" + t4.config.tooltip.theme), s3.appendChild(e4.xaxisTooltip), e4.xaxisTooltipText = document.createElement("div"), e4.xaxisTooltipText.classList.add("apexcharts-xaxistooltip-text"), e4.xaxisTooltipText.style.fontFamily = t4.config.xaxis.tooltip.style.fontFamily || t4.config.chart.fontFamily, e4.xaxisTooltipText.style.fontSize = t4.config.xaxis.tooltip.style.fontSize, e4.xaxisTooltip.appendChild(e4.xaxisTooltipText)));
    } }, { key: "drawYaxisTooltip", value: function() {
      for (var t4 = this.w, e4 = this.ttCtx, i3 = 0; i3 < t4.config.yaxis.length; i3++) {
        var a3 = t4.config.yaxis[i3].opposite || t4.config.yaxis[i3].crosshairs.opposite;
        e4.yaxisOffX = a3 ? t4.globals.gridWidth + 1 : 1;
        var s3 = "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i3, a3 ? " apexcharts-yaxistooltip-right" : " apexcharts-yaxistooltip-left"), r3 = t4.globals.dom.elWrap;
        null === t4.globals.dom.baseEl.querySelector(".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i3)) && (e4.yaxisTooltip = document.createElement("div"), e4.yaxisTooltip.setAttribute("class", s3 + " apexcharts-theme-" + t4.config.tooltip.theme), r3.appendChild(e4.yaxisTooltip), 0 === i3 && (e4.yaxisTooltipText = []), e4.yaxisTooltipText[i3] = document.createElement("div"), e4.yaxisTooltipText[i3].classList.add("apexcharts-yaxistooltip-text"), e4.yaxisTooltip.appendChild(e4.yaxisTooltipText[i3]));
      }
    } }, { key: "setXCrosshairWidth", value: function() {
      var t4 = this.w, e4 = this.ttCtx, i3 = e4.getElXCrosshairs();
      if (e4.xcrosshairsWidth = parseInt(t4.config.xaxis.crosshairs.width, 10), t4.globals.comboCharts) {
        var a3 = t4.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
        if (null !== a3 && "barWidth" === t4.config.xaxis.crosshairs.width) {
          var s3 = parseFloat(a3.getAttribute("barWidth"));
          e4.xcrosshairsWidth = s3;
        } else if ("tickWidth" === t4.config.xaxis.crosshairs.width) {
          var r3 = t4.globals.labels.length;
          e4.xcrosshairsWidth = t4.globals.gridWidth / r3;
        }
      } else if ("tickWidth" === t4.config.xaxis.crosshairs.width) {
        var o3 = t4.globals.labels.length;
        e4.xcrosshairsWidth = t4.globals.gridWidth / o3;
      } else if ("barWidth" === t4.config.xaxis.crosshairs.width) {
        var n3 = t4.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
        if (null !== n3) {
          var l3 = parseFloat(n3.getAttribute("barWidth"));
          e4.xcrosshairsWidth = l3;
        } else
          e4.xcrosshairsWidth = 1;
      }
      t4.globals.isBarHorizontal && (e4.xcrosshairsWidth = 0), null !== i3 && e4.xcrosshairsWidth > 0 && i3.setAttribute("width", e4.xcrosshairsWidth);
    } }, { key: "handleYCrosshair", value: function() {
      var t4 = this.w, e4 = this.ttCtx;
      e4.ycrosshairs = t4.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs"), e4.ycrosshairsHidden = t4.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs-hidden");
    } }, { key: "drawYaxisTooltipText", value: function(t4, e4, i3) {
      var a3 = this.ttCtx, s3 = this.w, r3 = s3.globals.yLabelFormatters[t4];
      if (a3.yaxisTooltips[t4]) {
        var o3 = a3.getElGrid().getBoundingClientRect(), n3 = s3.globals.seriesYAxisMap[anno.yAxisIndex][0], l3 = (e4 - o3.top) * i3.yRatio[n3], h3 = s3.globals.maxYArr[n3] - s3.globals.minYArr[n3], c3 = s3.globals.minYArr[n3] + (h3 - l3);
        a3.tooltipPosition.moveYCrosshairs(e4 - o3.top), a3.yaxisTooltipText[t4].innerHTML = r3(c3), a3.tooltipPosition.moveYAxisTooltip(t4);
      }
    } }]), t3;
  }(), bt = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
      var i3 = this.w;
      this.tConfig = i3.config.tooltip, this.tooltipUtil = new dt(this), this.tooltipLabels = new gt(this), this.tooltipPosition = new ut(this), this.marker = new pt(this), this.intersect = new ft(this), this.axesTooltip = new xt(this), this.showOnIntersect = this.tConfig.intersect, this.showTooltipTitle = this.tConfig.x.show, this.fixedTooltip = this.tConfig.fixed.enabled, this.xaxisTooltip = null, this.yaxisTTEls = null, this.isBarShared = !i3.globals.isBarHorizontal && this.tConfig.shared, this.lastHoverTime = Date.now();
    }
    return r2(t3, [{ key: "getElTooltip", value: function(t4) {
      return t4 || (t4 = this), t4.w.globals.dom.baseEl ? t4.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip") : null;
    } }, { key: "getElXCrosshairs", value: function() {
      return this.w.globals.dom.baseEl.querySelector(".apexcharts-xcrosshairs");
    } }, { key: "getElGrid", value: function() {
      return this.w.globals.dom.baseEl.querySelector(".apexcharts-grid");
    } }, { key: "drawTooltip", value: function(t4) {
      var e4 = this.w;
      this.xyRatios = t4, this.isXAxisTooltipEnabled = e4.config.xaxis.tooltip.enabled && e4.globals.axisCharts, this.yaxisTooltips = e4.config.yaxis.map(function(t5, i4) {
        return !!(t5.show && t5.tooltip.enabled && e4.globals.axisCharts);
      }), this.allTooltipSeriesGroups = [], e4.globals.axisCharts || (this.showTooltipTitle = false);
      var i3 = document.createElement("div");
      if (i3.classList.add("apexcharts-tooltip"), e4.config.tooltip.cssClass && i3.classList.add(e4.config.tooltip.cssClass), i3.classList.add("apexcharts-theme-".concat(this.tConfig.theme)), e4.globals.dom.elWrap.appendChild(i3), e4.globals.axisCharts) {
        this.axesTooltip.drawXaxisTooltip(), this.axesTooltip.drawYaxisTooltip(), this.axesTooltip.setXCrosshairWidth(), this.axesTooltip.handleYCrosshair();
        var a3 = new V2(this.ctx);
        this.xAxisTicksPositions = a3.getXAxisTicksPositions();
      }
      if (!e4.globals.comboCharts && !this.tConfig.intersect && "rangeBar" !== e4.config.chart.type || this.tConfig.shared || (this.showOnIntersect = true), 0 !== e4.config.markers.size && 0 !== e4.globals.markers.largestSize || this.marker.drawDynamicPoints(this), e4.globals.collapsedSeries.length !== e4.globals.series.length) {
        this.dataPointsDividedHeight = e4.globals.gridHeight / e4.globals.dataPoints, this.dataPointsDividedWidth = e4.globals.gridWidth / e4.globals.dataPoints, this.showTooltipTitle && (this.tooltipTitle = document.createElement("div"), this.tooltipTitle.classList.add("apexcharts-tooltip-title"), this.tooltipTitle.style.fontFamily = this.tConfig.style.fontFamily || e4.config.chart.fontFamily, this.tooltipTitle.style.fontSize = this.tConfig.style.fontSize, i3.appendChild(this.tooltipTitle));
        var s3 = e4.globals.series.length;
        (e4.globals.xyCharts || e4.globals.comboCharts) && this.tConfig.shared && (s3 = this.showOnIntersect ? 1 : e4.globals.series.length), this.legendLabels = e4.globals.dom.baseEl.querySelectorAll(".apexcharts-legend-text"), this.ttItems = this.createTTElements(s3), this.addSVGEvents();
      }
    } }, { key: "createTTElements", value: function(t4) {
      for (var e4 = this, i3 = this.w, a3 = [], s3 = this.getElTooltip(), r3 = function(r4) {
        var o4 = document.createElement("div");
        o4.classList.add("apexcharts-tooltip-series-group"), o4.style.order = i3.config.tooltip.inverseOrder ? t4 - r4 : r4 + 1, e4.tConfig.shared && e4.tConfig.enabledOnSeries && Array.isArray(e4.tConfig.enabledOnSeries) && e4.tConfig.enabledOnSeries.indexOf(r4) < 0 && o4.classList.add("apexcharts-tooltip-series-group-hidden");
        var n3 = document.createElement("span");
        n3.classList.add("apexcharts-tooltip-marker"), n3.style.backgroundColor = i3.globals.colors[r4], o4.appendChild(n3);
        var l3 = document.createElement("div");
        l3.classList.add("apexcharts-tooltip-text"), l3.style.fontFamily = e4.tConfig.style.fontFamily || i3.config.chart.fontFamily, l3.style.fontSize = e4.tConfig.style.fontSize, ["y", "goals", "z"].forEach(function(t5) {
          var e6 = document.createElement("div");
          e6.classList.add("apexcharts-tooltip-".concat(t5, "-group"));
          var i4 = document.createElement("span");
          i4.classList.add("apexcharts-tooltip-text-".concat(t5, "-label")), e6.appendChild(i4);
          var a4 = document.createElement("span");
          a4.classList.add("apexcharts-tooltip-text-".concat(t5, "-value")), e6.appendChild(a4), l3.appendChild(e6);
        }), o4.appendChild(l3), s3.appendChild(o4), a3.push(o4);
      }, o3 = 0; o3 < t4; o3++)
        r3(o3);
      return a3;
    } }, { key: "addSVGEvents", value: function() {
      var t4 = this.w, e4 = t4.config.chart.type, i3 = this.getElTooltip(), a3 = !("bar" !== e4 && "candlestick" !== e4 && "boxPlot" !== e4 && "rangeBar" !== e4), s3 = "area" === e4 || "line" === e4 || "scatter" === e4 || "bubble" === e4 || "radar" === e4, r3 = t4.globals.dom.Paper.node, o3 = this.getElGrid();
      o3 && (this.seriesBound = o3.getBoundingClientRect());
      var n3, l3 = [], h3 = [], c3 = { hoverArea: r3, elGrid: o3, tooltipEl: i3, tooltipY: l3, tooltipX: h3, ttItems: this.ttItems };
      if (t4.globals.axisCharts && (s3 ? n3 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker") : a3 ? n3 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area") : "heatmap" !== e4 && "treemap" !== e4 || (n3 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap")), n3 && n3.length))
        for (var d3 = 0; d3 < n3.length; d3++)
          l3.push(n3[d3].getAttribute("cy")), h3.push(n3[d3].getAttribute("cx"));
      if (t4.globals.xyCharts && !this.showOnIntersect || t4.globals.comboCharts && !this.showOnIntersect || a3 && this.tooltipUtil.hasBars() && this.tConfig.shared)
        this.addPathsEventListeners([r3], c3);
      else if (a3 && !t4.globals.comboCharts || s3 && this.showOnIntersect)
        this.addDatapointEventsListeners(c3);
      else if (!t4.globals.axisCharts || "heatmap" === e4 || "treemap" === e4) {
        var g3 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
        this.addPathsEventListeners(g3, c3);
      }
      if (this.showOnIntersect) {
        var u3 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker");
        u3.length > 0 && this.addPathsEventListeners(u3, c3), this.tooltipUtil.hasBars() && !this.tConfig.shared && this.addDatapointEventsListeners(c3);
      }
    } }, { key: "drawFixedTooltipRect", value: function() {
      var t4 = this.w, e4 = this.getElTooltip(), i3 = e4.getBoundingClientRect(), a3 = i3.width + 10, s3 = i3.height + 10, r3 = this.tConfig.fixed.offsetX, o3 = this.tConfig.fixed.offsetY, n3 = this.tConfig.fixed.position.toLowerCase();
      return n3.indexOf("right") > -1 && (r3 = r3 + t4.globals.svgWidth - a3 + 10), n3.indexOf("bottom") > -1 && (o3 = o3 + t4.globals.svgHeight - s3 - 10), e4.style.left = r3 + "px", e4.style.top = o3 + "px", { x: r3, y: o3, ttWidth: a3, ttHeight: s3 };
    } }, { key: "addDatapointEventsListeners", value: function(t4) {
      var e4 = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area");
      this.addPathsEventListeners(e4, t4);
    } }, { key: "addPathsEventListeners", value: function(t4, e4) {
      for (var i3 = this, a3 = function(a4) {
        var s4 = { paths: t4[a4], tooltipEl: e4.tooltipEl, tooltipY: e4.tooltipY, tooltipX: e4.tooltipX, elGrid: e4.elGrid, hoverArea: e4.hoverArea, ttItems: e4.ttItems };
        ["mousemove", "mouseup", "touchmove", "mouseout", "touchend"].map(function(e6) {
          return t4[a4].addEventListener(e6, i3.onSeriesHover.bind(i3, s4), { capture: false, passive: true });
        });
      }, s3 = 0; s3 < t4.length; s3++)
        a3(s3);
    } }, { key: "onSeriesHover", value: function(t4, e4) {
      var i3 = this, a3 = Date.now() - this.lastHoverTime;
      a3 >= 100 ? this.seriesHover(t4, e4) : (clearTimeout(this.seriesHoverTimeout), this.seriesHoverTimeout = setTimeout(function() {
        i3.seriesHover(t4, e4);
      }, 100 - a3));
    } }, { key: "seriesHover", value: function(t4, e4) {
      var i3 = this;
      this.lastHoverTime = Date.now();
      var a3 = [], s3 = this.w;
      s3.config.chart.group && (a3 = this.ctx.getGroupedCharts()), s3.globals.axisCharts && (s3.globals.minX === -1 / 0 && s3.globals.maxX === 1 / 0 || 0 === s3.globals.dataPoints) || (a3.length ? a3.forEach(function(a4) {
        var s4 = i3.getElTooltip(a4), r3 = { paths: t4.paths, tooltipEl: s4, tooltipY: t4.tooltipY, tooltipX: t4.tooltipX, elGrid: t4.elGrid, hoverArea: t4.hoverArea, ttItems: a4.w.globals.tooltip.ttItems };
        a4.w.globals.minX === i3.w.globals.minX && a4.w.globals.maxX === i3.w.globals.maxX && a4.w.globals.tooltip.seriesHoverByContext({ chartCtx: a4, ttCtx: a4.w.globals.tooltip, opt: r3, e: e4 });
      }) : this.seriesHoverByContext({ chartCtx: this.ctx, ttCtx: this.w.globals.tooltip, opt: t4, e: e4 }));
    } }, { key: "seriesHoverByContext", value: function(t4) {
      var e4 = t4.chartCtx, i3 = t4.ttCtx, a3 = t4.opt, s3 = t4.e, r3 = e4.w, o3 = this.getElTooltip();
      if (o3) {
        if (i3.tooltipRect = { x: 0, y: 0, ttWidth: o3.getBoundingClientRect().width, ttHeight: o3.getBoundingClientRect().height }, i3.e = s3, i3.tooltipUtil.hasBars() && !r3.globals.comboCharts && !i3.isBarShared) {
          if (this.tConfig.onDatasetHover.highlightDataSeries)
            new W2(e4).toggleSeriesOnHover(s3, s3.target.parentNode);
        }
        i3.fixedTooltip && i3.drawFixedTooltipRect(), r3.globals.axisCharts ? i3.axisChartsTooltips({ e: s3, opt: a3, tooltipRect: i3.tooltipRect }) : i3.nonAxisChartsTooltips({ e: s3, opt: a3, tooltipRect: i3.tooltipRect });
      }
    } }, { key: "axisChartsTooltips", value: function(t4) {
      var e4, i3, a3 = t4.e, s3 = t4.opt, r3 = this.w, o3 = s3.elGrid.getBoundingClientRect(), n3 = "touchmove" === a3.type ? a3.touches[0].clientX : a3.clientX, l3 = "touchmove" === a3.type ? a3.touches[0].clientY : a3.clientY;
      if (this.clientY = l3, this.clientX = n3, r3.globals.capturedSeriesIndex = -1, r3.globals.capturedDataPointIndex = -1, l3 < o3.top || l3 > o3.top + o3.height)
        this.handleMouseOut(s3);
      else {
        if (Array.isArray(this.tConfig.enabledOnSeries) && !r3.config.tooltip.shared) {
          var h3 = parseInt(s3.paths.getAttribute("index"), 10);
          if (this.tConfig.enabledOnSeries.indexOf(h3) < 0)
            return void this.handleMouseOut(s3);
        }
        var c3 = this.getElTooltip(), d3 = this.getElXCrosshairs(), g3 = r3.globals.xyCharts || "bar" === r3.config.chart.type && !r3.globals.isBarHorizontal && this.tooltipUtil.hasBars() && this.tConfig.shared || r3.globals.comboCharts && this.tooltipUtil.hasBars();
        if ("mousemove" === a3.type || "touchmove" === a3.type || "mouseup" === a3.type) {
          if (r3.globals.collapsedSeries.length + r3.globals.ancillaryCollapsedSeries.length === r3.globals.series.length)
            return;
          null !== d3 && d3.classList.add("apexcharts-active");
          var u3 = this.yaxisTooltips.filter(function(t5) {
            return true === t5;
          });
          if (null !== this.ycrosshairs && u3.length && this.ycrosshairs.classList.add("apexcharts-active"), g3 && !this.showOnIntersect)
            this.handleStickyTooltip(a3, n3, l3, s3);
          else if ("heatmap" === r3.config.chart.type || "treemap" === r3.config.chart.type) {
            var p3 = this.intersect.handleHeatTreeTooltip({ e: a3, opt: s3, x: e4, y: i3, type: r3.config.chart.type });
            e4 = p3.x, i3 = p3.y, c3.style.left = e4 + "px", c3.style.top = i3 + "px";
          } else
            this.tooltipUtil.hasBars() && this.intersect.handleBarTooltip({ e: a3, opt: s3 }), this.tooltipUtil.hasMarkers() && this.intersect.handleMarkerTooltip({ e: a3, opt: s3, x: e4, y: i3 });
          if (this.yaxisTooltips.length)
            for (var f3 = 0; f3 < r3.config.yaxis.length; f3++)
              this.axesTooltip.drawYaxisTooltipText(f3, l3, this.xyRatios);
          s3.tooltipEl.classList.add("apexcharts-active");
        } else
          "mouseout" !== a3.type && "touchend" !== a3.type || this.handleMouseOut(s3);
      }
    } }, { key: "nonAxisChartsTooltips", value: function(t4) {
      var e4 = t4.e, i3 = t4.opt, a3 = t4.tooltipRect, s3 = this.w, r3 = i3.paths.getAttribute("rel"), o3 = this.getElTooltip(), n3 = s3.globals.dom.elWrap.getBoundingClientRect();
      if ("mousemove" === e4.type || "touchmove" === e4.type) {
        o3.classList.add("apexcharts-active"), this.tooltipLabels.drawSeriesTexts({ ttItems: i3.ttItems, i: parseInt(r3, 10) - 1, shared: false });
        var l3 = s3.globals.clientX - n3.left - a3.ttWidth / 2, h3 = s3.globals.clientY - n3.top - a3.ttHeight - 10;
        if (o3.style.left = l3 + "px", o3.style.top = h3 + "px", s3.config.legend.tooltipHoverFormatter) {
          var c3 = r3 - 1, d3 = (0, s3.config.legend.tooltipHoverFormatter)(this.legendLabels[c3].getAttribute("data:default-text"), { seriesIndex: c3, dataPointIndex: c3, w: s3 });
          this.legendLabels[c3].innerHTML = d3;
        }
      } else
        "mouseout" !== e4.type && "touchend" !== e4.type || (o3.classList.remove("apexcharts-active"), s3.config.legend.tooltipHoverFormatter && this.legendLabels.forEach(function(t5) {
          var e6 = t5.getAttribute("data:default-text");
          t5.innerHTML = decodeURIComponent(e6);
        }));
    } }, { key: "handleStickyTooltip", value: function(t4, e4, i3, a3) {
      var s3 = this.w, r3 = this.tooltipUtil.getNearestValues({ context: this, hoverArea: a3.hoverArea, elGrid: a3.elGrid, clientX: e4, clientY: i3 }), o3 = r3.j, n3 = r3.capturedSeries;
      s3.globals.collapsedSeriesIndices.includes(n3) && (n3 = null);
      var l3 = a3.elGrid.getBoundingClientRect();
      if (r3.hoverX < 0 || r3.hoverX > l3.width)
        this.handleMouseOut(a3);
      else if (null !== n3)
        this.handleStickyCapturedSeries(t4, n3, a3, o3);
      else if (this.tooltipUtil.isXoverlap(o3) || s3.globals.isBarHorizontal) {
        var h3 = s3.globals.series.findIndex(function(t5, e6) {
          return !s3.globals.collapsedSeriesIndices.includes(e6);
        });
        this.create(t4, this, h3, o3, a3.ttItems);
      }
    } }, { key: "handleStickyCapturedSeries", value: function(t4, e4, i3, a3) {
      var s3 = this.w;
      if (!this.tConfig.shared && null === s3.globals.series[e4][a3])
        return void this.handleMouseOut(i3);
      if (void 0 !== s3.globals.series[e4][a3])
        this.tConfig.shared && this.tooltipUtil.isXoverlap(a3) && this.tooltipUtil.isInitialSeriesSameLen() ? this.create(t4, this, e4, a3, i3.ttItems) : this.create(t4, this, e4, a3, i3.ttItems, false);
      else if (this.tooltipUtil.isXoverlap(a3)) {
        var r3 = s3.globals.series.findIndex(function(t5, e6) {
          return !s3.globals.collapsedSeriesIndices.includes(e6);
        });
        this.create(t4, this, r3, a3, i3.ttItems);
      }
    } }, { key: "deactivateHoverFilter", value: function() {
      for (var t4 = this.w, e4 = new m2(this.ctx), i3 = t4.globals.dom.Paper.select(".apexcharts-bar-area"), a3 = 0; a3 < i3.length; a3++)
        e4.pathMouseLeave(i3[a3]);
    } }, { key: "handleMouseOut", value: function(t4) {
      var e4 = this.w, i3 = this.getElXCrosshairs();
      if (t4.tooltipEl.classList.remove("apexcharts-active"), this.deactivateHoverFilter(), "bubble" !== e4.config.chart.type && this.marker.resetPointsSize(), null !== i3 && i3.classList.remove("apexcharts-active"), null !== this.ycrosshairs && this.ycrosshairs.classList.remove("apexcharts-active"), this.isXAxisTooltipEnabled && this.xaxisTooltip.classList.remove("apexcharts-active"), this.yaxisTooltips.length) {
        null === this.yaxisTTEls && (this.yaxisTTEls = e4.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
        for (var a3 = 0; a3 < this.yaxisTTEls.length; a3++)
          this.yaxisTTEls[a3].classList.remove("apexcharts-active");
      }
      e4.config.legend.tooltipHoverFormatter && this.legendLabels.forEach(function(t5) {
        var e6 = t5.getAttribute("data:default-text");
        t5.innerHTML = decodeURIComponent(e6);
      });
    } }, { key: "markerClick", value: function(t4, e4, i3) {
      var a3 = this.w;
      "function" == typeof a3.config.chart.events.markerClick && a3.config.chart.events.markerClick(t4, this.ctx, { seriesIndex: e4, dataPointIndex: i3, w: a3 }), this.ctx.events.fireEvent("markerClick", [t4, this.ctx, { seriesIndex: e4, dataPointIndex: i3, w: a3 }]);
    } }, { key: "create", value: function(t4, i3, a3, s3, r3) {
      var o3, n3, l3, h3, c3, d3, g3, u3, p3, f3, x3, b3, v3, y3, w3, k3, A6 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null, S3 = this.w, C3 = i3;
      "mouseup" === t4.type && this.markerClick(t4, a3, s3), null === A6 && (A6 = this.tConfig.shared);
      var L3 = this.tooltipUtil.hasMarkers(a3), P3 = this.tooltipUtil.getElBars();
      if (S3.config.legend.tooltipHoverFormatter) {
        var M3 = S3.config.legend.tooltipHoverFormatter, I3 = Array.from(this.legendLabels);
        I3.forEach(function(t5) {
          var e4 = t5.getAttribute("data:default-text");
          t5.innerHTML = decodeURIComponent(e4);
        });
        for (var T3 = 0; T3 < I3.length; T3++) {
          var z3 = I3[T3], X4 = parseInt(z3.getAttribute("i"), 10), E3 = decodeURIComponent(z3.getAttribute("data:default-text")), Y4 = M3(E3, { seriesIndex: A6 ? X4 : a3, dataPointIndex: s3, w: S3 });
          if (A6)
            z3.innerHTML = S3.globals.collapsedSeriesIndices.indexOf(X4) < 0 ? Y4 : E3;
          else if (z3.innerHTML = X4 === a3 ? Y4 : E3, a3 === X4)
            break;
        }
      }
      var F3 = e3(e3({ ttItems: r3, i: a3, j: s3 }, void 0 !== (null === (o3 = S3.globals.seriesRange) || void 0 === o3 || null === (n3 = o3[a3]) || void 0 === n3 || null === (l3 = n3[s3]) || void 0 === l3 || null === (h3 = l3.y[0]) || void 0 === h3 ? void 0 : h3.y1) && { y1: null === (c3 = S3.globals.seriesRange) || void 0 === c3 || null === (d3 = c3[a3]) || void 0 === d3 || null === (g3 = d3[s3]) || void 0 === g3 || null === (u3 = g3.y[0]) || void 0 === u3 ? void 0 : u3.y1 }), void 0 !== (null === (p3 = S3.globals.seriesRange) || void 0 === p3 || null === (f3 = p3[a3]) || void 0 === f3 || null === (x3 = f3[s3]) || void 0 === x3 || null === (b3 = x3.y[0]) || void 0 === b3 ? void 0 : b3.y2) && { y2: null === (v3 = S3.globals.seriesRange) || void 0 === v3 || null === (y3 = v3[a3]) || void 0 === y3 || null === (w3 = y3[s3]) || void 0 === w3 || null === (k3 = w3.y[0]) || void 0 === k3 ? void 0 : k3.y2 });
      if (A6) {
        if (C3.tooltipLabels.drawSeriesTexts(e3(e3({}, F3), {}, { shared: !this.showOnIntersect && this.tConfig.shared })), L3)
          S3.globals.markers.largestSize > 0 ? C3.marker.enlargePoints(s3) : C3.tooltipPosition.moveDynamicPointsOnHover(s3);
        else if (this.tooltipUtil.hasBars() && (this.barSeriesHeight = this.tooltipUtil.getBarsHeight(P3), this.barSeriesHeight > 0)) {
          var R3 = new m2(this.ctx), H3 = S3.globals.dom.Paper.select(".apexcharts-bar-area[j='".concat(s3, "']"));
          this.deactivateHoverFilter(), this.tooltipPosition.moveStickyTooltipOverBars(s3, a3);
          for (var D3 = 0; D3 < H3.length; D3++)
            R3.pathMouseEnter(H3[D3]);
        }
      } else
        C3.tooltipLabels.drawSeriesTexts(e3({ shared: false }, F3)), this.tooltipUtil.hasBars() && C3.tooltipPosition.moveStickyTooltipOverBars(s3, a3), L3 && C3.tooltipPosition.moveMarkers(a3, s3);
    } }]), t3;
  }(), vt = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.barCtx = e4, this.totalFormatter = this.w.config.plotOptions.bar.dataLabels.total.formatter, this.totalFormatter || (this.totalFormatter = this.w.config.dataLabels.formatter);
    }
    return r2(t3, [{ key: "handleBarDataLabels", value: function(t4) {
      var e4 = t4.x, i3 = t4.y, a3 = t4.y1, s3 = t4.y2, r3 = t4.i, o3 = t4.j, n3 = t4.realIndex, l3 = t4.groupIndex, h3 = t4.series, c3 = t4.barHeight, d3 = t4.barWidth, g3 = t4.barXPosition, u3 = t4.barYPosition, p3 = t4.visibleSeries, f3 = t4.renderedPath, x3 = this.w, b3 = new m2(this.barCtx.ctx), v3 = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[n3] : this.barCtx.strokeWidth, y3 = e4 + parseFloat(d3 * p3), w3 = i3 + parseFloat(c3 * p3);
      x3.globals.isXNumeric && !x3.globals.isBarHorizontal && (y3 = e4 + parseFloat(d3 * (p3 + 1)), w3 = i3 + parseFloat(c3 * (p3 + 1)) - v3);
      var k3, A6 = null, S3 = e4, C3 = i3, L3 = {}, P3 = x3.config.dataLabels, M3 = this.barCtx.barOptions.dataLabels, I3 = this.barCtx.barOptions.dataLabels.total;
      void 0 !== u3 && this.barCtx.isRangeBar && (w3 = u3, C3 = u3), void 0 !== g3 && this.barCtx.isVerticalGroupedRangeBar && (y3 = g3, S3 = g3);
      var T3 = P3.offsetX, z3 = P3.offsetY, X4 = { width: 0, height: 0 };
      if (x3.config.dataLabels.enabled) {
        var E3 = this.barCtx.series[r3][o3];
        X4 = b3.getTextRects(x3.globals.yLabelFormatters[0](E3), parseFloat(P3.style.fontSize));
      }
      var Y4 = { x: e4, y: i3, i: r3, j: o3, realIndex: n3, groupIndex: l3 || -1, renderedPath: f3, bcx: y3, bcy: w3, barHeight: c3, barWidth: d3, textRects: X4, strokeWidth: v3, dataLabelsX: S3, dataLabelsY: C3, dataLabelsConfig: P3, barDataLabelsConfig: M3, barTotalDataLabelsConfig: I3, offX: T3, offY: z3 };
      return L3 = this.barCtx.isHorizontal ? this.calculateBarsDataLabelsPosition(Y4) : this.calculateColumnsDataLabelsPosition(Y4), f3.attr({ cy: L3.bcy, cx: L3.bcx, j: o3, val: h3[r3][o3], barHeight: c3, barWidth: d3 }), k3 = this.drawCalculatedDataLabels({ x: L3.dataLabelsX, y: L3.dataLabelsY, val: this.barCtx.isRangeBar ? [a3, s3] : h3[r3][o3], i: n3, j: o3, barWidth: d3, barHeight: c3, textRects: X4, dataLabelsConfig: P3 }), x3.config.chart.stacked && I3.enabled && (A6 = this.drawTotalDataLabels({ x: L3.totalDataLabelsX, y: L3.totalDataLabelsY, barWidth: d3, barHeight: c3, realIndex: n3, textAnchor: L3.totalDataLabelsAnchor, val: this.getStackedTotalDataLabel({ realIndex: n3, j: o3 }), dataLabelsConfig: P3, barTotalDataLabelsConfig: I3 })), { dataLabels: k3, totalDataLabels: A6 };
    } }, { key: "getStackedTotalDataLabel", value: function(t4) {
      var i3 = t4.realIndex, a3 = t4.j, s3 = this.w, r3 = this.barCtx.stackedSeriesTotals[a3];
      return this.totalFormatter && (r3 = this.totalFormatter(r3, e3(e3({}, s3), {}, { seriesIndex: i3, dataPointIndex: a3, w: s3 }))), r3;
    } }, { key: "calculateColumnsDataLabelsPosition", value: function(t4) {
      var e4, i3, a3 = this.w, s3 = t4.i, r3 = t4.j, o3 = t4.realIndex, n3 = t4.groupIndex, l3 = t4.y, h3 = t4.bcx, c3 = t4.barWidth, d3 = t4.barHeight, g3 = t4.textRects, u3 = t4.dataLabelsX, p3 = t4.dataLabelsY, f3 = t4.dataLabelsConfig, x3 = t4.barDataLabelsConfig, b3 = t4.barTotalDataLabelsConfig, v3 = t4.strokeWidth, y3 = t4.offX, w3 = t4.offY;
      d3 = Math.abs(d3);
      var k3 = "vertical" === a3.config.plotOptions.bar.dataLabels.orientation, A6 = this.barCtx.barHelpers.getZeroValueEncounters({ i: s3, j: r3 }).zeroEncounters;
      h3 = h3 - v3 / 2 + (-1 !== n3 ? n3 * c3 : 0);
      var S3 = a3.globals.gridWidth / a3.globals.dataPoints;
      if (this.barCtx.isVerticalGroupedRangeBar ? u3 += c3 / 2 : (u3 = a3.globals.isXNumeric ? h3 - c3 / 2 + y3 : h3 - S3 + c3 / 2 + y3, A6 > 0 && a3.config.plotOptions.bar.hideZeroBarsWhenGrouped && (u3 -= c3 * A6)), k3) {
        u3 = u3 + g3.height / 2 - v3 / 2 - 2;
      }
      var C3 = this.barCtx.series[s3][r3] < 0, L3 = l3;
      switch (this.barCtx.isReversed && (L3 = l3 - d3 + (C3 ? 2 * d3 : 0), l3 -= d3), x3.position) {
        case "center":
          p3 = k3 ? C3 ? L3 - d3 / 2 + w3 : L3 + d3 / 2 - w3 : C3 ? L3 - d3 / 2 + g3.height / 2 + w3 : L3 + d3 / 2 + g3.height / 2 - w3;
          break;
        case "bottom":
          p3 = k3 ? C3 ? L3 - d3 + w3 : L3 + d3 - w3 : C3 ? L3 - d3 + g3.height + v3 + w3 : L3 + d3 - g3.height / 2 + v3 - w3;
          break;
        case "top":
          p3 = k3 ? C3 ? L3 + w3 : L3 - w3 : C3 ? L3 - g3.height / 2 - w3 : L3 + g3.height + w3;
      }
      if (this.barCtx.lastActiveBarSerieIndex === o3 && b3.enabled) {
        var P3 = new m2(this.barCtx.ctx).getTextRects(this.getStackedTotalDataLabel({ realIndex: o3, j: r3 }), f3.fontSize);
        e4 = C3 ? L3 - P3.height / 2 - w3 - b3.offsetY + 18 : L3 + P3.height + w3 + b3.offsetY - 18, i3 = u3 + b3.offsetX;
      }
      return a3.config.chart.stacked || (p3 < 0 ? p3 = 0 + v3 : p3 + g3.height / 3 > a3.globals.gridHeight && (p3 = a3.globals.gridHeight - v3)), { bcx: h3, bcy: l3, dataLabelsX: u3, dataLabelsY: p3, totalDataLabelsX: i3, totalDataLabelsY: e4, totalDataLabelsAnchor: "middle" };
    } }, { key: "calculateBarsDataLabelsPosition", value: function(t4) {
      var e4 = this.w, i3 = t4.x, a3 = t4.i, s3 = t4.j, r3 = t4.realIndex, o3 = t4.groupIndex, n3 = t4.bcy, l3 = t4.barHeight, h3 = t4.barWidth, c3 = t4.textRects, d3 = t4.dataLabelsX, g3 = t4.strokeWidth, u3 = t4.dataLabelsConfig, p3 = t4.barDataLabelsConfig, f3 = t4.barTotalDataLabelsConfig, x3 = t4.offX, b3 = t4.offY, v3 = e4.globals.gridHeight / e4.globals.dataPoints;
      h3 = Math.abs(h3);
      var y3, w3, k3 = (n3 += -1 !== o3 ? o3 * l3 : 0) - (this.barCtx.isRangeBar ? 0 : v3) + l3 / 2 + c3.height / 2 + b3 - 3, A6 = "start", S3 = this.barCtx.series[a3][s3] < 0, C3 = i3;
      switch (this.barCtx.isReversed && (C3 = i3 + h3 - (S3 ? 2 * h3 : 0), i3 = e4.globals.gridWidth - h3), p3.position) {
        case "center":
          d3 = S3 ? C3 + h3 / 2 - x3 : Math.max(c3.width / 2, C3 - h3 / 2) + x3;
          break;
        case "bottom":
          d3 = S3 ? C3 + h3 - g3 - Math.round(c3.width / 2) - x3 : C3 - h3 + g3 + Math.round(c3.width / 2) + x3;
          break;
        case "top":
          d3 = S3 ? C3 - g3 + Math.round(c3.width / 2) - x3 : C3 - g3 - Math.round(c3.width / 2) + x3;
      }
      if (this.barCtx.lastActiveBarSerieIndex === r3 && f3.enabled) {
        var L3 = new m2(this.barCtx.ctx).getTextRects(this.getStackedTotalDataLabel({ realIndex: r3, j: s3 }), u3.fontSize);
        S3 ? (y3 = C3 - g3 + Math.round(L3.width / 2) - x3 - f3.offsetX - 15, A6 = "end") : y3 = C3 - g3 - Math.round(L3.width / 2) + x3 + f3.offsetX + 15, w3 = k3 + f3.offsetY;
      }
      return e4.config.chart.stacked || (d3 < 0 ? d3 = d3 + c3.width + g3 : d3 + c3.width / 2 > e4.globals.gridWidth && (d3 = e4.globals.gridWidth - c3.width - g3)), { bcx: i3, bcy: n3, dataLabelsX: d3, dataLabelsY: k3, totalDataLabelsX: y3, totalDataLabelsY: w3, totalDataLabelsAnchor: A6 };
    } }, { key: "drawCalculatedDataLabels", value: function(t4) {
      var i3 = t4.x, a3 = t4.y, s3 = t4.val, r3 = t4.i, o3 = t4.j, n3 = t4.textRects, l3 = t4.barHeight, h3 = t4.barWidth, c3 = t4.dataLabelsConfig, d3 = this.w, g3 = "rotate(0)";
      "vertical" === d3.config.plotOptions.bar.dataLabels.orientation && (g3 = "rotate(-90, ".concat(i3, ", ").concat(a3, ")"));
      var u3 = new N2(this.barCtx.ctx), p3 = new m2(this.barCtx.ctx), f3 = c3.formatter, x3 = null, b3 = d3.globals.collapsedSeriesIndices.indexOf(r3) > -1;
      if (c3.enabled && !b3) {
        x3 = p3.group({ class: "apexcharts-data-labels", transform: g3 });
        var v3 = "";
        void 0 !== s3 && (v3 = f3(s3, e3(e3({}, d3), {}, { seriesIndex: r3, dataPointIndex: o3, w: d3 }))), !s3 && d3.config.plotOptions.bar.hideZeroBarsWhenGrouped && (v3 = "");
        var y3 = d3.globals.series[r3][o3] < 0, w3 = d3.config.plotOptions.bar.dataLabels.position;
        if ("vertical" === d3.config.plotOptions.bar.dataLabels.orientation && ("top" === w3 && (c3.textAnchor = y3 ? "end" : "start"), "center" === w3 && (c3.textAnchor = "middle"), "bottom" === w3 && (c3.textAnchor = y3 ? "end" : "start")), this.barCtx.isRangeBar && this.barCtx.barOptions.dataLabels.hideOverflowingLabels)
          h3 < p3.getTextRects(v3, parseFloat(c3.style.fontSize)).width && (v3 = "");
        d3.config.chart.stacked && this.barCtx.barOptions.dataLabels.hideOverflowingLabels && (this.barCtx.isHorizontal ? n3.width / 1.6 > Math.abs(h3) && (v3 = "") : n3.height / 1.6 > Math.abs(l3) && (v3 = ""));
        var k3 = e3({}, c3);
        this.barCtx.isHorizontal && s3 < 0 && ("start" === c3.textAnchor ? k3.textAnchor = "end" : "end" === c3.textAnchor && (k3.textAnchor = "start")), u3.plotDataLabelsText({ x: i3, y: a3, text: v3, i: r3, j: o3, parent: x3, dataLabelsConfig: k3, alwaysDrawDataLabel: true, offsetCorrection: true });
      }
      return x3;
    } }, { key: "drawTotalDataLabels", value: function(t4) {
      var e4, i3 = t4.x, a3 = t4.y, s3 = t4.val, r3 = t4.barWidth, o3 = t4.barHeight, n3 = t4.realIndex, l3 = t4.textAnchor, h3 = t4.barTotalDataLabelsConfig, c3 = this.w, d3 = new m2(this.barCtx.ctx);
      return h3.enabled && void 0 !== i3 && void 0 !== a3 && this.barCtx.lastActiveBarSerieIndex === n3 && (e4 = d3.drawText({ x: i3 - (!c3.globals.isBarHorizontal && c3.globals.seriesGroups.length ? r3 / c3.globals.seriesGroups.length : 0), y: a3 - (c3.globals.isBarHorizontal && c3.globals.seriesGroups.length ? o3 / c3.globals.seriesGroups.length : 0), foreColor: h3.style.color, text: s3, textAnchor: l3, fontFamily: h3.style.fontFamily, fontSize: h3.style.fontSize, fontWeight: h3.style.fontWeight })), e4;
    } }]), t3;
  }(), mt = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.barCtx = e4;
    }
    return r2(t3, [{ key: "initVariables", value: function(t4) {
      var e4 = this.w;
      this.barCtx.series = t4, this.barCtx.totalItems = 0, this.barCtx.seriesLen = 0, this.barCtx.visibleI = -1, this.barCtx.visibleItems = 1;
      for (var i3 = 0; i3 < t4.length; i3++)
        if (t4[i3].length > 0 && (this.barCtx.seriesLen = this.barCtx.seriesLen + 1, this.barCtx.totalItems += t4[i3].length), e4.globals.isXNumeric)
          for (var a3 = 0; a3 < t4[i3].length; a3++)
            e4.globals.seriesX[i3][a3] > e4.globals.minX && e4.globals.seriesX[i3][a3] < e4.globals.maxX && this.barCtx.visibleItems++;
        else
          this.barCtx.visibleItems = e4.globals.dataPoints;
      0 === this.barCtx.seriesLen && (this.barCtx.seriesLen = 1), this.barCtx.zeroSerieses = [], e4.globals.comboCharts || this.checkZeroSeries({ series: t4 });
    } }, { key: "initialPositions", value: function() {
      var t4, e4, i3, a3, s3, r3, o3, n3, l3 = this.w, h3 = l3.globals.dataPoints;
      this.barCtx.isRangeBar && (h3 = l3.globals.labels.length);
      var c3 = this.barCtx.seriesLen;
      if (l3.config.plotOptions.bar.rangeBarGroupRows && (c3 = 1), this.barCtx.isHorizontal)
        s3 = (i3 = l3.globals.gridHeight / h3) / c3, l3.globals.isXNumeric && (s3 = (i3 = l3.globals.gridHeight / this.barCtx.totalItems) / this.barCtx.seriesLen), s3 = s3 * parseInt(this.barCtx.barOptions.barHeight, 10) / 100, -1 === String(this.barCtx.barOptions.barHeight).indexOf("%") && (s3 = parseInt(this.barCtx.barOptions.barHeight, 10)), n3 = this.barCtx.baseLineInvertedY + l3.globals.padHorizontal + (this.barCtx.isReversed ? l3.globals.gridWidth : 0) - (this.barCtx.isReversed ? 2 * this.barCtx.baseLineInvertedY : 0), this.barCtx.isFunnel && (n3 = l3.globals.gridWidth / 2), e4 = (i3 - s3 * this.barCtx.seriesLen) / 2;
      else {
        if (a3 = l3.globals.gridWidth / this.barCtx.visibleItems, l3.config.xaxis.convertedCatToNumeric && (a3 = l3.globals.gridWidth / l3.globals.dataPoints), r3 = a3 / c3 * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100, l3.globals.isXNumeric) {
          var d3 = this.barCtx.xRatio;
          l3.globals.minXDiff && 0.5 !== l3.globals.minXDiff && l3.globals.minXDiff / d3 > 0 && (a3 = l3.globals.minXDiff / d3), (r3 = a3 / c3 * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100) < 1 && (r3 = 1);
        }
        -1 === String(this.barCtx.barOptions.columnWidth).indexOf("%") && (r3 = parseInt(this.barCtx.barOptions.columnWidth, 10)), o3 = l3.globals.gridHeight - this.barCtx.baseLineY[this.barCtx.translationsIndex] - (this.barCtx.isReversed ? l3.globals.gridHeight : 0) + (this.barCtx.isReversed ? 2 * this.barCtx.baseLineY[this.barCtx.translationsIndex] : 0), t4 = l3.globals.padHorizontal + (a3 - r3 * this.barCtx.seriesLen) / 2;
      }
      return l3.globals.barHeight = s3, l3.globals.barWidth = r3, { x: t4, y: e4, yDivision: i3, xDivision: a3, barHeight: s3, barWidth: r3, zeroH: o3, zeroW: n3 };
    } }, { key: "initializeStackedPrevVars", value: function(t4) {
      var e4 = t4.w;
      e4.globals.hasSeriesGroups ? e4.globals.seriesGroups.forEach(function(e6) {
        t4[e6] || (t4[e6] = {}), t4[e6].prevY = [], t4[e6].prevX = [], t4[e6].prevYF = [], t4[e6].prevXF = [], t4[e6].prevYVal = [], t4[e6].prevXVal = [];
      }) : (t4.prevY = [], t4.prevX = [], t4.prevYF = [], t4.prevXF = [], t4.prevYVal = [], t4.prevXVal = []);
    } }, { key: "initializeStackedXYVars", value: function(t4) {
      var e4 = t4.w;
      e4.globals.hasSeriesGroups ? e4.globals.seriesGroups.forEach(function(e6) {
        t4[e6] || (t4[e6] = {}), t4[e6].xArrj = [], t4[e6].xArrjF = [], t4[e6].xArrjVal = [], t4[e6].yArrj = [], t4[e6].yArrjF = [], t4[e6].yArrjVal = [];
      }) : (t4.xArrj = [], t4.xArrjF = [], t4.xArrjVal = [], t4.yArrj = [], t4.yArrjF = [], t4.yArrjVal = []);
    } }, { key: "getPathFillColor", value: function(t4, e4, i3, a3) {
      var s3, r3, o3, n3, l3 = this.w, h3 = new H2(this.barCtx.ctx), c3 = null, d3 = this.barCtx.barOptions.distributed ? i3 : e4;
      this.barCtx.barOptions.colors.ranges.length > 0 && this.barCtx.barOptions.colors.ranges.map(function(a4) {
        t4[e4][i3] >= a4.from && t4[e4][i3] <= a4.to && (c3 = a4.color);
      });
      return l3.config.series[e4].data[i3] && l3.config.series[e4].data[i3].fillColor && (c3 = l3.config.series[e4].data[i3].fillColor), h3.fillPath({ seriesNumber: this.barCtx.barOptions.distributed ? d3 : a3, dataPointIndex: i3, color: c3, value: t4[e4][i3], fillConfig: null === (s3 = l3.config.series[e4].data[i3]) || void 0 === s3 ? void 0 : s3.fill, fillType: null !== (r3 = l3.config.series[e4].data[i3]) && void 0 !== r3 && null !== (o3 = r3.fill) && void 0 !== o3 && o3.type ? null === (n3 = l3.config.series[e4].data[i3]) || void 0 === n3 ? void 0 : n3.fill.type : Array.isArray(l3.config.fill.type) ? l3.config.fill.type[e4] : l3.config.fill.type });
    } }, { key: "getStrokeWidth", value: function(t4, e4, i3) {
      var a3 = 0, s3 = this.w;
      return void 0 === this.barCtx.series[t4][e4] || null === this.barCtx.series[t4][e4] ? this.barCtx.isNullValue = true : this.barCtx.isNullValue = false, s3.config.stroke.show && (this.barCtx.isNullValue || (a3 = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[i3] : this.barCtx.strokeWidth)), a3;
    } }, { key: "shouldApplyRadius", value: function(t4) {
      var e4 = this.w, i3 = false;
      return e4.config.plotOptions.bar.borderRadius > 0 && (e4.config.chart.stacked && "last" === e4.config.plotOptions.bar.borderRadiusWhenStacked ? this.barCtx.lastActiveBarSerieIndex === t4 && (i3 = true) : i3 = true), i3;
    } }, { key: "barBackground", value: function(t4) {
      var e4 = t4.j, i3 = t4.i, a3 = t4.x1, s3 = t4.x2, r3 = t4.y1, o3 = t4.y2, n3 = t4.elSeries, l3 = this.w, h3 = new m2(this.barCtx.ctx), c3 = new W2(this.barCtx.ctx).getActiveConfigSeriesIndex();
      if (this.barCtx.barOptions.colors.backgroundBarColors.length > 0 && c3 === i3) {
        e4 >= this.barCtx.barOptions.colors.backgroundBarColors.length && (e4 %= this.barCtx.barOptions.colors.backgroundBarColors.length);
        var d3 = this.barCtx.barOptions.colors.backgroundBarColors[e4], g3 = h3.drawRect(void 0 !== a3 ? a3 : 0, void 0 !== r3 ? r3 : 0, void 0 !== s3 ? s3 : l3.globals.gridWidth, void 0 !== o3 ? o3 : l3.globals.gridHeight, this.barCtx.barOptions.colors.backgroundBarRadius, d3, this.barCtx.barOptions.colors.backgroundBarOpacity);
        n3.add(g3), g3.node.classList.add("apexcharts-backgroundBar");
      }
    } }, { key: "getColumnPaths", value: function(t4) {
      var e4, i3 = t4.barWidth, a3 = t4.barXPosition, s3 = t4.y1, r3 = t4.y2, o3 = t4.strokeWidth, n3 = t4.seriesGroup, l3 = t4.realIndex, h3 = t4.i, c3 = t4.j, d3 = t4.w, g3 = new m2(this.barCtx.ctx);
      (o3 = Array.isArray(o3) ? o3[l3] : o3) || (o3 = 0);
      var u3 = i3, p3 = a3;
      null !== (e4 = d3.config.series[l3].data[c3]) && void 0 !== e4 && e4.columnWidthOffset && (p3 = a3 - d3.config.series[l3].data[c3].columnWidthOffset / 2, u3 = i3 + d3.config.series[l3].data[c3].columnWidthOffset);
      var f3 = p3, x3 = p3 + u3;
      s3 += 1e-3, r3 += 1e-3;
      var b3 = g3.move(f3, s3), v3 = g3.move(f3, s3), y3 = g3.line(x3 - o3, s3);
      if (d3.globals.previousPaths.length > 0 && (v3 = this.barCtx.getPreviousPath(l3, c3, false)), b3 = b3 + g3.line(f3, r3) + g3.line(x3 - o3, r3) + g3.line(x3 - o3, s3) + ("around" === d3.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), v3 = v3 + g3.line(f3, s3) + y3 + y3 + y3 + y3 + y3 + g3.line(f3, s3) + ("around" === d3.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), this.shouldApplyRadius(l3) && (b3 = g3.roundPathCorners(b3, d3.config.plotOptions.bar.borderRadius)), d3.config.chart.stacked) {
        var w3 = this.barCtx;
        d3.globals.hasSeriesGroups && n3 && (w3 = this.barCtx[n3]), w3.yArrj.push(r3), w3.yArrjF.push(Math.abs(s3 - r3)), w3.yArrjVal.push(this.barCtx.series[h3][c3]);
      }
      return { pathTo: b3, pathFrom: v3 };
    } }, { key: "getBarpaths", value: function(t4) {
      var e4, i3 = t4.barYPosition, a3 = t4.barHeight, s3 = t4.x1, r3 = t4.x2, o3 = t4.strokeWidth, n3 = t4.seriesGroup, l3 = t4.realIndex, h3 = t4.i, c3 = t4.j, d3 = t4.w, g3 = new m2(this.barCtx.ctx);
      (o3 = Array.isArray(o3) ? o3[l3] : o3) || (o3 = 0);
      var u3 = i3, p3 = a3;
      null !== (e4 = d3.config.series[l3].data[c3]) && void 0 !== e4 && e4.barHeightOffset && (u3 = i3 - d3.config.series[l3].data[c3].barHeightOffset / 2, p3 = a3 + d3.config.series[l3].data[c3].barHeightOffset);
      var f3 = u3, x3 = u3 + p3;
      s3 += 1e-3, r3 += 1e-3;
      var b3 = g3.move(s3, f3), v3 = g3.move(s3, f3);
      d3.globals.previousPaths.length > 0 && (v3 = this.barCtx.getPreviousPath(l3, c3, false));
      var y3 = g3.line(s3, x3 - o3);
      if (b3 = b3 + g3.line(r3, f3) + g3.line(r3, x3 - o3) + y3 + ("around" === d3.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), v3 = v3 + g3.line(s3, f3) + y3 + y3 + y3 + y3 + y3 + g3.line(s3, f3) + ("around" === d3.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), this.shouldApplyRadius(l3) && (b3 = g3.roundPathCorners(b3, d3.config.plotOptions.bar.borderRadius)), d3.config.chart.stacked) {
        var w3 = this.barCtx;
        d3.globals.hasSeriesGroups && n3 && (w3 = this.barCtx[n3]), w3.xArrj.push(r3), w3.xArrjF.push(Math.abs(s3 - r3)), w3.xArrjVal.push(this.barCtx.series[h3][c3]);
      }
      return { pathTo: b3, pathFrom: v3 };
    } }, { key: "checkZeroSeries", value: function(t4) {
      for (var e4 = t4.series, i3 = this.w, a3 = 0; a3 < e4.length; a3++) {
        for (var s3 = 0, r3 = 0; r3 < e4[i3.globals.maxValsInArrayIndex].length; r3++)
          s3 += e4[a3][r3];
        0 === s3 && this.barCtx.zeroSerieses.push(a3);
      }
    } }, { key: "getXForValue", value: function(t4, e4) {
      var i3 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2] ? e4 : null;
      return null != t4 && (i3 = e4 + t4 / this.barCtx.invertedYRatio - 2 * (this.barCtx.isReversed ? t4 / this.barCtx.invertedYRatio : 0)), i3;
    } }, { key: "getYForValue", value: function(t4, e4, i3) {
      var a3 = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3] ? e4 : null;
      return null != t4 && (a3 = e4 - t4 / this.barCtx.yRatio[i3] + 2 * (this.barCtx.isReversed ? t4 / this.barCtx.yRatio[i3] : 0)), a3;
    } }, { key: "getGoalValues", value: function(t4, i3, a3, s3, r3, n3) {
      var l3 = this, h3 = this.w, c3 = [], d3 = function(e4, s4) {
        var r4;
        c3.push((o2(r4 = {}, t4, "x" === t4 ? l3.getXForValue(e4, i3, false) : l3.getYForValue(e4, a3, n3, false)), o2(r4, "attrs", s4), r4));
      };
      if (h3.globals.seriesGoals[s3] && h3.globals.seriesGoals[s3][r3] && Array.isArray(h3.globals.seriesGoals[s3][r3]) && h3.globals.seriesGoals[s3][r3].forEach(function(t5) {
        d3(t5.value, t5);
      }), this.barCtx.barOptions.isDumbbell && h3.globals.seriesRange.length) {
        var g3 = this.barCtx.barOptions.dumbbellColors ? this.barCtx.barOptions.dumbbellColors : h3.globals.colors, u3 = { strokeHeight: "x" === t4 ? 0 : h3.globals.markers.size[s3], strokeWidth: "x" === t4 ? h3.globals.markers.size[s3] : 0, strokeDashArray: 0, strokeLineCap: "round", strokeColor: Array.isArray(g3[s3]) ? g3[s3][0] : g3[s3] };
        d3(h3.globals.seriesRangeStart[s3][r3], u3), d3(h3.globals.seriesRangeEnd[s3][r3], e3(e3({}, u3), {}, { strokeColor: Array.isArray(g3[s3]) ? g3[s3][1] : g3[s3] }));
      }
      return c3;
    } }, { key: "drawGoalLine", value: function(t4) {
      var e4 = t4.barXPosition, i3 = t4.barYPosition, a3 = t4.goalX, s3 = t4.goalY, r3 = t4.barWidth, o3 = t4.barHeight, n3 = new m2(this.barCtx.ctx), l3 = n3.group({ className: "apexcharts-bar-goals-groups" });
      l3.node.classList.add("apexcharts-element-hidden"), this.barCtx.w.globals.delayedElements.push({ el: l3.node }), l3.attr("clip-path", "url(#gridRectMarkerMask".concat(this.barCtx.w.globals.cuid, ")"));
      var h3 = null;
      return this.barCtx.isHorizontal ? Array.isArray(a3) && a3.forEach(function(t5) {
        if (t5.x >= -1 && t5.x <= n3.w.globals.gridWidth + 1) {
          var e6 = void 0 !== t5.attrs.strokeHeight ? t5.attrs.strokeHeight : o3 / 2, a4 = i3 + e6 + o3 / 2;
          h3 = n3.drawLine(t5.x, a4 - 2 * e6, t5.x, a4, t5.attrs.strokeColor ? t5.attrs.strokeColor : void 0, t5.attrs.strokeDashArray, t5.attrs.strokeWidth ? t5.attrs.strokeWidth : 2, t5.attrs.strokeLineCap), l3.add(h3);
        }
      }) : Array.isArray(s3) && s3.forEach(function(t5) {
        if (t5.y >= -1 && t5.y <= n3.w.globals.gridHeight + 1) {
          var i4 = void 0 !== t5.attrs.strokeWidth ? t5.attrs.strokeWidth : r3 / 2, a4 = e4 + i4 + r3 / 2;
          h3 = n3.drawLine(a4 - 2 * i4, t5.y, a4, t5.y, t5.attrs.strokeColor ? t5.attrs.strokeColor : void 0, t5.attrs.strokeDashArray, t5.attrs.strokeHeight ? t5.attrs.strokeHeight : 2, t5.attrs.strokeLineCap), l3.add(h3);
        }
      }), l3;
    } }, { key: "drawBarShadow", value: function(t4) {
      var e4 = t4.prevPaths, i3 = t4.currPaths, a3 = t4.color, s3 = this.w, r3 = e4.x, o3 = e4.x1, n3 = e4.barYPosition, l3 = i3.x, h3 = i3.x1, c3 = i3.barYPosition, d3 = n3 + i3.barHeight, g3 = new m2(this.barCtx.ctx), u3 = new x2(), p3 = g3.move(o3, d3) + g3.line(r3, d3) + g3.line(l3, c3) + g3.line(h3, c3) + g3.line(o3, d3) + ("around" === s3.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z");
      return g3.drawPath({ d: p3, fill: u3.shadeColor(0.5, x2.rgb2hex(a3)), stroke: "none", strokeWidth: 0, fillOpacity: 1, classes: "apexcharts-bar-shadows" });
    } }, { key: "getZeroValueEncounters", value: function(t4) {
      var e4 = t4.i, i3 = t4.j, a3 = this.w, s3 = 0, r3 = 0;
      return a3.globals.seriesPercent.forEach(function(t5, a4) {
        t5[i3] && s3++, a4 < e4 && 0 === t5[i3] && r3++;
      }), { nonZeroColumns: s3, zeroEncounters: r3 };
    } }]), t3;
  }(), yt = function() {
    function t3(e4, i3) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
      var s3 = this.w;
      this.barOptions = s3.config.plotOptions.bar, this.isHorizontal = this.barOptions.horizontal, this.strokeWidth = s3.config.stroke.width, this.isNullValue = false, this.isRangeBar = s3.globals.seriesRange.length && this.isHorizontal, this.isVerticalGroupedRangeBar = !s3.globals.isBarHorizontal && s3.globals.seriesRange.length && s3.config.plotOptions.bar.rangeBarGroupRows, this.isFunnel = this.barOptions.isFunnel, this.xyRatios = i3, null !== this.xyRatios && (this.xRatio = i3.xRatio, this.yRatio = i3.yRatio, this.invertedXRatio = i3.invertedXRatio, this.invertedYRatio = i3.invertedYRatio, this.baseLineY = i3.baseLineY, this.baseLineInvertedY = i3.baseLineInvertedY), this.yaxisIndex = 0, this.translationsIndex = 0, this.seriesLen = 0, this.pathArr = [];
      var r3 = new W2(this.ctx);
      this.lastActiveBarSerieIndex = r3.getActiveConfigSeriesIndex("desc", ["bar", "column"]);
      var o3 = r3.getBarSeriesIndices(), n3 = new y2(this.ctx);
      this.stackedSeriesTotals = n3.getStackedSeriesTotals(this.w.config.series.map(function(t4, e6) {
        return -1 === o3.indexOf(e6) ? e6 : -1;
      }).filter(function(t4) {
        return -1 !== t4;
      })), this.barHelpers = new mt(this);
    }
    return r2(t3, [{ key: "draw", value: function(t4, i3) {
      var a3 = this.w, s3 = new m2(this.ctx), r3 = new y2(this.ctx, a3);
      t4 = r3.getLogSeries(t4), this.series = t4, this.yRatio = r3.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t4);
      var o3 = s3.group({ class: "apexcharts-bar-series apexcharts-plot-series" });
      a3.config.dataLabels.enabled && this.totalItems > this.barOptions.dataLabels.maxItems && console.warn("WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering - ApexCharts");
      for (var n3 = 0, l3 = 0; n3 < t4.length; n3++, l3++) {
        var h3, c3, d3, g3, u3 = void 0, p3 = void 0, f3 = [], b3 = [], v3 = a3.globals.comboCharts ? i3[n3] : n3, w3 = s3.group({ class: "apexcharts-series", rel: n3 + 1, seriesName: x2.escapeString(a3.globals.seriesNames[v3]), "data:realIndex": v3 });
        this.ctx.series.addCollapsedClassToSeries(w3, v3), t4[n3].length > 0 && (this.visibleI = this.visibleI + 1);
        var k3 = 0, A6 = 0;
        this.yRatio.length > 1 && (this.yaxisIndex = a3.globals.seriesYAxisReverseMap[v3], this.translationsIndex = v3);
        var S3 = this.translationsIndex;
        this.isReversed = a3.config.yaxis[this.yaxisIndex] && a3.config.yaxis[this.yaxisIndex].reversed;
        var C3 = this.barHelpers.initialPositions();
        p3 = C3.y, k3 = C3.barHeight, c3 = C3.yDivision, g3 = C3.zeroW, u3 = C3.x, A6 = C3.barWidth, h3 = C3.xDivision, d3 = C3.zeroH, this.horizontal || b3.push(u3 + A6 / 2);
        var L3 = s3.group({ class: "apexcharts-datalabels", "data:realIndex": v3 });
        a3.globals.delayedElements.push({ el: L3.node }), L3.node.classList.add("apexcharts-element-hidden");
        var P3 = s3.group({ class: "apexcharts-bar-goals-markers" }), M3 = s3.group({ class: "apexcharts-bar-shadows" });
        a3.globals.delayedElements.push({ el: M3.node }), M3.node.classList.add("apexcharts-element-hidden");
        for (var I3 = 0; I3 < t4[n3].length; I3++) {
          var T3 = this.barHelpers.getStrokeWidth(n3, I3, v3), z3 = null, X4 = { indexes: { i: n3, j: I3, realIndex: v3, translationsIndex: S3, bc: l3 }, x: u3, y: p3, strokeWidth: T3, elSeries: w3 };
          this.isHorizontal ? (z3 = this.drawBarPaths(e3(e3({}, X4), {}, { barHeight: k3, zeroW: g3, yDivision: c3 })), A6 = this.series[n3][I3] / this.invertedYRatio) : (z3 = this.drawColumnPaths(e3(e3({}, X4), {}, { xDivision: h3, barWidth: A6, zeroH: d3 })), k3 = this.series[n3][I3] / this.yRatio[S3]);
          var E3 = this.barHelpers.getPathFillColor(t4, n3, I3, v3);
          if (this.isFunnel && this.barOptions.isFunnel3d && this.pathArr.length && I3 > 0) {
            var Y4 = this.barHelpers.drawBarShadow({ color: "string" == typeof E3 && -1 === (null == E3 ? void 0 : E3.indexOf("url")) ? E3 : x2.hexToRgba(a3.globals.colors[n3]), prevPaths: this.pathArr[this.pathArr.length - 1], currPaths: z3 });
            Y4 && M3.add(Y4);
          }
          this.pathArr.push(z3);
          var F3 = this.barHelpers.drawGoalLine({ barXPosition: z3.barXPosition, barYPosition: z3.barYPosition, goalX: z3.goalX, goalY: z3.goalY, barHeight: k3, barWidth: A6 });
          F3 && P3.add(F3), p3 = z3.y, u3 = z3.x, I3 > 0 && b3.push(u3 + A6 / 2), f3.push(p3), this.renderSeries({ realIndex: v3, pathFill: E3, j: I3, i: n3, pathFrom: z3.pathFrom, pathTo: z3.pathTo, strokeWidth: T3, elSeries: w3, x: u3, y: p3, series: t4, barHeight: z3.barHeight ? z3.barHeight : k3, barWidth: z3.barWidth ? z3.barWidth : A6, elDataLabelsWrap: L3, elGoalsMarkers: P3, elBarShadows: M3, visibleSeries: this.visibleI, type: "bar" });
        }
        a3.globals.seriesXvalues[v3] = b3, a3.globals.seriesYvalues[v3] = f3, o3.add(w3);
      }
      return o3;
    } }, { key: "renderSeries", value: function(t4) {
      var e4 = t4.realIndex, i3 = t4.pathFill, a3 = t4.lineFill, s3 = t4.j, r3 = t4.i, o3 = t4.groupIndex, n3 = t4.pathFrom, l3 = t4.pathTo, h3 = t4.strokeWidth, c3 = t4.elSeries, d3 = t4.x, g3 = t4.y, u3 = t4.y1, p3 = t4.y2, f3 = t4.series, x3 = t4.barHeight, b3 = t4.barWidth, y3 = t4.barXPosition, w3 = t4.barYPosition, k3 = t4.elDataLabelsWrap, A6 = t4.elGoalsMarkers, S3 = t4.elBarShadows, C3 = t4.visibleSeries, L3 = t4.type, P3 = this.w, M3 = new m2(this.ctx);
      a3 || (a3 = this.barOptions.distributed ? P3.globals.stroke.colors[s3] : P3.globals.stroke.colors[e4]), P3.config.series[r3].data[s3] && P3.config.series[r3].data[s3].strokeColor && (a3 = P3.config.series[r3].data[s3].strokeColor), this.isNullValue && (i3 = "none");
      var I3 = s3 / P3.config.chart.animations.animateGradually.delay * (P3.config.chart.animations.speed / P3.globals.dataPoints) / 2.4, T3 = M3.renderPaths({ i: r3, j: s3, realIndex: e4, pathFrom: n3, pathTo: l3, stroke: a3, strokeWidth: h3, strokeLineCap: P3.config.stroke.lineCap, fill: i3, animationDelay: I3, initialSpeed: P3.config.chart.animations.speed, dataChangeSpeed: P3.config.chart.animations.dynamicAnimation.speed, className: "apexcharts-".concat(L3, "-area") });
      T3.attr("clip-path", "url(#gridRectMask".concat(P3.globals.cuid, ")"));
      var z3 = P3.config.forecastDataPoints;
      z3.count > 0 && s3 >= P3.globals.dataPoints - z3.count && (T3.node.setAttribute("stroke-dasharray", z3.dashArray), T3.node.setAttribute("stroke-width", z3.strokeWidth), T3.node.setAttribute("fill-opacity", z3.fillOpacity)), void 0 !== u3 && void 0 !== p3 && (T3.attr("data-range-y1", u3), T3.attr("data-range-y2", p3)), new v2(this.ctx).setSelectionFilter(T3, e4, s3), c3.add(T3);
      var X4 = new vt(this).handleBarDataLabels({ x: d3, y: g3, y1: u3, y2: p3, i: r3, j: s3, series: f3, realIndex: e4, groupIndex: o3, barHeight: x3, barWidth: b3, barXPosition: y3, barYPosition: w3, renderedPath: T3, visibleSeries: C3 });
      return null !== X4.dataLabels && k3.add(X4.dataLabels), X4.totalDataLabels && k3.add(X4.totalDataLabels), c3.add(k3), A6 && c3.add(A6), S3 && c3.add(S3), c3;
    } }, { key: "drawBarPaths", value: function(t4) {
      var e4, i3 = t4.indexes, a3 = t4.barHeight, s3 = t4.strokeWidth, r3 = t4.zeroW, o3 = t4.x, n3 = t4.y, l3 = t4.yDivision, h3 = t4.elSeries, c3 = this.w, d3 = i3.i, g3 = i3.j;
      if (c3.globals.isXNumeric)
        e4 = (n3 = (c3.globals.seriesX[d3][g3] - c3.globals.minX) / this.invertedXRatio - a3) + a3 * this.visibleI;
      else if (c3.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
        var u3 = 0, p3 = 0;
        c3.globals.seriesPercent.forEach(function(t5, e6) {
          t5[g3] && u3++, e6 < d3 && 0 === t5[g3] && p3++;
        }), u3 > 0 && (a3 = this.seriesLen * a3 / u3), e4 = n3 + a3 * this.visibleI, e4 -= a3 * p3;
      } else
        e4 = n3 + a3 * this.visibleI;
      this.isFunnel && (r3 -= (this.barHelpers.getXForValue(this.series[d3][g3], r3) - r3) / 2), o3 = this.barHelpers.getXForValue(this.series[d3][g3], r3);
      var f3 = this.barHelpers.getBarpaths({ barYPosition: e4, barHeight: a3, x1: r3, x2: o3, strokeWidth: s3, series: this.series, realIndex: i3.realIndex, i: d3, j: g3, w: c3 });
      return c3.globals.isXNumeric || (n3 += l3), this.barHelpers.barBackground({ j: g3, i: d3, y1: e4 - a3 * this.visibleI, y2: a3 * this.seriesLen, elSeries: h3 }), { pathTo: f3.pathTo, pathFrom: f3.pathFrom, x1: r3, x: o3, y: n3, goalX: this.barHelpers.getGoalValues("x", r3, null, d3, g3), barYPosition: e4, barHeight: a3 };
    } }, { key: "drawColumnPaths", value: function(t4) {
      var e4, i3 = t4.indexes, a3 = t4.x, s3 = t4.y, r3 = t4.xDivision, o3 = t4.barWidth, n3 = t4.zeroH, l3 = t4.strokeWidth, h3 = t4.elSeries, c3 = this.w, d3 = i3.realIndex, g3 = i3.translationsIndex, u3 = i3.i, p3 = i3.j, f3 = i3.bc;
      if (c3.globals.isXNumeric) {
        var x3 = this.getBarXForNumericXAxis({ x: a3, j: p3, realIndex: d3, barWidth: o3 });
        a3 = x3.x, e4 = x3.barXPosition;
      } else if (c3.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
        var b3 = this.barHelpers.getZeroValueEncounters({ i: u3, j: p3 }), v3 = b3.nonZeroColumns, m3 = b3.zeroEncounters;
        v3 > 0 && (o3 = this.seriesLen * o3 / v3), e4 = a3 + o3 * this.visibleI, e4 -= o3 * m3;
      } else
        e4 = a3 + o3 * this.visibleI;
      s3 = this.barHelpers.getYForValue(this.series[u3][p3], n3, g3);
      var y3 = this.barHelpers.getColumnPaths({ barXPosition: e4, barWidth: o3, y1: n3, y2: s3, strokeWidth: l3, series: this.series, realIndex: d3, i: u3, j: p3, w: c3 });
      return c3.globals.isXNumeric || (a3 += r3), this.barHelpers.barBackground({ bc: f3, j: p3, i: u3, x1: e4 - l3 / 2 - o3 * this.visibleI, x2: o3 * this.seriesLen + l3 / 2, elSeries: h3 }), { pathTo: y3.pathTo, pathFrom: y3.pathFrom, x: a3, y: s3, goalY: this.barHelpers.getGoalValues("y", null, n3, u3, p3, g3), barXPosition: e4, barWidth: o3 };
    } }, { key: "getBarXForNumericXAxis", value: function(t4) {
      var e4 = t4.x, i3 = t4.barWidth, a3 = t4.realIndex, s3 = t4.j, r3 = this.w, o3 = a3;
      return r3.globals.seriesX[a3].length || (o3 = r3.globals.maxValsInArrayIndex), r3.globals.seriesX[o3][s3] && (e4 = (r3.globals.seriesX[o3][s3] - r3.globals.minX) / this.xRatio - i3 * this.seriesLen / 2), { barXPosition: e4 + i3 * this.visibleI, x: e4 };
    } }, { key: "getPreviousPath", value: function(t4, e4) {
      for (var i3, a3 = this.w, s3 = 0; s3 < a3.globals.previousPaths.length; s3++) {
        var r3 = a3.globals.previousPaths[s3];
        r3.paths && r3.paths.length > 0 && parseInt(r3.realIndex, 10) === parseInt(t4, 10) && void 0 !== a3.globals.previousPaths[s3].paths[e4] && (i3 = a3.globals.previousPaths[s3].paths[e4].d);
      }
      return i3;
    } }]), t3;
  }(), wt = function(t3) {
    n2(s3, yt);
    var i3 = d2(s3);
    function s3() {
      return a2(this, s3), i3.apply(this, arguments);
    }
    return r2(s3, [{ key: "draw", value: function(t4, i4) {
      var a3 = this, s4 = this.w;
      this.graphics = new m2(this.ctx), this.bar = new yt(this.ctx, this.xyRatios);
      var r3 = new y2(this.ctx, s4);
      t4 = r3.getLogSeries(t4), this.yRatio = r3.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t4), "100%" === s4.config.chart.stackType && (t4 = s4.globals.seriesPercent.slice()), this.series = t4, this.barHelpers.initializeStackedPrevVars(this);
      for (var o3 = this.graphics.group({ class: "apexcharts-bar-series apexcharts-plot-series" }), n3 = 0, l3 = 0, h3 = function(r4, h4) {
        var c4 = void 0, d4 = void 0, g3 = void 0, u3 = void 0, p3 = -1;
        a3.groupCtx = a3, s4.globals.seriesGroups.forEach(function(t5, e4) {
          t5.indexOf(s4.config.series[r4].name) > -1 && (p3 = e4);
        }), -1 !== p3 && (a3.groupCtx = a3[s4.globals.seriesGroups[p3]]);
        var f3 = [], b3 = [], v3 = s4.globals.comboCharts ? i4[r4] : r4, m3 = 0;
        a3.yRatio.length > 1 && (a3.yaxisIndex = s4.globals.seriesYAxisReverseMap[v3][0], m3 = v3), a3.isReversed = s4.config.yaxis[a3.yaxisIndex] && s4.config.yaxis[a3.yaxisIndex].reversed;
        var y3 = a3.graphics.group({ class: "apexcharts-series", seriesName: x2.escapeString(s4.globals.seriesNames[v3]), rel: r4 + 1, "data:realIndex": v3 });
        a3.ctx.series.addCollapsedClassToSeries(y3, v3);
        var w3 = a3.graphics.group({ class: "apexcharts-datalabels", "data:realIndex": v3 }), k3 = a3.graphics.group({ class: "apexcharts-bar-goals-markers" }), A6 = 0, S3 = 0, C3 = a3.initialPositions(n3, l3, c4, d4, g3, u3, m3);
        l3 = C3.y, A6 = C3.barHeight, d4 = C3.yDivision, u3 = C3.zeroW, n3 = C3.x, S3 = C3.barWidth, c4 = C3.xDivision, g3 = C3.zeroH, s4.globals.barHeight = A6, s4.globals.barWidth = S3, a3.barHelpers.initializeStackedXYVars(a3), 1 === a3.groupCtx.prevY.length && a3.groupCtx.prevY[0].every(function(t5) {
          return isNaN(t5);
        }) && (a3.groupCtx.prevY[0] = a3.groupCtx.prevY[0].map(function(t5) {
          return g3;
        }), a3.groupCtx.prevYF[0] = a3.groupCtx.prevYF[0].map(function(t5) {
          return 0;
        }));
        for (var L3 = 0; L3 < s4.globals.dataPoints; L3++) {
          var P3 = a3.barHelpers.getStrokeWidth(r4, L3, v3), M3 = { indexes: { i: r4, j: L3, realIndex: v3, translationsIndex: m3, bc: h4 }, strokeWidth: P3, x: n3, y: l3, elSeries: y3, groupIndex: p3, seriesGroup: s4.globals.seriesGroups[p3] }, I3 = null;
          a3.isHorizontal ? (I3 = a3.drawStackedBarPaths(e3(e3({}, M3), {}, { zeroW: u3, barHeight: A6, yDivision: d4 })), S3 = a3.series[r4][L3] / a3.invertedYRatio) : (I3 = a3.drawStackedColumnPaths(e3(e3({}, M3), {}, { xDivision: c4, barWidth: S3, zeroH: g3 })), A6 = a3.series[r4][L3] / a3.yRatio[m3]);
          var T3 = a3.barHelpers.drawGoalLine({ barXPosition: I3.barXPosition, barYPosition: I3.barYPosition, goalX: I3.goalX, goalY: I3.goalY, barHeight: A6, barWidth: S3 });
          T3 && k3.add(T3), l3 = I3.y, n3 = I3.x, f3.push(n3), b3.push(l3);
          var z3 = a3.barHelpers.getPathFillColor(t4, r4, L3, v3);
          y3 = a3.renderSeries({ realIndex: v3, pathFill: z3, j: L3, i: r4, groupIndex: p3, pathFrom: I3.pathFrom, pathTo: I3.pathTo, strokeWidth: P3, elSeries: y3, x: n3, y: l3, series: t4, barHeight: A6, barWidth: S3, elDataLabelsWrap: w3, elGoalsMarkers: k3, type: "bar", visibleSeries: 0 });
        }
        s4.globals.seriesXvalues[v3] = f3, s4.globals.seriesYvalues[v3] = b3, a3.groupCtx.prevY.push(a3.groupCtx.yArrj), a3.groupCtx.prevYF.push(a3.groupCtx.yArrjF), a3.groupCtx.prevYVal.push(a3.groupCtx.yArrjVal), a3.groupCtx.prevX.push(a3.groupCtx.xArrj), a3.groupCtx.prevXF.push(a3.groupCtx.xArrjF), a3.groupCtx.prevXVal.push(a3.groupCtx.xArrjVal), o3.add(y3);
      }, c3 = 0, d3 = 0; c3 < t4.length; c3++, d3++)
        h3(c3, d3);
      return o3;
    } }, { key: "initialPositions", value: function(t4, e4, i4, a3, s4, r3, o3) {
      var n3, l3, h3, c3, d3 = this.w;
      return this.isHorizontal ? (h3 = (h3 = a3 = d3.globals.gridHeight / d3.globals.dataPoints) * parseInt(d3.config.plotOptions.bar.barHeight, 10) / 100, -1 === String(d3.config.plotOptions.bar.barHeight).indexOf("%") && (h3 = parseInt(d3.config.plotOptions.bar.barHeight, 10)), r3 = this.baseLineInvertedY + d3.globals.padHorizontal + (this.isReversed ? d3.globals.gridWidth : 0) - (this.isReversed ? 2 * this.baseLineInvertedY : 0), e4 = (a3 - h3) / 2) : (c3 = i4 = d3.globals.gridWidth / d3.globals.dataPoints, c3 = d3.globals.isXNumeric && d3.globals.dataPoints > 1 ? (i4 = d3.globals.minXDiff / this.xRatio) * parseInt(this.barOptions.columnWidth, 10) / 100 : c3 * parseInt(d3.config.plotOptions.bar.columnWidth, 10) / 100, -1 === String(d3.config.plotOptions.bar.columnWidth).indexOf("%") && (c3 = parseInt(d3.config.plotOptions.bar.columnWidth, 10)), s4 = d3.globals.gridHeight - this.baseLineY[o3] - (this.isReversed ? d3.globals.gridHeight : 0) + (this.isReversed ? 2 * this.baseLineY[o3] : 0), t4 = d3.globals.padHorizontal + (i4 - c3) / 2), { x: t4, y: e4, yDivision: a3, xDivision: i4, barHeight: null !== (n3 = d3.globals.seriesGroups) && void 0 !== n3 && n3.length ? h3 / d3.globals.seriesGroups.length : h3, barWidth: null !== (l3 = d3.globals.seriesGroups) && void 0 !== l3 && l3.length ? c3 / d3.globals.seriesGroups.length : c3, zeroH: s4, zeroW: r3 };
    } }, { key: "drawStackedBarPaths", value: function(t4) {
      for (var e4, i4 = t4.indexes, a3 = t4.barHeight, s4 = t4.strokeWidth, r3 = t4.zeroW, o3 = t4.x, n3 = t4.y, l3 = t4.groupIndex, h3 = t4.seriesGroup, c3 = t4.yDivision, d3 = t4.elSeries, g3 = this.w, u3 = n3 + (-1 !== l3 ? l3 * a3 : 0), p3 = i4.i, f3 = i4.j, x3 = i4.translationsIndex, b3 = 0, v3 = 0; v3 < this.groupCtx.prevXF.length; v3++)
        b3 += this.groupCtx.prevXF[v3][f3];
      var m3 = p3;
      if (h3 && (m3 = h3.indexOf(g3.config.series[p3].name)), m3 > 0) {
        var y3 = r3;
        this.groupCtx.prevXVal[m3 - 1][f3] < 0 ? y3 = this.series[p3][f3] >= 0 ? this.groupCtx.prevX[m3 - 1][f3] + b3 - 2 * (this.isReversed ? b3 : 0) : this.groupCtx.prevX[m3 - 1][f3] : this.groupCtx.prevXVal[m3 - 1][f3] >= 0 && (y3 = this.series[p3][f3] >= 0 ? this.groupCtx.prevX[m3 - 1][f3] : this.groupCtx.prevX[m3 - 1][f3] - b3 + 2 * (this.isReversed ? b3 : 0)), e4 = y3;
      } else
        e4 = r3;
      o3 = null === this.series[p3][f3] ? e4 : e4 + this.series[p3][f3] / this.invertedYRatio - 2 * (this.isReversed ? this.series[p3][f3] / this.invertedYRatio : 0);
      var w3 = this.barHelpers.getBarpaths({ barYPosition: u3, barHeight: a3, x1: e4, x2: o3, strokeWidth: s4, series: this.series, realIndex: i4.realIndex, seriesGroup: h3, i: p3, j: f3, w: g3 });
      return this.barHelpers.barBackground({ j: f3, i: p3, y1: u3, y2: a3, elSeries: d3 }), n3 += c3, { pathTo: w3.pathTo, pathFrom: w3.pathFrom, goalX: this.barHelpers.getGoalValues("x", r3, null, p3, f3, x3), barYPosition: u3, x: o3, y: n3 };
    } }, { key: "drawStackedColumnPaths", value: function(t4) {
      var e4 = t4.indexes, i4 = t4.x, a3 = t4.y, s4 = t4.xDivision, r3 = t4.barWidth, o3 = t4.zeroH, n3 = t4.groupIndex, l3 = t4.seriesGroup, h3 = t4.elSeries, c3 = this.w, d3 = e4.i, g3 = e4.j, u3 = e4.bc, p3 = e4.translationsIndex;
      if (c3.globals.isXNumeric) {
        var f3 = c3.globals.seriesX[d3][g3];
        f3 || (f3 = 0), i4 = (f3 - c3.globals.minX) / this.xRatio - r3 / 2, c3.globals.seriesGroups.length && (i4 = (f3 - c3.globals.minX) / this.xRatio - r3 / 2 * c3.globals.seriesGroups.length);
      }
      for (var x3, b3 = i4 + (-1 !== n3 ? n3 * r3 : 0), v3 = 0, m3 = 0; m3 < this.groupCtx.prevYF.length; m3++)
        v3 += isNaN(this.groupCtx.prevYF[m3][g3]) ? 0 : this.groupCtx.prevYF[m3][g3];
      var y3 = d3;
      if (l3 && (y3 = l3.indexOf(c3.config.series[d3].name)), y3 > 0 && !c3.globals.isXNumeric || y3 > 0 && c3.globals.isXNumeric && c3.globals.seriesX[d3 - 1][g3] === c3.globals.seriesX[d3][g3]) {
        var w3, k3, A6, S3 = Math.min(this.yRatio.length + 1, d3 + 1);
        if (void 0 !== this.groupCtx.prevY[y3 - 1] && this.groupCtx.prevY[y3 - 1].length)
          for (var C3 = 1; C3 < S3; C3++) {
            var L3;
            if (!isNaN(null === (L3 = this.groupCtx.prevY[y3 - C3]) || void 0 === L3 ? void 0 : L3[g3])) {
              A6 = this.groupCtx.prevY[y3 - C3][g3];
              break;
            }
          }
        for (var P3 = 1; P3 < S3; P3++) {
          var M3, I3;
          if ((null === (M3 = this.groupCtx.prevYVal[y3 - P3]) || void 0 === M3 ? void 0 : M3[g3]) < 0) {
            k3 = this.series[d3][g3] >= 0 ? A6 - v3 + 2 * (this.isReversed ? v3 : 0) : A6;
            break;
          }
          if ((null === (I3 = this.groupCtx.prevYVal[y3 - P3]) || void 0 === I3 ? void 0 : I3[g3]) >= 0) {
            k3 = this.series[d3][g3] >= 0 ? A6 : A6 + v3 - 2 * (this.isReversed ? v3 : 0);
            break;
          }
        }
        void 0 === k3 && (k3 = c3.globals.gridHeight), x3 = null !== (w3 = this.groupCtx.prevYF[0]) && void 0 !== w3 && w3.every(function(t5) {
          return 0 === t5;
        }) && this.groupCtx.prevYF.slice(1, y3).every(function(t5) {
          return t5.every(function(t6) {
            return isNaN(t6);
          });
        }) ? o3 : k3;
      } else
        x3 = o3;
      a3 = this.series[d3][g3] ? x3 - this.series[d3][g3] / this.yRatio[p3] + 2 * (this.isReversed ? this.series[d3][g3] / this.yRatio[p3] : 0) : x3;
      var T3 = this.barHelpers.getColumnPaths({ barXPosition: b3, barWidth: r3, y1: x3, y2: a3, yRatio: this.yRatio[p3], strokeWidth: this.strokeWidth, series: this.series, seriesGroup: l3, realIndex: e4.realIndex, i: d3, j: g3, w: c3 });
      return this.barHelpers.barBackground({ bc: u3, j: g3, i: d3, x1: b3, x2: r3, elSeries: h3 }), i4 += s4, { pathTo: T3.pathTo, pathFrom: T3.pathFrom, goalY: this.barHelpers.getGoalValues("y", null, o3, d3, g3), barXPosition: b3, x: c3.globals.isXNumeric ? i4 - s4 : i4, y: a3 };
    } }]), s3;
  }(), kt = function(t3) {
    n2(s3, yt);
    var i3 = d2(s3);
    function s3() {
      return a2(this, s3), i3.apply(this, arguments);
    }
    return r2(s3, [{ key: "draw", value: function(t4, i4, a3) {
      var s4 = this, r3 = this.w, o3 = new m2(this.ctx), n3 = r3.globals.comboCharts ? i4 : r3.config.chart.type, l3 = new H2(this.ctx);
      this.candlestickOptions = this.w.config.plotOptions.candlestick, this.boxOptions = this.w.config.plotOptions.boxPlot, this.isHorizontal = r3.config.plotOptions.bar.horizontal;
      var h3 = new y2(this.ctx, r3);
      t4 = h3.getLogSeries(t4), this.series = t4, this.yRatio = h3.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t4);
      for (var c3 = o3.group({ class: "apexcharts-".concat(n3, "-series apexcharts-plot-series") }), d3 = function(i5) {
        s4.isBoxPlot = "boxPlot" === r3.config.chart.type || "boxPlot" === r3.config.series[i5].type;
        var n4, h4, d4, g4, u3 = void 0, p3 = void 0, f3 = [], b3 = [], v3 = r3.globals.comboCharts ? a3[i5] : i5, m3 = o3.group({ class: "apexcharts-series", seriesName: x2.escapeString(r3.globals.seriesNames[v3]), rel: i5 + 1, "data:realIndex": v3 });
        s4.ctx.series.addCollapsedClassToSeries(m3, v3), t4[i5].length > 0 && (s4.visibleI = s4.visibleI + 1);
        var y3, w3, k3 = 0;
        s4.yRatio.length > 1 && (s4.yaxisIndex = r3.globals.seriesYAxisReverseMap[v3][0], k3 = v3);
        var A6 = s4.barHelpers.initialPositions();
        p3 = A6.y, y3 = A6.barHeight, h4 = A6.yDivision, g4 = A6.zeroW, u3 = A6.x, w3 = A6.barWidth, n4 = A6.xDivision, d4 = A6.zeroH, b3.push(u3 + w3 / 2);
        for (var S3 = o3.group({ class: "apexcharts-datalabels", "data:realIndex": v3 }), C3 = function(a4) {
          var o4 = s4.barHelpers.getStrokeWidth(i5, a4, v3), c4 = null, x3 = { indexes: { i: i5, j: a4, realIndex: v3, translationsIndex: k3 }, x: u3, y: p3, strokeWidth: o4, elSeries: m3 };
          c4 = s4.isHorizontal ? s4.drawHorizontalBoxPaths(e3(e3({}, x3), {}, { yDivision: h4, barHeight: y3, zeroW: g4 })) : s4.drawVerticalBoxPaths(e3(e3({}, x3), {}, { xDivision: n4, barWidth: w3, zeroH: d4 })), p3 = c4.y, u3 = c4.x, a4 > 0 && b3.push(u3 + w3 / 2), f3.push(p3), c4.pathTo.forEach(function(e4, n5) {
            var h5 = !s4.isBoxPlot && s4.candlestickOptions.wick.useFillColor ? c4.color[n5] : r3.globals.stroke.colors[i5], d5 = l3.fillPath({ seriesNumber: v3, dataPointIndex: a4, color: c4.color[n5], value: t4[i5][a4] });
            s4.renderSeries({ realIndex: v3, pathFill: d5, lineFill: h5, j: a4, i: i5, pathFrom: c4.pathFrom, pathTo: e4, strokeWidth: o4, elSeries: m3, x: u3, y: p3, series: t4, barHeight: y3, barWidth: w3, elDataLabelsWrap: S3, visibleSeries: s4.visibleI, type: r3.config.chart.type });
          });
        }, L3 = 0; L3 < r3.globals.dataPoints; L3++)
          C3(L3);
        r3.globals.seriesXvalues[v3] = b3, r3.globals.seriesYvalues[v3] = f3, c3.add(m3);
      }, g3 = 0; g3 < t4.length; g3++)
        d3(g3);
      return c3;
    } }, { key: "drawVerticalBoxPaths", value: function(t4) {
      var e4 = t4.indexes, i4 = t4.x;
      t4.y;
      var a3 = t4.xDivision, s4 = t4.barWidth, r3 = t4.zeroH, o3 = t4.strokeWidth, n3 = this.w, l3 = new m2(this.ctx), h3 = e4.i, c3 = e4.j, d3 = true, g3 = n3.config.plotOptions.candlestick.colors.upward, u3 = n3.config.plotOptions.candlestick.colors.downward, p3 = "";
      this.isBoxPlot && (p3 = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
      var f3 = this.yRatio[e4.translationsIndex], x3 = e4.realIndex, b3 = this.getOHLCValue(x3, c3), v3 = r3, y3 = r3;
      b3.o > b3.c && (d3 = false);
      var w3 = Math.min(b3.o, b3.c), k3 = Math.max(b3.o, b3.c), A6 = b3.m;
      n3.globals.isXNumeric && (i4 = (n3.globals.seriesX[x3][c3] - n3.globals.minX) / this.xRatio - s4 / 2);
      var S3 = i4 + s4 * this.visibleI;
      void 0 === this.series[h3][c3] || null === this.series[h3][c3] ? (w3 = r3, k3 = r3) : (w3 = r3 - w3 / f3, k3 = r3 - k3 / f3, v3 = r3 - b3.h / f3, y3 = r3 - b3.l / f3, A6 = r3 - b3.m / f3);
      var C3 = l3.move(S3, r3), L3 = l3.move(S3 + s4 / 2, w3);
      return n3.globals.previousPaths.length > 0 && (L3 = this.getPreviousPath(x3, c3, true)), C3 = this.isBoxPlot ? [l3.move(S3, w3) + l3.line(S3 + s4 / 2, w3) + l3.line(S3 + s4 / 2, v3) + l3.line(S3 + s4 / 4, v3) + l3.line(S3 + s4 - s4 / 4, v3) + l3.line(S3 + s4 / 2, v3) + l3.line(S3 + s4 / 2, w3) + l3.line(S3 + s4, w3) + l3.line(S3 + s4, A6) + l3.line(S3, A6) + l3.line(S3, w3 + o3 / 2), l3.move(S3, A6) + l3.line(S3 + s4, A6) + l3.line(S3 + s4, k3) + l3.line(S3 + s4 / 2, k3) + l3.line(S3 + s4 / 2, y3) + l3.line(S3 + s4 - s4 / 4, y3) + l3.line(S3 + s4 / 4, y3) + l3.line(S3 + s4 / 2, y3) + l3.line(S3 + s4 / 2, k3) + l3.line(S3, k3) + l3.line(S3, A6) + "z"] : [l3.move(S3, k3) + l3.line(S3 + s4 / 2, k3) + l3.line(S3 + s4 / 2, v3) + l3.line(S3 + s4 / 2, k3) + l3.line(S3 + s4, k3) + l3.line(S3 + s4, w3) + l3.line(S3 + s4 / 2, w3) + l3.line(S3 + s4 / 2, y3) + l3.line(S3 + s4 / 2, w3) + l3.line(S3, w3) + l3.line(S3, k3 - o3 / 2)], L3 += l3.move(S3, w3), n3.globals.isXNumeric || (i4 += a3), { pathTo: C3, pathFrom: L3, x: i4, y: k3, barXPosition: S3, color: this.isBoxPlot ? p3 : d3 ? [g3] : [u3] };
    } }, { key: "drawHorizontalBoxPaths", value: function(t4) {
      var e4 = t4.indexes;
      t4.x;
      var i4 = t4.y, a3 = t4.yDivision, s4 = t4.barHeight, r3 = t4.zeroW, o3 = t4.strokeWidth, n3 = this.w, l3 = new m2(this.ctx), h3 = e4.i, c3 = e4.j, d3 = this.boxOptions.colors.lower;
      this.isBoxPlot && (d3 = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
      var g3 = this.invertedYRatio, u3 = e4.realIndex, p3 = this.getOHLCValue(u3, c3), f3 = r3, x3 = r3, b3 = Math.min(p3.o, p3.c), v3 = Math.max(p3.o, p3.c), y3 = p3.m;
      n3.globals.isXNumeric && (i4 = (n3.globals.seriesX[u3][c3] - n3.globals.minX) / this.invertedXRatio - s4 / 2);
      var w3 = i4 + s4 * this.visibleI;
      void 0 === this.series[h3][c3] || null === this.series[h3][c3] ? (b3 = r3, v3 = r3) : (b3 = r3 + b3 / g3, v3 = r3 + v3 / g3, f3 = r3 + p3.h / g3, x3 = r3 + p3.l / g3, y3 = r3 + p3.m / g3);
      var k3 = l3.move(r3, w3), A6 = l3.move(b3, w3 + s4 / 2);
      return n3.globals.previousPaths.length > 0 && (A6 = this.getPreviousPath(u3, c3, true)), k3 = [l3.move(b3, w3) + l3.line(b3, w3 + s4 / 2) + l3.line(f3, w3 + s4 / 2) + l3.line(f3, w3 + s4 / 2 - s4 / 4) + l3.line(f3, w3 + s4 / 2 + s4 / 4) + l3.line(f3, w3 + s4 / 2) + l3.line(b3, w3 + s4 / 2) + l3.line(b3, w3 + s4) + l3.line(y3, w3 + s4) + l3.line(y3, w3) + l3.line(b3 + o3 / 2, w3), l3.move(y3, w3) + l3.line(y3, w3 + s4) + l3.line(v3, w3 + s4) + l3.line(v3, w3 + s4 / 2) + l3.line(x3, w3 + s4 / 2) + l3.line(x3, w3 + s4 - s4 / 4) + l3.line(x3, w3 + s4 / 4) + l3.line(x3, w3 + s4 / 2) + l3.line(v3, w3 + s4 / 2) + l3.line(v3, w3) + l3.line(y3, w3) + "z"], A6 += l3.move(b3, w3), n3.globals.isXNumeric || (i4 += a3), { pathTo: k3, pathFrom: A6, x: v3, y: i4, barYPosition: w3, color: d3 };
    } }, { key: "getOHLCValue", value: function(t4, e4) {
      var i4 = this.w;
      return { o: this.isBoxPlot ? i4.globals.seriesCandleH[t4][e4] : i4.globals.seriesCandleO[t4][e4], h: this.isBoxPlot ? i4.globals.seriesCandleO[t4][e4] : i4.globals.seriesCandleH[t4][e4], m: i4.globals.seriesCandleM[t4][e4], l: this.isBoxPlot ? i4.globals.seriesCandleC[t4][e4] : i4.globals.seriesCandleL[t4][e4], c: this.isBoxPlot ? i4.globals.seriesCandleL[t4][e4] : i4.globals.seriesCandleC[t4][e4] };
    } }]), s3;
  }(), At = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "checkColorRange", value: function() {
      var t4 = this.w, e4 = false, i3 = t4.config.plotOptions[t4.config.chart.type];
      return i3.colorScale.ranges.length > 0 && i3.colorScale.ranges.map(function(t5, i4) {
        t5.from <= 0 && (e4 = true);
      }), e4;
    } }, { key: "getShadeColor", value: function(t4, e4, i3, a3) {
      var s3 = this.w, r3 = 1, o3 = s3.config.plotOptions[t4].shadeIntensity, n3 = this.determineColor(t4, e4, i3);
      s3.globals.hasNegs || a3 ? r3 = s3.config.plotOptions[t4].reverseNegativeShade ? n3.percent < 0 ? n3.percent / 100 * (1.25 * o3) : (1 - n3.percent / 100) * (1.25 * o3) : n3.percent <= 0 ? 1 - (1 + n3.percent / 100) * o3 : (1 - n3.percent / 100) * o3 : (r3 = 1 - n3.percent / 100, "treemap" === t4 && (r3 = (1 - n3.percent / 100) * (1.25 * o3)));
      var l3 = n3.color, h3 = new x2();
      return s3.config.plotOptions[t4].enableShades && (l3 = "dark" === this.w.config.theme.mode ? x2.hexToRgba(h3.shadeColor(-1 * r3, n3.color), s3.config.fill.opacity) : x2.hexToRgba(h3.shadeColor(r3, n3.color), s3.config.fill.opacity)), { color: l3, colorProps: n3 };
    } }, { key: "determineColor", value: function(t4, e4, i3) {
      var a3 = this.w, s3 = a3.globals.series[e4][i3], r3 = a3.config.plotOptions[t4], o3 = r3.colorScale.inverse ? i3 : e4;
      r3.distributed && "treemap" === a3.config.chart.type && (o3 = i3);
      var n3 = a3.globals.colors[o3], l3 = null, h3 = Math.min.apply(Math, u2(a3.globals.series[e4])), c3 = Math.max.apply(Math, u2(a3.globals.series[e4]));
      r3.distributed || "heatmap" !== t4 || (h3 = a3.globals.minY, c3 = a3.globals.maxY), void 0 !== r3.colorScale.min && (h3 = r3.colorScale.min < a3.globals.minY ? r3.colorScale.min : a3.globals.minY, c3 = r3.colorScale.max > a3.globals.maxY ? r3.colorScale.max : a3.globals.maxY);
      var d3 = Math.abs(c3) + Math.abs(h3), g3 = 100 * s3 / (0 === d3 ? d3 - 1e-6 : d3);
      r3.colorScale.ranges.length > 0 && r3.colorScale.ranges.map(function(t5, e6) {
        if (s3 >= t5.from && s3 <= t5.to) {
          n3 = t5.color, l3 = t5.foreColor ? t5.foreColor : null, h3 = t5.from, c3 = t5.to;
          var i4 = Math.abs(c3) + Math.abs(h3);
          g3 = 100 * s3 / (0 === i4 ? i4 - 1e-6 : i4);
        }
      });
      return { color: n3, foreColor: l3, percent: g3 };
    } }, { key: "calculateDataLabels", value: function(t4) {
      var e4 = t4.text, i3 = t4.x, a3 = t4.y, s3 = t4.i, r3 = t4.j, o3 = t4.colorProps, n3 = t4.fontSize, l3 = this.w.config.dataLabels, h3 = new m2(this.ctx), c3 = new N2(this.ctx), d3 = null;
      if (l3.enabled) {
        d3 = h3.group({ class: "apexcharts-data-labels" });
        var g3 = l3.offsetX, u3 = l3.offsetY, p3 = i3 + g3, f3 = a3 + parseFloat(l3.style.fontSize) / 3 + u3;
        c3.plotDataLabelsText({ x: p3, y: f3, text: e4, i: s3, j: r3, color: o3.foreColor, parent: d3, fontSize: n3, dataLabelsConfig: l3 });
      }
      return d3;
    } }, { key: "addListeners", value: function(t4) {
      var e4 = new m2(this.ctx);
      t4.node.addEventListener("mouseenter", e4.pathMouseEnter.bind(this, t4)), t4.node.addEventListener("mouseleave", e4.pathMouseLeave.bind(this, t4)), t4.node.addEventListener("mousedown", e4.pathMouseDown.bind(this, t4));
    } }]), t3;
  }(), St = function() {
    function t3(e4, i3) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.xRatio = i3.xRatio, this.yRatio = i3.yRatio, this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.helpers = new At(e4), this.rectRadius = this.w.config.plotOptions.heatmap.radius, this.strokeWidth = this.w.config.stroke.show ? this.w.config.stroke.width : 0;
    }
    return r2(t3, [{ key: "draw", value: function(t4) {
      var e4 = this.w, i3 = new m2(this.ctx), a3 = i3.group({ class: "apexcharts-heatmap" });
      a3.attr("clip-path", "url(#gridRectMask".concat(e4.globals.cuid, ")"));
      var s3 = e4.globals.gridWidth / e4.globals.dataPoints, r3 = e4.globals.gridHeight / e4.globals.series.length, o3 = 0, n3 = false;
      this.negRange = this.helpers.checkColorRange();
      var l3 = t4.slice();
      e4.config.yaxis[0].reversed && (n3 = true, l3.reverse());
      for (var h3 = n3 ? 0 : l3.length - 1; n3 ? h3 < l3.length : h3 >= 0; n3 ? h3++ : h3--) {
        var c3 = i3.group({ class: "apexcharts-series apexcharts-heatmap-series", seriesName: x2.escapeString(e4.globals.seriesNames[h3]), rel: h3 + 1, "data:realIndex": h3 });
        if (this.ctx.series.addCollapsedClassToSeries(c3, h3), e4.config.chart.dropShadow.enabled) {
          var d3 = e4.config.chart.dropShadow;
          new v2(this.ctx).dropShadow(c3, d3, h3);
        }
        for (var g3 = 0, u3 = e4.config.plotOptions.heatmap.shadeIntensity, p3 = 0; p3 < l3[h3].length; p3++) {
          var f3 = this.helpers.getShadeColor(e4.config.chart.type, h3, p3, this.negRange), b3 = f3.color, y3 = f3.colorProps;
          if ("image" === e4.config.fill.type)
            b3 = new H2(this.ctx).fillPath({ seriesNumber: h3, dataPointIndex: p3, opacity: e4.globals.hasNegs ? y3.percent < 0 ? 1 - (1 + y3.percent / 100) : u3 + y3.percent / 100 : y3.percent / 100, patternID: x2.randomId(), width: e4.config.fill.image.width ? e4.config.fill.image.width : s3, height: e4.config.fill.image.height ? e4.config.fill.image.height : r3 });
          var w3 = this.rectRadius, k3 = i3.drawRect(g3, o3, s3, r3, w3);
          if (k3.attr({ cx: g3, cy: o3 }), k3.node.classList.add("apexcharts-heatmap-rect"), c3.add(k3), k3.attr({ fill: b3, i: h3, index: h3, j: p3, val: t4[h3][p3], "stroke-width": this.strokeWidth, stroke: e4.config.plotOptions.heatmap.useFillColorAsStroke ? b3 : e4.globals.stroke.colors[0], color: b3 }), this.helpers.addListeners(k3), e4.config.chart.animations.enabled && !e4.globals.dataChanged) {
            var A6 = 1;
            e4.globals.resized || (A6 = e4.config.chart.animations.speed), this.animateHeatMap(k3, g3, o3, s3, r3, A6);
          }
          if (e4.globals.dataChanged) {
            var S3 = 1;
            if (this.dynamicAnim.enabled && e4.globals.shouldAnimate) {
              S3 = this.dynamicAnim.speed;
              var C3 = e4.globals.previousPaths[h3] && e4.globals.previousPaths[h3][p3] && e4.globals.previousPaths[h3][p3].color;
              C3 || (C3 = "rgba(255, 255, 255, 0)"), this.animateHeatColor(k3, x2.isColorHex(C3) ? C3 : x2.rgb2hex(C3), x2.isColorHex(b3) ? b3 : x2.rgb2hex(b3), S3);
            }
          }
          var L3 = (0, e4.config.dataLabels.formatter)(e4.globals.series[h3][p3], { value: e4.globals.series[h3][p3], seriesIndex: h3, dataPointIndex: p3, w: e4 }), P3 = this.helpers.calculateDataLabels({ text: L3, x: g3 + s3 / 2, y: o3 + r3 / 2, i: h3, j: p3, colorProps: y3, series: l3 });
          null !== P3 && c3.add(P3), g3 += s3;
        }
        o3 += r3, a3.add(c3);
      }
      var M3 = e4.globals.yAxisScale[0].result.slice();
      return e4.config.yaxis[0].reversed ? M3.unshift("") : M3.push(""), e4.globals.yAxisScale[0].result = M3, a3;
    } }, { key: "animateHeatMap", value: function(t4, e4, i3, a3, s3, r3) {
      var o3 = new b2(this.ctx);
      o3.animateRect(t4, { x: e4 + a3 / 2, y: i3 + s3 / 2, width: 0, height: 0 }, { x: e4, y: i3, width: a3, height: s3 }, r3, function() {
        o3.animationCompleted(t4);
      });
    } }, { key: "animateHeatColor", value: function(t4, e4, i3, a3) {
      t4.attr({ fill: e4 }).animate(a3).attr({ fill: i3 });
    } }]), t3;
  }(), Ct = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "drawYAxisTexts", value: function(t4, e4, i3, a3) {
      var s3 = this.w, r3 = s3.config.yaxis[0], o3 = s3.globals.yLabelFormatters[0];
      return new m2(this.ctx).drawText({ x: t4 + r3.labels.offsetX, y: e4 + r3.labels.offsetY, text: o3(a3, i3), textAnchor: "middle", fontSize: r3.labels.style.fontSize, fontFamily: r3.labels.style.fontFamily, foreColor: Array.isArray(r3.labels.style.colors) ? r3.labels.style.colors[i3] : r3.labels.style.colors });
    } }]), t3;
  }(), Lt = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
      var i3 = this.w;
      this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animBeginArr = [0], this.animDur = 0, this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels, this.lineColorArr = void 0 !== i3.globals.stroke.colors ? i3.globals.stroke.colors : i3.globals.colors, this.defaultSize = Math.min(i3.globals.gridWidth, i3.globals.gridHeight), this.centerY = this.defaultSize / 2, this.centerX = i3.globals.gridWidth / 2, "radialBar" === i3.config.chart.type ? this.fullAngle = 360 : this.fullAngle = Math.abs(i3.config.plotOptions.pie.endAngle - i3.config.plotOptions.pie.startAngle), this.initialAngle = i3.config.plotOptions.pie.startAngle % this.fullAngle, i3.globals.radialSize = this.defaultSize / 2.05 - i3.config.stroke.width - (i3.config.chart.sparkline.enabled ? 0 : i3.config.chart.dropShadow.blur), this.donutSize = i3.globals.radialSize * parseInt(i3.config.plotOptions.pie.donut.size, 10) / 100, this.maxY = 0, this.sliceLabels = [], this.sliceSizes = [], this.prevSectorAngleArr = [];
    }
    return r2(t3, [{ key: "draw", value: function(t4) {
      var e4 = this, i3 = this.w, a3 = new m2(this.ctx);
      if (this.ret = a3.group({ class: "apexcharts-pie" }), i3.globals.noData)
        return this.ret;
      for (var s3 = 0, r3 = 0; r3 < t4.length; r3++)
        s3 += x2.negToZero(t4[r3]);
      var o3 = [], n3 = a3.group();
      0 === s3 && (s3 = 1e-5), t4.forEach(function(t5) {
        e4.maxY = Math.max(e4.maxY, t5);
      }), i3.config.yaxis[0].max && (this.maxY = i3.config.yaxis[0].max), "back" === i3.config.grid.position && "polarArea" === this.chartType && this.drawPolarElements(this.ret);
      for (var l3 = 0; l3 < t4.length; l3++) {
        var h3 = this.fullAngle * x2.negToZero(t4[l3]) / s3;
        o3.push(h3), "polarArea" === this.chartType ? (o3[l3] = this.fullAngle / t4.length, this.sliceSizes.push(i3.globals.radialSize * t4[l3] / this.maxY)) : this.sliceSizes.push(i3.globals.radialSize);
      }
      if (i3.globals.dataChanged) {
        for (var c3, d3 = 0, g3 = 0; g3 < i3.globals.previousPaths.length; g3++)
          d3 += x2.negToZero(i3.globals.previousPaths[g3]);
        for (var u3 = 0; u3 < i3.globals.previousPaths.length; u3++)
          c3 = this.fullAngle * x2.negToZero(i3.globals.previousPaths[u3]) / d3, this.prevSectorAngleArr.push(c3);
      }
      this.donutSize < 0 && (this.donutSize = 0);
      var p3 = i3.config.plotOptions.pie.customScale, f3 = i3.globals.gridWidth / 2, b3 = i3.globals.gridHeight / 2, v3 = f3 - i3.globals.gridWidth / 2 * p3, y3 = b3 - i3.globals.gridHeight / 2 * p3;
      if ("donut" === this.chartType) {
        var w3 = a3.drawCircle(this.donutSize);
        w3.attr({ cx: this.centerX, cy: this.centerY, fill: i3.config.plotOptions.pie.donut.background ? i3.config.plotOptions.pie.donut.background : "transparent" }), n3.add(w3);
      }
      var k3 = this.drawArcs(o3, t4);
      if (this.sliceLabels.forEach(function(t5) {
        k3.add(t5);
      }), n3.attr({ transform: "translate(".concat(v3, ", ").concat(y3, ") scale(").concat(p3, ")") }), n3.add(k3), this.ret.add(n3), this.donutDataLabels.show) {
        var A6 = this.renderInnerDataLabels(this.donutDataLabels, { hollowSize: this.donutSize, centerX: this.centerX, centerY: this.centerY, opacity: this.donutDataLabels.show, translateX: v3, translateY: y3 });
        this.ret.add(A6);
      }
      return "front" === i3.config.grid.position && "polarArea" === this.chartType && this.drawPolarElements(this.ret), this.ret;
    } }, { key: "drawArcs", value: function(t4, e4) {
      var i3 = this.w, a3 = new v2(this.ctx), s3 = new m2(this.ctx), r3 = new H2(this.ctx), o3 = s3.group({ class: "apexcharts-slices" }), n3 = this.initialAngle, l3 = this.initialAngle, h3 = this.initialAngle, c3 = this.initialAngle;
      this.strokeWidth = i3.config.stroke.show ? i3.config.stroke.width : 0;
      for (var d3 = 0; d3 < t4.length; d3++) {
        var g3 = s3.group({ class: "apexcharts-series apexcharts-pie-series", seriesName: x2.escapeString(i3.globals.seriesNames[d3]), rel: d3 + 1, "data:realIndex": d3 });
        o3.add(g3), l3 = c3, h3 = (n3 = h3) + t4[d3], c3 = l3 + this.prevSectorAngleArr[d3];
        var u3 = h3 < n3 ? this.fullAngle + h3 - n3 : h3 - n3, p3 = r3.fillPath({ seriesNumber: d3, size: this.sliceSizes[d3], value: e4[d3] }), f3 = this.getChangedPath(l3, c3), b3 = s3.drawPath({ d: f3, stroke: Array.isArray(this.lineColorArr) ? this.lineColorArr[d3] : this.lineColorArr, strokeWidth: 0, fill: p3, fillOpacity: i3.config.fill.opacity, classes: "apexcharts-pie-area apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(d3) });
        if (b3.attr({ index: 0, j: d3 }), a3.setSelectionFilter(b3, 0, d3), i3.config.chart.dropShadow.enabled) {
          var y3 = i3.config.chart.dropShadow;
          a3.dropShadow(b3, y3, d3);
        }
        this.addListeners(b3, this.donutDataLabels), m2.setAttrs(b3.node, { "data:angle": u3, "data:startAngle": n3, "data:strokeWidth": this.strokeWidth, "data:value": e4[d3] });
        var w3 = { x: 0, y: 0 };
        "pie" === this.chartType || "polarArea" === this.chartType ? w3 = x2.polarToCartesian(this.centerX, this.centerY, i3.globals.radialSize / 1.25 + i3.config.plotOptions.pie.dataLabels.offset, (n3 + u3 / 2) % this.fullAngle) : "donut" === this.chartType && (w3 = x2.polarToCartesian(this.centerX, this.centerY, (i3.globals.radialSize + this.donutSize) / 2 + i3.config.plotOptions.pie.dataLabels.offset, (n3 + u3 / 2) % this.fullAngle)), g3.add(b3);
        var k3 = 0;
        if (!this.initialAnim || i3.globals.resized || i3.globals.dataChanged ? this.animBeginArr.push(0) : (0 === (k3 = u3 / this.fullAngle * i3.config.chart.animations.speed) && (k3 = 1), this.animDur = k3 + this.animDur, this.animBeginArr.push(this.animDur)), this.dynamicAnim && i3.globals.dataChanged ? this.animatePaths(b3, { size: this.sliceSizes[d3], endAngle: h3, startAngle: n3, prevStartAngle: l3, prevEndAngle: c3, animateStartingPos: true, i: d3, animBeginArr: this.animBeginArr, shouldSetPrevPaths: true, dur: i3.config.chart.animations.dynamicAnimation.speed }) : this.animatePaths(b3, { size: this.sliceSizes[d3], endAngle: h3, startAngle: n3, i: d3, totalItems: t4.length - 1, animBeginArr: this.animBeginArr, dur: k3 }), i3.config.plotOptions.pie.expandOnClick && "polarArea" !== this.chartType && b3.click(this.pieClicked.bind(this, d3)), void 0 !== i3.globals.selectedDataPoints[0] && i3.globals.selectedDataPoints[0].indexOf(d3) > -1 && this.pieClicked(d3), i3.config.dataLabels.enabled) {
          var A6 = w3.x, S3 = w3.y, C3 = 100 * u3 / this.fullAngle + "%";
          if (0 !== u3 && i3.config.plotOptions.pie.dataLabels.minAngleToShowLabel < t4[d3]) {
            var L3 = i3.config.dataLabels.formatter;
            void 0 !== L3 && (C3 = L3(i3.globals.seriesPercent[d3][0], { seriesIndex: d3, w: i3 }));
            var P3 = i3.globals.dataLabels.style.colors[d3], M3 = s3.group({ class: "apexcharts-datalabels" }), I3 = s3.drawText({ x: A6, y: S3, text: C3, textAnchor: "middle", fontSize: i3.config.dataLabels.style.fontSize, fontFamily: i3.config.dataLabels.style.fontFamily, fontWeight: i3.config.dataLabels.style.fontWeight, foreColor: P3 });
            if (M3.add(I3), i3.config.dataLabels.dropShadow.enabled) {
              var T3 = i3.config.dataLabels.dropShadow;
              a3.dropShadow(I3, T3);
            }
            I3.node.classList.add("apexcharts-pie-label"), i3.config.chart.animations.animate && false === i3.globals.resized && (I3.node.classList.add("apexcharts-pie-label-delay"), I3.node.style.animationDelay = i3.config.chart.animations.speed / 940 + "s"), this.sliceLabels.push(M3);
          }
        }
      }
      return o3;
    } }, { key: "addListeners", value: function(t4, e4) {
      var i3 = new m2(this.ctx);
      t4.node.addEventListener("mouseenter", i3.pathMouseEnter.bind(this, t4)), t4.node.addEventListener("mouseleave", i3.pathMouseLeave.bind(this, t4)), t4.node.addEventListener("mouseleave", this.revertDataLabelsInner.bind(this, t4.node, e4)), t4.node.addEventListener("mousedown", i3.pathMouseDown.bind(this, t4)), this.donutDataLabels.total.showAlways || (t4.node.addEventListener("mouseenter", this.printDataLabelsInner.bind(this, t4.node, e4)), t4.node.addEventListener("mousedown", this.printDataLabelsInner.bind(this, t4.node, e4)));
    } }, { key: "animatePaths", value: function(t4, e4) {
      var i3 = this.w, a3 = e4.endAngle < e4.startAngle ? this.fullAngle + e4.endAngle - e4.startAngle : e4.endAngle - e4.startAngle, s3 = a3, r3 = e4.startAngle, o3 = e4.startAngle;
      void 0 !== e4.prevStartAngle && void 0 !== e4.prevEndAngle && (r3 = e4.prevEndAngle, s3 = e4.prevEndAngle < e4.prevStartAngle ? this.fullAngle + e4.prevEndAngle - e4.prevStartAngle : e4.prevEndAngle - e4.prevStartAngle), e4.i === i3.config.series.length - 1 && (a3 + o3 > this.fullAngle ? e4.endAngle = e4.endAngle - (a3 + o3) : a3 + o3 < this.fullAngle && (e4.endAngle = e4.endAngle + (this.fullAngle - (a3 + o3)))), a3 === this.fullAngle && (a3 = this.fullAngle - 0.01), this.animateArc(t4, r3, o3, a3, s3, e4);
    } }, { key: "animateArc", value: function(t4, e4, i3, a3, s3, r3) {
      var o3, n3 = this, l3 = this.w, h3 = new b2(this.ctx), c3 = r3.size;
      (isNaN(e4) || isNaN(s3)) && (e4 = i3, s3 = a3, r3.dur = 0);
      var d3 = a3, g3 = i3, u3 = e4 < i3 ? this.fullAngle + e4 - i3 : e4 - i3;
      l3.globals.dataChanged && r3.shouldSetPrevPaths && r3.prevEndAngle && (o3 = n3.getPiePath({ me: n3, startAngle: r3.prevStartAngle, angle: r3.prevEndAngle < r3.prevStartAngle ? this.fullAngle + r3.prevEndAngle - r3.prevStartAngle : r3.prevEndAngle - r3.prevStartAngle, size: c3 }), t4.attr({ d: o3 })), 0 !== r3.dur ? t4.animate(r3.dur, l3.globals.easing, r3.animBeginArr[r3.i]).afterAll(function() {
        "pie" !== n3.chartType && "donut" !== n3.chartType && "polarArea" !== n3.chartType || this.animate(l3.config.chart.animations.dynamicAnimation.speed).attr({ "stroke-width": n3.strokeWidth }), r3.i === l3.config.series.length - 1 && h3.animationCompleted(t4);
      }).during(function(l4) {
        d3 = u3 + (a3 - u3) * l4, r3.animateStartingPos && (d3 = s3 + (a3 - s3) * l4, g3 = e4 - s3 + (i3 - (e4 - s3)) * l4), o3 = n3.getPiePath({ me: n3, startAngle: g3, angle: d3, size: c3 }), t4.node.setAttribute("data:pathOrig", o3), t4.attr({ d: o3 });
      }) : (o3 = n3.getPiePath({ me: n3, startAngle: g3, angle: a3, size: c3 }), r3.isTrack || (l3.globals.animationEnded = true), t4.node.setAttribute("data:pathOrig", o3), t4.attr({ d: o3, "stroke-width": n3.strokeWidth }));
    } }, { key: "pieClicked", value: function(t4) {
      var e4, i3 = this.w, a3 = this, s3 = a3.sliceSizes[t4] + (i3.config.plotOptions.pie.expandOnClick ? 4 : 0), r3 = i3.globals.dom.Paper.select(".apexcharts-".concat(a3.chartType.toLowerCase(), "-slice-").concat(t4)).members[0];
      if ("true" !== r3.attr("data:pieClicked")) {
        var o3 = i3.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area");
        Array.prototype.forEach.call(o3, function(t5) {
          t5.setAttribute("data:pieClicked", "false");
          var e6 = t5.getAttribute("data:pathOrig");
          e6 && t5.setAttribute("d", e6);
        }), r3.attr("data:pieClicked", "true");
        var n3 = parseInt(r3.attr("data:startAngle"), 10), l3 = parseInt(r3.attr("data:angle"), 10);
        e4 = a3.getPiePath({ me: a3, startAngle: n3, angle: l3, size: s3 }), 360 !== l3 && r3.plot(e4);
      } else {
        r3.attr({ "data:pieClicked": "false" }), this.revertDataLabelsInner(r3.node, this.donutDataLabels);
        var h3 = r3.attr("data:pathOrig");
        r3.attr({ d: h3 });
      }
    } }, { key: "getChangedPath", value: function(t4, e4) {
      var i3 = "";
      return this.dynamicAnim && this.w.globals.dataChanged && (i3 = this.getPiePath({ me: this, startAngle: t4, angle: e4 - t4, size: this.size })), i3;
    } }, { key: "getPiePath", value: function(t4) {
      var e4, i3 = t4.me, a3 = t4.startAngle, s3 = t4.angle, r3 = t4.size, o3 = new m2(this.ctx), n3 = a3, l3 = Math.PI * (n3 - 90) / 180, h3 = s3 + a3;
      Math.ceil(h3) >= this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle && (h3 = this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle - 0.01), Math.ceil(h3) > this.fullAngle && (h3 -= this.fullAngle);
      var c3 = Math.PI * (h3 - 90) / 180, d3 = i3.centerX + r3 * Math.cos(l3), g3 = i3.centerY + r3 * Math.sin(l3), u3 = i3.centerX + r3 * Math.cos(c3), p3 = i3.centerY + r3 * Math.sin(c3), f3 = x2.polarToCartesian(i3.centerX, i3.centerY, i3.donutSize, h3), b3 = x2.polarToCartesian(i3.centerX, i3.centerY, i3.donutSize, n3), v3 = s3 > 180 ? 1 : 0, y3 = ["M", d3, g3, "A", r3, r3, 0, v3, 1, u3, p3];
      return e4 = "donut" === i3.chartType ? [].concat(y3, ["L", f3.x, f3.y, "A", i3.donutSize, i3.donutSize, 0, v3, 0, b3.x, b3.y, "L", d3, g3, "z"]).join(" ") : "pie" === i3.chartType || "polarArea" === i3.chartType ? [].concat(y3, ["L", i3.centerX, i3.centerY, "L", d3, g3]).join(" ") : [].concat(y3).join(" "), o3.roundPathCorners(e4, 2 * this.strokeWidth);
    } }, { key: "drawPolarElements", value: function(t4) {
      var e4 = this.w, i3 = new _(this.ctx), a3 = new m2(this.ctx), s3 = new Ct(this.ctx), r3 = a3.group(), o3 = a3.group(), n3 = i3.niceScale(0, Math.ceil(this.maxY), 0), l3 = n3.result.reverse(), h3 = n3.result.length;
      this.maxY = n3.niceMax;
      for (var c3 = e4.globals.radialSize, d3 = c3 / (h3 - 1), g3 = 0; g3 < h3 - 1; g3++) {
        var u3 = a3.drawCircle(c3);
        if (u3.attr({ cx: this.centerX, cy: this.centerY, fill: "none", "stroke-width": e4.config.plotOptions.polarArea.rings.strokeWidth, stroke: e4.config.plotOptions.polarArea.rings.strokeColor }), e4.config.yaxis[0].show) {
          var p3 = s3.drawYAxisTexts(this.centerX, this.centerY - c3 + parseInt(e4.config.yaxis[0].labels.style.fontSize, 10) / 2, g3, l3[g3]);
          o3.add(p3);
        }
        r3.add(u3), c3 -= d3;
      }
      this.drawSpokes(t4), t4.add(r3), t4.add(o3);
    } }, { key: "renderInnerDataLabels", value: function(t4, e4) {
      var i3 = this.w, a3 = new m2(this.ctx), s3 = a3.group({ class: "apexcharts-datalabels-group", transform: "translate(".concat(e4.translateX ? e4.translateX : 0, ", ").concat(e4.translateY ? e4.translateY : 0, ") scale(").concat(i3.config.plotOptions.pie.customScale, ")") }), r3 = t4.total.show;
      s3.node.style.opacity = e4.opacity;
      var o3, n3, l3 = e4.centerX, h3 = e4.centerY;
      o3 = void 0 === t4.name.color ? i3.globals.colors[0] : t4.name.color;
      var c3 = t4.name.fontSize, d3 = t4.name.fontFamily, g3 = t4.name.fontWeight;
      n3 = void 0 === t4.value.color ? i3.config.chart.foreColor : t4.value.color;
      var u3 = t4.value.formatter, p3 = "", f3 = "";
      if (r3 ? (o3 = t4.total.color, c3 = t4.total.fontSize, d3 = t4.total.fontFamily, g3 = t4.total.fontWeight, f3 = t4.total.label, p3 = t4.total.formatter(i3)) : 1 === i3.globals.series.length && (p3 = u3(i3.globals.series[0], i3), f3 = i3.globals.seriesNames[0]), f3 && (f3 = t4.name.formatter(f3, t4.total.show, i3)), t4.name.show) {
        var x3 = a3.drawText({ x: l3, y: h3 + parseFloat(t4.name.offsetY), text: f3, textAnchor: "middle", foreColor: o3, fontSize: c3, fontWeight: g3, fontFamily: d3 });
        x3.node.classList.add("apexcharts-datalabel-label"), s3.add(x3);
      }
      if (t4.value.show) {
        var b3 = t4.name.show ? parseFloat(t4.value.offsetY) + 16 : t4.value.offsetY, v3 = a3.drawText({ x: l3, y: h3 + b3, text: p3, textAnchor: "middle", foreColor: n3, fontWeight: t4.value.fontWeight, fontSize: t4.value.fontSize, fontFamily: t4.value.fontFamily });
        v3.node.classList.add("apexcharts-datalabel-value"), s3.add(v3);
      }
      return s3;
    } }, { key: "printInnerLabels", value: function(t4, e4, i3, a3) {
      var s3, r3 = this.w;
      a3 ? s3 = void 0 === t4.name.color ? r3.globals.colors[parseInt(a3.parentNode.getAttribute("rel"), 10) - 1] : t4.name.color : r3.globals.series.length > 1 && t4.total.show && (s3 = t4.total.color);
      var o3 = r3.globals.dom.baseEl.querySelector(".apexcharts-datalabel-label"), n3 = r3.globals.dom.baseEl.querySelector(".apexcharts-datalabel-value");
      i3 = (0, t4.value.formatter)(i3, r3), a3 || "function" != typeof t4.total.formatter || (i3 = t4.total.formatter(r3));
      var l3 = e4 === t4.total.label;
      e4 = t4.name.formatter(e4, l3, r3), null !== o3 && (o3.textContent = e4), null !== n3 && (n3.textContent = i3), null !== o3 && (o3.style.fill = s3);
    } }, { key: "printDataLabelsInner", value: function(t4, e4) {
      var i3 = this.w, a3 = t4.getAttribute("data:value"), s3 = i3.globals.seriesNames[parseInt(t4.parentNode.getAttribute("rel"), 10) - 1];
      i3.globals.series.length > 1 && this.printInnerLabels(e4, s3, a3, t4);
      var r3 = i3.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group");
      null !== r3 && (r3.style.opacity = 1);
    } }, { key: "drawSpokes", value: function(t4) {
      var e4 = this, i3 = this.w, a3 = new m2(this.ctx), s3 = i3.config.plotOptions.polarArea.spokes;
      if (0 !== s3.strokeWidth) {
        for (var r3 = [], o3 = 360 / i3.globals.series.length, n3 = 0; n3 < i3.globals.series.length; n3++)
          r3.push(x2.polarToCartesian(this.centerX, this.centerY, i3.globals.radialSize, i3.config.plotOptions.pie.startAngle + o3 * n3));
        r3.forEach(function(i4, r4) {
          var o4 = a3.drawLine(i4.x, i4.y, e4.centerX, e4.centerY, Array.isArray(s3.connectorColors) ? s3.connectorColors[r4] : s3.connectorColors);
          t4.add(o4);
        });
      }
    } }, { key: "revertDataLabelsInner", value: function(t4, e4, i3) {
      var a3 = this, s3 = this.w, r3 = s3.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group"), o3 = false, n3 = s3.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area"), l3 = function(t5) {
        var i4 = t5.makeSliceOut, s4 = t5.printLabel;
        Array.prototype.forEach.call(n3, function(t6) {
          "true" === t6.getAttribute("data:pieClicked") && (i4 && (o3 = true), s4 && a3.printDataLabelsInner(t6, e4));
        });
      };
      if (l3({ makeSliceOut: true, printLabel: false }), e4.total.show && s3.globals.series.length > 1)
        o3 && !e4.total.showAlways ? l3({ makeSliceOut: false, printLabel: true }) : this.printInnerLabels(e4, e4.total.label, e4.total.formatter(s3));
      else if (l3({ makeSliceOut: false, printLabel: true }), !o3)
        if (s3.globals.selectedDataPoints.length && s3.globals.series.length > 1)
          if (s3.globals.selectedDataPoints[0].length > 0) {
            var h3 = s3.globals.selectedDataPoints[0], c3 = s3.globals.dom.baseEl.querySelector(".apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(h3));
            this.printDataLabelsInner(c3, e4);
          } else
            r3 && s3.globals.selectedDataPoints.length && 0 === s3.globals.selectedDataPoints[0].length && (r3.style.opacity = 0);
        else
          r3 && s3.globals.series.length > 1 && (r3.style.opacity = 0);
    } }]), t3;
  }(), Pt = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animDur = 0;
      var i3 = this.w;
      this.graphics = new m2(this.ctx), this.lineColorArr = void 0 !== i3.globals.stroke.colors ? i3.globals.stroke.colors : i3.globals.colors, this.defaultSize = i3.globals.svgHeight < i3.globals.svgWidth ? i3.globals.gridHeight + 1.5 * i3.globals.goldenPadding : i3.globals.gridWidth, this.isLog = i3.config.yaxis[0].logarithmic, this.logBase = i3.config.yaxis[0].logBase, this.coreUtils = new y2(this.ctx), this.maxValue = this.isLog ? this.coreUtils.getLogVal(this.logBase, i3.globals.maxY, 0) : i3.globals.maxY, this.minValue = this.isLog ? this.coreUtils.getLogVal(this.logBase, this.w.globals.minY, 0) : i3.globals.minY, this.polygons = i3.config.plotOptions.radar.polygons, this.strokeWidth = i3.config.stroke.show ? i3.config.stroke.width : 0, this.size = this.defaultSize / 2.1 - this.strokeWidth - i3.config.chart.dropShadow.blur, i3.config.xaxis.labels.show && (this.size = this.size - i3.globals.xAxisLabelsWidth / 1.75), void 0 !== i3.config.plotOptions.radar.size && (this.size = i3.config.plotOptions.radar.size), this.dataRadiusOfPercent = [], this.dataRadius = [], this.angleArr = [], this.yaxisLabelsTextsPos = [];
    }
    return r2(t3, [{ key: "draw", value: function(t4) {
      var i3 = this, a3 = this.w, s3 = new H2(this.ctx), r3 = [], o3 = new N2(this.ctx);
      t4.length && (this.dataPointsLen = t4[a3.globals.maxValsInArrayIndex].length), this.disAngle = 2 * Math.PI / this.dataPointsLen;
      var n3 = a3.globals.gridWidth / 2, l3 = a3.globals.gridHeight / 2, h3 = n3 + a3.config.plotOptions.radar.offsetX, c3 = l3 + a3.config.plotOptions.radar.offsetY, d3 = this.graphics.group({ class: "apexcharts-radar-series apexcharts-plot-series", transform: "translate(".concat(h3 || 0, ", ").concat(c3 || 0, ")") }), g3 = [], u3 = null, p3 = null;
      if (this.yaxisLabels = this.graphics.group({ class: "apexcharts-yaxis" }), t4.forEach(function(t5, n4) {
        var l4 = t5.length === a3.globals.dataPoints, h4 = i3.graphics.group().attr({ class: "apexcharts-series", "data:longestSeries": l4, seriesName: x2.escapeString(a3.globals.seriesNames[n4]), rel: n4 + 1, "data:realIndex": n4 });
        i3.dataRadiusOfPercent[n4] = [], i3.dataRadius[n4] = [], i3.angleArr[n4] = [], t5.forEach(function(t6, e4) {
          var a4 = Math.abs(i3.maxValue - i3.minValue);
          t6 += Math.abs(i3.minValue), i3.isLog && (t6 = i3.coreUtils.getLogVal(i3.logBase, t6, 0)), i3.dataRadiusOfPercent[n4][e4] = t6 / a4, i3.dataRadius[n4][e4] = i3.dataRadiusOfPercent[n4][e4] * i3.size, i3.angleArr[n4][e4] = e4 * i3.disAngle;
        }), g3 = i3.getDataPointsPos(i3.dataRadius[n4], i3.angleArr[n4]);
        var c4 = i3.createPaths(g3, { x: 0, y: 0 });
        u3 = i3.graphics.group({ class: "apexcharts-series-markers-wrap apexcharts-element-hidden" }), p3 = i3.graphics.group({ class: "apexcharts-datalabels", "data:realIndex": n4 }), a3.globals.delayedElements.push({ el: u3.node, index: n4 });
        var d4 = { i: n4, realIndex: n4, animationDelay: n4, initialSpeed: a3.config.chart.animations.speed, dataChangeSpeed: a3.config.chart.animations.dynamicAnimation.speed, className: "apexcharts-radar", shouldClipToGrid: false, bindEventsOnPaths: false, stroke: a3.globals.stroke.colors[n4], strokeLineCap: a3.config.stroke.lineCap }, f4 = null;
        a3.globals.previousPaths.length > 0 && (f4 = i3.getPreviousPath(n4));
        for (var b3 = 0; b3 < c4.linePathsTo.length; b3++) {
          var m3 = i3.graphics.renderPaths(e3(e3({}, d4), {}, { pathFrom: null === f4 ? c4.linePathsFrom[b3] : f4, pathTo: c4.linePathsTo[b3], strokeWidth: Array.isArray(i3.strokeWidth) ? i3.strokeWidth[n4] : i3.strokeWidth, fill: "none", drawShadow: false }));
          h4.add(m3);
          var y3 = s3.fillPath({ seriesNumber: n4 }), w3 = i3.graphics.renderPaths(e3(e3({}, d4), {}, { pathFrom: null === f4 ? c4.areaPathsFrom[b3] : f4, pathTo: c4.areaPathsTo[b3], strokeWidth: 0, fill: y3, drawShadow: false }));
          if (a3.config.chart.dropShadow.enabled) {
            var k3 = new v2(i3.ctx), A6 = a3.config.chart.dropShadow;
            k3.dropShadow(w3, Object.assign({}, A6, { noUserSpaceOnUse: true }), n4);
          }
          h4.add(w3);
        }
        t5.forEach(function(t6, s4) {
          var r4 = new D2(i3.ctx).getMarkerConfig({ cssClass: "apexcharts-marker", seriesIndex: n4, dataPointIndex: s4 }), l5 = i3.graphics.drawMarker(g3[s4].x, g3[s4].y, r4);
          l5.attr("rel", s4), l5.attr("j", s4), l5.attr("index", n4), l5.node.setAttribute("default-marker-size", r4.pSize);
          var c5 = i3.graphics.group({ class: "apexcharts-series-markers" });
          c5 && c5.add(l5), u3.add(c5), h4.add(u3);
          var d5 = a3.config.dataLabels;
          if (d5.enabled) {
            var f5 = d5.formatter(a3.globals.series[n4][s4], { seriesIndex: n4, dataPointIndex: s4, w: a3 });
            o3.plotDataLabelsText({ x: g3[s4].x, y: g3[s4].y, text: f5, textAnchor: "middle", i: n4, j: n4, parent: p3, offsetCorrection: false, dataLabelsConfig: e3({}, d5) });
          }
          h4.add(p3);
        }), r3.push(h4);
      }), this.drawPolygons({ parent: d3 }), a3.config.xaxis.labels.show) {
        var f3 = this.drawXAxisTexts();
        d3.add(f3);
      }
      return r3.forEach(function(t5) {
        d3.add(t5);
      }), d3.add(this.yaxisLabels), d3;
    } }, { key: "drawPolygons", value: function(t4) {
      for (var e4 = this, i3 = this.w, a3 = t4.parent, s3 = new Ct(this.ctx), r3 = i3.globals.yAxisScale[0].result.reverse(), o3 = r3.length, n3 = [], l3 = this.size / (o3 - 1), h3 = 0; h3 < o3; h3++)
        n3[h3] = l3 * h3;
      n3.reverse();
      var c3 = [], d3 = [];
      n3.forEach(function(t5, i4) {
        var a4 = x2.getPolygonPos(t5, e4.dataPointsLen), s4 = "";
        a4.forEach(function(t6, a5) {
          if (0 === i4) {
            var r4 = e4.graphics.drawLine(t6.x, t6.y, 0, 0, Array.isArray(e4.polygons.connectorColors) ? e4.polygons.connectorColors[a5] : e4.polygons.connectorColors);
            d3.push(r4);
          }
          0 === a5 && e4.yaxisLabelsTextsPos.push({ x: t6.x, y: t6.y }), s4 += t6.x + "," + t6.y + " ";
        }), c3.push(s4);
      }), c3.forEach(function(t5, s4) {
        var r4 = e4.polygons.strokeColors, o4 = e4.polygons.strokeWidth, n4 = e4.graphics.drawPolygon(t5, Array.isArray(r4) ? r4[s4] : r4, Array.isArray(o4) ? o4[s4] : o4, i3.globals.radarPolygons.fill.colors[s4]);
        a3.add(n4);
      }), d3.forEach(function(t5) {
        a3.add(t5);
      }), i3.config.yaxis[0].show && this.yaxisLabelsTextsPos.forEach(function(t5, i4) {
        var a4 = s3.drawYAxisTexts(t5.x, t5.y, i4, r3[i4]);
        e4.yaxisLabels.add(a4);
      });
    } }, { key: "drawXAxisTexts", value: function() {
      var t4 = this, i3 = this.w, a3 = i3.config.xaxis.labels, s3 = this.graphics.group({ class: "apexcharts-xaxis" }), r3 = x2.getPolygonPos(this.size, this.dataPointsLen);
      return i3.globals.labels.forEach(function(o3, n3) {
        var l3 = i3.config.xaxis.labels.formatter, h3 = new N2(t4.ctx);
        if (r3[n3]) {
          var c3 = t4.getTextPos(r3[n3], t4.size), d3 = l3(o3, { seriesIndex: -1, dataPointIndex: n3, w: i3 });
          h3.plotDataLabelsText({ x: c3.newX, y: c3.newY, text: d3, textAnchor: c3.textAnchor, i: n3, j: n3, parent: s3, color: Array.isArray(a3.style.colors) && a3.style.colors[n3] ? a3.style.colors[n3] : "#a8a8a8", dataLabelsConfig: e3({ textAnchor: c3.textAnchor, dropShadow: { enabled: false } }, a3), offsetCorrection: false });
        }
      }), s3;
    } }, { key: "createPaths", value: function(t4, e4) {
      var i3 = this, a3 = [], s3 = [], r3 = [], o3 = [];
      if (t4.length) {
        s3 = [this.graphics.move(e4.x, e4.y)], o3 = [this.graphics.move(e4.x, e4.y)];
        var n3 = this.graphics.move(t4[0].x, t4[0].y), l3 = this.graphics.move(t4[0].x, t4[0].y);
        t4.forEach(function(e6, a4) {
          n3 += i3.graphics.line(e6.x, e6.y), l3 += i3.graphics.line(e6.x, e6.y), a4 === t4.length - 1 && (n3 += "Z", l3 += "Z");
        }), a3.push(n3), r3.push(l3);
      }
      return { linePathsFrom: s3, linePathsTo: a3, areaPathsFrom: o3, areaPathsTo: r3 };
    } }, { key: "getTextPos", value: function(t4, e4) {
      var i3 = "middle", a3 = t4.x, s3 = t4.y;
      return Math.abs(t4.x) >= 10 ? t4.x > 0 ? (i3 = "start", a3 += 10) : t4.x < 0 && (i3 = "end", a3 -= 10) : i3 = "middle", Math.abs(t4.y) >= e4 - 10 && (t4.y < 0 ? s3 -= 10 : t4.y > 0 && (s3 += 10)), { textAnchor: i3, newX: a3, newY: s3 };
    } }, { key: "getPreviousPath", value: function(t4) {
      for (var e4 = this.w, i3 = null, a3 = 0; a3 < e4.globals.previousPaths.length; a3++) {
        var s3 = e4.globals.previousPaths[a3];
        s3.paths.length > 0 && parseInt(s3.realIndex, 10) === parseInt(t4, 10) && void 0 !== e4.globals.previousPaths[a3].paths[0] && (i3 = e4.globals.previousPaths[a3].paths[0].d);
      }
      return i3;
    } }, { key: "getDataPointsPos", value: function(t4, e4) {
      var i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.dataPointsLen;
      t4 = t4 || [], e4 = e4 || [];
      for (var a3 = [], s3 = 0; s3 < i3; s3++) {
        var r3 = {};
        r3.x = t4[s3] * Math.sin(e4[s3]), r3.y = -t4[s3] * Math.cos(e4[s3]), a3.push(r3);
      }
      return a3;
    } }]), t3;
  }(), Mt = function(t3) {
    n2(i3, Lt);
    var e4 = d2(i3);
    function i3(t4) {
      var s3;
      a2(this, i3), (s3 = e4.call(this, t4)).ctx = t4, s3.w = t4.w, s3.animBeginArr = [0], s3.animDur = 0;
      var r3 = s3.w;
      return s3.startAngle = r3.config.plotOptions.radialBar.startAngle, s3.endAngle = r3.config.plotOptions.radialBar.endAngle, s3.totalAngle = Math.abs(r3.config.plotOptions.radialBar.endAngle - r3.config.plotOptions.radialBar.startAngle), s3.trackStartAngle = r3.config.plotOptions.radialBar.track.startAngle, s3.trackEndAngle = r3.config.plotOptions.radialBar.track.endAngle, s3.barLabels = s3.w.config.plotOptions.radialBar.barLabels, s3.donutDataLabels = s3.w.config.plotOptions.radialBar.dataLabels, s3.radialDataLabels = s3.donutDataLabels, s3.trackStartAngle || (s3.trackStartAngle = s3.startAngle), s3.trackEndAngle || (s3.trackEndAngle = s3.endAngle), 360 === s3.endAngle && (s3.endAngle = 359.99), s3.margin = parseInt(r3.config.plotOptions.radialBar.track.margin, 10), s3.onBarLabelClick = s3.onBarLabelClick.bind(c2(s3)), s3;
    }
    return r2(i3, [{ key: "draw", value: function(t4) {
      var e6 = this.w, i4 = new m2(this.ctx), a3 = i4.group({ class: "apexcharts-radialbar" });
      if (e6.globals.noData)
        return a3;
      var s3 = i4.group(), r3 = this.defaultSize / 2, o3 = e6.globals.gridWidth / 2, n3 = this.defaultSize / 2.05;
      e6.config.chart.sparkline.enabled || (n3 = n3 - e6.config.stroke.width - e6.config.chart.dropShadow.blur);
      var l3 = e6.globals.fill.colors;
      if (e6.config.plotOptions.radialBar.track.show) {
        var h3 = this.drawTracks({ size: n3, centerX: o3, centerY: r3, colorArr: l3, series: t4 });
        s3.add(h3);
      }
      var c3 = this.drawArcs({ size: n3, centerX: o3, centerY: r3, colorArr: l3, series: t4 }), d3 = 360;
      e6.config.plotOptions.radialBar.startAngle < 0 && (d3 = this.totalAngle);
      var g3 = (360 - d3) / 360;
      if (e6.globals.radialSize = n3 - n3 * g3, this.radialDataLabels.value.show) {
        var u3 = Math.max(this.radialDataLabels.value.offsetY, this.radialDataLabels.name.offsetY);
        e6.globals.radialSize += u3 * g3;
      }
      return s3.add(c3.g), "front" === e6.config.plotOptions.radialBar.hollow.position && (c3.g.add(c3.elHollow), c3.dataLabels && c3.g.add(c3.dataLabels)), a3.add(s3), a3;
    } }, { key: "drawTracks", value: function(t4) {
      var e6 = this.w, i4 = new m2(this.ctx), a3 = i4.group({ class: "apexcharts-tracks" }), s3 = new v2(this.ctx), r3 = new H2(this.ctx), o3 = this.getStrokeWidth(t4);
      t4.size = t4.size - o3 / 2;
      for (var n3 = 0; n3 < t4.series.length; n3++) {
        var l3 = i4.group({ class: "apexcharts-radialbar-track apexcharts-track" });
        a3.add(l3), l3.attr({ rel: n3 + 1 }), t4.size = t4.size - o3 - this.margin;
        var h3 = e6.config.plotOptions.radialBar.track, c3 = r3.fillPath({ seriesNumber: 0, size: t4.size, fillColors: Array.isArray(h3.background) ? h3.background[n3] : h3.background, solid: true }), d3 = this.trackStartAngle, g3 = this.trackEndAngle;
        Math.abs(g3) + Math.abs(d3) >= 360 && (g3 = 360 - Math.abs(this.startAngle) - 0.1);
        var u3 = i4.drawPath({ d: "", stroke: c3, strokeWidth: o3 * parseInt(h3.strokeWidth, 10) / 100, fill: "none", strokeOpacity: h3.opacity, classes: "apexcharts-radialbar-area" });
        if (h3.dropShadow.enabled) {
          var p3 = h3.dropShadow;
          s3.dropShadow(u3, p3);
        }
        l3.add(u3), u3.attr("id", "apexcharts-radialbarTrack-" + n3), this.animatePaths(u3, { centerX: t4.centerX, centerY: t4.centerY, endAngle: g3, startAngle: d3, size: t4.size, i: n3, totalItems: 2, animBeginArr: 0, dur: 0, isTrack: true, easing: e6.globals.easing });
      }
      return a3;
    } }, { key: "drawArcs", value: function(t4) {
      var e6 = this.w, i4 = new m2(this.ctx), a3 = new H2(this.ctx), s3 = new v2(this.ctx), r3 = i4.group(), o3 = this.getStrokeWidth(t4);
      t4.size = t4.size - o3 / 2;
      var n3 = e6.config.plotOptions.radialBar.hollow.background, l3 = t4.size - o3 * t4.series.length - this.margin * t4.series.length - o3 * parseInt(e6.config.plotOptions.radialBar.track.strokeWidth, 10) / 100 / 2, h3 = l3 - e6.config.plotOptions.radialBar.hollow.margin;
      void 0 !== e6.config.plotOptions.radialBar.hollow.image && (n3 = this.drawHollowImage(t4, r3, l3, n3));
      var c3 = this.drawHollow({ size: h3, centerX: t4.centerX, centerY: t4.centerY, fill: n3 || "transparent" });
      if (e6.config.plotOptions.radialBar.hollow.dropShadow.enabled) {
        var d3 = e6.config.plotOptions.radialBar.hollow.dropShadow;
        s3.dropShadow(c3, d3);
      }
      var g3 = 1;
      !this.radialDataLabels.total.show && e6.globals.series.length > 1 && (g3 = 0);
      var u3 = null;
      this.radialDataLabels.show && (u3 = this.renderInnerDataLabels(this.radialDataLabels, { hollowSize: l3, centerX: t4.centerX, centerY: t4.centerY, opacity: g3 })), "back" === e6.config.plotOptions.radialBar.hollow.position && (r3.add(c3), u3 && r3.add(u3));
      var p3 = false;
      e6.config.plotOptions.radialBar.inverseOrder && (p3 = true);
      for (var f3 = p3 ? t4.series.length - 1 : 0; p3 ? f3 >= 0 : f3 < t4.series.length; p3 ? f3-- : f3++) {
        var b3 = i4.group({ class: "apexcharts-series apexcharts-radial-series", seriesName: x2.escapeString(e6.globals.seriesNames[f3]) });
        r3.add(b3), b3.attr({ rel: f3 + 1, "data:realIndex": f3 }), this.ctx.series.addCollapsedClassToSeries(b3, f3), t4.size = t4.size - o3 - this.margin;
        var y3 = a3.fillPath({ seriesNumber: f3, size: t4.size, value: t4.series[f3] }), w3 = this.startAngle, k3 = void 0, A6 = x2.negToZero(t4.series[f3] > 100 ? 100 : t4.series[f3]) / 100, S3 = Math.round(this.totalAngle * A6) + this.startAngle, C3 = void 0;
        e6.globals.dataChanged && (k3 = this.startAngle, C3 = Math.round(this.totalAngle * x2.negToZero(e6.globals.previousPaths[f3]) / 100) + k3), Math.abs(S3) + Math.abs(w3) >= 360 && (S3 -= 0.01), Math.abs(C3) + Math.abs(k3) >= 360 && (C3 -= 0.01);
        var L3 = S3 - w3, P3 = Array.isArray(e6.config.stroke.dashArray) ? e6.config.stroke.dashArray[f3] : e6.config.stroke.dashArray, M3 = i4.drawPath({ d: "", stroke: y3, strokeWidth: o3, fill: "none", fillOpacity: e6.config.fill.opacity, classes: "apexcharts-radialbar-area apexcharts-radialbar-slice-" + f3, strokeDashArray: P3 });
        if (m2.setAttrs(M3.node, { "data:angle": L3, "data:value": t4.series[f3] }), e6.config.chart.dropShadow.enabled) {
          var I3 = e6.config.chart.dropShadow;
          s3.dropShadow(M3, I3, f3);
        }
        if (s3.setSelectionFilter(M3, 0, f3), this.addListeners(M3, this.radialDataLabels), b3.add(M3), M3.attr({ index: 0, j: f3 }), this.barLabels.enabled) {
          var T3 = x2.polarToCartesian(t4.centerX, t4.centerY, t4.size, w3), z3 = this.barLabels.formatter(e6.globals.seriesNames[f3], { seriesIndex: f3, w: e6 }), X4 = ["apexcharts-radialbar-label"];
          this.barLabels.onClick || X4.push("apexcharts-no-click");
          var E3 = this.barLabels.useSeriesColors ? e6.globals.colors[f3] : e6.config.chart.foreColor;
          E3 || (E3 = e6.config.chart.foreColor);
          var Y4 = T3.x - this.barLabels.margin, F3 = T3.y, R3 = i4.drawText({ x: Y4, y: F3, text: z3, textAnchor: "end", dominantBaseline: "middle", fontFamily: this.barLabels.fontFamily, fontWeight: this.barLabels.fontWeight, fontSize: this.barLabels.fontSize, foreColor: E3, cssClass: X4.join(" ") });
          R3.on("click", this.onBarLabelClick), R3.attr({ rel: f3 + 1 }), 0 !== w3 && R3.attr({ "transform-origin": "".concat(Y4, " ").concat(F3), transform: "rotate(".concat(w3, " 0 0)") }), b3.add(R3);
        }
        var D3 = 0;
        !this.initialAnim || e6.globals.resized || e6.globals.dataChanged || (D3 = e6.config.chart.animations.speed), e6.globals.dataChanged && (D3 = e6.config.chart.animations.dynamicAnimation.speed), this.animDur = D3 / (1.2 * t4.series.length) + this.animDur, this.animBeginArr.push(this.animDur), this.animatePaths(M3, { centerX: t4.centerX, centerY: t4.centerY, endAngle: S3, startAngle: w3, prevEndAngle: C3, prevStartAngle: k3, size: t4.size, i: f3, totalItems: 2, animBeginArr: this.animBeginArr, dur: D3, shouldSetPrevPaths: true, easing: e6.globals.easing });
      }
      return { g: r3, elHollow: c3, dataLabels: u3 };
    } }, { key: "drawHollow", value: function(t4) {
      var e6 = new m2(this.ctx).drawCircle(2 * t4.size);
      return e6.attr({ class: "apexcharts-radialbar-hollow", cx: t4.centerX, cy: t4.centerY, r: t4.size, fill: t4.fill }), e6;
    } }, { key: "drawHollowImage", value: function(t4, e6, i4, a3) {
      var s3 = this.w, r3 = new H2(this.ctx), o3 = x2.randomId(), n3 = s3.config.plotOptions.radialBar.hollow.image;
      if (s3.config.plotOptions.radialBar.hollow.imageClipped)
        r3.clippedImgArea({ width: i4, height: i4, image: n3, patternID: "pattern".concat(s3.globals.cuid).concat(o3) }), a3 = "url(#pattern".concat(s3.globals.cuid).concat(o3, ")");
      else {
        var l3 = s3.config.plotOptions.radialBar.hollow.imageWidth, h3 = s3.config.plotOptions.radialBar.hollow.imageHeight;
        if (void 0 === l3 && void 0 === h3) {
          var c3 = s3.globals.dom.Paper.image(n3).loaded(function(e7) {
            this.move(t4.centerX - e7.width / 2 + s3.config.plotOptions.radialBar.hollow.imageOffsetX, t4.centerY - e7.height / 2 + s3.config.plotOptions.radialBar.hollow.imageOffsetY);
          });
          e6.add(c3);
        } else {
          var d3 = s3.globals.dom.Paper.image(n3).loaded(function(e7) {
            this.move(t4.centerX - l3 / 2 + s3.config.plotOptions.radialBar.hollow.imageOffsetX, t4.centerY - h3 / 2 + s3.config.plotOptions.radialBar.hollow.imageOffsetY), this.size(l3, h3);
          });
          e6.add(d3);
        }
      }
      return a3;
    } }, { key: "getStrokeWidth", value: function(t4) {
      var e6 = this.w;
      return t4.size * (100 - parseInt(e6.config.plotOptions.radialBar.hollow.size, 10)) / 100 / (t4.series.length + 1) - this.margin;
    } }, { key: "onBarLabelClick", value: function(t4) {
      var e6 = parseInt(t4.target.getAttribute("rel"), 10) - 1, i4 = this.barLabels.onClick, a3 = this.w;
      i4 && i4(a3.globals.seriesNames[e6], { w: a3, seriesIndex: e6 });
    } }]), i3;
  }(), It = function(t3) {
    n2(s3, yt);
    var i3 = d2(s3);
    function s3() {
      return a2(this, s3), i3.apply(this, arguments);
    }
    return r2(s3, [{ key: "draw", value: function(t4, i4) {
      var a3 = this.w, s4 = new m2(this.ctx);
      this.rangeBarOptions = this.w.config.plotOptions.rangeBar, this.series = t4, this.seriesRangeStart = a3.globals.seriesRangeStart, this.seriesRangeEnd = a3.globals.seriesRangeEnd, this.barHelpers.initVariables(t4);
      for (var r3 = s4.group({ class: "apexcharts-rangebar-series apexcharts-plot-series" }), n3 = 0; n3 < t4.length; n3++) {
        var l3, h3, c3, d3, g3 = void 0, u3 = void 0, p3 = a3.globals.comboCharts ? i4[n3] : n3, f3 = s4.group({ class: "apexcharts-series", seriesName: x2.escapeString(a3.globals.seriesNames[p3]), rel: n3 + 1, "data:realIndex": p3 });
        this.ctx.series.addCollapsedClassToSeries(f3, p3), t4[n3].length > 0 && (this.visibleI = this.visibleI + 1);
        var b3 = 0, v3 = 0, y3 = 0;
        this.yRatio.length > 1 && (this.yaxisIndex = a3.globals.seriesYAxisReverseMap[p3][0], y3 = p3);
        var w3 = this.barHelpers.initialPositions();
        u3 = w3.y, d3 = w3.zeroW, g3 = w3.x, v3 = w3.barWidth, b3 = w3.barHeight, l3 = w3.xDivision, h3 = w3.yDivision, c3 = w3.zeroH;
        for (var k3 = s4.group({ class: "apexcharts-datalabels", "data:realIndex": p3 }), A6 = s4.group({ class: "apexcharts-rangebar-goals-markers" }), S3 = 0; S3 < a3.globals.dataPoints; S3++) {
          var C3, L3 = this.barHelpers.getStrokeWidth(n3, S3, p3), P3 = this.seriesRangeStart[n3][S3], M3 = this.seriesRangeEnd[n3][S3], I3 = null, T3 = null, z3 = null, X4 = { x: g3, y: u3, strokeWidth: L3, elSeries: f3 }, E3 = this.seriesLen;
          if (a3.config.plotOptions.bar.rangeBarGroupRows && (E3 = 1), void 0 === a3.config.series[n3].data[S3])
            break;
          if (this.isHorizontal) {
            z3 = u3 + b3 * this.visibleI;
            var Y4 = (h3 - b3 * E3) / 2;
            if (a3.config.series[n3].data[S3].x) {
              var F3 = this.detectOverlappingBars({ i: n3, j: S3, barYPosition: z3, srty: Y4, barHeight: b3, yDivision: h3, initPositions: w3 });
              b3 = F3.barHeight, z3 = F3.barYPosition;
            }
            v3 = (I3 = this.drawRangeBarPaths(e3({ indexes: { i: n3, j: S3, realIndex: p3 }, barHeight: b3, barYPosition: z3, zeroW: d3, yDivision: h3, y1: P3, y2: M3 }, X4))).barWidth;
          } else {
            a3.globals.isXNumeric && (g3 = (a3.globals.seriesX[n3][S3] - a3.globals.minX) / this.xRatio - v3 / 2), T3 = g3 + v3 * this.visibleI;
            var R3 = (l3 - v3 * E3) / 2;
            if (a3.config.series[n3].data[S3].x) {
              var H3 = this.detectOverlappingBars({ i: n3, j: S3, barXPosition: T3, srtx: R3, barWidth: v3, xDivision: l3, initPositions: w3 });
              v3 = H3.barWidth, T3 = H3.barXPosition;
            }
            b3 = (I3 = this.drawRangeColumnPaths(e3({ indexes: { i: n3, j: S3, realIndex: p3, translationsIndex: y3 }, barWidth: v3, barXPosition: T3, zeroH: c3, xDivision: l3 }, X4))).barHeight;
          }
          var D3 = this.barHelpers.drawGoalLine({ barXPosition: I3.barXPosition, barYPosition: z3, goalX: I3.goalX, goalY: I3.goalY, barHeight: b3, barWidth: v3 });
          D3 && A6.add(D3), u3 = I3.y, g3 = I3.x;
          var O3 = this.barHelpers.getPathFillColor(t4, n3, S3, p3), N3 = a3.globals.stroke.colors[p3];
          this.renderSeries((o2(C3 = { realIndex: p3, pathFill: O3, lineFill: N3, j: S3, i: n3, x: g3, y: u3, y1: P3, y2: M3, pathFrom: I3.pathFrom, pathTo: I3.pathTo, strokeWidth: L3, elSeries: f3, series: t4, barHeight: b3, barWidth: v3, barXPosition: T3, barYPosition: z3 }, "barWidth", v3), o2(C3, "elDataLabelsWrap", k3), o2(C3, "elGoalsMarkers", A6), o2(C3, "visibleSeries", this.visibleI), o2(C3, "type", "rangebar"), C3));
        }
        r3.add(f3);
      }
      return r3;
    } }, { key: "detectOverlappingBars", value: function(t4) {
      var e4 = t4.i, i4 = t4.j, a3 = t4.barYPosition, s4 = t4.barXPosition, r3 = t4.srty, o3 = t4.srtx, n3 = t4.barHeight, l3 = t4.barWidth, h3 = t4.yDivision, c3 = t4.xDivision, d3 = t4.initPositions, g3 = this.w, u3 = [], p3 = g3.config.series[e4].data[i4].rangeName, f3 = g3.config.series[e4].data[i4].x, x3 = Array.isArray(f3) ? f3.join(" ") : f3, b3 = g3.globals.labels.map(function(t5) {
        return Array.isArray(t5) ? t5.join(" ") : t5;
      }).indexOf(x3), v3 = g3.globals.seriesRange[e4].findIndex(function(t5) {
        return t5.x === x3 && t5.overlaps.length > 0;
      });
      return this.isHorizontal ? (a3 = g3.config.plotOptions.bar.rangeBarGroupRows ? r3 + h3 * b3 : r3 + n3 * this.visibleI + h3 * b3, v3 > -1 && !g3.config.plotOptions.bar.rangeBarOverlap && (u3 = g3.globals.seriesRange[e4][v3].overlaps).indexOf(p3) > -1 && (a3 = (n3 = d3.barHeight / u3.length) * this.visibleI + h3 * (100 - parseInt(this.barOptions.barHeight, 10)) / 100 / 2 + n3 * (this.visibleI + u3.indexOf(p3)) + h3 * b3)) : (b3 > -1 && (s4 = g3.config.plotOptions.bar.rangeBarGroupRows ? o3 + c3 * b3 : o3 + l3 * this.visibleI + c3 * b3), v3 > -1 && !g3.config.plotOptions.bar.rangeBarOverlap && (u3 = g3.globals.seriesRange[e4][v3].overlaps).indexOf(p3) > -1 && (s4 = (l3 = d3.barWidth / u3.length) * this.visibleI + c3 * (100 - parseInt(this.barOptions.barWidth, 10)) / 100 / 2 + l3 * (this.visibleI + u3.indexOf(p3)) + c3 * b3)), { barYPosition: a3, barXPosition: s4, barHeight: n3, barWidth: l3 };
    } }, { key: "drawRangeColumnPaths", value: function(t4) {
      var e4 = t4.indexes, i4 = t4.x, a3 = t4.xDivision, s4 = t4.barWidth, r3 = t4.barXPosition, o3 = t4.zeroH, n3 = this.w, l3 = e4.i, h3 = e4.j, c3 = this.yRatio[e4.translationsIndex], d3 = e4.realIndex, g3 = this.getRangeValue(d3, h3), u3 = Math.min(g3.start, g3.end), p3 = Math.max(g3.start, g3.end);
      void 0 === this.series[l3][h3] || null === this.series[l3][h3] ? u3 = o3 : (u3 = o3 - u3 / c3, p3 = o3 - p3 / c3);
      var f3 = Math.abs(p3 - u3), x3 = this.barHelpers.getColumnPaths({ barXPosition: r3, barWidth: s4, y1: u3, y2: p3, strokeWidth: this.strokeWidth, series: this.seriesRangeEnd, realIndex: e4.realIndex, i: d3, j: h3, w: n3 });
      if (n3.globals.isXNumeric) {
        var b3 = this.getBarXForNumericXAxis({ x: i4, j: h3, realIndex: d3, barWidth: s4 });
        i4 = b3.x, r3 = b3.barXPosition;
      } else
        i4 += a3;
      return { pathTo: x3.pathTo, pathFrom: x3.pathFrom, barHeight: f3, x: i4, y: p3, goalY: this.barHelpers.getGoalValues("y", null, o3, l3, h3, e4.translationsIndex), barXPosition: r3 };
    } }, { key: "drawRangeBarPaths", value: function(t4) {
      var e4 = t4.indexes, i4 = t4.y, a3 = t4.y1, s4 = t4.y2, r3 = t4.yDivision, o3 = t4.barHeight, n3 = t4.barYPosition, l3 = t4.zeroW, h3 = this.w, c3 = l3 + a3 / this.invertedYRatio, d3 = l3 + s4 / this.invertedYRatio, g3 = Math.abs(d3 - c3), u3 = this.barHelpers.getBarpaths({ barYPosition: n3, barHeight: o3, x1: c3, x2: d3, strokeWidth: this.strokeWidth, series: this.seriesRangeEnd, i: e4.realIndex, realIndex: e4.realIndex, j: e4.j, w: h3 });
      return h3.globals.isXNumeric || (i4 += r3), { pathTo: u3.pathTo, pathFrom: u3.pathFrom, barWidth: g3, x: d3, goalX: this.barHelpers.getGoalValues("x", l3, null, e4.realIndex, e4.j), y: i4 };
    } }, { key: "getRangeValue", value: function(t4, e4) {
      var i4 = this.w;
      return { start: i4.globals.seriesRangeStart[t4][e4], end: i4.globals.seriesRangeEnd[t4][e4] };
    } }]), s3;
  }(), Tt = function() {
    function t3(e4) {
      a2(this, t3), this.w = e4.w, this.lineCtx = e4;
    }
    return r2(t3, [{ key: "sameValueSeriesFix", value: function(t4, e4) {
      var i3 = this.w;
      if (("gradient" === i3.config.fill.type || "gradient" === i3.config.fill.type[t4]) && new y2(this.lineCtx.ctx, i3).seriesHaveSameValues(t4)) {
        var a3 = e4[t4].slice();
        a3[a3.length - 1] = a3[a3.length - 1] + 1e-6, e4[t4] = a3;
      }
      return e4;
    } }, { key: "calculatePoints", value: function(t4) {
      var e4 = t4.series, i3 = t4.realIndex, a3 = t4.x, s3 = t4.y, r3 = t4.i, o3 = t4.j, n3 = t4.prevY, l3 = this.w, h3 = [], c3 = [];
      if (0 === o3) {
        var d3 = this.lineCtx.categoryAxisCorrection + l3.config.markers.offsetX;
        l3.globals.isXNumeric && (d3 = (l3.globals.seriesX[i3][0] - l3.globals.minX) / this.lineCtx.xRatio + l3.config.markers.offsetX), h3.push(d3), c3.push(x2.isNumber(e4[r3][0]) ? n3 + l3.config.markers.offsetY : null), h3.push(a3 + l3.config.markers.offsetX), c3.push(x2.isNumber(e4[r3][o3 + 1]) ? s3 + l3.config.markers.offsetY : null);
      } else
        h3.push(a3 + l3.config.markers.offsetX), c3.push(x2.isNumber(e4[r3][o3 + 1]) ? s3 + l3.config.markers.offsetY : null);
      return { x: h3, y: c3 };
    } }, { key: "checkPreviousPaths", value: function(t4) {
      for (var e4 = t4.pathFromLine, i3 = t4.pathFromArea, a3 = t4.realIndex, s3 = this.w, r3 = 0; r3 < s3.globals.previousPaths.length; r3++) {
        var o3 = s3.globals.previousPaths[r3];
        ("line" === o3.type || "area" === o3.type) && o3.paths.length > 0 && parseInt(o3.realIndex, 10) === parseInt(a3, 10) && ("line" === o3.type ? (this.lineCtx.appendPathFrom = false, e4 = s3.globals.previousPaths[r3].paths[0].d) : "area" === o3.type && (this.lineCtx.appendPathFrom = false, i3 = s3.globals.previousPaths[r3].paths[0].d, s3.config.stroke.show && s3.globals.previousPaths[r3].paths[1] && (e4 = s3.globals.previousPaths[r3].paths[1].d)));
      }
      return { pathFromLine: e4, pathFromArea: i3 };
    } }, { key: "determineFirstPrevY", value: function(t4) {
      var e4, i3, a3 = t4.i, s3 = t4.series, r3 = t4.prevY, o3 = t4.lineYPosition, n3 = t4.translationsIndex, l3 = this.w, h3 = l3.config.chart.stacked && !l3.globals.comboCharts || l3.config.chart.stacked && l3.globals.comboCharts && (!this.w.config.chart.stackOnlyBar || "bar" === (null === (e4 = this.w.config.series[a3]) || void 0 === e4 ? void 0 : e4.type));
      if (void 0 !== (null === (i3 = s3[a3]) || void 0 === i3 ? void 0 : i3[0]))
        r3 = (o3 = h3 && a3 > 0 ? this.lineCtx.prevSeriesY[a3 - 1][0] : this.lineCtx.zeroY) - s3[a3][0] / this.lineCtx.yRatio[n3] + 2 * (this.lineCtx.isReversed ? s3[a3][0] / this.lineCtx.yRatio[n3] : 0);
      else if (h3 && a3 > 0 && void 0 === s3[a3][0]) {
        for (var c3 = a3 - 1; c3 >= 0; c3--)
          if (null !== s3[c3][0] && void 0 !== s3[c3][0]) {
            r3 = o3 = this.lineCtx.prevSeriesY[c3][0];
            break;
          }
      }
      return { prevY: r3, lineYPosition: o3 };
    } }]), t3;
  }(), zt = function(t3) {
    for (var e4, i3, a3, s3, r3 = function(t4) {
      for (var e6 = [], i4 = t4[0], a4 = t4[1], s4 = e6[0] = Yt(i4, a4), r4 = 1, o4 = t4.length - 1; r4 < o4; r4++)
        i4 = a4, a4 = t4[r4 + 1], e6[r4] = 0.5 * (s4 + (s4 = Yt(i4, a4)));
      return e6[r4] = s4, e6;
    }(t3), o3 = t3.length - 1, n3 = [], l3 = 0; l3 < o3; l3++)
      a3 = Yt(t3[l3], t3[l3 + 1]), Math.abs(a3) < 1e-6 ? r3[l3] = r3[l3 + 1] = 0 : (s3 = (e4 = r3[l3] / a3) * e4 + (i3 = r3[l3 + 1] / a3) * i3) > 9 && (s3 = 3 * a3 / Math.sqrt(s3), r3[l3] = s3 * e4, r3[l3 + 1] = s3 * i3);
    for (var h3 = 0; h3 <= o3; h3++)
      s3 = (t3[Math.min(o3, h3 + 1)][0] - t3[Math.max(0, h3 - 1)][0]) / (6 * (1 + r3[h3] * r3[h3])), n3.push([s3 || 0, r3[h3] * s3 || 0]);
    return n3;
  }, Xt = function(t3) {
    for (var e4 = "", i3 = 0; i3 < t3.length; i3++) {
      var a3 = t3[i3], s3 = a3.length;
      s3 > 4 ? (e4 += "C".concat(a3[0], ", ").concat(a3[1]), e4 += ", ".concat(a3[2], ", ").concat(a3[3]), e4 += ", ".concat(a3[4], ", ").concat(a3[5])) : s3 > 2 && (e4 += "S".concat(a3[0], ", ").concat(a3[1]), e4 += ", ".concat(a3[2], ", ").concat(a3[3]));
    }
    return e4;
  }, Et = function(t3) {
    var e4 = zt(t3), i3 = t3[1], a3 = t3[0], s3 = [], r3 = e4[1], o3 = e4[0];
    s3.push(a3, [a3[0] + o3[0], a3[1] + o3[1], i3[0] - r3[0], i3[1] - r3[1], i3[0], i3[1]]);
    for (var n3 = 2, l3 = e4.length; n3 < l3; n3++) {
      var h3 = t3[n3], c3 = e4[n3];
      s3.push([h3[0] - c3[0], h3[1] - c3[1], h3[0], h3[1]]);
    }
    return s3;
  };
  function Yt(t3, e4) {
    return (e4[1] - t3[1]) / (e4[0] - t3[0]);
  }
  var Ft = function() {
    function t3(e4, i3, s3) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.xyRatios = i3, this.pointsChart = !("bubble" !== this.w.config.chart.type && "scatter" !== this.w.config.chart.type) || s3, this.scatter = new O2(this.ctx), this.noNegatives = this.w.globals.minX === Number.MAX_VALUE, this.lineHelpers = new Tt(this), this.markers = new D2(this.ctx), this.prevSeriesY = [], this.categoryAxisCorrection = 0, this.yaxisIndex = 0;
    }
    return r2(t3, [{ key: "draw", value: function(t4, i3, a3, s3) {
      var r3, o3 = this.w, n3 = new m2(this.ctx), l3 = o3.globals.comboCharts ? i3 : o3.config.chart.type, h3 = n3.group({ class: "apexcharts-".concat(l3, "-series apexcharts-plot-series") }), c3 = new y2(this.ctx, o3);
      this.yRatio = this.xyRatios.yRatio, this.zRatio = this.xyRatios.zRatio, this.xRatio = this.xyRatios.xRatio, this.baseLineY = this.xyRatios.baseLineY, t4 = c3.getLogSeries(t4), this.yRatio = c3.getLogYRatios(this.yRatio);
      for (var d3 = [], g3 = 0; g3 < t4.length; g3++) {
        t4 = this.lineHelpers.sameValueSeriesFix(g3, t4);
        var u3 = o3.globals.comboCharts ? a3[g3] : g3, p3 = this.yRatio.length > 1 ? u3 : 0;
        this._initSerieVariables(t4, g3, u3);
        var f3 = [], x3 = [], b3 = [], v3 = o3.globals.padHorizontal + this.categoryAxisCorrection;
        this.ctx.series.addCollapsedClassToSeries(this.elSeries, u3), o3.globals.isXNumeric && o3.globals.seriesX.length > 0 && (v3 = (o3.globals.seriesX[u3][0] - o3.globals.minX) / this.xRatio), b3.push(v3);
        var w3, k3 = v3, A6 = void 0, S3 = k3, C3 = this.zeroY, L3 = this.zeroY;
        C3 = this.lineHelpers.determineFirstPrevY({ i: g3, series: t4, prevY: C3, lineYPosition: 0, translationsIndex: p3 }).prevY, "monotonCubic" === o3.config.stroke.curve && null === t4[g3][0] ? f3.push(null) : f3.push(C3), w3 = C3;
        "rangeArea" === l3 && (A6 = L3 = this.lineHelpers.determineFirstPrevY({ i: g3, series: s3, prevY: L3, lineYPosition: 0, translationsIndex: p3 }).prevY, x3.push(L3));
        var P3 = { type: l3, series: t4, realIndex: u3, translationsIndex: p3, i: g3, x: v3, y: 1, pX: k3, pY: w3, pathsFrom: this._calculatePathsFrom({ type: l3, series: t4, i: g3, realIndex: u3, prevX: S3, prevY: C3, prevY2: L3 }), linePaths: [], areaPaths: [], seriesIndex: a3, lineYPosition: 0, xArrj: b3, yArrj: f3, y2Arrj: x3, seriesRangeEnd: s3 }, M3 = this._iterateOverDataPoints(e3(e3({}, P3), {}, { iterations: "rangeArea" === l3 ? t4[g3].length - 1 : void 0, isRangeStart: true }));
        if ("rangeArea" === l3) {
          var I3 = this._calculatePathsFrom({ series: s3, i: g3, realIndex: u3, prevX: S3, prevY: L3 }), T3 = this._iterateOverDataPoints(e3(e3({}, P3), {}, { series: s3, pY: A6, pathsFrom: I3, iterations: s3[g3].length - 1, isRangeStart: false }));
          M3.linePaths[0] = T3.linePath + M3.linePath, M3.pathFromLine = T3.pathFromLine + M3.pathFromLine;
        }
        this._handlePaths({ type: l3, realIndex: u3, i: g3, paths: M3 }), this.elSeries.add(this.elPointsMain), this.elSeries.add(this.elDataLabelsWrap), d3.push(this.elSeries);
      }
      if (void 0 !== (null === (r3 = o3.config.series[0]) || void 0 === r3 ? void 0 : r3.zIndex) && d3.sort(function(t5, e4) {
        return Number(t5.node.getAttribute("zIndex")) - Number(e4.node.getAttribute("zIndex"));
      }), o3.config.chart.stacked)
        for (var z3 = d3.length; z3 > 0; z3--)
          h3.add(d3[z3 - 1]);
      else
        for (var X4 = 0; X4 < d3.length; X4++)
          h3.add(d3[X4]);
      return h3;
    } }, { key: "_initSerieVariables", value: function(t4, e4, i3) {
      var a3 = this.w, s3 = new m2(this.ctx);
      this.xDivision = a3.globals.gridWidth / (a3.globals.dataPoints - ("on" === a3.config.xaxis.tickPlacement ? 1 : 0)), this.strokeWidth = Array.isArray(a3.config.stroke.width) ? a3.config.stroke.width[i3] : a3.config.stroke.width;
      var r3 = 0;
      this.yRatio.length > 1 && (this.yaxisIndex = a3.globals.seriesYAxisReverseMap[i3], r3 = i3), this.isReversed = a3.config.yaxis[this.yaxisIndex] && a3.config.yaxis[this.yaxisIndex].reversed, this.zeroY = a3.globals.gridHeight - this.baseLineY[r3] - (this.isReversed ? a3.globals.gridHeight : 0) + (this.isReversed ? 2 * this.baseLineY[r3] : 0), this.areaBottomY = this.zeroY, (this.zeroY > a3.globals.gridHeight || "end" === a3.config.plotOptions.area.fillTo) && (this.areaBottomY = a3.globals.gridHeight), this.categoryAxisCorrection = this.xDivision / 2, this.elSeries = s3.group({ class: "apexcharts-series", zIndex: void 0 !== a3.config.series[i3].zIndex ? a3.config.series[i3].zIndex : i3, seriesName: x2.escapeString(a3.globals.seriesNames[i3]) }), this.elPointsMain = s3.group({ class: "apexcharts-series-markers-wrap", "data:realIndex": i3 }), this.elDataLabelsWrap = s3.group({ class: "apexcharts-datalabels", "data:realIndex": i3 });
      var o3 = t4[e4].length === a3.globals.dataPoints;
      this.elSeries.attr({ "data:longestSeries": o3, rel: e4 + 1, "data:realIndex": i3 }), this.appendPathFrom = true;
    } }, { key: "_calculatePathsFrom", value: function(t4) {
      var e4, i3, a3, s3, r3 = t4.type, o3 = t4.series, n3 = t4.i, l3 = t4.realIndex, h3 = t4.prevX, c3 = t4.prevY, d3 = t4.prevY2, g3 = this.w, u3 = new m2(this.ctx);
      if (null === o3[n3][0]) {
        for (var p3 = 0; p3 < o3[n3].length; p3++)
          if (null !== o3[n3][p3]) {
            h3 = this.xDivision * p3, c3 = this.zeroY - o3[n3][p3] / this.yRatio[l3], e4 = u3.move(h3, c3), i3 = u3.move(h3, this.areaBottomY);
            break;
          }
      } else
        e4 = u3.move(h3, c3), "rangeArea" === r3 && (e4 = u3.move(h3, d3) + u3.line(h3, c3)), i3 = u3.move(h3, this.areaBottomY) + u3.line(h3, c3);
      if (a3 = u3.move(-1, this.zeroY) + u3.line(-1, this.zeroY), s3 = u3.move(-1, this.zeroY) + u3.line(-1, this.zeroY), g3.globals.previousPaths.length > 0) {
        var f3 = this.lineHelpers.checkPreviousPaths({ pathFromLine: a3, pathFromArea: s3, realIndex: l3 });
        a3 = f3.pathFromLine, s3 = f3.pathFromArea;
      }
      return { prevX: h3, prevY: c3, linePath: e4, areaPath: i3, pathFromLine: a3, pathFromArea: s3 };
    } }, { key: "_handlePaths", value: function(t4) {
      var i3 = t4.type, a3 = t4.realIndex, s3 = t4.i, r3 = t4.paths, o3 = this.w, n3 = new m2(this.ctx), l3 = new H2(this.ctx);
      this.prevSeriesY.push(r3.yArrj), o3.globals.seriesXvalues[a3] = r3.xArrj, o3.globals.seriesYvalues[a3] = r3.yArrj;
      var h3 = o3.config.forecastDataPoints;
      if (h3.count > 0 && "rangeArea" !== i3) {
        var c3 = o3.globals.seriesXvalues[a3][o3.globals.seriesXvalues[a3].length - h3.count - 1], d3 = n3.drawRect(c3, 0, o3.globals.gridWidth, o3.globals.gridHeight, 0);
        o3.globals.dom.elForecastMask.appendChild(d3.node);
        var g3 = n3.drawRect(0, 0, c3, o3.globals.gridHeight, 0);
        o3.globals.dom.elNonForecastMask.appendChild(g3.node);
      }
      this.pointsChart || o3.globals.delayedElements.push({ el: this.elPointsMain.node, index: a3 });
      var u3 = { i: s3, realIndex: a3, animationDelay: s3, initialSpeed: o3.config.chart.animations.speed, dataChangeSpeed: o3.config.chart.animations.dynamicAnimation.speed, className: "apexcharts-".concat(i3) };
      if ("area" === i3)
        for (var p3 = l3.fillPath({ seriesNumber: a3 }), f3 = 0; f3 < r3.areaPaths.length; f3++) {
          var x3 = n3.renderPaths(e3(e3({}, u3), {}, { pathFrom: r3.pathFromArea, pathTo: r3.areaPaths[f3], stroke: "none", strokeWidth: 0, strokeLineCap: null, fill: p3 }));
          this.elSeries.add(x3);
        }
      if (o3.config.stroke.show && !this.pointsChart) {
        var b3 = null;
        if ("line" === i3)
          b3 = l3.fillPath({ seriesNumber: a3, i: s3 });
        else if ("solid" === o3.config.stroke.fill.type)
          b3 = o3.globals.stroke.colors[a3];
        else {
          var v3 = o3.config.fill;
          o3.config.fill = o3.config.stroke.fill, b3 = l3.fillPath({ seriesNumber: a3, i: s3 }), o3.config.fill = v3;
        }
        for (var y3 = 0; y3 < r3.linePaths.length; y3++) {
          var w3 = b3;
          "rangeArea" === i3 && (w3 = l3.fillPath({ seriesNumber: a3 }));
          var k3 = e3(e3({}, u3), {}, { pathFrom: r3.pathFromLine, pathTo: r3.linePaths[y3], stroke: b3, strokeWidth: this.strokeWidth, strokeLineCap: o3.config.stroke.lineCap, fill: "rangeArea" === i3 ? w3 : "none" }), A6 = n3.renderPaths(k3);
          if (this.elSeries.add(A6), A6.attr("fill-rule", "evenodd"), h3.count > 0 && "rangeArea" !== i3) {
            var S3 = n3.renderPaths(k3);
            S3.node.setAttribute("stroke-dasharray", h3.dashArray), h3.strokeWidth && S3.node.setAttribute("stroke-width", h3.strokeWidth), this.elSeries.add(S3), S3.attr("clip-path", "url(#forecastMask".concat(o3.globals.cuid, ")")), A6.attr("clip-path", "url(#nonForecastMask".concat(o3.globals.cuid, ")"));
          }
        }
      }
    } }, { key: "_iterateOverDataPoints", value: function(t4) {
      var e4, i3 = this, a3 = t4.type, s3 = t4.series, r3 = t4.iterations, o3 = t4.realIndex, n3 = t4.translationsIndex, l3 = t4.i, h3 = t4.x, c3 = t4.y, d3 = t4.pX, g3 = t4.pY, u3 = t4.pathsFrom, p3 = t4.linePaths, f3 = t4.areaPaths, b3 = t4.seriesIndex, v3 = t4.lineYPosition, y3 = t4.xArrj, w3 = t4.yArrj, k3 = t4.y2Arrj, A6 = t4.isRangeStart, S3 = t4.seriesRangeEnd, C3 = this.w, L3 = new m2(this.ctx), P3 = this.yRatio, M3 = u3.prevY, I3 = u3.linePath, T3 = u3.areaPath, z3 = u3.pathFromLine, X4 = u3.pathFromArea, E3 = x2.isNumber(C3.globals.minYArr[o3]) ? C3.globals.minYArr[o3] : C3.globals.minY;
      r3 || (r3 = C3.globals.dataPoints > 1 ? C3.globals.dataPoints - 1 : C3.globals.dataPoints);
      for (var Y4 = function(t5, e6) {
        return e6 - t5 / P3[n3] + 2 * (i3.isReversed ? t5 / P3[n3] : 0);
      }, F3 = c3, R3 = C3.config.chart.stacked && !C3.globals.comboCharts || C3.config.chart.stacked && C3.globals.comboCharts && (!this.w.config.chart.stackOnlyBar || "bar" === (null === (e4 = this.w.config.series[o3]) || void 0 === e4 ? void 0 : e4.type)), H3 = 0; H3 < r3; H3++) {
        var D3 = void 0 === s3[l3][H3 + 1] || null === s3[l3][H3 + 1];
        if (C3.globals.isXNumeric) {
          var O3 = C3.globals.seriesX[o3][H3 + 1];
          void 0 === C3.globals.seriesX[o3][H3 + 1] && (O3 = C3.globals.seriesX[o3][r3 - 1]), h3 = (O3 - C3.globals.minX) / this.xRatio;
        } else
          h3 += this.xDivision;
        if (R3)
          if (l3 > 0 && C3.globals.collapsedSeries.length < C3.config.series.length - 1) {
            v3 = this.prevSeriesY[function(t5) {
              for (var e6 = t5, i4 = 0; i4 < C3.globals.series.length; i4++)
                if (C3.globals.collapsedSeriesIndices.indexOf(t5) > -1) {
                  e6--;
                  break;
                }
              return e6 >= 0 ? e6 : 0;
            }(l3 - 1)][H3 + 1];
          } else
            v3 = this.zeroY;
        else
          v3 = this.zeroY;
        D3 ? c3 = Y4(E3, v3) : (c3 = Y4(s3[l3][H3 + 1], v3), "rangeArea" === a3 && (F3 = Y4(S3[l3][H3 + 1], v3))), y3.push(h3), D3 && "smooth" === C3.config.stroke.curve ? w3.push(null) : w3.push(c3), k3.push(F3);
        var N3 = this.lineHelpers.calculatePoints({ series: s3, x: h3, y: c3, realIndex: o3, i: l3, j: H3, prevY: M3 }), W3 = this._createPaths({ type: a3, series: s3, i: l3, realIndex: o3, j: H3, x: h3, y: c3, y2: F3, xArrj: y3, yArrj: w3, y2Arrj: k3, pX: d3, pY: g3, linePath: I3, areaPath: T3, linePaths: p3, areaPaths: f3, seriesIndex: b3, isRangeStart: A6 });
        f3 = W3.areaPaths, p3 = W3.linePaths, d3 = W3.pX, g3 = W3.pY, T3 = W3.areaPath, I3 = W3.linePath, !this.appendPathFrom || "monotoneCubic" === C3.config.stroke.curve && "rangeArea" === a3 || (z3 += L3.line(h3, this.zeroY), X4 += L3.line(h3, this.zeroY)), this.handleNullDataPoints(s3, N3, l3, H3, o3), this._handleMarkersAndLabels({ type: a3, pointsPos: N3, i: l3, j: H3, realIndex: o3, isRangeStart: A6 });
      }
      return { yArrj: w3, xArrj: y3, pathFromArea: X4, areaPaths: f3, pathFromLine: z3, linePaths: p3, linePath: I3, areaPath: T3 };
    } }, { key: "_handleMarkersAndLabels", value: function(t4) {
      var e4 = t4.type, i3 = t4.pointsPos, a3 = t4.isRangeStart, s3 = t4.i, r3 = t4.j, o3 = t4.realIndex, n3 = this.w, l3 = new N2(this.ctx);
      if (this.pointsChart)
        this.scatter.draw(this.elSeries, r3, { realIndex: o3, pointsPos: i3, zRatio: this.zRatio, elParent: this.elPointsMain });
      else {
        n3.globals.series[s3].length > 1 && this.elPointsMain.node.classList.add("apexcharts-element-hidden");
        var h3 = this.markers.plotChartMarkers(i3, o3, r3 + 1);
        null !== h3 && this.elPointsMain.add(h3);
      }
      var c3 = l3.drawDataLabel({ type: e4, isRangeStart: a3, pos: i3, i: o3, j: r3 + 1 });
      null !== c3 && this.elDataLabelsWrap.add(c3);
    } }, { key: "_createPaths", value: function(t4) {
      var e4 = t4.type, i3 = t4.series, a3 = t4.i, s3 = t4.realIndex, r3 = t4.j, o3 = t4.x, n3 = t4.y, l3 = t4.xArrj, h3 = t4.yArrj, c3 = t4.y2, d3 = t4.y2Arrj, g3 = t4.pX, u3 = t4.pY, p3 = t4.linePath, f3 = t4.areaPath, x3 = t4.linePaths, b3 = t4.areaPaths, v3 = t4.seriesIndex, y3 = t4.isRangeStart, w3 = this.w, k3 = new m2(this.ctx), A6 = w3.config.stroke.curve, S3 = this.areaBottomY;
      if (Array.isArray(w3.config.stroke.curve) && (A6 = Array.isArray(v3) ? w3.config.stroke.curve[v3[a3]] : w3.config.stroke.curve[a3]), "rangeArea" === e4 && (w3.globals.hasNullValues || w3.config.forecastDataPoints.count > 0) && "monotoneCubic" === A6 && (A6 = "straight"), "monotoneCubic" === A6) {
        var C3 = "rangeArea" === e4 ? l3.length === w3.globals.dataPoints : r3 === i3[a3].length - 2, L3 = l3.map(function(t5, e6) {
          return [l3[e6], h3[e6]];
        }).filter(function(t5) {
          return null !== t5[1];
        });
        if (C3 && L3.length > 1) {
          var P3 = Et(L3);
          if (p3 += Xt(P3), null === i3[a3][0] ? f3 = p3 : f3 += Xt(P3), "rangeArea" === e4 && y3) {
            p3 += k3.line(l3[l3.length - 1], d3[d3.length - 1]);
            var M3 = l3.slice().reverse(), I3 = d3.slice().reverse(), T3 = M3.map(function(t5, e6) {
              return [M3[e6], I3[e6]];
            }), z3 = Et(T3);
            f3 = p3 += Xt(z3);
          } else
            f3 += k3.line(L3[L3.length - 1][0], S3) + k3.line(L3[0][0], S3) + k3.move(L3[0][0], L3[0][1]) + "z";
          x3.push(p3), b3.push(f3);
        }
      } else if ("smooth" === A6) {
        var X4 = 0.35 * (o3 - g3);
        w3.globals.hasNullValues ? (null !== i3[a3][r3] && (null !== i3[a3][r3 + 1] ? (p3 = k3.move(g3, u3) + k3.curve(g3 + X4, u3, o3 - X4, n3, o3 + 1, n3), f3 = k3.move(g3 + 1, u3) + k3.curve(g3 + X4, u3, o3 - X4, n3, o3 + 1, n3) + k3.line(o3, S3) + k3.line(g3, S3) + "z") : (p3 = k3.move(g3, u3), f3 = k3.move(g3, u3) + "z")), x3.push(p3), b3.push(f3)) : (p3 += k3.curve(g3 + X4, u3, o3 - X4, n3, o3, n3), f3 += k3.curve(g3 + X4, u3, o3 - X4, n3, o3, n3)), g3 = o3, u3 = n3, r3 === i3[a3].length - 2 && (f3 = f3 + k3.curve(g3, u3, o3, n3, o3, S3) + k3.move(o3, n3) + "z", "rangeArea" === e4 && y3 ? p3 = p3 + k3.curve(g3, u3, o3, n3, o3, c3) + k3.move(o3, c3) + "z" : w3.globals.hasNullValues || (x3.push(p3), b3.push(f3)));
      } else {
        if (null === i3[a3][r3 + 1]) {
          p3 += k3.move(o3, n3);
          var E3 = w3.globals.isXNumeric ? (w3.globals.seriesX[s3][r3] - w3.globals.minX) / this.xRatio : o3 - this.xDivision;
          f3 = f3 + k3.line(E3, S3) + k3.move(o3, n3) + "z";
        }
        null === i3[a3][r3] && (p3 += k3.move(o3, n3), f3 += k3.move(o3, S3)), "stepline" === A6 ? (p3 = p3 + k3.line(o3, null, "H") + k3.line(null, n3, "V"), f3 = f3 + k3.line(o3, null, "H") + k3.line(null, n3, "V")) : "linestep" === A6 ? (p3 = p3 + k3.line(null, n3, "V") + k3.line(o3, null, "H"), f3 = f3 + k3.line(null, n3, "V") + k3.line(o3, null, "H")) : "straight" === A6 && (p3 += k3.line(o3, n3), f3 += k3.line(o3, n3)), r3 === i3[a3].length - 2 && (f3 = f3 + k3.line(o3, S3) + k3.move(o3, n3) + "z", "rangeArea" === e4 && y3 ? p3 = p3 + k3.line(o3, c3) + k3.move(o3, c3) + "z" : (x3.push(p3), b3.push(f3)));
      }
      return { linePaths: x3, areaPaths: b3, pX: g3, pY: u3, linePath: p3, areaPath: f3 };
    } }, { key: "handleNullDataPoints", value: function(t4, e4, i3, a3, s3) {
      var r3 = this.w;
      if (null === t4[i3][a3] && r3.config.markers.showNullDataPoints || 1 === t4[i3].length) {
        var o3 = this.markers.plotChartMarkers(e4, s3, a3 + 1, this.strokeWidth - r3.config.markers.strokeWidth / 2, true);
        null !== o3 && this.elPointsMain.add(o3);
      }
    } }]), t3;
  }();
  window.TreemapSquared = {}, window.TreemapSquared.generate = /* @__PURE__ */ function() {
    function t3(e6, i4, a4, s4) {
      this.xoffset = e6, this.yoffset = i4, this.height = s4, this.width = a4, this.shortestEdge = function() {
        return Math.min(this.height, this.width);
      }, this.getCoordinates = function(t4) {
        var e7, i5 = [], a5 = this.xoffset, s5 = this.yoffset, o4 = r3(t4) / this.height, n3 = r3(t4) / this.width;
        if (this.width >= this.height)
          for (e7 = 0; e7 < t4.length; e7++)
            i5.push([a5, s5, a5 + o4, s5 + t4[e7] / o4]), s5 += t4[e7] / o4;
        else
          for (e7 = 0; e7 < t4.length; e7++)
            i5.push([a5, s5, a5 + t4[e7] / n3, s5 + n3]), a5 += t4[e7] / n3;
        return i5;
      }, this.cutArea = function(e7) {
        var i5;
        if (this.width >= this.height) {
          var a5 = e7 / this.height, s5 = this.width - a5;
          i5 = new t3(this.xoffset + a5, this.yoffset, s5, this.height);
        } else {
          var r4 = e7 / this.width, o4 = this.height - r4;
          i5 = new t3(this.xoffset, this.yoffset + r4, this.width, o4);
        }
        return i5;
      };
    }
    function e4(e6, a4, s4, o4, n3) {
      o4 = void 0 === o4 ? 0 : o4, n3 = void 0 === n3 ? 0 : n3;
      var l3 = i3(function(t4, e7) {
        var i4, a5 = [], s5 = e7 / r3(t4);
        for (i4 = 0; i4 < t4.length; i4++)
          a5[i4] = t4[i4] * s5;
        return a5;
      }(e6, a4 * s4), [], new t3(o4, n3, a4, s4), []);
      return function(t4) {
        var e7, i4, a5 = [];
        for (e7 = 0; e7 < t4.length; e7++)
          for (i4 = 0; i4 < t4[e7].length; i4++)
            a5.push(t4[e7][i4]);
        return a5;
      }(l3);
    }
    function i3(t4, e6, s4, o4) {
      var n3, l3, h3;
      if (0 !== t4.length)
        return n3 = s4.shortestEdge(), function(t5, e7, i4) {
          var s5;
          if (0 === t5.length)
            return true;
          (s5 = t5.slice()).push(e7);
          var r4 = a3(t5, i4), o5 = a3(s5, i4);
          return r4 >= o5;
        }(e6, l3 = t4[0], n3) ? (e6.push(l3), i3(t4.slice(1), e6, s4, o4)) : (h3 = s4.cutArea(r3(e6), o4), o4.push(s4.getCoordinates(e6)), i3(t4, [], h3, o4)), o4;
      o4.push(s4.getCoordinates(e6));
    }
    function a3(t4, e6) {
      var i4 = Math.min.apply(Math, t4), a4 = Math.max.apply(Math, t4), s4 = r3(t4);
      return Math.max(Math.pow(e6, 2) * a4 / Math.pow(s4, 2), Math.pow(s4, 2) / (Math.pow(e6, 2) * i4));
    }
    function s3(t4) {
      return t4 && t4.constructor === Array;
    }
    function r3(t4) {
      var e6, i4 = 0;
      for (e6 = 0; e6 < t4.length; e6++)
        i4 += t4[e6];
      return i4;
    }
    function o3(t4) {
      var e6, i4 = 0;
      if (s3(t4[0]))
        for (e6 = 0; e6 < t4.length; e6++)
          i4 += o3(t4[e6]);
      else
        i4 = r3(t4);
      return i4;
    }
    return function t4(i4, a4, r4, n3, l3) {
      n3 = void 0 === n3 ? 0 : n3, l3 = void 0 === l3 ? 0 : l3;
      var h3, c3, d3 = [], g3 = [];
      if (s3(i4[0])) {
        for (c3 = 0; c3 < i4.length; c3++)
          d3[c3] = o3(i4[c3]);
        for (h3 = e4(d3, a4, r4, n3, l3), c3 = 0; c3 < i4.length; c3++)
          g3.push(t4(i4[c3], h3[c3][2] - h3[c3][0], h3[c3][3] - h3[c3][1], h3[c3][0], h3[c3][1]));
      } else
        g3 = e4(i4, a4, r4, n3, l3);
      return g3;
    };
  }();
  var Rt, Ht, Dt = function() {
    function t3(e4, i3) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.strokeWidth = this.w.config.stroke.width, this.helpers = new At(e4), this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.labels = [];
    }
    return r2(t3, [{ key: "draw", value: function(t4) {
      var e4 = this, i3 = this.w, a3 = new m2(this.ctx), s3 = new H2(this.ctx), r3 = a3.group({ class: "apexcharts-treemap" });
      if (i3.globals.noData)
        return r3;
      var o3 = [];
      return t4.forEach(function(t5) {
        var e6 = t5.map(function(t6) {
          return Math.abs(t6);
        });
        o3.push(e6);
      }), this.negRange = this.helpers.checkColorRange(), i3.config.series.forEach(function(t5, i4) {
        t5.data.forEach(function(t6) {
          Array.isArray(e4.labels[i4]) || (e4.labels[i4] = []), e4.labels[i4].push(t6.x);
        });
      }), window.TreemapSquared.generate(o3, i3.globals.gridWidth, i3.globals.gridHeight).forEach(function(o4, n3) {
        var l3 = a3.group({ class: "apexcharts-series apexcharts-treemap-series", seriesName: x2.escapeString(i3.globals.seriesNames[n3]), rel: n3 + 1, "data:realIndex": n3 });
        if (i3.config.chart.dropShadow.enabled) {
          var h3 = i3.config.chart.dropShadow;
          new v2(e4.ctx).dropShadow(r3, h3, n3);
        }
        var c3 = a3.group({ class: "apexcharts-data-labels" });
        o4.forEach(function(r4, o5) {
          var h4 = r4[0], c4 = r4[1], d3 = r4[2], g3 = r4[3], u3 = a3.drawRect(h4, c4, d3 - h4, g3 - c4, i3.config.plotOptions.treemap.borderRadius, "#fff", 1, e4.strokeWidth, i3.config.plotOptions.treemap.useFillColorAsStroke ? f3 : i3.globals.stroke.colors[n3]);
          u3.attr({ cx: h4, cy: c4, index: n3, i: n3, j: o5, width: d3 - h4, height: g3 - c4 });
          var p3 = e4.helpers.getShadeColor(i3.config.chart.type, n3, o5, e4.negRange), f3 = p3.color;
          void 0 !== i3.config.series[n3].data[o5] && i3.config.series[n3].data[o5].fillColor && (f3 = i3.config.series[n3].data[o5].fillColor);
          var x3 = s3.fillPath({ color: f3, seriesNumber: n3, dataPointIndex: o5 });
          u3.node.classList.add("apexcharts-treemap-rect"), u3.attr({ fill: x3 }), e4.helpers.addListeners(u3);
          var b3 = { x: h4 + (d3 - h4) / 2, y: c4 + (g3 - c4) / 2, width: 0, height: 0 }, v3 = { x: h4, y: c4, width: d3 - h4, height: g3 - c4 };
          if (i3.config.chart.animations.enabled && !i3.globals.dataChanged) {
            var m3 = 1;
            i3.globals.resized || (m3 = i3.config.chart.animations.speed), e4.animateTreemap(u3, b3, v3, m3);
          }
          if (i3.globals.dataChanged) {
            var y3 = 1;
            e4.dynamicAnim.enabled && i3.globals.shouldAnimate && (y3 = e4.dynamicAnim.speed, i3.globals.previousPaths[n3] && i3.globals.previousPaths[n3][o5] && i3.globals.previousPaths[n3][o5].rect && (b3 = i3.globals.previousPaths[n3][o5].rect), e4.animateTreemap(u3, b3, v3, y3));
          }
          var w3 = e4.getFontSize(r4), k3 = i3.config.dataLabels.formatter(e4.labels[n3][o5], { value: i3.globals.series[n3][o5], seriesIndex: n3, dataPointIndex: o5, w: i3 });
          "truncate" === i3.config.plotOptions.treemap.dataLabels.format && (w3 = parseInt(i3.config.dataLabels.style.fontSize, 10), k3 = e4.truncateLabels(k3, w3, h4, c4, d3, g3));
          var A6 = e4.helpers.calculateDataLabels({ text: k3, x: (h4 + d3) / 2, y: (c4 + g3) / 2 + e4.strokeWidth / 2 + w3 / 3, i: n3, j: o5, colorProps: p3, fontSize: w3, series: t4 });
          i3.config.dataLabels.enabled && A6 && e4.rotateToFitLabel(A6, w3, k3, h4, c4, d3, g3), l3.add(u3), null !== A6 && l3.add(A6);
        }), l3.add(c3), r3.add(l3);
      }), r3;
    } }, { key: "getFontSize", value: function(t4) {
      var e4 = this.w;
      var i3, a3, s3, r3, o3 = function t5(e6) {
        var i4, a4 = 0;
        if (Array.isArray(e6[0]))
          for (i4 = 0; i4 < e6.length; i4++)
            a4 += t5(e6[i4]);
        else
          for (i4 = 0; i4 < e6.length; i4++)
            a4 += e6[i4].length;
        return a4;
      }(this.labels) / function t5(e6) {
        var i4, a4 = 0;
        if (Array.isArray(e6[0]))
          for (i4 = 0; i4 < e6.length; i4++)
            a4 += t5(e6[i4]);
        else
          for (i4 = 0; i4 < e6.length; i4++)
            a4 += 1;
        return a4;
      }(this.labels);
      return i3 = t4[2] - t4[0], a3 = t4[3] - t4[1], s3 = i3 * a3, r3 = Math.pow(s3, 0.5), Math.min(r3 / o3, parseInt(e4.config.dataLabels.style.fontSize, 10));
    } }, { key: "rotateToFitLabel", value: function(t4, e4, i3, a3, s3, r3, o3) {
      var n3 = new m2(this.ctx), l3 = n3.getTextRects(i3, e4);
      if (l3.width + this.w.config.stroke.width + 5 > r3 - a3 && l3.width <= o3 - s3) {
        var h3 = n3.rotateAroundCenter(t4.node);
        t4.node.setAttribute("transform", "rotate(-90 ".concat(h3.x, " ").concat(h3.y, ") translate(").concat(l3.height / 3, ")"));
      }
    } }, { key: "truncateLabels", value: function(t4, e4, i3, a3, s3, r3) {
      var o3 = new m2(this.ctx), n3 = o3.getTextRects(t4, e4).width + this.w.config.stroke.width + 5 > s3 - i3 && r3 - a3 > s3 - i3 ? r3 - a3 : s3 - i3, l3 = o3.getTextBasedOnMaxWidth({ text: t4, maxWidth: n3, fontSize: e4 });
      return t4.length !== l3.length && n3 / e4 < 5 ? "" : l3;
    } }, { key: "animateTreemap", value: function(t4, e4, i3, a3) {
      var s3 = new b2(this.ctx);
      s3.animateRect(t4, { x: e4.x, y: e4.y, width: e4.width, height: e4.height }, { x: i3.x, y: i3.y, width: i3.width, height: i3.height }, a3, function() {
        s3.animationCompleted(t4);
      });
    } }]), t3;
  }(), Ot = 86400, Nt = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w, this.timeScaleArray = [], this.utc = this.w.config.xaxis.labels.datetimeUTC;
    }
    return r2(t3, [{ key: "calculateTimeScaleTicks", value: function(t4, i3) {
      var a3 = this, s3 = this.w;
      if (s3.globals.allSeriesCollapsed)
        return s3.globals.labels = [], s3.globals.timescaleLabels = [], [];
      var r3 = new A5(this.ctx), o3 = (i3 - t4) / 864e5;
      this.determineInterval(o3), s3.globals.disableZoomIn = false, s3.globals.disableZoomOut = false, o3 < 11574074074074075e-20 ? s3.globals.disableZoomIn = true : o3 > 5e4 && (s3.globals.disableZoomOut = true);
      var n3 = r3.getTimeUnitsfromTimestamp(t4, i3, this.utc), l3 = s3.globals.gridWidth / o3, h3 = l3 / 24, c3 = h3 / 60, d3 = c3 / 60, g3 = Math.floor(24 * o3), u3 = Math.floor(1440 * o3), p3 = Math.floor(o3 * Ot), f3 = Math.floor(o3), x3 = Math.floor(o3 / 30), b3 = Math.floor(o3 / 365), v3 = { minMillisecond: n3.minMillisecond, minSecond: n3.minSecond, minMinute: n3.minMinute, minHour: n3.minHour, minDate: n3.minDate, minMonth: n3.minMonth, minYear: n3.minYear }, m3 = { firstVal: v3, currentMillisecond: v3.minMillisecond, currentSecond: v3.minSecond, currentMinute: v3.minMinute, currentHour: v3.minHour, currentMonthDate: v3.minDate, currentDate: v3.minDate, currentMonth: v3.minMonth, currentYear: v3.minYear, daysWidthOnXAxis: l3, hoursWidthOnXAxis: h3, minutesWidthOnXAxis: c3, secondsWidthOnXAxis: d3, numberOfSeconds: p3, numberOfMinutes: u3, numberOfHours: g3, numberOfDays: f3, numberOfMonths: x3, numberOfYears: b3 };
      switch (this.tickInterval) {
        case "years":
          this.generateYearScale(m3);
          break;
        case "months":
        case "half_year":
          this.generateMonthScale(m3);
          break;
        case "months_days":
        case "months_fortnight":
        case "days":
        case "week_days":
          this.generateDayScale(m3);
          break;
        case "hours":
          this.generateHourScale(m3);
          break;
        case "minutes_fives":
        case "minutes":
          this.generateMinuteScale(m3);
          break;
        case "seconds_tens":
        case "seconds_fives":
        case "seconds":
          this.generateSecondScale(m3);
      }
      var y3 = this.timeScaleArray.map(function(t5) {
        var i4 = { position: t5.position, unit: t5.unit, year: t5.year, day: t5.day ? t5.day : 1, hour: t5.hour ? t5.hour : 0, month: t5.month + 1 };
        return "month" === t5.unit ? e3(e3({}, i4), {}, { day: 1, value: t5.value + 1 }) : "day" === t5.unit || "hour" === t5.unit ? e3(e3({}, i4), {}, { value: t5.value }) : "minute" === t5.unit ? e3(e3({}, i4), {}, { value: t5.value, minute: t5.value }) : "second" === t5.unit ? e3(e3({}, i4), {}, { value: t5.value, minute: t5.minute, second: t5.second }) : t5;
      });
      return y3.filter(function(t5) {
        var e4 = 1, i4 = Math.ceil(s3.globals.gridWidth / 120), r4 = t5.value;
        void 0 !== s3.config.xaxis.tickAmount && (i4 = s3.config.xaxis.tickAmount), y3.length > i4 && (e4 = Math.floor(y3.length / i4));
        var o4 = false, n4 = false;
        switch (a3.tickInterval) {
          case "years":
            "year" === t5.unit && (o4 = true);
            break;
          case "half_year":
            e4 = 7, "year" === t5.unit && (o4 = true);
            break;
          case "months":
            e4 = 1, "year" === t5.unit && (o4 = true);
            break;
          case "months_fortnight":
            e4 = 15, "year" !== t5.unit && "month" !== t5.unit || (o4 = true), 30 === r4 && (n4 = true);
            break;
          case "months_days":
            e4 = 10, "month" === t5.unit && (o4 = true), 30 === r4 && (n4 = true);
            break;
          case "week_days":
            e4 = 8, "month" === t5.unit && (o4 = true);
            break;
          case "days":
            e4 = 1, "month" === t5.unit && (o4 = true);
            break;
          case "hours":
            "day" === t5.unit && (o4 = true);
            break;
          case "minutes_fives":
          case "seconds_fives":
            r4 % 5 != 0 && (n4 = true);
            break;
          case "seconds_tens":
            r4 % 10 != 0 && (n4 = true);
        }
        if ("hours" === a3.tickInterval || "minutes_fives" === a3.tickInterval || "seconds_tens" === a3.tickInterval || "seconds_fives" === a3.tickInterval) {
          if (!n4)
            return true;
        } else if ((r4 % e4 == 0 || o4) && !n4)
          return true;
      });
    } }, { key: "recalcDimensionsBasedOnFormat", value: function(t4, e4) {
      var i3 = this.w, a3 = this.formatDates(t4), s3 = this.removeOverlappingTS(a3);
      i3.globals.timescaleLabels = s3.slice(), new ot(this.ctx).plotCoords();
    } }, { key: "determineInterval", value: function(t4) {
      var e4 = 24 * t4, i3 = 60 * e4;
      switch (true) {
        case t4 / 365 > 5:
          this.tickInterval = "years";
          break;
        case t4 > 800:
          this.tickInterval = "half_year";
          break;
        case t4 > 180:
          this.tickInterval = "months";
          break;
        case t4 > 90:
          this.tickInterval = "months_fortnight";
          break;
        case t4 > 60:
          this.tickInterval = "months_days";
          break;
        case t4 > 30:
          this.tickInterval = "week_days";
          break;
        case t4 > 2:
          this.tickInterval = "days";
          break;
        case e4 > 2.4:
          this.tickInterval = "hours";
          break;
        case i3 > 15:
          this.tickInterval = "minutes_fives";
          break;
        case i3 > 5:
          this.tickInterval = "minutes";
          break;
        case i3 > 1:
          this.tickInterval = "seconds_tens";
          break;
        case 60 * i3 > 20:
          this.tickInterval = "seconds_fives";
          break;
        default:
          this.tickInterval = "seconds";
      }
    } }, { key: "generateYearScale", value: function(t4) {
      var e4 = t4.firstVal, i3 = t4.currentMonth, a3 = t4.currentYear, s3 = t4.daysWidthOnXAxis, r3 = t4.numberOfYears, o3 = e4.minYear, n3 = 0, l3 = new A5(this.ctx), h3 = "year";
      if (e4.minDate > 1 || e4.minMonth > 0) {
        var c3 = l3.determineRemainingDaysOfYear(e4.minYear, e4.minMonth, e4.minDate);
        n3 = (l3.determineDaysOfYear(e4.minYear) - c3 + 1) * s3, o3 = e4.minYear + 1, this.timeScaleArray.push({ position: n3, value: o3, unit: h3, year: o3, month: x2.monthMod(i3 + 1) });
      } else
        1 === e4.minDate && 0 === e4.minMonth && this.timeScaleArray.push({ position: n3, value: o3, unit: h3, year: a3, month: x2.monthMod(i3 + 1) });
      for (var d3 = o3, g3 = n3, u3 = 0; u3 < r3; u3++)
        d3++, g3 = l3.determineDaysOfYear(d3 - 1) * s3 + g3, this.timeScaleArray.push({ position: g3, value: d3, unit: h3, year: d3, month: 1 });
    } }, { key: "generateMonthScale", value: function(t4) {
      var e4 = t4.firstVal, i3 = t4.currentMonthDate, a3 = t4.currentMonth, s3 = t4.currentYear, r3 = t4.daysWidthOnXAxis, o3 = t4.numberOfMonths, n3 = a3, l3 = 0, h3 = new A5(this.ctx), c3 = "month", d3 = 0;
      if (e4.minDate > 1) {
        l3 = (h3.determineDaysOfMonths(a3 + 1, e4.minYear) - i3 + 1) * r3, n3 = x2.monthMod(a3 + 1);
        var g3 = s3 + d3, u3 = x2.monthMod(n3), p3 = n3;
        0 === n3 && (c3 = "year", p3 = g3, u3 = 1, g3 += d3 += 1), this.timeScaleArray.push({ position: l3, value: p3, unit: c3, year: g3, month: u3 });
      } else
        this.timeScaleArray.push({ position: l3, value: n3, unit: c3, year: s3, month: x2.monthMod(a3) });
      for (var f3 = n3 + 1, b3 = l3, v3 = 0, m3 = 1; v3 < o3; v3++, m3++) {
        0 === (f3 = x2.monthMod(f3)) ? (c3 = "year", d3 += 1) : c3 = "month";
        var y3 = this._getYear(s3, f3, d3);
        b3 = h3.determineDaysOfMonths(f3, y3) * r3 + b3;
        var w3 = 0 === f3 ? y3 : f3;
        this.timeScaleArray.push({ position: b3, value: w3, unit: c3, year: y3, month: 0 === f3 ? 1 : f3 }), f3++;
      }
    } }, { key: "generateDayScale", value: function(t4) {
      var e4 = t4.firstVal, i3 = t4.currentMonth, a3 = t4.currentYear, s3 = t4.hoursWidthOnXAxis, r3 = t4.numberOfDays, o3 = new A5(this.ctx), n3 = "day", l3 = e4.minDate + 1, h3 = l3, c3 = function(t5, e6, i4) {
        return t5 > o3.determineDaysOfMonths(e6 + 1, i4) ? (h3 = 1, n3 = "month", g3 = e6 += 1, e6) : e6;
      }, d3 = (24 - e4.minHour) * s3, g3 = l3, u3 = c3(h3, i3, a3);
      0 === e4.minHour && 1 === e4.minDate ? (d3 = 0, g3 = x2.monthMod(e4.minMonth), n3 = "month", h3 = e4.minDate) : 1 !== e4.minDate && 0 === e4.minHour && 0 === e4.minMinute && (d3 = 0, l3 = e4.minDate, g3 = l3, u3 = c3(h3 = l3, i3, a3)), this.timeScaleArray.push({ position: d3, value: g3, unit: n3, year: this._getYear(a3, u3, 0), month: x2.monthMod(u3), day: h3 });
      for (var p3 = d3, f3 = 0; f3 < r3; f3++) {
        n3 = "day", u3 = c3(h3 += 1, u3, this._getYear(a3, u3, 0));
        var b3 = this._getYear(a3, u3, 0);
        p3 = 24 * s3 + p3;
        var v3 = 1 === h3 ? x2.monthMod(u3) : h3;
        this.timeScaleArray.push({ position: p3, value: v3, unit: n3, year: b3, month: x2.monthMod(u3), day: v3 });
      }
    } }, { key: "generateHourScale", value: function(t4) {
      var e4 = t4.firstVal, i3 = t4.currentDate, a3 = t4.currentMonth, s3 = t4.currentYear, r3 = t4.minutesWidthOnXAxis, o3 = t4.numberOfHours, n3 = new A5(this.ctx), l3 = "hour", h3 = function(t5, e6) {
        return t5 > n3.determineDaysOfMonths(e6 + 1, s3) && (f3 = 1, e6 += 1), { month: e6, date: f3 };
      }, c3 = function(t5, e6) {
        return t5 > n3.determineDaysOfMonths(e6 + 1, s3) ? e6 += 1 : e6;
      }, d3 = 60 - (e4.minMinute + e4.minSecond / 60), g3 = d3 * r3, u3 = e4.minHour + 1, p3 = u3;
      60 === d3 && (g3 = 0, p3 = u3 = e4.minHour);
      var f3 = i3;
      p3 >= 24 && (p3 = 0, f3 += 1, l3 = "day");
      var b3 = h3(f3, a3).month;
      b3 = c3(f3, b3), this.timeScaleArray.push({ position: g3, value: u3, unit: l3, day: f3, hour: p3, year: s3, month: x2.monthMod(b3) }), p3++;
      for (var v3 = g3, m3 = 0; m3 < o3; m3++) {
        if (l3 = "hour", p3 >= 24)
          p3 = 0, l3 = "day", b3 = h3(f3 += 1, b3).month, b3 = c3(f3, b3);
        var y3 = this._getYear(s3, b3, 0);
        v3 = 60 * r3 + v3;
        var w3 = 0 === p3 ? f3 : p3;
        this.timeScaleArray.push({ position: v3, value: w3, unit: l3, hour: p3, day: f3, year: y3, month: x2.monthMod(b3) }), p3++;
      }
    } }, { key: "generateMinuteScale", value: function(t4) {
      for (var e4 = t4.currentMillisecond, i3 = t4.currentSecond, a3 = t4.currentMinute, s3 = t4.currentHour, r3 = t4.currentDate, o3 = t4.currentMonth, n3 = t4.currentYear, l3 = t4.minutesWidthOnXAxis, h3 = t4.secondsWidthOnXAxis, c3 = t4.numberOfMinutes, d3 = a3 + 1, g3 = r3, u3 = o3, p3 = n3, f3 = s3, b3 = (60 - i3 - e4 / 1e3) * h3, v3 = 0; v3 < c3; v3++)
        d3 >= 60 && (d3 = 0, 24 === (f3 += 1) && (f3 = 0)), this.timeScaleArray.push({ position: b3, value: d3, unit: "minute", hour: f3, minute: d3, day: g3, year: this._getYear(p3, u3, 0), month: x2.monthMod(u3) }), b3 += l3, d3++;
    } }, { key: "generateSecondScale", value: function(t4) {
      for (var e4 = t4.currentMillisecond, i3 = t4.currentSecond, a3 = t4.currentMinute, s3 = t4.currentHour, r3 = t4.currentDate, o3 = t4.currentMonth, n3 = t4.currentYear, l3 = t4.secondsWidthOnXAxis, h3 = t4.numberOfSeconds, c3 = i3 + 1, d3 = a3, g3 = r3, u3 = o3, p3 = n3, f3 = s3, b3 = (1e3 - e4) / 1e3 * l3, v3 = 0; v3 < h3; v3++)
        c3 >= 60 && (c3 = 0, ++d3 >= 60 && (d3 = 0, 24 === ++f3 && (f3 = 0))), this.timeScaleArray.push({ position: b3, value: c3, unit: "second", hour: f3, minute: d3, second: c3, day: g3, year: this._getYear(p3, u3, 0), month: x2.monthMod(u3) }), b3 += l3, c3++;
    } }, { key: "createRawDateString", value: function(t4, e4) {
      var i3 = t4.year;
      return 0 === t4.month && (t4.month = 1), i3 += "-" + ("0" + t4.month.toString()).slice(-2), "day" === t4.unit ? i3 += "day" === t4.unit ? "-" + ("0" + e4).slice(-2) : "-01" : i3 += "-" + ("0" + (t4.day ? t4.day : "1")).slice(-2), "hour" === t4.unit ? i3 += "hour" === t4.unit ? "T" + ("0" + e4).slice(-2) : "T00" : i3 += "T" + ("0" + (t4.hour ? t4.hour : "0")).slice(-2), "minute" === t4.unit ? i3 += ":" + ("0" + e4).slice(-2) : i3 += ":" + (t4.minute ? ("0" + t4.minute).slice(-2) : "00"), "second" === t4.unit ? i3 += ":" + ("0" + e4).slice(-2) : i3 += ":00", this.utc && (i3 += ".000Z"), i3;
    } }, { key: "formatDates", value: function(t4) {
      var e4 = this, i3 = this.w;
      return t4.map(function(t5) {
        var a3 = t5.value.toString(), s3 = new A5(e4.ctx), r3 = e4.createRawDateString(t5, a3), o3 = s3.getDate(s3.parseDate(r3));
        if (e4.utc || (o3 = s3.getDate(s3.parseDateWithTimezone(r3))), void 0 === i3.config.xaxis.labels.format) {
          var n3 = "dd MMM", l3 = i3.config.xaxis.labels.datetimeFormatter;
          "year" === t5.unit && (n3 = l3.year), "month" === t5.unit && (n3 = l3.month), "day" === t5.unit && (n3 = l3.day), "hour" === t5.unit && (n3 = l3.hour), "minute" === t5.unit && (n3 = l3.minute), "second" === t5.unit && (n3 = l3.second), a3 = s3.formatDate(o3, n3);
        } else
          a3 = s3.formatDate(o3, i3.config.xaxis.labels.format);
        return { dateString: r3, position: t5.position, value: a3, unit: t5.unit, year: t5.year, month: t5.month };
      });
    } }, { key: "removeOverlappingTS", value: function(t4) {
      var e4, i3 = this, a3 = new m2(this.ctx), s3 = false;
      t4.length > 0 && t4[0].value && t4.every(function(e6) {
        return e6.value.length === t4[0].value.length;
      }) && (s3 = true, e4 = a3.getTextRects(t4[0].value).width);
      var r3 = 0, o3 = t4.map(function(o4, n3) {
        if (n3 > 0 && i3.w.config.xaxis.labels.hideOverlappingLabels) {
          var l3 = s3 ? e4 : a3.getTextRects(t4[r3].value).width, h3 = t4[r3].position;
          return o4.position > h3 + l3 + 10 ? (r3 = n3, o4) : null;
        }
        return o4;
      });
      return o3 = o3.filter(function(t5) {
        return null !== t5;
      });
    } }, { key: "_getYear", value: function(t4, e4, i3) {
      return t4 + Math.floor(e4 / 12) + i3;
    } }]), t3;
  }(), Wt = function() {
    function t3(e4, i3) {
      a2(this, t3), this.ctx = i3, this.w = i3.w, this.el = e4;
    }
    return r2(t3, [{ key: "setupElements", value: function() {
      var t4 = this.w.globals, e4 = this.w.config, i3 = e4.chart.type;
      t4.axisCharts = ["line", "area", "bar", "rangeBar", "rangeArea", "candlestick", "boxPlot", "scatter", "bubble", "radar", "heatmap", "treemap"].indexOf(i3) > -1, t4.xyCharts = ["line", "area", "bar", "rangeBar", "rangeArea", "candlestick", "boxPlot", "scatter", "bubble"].indexOf(i3) > -1, t4.isBarHorizontal = ("bar" === e4.chart.type || "rangeBar" === e4.chart.type || "boxPlot" === e4.chart.type) && e4.plotOptions.bar.horizontal, t4.chartClass = ".apexcharts" + t4.chartID, t4.dom.baseEl = this.el, t4.dom.elWrap = document.createElement("div"), m2.setAttrs(t4.dom.elWrap, { id: t4.chartClass.substring(1), class: "apexcharts-canvas " + t4.chartClass.substring(1) }), this.el.appendChild(t4.dom.elWrap), t4.dom.Paper = new window.SVG.Doc(t4.dom.elWrap), t4.dom.Paper.attr({ class: "apexcharts-svg", "xmlns:data": "ApexChartsNS", transform: "translate(".concat(e4.chart.offsetX, ", ").concat(e4.chart.offsetY, ")") }), t4.dom.Paper.node.style.background = "dark" !== e4.theme.mode || e4.chart.background ? e4.chart.background : "rgba(0, 0, 0, 0.8)", this.setSVGDimensions(), t4.dom.elLegendForeign = document.createElementNS(t4.SVGNS, "foreignObject"), m2.setAttrs(t4.dom.elLegendForeign, { x: 0, y: 0, width: t4.svgWidth, height: t4.svgHeight }), t4.dom.elLegendWrap = document.createElement("div"), t4.dom.elLegendWrap.classList.add("apexcharts-legend"), t4.dom.elLegendWrap.setAttribute("xmlns", "http://www.w3.org/1999/xhtml"), t4.dom.elLegendForeign.appendChild(t4.dom.elLegendWrap), t4.dom.Paper.node.appendChild(t4.dom.elLegendForeign), t4.dom.elGraphical = t4.dom.Paper.group().attr({ class: "apexcharts-inner apexcharts-graphical" }), t4.dom.elDefs = t4.dom.Paper.defs(), t4.dom.Paper.add(t4.dom.elGraphical), t4.dom.elGraphical.add(t4.dom.elDefs);
    } }, { key: "plotChartType", value: function(t4, e4) {
      var i3 = this.w, a3 = i3.config, s3 = i3.globals, r3 = { series: [], i: [] }, o3 = { series: [], i: [] }, n3 = { series: [], i: [] }, l3 = { series: [], i: [] }, h3 = { series: [], i: [] }, c3 = { series: [], i: [] }, d3 = { series: [], i: [] }, g3 = { series: [], i: [] }, u3 = { series: [], seriesRangeEnd: [], i: [] }, p3 = void 0 !== a3.chart.type ? a3.chart.type : "line", f3 = 0;
      s3.series.map(function(e6, x4) {
        void 0 !== t4[x4].type ? "column" === t4[x4].type || "bar" === t4[x4].type ? (s3.series.length > 1 && a3.plotOptions.bar.horizontal && console.warn("Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"), h3.series.push(e6), h3.i.push(x4), "bar" !== p3 && f3++, i3.globals.columnSeries = h3.series) : "area" === t4[x4].type ? (o3.series.push(e6), o3.i.push(x4), p3 !== t4[x4].type && f3++) : "line" === t4[x4].type ? (r3.series.push(e6), r3.i.push(x4), p3 !== t4[x4].type && f3++) : "scatter" === t4[x4].type ? (n3.series.push(e6), n3.i.push(x4)) : "bubble" === t4[x4].type ? (l3.series.push(e6), l3.i.push(x4), p3 !== t4[x4].type && f3++) : "candlestick" === t4[x4].type ? (c3.series.push(e6), c3.i.push(x4), p3 !== t4[x4].type && f3++) : "boxPlot" === t4[x4].type ? (d3.series.push(e6), d3.i.push(x4), p3 !== t4[x4].type && f3++) : "rangeBar" === t4[x4].type ? (g3.series.push(e6), g3.i.push(x4), p3 !== t4[x4].type && f3++) : "rangeArea" === t4[x4].type ? (u3.series.push(s3.seriesRangeStart[x4]), u3.seriesRangeEnd.push(s3.seriesRangeEnd[x4]), u3.i.push(x4), p3 !== t4[x4].type && f3++) : console.warn("You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble/candlestick/boxPlot/rangeBar/rangeArea") : (r3.series.push(e6), r3.i.push(x4));
      }), s3.comboCharts || (s3.comboCharts = f3 > 0);
      var x3 = new Ft(this.ctx, e4), b3 = new kt(this.ctx, e4);
      this.ctx.pie = new Lt(this.ctx);
      var v3 = new Mt(this.ctx);
      this.ctx.rangeBar = new It(this.ctx, e4);
      var m3 = new Pt(this.ctx), y3 = [];
      if (s3.comboCharts) {
        if (o3.series.length > 0 && y3.push(x3.draw(o3.series, "area", o3.i)), h3.series.length > 0)
          if (i3.config.chart.stacked) {
            var w3 = new wt(this.ctx, e4);
            y3.push(w3.draw(h3.series, h3.i));
          } else
            this.ctx.bar = new yt(this.ctx, e4), y3.push(this.ctx.bar.draw(h3.series, h3.i));
        if (u3.series.length > 0 && y3.push(x3.draw(u3.series, "rangeArea", u3.i, u3.seriesRangeEnd)), r3.series.length > 0 && y3.push(x3.draw(r3.series, "line", r3.i)), c3.series.length > 0 && y3.push(b3.draw(c3.series, "candlestick", c3.i)), d3.series.length > 0 && y3.push(b3.draw(d3.series, "boxPlot", d3.i)), g3.series.length > 0 && y3.push(this.ctx.rangeBar.draw(g3.series, g3.i)), n3.series.length > 0) {
          var k3 = new Ft(this.ctx, e4, true);
          y3.push(k3.draw(n3.series, "scatter", n3.i));
        }
        if (l3.series.length > 0) {
          var A6 = new Ft(this.ctx, e4, true);
          y3.push(A6.draw(l3.series, "bubble", l3.i));
        }
      } else
        switch (a3.chart.type) {
          case "line":
            y3 = x3.draw(s3.series, "line");
            break;
          case "area":
            y3 = x3.draw(s3.series, "area");
            break;
          case "bar":
            if (a3.chart.stacked)
              y3 = new wt(this.ctx, e4).draw(s3.series);
            else
              this.ctx.bar = new yt(this.ctx, e4), y3 = this.ctx.bar.draw(s3.series);
            break;
          case "candlestick":
            y3 = new kt(this.ctx, e4).draw(s3.series, "candlestick");
            break;
          case "boxPlot":
            y3 = new kt(this.ctx, e4).draw(s3.series, a3.chart.type);
            break;
          case "rangeBar":
            y3 = this.ctx.rangeBar.draw(s3.series);
            break;
          case "rangeArea":
            y3 = x3.draw(s3.seriesRangeStart, "rangeArea", void 0, s3.seriesRangeEnd);
            break;
          case "heatmap":
            y3 = new St(this.ctx, e4).draw(s3.series);
            break;
          case "treemap":
            y3 = new Dt(this.ctx, e4).draw(s3.series);
            break;
          case "pie":
          case "donut":
          case "polarArea":
            y3 = this.ctx.pie.draw(s3.series);
            break;
          case "radialBar":
            y3 = v3.draw(s3.series);
            break;
          case "radar":
            y3 = m3.draw(s3.series);
            break;
          default:
            y3 = x3.draw(s3.series);
        }
      return y3;
    } }, { key: "setSVGDimensions", value: function() {
      var t4 = this.w.globals, e4 = this.w.config;
      t4.svgWidth = e4.chart.width, t4.svgHeight = e4.chart.height;
      var i3 = x2.getDimensions(this.el), a3 = e4.chart.width.toString().split(/[0-9]+/g).pop();
      "%" === a3 ? x2.isNumber(i3[0]) && (0 === i3[0].width && (i3 = x2.getDimensions(this.el.parentNode)), t4.svgWidth = i3[0] * parseInt(e4.chart.width, 10) / 100) : "px" !== a3 && "" !== a3 || (t4.svgWidth = parseInt(e4.chart.width, 10));
      var s3 = e4.chart.height.toString().split(/[0-9]+/g).pop();
      if ("auto" !== t4.svgHeight && "" !== t4.svgHeight)
        if ("%" === s3) {
          var r3 = x2.getDimensions(this.el.parentNode);
          t4.svgHeight = r3[1] * parseInt(e4.chart.height, 10) / 100;
        } else
          t4.svgHeight = parseInt(e4.chart.height, 10);
      else
        t4.axisCharts ? t4.svgHeight = t4.svgWidth / 1.61 : t4.svgHeight = t4.svgWidth / 1.2;
      if (t4.svgWidth < 0 && (t4.svgWidth = 0), t4.svgHeight < 0 && (t4.svgHeight = 0), m2.setAttrs(t4.dom.Paper.node, { width: t4.svgWidth, height: t4.svgHeight }), "%" !== s3) {
        var o3 = e4.chart.sparkline.enabled ? 0 : t4.axisCharts ? e4.chart.parentHeightOffset : 0;
        t4.dom.Paper.node.parentNode.parentNode.style.minHeight = t4.svgHeight + o3 + "px";
      }
      t4.dom.elWrap.style.width = t4.svgWidth + "px", t4.dom.elWrap.style.height = t4.svgHeight + "px";
    } }, { key: "shiftGraphPosition", value: function() {
      var t4 = this.w.globals, e4 = t4.translateY, i3 = { transform: "translate(" + t4.translateX + ", " + e4 + ")" };
      m2.setAttrs(t4.dom.elGraphical.node, i3);
    } }, { key: "resizeNonAxisCharts", value: function() {
      var t4 = this.w, e4 = t4.globals, i3 = 0, a3 = t4.config.chart.sparkline.enabled ? 1 : 15;
      a3 += t4.config.grid.padding.bottom, "top" !== t4.config.legend.position && "bottom" !== t4.config.legend.position || !t4.config.legend.show || t4.config.legend.floating || (i3 = new lt(this.ctx).legendHelpers.getLegendBBox().clwh + 10);
      var s3 = t4.globals.dom.baseEl.querySelector(".apexcharts-radialbar, .apexcharts-pie"), r3 = 2.05 * t4.globals.radialSize;
      if (s3 && !t4.config.chart.sparkline.enabled && 0 !== t4.config.plotOptions.radialBar.startAngle) {
        var o3 = x2.getBoundingClientRect(s3);
        r3 = o3.bottom;
        var n3 = o3.bottom - o3.top;
        r3 = Math.max(2.05 * t4.globals.radialSize, n3);
      }
      var l3 = r3 + e4.translateY + i3 + a3;
      e4.dom.elLegendForeign && e4.dom.elLegendForeign.setAttribute("height", l3), t4.config.chart.height && String(t4.config.chart.height).indexOf("%") > 0 || (e4.dom.elWrap.style.height = l3 + "px", m2.setAttrs(e4.dom.Paper.node, { height: l3 }), e4.dom.Paper.node.parentNode.parentNode.style.minHeight = l3 + "px");
    } }, { key: "coreCalculations", value: function() {
      new U2(this.ctx).init();
    } }, { key: "resetGlobals", value: function() {
      var t4 = this, e4 = function() {
        return t4.w.config.series.map(function(t5) {
          return [];
        });
      }, i3 = new F2(), a3 = this.w.globals;
      i3.initGlobalVars(a3), a3.seriesXvalues = e4(), a3.seriesYvalues = e4();
    } }, { key: "isMultipleY", value: function() {
      if (this.w.config.yaxis.constructor === Array && this.w.config.yaxis.length > 1)
        return this.w.globals.isMultipleYAxis = true, true;
    } }, { key: "xySettings", value: function() {
      var t4 = null, e4 = this.w;
      if (e4.globals.axisCharts) {
        if ("back" === e4.config.xaxis.crosshairs.position)
          new Q2(this.ctx).drawXCrosshairs();
        if ("back" === e4.config.yaxis[0].crosshairs.position)
          new Q2(this.ctx).drawYCrosshairs();
        if ("datetime" === e4.config.xaxis.type && void 0 === e4.config.xaxis.labels.formatter) {
          this.ctx.timeScale = new Nt(this.ctx);
          var i3 = [];
          isFinite(e4.globals.minX) && isFinite(e4.globals.maxX) && !e4.globals.isBarHorizontal ? i3 = this.ctx.timeScale.calculateTimeScaleTicks(e4.globals.minX, e4.globals.maxX) : e4.globals.isBarHorizontal && (i3 = this.ctx.timeScale.calculateTimeScaleTicks(e4.globals.minY, e4.globals.maxY)), this.ctx.timeScale.recalcDimensionsBasedOnFormat(i3);
        }
        t4 = new y2(this.ctx).getCalculatedRatios();
      }
      return t4;
    } }, { key: "updateSourceChart", value: function(t4) {
      this.ctx.w.globals.selection = void 0, this.ctx.updateHelpers._updateOptions({ chart: { selection: { xaxis: { min: t4.w.globals.minX, max: t4.w.globals.maxX } } } }, false, false);
    } }, { key: "setupBrushHandler", value: function() {
      var t4 = this, e4 = this.w;
      if (e4.config.chart.brush.enabled && "function" != typeof e4.config.chart.events.selection) {
        var i3 = Array.isArray(e4.config.chart.brush.targets) ? e4.config.chart.brush.targets : [e4.config.chart.brush.target];
        i3.forEach(function(e6) {
          var i4 = ApexCharts.getChartByID(e6);
          i4.w.globals.brushSource = t4.ctx, "function" != typeof i4.w.config.chart.events.zoomed && (i4.w.config.chart.events.zoomed = function() {
            t4.updateSourceChart(i4);
          }), "function" != typeof i4.w.config.chart.events.scrolled && (i4.w.config.chart.events.scrolled = function() {
            t4.updateSourceChart(i4);
          });
        }), e4.config.chart.events.selection = function(t5, e6) {
          i3.forEach(function(t6) {
            ApexCharts.getChartByID(t6).ctx.updateHelpers._updateOptions({ xaxis: { min: e6.xaxis.min, max: e6.xaxis.max } }, false, false, false, false);
          });
        };
      }
    } }]), t3;
  }(), Bt = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "_updateOptions", value: function(t4) {
      var e4 = this, a3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], s3 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], r3 = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], o3 = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
      return new Promise(function(n3) {
        var l3 = [e4.ctx];
        r3 && (l3 = e4.ctx.getSyncedCharts()), e4.ctx.w.globals.isExecCalled && (l3 = [e4.ctx], e4.ctx.w.globals.isExecCalled = false), l3.forEach(function(r4, h3) {
          var c3 = r4.w;
          if (c3.globals.shouldAnimate = s3, a3 || (c3.globals.resized = true, c3.globals.dataChanged = true, s3 && r4.series.getPreviousPaths()), t4 && "object" === i2(t4) && (r4.config = new Y3(t4), t4 = y2.extendArrayProps(r4.config, t4, c3), r4.w.globals.chartID !== e4.ctx.w.globals.chartID && delete t4.series, c3.config = x2.extend(c3.config, t4), o3 && (c3.globals.lastXAxis = t4.xaxis ? x2.clone(t4.xaxis) : [], c3.globals.lastYAxis = t4.yaxis ? x2.clone(t4.yaxis) : [], c3.globals.initialConfig = x2.extend({}, c3.config), c3.globals.initialSeries = x2.clone(c3.config.series), t4.series))) {
            for (var d3 = 0; d3 < c3.globals.collapsedSeriesIndices.length; d3++) {
              var g3 = c3.config.series[c3.globals.collapsedSeriesIndices[d3]];
              c3.globals.collapsedSeries[d3].data = c3.globals.axisCharts ? g3.data.slice() : g3;
            }
            for (var u3 = 0; u3 < c3.globals.ancillaryCollapsedSeriesIndices.length; u3++) {
              var p3 = c3.config.series[c3.globals.ancillaryCollapsedSeriesIndices[u3]];
              c3.globals.ancillaryCollapsedSeries[u3].data = c3.globals.axisCharts ? p3.data.slice() : p3;
            }
            r4.series.emptyCollapsedSeries(c3.config.series);
          }
          return r4.update(t4).then(function() {
            h3 === l3.length - 1 && n3(r4);
          });
        });
      });
    } }, { key: "_updateSeries", value: function(t4, e4) {
      var i3 = this, a3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
      return new Promise(function(s3) {
        var r3, o3 = i3.w;
        return o3.globals.shouldAnimate = e4, o3.globals.dataChanged = true, e4 && i3.ctx.series.getPreviousPaths(), o3.globals.axisCharts ? (0 === (r3 = t4.map(function(t5, e6) {
          return i3._extendSeries(t5, e6);
        })).length && (r3 = [{ data: [] }]), o3.config.series = r3) : o3.config.series = t4.slice(), a3 && (o3.globals.initialConfig.series = x2.clone(o3.config.series), o3.globals.initialSeries = x2.clone(o3.config.series)), i3.ctx.update().then(function() {
          s3(i3.ctx);
        });
      });
    } }, { key: "_extendSeries", value: function(t4, i3) {
      var a3 = this.w, s3 = a3.config.series[i3];
      return e3(e3({}, a3.config.series[i3]), {}, { name: t4.name ? t4.name : null == s3 ? void 0 : s3.name, color: t4.color ? t4.color : null == s3 ? void 0 : s3.color, type: t4.type ? t4.type : null == s3 ? void 0 : s3.type, group: t4.group ? t4.group : null == s3 ? void 0 : s3.group, data: t4.data ? t4.data : null == s3 ? void 0 : s3.data, zIndex: void 0 !== t4.zIndex ? t4.zIndex : i3 });
    } }, { key: "toggleDataPointSelection", value: function(t4, e4) {
      var i3 = this.w, a3 = null, s3 = ".apexcharts-series[data\\:realIndex='".concat(t4, "']");
      return i3.globals.axisCharts ? a3 = i3.globals.dom.Paper.select("".concat(s3, " path[j='").concat(e4, "'], ").concat(s3, " circle[j='").concat(e4, "'], ").concat(s3, " rect[j='").concat(e4, "']")).members[0] : void 0 === e4 && (a3 = i3.globals.dom.Paper.select("".concat(s3, " path[j='").concat(t4, "']")).members[0], "pie" !== i3.config.chart.type && "polarArea" !== i3.config.chart.type && "donut" !== i3.config.chart.type || this.ctx.pie.pieClicked(t4)), a3 ? (new m2(this.ctx).pathMouseDown(a3, null), a3.node ? a3.node : null) : (console.warn("toggleDataPointSelection: Element not found"), null);
    } }, { key: "forceXAxisUpdate", value: function(t4) {
      var e4 = this.w;
      if (["min", "max"].forEach(function(i4) {
        void 0 !== t4.xaxis[i4] && (e4.config.xaxis[i4] = t4.xaxis[i4], e4.globals.lastXAxis[i4] = t4.xaxis[i4]);
      }), t4.xaxis.categories && t4.xaxis.categories.length && (e4.config.xaxis.categories = t4.xaxis.categories), e4.config.xaxis.convertedCatToNumeric) {
        var i3 = new E2(t4);
        t4 = i3.convertCatToNumericXaxis(t4, this.ctx);
      }
      return t4;
    } }, { key: "forceYAxisUpdate", value: function(t4) {
      return t4.chart && t4.chart.stacked && "100%" === t4.chart.stackType && (Array.isArray(t4.yaxis) ? t4.yaxis.forEach(function(e4, i3) {
        t4.yaxis[i3].min = 0, t4.yaxis[i3].max = 100;
      }) : (t4.yaxis.min = 0, t4.yaxis.max = 100)), t4;
    } }, { key: "revertDefaultAxisMinMax", value: function(t4) {
      var e4 = this, i3 = this.w, a3 = i3.globals.lastXAxis, s3 = i3.globals.lastYAxis;
      t4 && t4.xaxis && (a3 = t4.xaxis), t4 && t4.yaxis && (s3 = t4.yaxis), i3.config.xaxis.min = a3.min, i3.config.xaxis.max = a3.max;
      var r3 = function(t5) {
        void 0 !== s3[t5] && (i3.config.yaxis[t5].min = s3[t5].min, i3.config.yaxis[t5].max = s3[t5].max);
      };
      i3.config.yaxis.map(function(t5, a4) {
        i3.globals.zoomed || void 0 !== s3[a4] ? r3(a4) : void 0 !== e4.ctx.opts.yaxis[a4] && (t5.min = e4.ctx.opts.yaxis[a4].min, t5.max = e4.ctx.opts.yaxis[a4].max);
      });
    } }]), t3;
  }();
  Rt = "undefined" != typeof window ? window : void 0, Ht = function(t3, e4) {
    var a3 = (void 0 !== this ? this : t3).SVG = function(t4) {
      if (a3.supported)
        return t4 = new a3.Doc(t4), a3.parser.draw || a3.prepare(), t4;
    };
    if (a3.ns = "http://www.w3.org/2000/svg", a3.xmlns = "http://www.w3.org/2000/xmlns/", a3.xlink = "http://www.w3.org/1999/xlink", a3.svgjs = "http://svgjs.dev", a3.supported = true, !a3.supported)
      return false;
    a3.did = 1e3, a3.eid = function(t4) {
      return "Svgjs" + d3(t4) + a3.did++;
    }, a3.create = function(t4) {
      var i3 = e4.createElementNS(this.ns, t4);
      return i3.setAttribute("id", this.eid(t4)), i3;
    }, a3.extend = function() {
      var t4, e6;
      e6 = (t4 = [].slice.call(arguments)).pop();
      for (var i3 = t4.length - 1; i3 >= 0; i3--)
        if (t4[i3])
          for (var s4 in e6)
            t4[i3].prototype[s4] = e6[s4];
      a3.Set && a3.Set.inherit && a3.Set.inherit();
    }, a3.invent = function(t4) {
      var e6 = "function" == typeof t4.create ? t4.create : function() {
        this.constructor.call(this, a3.create(t4.create));
      };
      return t4.inherit && (e6.prototype = new t4.inherit()), t4.extend && a3.extend(e6, t4.extend), t4.construct && a3.extend(t4.parent || a3.Container, t4.construct), e6;
    }, a3.adopt = function(e6) {
      return e6 ? e6.instance ? e6.instance : ((i3 = "svg" == e6.nodeName ? e6.parentNode instanceof t3.SVGElement ? new a3.Nested() : new a3.Doc() : "linearGradient" == e6.nodeName ? new a3.Gradient("linear") : "radialGradient" == e6.nodeName ? new a3.Gradient("radial") : a3[d3(e6.nodeName)] ? new a3[d3(e6.nodeName)]() : new a3.Element(e6)).type = e6.nodeName, i3.node = e6, e6.instance = i3, i3 instanceof a3.Doc && i3.namespace().defs(), i3.setData(JSON.parse(e6.getAttribute("svgjs:data")) || {}), i3) : null;
      var i3;
    }, a3.prepare = function() {
      var t4 = e4.getElementsByTagName("body")[0], i3 = (t4 ? new a3.Doc(t4) : a3.adopt(e4.documentElement).nested()).size(2, 0);
      a3.parser = { body: t4 || e4.documentElement, draw: i3.style("opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden").node, poly: i3.polyline().node, path: i3.path().node, native: a3.create("svg") };
    }, a3.parser = { native: a3.create("svg") }, e4.addEventListener("DOMContentLoaded", function() {
      a3.parser.draw || a3.prepare();
    }, false), a3.regex = { numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i, hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i, rgb: /rgb\((\d+),(\d+),(\d+)\)/, reference: /#([a-z0-9\-_]+)/i, transforms: /\)\s*,?\s*/, whitespace: /\s/g, isHex: /^#[a-f0-9]{3,6}$/i, isRgb: /^rgb\(/, isCss: /[^:]+:[^;]+;?/, isBlank: /^(\s+)?$/, isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i, isPercent: /^-?[\d\.]+%$/, isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i, delimiter: /[\s,]+/, hyphen: /([^e])\-/gi, pathLetters: /[MLHVCSQTAZ]/gi, isPathLetter: /[MLHVCSQTAZ]/i, numbersWithDots: /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi, dots: /\./g }, a3.utils = { map: function(t4, e6) {
      for (var i3 = t4.length, a4 = [], s4 = 0; s4 < i3; s4++)
        a4.push(e6(t4[s4]));
      return a4;
    }, filter: function(t4, e6) {
      for (var i3 = t4.length, a4 = [], s4 = 0; s4 < i3; s4++)
        e6(t4[s4]) && a4.push(t4[s4]);
      return a4;
    }, filterSVGElements: function(e6) {
      return this.filter(e6, function(e7) {
        return e7 instanceof t3.SVGElement;
      });
    } }, a3.defaults = { attrs: { "fill-opacity": 1, "stroke-opacity": 1, "stroke-width": 0, "stroke-linejoin": "miter", "stroke-linecap": "butt", fill: "#000000", stroke: "#000000", opacity: 1, x: 0, y: 0, cx: 0, cy: 0, width: 0, height: 0, r: 0, rx: 0, ry: 0, offset: 0, "stop-opacity": 1, "stop-color": "#000000", "font-size": 16, "font-family": "Helvetica, Arial, sans-serif", "text-anchor": "start" } }, a3.Color = function(t4) {
      var e6, s4;
      this.r = 0, this.g = 0, this.b = 0, t4 && ("string" == typeof t4 ? a3.regex.isRgb.test(t4) ? (e6 = a3.regex.rgb.exec(t4.replace(a3.regex.whitespace, "")), this.r = parseInt(e6[1]), this.g = parseInt(e6[2]), this.b = parseInt(e6[3])) : a3.regex.isHex.test(t4) && (e6 = a3.regex.hex.exec(4 == (s4 = t4).length ? ["#", s4.substring(1, 2), s4.substring(1, 2), s4.substring(2, 3), s4.substring(2, 3), s4.substring(3, 4), s4.substring(3, 4)].join("") : s4), this.r = parseInt(e6[1], 16), this.g = parseInt(e6[2], 16), this.b = parseInt(e6[3], 16)) : "object" === i2(t4) && (this.r = t4.r, this.g = t4.g, this.b = t4.b));
    }, a3.extend(a3.Color, { toString: function() {
      return this.toHex();
    }, toHex: function() {
      return "#" + g3(this.r) + g3(this.g) + g3(this.b);
    }, toRgb: function() {
      return "rgb(" + [this.r, this.g, this.b].join() + ")";
    }, brightness: function() {
      return this.r / 255 * 0.3 + this.g / 255 * 0.59 + this.b / 255 * 0.11;
    }, morph: function(t4) {
      return this.destination = new a3.Color(t4), this;
    }, at: function(t4) {
      return this.destination ? (t4 = t4 < 0 ? 0 : t4 > 1 ? 1 : t4, new a3.Color({ r: ~~(this.r + (this.destination.r - this.r) * t4), g: ~~(this.g + (this.destination.g - this.g) * t4), b: ~~(this.b + (this.destination.b - this.b) * t4) })) : this;
    } }), a3.Color.test = function(t4) {
      return t4 += "", a3.regex.isHex.test(t4) || a3.regex.isRgb.test(t4);
    }, a3.Color.isRgb = function(t4) {
      return t4 && "number" == typeof t4.r && "number" == typeof t4.g && "number" == typeof t4.b;
    }, a3.Color.isColor = function(t4) {
      return a3.Color.isRgb(t4) || a3.Color.test(t4);
    }, a3.Array = function(t4, e6) {
      0 == (t4 = (t4 || []).valueOf()).length && e6 && (t4 = e6.valueOf()), this.value = this.parse(t4);
    }, a3.extend(a3.Array, { toString: function() {
      return this.value.join(" ");
    }, valueOf: function() {
      return this.value;
    }, parse: function(t4) {
      return t4 = t4.valueOf(), Array.isArray(t4) ? t4 : this.split(t4);
    } }), a3.PointArray = function(t4, e6) {
      a3.Array.call(this, t4, e6 || [[0, 0]]);
    }, a3.PointArray.prototype = new a3.Array(), a3.PointArray.prototype.constructor = a3.PointArray;
    for (var s3 = { M: function(t4, e6, i3) {
      return e6.x = i3.x = t4[0], e6.y = i3.y = t4[1], ["M", e6.x, e6.y];
    }, L: function(t4, e6) {
      return e6.x = t4[0], e6.y = t4[1], ["L", t4[0], t4[1]];
    }, H: function(t4, e6) {
      return e6.x = t4[0], ["H", t4[0]];
    }, V: function(t4, e6) {
      return e6.y = t4[0], ["V", t4[0]];
    }, C: function(t4, e6) {
      return e6.x = t4[4], e6.y = t4[5], ["C", t4[0], t4[1], t4[2], t4[3], t4[4], t4[5]];
    }, Q: function(t4, e6) {
      return e6.x = t4[2], e6.y = t4[3], ["Q", t4[0], t4[1], t4[2], t4[3]];
    }, S: function(t4, e6) {
      return e6.x = t4[2], e6.y = t4[3], ["S", t4[0], t4[1], t4[2], t4[3]];
    }, Z: function(t4, e6, i3) {
      return e6.x = i3.x, e6.y = i3.y, ["Z"];
    } }, r3 = "mlhvqtcsaz".split(""), o3 = 0, n3 = r3.length; o3 < n3; ++o3)
      s3[r3[o3]] = /* @__PURE__ */ function(t4) {
        return function(e6, i3, a4) {
          if ("H" == t4)
            e6[0] = e6[0] + i3.x;
          else if ("V" == t4)
            e6[0] = e6[0] + i3.y;
          else if ("A" == t4)
            e6[5] = e6[5] + i3.x, e6[6] = e6[6] + i3.y;
          else
            for (var r4 = 0, o4 = e6.length; r4 < o4; ++r4)
              e6[r4] = e6[r4] + (r4 % 2 ? i3.y : i3.x);
          if (s3 && "function" == typeof s3[t4])
            return s3[t4](e6, i3, a4);
        };
      }(r3[o3].toUpperCase());
    a3.PathArray = function(t4, e6) {
      a3.Array.call(this, t4, e6 || [["M", 0, 0]]);
    }, a3.PathArray.prototype = new a3.Array(), a3.PathArray.prototype.constructor = a3.PathArray, a3.extend(a3.PathArray, { toString: function() {
      return function(t4) {
        for (var e6 = 0, i3 = t4.length, a4 = ""; e6 < i3; e6++)
          a4 += t4[e6][0], null != t4[e6][1] && (a4 += t4[e6][1], null != t4[e6][2] && (a4 += " ", a4 += t4[e6][2], null != t4[e6][3] && (a4 += " ", a4 += t4[e6][3], a4 += " ", a4 += t4[e6][4], null != t4[e6][5] && (a4 += " ", a4 += t4[e6][5], a4 += " ", a4 += t4[e6][6], null != t4[e6][7] && (a4 += " ", a4 += t4[e6][7])))));
        return a4 + " ";
      }(this.value);
    }, move: function(t4, e6) {
      var i3 = this.bbox();
      return i3.x, i3.y, this;
    }, at: function(t4) {
      if (!this.destination)
        return this;
      for (var e6 = this.value, i3 = this.destination.value, s4 = [], r4 = new a3.PathArray(), o4 = 0, n4 = e6.length; o4 < n4; o4++) {
        s4[o4] = [e6[o4][0]];
        for (var l4 = 1, h4 = e6[o4].length; l4 < h4; l4++)
          s4[o4][l4] = e6[o4][l4] + (i3[o4][l4] - e6[o4][l4]) * t4;
        "A" === s4[o4][0] && (s4[o4][4] = +(0 != s4[o4][4]), s4[o4][5] = +(0 != s4[o4][5]));
      }
      return r4.value = s4, r4;
    }, parse: function(t4) {
      if (t4 instanceof a3.PathArray)
        return t4.valueOf();
      var e6, i3 = { M: 2, L: 2, H: 1, V: 1, C: 6, S: 4, Q: 4, T: 2, A: 7, Z: 0 };
      t4 = "string" == typeof t4 ? t4.replace(a3.regex.numbersWithDots, h3).replace(a3.regex.pathLetters, " $& ").replace(a3.regex.hyphen, "$1 -").trim().split(a3.regex.delimiter) : t4.reduce(function(t5, e7) {
        return [].concat.call(t5, e7);
      }, []);
      var r4 = [], o4 = new a3.Point(), n4 = new a3.Point(), l4 = 0, c4 = t4.length;
      do {
        a3.regex.isPathLetter.test(t4[l4]) ? (e6 = t4[l4], ++l4) : "M" == e6 ? e6 = "L" : "m" == e6 && (e6 = "l"), r4.push(s3[e6].call(null, t4.slice(l4, l4 += i3[e6.toUpperCase()]).map(parseFloat), o4, n4));
      } while (c4 > l4);
      return r4;
    }, bbox: function() {
      return a3.parser.draw || a3.prepare(), a3.parser.path.setAttribute("d", this.toString()), a3.parser.path.getBBox();
    } }), a3.Number = a3.invent({ create: function(t4, e6) {
      this.value = 0, this.unit = e6 || "", "number" == typeof t4 ? this.value = isNaN(t4) ? 0 : isFinite(t4) ? t4 : t4 < 0 ? -34e37 : 34e37 : "string" == typeof t4 ? (e6 = t4.match(a3.regex.numberAndUnit)) && (this.value = parseFloat(e6[1]), "%" == e6[5] ? this.value /= 100 : "s" == e6[5] && (this.value *= 1e3), this.unit = e6[5]) : t4 instanceof a3.Number && (this.value = t4.valueOf(), this.unit = t4.unit);
    }, extend: { toString: function() {
      return ("%" == this.unit ? ~~(1e8 * this.value) / 1e6 : "s" == this.unit ? this.value / 1e3 : this.value) + this.unit;
    }, toJSON: function() {
      return this.toString();
    }, valueOf: function() {
      return this.value;
    }, plus: function(t4) {
      return t4 = new a3.Number(t4), new a3.Number(this + t4, this.unit || t4.unit);
    }, minus: function(t4) {
      return t4 = new a3.Number(t4), new a3.Number(this - t4, this.unit || t4.unit);
    }, times: function(t4) {
      return t4 = new a3.Number(t4), new a3.Number(this * t4, this.unit || t4.unit);
    }, divide: function(t4) {
      return t4 = new a3.Number(t4), new a3.Number(this / t4, this.unit || t4.unit);
    }, to: function(t4) {
      var e6 = new a3.Number(this);
      return "string" == typeof t4 && (e6.unit = t4), e6;
    }, morph: function(t4) {
      return this.destination = new a3.Number(t4), t4.relative && (this.destination.value += this.value), this;
    }, at: function(t4) {
      return this.destination ? new a3.Number(this.destination).minus(this).times(t4).plus(this) : this;
    } } }), a3.Element = a3.invent({ create: function(t4) {
      this._stroke = a3.defaults.attrs.stroke, this._event = null, this.dom = {}, (this.node = t4) && (this.type = t4.nodeName, this.node.instance = this, this._stroke = t4.getAttribute("stroke") || this._stroke);
    }, extend: { x: function(t4) {
      return this.attr("x", t4);
    }, y: function(t4) {
      return this.attr("y", t4);
    }, cx: function(t4) {
      return null == t4 ? this.x() + this.width() / 2 : this.x(t4 - this.width() / 2);
    }, cy: function(t4) {
      return null == t4 ? this.y() + this.height() / 2 : this.y(t4 - this.height() / 2);
    }, move: function(t4, e6) {
      return this.x(t4).y(e6);
    }, center: function(t4, e6) {
      return this.cx(t4).cy(e6);
    }, width: function(t4) {
      return this.attr("width", t4);
    }, height: function(t4) {
      return this.attr("height", t4);
    }, size: function(t4, e6) {
      var i3 = u3(this, t4, e6);
      return this.width(new a3.Number(i3.width)).height(new a3.Number(i3.height));
    }, clone: function(t4) {
      this.writeDataToDom();
      var e6 = x3(this.node.cloneNode(true));
      return t4 ? t4.add(e6) : this.after(e6), e6;
    }, remove: function() {
      return this.parent() && this.parent().removeElement(this), this;
    }, replace: function(t4) {
      return this.after(t4).remove(), t4;
    }, addTo: function(t4) {
      return t4.put(this);
    }, putIn: function(t4) {
      return t4.add(this);
    }, id: function(t4) {
      return this.attr("id", t4);
    }, show: function() {
      return this.style("display", "");
    }, hide: function() {
      return this.style("display", "none");
    }, visible: function() {
      return "none" != this.style("display");
    }, toString: function() {
      return this.attr("id");
    }, classes: function() {
      var t4 = this.attr("class");
      return null == t4 ? [] : t4.trim().split(a3.regex.delimiter);
    }, hasClass: function(t4) {
      return -1 != this.classes().indexOf(t4);
    }, addClass: function(t4) {
      if (!this.hasClass(t4)) {
        var e6 = this.classes();
        e6.push(t4), this.attr("class", e6.join(" "));
      }
      return this;
    }, removeClass: function(t4) {
      return this.hasClass(t4) && this.attr("class", this.classes().filter(function(e6) {
        return e6 != t4;
      }).join(" ")), this;
    }, toggleClass: function(t4) {
      return this.hasClass(t4) ? this.removeClass(t4) : this.addClass(t4);
    }, reference: function(t4) {
      return a3.get(this.attr(t4));
    }, parent: function(e6) {
      var i3 = this;
      if (!i3.node.parentNode)
        return null;
      if (i3 = a3.adopt(i3.node.parentNode), !e6)
        return i3;
      for (; i3 && i3.node instanceof t3.SVGElement; ) {
        if ("string" == typeof e6 ? i3.matches(e6) : i3 instanceof e6)
          return i3;
        if (!i3.node.parentNode || "#document" == i3.node.parentNode.nodeName)
          return null;
        i3 = a3.adopt(i3.node.parentNode);
      }
    }, doc: function() {
      return this instanceof a3.Doc ? this : this.parent(a3.Doc);
    }, parents: function(t4) {
      var e6 = [], i3 = this;
      do {
        if (!(i3 = i3.parent(t4)) || !i3.node)
          break;
        e6.push(i3);
      } while (i3.parent);
      return e6;
    }, matches: function(t4) {
      return function(t5, e6) {
        return (t5.matches || t5.matchesSelector || t5.msMatchesSelector || t5.mozMatchesSelector || t5.webkitMatchesSelector || t5.oMatchesSelector).call(t5, e6);
      }(this.node, t4);
    }, native: function() {
      return this.node;
    }, svg: function(t4) {
      var i3 = e4.createElement("svg");
      if (!(t4 && this instanceof a3.Parent))
        return i3.appendChild(t4 = e4.createElement("svg")), this.writeDataToDom(), t4.appendChild(this.node.cloneNode(true)), i3.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "");
      i3.innerHTML = "<svg>" + t4.replace(/\n/, "").replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") + "</svg>";
      for (var s4 = 0, r4 = i3.firstChild.childNodes.length; s4 < r4; s4++)
        this.node.appendChild(i3.firstChild.firstChild);
      return this;
    }, writeDataToDom: function() {
      return (this.each || this.lines) && (this.each ? this : this.lines()).each(function() {
        this.writeDataToDom();
      }), this.node.removeAttribute("svgjs:data"), Object.keys(this.dom).length && this.node.setAttribute("svgjs:data", JSON.stringify(this.dom)), this;
    }, setData: function(t4) {
      return this.dom = t4, this;
    }, is: function(t4) {
      return function(t5, e6) {
        return t5 instanceof e6;
      }(this, t4);
    } } }), a3.easing = { "-": function(t4) {
      return t4;
    }, "<>": function(t4) {
      return -Math.cos(t4 * Math.PI) / 2 + 0.5;
    }, ">": function(t4) {
      return Math.sin(t4 * Math.PI / 2);
    }, "<": function(t4) {
      return 1 - Math.cos(t4 * Math.PI / 2);
    } }, a3.morph = function(t4) {
      return function(e6, i3) {
        return new a3.MorphObj(e6, i3).at(t4);
      };
    }, a3.Situation = a3.invent({ create: function(t4) {
      this.init = false, this.reversed = false, this.reversing = false, this.duration = new a3.Number(t4.duration).valueOf(), this.delay = new a3.Number(t4.delay).valueOf(), this.start = +/* @__PURE__ */ new Date() + this.delay, this.finish = this.start + this.duration, this.ease = t4.ease, this.loop = 0, this.loops = false, this.animations = {}, this.attrs = {}, this.styles = {}, this.transforms = [], this.once = {};
    } }), a3.FX = a3.invent({ create: function(t4) {
      this._target = t4, this.situations = [], this.active = false, this.situation = null, this.paused = false, this.lastPos = 0, this.pos = 0, this.absPos = 0, this._speed = 1;
    }, extend: { animate: function(t4, e6, s4) {
      "object" === i2(t4) && (e6 = t4.ease, s4 = t4.delay, t4 = t4.duration);
      var r4 = new a3.Situation({ duration: t4 || 1e3, delay: s4 || 0, ease: a3.easing[e6 || "-"] || e6 });
      return this.queue(r4), this;
    }, target: function(t4) {
      return t4 && t4 instanceof a3.Element ? (this._target = t4, this) : this._target;
    }, timeToAbsPos: function(t4) {
      return (t4 - this.situation.start) / (this.situation.duration / this._speed);
    }, absPosToTime: function(t4) {
      return this.situation.duration / this._speed * t4 + this.situation.start;
    }, startAnimFrame: function() {
      this.stopAnimFrame(), this.animationFrame = t3.requestAnimationFrame(function() {
        this.step();
      }.bind(this));
    }, stopAnimFrame: function() {
      t3.cancelAnimationFrame(this.animationFrame);
    }, start: function() {
      return !this.active && this.situation && (this.active = true, this.startCurrent()), this;
    }, startCurrent: function() {
      return this.situation.start = +/* @__PURE__ */ new Date() + this.situation.delay / this._speed, this.situation.finish = this.situation.start + this.situation.duration / this._speed, this.initAnimations().step();
    }, queue: function(t4) {
      return ("function" == typeof t4 || t4 instanceof a3.Situation) && this.situations.push(t4), this.situation || (this.situation = this.situations.shift()), this;
    }, dequeue: function() {
      return this.stop(), this.situation = this.situations.shift(), this.situation && (this.situation instanceof a3.Situation ? this.start() : this.situation.call(this)), this;
    }, initAnimations: function() {
      var t4, e6 = this.situation;
      if (e6.init)
        return this;
      for (var i3 in e6.animations) {
        t4 = this.target()[i3](), Array.isArray(t4) || (t4 = [t4]), Array.isArray(e6.animations[i3]) || (e6.animations[i3] = [e6.animations[i3]]);
        for (var s4 = t4.length; s4--; )
          e6.animations[i3][s4] instanceof a3.Number && (t4[s4] = new a3.Number(t4[s4])), e6.animations[i3][s4] = t4[s4].morph(e6.animations[i3][s4]);
      }
      for (var i3 in e6.attrs)
        e6.attrs[i3] = new a3.MorphObj(this.target().attr(i3), e6.attrs[i3]);
      for (var i3 in e6.styles)
        e6.styles[i3] = new a3.MorphObj(this.target().style(i3), e6.styles[i3]);
      return e6.initialTransformation = this.target().matrixify(), e6.init = true, this;
    }, clearQueue: function() {
      return this.situations = [], this;
    }, clearCurrent: function() {
      return this.situation = null, this;
    }, stop: function(t4, e6) {
      var i3 = this.active;
      return this.active = false, e6 && this.clearQueue(), t4 && this.situation && (!i3 && this.startCurrent(), this.atEnd()), this.stopAnimFrame(), this.clearCurrent();
    }, after: function(t4) {
      var e6 = this.last();
      return this.target().on("finished.fx", function i3(a4) {
        a4.detail.situation == e6 && (t4.call(this, e6), this.off("finished.fx", i3));
      }), this._callStart();
    }, during: function(t4) {
      var e6 = this.last(), i3 = function(i4) {
        i4.detail.situation == e6 && t4.call(this, i4.detail.pos, a3.morph(i4.detail.pos), i4.detail.eased, e6);
      };
      return this.target().off("during.fx", i3).on("during.fx", i3), this.after(function() {
        this.off("during.fx", i3);
      }), this._callStart();
    }, afterAll: function(t4) {
      var e6 = function e7(i3) {
        t4.call(this), this.off("allfinished.fx", e7);
      };
      return this.target().off("allfinished.fx", e6).on("allfinished.fx", e6), this._callStart();
    }, last: function() {
      return this.situations.length ? this.situations[this.situations.length - 1] : this.situation;
    }, add: function(t4, e6, i3) {
      return this.last()[i3 || "animations"][t4] = e6, this._callStart();
    }, step: function(t4) {
      var e6, i3, a4;
      t4 || (this.absPos = this.timeToAbsPos(+/* @__PURE__ */ new Date())), false !== this.situation.loops ? (e6 = Math.max(this.absPos, 0), i3 = Math.floor(e6), true === this.situation.loops || i3 < this.situation.loops ? (this.pos = e6 - i3, a4 = this.situation.loop, this.situation.loop = i3) : (this.absPos = this.situation.loops, this.pos = 1, a4 = this.situation.loop - 1, this.situation.loop = this.situation.loops), this.situation.reversing && (this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - a4) % 2))) : (this.absPos = Math.min(this.absPos, 1), this.pos = this.absPos), this.pos < 0 && (this.pos = 0), this.situation.reversed && (this.pos = 1 - this.pos);
      var s4 = this.situation.ease(this.pos);
      for (var r4 in this.situation.once)
        r4 > this.lastPos && r4 <= s4 && (this.situation.once[r4].call(this.target(), this.pos, s4), delete this.situation.once[r4]);
      return this.active && this.target().fire("during", { pos: this.pos, eased: s4, fx: this, situation: this.situation }), this.situation ? (this.eachAt(), 1 == this.pos && !this.situation.reversed || this.situation.reversed && 0 == this.pos ? (this.stopAnimFrame(), this.target().fire("finished", { fx: this, situation: this.situation }), this.situations.length || (this.target().fire("allfinished"), this.situations.length || (this.target().off(".fx"), this.active = false)), this.active ? this.dequeue() : this.clearCurrent()) : !this.paused && this.active && this.startAnimFrame(), this.lastPos = s4, this) : this;
    }, eachAt: function() {
      var t4, e6 = this, i3 = this.target(), s4 = this.situation;
      for (var r4 in s4.animations)
        t4 = [].concat(s4.animations[r4]).map(function(t5) {
          return "string" != typeof t5 && t5.at ? t5.at(s4.ease(e6.pos), e6.pos) : t5;
        }), i3[r4].apply(i3, t4);
      for (var r4 in s4.attrs)
        t4 = [r4].concat(s4.attrs[r4]).map(function(t5) {
          return "string" != typeof t5 && t5.at ? t5.at(s4.ease(e6.pos), e6.pos) : t5;
        }), i3.attr.apply(i3, t4);
      for (var r4 in s4.styles)
        t4 = [r4].concat(s4.styles[r4]).map(function(t5) {
          return "string" != typeof t5 && t5.at ? t5.at(s4.ease(e6.pos), e6.pos) : t5;
        }), i3.style.apply(i3, t4);
      if (s4.transforms.length) {
        t4 = s4.initialTransformation, r4 = 0;
        for (var o4 = s4.transforms.length; r4 < o4; r4++) {
          var n4 = s4.transforms[r4];
          n4 instanceof a3.Matrix ? t4 = n4.relative ? t4.multiply(new a3.Matrix().morph(n4).at(s4.ease(this.pos))) : t4.morph(n4).at(s4.ease(this.pos)) : (n4.relative || n4.undo(t4.extract()), t4 = t4.multiply(n4.at(s4.ease(this.pos))));
        }
        i3.matrix(t4);
      }
      return this;
    }, once: function(t4, e6, i3) {
      var a4 = this.last();
      return i3 || (t4 = a4.ease(t4)), a4.once[t4] = e6, this;
    }, _callStart: function() {
      return setTimeout(function() {
        this.start();
      }.bind(this), 0), this;
    } }, parent: a3.Element, construct: { animate: function(t4, e6, i3) {
      return (this.fx || (this.fx = new a3.FX(this))).animate(t4, e6, i3);
    }, delay: function(t4) {
      return (this.fx || (this.fx = new a3.FX(this))).delay(t4);
    }, stop: function(t4, e6) {
      return this.fx && this.fx.stop(t4, e6), this;
    }, finish: function() {
      return this.fx && this.fx.finish(), this;
    } } }), a3.MorphObj = a3.invent({ create: function(t4, e6) {
      return a3.Color.isColor(e6) ? new a3.Color(t4).morph(e6) : a3.regex.delimiter.test(t4) ? a3.regex.pathLetters.test(t4) ? new a3.PathArray(t4).morph(e6) : new a3.Array(t4).morph(e6) : a3.regex.numberAndUnit.test(e6) ? new a3.Number(t4).morph(e6) : (this.value = t4, void (this.destination = e6));
    }, extend: { at: function(t4, e6) {
      return e6 < 1 ? this.value : this.destination;
    }, valueOf: function() {
      return this.value;
    } } }), a3.extend(a3.FX, { attr: function(t4, e6, a4) {
      if ("object" === i2(t4))
        for (var s4 in t4)
          this.attr(s4, t4[s4]);
      else
        this.add(t4, e6, "attrs");
      return this;
    }, plot: function(t4, e6, i3, a4) {
      return 4 == arguments.length ? this.plot([t4, e6, i3, a4]) : this.add("plot", new (this.target()).morphArray(t4));
    } }), a3.Box = a3.invent({ create: function(t4, e6, s4, r4) {
      if (!("object" !== i2(t4) || t4 instanceof a3.Element))
        return a3.Box.call(this, null != t4.left ? t4.left : t4.x, null != t4.top ? t4.top : t4.y, t4.width, t4.height);
      var o4;
      4 == arguments.length && (this.x = t4, this.y = e6, this.width = s4, this.height = r4), null == (o4 = this).x && (o4.x = 0, o4.y = 0, o4.width = 0, o4.height = 0), o4.w = o4.width, o4.h = o4.height, o4.x2 = o4.x + o4.width, o4.y2 = o4.y + o4.height, o4.cx = o4.x + o4.width / 2, o4.cy = o4.y + o4.height / 2;
    } }), a3.BBox = a3.invent({ create: function(t4) {
      if (a3.Box.apply(this, [].slice.call(arguments)), t4 instanceof a3.Element) {
        var i3;
        try {
          if (!e4.documentElement.contains) {
            for (var s4 = t4.node; s4.parentNode; )
              s4 = s4.parentNode;
            if (s4 != e4)
              throw new Error("Element not in the dom");
          }
          i3 = t4.node.getBBox();
        } catch (e6) {
          if (t4 instanceof a3.Shape) {
            a3.parser.draw || a3.prepare();
            var r4 = t4.clone(a3.parser.draw.instance).show();
            r4 && r4.node && "function" == typeof r4.node.getBBox && (i3 = r4.node.getBBox()), r4 && "function" == typeof r4.remove && r4.remove();
          } else
            i3 = { x: t4.node.clientLeft, y: t4.node.clientTop, width: t4.node.clientWidth, height: t4.node.clientHeight };
        }
        a3.Box.call(this, i3);
      }
    }, inherit: a3.Box, parent: a3.Element, construct: { bbox: function() {
      return new a3.BBox(this);
    } } }), a3.BBox.prototype.constructor = a3.BBox, a3.Matrix = a3.invent({ create: function(t4) {
      var e6 = f3([1, 0, 0, 1, 0, 0]);
      t4 = null === t4 ? e6 : t4 instanceof a3.Element ? t4.matrixify() : "string" == typeof t4 ? f3(t4.split(a3.regex.delimiter).map(parseFloat)) : 6 == arguments.length ? f3([].slice.call(arguments)) : Array.isArray(t4) ? f3(t4) : t4 && "object" === i2(t4) ? t4 : e6;
      for (var s4 = v3.length - 1; s4 >= 0; --s4)
        this[v3[s4]] = null != t4[v3[s4]] ? t4[v3[s4]] : e6[v3[s4]];
    }, extend: { extract: function() {
      var t4 = p3(this, 0, 1);
      p3(this, 1, 0);
      var e6 = 180 / Math.PI * Math.atan2(t4.y, t4.x) - 90;
      return { x: this.e, y: this.f, transformedX: (this.e * Math.cos(e6 * Math.PI / 180) + this.f * Math.sin(e6 * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b), transformedY: (this.f * Math.cos(e6 * Math.PI / 180) + this.e * Math.sin(-e6 * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d), rotation: e6, a: this.a, b: this.b, c: this.c, d: this.d, e: this.e, f: this.f, matrix: new a3.Matrix(this) };
    }, clone: function() {
      return new a3.Matrix(this);
    }, morph: function(t4) {
      return this.destination = new a3.Matrix(t4), this;
    }, multiply: function(t4) {
      return new a3.Matrix(this.native().multiply(function(t5) {
        return t5 instanceof a3.Matrix || (t5 = new a3.Matrix(t5)), t5;
      }(t4).native()));
    }, inverse: function() {
      return new a3.Matrix(this.native().inverse());
    }, translate: function(t4, e6) {
      return new a3.Matrix(this.native().translate(t4 || 0, e6 || 0));
    }, native: function() {
      for (var t4 = a3.parser.native.createSVGMatrix(), e6 = v3.length - 1; e6 >= 0; e6--)
        t4[v3[e6]] = this[v3[e6]];
      return t4;
    }, toString: function() {
      return "matrix(" + b3(this.a) + "," + b3(this.b) + "," + b3(this.c) + "," + b3(this.d) + "," + b3(this.e) + "," + b3(this.f) + ")";
    } }, parent: a3.Element, construct: { ctm: function() {
      return new a3.Matrix(this.node.getCTM());
    }, screenCTM: function() {
      if (this instanceof a3.Nested) {
        var t4 = this.rect(1, 1), e6 = t4.node.getScreenCTM();
        return t4.remove(), new a3.Matrix(e6);
      }
      return new a3.Matrix(this.node.getScreenCTM());
    } } }), a3.Point = a3.invent({ create: function(t4, e6) {
      var a4;
      a4 = Array.isArray(t4) ? { x: t4[0], y: t4[1] } : "object" === i2(t4) ? { x: t4.x, y: t4.y } : null != t4 ? { x: t4, y: null != e6 ? e6 : t4 } : { x: 0, y: 0 }, this.x = a4.x, this.y = a4.y;
    }, extend: { clone: function() {
      return new a3.Point(this);
    }, morph: function(t4, e6) {
      return this.destination = new a3.Point(t4, e6), this;
    } } }), a3.extend(a3.Element, { point: function(t4, e6) {
      return new a3.Point(t4, e6).transform(this.screenCTM().inverse());
    } }), a3.extend(a3.Element, { attr: function(t4, e6, s4) {
      if (null == t4) {
        for (t4 = {}, s4 = (e6 = this.node.attributes).length - 1; s4 >= 0; s4--)
          t4[e6[s4].nodeName] = a3.regex.isNumber.test(e6[s4].nodeValue) ? parseFloat(e6[s4].nodeValue) : e6[s4].nodeValue;
        return t4;
      }
      if ("object" === i2(t4))
        for (var r4 in t4)
          this.attr(r4, t4[r4]);
      else if (null === e6)
        this.node.removeAttribute(t4);
      else {
        if (null == e6)
          return null == (e6 = this.node.getAttribute(t4)) ? a3.defaults.attrs[t4] : a3.regex.isNumber.test(e6) ? parseFloat(e6) : e6;
        "stroke-width" == t4 ? this.attr("stroke", parseFloat(e6) > 0 ? this._stroke : null) : "stroke" == t4 && (this._stroke = e6), "fill" != t4 && "stroke" != t4 || (a3.regex.isImage.test(e6) && (e6 = this.doc().defs().image(e6, 0, 0)), e6 instanceof a3.Image && (e6 = this.doc().defs().pattern(0, 0, function() {
          this.add(e6);
        }))), "number" == typeof e6 ? e6 = new a3.Number(e6) : a3.Color.isColor(e6) ? e6 = new a3.Color(e6) : Array.isArray(e6) && (e6 = new a3.Array(e6)), "leading" == t4 ? this.leading && this.leading(e6) : "string" == typeof s4 ? this.node.setAttributeNS(s4, t4, e6.toString()) : this.node.setAttribute(t4, e6.toString()), !this.rebuild || "font-size" != t4 && "x" != t4 || this.rebuild(t4, e6);
      }
      return this;
    } }), a3.extend(a3.Element, { transform: function(t4, e6) {
      var s4;
      return "object" !== i2(t4) ? (s4 = new a3.Matrix(this).extract(), "string" == typeof t4 ? s4[t4] : s4) : (s4 = new a3.Matrix(this), e6 = !!e6 || !!t4.relative, null != t4.a && (s4 = e6 ? s4.multiply(new a3.Matrix(t4)) : new a3.Matrix(t4)), this.attr("transform", s4));
    } }), a3.extend(a3.Element, { untransform: function() {
      return this.attr("transform", null);
    }, matrixify: function() {
      return (this.attr("transform") || "").split(a3.regex.transforms).slice(0, -1).map(function(t4) {
        var e6 = t4.trim().split("(");
        return [e6[0], e6[1].split(a3.regex.delimiter).map(function(t5) {
          return parseFloat(t5);
        })];
      }).reduce(function(t4, e6) {
        return "matrix" == e6[0] ? t4.multiply(f3(e6[1])) : t4[e6[0]].apply(t4, e6[1]);
      }, new a3.Matrix());
    }, toParent: function(t4) {
      if (this == t4)
        return this;
      var e6 = this.screenCTM(), i3 = t4.screenCTM().inverse();
      return this.addTo(t4).untransform().transform(i3.multiply(e6)), this;
    }, toDoc: function() {
      return this.toParent(this.doc());
    } }), a3.Transformation = a3.invent({ create: function(t4, e6) {
      if (arguments.length > 1 && "boolean" != typeof e6)
        return this.constructor.call(this, [].slice.call(arguments));
      if (Array.isArray(t4))
        for (var a4 = 0, s4 = this.arguments.length; a4 < s4; ++a4)
          this[this.arguments[a4]] = t4[a4];
      else if (t4 && "object" === i2(t4))
        for (a4 = 0, s4 = this.arguments.length; a4 < s4; ++a4)
          this[this.arguments[a4]] = t4[this.arguments[a4]];
      this.inversed = false, true === e6 && (this.inversed = true);
    } }), a3.Translate = a3.invent({ parent: a3.Matrix, inherit: a3.Transformation, create: function(t4, e6) {
      this.constructor.apply(this, [].slice.call(arguments));
    }, extend: { arguments: ["transformedX", "transformedY"], method: "translate" } }), a3.extend(a3.Element, { style: function(t4, e6) {
      if (0 == arguments.length)
        return this.node.style.cssText || "";
      if (arguments.length < 2)
        if ("object" === i2(t4))
          for (var s4 in t4)
            this.style(s4, t4[s4]);
        else {
          if (!a3.regex.isCss.test(t4))
            return this.node.style[c3(t4)];
          for (t4 = t4.split(/\s*;\s*/).filter(function(t5) {
            return !!t5;
          }).map(function(t5) {
            return t5.split(/\s*:\s*/);
          }); e6 = t4.pop(); )
            this.style(e6[0], e6[1]);
        }
      else
        this.node.style[c3(t4)] = null === e6 || a3.regex.isBlank.test(e6) ? "" : e6;
      return this;
    } }), a3.Parent = a3.invent({ create: function(t4) {
      this.constructor.call(this, t4);
    }, inherit: a3.Element, extend: { children: function() {
      return a3.utils.map(a3.utils.filterSVGElements(this.node.childNodes), function(t4) {
        return a3.adopt(t4);
      });
    }, add: function(t4, e6) {
      return null == e6 ? this.node.appendChild(t4.node) : t4.node != this.node.childNodes[e6] && this.node.insertBefore(t4.node, this.node.childNodes[e6]), this;
    }, put: function(t4, e6) {
      return this.add(t4, e6), t4;
    }, has: function(t4) {
      return this.index(t4) >= 0;
    }, index: function(t4) {
      return [].slice.call(this.node.childNodes).indexOf(t4.node);
    }, get: function(t4) {
      return a3.adopt(this.node.childNodes[t4]);
    }, first: function() {
      return this.get(0);
    }, last: function() {
      return this.get(this.node.childNodes.length - 1);
    }, each: function(t4, e6) {
      for (var i3 = this.children(), s4 = 0, r4 = i3.length; s4 < r4; s4++)
        i3[s4] instanceof a3.Element && t4.apply(i3[s4], [s4, i3]), e6 && i3[s4] instanceof a3.Container && i3[s4].each(t4, e6);
      return this;
    }, removeElement: function(t4) {
      return this.node.removeChild(t4.node), this;
    }, clear: function() {
      for (; this.node.hasChildNodes(); )
        this.node.removeChild(this.node.lastChild);
      return delete this._defs, this;
    }, defs: function() {
      return this.doc().defs();
    } } }), a3.extend(a3.Parent, { ungroup: function(t4, e6) {
      return 0 === e6 || this instanceof a3.Defs || this.node == a3.parser.draw || (t4 = t4 || (this instanceof a3.Doc ? this : this.parent(a3.Parent)), e6 = e6 || 1 / 0, this.each(function() {
        return this instanceof a3.Defs ? this : this instanceof a3.Parent ? this.ungroup(t4, e6 - 1) : this.toParent(t4);
      }), this.node.firstChild || this.remove()), this;
    }, flatten: function(t4, e6) {
      return this.ungroup(t4, e6);
    } }), a3.Container = a3.invent({ create: function(t4) {
      this.constructor.call(this, t4);
    }, inherit: a3.Parent }), a3.ViewBox = a3.invent({ parent: a3.Container, construct: {} }), ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout", "mousemove", "touchstart", "touchmove", "touchleave", "touchend", "touchcancel"].forEach(function(t4) {
      a3.Element.prototype[t4] = function(e6) {
        return a3.on(this.node, t4, e6), this;
      };
    }), a3.listeners = [], a3.handlerMap = [], a3.listenerId = 0, a3.on = function(t4, e6, i3, s4, r4) {
      var o4 = i3.bind(s4 || t4.instance || t4), n4 = (a3.handlerMap.indexOf(t4) + 1 || a3.handlerMap.push(t4)) - 1, l4 = e6.split(".")[0], h4 = e6.split(".")[1] || "*";
      a3.listeners[n4] = a3.listeners[n4] || {}, a3.listeners[n4][l4] = a3.listeners[n4][l4] || {}, a3.listeners[n4][l4][h4] = a3.listeners[n4][l4][h4] || {}, i3._svgjsListenerId || (i3._svgjsListenerId = ++a3.listenerId), a3.listeners[n4][l4][h4][i3._svgjsListenerId] = o4, t4.addEventListener(l4, o4, r4 || { passive: false });
    }, a3.off = function(t4, e6, i3) {
      var s4 = a3.handlerMap.indexOf(t4), r4 = e6 && e6.split(".")[0], o4 = e6 && e6.split(".")[1], n4 = "";
      if (-1 != s4)
        if (i3) {
          if ("function" == typeof i3 && (i3 = i3._svgjsListenerId), !i3)
            return;
          a3.listeners[s4][r4] && a3.listeners[s4][r4][o4 || "*"] && (t4.removeEventListener(r4, a3.listeners[s4][r4][o4 || "*"][i3], false), delete a3.listeners[s4][r4][o4 || "*"][i3]);
        } else if (o4 && r4) {
          if (a3.listeners[s4][r4] && a3.listeners[s4][r4][o4]) {
            for (var l4 in a3.listeners[s4][r4][o4])
              a3.off(t4, [r4, o4].join("."), l4);
            delete a3.listeners[s4][r4][o4];
          }
        } else if (o4)
          for (var h4 in a3.listeners[s4])
            for (var n4 in a3.listeners[s4][h4])
              o4 === n4 && a3.off(t4, [h4, o4].join("."));
        else if (r4) {
          if (a3.listeners[s4][r4]) {
            for (var n4 in a3.listeners[s4][r4])
              a3.off(t4, [r4, n4].join("."));
            delete a3.listeners[s4][r4];
          }
        } else {
          for (var h4 in a3.listeners[s4])
            a3.off(t4, h4);
          delete a3.listeners[s4], delete a3.handlerMap[s4];
        }
    }, a3.extend(a3.Element, { on: function(t4, e6, i3, s4) {
      return a3.on(this.node, t4, e6, i3, s4), this;
    }, off: function(t4, e6) {
      return a3.off(this.node, t4, e6), this;
    }, fire: function(e6, i3) {
      return e6 instanceof t3.Event ? this.node.dispatchEvent(e6) : this.node.dispatchEvent(e6 = new a3.CustomEvent(e6, { detail: i3, cancelable: true })), this._event = e6, this;
    }, event: function() {
      return this._event;
    } }), a3.Defs = a3.invent({ create: "defs", inherit: a3.Container }), a3.G = a3.invent({ create: "g", inherit: a3.Container, extend: { x: function(t4) {
      return null == t4 ? this.transform("x") : this.transform({ x: t4 - this.x() }, true);
    } }, construct: { group: function() {
      return this.put(new a3.G());
    } } }), a3.Doc = a3.invent({ create: function(t4) {
      t4 && ("svg" == (t4 = "string" == typeof t4 ? e4.getElementById(t4) : t4).nodeName ? this.constructor.call(this, t4) : (this.constructor.call(this, a3.create("svg")), t4.appendChild(this.node), this.size("100%", "100%")), this.namespace().defs());
    }, inherit: a3.Container, extend: { namespace: function() {
      return this.attr({ xmlns: a3.ns, version: "1.1" }).attr("xmlns:xlink", a3.xlink, a3.xmlns).attr("xmlns:svgjs", a3.svgjs, a3.xmlns);
    }, defs: function() {
      var t4;
      return this._defs || ((t4 = this.node.getElementsByTagName("defs")[0]) ? this._defs = a3.adopt(t4) : this._defs = new a3.Defs(), this.node.appendChild(this._defs.node)), this._defs;
    }, parent: function() {
      return this.node.parentNode && "#document" != this.node.parentNode.nodeName ? this.node.parentNode : null;
    }, remove: function() {
      return this.parent() && this.parent().removeChild(this.node), this;
    }, clear: function() {
      for (; this.node.hasChildNodes(); )
        this.node.removeChild(this.node.lastChild);
      return delete this._defs, a3.parser.draw && !a3.parser.draw.parentNode && this.node.appendChild(a3.parser.draw), this;
    }, clone: function(t4) {
      this.writeDataToDom();
      var e6 = this.node, i3 = x3(e6.cloneNode(true));
      return t4 ? (t4.node || t4).appendChild(i3.node) : e6.parentNode.insertBefore(i3.node, e6.nextSibling), i3;
    } } }), a3.extend(a3.Element, {}), a3.Gradient = a3.invent({ create: function(t4) {
      this.constructor.call(this, a3.create(t4 + "Gradient")), this.type = t4;
    }, inherit: a3.Container, extend: { at: function(t4, e6, i3) {
      return this.put(new a3.Stop()).update(t4, e6, i3);
    }, update: function(t4) {
      return this.clear(), "function" == typeof t4 && t4.call(this, this), this;
    }, fill: function() {
      return "url(#" + this.id() + ")";
    }, toString: function() {
      return this.fill();
    }, attr: function(t4, e6, i3) {
      return "transform" == t4 && (t4 = "gradientTransform"), a3.Container.prototype.attr.call(this, t4, e6, i3);
    } }, construct: { gradient: function(t4, e6) {
      return this.defs().gradient(t4, e6);
    } } }), a3.extend(a3.Gradient, a3.FX, { from: function(t4, e6) {
      return "radial" == (this._target || this).type ? this.attr({ fx: new a3.Number(t4), fy: new a3.Number(e6) }) : this.attr({ x1: new a3.Number(t4), y1: new a3.Number(e6) });
    }, to: function(t4, e6) {
      return "radial" == (this._target || this).type ? this.attr({ cx: new a3.Number(t4), cy: new a3.Number(e6) }) : this.attr({ x2: new a3.Number(t4), y2: new a3.Number(e6) });
    } }), a3.extend(a3.Defs, { gradient: function(t4, e6) {
      return this.put(new a3.Gradient(t4)).update(e6);
    } }), a3.Stop = a3.invent({ create: "stop", inherit: a3.Element, extend: { update: function(t4) {
      return ("number" == typeof t4 || t4 instanceof a3.Number) && (t4 = { offset: arguments[0], color: arguments[1], opacity: arguments[2] }), null != t4.opacity && this.attr("stop-opacity", t4.opacity), null != t4.color && this.attr("stop-color", t4.color), null != t4.offset && this.attr("offset", new a3.Number(t4.offset)), this;
    } } }), a3.Pattern = a3.invent({ create: "pattern", inherit: a3.Container, extend: { fill: function() {
      return "url(#" + this.id() + ")";
    }, update: function(t4) {
      return this.clear(), "function" == typeof t4 && t4.call(this, this), this;
    }, toString: function() {
      return this.fill();
    }, attr: function(t4, e6, i3) {
      return "transform" == t4 && (t4 = "patternTransform"), a3.Container.prototype.attr.call(this, t4, e6, i3);
    } }, construct: { pattern: function(t4, e6, i3) {
      return this.defs().pattern(t4, e6, i3);
    } } }), a3.extend(a3.Defs, { pattern: function(t4, e6, i3) {
      return this.put(new a3.Pattern()).update(i3).attr({ x: 0, y: 0, width: t4, height: e6, patternUnits: "userSpaceOnUse" });
    } }), a3.Shape = a3.invent({ create: function(t4) {
      this.constructor.call(this, t4);
    }, inherit: a3.Element }), a3.Symbol = a3.invent({ create: "symbol", inherit: a3.Container, construct: { symbol: function() {
      return this.put(new a3.Symbol());
    } } }), a3.Use = a3.invent({ create: "use", inherit: a3.Shape, extend: { element: function(t4, e6) {
      return this.attr("href", (e6 || "") + "#" + t4, a3.xlink);
    } }, construct: { use: function(t4, e6) {
      return this.put(new a3.Use()).element(t4, e6);
    } } }), a3.Rect = a3.invent({ create: "rect", inherit: a3.Shape, construct: { rect: function(t4, e6) {
      return this.put(new a3.Rect()).size(t4, e6);
    } } }), a3.Circle = a3.invent({ create: "circle", inherit: a3.Shape, construct: { circle: function(t4) {
      return this.put(new a3.Circle()).rx(new a3.Number(t4).divide(2)).move(0, 0);
    } } }), a3.extend(a3.Circle, a3.FX, { rx: function(t4) {
      return this.attr("r", t4);
    }, ry: function(t4) {
      return this.rx(t4);
    } }), a3.Ellipse = a3.invent({ create: "ellipse", inherit: a3.Shape, construct: { ellipse: function(t4, e6) {
      return this.put(new a3.Ellipse()).size(t4, e6).move(0, 0);
    } } }), a3.extend(a3.Ellipse, a3.Rect, a3.FX, { rx: function(t4) {
      return this.attr("rx", t4);
    }, ry: function(t4) {
      return this.attr("ry", t4);
    } }), a3.extend(a3.Circle, a3.Ellipse, { x: function(t4) {
      return null == t4 ? this.cx() - this.rx() : this.cx(t4 + this.rx());
    }, y: function(t4) {
      return null == t4 ? this.cy() - this.ry() : this.cy(t4 + this.ry());
    }, cx: function(t4) {
      return null == t4 ? this.attr("cx") : this.attr("cx", t4);
    }, cy: function(t4) {
      return null == t4 ? this.attr("cy") : this.attr("cy", t4);
    }, width: function(t4) {
      return null == t4 ? 2 * this.rx() : this.rx(new a3.Number(t4).divide(2));
    }, height: function(t4) {
      return null == t4 ? 2 * this.ry() : this.ry(new a3.Number(t4).divide(2));
    }, size: function(t4, e6) {
      var i3 = u3(this, t4, e6);
      return this.rx(new a3.Number(i3.width).divide(2)).ry(new a3.Number(i3.height).divide(2));
    } }), a3.Line = a3.invent({ create: "line", inherit: a3.Shape, extend: { array: function() {
      return new a3.PointArray([[this.attr("x1"), this.attr("y1")], [this.attr("x2"), this.attr("y2")]]);
    }, plot: function(t4, e6, i3, s4) {
      return null == t4 ? this.array() : (t4 = void 0 !== e6 ? { x1: t4, y1: e6, x2: i3, y2: s4 } : new a3.PointArray(t4).toLine(), this.attr(t4));
    }, move: function(t4, e6) {
      return this.attr(this.array().move(t4, e6).toLine());
    }, size: function(t4, e6) {
      var i3 = u3(this, t4, e6);
      return this.attr(this.array().size(i3.width, i3.height).toLine());
    } }, construct: { line: function(t4, e6, i3, s4) {
      return a3.Line.prototype.plot.apply(this.put(new a3.Line()), null != t4 ? [t4, e6, i3, s4] : [0, 0, 0, 0]);
    } } }), a3.Polyline = a3.invent({ create: "polyline", inherit: a3.Shape, construct: { polyline: function(t4) {
      return this.put(new a3.Polyline()).plot(t4 || new a3.PointArray());
    } } }), a3.Polygon = a3.invent({ create: "polygon", inherit: a3.Shape, construct: { polygon: function(t4) {
      return this.put(new a3.Polygon()).plot(t4 || new a3.PointArray());
    } } }), a3.extend(a3.Polyline, a3.Polygon, { array: function() {
      return this._array || (this._array = new a3.PointArray(this.attr("points")));
    }, plot: function(t4) {
      return null == t4 ? this.array() : this.clear().attr("points", "string" == typeof t4 ? t4 : this._array = new a3.PointArray(t4));
    }, clear: function() {
      return delete this._array, this;
    }, move: function(t4, e6) {
      return this.attr("points", this.array().move(t4, e6));
    }, size: function(t4, e6) {
      var i3 = u3(this, t4, e6);
      return this.attr("points", this.array().size(i3.width, i3.height));
    } }), a3.extend(a3.Line, a3.Polyline, a3.Polygon, { morphArray: a3.PointArray, x: function(t4) {
      return null == t4 ? this.bbox().x : this.move(t4, this.bbox().y);
    }, y: function(t4) {
      return null == t4 ? this.bbox().y : this.move(this.bbox().x, t4);
    }, width: function(t4) {
      var e6 = this.bbox();
      return null == t4 ? e6.width : this.size(t4, e6.height);
    }, height: function(t4) {
      var e6 = this.bbox();
      return null == t4 ? e6.height : this.size(e6.width, t4);
    } }), a3.Path = a3.invent({ create: "path", inherit: a3.Shape, extend: { morphArray: a3.PathArray, array: function() {
      return this._array || (this._array = new a3.PathArray(this.attr("d")));
    }, plot: function(t4) {
      return null == t4 ? this.array() : this.clear().attr("d", "string" == typeof t4 ? t4 : this._array = new a3.PathArray(t4));
    }, clear: function() {
      return delete this._array, this;
    } }, construct: { path: function(t4) {
      return this.put(new a3.Path()).plot(t4 || new a3.PathArray());
    } } }), a3.Image = a3.invent({ create: "image", inherit: a3.Shape, extend: { load: function(e6) {
      if (!e6)
        return this;
      var i3 = this, s4 = new t3.Image();
      return a3.on(s4, "load", function() {
        a3.off(s4);
        var t4 = i3.parent(a3.Pattern);
        null !== t4 && (0 == i3.width() && 0 == i3.height() && i3.size(s4.width, s4.height), t4 && 0 == t4.width() && 0 == t4.height() && t4.size(i3.width(), i3.height()), "function" == typeof i3._loaded && i3._loaded.call(i3, { width: s4.width, height: s4.height, ratio: s4.width / s4.height, url: e6 }));
      }), a3.on(s4, "error", function(t4) {
        a3.off(s4), "function" == typeof i3._error && i3._error.call(i3, t4);
      }), this.attr("href", s4.src = this.src = e6, a3.xlink);
    }, loaded: function(t4) {
      return this._loaded = t4, this;
    }, error: function(t4) {
      return this._error = t4, this;
    } }, construct: { image: function(t4, e6, i3) {
      return this.put(new a3.Image()).load(t4).size(e6 || 0, i3 || e6 || 0);
    } } }), a3.Text = a3.invent({ create: function() {
      this.constructor.call(this, a3.create("text")), this.dom.leading = new a3.Number(1.3), this._rebuild = true, this._build = false, this.attr("font-family", a3.defaults.attrs["font-family"]);
    }, inherit: a3.Shape, extend: { x: function(t4) {
      return null == t4 ? this.attr("x") : this.attr("x", t4);
    }, text: function(t4) {
      if (void 0 === t4) {
        t4 = "";
        for (var e6 = this.node.childNodes, i3 = 0, s4 = e6.length; i3 < s4; ++i3)
          0 != i3 && 3 != e6[i3].nodeType && 1 == a3.adopt(e6[i3]).dom.newLined && (t4 += "\n"), t4 += e6[i3].textContent;
        return t4;
      }
      if (this.clear().build(true), "function" == typeof t4)
        t4.call(this, this);
      else {
        i3 = 0;
        for (var r4 = (t4 = t4.split("\n")).length; i3 < r4; i3++)
          this.tspan(t4[i3]).newLine();
      }
      return this.build(false).rebuild();
    }, size: function(t4) {
      return this.attr("font-size", t4).rebuild();
    }, leading: function(t4) {
      return null == t4 ? this.dom.leading : (this.dom.leading = new a3.Number(t4), this.rebuild());
    }, lines: function() {
      var t4 = (this.textPath && this.textPath() || this).node, e6 = a3.utils.map(a3.utils.filterSVGElements(t4.childNodes), function(t5) {
        return a3.adopt(t5);
      });
      return new a3.Set(e6);
    }, rebuild: function(t4) {
      if ("boolean" == typeof t4 && (this._rebuild = t4), this._rebuild) {
        var e6 = this, i3 = 0, s4 = this.dom.leading * new a3.Number(this.attr("font-size"));
        this.lines().each(function() {
          this.dom.newLined && (e6.textPath() || this.attr("x", e6.attr("x")), "\n" == this.text() ? i3 += s4 : (this.attr("dy", s4 + i3), i3 = 0));
        }), this.fire("rebuild");
      }
      return this;
    }, build: function(t4) {
      return this._build = !!t4, this;
    }, setData: function(t4) {
      return this.dom = t4, this.dom.leading = new a3.Number(t4.leading || 1.3), this;
    } }, construct: { text: function(t4) {
      return this.put(new a3.Text()).text(t4);
    }, plain: function(t4) {
      return this.put(new a3.Text()).plain(t4);
    } } }), a3.Tspan = a3.invent({ create: "tspan", inherit: a3.Shape, extend: { text: function(t4) {
      return null == t4 ? this.node.textContent + (this.dom.newLined ? "\n" : "") : ("function" == typeof t4 ? t4.call(this, this) : this.plain(t4), this);
    }, dx: function(t4) {
      return this.attr("dx", t4);
    }, dy: function(t4) {
      return this.attr("dy", t4);
    }, newLine: function() {
      var t4 = this.parent(a3.Text);
      return this.dom.newLined = true, this.dy(t4.dom.leading * t4.attr("font-size")).attr("x", t4.x());
    } } }), a3.extend(a3.Text, a3.Tspan, { plain: function(t4) {
      return false === this._build && this.clear(), this.node.appendChild(e4.createTextNode(t4)), this;
    }, tspan: function(t4) {
      var e6 = (this.textPath && this.textPath() || this).node, i3 = new a3.Tspan();
      return false === this._build && this.clear(), e6.appendChild(i3.node), i3.text(t4);
    }, clear: function() {
      for (var t4 = (this.textPath && this.textPath() || this).node; t4.hasChildNodes(); )
        t4.removeChild(t4.lastChild);
      return this;
    }, length: function() {
      return this.node.getComputedTextLength();
    } }), a3.TextPath = a3.invent({ create: "textPath", inherit: a3.Parent, parent: a3.Text, construct: { morphArray: a3.PathArray, array: function() {
      var t4 = this.track();
      return t4 ? t4.array() : null;
    }, plot: function(t4) {
      var e6 = this.track(), i3 = null;
      return e6 && (i3 = e6.plot(t4)), null == t4 ? i3 : this;
    }, track: function() {
      var t4 = this.textPath();
      if (t4)
        return t4.reference("href");
    }, textPath: function() {
      if (this.node.firstChild && "textPath" == this.node.firstChild.nodeName)
        return a3.adopt(this.node.firstChild);
    } } }), a3.Nested = a3.invent({ create: function() {
      this.constructor.call(this, a3.create("svg")), this.style("overflow", "visible");
    }, inherit: a3.Container, construct: { nested: function() {
      return this.put(new a3.Nested());
    } } });
    var l3 = { stroke: ["color", "width", "opacity", "linecap", "linejoin", "miterlimit", "dasharray", "dashoffset"], fill: ["color", "opacity", "rule"], prefix: function(t4, e6) {
      return "color" == e6 ? t4 : t4 + "-" + e6;
    } };
    function h3(t4, e6, i3, s4) {
      return i3 + s4.replace(a3.regex.dots, " .");
    }
    function c3(t4) {
      return t4.toLowerCase().replace(/-(.)/g, function(t5, e6) {
        return e6.toUpperCase();
      });
    }
    function d3(t4) {
      return t4.charAt(0).toUpperCase() + t4.slice(1);
    }
    function g3(t4) {
      var e6 = t4.toString(16);
      return 1 == e6.length ? "0" + e6 : e6;
    }
    function u3(t4, e6, i3) {
      if (null == e6 || null == i3) {
        var a4 = t4.bbox();
        null == e6 ? e6 = a4.width / a4.height * i3 : null == i3 && (i3 = a4.height / a4.width * e6);
      }
      return { width: e6, height: i3 };
    }
    function p3(t4, e6, i3) {
      return { x: e6 * t4.a + i3 * t4.c + 0, y: e6 * t4.b + i3 * t4.d + 0 };
    }
    function f3(t4) {
      return { a: t4[0], b: t4[1], c: t4[2], d: t4[3], e: t4[4], f: t4[5] };
    }
    function x3(e6) {
      for (var i3 = e6.childNodes.length - 1; i3 >= 0; i3--)
        e6.childNodes[i3] instanceof t3.SVGElement && x3(e6.childNodes[i3]);
      return a3.adopt(e6).id(a3.eid(e6.nodeName));
    }
    function b3(t4) {
      return Math.abs(t4) > 1e-37 ? t4 : 0;
    }
    ["fill", "stroke"].forEach(function(t4) {
      var e6 = {};
      e6[t4] = function(e7) {
        if (void 0 === e7)
          return this;
        if ("string" == typeof e7 || a3.Color.isRgb(e7) || e7 && "function" == typeof e7.fill)
          this.attr(t4, e7);
        else
          for (var i3 = l3[t4].length - 1; i3 >= 0; i3--)
            null != e7[l3[t4][i3]] && this.attr(l3.prefix(t4, l3[t4][i3]), e7[l3[t4][i3]]);
        return this;
      }, a3.extend(a3.Element, a3.FX, e6);
    }), a3.extend(a3.Element, a3.FX, { translate: function(t4, e6) {
      return this.transform({ x: t4, y: e6 });
    }, matrix: function(t4) {
      return this.attr("transform", new a3.Matrix(6 == arguments.length ? [].slice.call(arguments) : t4));
    }, opacity: function(t4) {
      return this.attr("opacity", t4);
    }, dx: function(t4) {
      return this.x(new a3.Number(t4).plus(this instanceof a3.FX ? 0 : this.x()), true);
    }, dy: function(t4) {
      return this.y(new a3.Number(t4).plus(this instanceof a3.FX ? 0 : this.y()), true);
    } }), a3.extend(a3.Path, { length: function() {
      return this.node.getTotalLength();
    }, pointAt: function(t4) {
      return this.node.getPointAtLength(t4);
    } }), a3.Set = a3.invent({ create: function(t4) {
      Array.isArray(t4) ? this.members = t4 : this.clear();
    }, extend: { add: function() {
      for (var t4 = [].slice.call(arguments), e6 = 0, i3 = t4.length; e6 < i3; e6++)
        this.members.push(t4[e6]);
      return this;
    }, remove: function(t4) {
      var e6 = this.index(t4);
      return e6 > -1 && this.members.splice(e6, 1), this;
    }, each: function(t4) {
      for (var e6 = 0, i3 = this.members.length; e6 < i3; e6++)
        t4.apply(this.members[e6], [e6, this.members]);
      return this;
    }, clear: function() {
      return this.members = [], this;
    }, length: function() {
      return this.members.length;
    }, has: function(t4) {
      return this.index(t4) >= 0;
    }, index: function(t4) {
      return this.members.indexOf(t4);
    }, get: function(t4) {
      return this.members[t4];
    }, first: function() {
      return this.get(0);
    }, last: function() {
      return this.get(this.members.length - 1);
    }, valueOf: function() {
      return this.members;
    } }, construct: { set: function(t4) {
      return new a3.Set(t4);
    } } }), a3.FX.Set = a3.invent({ create: function(t4) {
      this.set = t4;
    } }), a3.Set.inherit = function() {
      var t4 = [];
      for (var e6 in a3.Shape.prototype)
        "function" == typeof a3.Shape.prototype[e6] && "function" != typeof a3.Set.prototype[e6] && t4.push(e6);
      for (var e6 in t4.forEach(function(t5) {
        a3.Set.prototype[t5] = function() {
          for (var e7 = 0, i3 = this.members.length; e7 < i3; e7++)
            this.members[e7] && "function" == typeof this.members[e7][t5] && this.members[e7][t5].apply(this.members[e7], arguments);
          return "animate" == t5 ? this.fx || (this.fx = new a3.FX.Set(this)) : this;
        };
      }), t4 = [], a3.FX.prototype)
        "function" == typeof a3.FX.prototype[e6] && "function" != typeof a3.FX.Set.prototype[e6] && t4.push(e6);
      t4.forEach(function(t5) {
        a3.FX.Set.prototype[t5] = function() {
          for (var e7 = 0, i3 = this.set.members.length; e7 < i3; e7++)
            this.set.members[e7].fx[t5].apply(this.set.members[e7].fx, arguments);
          return this;
        };
      });
    }, a3.extend(a3.Element, {}), a3.extend(a3.Element, { remember: function(t4, e6) {
      if ("object" === i2(arguments[0]))
        for (var a4 in t4)
          this.remember(a4, t4[a4]);
      else {
        if (1 == arguments.length)
          return this.memory()[t4];
        this.memory()[t4] = e6;
      }
      return this;
    }, forget: function() {
      if (0 == arguments.length)
        this._memory = {};
      else
        for (var t4 = arguments.length - 1; t4 >= 0; t4--)
          delete this.memory()[arguments[t4]];
      return this;
    }, memory: function() {
      return this._memory || (this._memory = {});
    } }), a3.get = function(t4) {
      var i3 = e4.getElementById(function(t5) {
        var e6 = (t5 || "").toString().match(a3.regex.reference);
        if (e6)
          return e6[1];
      }(t4) || t4);
      return a3.adopt(i3);
    }, a3.select = function(t4, i3) {
      return new a3.Set(a3.utils.map((i3 || e4).querySelectorAll(t4), function(t5) {
        return a3.adopt(t5);
      }));
    }, a3.extend(a3.Parent, { select: function(t4) {
      return a3.select(t4, this.node);
    } });
    var v3 = "abcdef".split("");
    if ("function" != typeof t3.CustomEvent) {
      var m3 = function(t4, i3) {
        i3 = i3 || { bubbles: false, cancelable: false, detail: void 0 };
        var a4 = e4.createEvent("CustomEvent");
        return a4.initCustomEvent(t4, i3.bubbles, i3.cancelable, i3.detail), a4;
      };
      m3.prototype = t3.Event.prototype, a3.CustomEvent = m3;
    } else
      a3.CustomEvent = t3.CustomEvent;
    return a3;
  }, "object" === i2(exports) && true ? module.exports = Rt.document ? Ht(Rt, Rt.document) : function(t3) {
    return Ht(t3, t3.document);
  } : Rt.SVG = Ht(Rt, Rt.document), /*! svg.filter.js - v2.0.2 - 2016-02-24
  * https://github.com/wout/svg.filter.js
  * Copyright (c) 2016 Wout Fierens; Licensed MIT */
  function() {
    SVG.Filter = SVG.invent({ create: "filter", inherit: SVG.Parent, extend: { source: "SourceGraphic", sourceAlpha: "SourceAlpha", background: "BackgroundImage", backgroundAlpha: "BackgroundAlpha", fill: "FillPaint", stroke: "StrokePaint", autoSetIn: true, put: function(t4, e6) {
      return this.add(t4, e6), !t4.attr("in") && this.autoSetIn && t4.attr("in", this.source), t4.attr("result") || t4.attr("result", t4), t4;
    }, blend: function(t4, e6, i4) {
      return this.put(new SVG.BlendEffect(t4, e6, i4));
    }, colorMatrix: function(t4, e6) {
      return this.put(new SVG.ColorMatrixEffect(t4, e6));
    }, convolveMatrix: function(t4) {
      return this.put(new SVG.ConvolveMatrixEffect(t4));
    }, componentTransfer: function(t4) {
      return this.put(new SVG.ComponentTransferEffect(t4));
    }, composite: function(t4, e6, i4) {
      return this.put(new SVG.CompositeEffect(t4, e6, i4));
    }, flood: function(t4, e6) {
      return this.put(new SVG.FloodEffect(t4, e6));
    }, offset: function(t4, e6) {
      return this.put(new SVG.OffsetEffect(t4, e6));
    }, image: function(t4) {
      return this.put(new SVG.ImageEffect(t4));
    }, merge: function() {
      var t4 = [void 0];
      for (var e6 in arguments)
        t4.push(arguments[e6]);
      return this.put(new (SVG.MergeEffect.bind.apply(SVG.MergeEffect, t4))());
    }, gaussianBlur: function(t4, e6) {
      return this.put(new SVG.GaussianBlurEffect(t4, e6));
    }, morphology: function(t4, e6) {
      return this.put(new SVG.MorphologyEffect(t4, e6));
    }, diffuseLighting: function(t4, e6, i4) {
      return this.put(new SVG.DiffuseLightingEffect(t4, e6, i4));
    }, displacementMap: function(t4, e6, i4, a4, s4) {
      return this.put(new SVG.DisplacementMapEffect(t4, e6, i4, a4, s4));
    }, specularLighting: function(t4, e6, i4, a4) {
      return this.put(new SVG.SpecularLightingEffect(t4, e6, i4, a4));
    }, tile: function() {
      return this.put(new SVG.TileEffect());
    }, turbulence: function(t4, e6, i4, a4, s4) {
      return this.put(new SVG.TurbulenceEffect(t4, e6, i4, a4, s4));
    }, toString: function() {
      return "url(#" + this.attr("id") + ")";
    } } }), SVG.extend(SVG.Defs, { filter: function(t4) {
      var e6 = this.put(new SVG.Filter());
      return "function" == typeof t4 && t4.call(e6, e6), e6;
    } }), SVG.extend(SVG.Container, { filter: function(t4) {
      return this.defs().filter(t4);
    } }), SVG.extend(SVG.Element, SVG.G, SVG.Nested, { filter: function(t4) {
      return this.filterer = t4 instanceof SVG.Element ? t4 : this.doc().filter(t4), this.doc() && this.filterer.doc() !== this.doc() && this.doc().defs().add(this.filterer), this.attr("filter", this.filterer), this.filterer;
    }, unfilter: function(t4) {
      return this.filterer && true === t4 && this.filterer.remove(), delete this.filterer, this.attr("filter", null);
    } }), SVG.Effect = SVG.invent({ create: function() {
      this.constructor.call(this);
    }, inherit: SVG.Element, extend: { in: function(t4) {
      return null == t4 ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", t4);
    }, result: function(t4) {
      return null == t4 ? this.attr("result") : this.attr("result", t4);
    }, toString: function() {
      return this.result();
    } } }), SVG.ParentEffect = SVG.invent({ create: function() {
      this.constructor.call(this);
    }, inherit: SVG.Parent, extend: { in: function(t4) {
      return null == t4 ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", t4);
    }, result: function(t4) {
      return null == t4 ? this.attr("result") : this.attr("result", t4);
    }, toString: function() {
      return this.result();
    } } });
    var t3 = { blend: function(t4, e6) {
      return this.parent() && this.parent().blend(this, t4, e6);
    }, colorMatrix: function(t4, e6) {
      return this.parent() && this.parent().colorMatrix(t4, e6).in(this);
    }, convolveMatrix: function(t4) {
      return this.parent() && this.parent().convolveMatrix(t4).in(this);
    }, componentTransfer: function(t4) {
      return this.parent() && this.parent().componentTransfer(t4).in(this);
    }, composite: function(t4, e6) {
      return this.parent() && this.parent().composite(this, t4, e6);
    }, flood: function(t4, e6) {
      return this.parent() && this.parent().flood(t4, e6);
    }, offset: function(t4, e6) {
      return this.parent() && this.parent().offset(t4, e6).in(this);
    }, image: function(t4) {
      return this.parent() && this.parent().image(t4);
    }, merge: function() {
      return this.parent() && this.parent().merge.apply(this.parent(), [this].concat(arguments));
    }, gaussianBlur: function(t4, e6) {
      return this.parent() && this.parent().gaussianBlur(t4, e6).in(this);
    }, morphology: function(t4, e6) {
      return this.parent() && this.parent().morphology(t4, e6).in(this);
    }, diffuseLighting: function(t4, e6, i4) {
      return this.parent() && this.parent().diffuseLighting(t4, e6, i4).in(this);
    }, displacementMap: function(t4, e6, i4, a4) {
      return this.parent() && this.parent().displacementMap(this, t4, e6, i4, a4);
    }, specularLighting: function(t4, e6, i4, a4) {
      return this.parent() && this.parent().specularLighting(t4, e6, i4, a4).in(this);
    }, tile: function() {
      return this.parent() && this.parent().tile().in(this);
    }, turbulence: function(t4, e6, i4, a4, s4) {
      return this.parent() && this.parent().turbulence(t4, e6, i4, a4, s4).in(this);
    } };
    SVG.extend(SVG.Effect, t3), SVG.extend(SVG.ParentEffect, t3), SVG.ChildEffect = SVG.invent({ create: function() {
      this.constructor.call(this);
    }, inherit: SVG.Element, extend: { in: function(t4) {
      this.attr("in", t4);
    } } });
    var e4 = { blend: function(t4, e6, i4) {
      this.attr({ in: t4, in2: e6, mode: i4 || "normal" });
    }, colorMatrix: function(t4, e6) {
      "matrix" == t4 && (e6 = s3(e6)), this.attr({ type: t4, values: void 0 === e6 ? null : e6 });
    }, convolveMatrix: function(t4) {
      t4 = s3(t4), this.attr({ order: Math.sqrt(t4.split(" ").length), kernelMatrix: t4 });
    }, composite: function(t4, e6, i4) {
      this.attr({ in: t4, in2: e6, operator: i4 });
    }, flood: function(t4, e6) {
      this.attr("flood-color", t4), null != e6 && this.attr("flood-opacity", e6);
    }, offset: function(t4, e6) {
      this.attr({ dx: t4, dy: e6 });
    }, image: function(t4) {
      this.attr("href", t4, SVG.xlink);
    }, displacementMap: function(t4, e6, i4, a4, s4) {
      this.attr({ in: t4, in2: e6, scale: i4, xChannelSelector: a4, yChannelSelector: s4 });
    }, gaussianBlur: function(t4, e6) {
      null != t4 || null != e6 ? this.attr("stdDeviation", function(t5) {
        if (!Array.isArray(t5))
          return t5;
        for (var e7 = 0, i4 = t5.length, a4 = []; e7 < i4; e7++)
          a4.push(t5[e7]);
        return a4.join(" ");
      }(Array.prototype.slice.call(arguments))) : this.attr("stdDeviation", "0 0");
    }, morphology: function(t4, e6) {
      this.attr({ operator: t4, radius: e6 });
    }, tile: function() {
    }, turbulence: function(t4, e6, i4, a4, s4) {
      this.attr({ numOctaves: e6, seed: i4, stitchTiles: a4, baseFrequency: t4, type: s4 });
    } }, i3 = { merge: function() {
      var t4;
      if (arguments[0] instanceof SVG.Set) {
        var e6 = this;
        arguments[0].each(function(t5) {
          this instanceof SVG.MergeNode ? e6.put(this) : (this instanceof SVG.Effect || this instanceof SVG.ParentEffect) && e6.put(new SVG.MergeNode(this));
        });
      } else {
        t4 = Array.isArray(arguments[0]) ? arguments[0] : arguments;
        for (var i4 = 0; i4 < t4.length; i4++)
          t4[i4] instanceof SVG.MergeNode ? this.put(t4[i4]) : this.put(new SVG.MergeNode(t4[i4]));
      }
    }, componentTransfer: function(t4) {
      if (this.rgb = new SVG.Set(), ["r", "g", "b", "a"].forEach(function(t5) {
        this[t5] = new SVG["Func" + t5.toUpperCase()]("identity"), this.rgb.add(this[t5]), this.node.appendChild(this[t5].node);
      }.bind(this)), t4)
        for (var e6 in t4.rgb && (["r", "g", "b"].forEach(function(e7) {
          this[e7].attr(t4.rgb);
        }.bind(this)), delete t4.rgb), t4)
          this[e6].attr(t4[e6]);
    }, diffuseLighting: function(t4, e6, i4) {
      this.attr({ surfaceScale: t4, diffuseConstant: e6, kernelUnitLength: i4 });
    }, specularLighting: function(t4, e6, i4, a4) {
      this.attr({ surfaceScale: t4, diffuseConstant: e6, specularExponent: i4, kernelUnitLength: a4 });
    } }, a3 = { distantLight: function(t4, e6) {
      this.attr({ azimuth: t4, elevation: e6 });
    }, pointLight: function(t4, e6, i4) {
      this.attr({ x: t4, y: e6, z: i4 });
    }, spotLight: function(t4, e6, i4, a4, s4, r4) {
      this.attr({ x: t4, y: e6, z: i4, pointsAtX: a4, pointsAtY: s4, pointsAtZ: r4 });
    }, mergeNode: function(t4) {
      this.attr("in", t4);
    } };
    function s3(t4) {
      return Array.isArray(t4) && (t4 = new SVG.Array(t4)), t4.toString().replace(/^\s+/, "").replace(/\s+$/, "").replace(/\s+/g, " ");
    }
    function r3() {
      var t4 = function() {
      };
      for (var e6 in "function" == typeof arguments[arguments.length - 1] && (t4 = arguments[arguments.length - 1], Array.prototype.splice.call(arguments, arguments.length - 1, 1)), arguments)
        for (var i4 in arguments[e6])
          t4(arguments[e6][i4], i4, arguments[e6]);
    }
    ["r", "g", "b", "a"].forEach(function(t4) {
      a3["Func" + t4.toUpperCase()] = function(t5) {
        switch (this.attr("type", t5), t5) {
          case "table":
            this.attr("tableValues", arguments[1]);
            break;
          case "linear":
            this.attr("slope", arguments[1]), this.attr("intercept", arguments[2]);
            break;
          case "gamma":
            this.attr("amplitude", arguments[1]), this.attr("exponent", arguments[2]), this.attr("offset", arguments[2]);
        }
      };
    }), r3(e4, function(t4, e6) {
      var i4 = e6.charAt(0).toUpperCase() + e6.slice(1);
      SVG[i4 + "Effect"] = SVG.invent({ create: function() {
        this.constructor.call(this, SVG.create("fe" + i4)), t4.apply(this, arguments), this.result(this.attr("id") + "Out");
      }, inherit: SVG.Effect, extend: {} });
    }), r3(i3, function(t4, e6) {
      var i4 = e6.charAt(0).toUpperCase() + e6.slice(1);
      SVG[i4 + "Effect"] = SVG.invent({ create: function() {
        this.constructor.call(this, SVG.create("fe" + i4)), t4.apply(this, arguments), this.result(this.attr("id") + "Out");
      }, inherit: SVG.ParentEffect, extend: {} });
    }), r3(a3, function(t4, e6) {
      var i4 = e6.charAt(0).toUpperCase() + e6.slice(1);
      SVG[i4] = SVG.invent({ create: function() {
        this.constructor.call(this, SVG.create("fe" + i4)), t4.apply(this, arguments);
      }, inherit: SVG.ChildEffect, extend: {} });
    }), SVG.extend(SVG.MergeEffect, { in: function(t4) {
      return t4 instanceof SVG.MergeNode ? this.add(t4, 0) : this.add(new SVG.MergeNode(t4), 0), this;
    } }), SVG.extend(SVG.CompositeEffect, SVG.BlendEffect, SVG.DisplacementMapEffect, { in2: function(t4) {
      return null == t4 ? this.parent() && this.parent().select('[result="' + this.attr("in2") + '"]').get(0) || this.attr("in2") : this.attr("in2", t4);
    } }), SVG.filter = { sepiatone: [0.343, 0.669, 0.119, 0, 0, 0.249, 0.626, 0.13, 0, 0, 0.172, 0.334, 0.111, 0, 0, 0, 0, 0, 1, 0] };
  }.call(void 0), function() {
    function t3(t4, s4, r3, o3, n3, l3, h3) {
      for (var c3 = t4.slice(s4, r3 || h3), d3 = o3.slice(n3, l3 || h3), g3 = 0, u3 = { pos: [0, 0], start: [0, 0] }, p3 = { pos: [0, 0], start: [0, 0] }; ; ) {
        if (c3[g3] = e4.call(u3, c3[g3]), d3[g3] = e4.call(p3, d3[g3]), c3[g3][0] != d3[g3][0] || "M" == c3[g3][0] || "A" == c3[g3][0] && (c3[g3][4] != d3[g3][4] || c3[g3][5] != d3[g3][5]) ? (Array.prototype.splice.apply(c3, [g3, 1].concat(a3.call(u3, c3[g3]))), Array.prototype.splice.apply(d3, [g3, 1].concat(a3.call(p3, d3[g3])))) : (c3[g3] = i3.call(u3, c3[g3]), d3[g3] = i3.call(p3, d3[g3])), ++g3 == c3.length && g3 == d3.length)
          break;
        g3 == c3.length && c3.push(["C", u3.pos[0], u3.pos[1], u3.pos[0], u3.pos[1], u3.pos[0], u3.pos[1]]), g3 == d3.length && d3.push(["C", p3.pos[0], p3.pos[1], p3.pos[0], p3.pos[1], p3.pos[0], p3.pos[1]]);
      }
      return { start: c3, dest: d3 };
    }
    function e4(t4) {
      switch (t4[0]) {
        case "z":
        case "Z":
          t4[0] = "L", t4[1] = this.start[0], t4[2] = this.start[1];
          break;
        case "H":
          t4[0] = "L", t4[2] = this.pos[1];
          break;
        case "V":
          t4[0] = "L", t4[2] = t4[1], t4[1] = this.pos[0];
          break;
        case "T":
          t4[0] = "Q", t4[3] = t4[1], t4[4] = t4[2], t4[1] = this.reflection[1], t4[2] = this.reflection[0];
          break;
        case "S":
          t4[0] = "C", t4[6] = t4[4], t4[5] = t4[3], t4[4] = t4[2], t4[3] = t4[1], t4[2] = this.reflection[1], t4[1] = this.reflection[0];
      }
      return t4;
    }
    function i3(t4) {
      var e6 = t4.length;
      return this.pos = [t4[e6 - 2], t4[e6 - 1]], -1 != "SCQT".indexOf(t4[0]) && (this.reflection = [2 * this.pos[0] - t4[e6 - 4], 2 * this.pos[1] - t4[e6 - 3]]), t4;
    }
    function a3(t4) {
      var e6 = [t4];
      switch (t4[0]) {
        case "M":
          return this.pos = this.start = [t4[1], t4[2]], e6;
        case "L":
          t4[5] = t4[3] = t4[1], t4[6] = t4[4] = t4[2], t4[1] = this.pos[0], t4[2] = this.pos[1];
          break;
        case "Q":
          t4[6] = t4[4], t4[5] = t4[3], t4[4] = 1 * t4[4] / 3 + 2 * t4[2] / 3, t4[3] = 1 * t4[3] / 3 + 2 * t4[1] / 3, t4[2] = 1 * this.pos[1] / 3 + 2 * t4[2] / 3, t4[1] = 1 * this.pos[0] / 3 + 2 * t4[1] / 3;
          break;
        case "A":
          e6 = function(t5, e7) {
            var i4, a4, s4, r3, o3, n3, l3, h3, c3, d3, g3, u3, p3, f3, x3, b3, v3, m3, y3, w3, k3, A6, S3, C3, L3, P3, M3 = Math.abs(e7[1]), I3 = Math.abs(e7[2]), T3 = e7[3] % 360, z3 = e7[4], X4 = e7[5], E3 = e7[6], Y4 = e7[7], F3 = new SVG.Point(t5), R3 = new SVG.Point(E3, Y4), H3 = [];
            if (0 === M3 || 0 === I3 || F3.x === R3.x && F3.y === R3.y)
              return [["C", F3.x, F3.y, R3.x, R3.y, R3.x, R3.y]];
            i4 = new SVG.Point((F3.x - R3.x) / 2, (F3.y - R3.y) / 2).transform(new SVG.Matrix().rotate(T3)), (a4 = i4.x * i4.x / (M3 * M3) + i4.y * i4.y / (I3 * I3)) > 1 && (M3 *= a4 = Math.sqrt(a4), I3 *= a4);
            s4 = new SVG.Matrix().rotate(T3).scale(1 / M3, 1 / I3).rotate(-T3), F3 = F3.transform(s4), R3 = R3.transform(s4), r3 = [R3.x - F3.x, R3.y - F3.y], n3 = r3[0] * r3[0] + r3[1] * r3[1], o3 = Math.sqrt(n3), r3[0] /= o3, r3[1] /= o3, l3 = n3 < 4 ? Math.sqrt(1 - n3 / 4) : 0, z3 === X4 && (l3 *= -1);
            h3 = new SVG.Point((R3.x + F3.x) / 2 + l3 * -r3[1], (R3.y + F3.y) / 2 + l3 * r3[0]), c3 = new SVG.Point(F3.x - h3.x, F3.y - h3.y), d3 = new SVG.Point(R3.x - h3.x, R3.y - h3.y), g3 = Math.acos(c3.x / Math.sqrt(c3.x * c3.x + c3.y * c3.y)), c3.y < 0 && (g3 *= -1);
            u3 = Math.acos(d3.x / Math.sqrt(d3.x * d3.x + d3.y * d3.y)), d3.y < 0 && (u3 *= -1);
            X4 && g3 > u3 && (u3 += 2 * Math.PI);
            !X4 && g3 < u3 && (u3 -= 2 * Math.PI);
            for (f3 = Math.ceil(2 * Math.abs(g3 - u3) / Math.PI), b3 = [], v3 = g3, p3 = (u3 - g3) / f3, x3 = 4 * Math.tan(p3 / 4) / 3, k3 = 0; k3 <= f3; k3++)
              y3 = Math.cos(v3), m3 = Math.sin(v3), w3 = new SVG.Point(h3.x + y3, h3.y + m3), b3[k3] = [new SVG.Point(w3.x + x3 * m3, w3.y - x3 * y3), w3, new SVG.Point(w3.x - x3 * m3, w3.y + x3 * y3)], v3 += p3;
            for (b3[0][0] = b3[0][1].clone(), b3[b3.length - 1][2] = b3[b3.length - 1][1].clone(), s4 = new SVG.Matrix().rotate(T3).scale(M3, I3).rotate(-T3), k3 = 0, A6 = b3.length; k3 < A6; k3++)
              b3[k3][0] = b3[k3][0].transform(s4), b3[k3][1] = b3[k3][1].transform(s4), b3[k3][2] = b3[k3][2].transform(s4);
            for (k3 = 1, A6 = b3.length; k3 < A6; k3++)
              S3 = (w3 = b3[k3 - 1][2]).x, C3 = w3.y, L3 = (w3 = b3[k3][0]).x, P3 = w3.y, E3 = (w3 = b3[k3][1]).x, Y4 = w3.y, H3.push(["C", S3, C3, L3, P3, E3, Y4]);
            return H3;
          }(this.pos, t4), t4 = e6[0];
      }
      return t4[0] = "C", this.pos = [t4[5], t4[6]], this.reflection = [2 * t4[5] - t4[3], 2 * t4[6] - t4[4]], e6;
    }
    function s3(t4, e6) {
      if (false === e6)
        return false;
      for (var i4 = e6, a4 = t4.length; i4 < a4; ++i4)
        if ("M" == t4[i4][0])
          return i4;
      return false;
    }
    SVG.extend(SVG.PathArray, { morph: function(e6) {
      for (var i4 = this.value, a4 = this.parse(e6), r3 = 0, o3 = 0, n3 = false, l3 = false; false !== r3 || false !== o3; ) {
        var h3;
        n3 = s3(i4, false !== r3 && r3 + 1), l3 = s3(a4, false !== o3 && o3 + 1), false === r3 && (r3 = 0 == (h3 = new SVG.PathArray(c3.start).bbox()).height || 0 == h3.width ? i4.push(i4[0]) - 1 : i4.push(["M", h3.x + h3.width / 2, h3.y + h3.height / 2]) - 1), false === o3 && (o3 = 0 == (h3 = new SVG.PathArray(c3.dest).bbox()).height || 0 == h3.width ? a4.push(a4[0]) - 1 : a4.push(["M", h3.x + h3.width / 2, h3.y + h3.height / 2]) - 1);
        var c3 = t3(i4, r3, n3, a4, o3, l3);
        i4 = i4.slice(0, r3).concat(c3.start, false === n3 ? [] : i4.slice(n3)), a4 = a4.slice(0, o3).concat(c3.dest, false === l3 ? [] : a4.slice(l3)), r3 = false !== n3 && r3 + c3.start.length, o3 = false !== l3 && o3 + c3.dest.length;
      }
      return this.value = i4, this.destination = new SVG.PathArray(), this.destination.value = a4, this;
    } });
  }(), /*! svg.draggable.js - v2.2.2 - 2019-01-08
  * https://github.com/svgdotjs/svg.draggable.js
  * Copyright (c) 2019 Wout Fierens; Licensed MIT */
  function() {
    function t3(t4) {
      t4.remember("_draggable", this), this.el = t4;
    }
    t3.prototype.init = function(t4, e4) {
      var i3 = this;
      this.constraint = t4, this.value = e4, this.el.on("mousedown.drag", function(t5) {
        i3.start(t5);
      }), this.el.on("touchstart.drag", function(t5) {
        i3.start(t5);
      });
    }, t3.prototype.transformPoint = function(t4, e4) {
      var i3 = (t4 = t4 || window.event).changedTouches && t4.changedTouches[0] || t4;
      return this.p.x = i3.clientX - (e4 || 0), this.p.y = i3.clientY, this.p.matrixTransform(this.m);
    }, t3.prototype.getBBox = function() {
      var t4 = this.el.bbox();
      return this.el instanceof SVG.Nested && (t4 = this.el.rbox()), (this.el instanceof SVG.G || this.el instanceof SVG.Use || this.el instanceof SVG.Nested) && (t4.x = this.el.x(), t4.y = this.el.y()), t4;
    }, t3.prototype.start = function(t4) {
      if ("click" != t4.type && "mousedown" != t4.type && "mousemove" != t4.type || 1 == (t4.which || t4.buttons)) {
        var e4 = this;
        if (this.el.fire("beforedrag", { event: t4, handler: this }), !this.el.event().defaultPrevented) {
          t4.preventDefault(), t4.stopPropagation(), this.parent = this.parent || this.el.parent(SVG.Nested) || this.el.parent(SVG.Doc), this.p = this.parent.node.createSVGPoint(), this.m = this.el.node.getScreenCTM().inverse();
          var i3, a3 = this.getBBox();
          if (this.el instanceof SVG.Text)
            switch (i3 = this.el.node.getComputedTextLength(), this.el.attr("text-anchor")) {
              case "middle":
                i3 /= 2;
                break;
              case "start":
                i3 = 0;
            }
          this.startPoints = { point: this.transformPoint(t4, i3), box: a3, transform: this.el.transform() }, SVG.on(window, "mousemove.drag", function(t5) {
            e4.drag(t5);
          }), SVG.on(window, "touchmove.drag", function(t5) {
            e4.drag(t5);
          }), SVG.on(window, "mouseup.drag", function(t5) {
            e4.end(t5);
          }), SVG.on(window, "touchend.drag", function(t5) {
            e4.end(t5);
          }), this.el.fire("dragstart", { event: t4, p: this.startPoints.point, m: this.m, handler: this });
        }
      }
    }, t3.prototype.drag = function(t4) {
      var e4 = this.getBBox(), i3 = this.transformPoint(t4), a3 = this.startPoints.box.x + i3.x - this.startPoints.point.x, s3 = this.startPoints.box.y + i3.y - this.startPoints.point.y, r3 = this.constraint, o3 = i3.x - this.startPoints.point.x, n3 = i3.y - this.startPoints.point.y;
      if (this.el.fire("dragmove", { event: t4, p: i3, m: this.m, handler: this }), this.el.event().defaultPrevented)
        return i3;
      if ("function" == typeof r3) {
        var l3 = r3.call(this.el, a3, s3, this.m);
        "boolean" == typeof l3 && (l3 = { x: l3, y: l3 }), true === l3.x ? this.el.x(a3) : false !== l3.x && this.el.x(l3.x), true === l3.y ? this.el.y(s3) : false !== l3.y && this.el.y(l3.y);
      } else
        "object" == typeof r3 && (null != r3.minX && a3 < r3.minX ? o3 = (a3 = r3.minX) - this.startPoints.box.x : null != r3.maxX && a3 > r3.maxX - e4.width && (o3 = (a3 = r3.maxX - e4.width) - this.startPoints.box.x), null != r3.minY && s3 < r3.minY ? n3 = (s3 = r3.minY) - this.startPoints.box.y : null != r3.maxY && s3 > r3.maxY - e4.height && (n3 = (s3 = r3.maxY - e4.height) - this.startPoints.box.y), null != r3.snapToGrid && (a3 -= a3 % r3.snapToGrid, s3 -= s3 % r3.snapToGrid, o3 -= o3 % r3.snapToGrid, n3 -= n3 % r3.snapToGrid), this.el instanceof SVG.G ? this.el.matrix(this.startPoints.transform).transform({ x: o3, y: n3 }, true) : this.el.move(a3, s3));
      return i3;
    }, t3.prototype.end = function(t4) {
      var e4 = this.drag(t4);
      this.el.fire("dragend", { event: t4, p: e4, m: this.m, handler: this }), SVG.off(window, "mousemove.drag"), SVG.off(window, "touchmove.drag"), SVG.off(window, "mouseup.drag"), SVG.off(window, "touchend.drag");
    }, SVG.extend(SVG.Element, { draggable: function(e4, i3) {
      "function" != typeof e4 && "object" != typeof e4 || (i3 = e4, e4 = true);
      var a3 = this.remember("_draggable") || new t3(this);
      return (e4 = void 0 === e4 || e4) ? a3.init(i3 || {}, e4) : (this.off("mousedown.drag"), this.off("touchstart.drag")), this;
    } });
  }.call(void 0), function() {
    function t3(t4) {
      this.el = t4, t4.remember("_selectHandler", this), this.pointSelection = { isSelected: false }, this.rectSelection = { isSelected: false }, this.pointsList = { lt: [0, 0], rt: ["width", 0], rb: ["width", "height"], lb: [0, "height"], t: ["width", 0], r: ["width", "height"], b: ["width", "height"], l: [0, "height"] }, this.pointCoord = function(t5, e4, i3) {
        var a3 = "string" != typeof t5 ? t5 : e4[t5];
        return i3 ? a3 / 2 : a3;
      }, this.pointCoords = function(t5, e4) {
        var i3 = this.pointsList[t5];
        return { x: this.pointCoord(i3[0], e4, "t" === t5 || "b" === t5), y: this.pointCoord(i3[1], e4, "r" === t5 || "l" === t5) };
      };
    }
    t3.prototype.init = function(t4, e4) {
      var i3 = this.el.bbox();
      this.options = {};
      var a3 = this.el.selectize.defaults.points;
      for (var s3 in this.el.selectize.defaults)
        this.options[s3] = this.el.selectize.defaults[s3], void 0 !== e4[s3] && (this.options[s3] = e4[s3]);
      var r3 = ["points", "pointsExclude"];
      for (var s3 in r3) {
        var o3 = this.options[r3[s3]];
        "string" == typeof o3 ? o3 = o3.length > 0 ? o3.split(/\s*,\s*/i) : [] : "boolean" == typeof o3 && "points" === r3[s3] && (o3 = o3 ? a3 : []), this.options[r3[s3]] = o3;
      }
      this.options.points = [a3, this.options.points].reduce(function(t5, e6) {
        return t5.filter(function(t6) {
          return e6.indexOf(t6) > -1;
        });
      }), this.options.points = [this.options.points, this.options.pointsExclude].reduce(function(t5, e6) {
        return t5.filter(function(t6) {
          return e6.indexOf(t6) < 0;
        });
      }), this.parent = this.el.parent(), this.nested = this.nested || this.parent.group(), this.nested.matrix(new SVG.Matrix(this.el).translate(i3.x, i3.y)), this.options.deepSelect && -1 !== ["line", "polyline", "polygon"].indexOf(this.el.type) ? this.selectPoints(t4) : this.selectRect(t4), this.observe(), this.cleanup();
    }, t3.prototype.selectPoints = function(t4) {
      return this.pointSelection.isSelected = t4, this.pointSelection.set || (this.pointSelection.set = this.parent.set(), this.drawPoints()), this;
    }, t3.prototype.getPointArray = function() {
      var t4 = this.el.bbox();
      return this.el.array().valueOf().map(function(e4) {
        return [e4[0] - t4.x, e4[1] - t4.y];
      });
    }, t3.prototype.drawPoints = function() {
      for (var t4 = this, e4 = this.getPointArray(), i3 = 0, a3 = e4.length; i3 < a3; ++i3) {
        var s3 = /* @__PURE__ */ function(e6) {
          return function(i4) {
            (i4 = i4 || window.event).preventDefault ? i4.preventDefault() : i4.returnValue = false, i4.stopPropagation();
            var a4 = i4.pageX || i4.touches[0].pageX, s4 = i4.pageY || i4.touches[0].pageY;
            t4.el.fire("point", { x: a4, y: s4, i: e6, event: i4 });
          };
        }(i3), r3 = this.drawPoint(e4[i3][0], e4[i3][1]).addClass(this.options.classPoints).addClass(this.options.classPoints + "_point").on("touchstart", s3).on("mousedown", s3);
        this.pointSelection.set.add(r3);
      }
    }, t3.prototype.drawPoint = function(t4, e4) {
      var i3 = this.options.pointType;
      switch (i3) {
        case "circle":
          return this.drawCircle(t4, e4);
        case "rect":
          return this.drawRect(t4, e4);
        default:
          if ("function" == typeof i3)
            return i3.call(this, t4, e4);
          throw new Error("Unknown " + i3 + " point type!");
      }
    }, t3.prototype.drawCircle = function(t4, e4) {
      return this.nested.circle(this.options.pointSize).center(t4, e4);
    }, t3.prototype.drawRect = function(t4, e4) {
      return this.nested.rect(this.options.pointSize, this.options.pointSize).center(t4, e4);
    }, t3.prototype.updatePointSelection = function() {
      var t4 = this.getPointArray();
      this.pointSelection.set.each(function(e4) {
        this.cx() === t4[e4][0] && this.cy() === t4[e4][1] || this.center(t4[e4][0], t4[e4][1]);
      });
    }, t3.prototype.updateRectSelection = function() {
      var t4 = this, e4 = this.el.bbox();
      if (this.rectSelection.set.get(0).attr({ width: e4.width, height: e4.height }), this.options.points.length && this.options.points.map(function(i4, a3) {
        var s3 = t4.pointCoords(i4, e4);
        t4.rectSelection.set.get(a3 + 1).center(s3.x, s3.y);
      }), this.options.rotationPoint) {
        var i3 = this.rectSelection.set.length();
        this.rectSelection.set.get(i3 - 1).center(e4.width / 2, 20);
      }
    }, t3.prototype.selectRect = function(t4) {
      var e4 = this, i3 = this.el.bbox();
      function a3(t5) {
        return function(i4) {
          (i4 = i4 || window.event).preventDefault ? i4.preventDefault() : i4.returnValue = false, i4.stopPropagation();
          var a4 = i4.pageX || i4.touches[0].pageX, s4 = i4.pageY || i4.touches[0].pageY;
          e4.el.fire(t5, { x: a4, y: s4, event: i4 });
        };
      }
      if (this.rectSelection.isSelected = t4, this.rectSelection.set = this.rectSelection.set || this.parent.set(), this.rectSelection.set.get(0) || this.rectSelection.set.add(this.nested.rect(i3.width, i3.height).addClass(this.options.classRect)), this.options.points.length && this.rectSelection.set.length() < 2) {
        this.options.points.map(function(t5, s4) {
          var r4 = e4.pointCoords(t5, i3), o3 = e4.drawPoint(r4.x, r4.y).attr("class", e4.options.classPoints + "_" + t5).on("mousedown", a3(t5)).on("touchstart", a3(t5));
          e4.rectSelection.set.add(o3);
        }), this.rectSelection.set.each(function() {
          this.addClass(e4.options.classPoints);
        });
      }
      if (this.options.rotationPoint && (this.options.points && !this.rectSelection.set.get(9) || !this.options.points && !this.rectSelection.set.get(1))) {
        var s3 = function(t5) {
          (t5 = t5 || window.event).preventDefault ? t5.preventDefault() : t5.returnValue = false, t5.stopPropagation();
          var i4 = t5.pageX || t5.touches[0].pageX, a4 = t5.pageY || t5.touches[0].pageY;
          e4.el.fire("rot", { x: i4, y: a4, event: t5 });
        }, r3 = this.drawPoint(i3.width / 2, 20).attr("class", this.options.classPoints + "_rot").on("touchstart", s3).on("mousedown", s3);
        this.rectSelection.set.add(r3);
      }
    }, t3.prototype.handler = function() {
      var t4 = this.el.bbox();
      this.nested.matrix(new SVG.Matrix(this.el).translate(t4.x, t4.y)), this.rectSelection.isSelected && this.updateRectSelection(), this.pointSelection.isSelected && this.updatePointSelection();
    }, t3.prototype.observe = function() {
      var t4 = this;
      if (MutationObserver)
        if (this.rectSelection.isSelected || this.pointSelection.isSelected)
          this.observerInst = this.observerInst || new MutationObserver(function() {
            t4.handler();
          }), this.observerInst.observe(this.el.node, { attributes: true });
        else
          try {
            this.observerInst.disconnect(), delete this.observerInst;
          } catch (t5) {
          }
      else
        this.el.off("DOMAttrModified.select"), (this.rectSelection.isSelected || this.pointSelection.isSelected) && this.el.on("DOMAttrModified.select", function() {
          t4.handler();
        });
    }, t3.prototype.cleanup = function() {
      !this.rectSelection.isSelected && this.rectSelection.set && (this.rectSelection.set.each(function() {
        this.remove();
      }), this.rectSelection.set.clear(), delete this.rectSelection.set), !this.pointSelection.isSelected && this.pointSelection.set && (this.pointSelection.set.each(function() {
        this.remove();
      }), this.pointSelection.set.clear(), delete this.pointSelection.set), this.pointSelection.isSelected || this.rectSelection.isSelected || (this.nested.remove(), delete this.nested);
    }, SVG.extend(SVG.Element, { selectize: function(e4, i3) {
      return "object" == typeof e4 && (i3 = e4, e4 = true), (this.remember("_selectHandler") || new t3(this)).init(void 0 === e4 || e4, i3 || {}), this;
    } }), SVG.Element.prototype.selectize.defaults = { points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"], pointsExclude: [], classRect: "svg_select_boundingRect", classPoints: "svg_select_points", pointSize: 7, rotationPoint: true, deepSelect: false, pointType: "circle" };
  }(), function() {
    (function() {
      function t3(t4) {
        t4.remember("_resizeHandler", this), this.el = t4, this.parameters = {}, this.lastUpdateCall = null, this.p = t4.doc().node.createSVGPoint();
      }
      t3.prototype.transformPoint = function(t4, e4, i3) {
        return this.p.x = t4 - (this.offset.x - window.pageXOffset), this.p.y = e4 - (this.offset.y - window.pageYOffset), this.p.matrixTransform(i3 || this.m);
      }, t3.prototype._extractPosition = function(t4) {
        return { x: null != t4.clientX ? t4.clientX : t4.touches[0].clientX, y: null != t4.clientY ? t4.clientY : t4.touches[0].clientY };
      }, t3.prototype.init = function(t4) {
        var e4 = this;
        if (this.stop(), "stop" !== t4) {
          for (var i3 in this.options = {}, this.el.resize.defaults)
            this.options[i3] = this.el.resize.defaults[i3], void 0 !== t4[i3] && (this.options[i3] = t4[i3]);
          this.el.on("lt.resize", function(t5) {
            e4.resize(t5 || window.event);
          }), this.el.on("rt.resize", function(t5) {
            e4.resize(t5 || window.event);
          }), this.el.on("rb.resize", function(t5) {
            e4.resize(t5 || window.event);
          }), this.el.on("lb.resize", function(t5) {
            e4.resize(t5 || window.event);
          }), this.el.on("t.resize", function(t5) {
            e4.resize(t5 || window.event);
          }), this.el.on("r.resize", function(t5) {
            e4.resize(t5 || window.event);
          }), this.el.on("b.resize", function(t5) {
            e4.resize(t5 || window.event);
          }), this.el.on("l.resize", function(t5) {
            e4.resize(t5 || window.event);
          }), this.el.on("rot.resize", function(t5) {
            e4.resize(t5 || window.event);
          }), this.el.on("point.resize", function(t5) {
            e4.resize(t5 || window.event);
          }), this.update();
        }
      }, t3.prototype.stop = function() {
        return this.el.off("lt.resize"), this.el.off("rt.resize"), this.el.off("rb.resize"), this.el.off("lb.resize"), this.el.off("t.resize"), this.el.off("r.resize"), this.el.off("b.resize"), this.el.off("l.resize"), this.el.off("rot.resize"), this.el.off("point.resize"), this;
      }, t3.prototype.resize = function(t4) {
        var e4 = this;
        this.m = this.el.node.getScreenCTM().inverse(), this.offset = { x: window.pageXOffset, y: window.pageYOffset };
        var i3 = this._extractPosition(t4.detail.event);
        if (this.parameters = { type: this.el.type, p: this.transformPoint(i3.x, i3.y), x: t4.detail.x, y: t4.detail.y, box: this.el.bbox(), rotation: this.el.transform().rotation }, "text" === this.el.type && (this.parameters.fontSize = this.el.attr()["font-size"]), void 0 !== t4.detail.i) {
          var a3 = this.el.array().valueOf();
          this.parameters.i = t4.detail.i, this.parameters.pointCoords = [a3[t4.detail.i][0], a3[t4.detail.i][1]];
        }
        switch (t4.type) {
          case "lt":
            this.calc = function(t5, e6) {
              var i4 = this.snapToGrid(t5, e6);
              if (this.parameters.box.width - i4[0] > 0 && this.parameters.box.height - i4[1] > 0) {
                if ("text" === this.parameters.type)
                  return this.el.move(this.parameters.box.x + i4[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - i4[0]);
                i4 = this.checkAspectRatio(i4), this.el.move(this.parameters.box.x + i4[0], this.parameters.box.y + i4[1]).size(this.parameters.box.width - i4[0], this.parameters.box.height - i4[1]);
              }
            };
            break;
          case "rt":
            this.calc = function(t5, e6) {
              var i4 = this.snapToGrid(t5, e6, 2);
              if (this.parameters.box.width + i4[0] > 0 && this.parameters.box.height - i4[1] > 0) {
                if ("text" === this.parameters.type)
                  return this.el.move(this.parameters.box.x - i4[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + i4[0]);
                i4 = this.checkAspectRatio(i4, true), this.el.move(this.parameters.box.x, this.parameters.box.y + i4[1]).size(this.parameters.box.width + i4[0], this.parameters.box.height - i4[1]);
              }
            };
            break;
          case "rb":
            this.calc = function(t5, e6) {
              var i4 = this.snapToGrid(t5, e6, 0);
              if (this.parameters.box.width + i4[0] > 0 && this.parameters.box.height + i4[1] > 0) {
                if ("text" === this.parameters.type)
                  return this.el.move(this.parameters.box.x - i4[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + i4[0]);
                i4 = this.checkAspectRatio(i4), this.el.move(this.parameters.box.x, this.parameters.box.y).size(this.parameters.box.width + i4[0], this.parameters.box.height + i4[1]);
              }
            };
            break;
          case "lb":
            this.calc = function(t5, e6) {
              var i4 = this.snapToGrid(t5, e6, 1);
              if (this.parameters.box.width - i4[0] > 0 && this.parameters.box.height + i4[1] > 0) {
                if ("text" === this.parameters.type)
                  return this.el.move(this.parameters.box.x + i4[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - i4[0]);
                i4 = this.checkAspectRatio(i4, true), this.el.move(this.parameters.box.x + i4[0], this.parameters.box.y).size(this.parameters.box.width - i4[0], this.parameters.box.height + i4[1]);
              }
            };
            break;
          case "t":
            this.calc = function(t5, e6) {
              var i4 = this.snapToGrid(t5, e6, 2);
              if (this.parameters.box.height - i4[1] > 0) {
                if ("text" === this.parameters.type)
                  return;
                this.el.move(this.parameters.box.x, this.parameters.box.y + i4[1]).height(this.parameters.box.height - i4[1]);
              }
            };
            break;
          case "r":
            this.calc = function(t5, e6) {
              var i4 = this.snapToGrid(t5, e6, 0);
              if (this.parameters.box.width + i4[0] > 0) {
                if ("text" === this.parameters.type)
                  return;
                this.el.move(this.parameters.box.x, this.parameters.box.y).width(this.parameters.box.width + i4[0]);
              }
            };
            break;
          case "b":
            this.calc = function(t5, e6) {
              var i4 = this.snapToGrid(t5, e6, 0);
              if (this.parameters.box.height + i4[1] > 0) {
                if ("text" === this.parameters.type)
                  return;
                this.el.move(this.parameters.box.x, this.parameters.box.y).height(this.parameters.box.height + i4[1]);
              }
            };
            break;
          case "l":
            this.calc = function(t5, e6) {
              var i4 = this.snapToGrid(t5, e6, 1);
              if (this.parameters.box.width - i4[0] > 0) {
                if ("text" === this.parameters.type)
                  return;
                this.el.move(this.parameters.box.x + i4[0], this.parameters.box.y).width(this.parameters.box.width - i4[0]);
              }
            };
            break;
          case "rot":
            this.calc = function(t5, e6) {
              var i4 = t5 + this.parameters.p.x, a4 = e6 + this.parameters.p.y, s3 = Math.atan2(this.parameters.p.y - this.parameters.box.y - this.parameters.box.height / 2, this.parameters.p.x - this.parameters.box.x - this.parameters.box.width / 2), r3 = Math.atan2(a4 - this.parameters.box.y - this.parameters.box.height / 2, i4 - this.parameters.box.x - this.parameters.box.width / 2), o3 = this.parameters.rotation + 180 * (r3 - s3) / Math.PI + this.options.snapToAngle / 2;
              this.el.center(this.parameters.box.cx, this.parameters.box.cy).rotate(o3 - o3 % this.options.snapToAngle, this.parameters.box.cx, this.parameters.box.cy);
            };
            break;
          case "point":
            this.calc = function(t5, e6) {
              var i4 = this.snapToGrid(t5, e6, this.parameters.pointCoords[0], this.parameters.pointCoords[1]), a4 = this.el.array().valueOf();
              a4[this.parameters.i][0] = this.parameters.pointCoords[0] + i4[0], a4[this.parameters.i][1] = this.parameters.pointCoords[1] + i4[1], this.el.plot(a4);
            };
        }
        this.el.fire("resizestart", { dx: this.parameters.x, dy: this.parameters.y, event: t4 }), SVG.on(window, "touchmove.resize", function(t5) {
          e4.update(t5 || window.event);
        }), SVG.on(window, "touchend.resize", function() {
          e4.done();
        }), SVG.on(window, "mousemove.resize", function(t5) {
          e4.update(t5 || window.event);
        }), SVG.on(window, "mouseup.resize", function() {
          e4.done();
        });
      }, t3.prototype.update = function(t4) {
        if (t4) {
          var e4 = this._extractPosition(t4), i3 = this.transformPoint(e4.x, e4.y), a3 = i3.x - this.parameters.p.x, s3 = i3.y - this.parameters.p.y;
          this.lastUpdateCall = [a3, s3], this.calc(a3, s3), this.el.fire("resizing", { dx: a3, dy: s3, event: t4 });
        } else
          this.lastUpdateCall && this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);
      }, t3.prototype.done = function() {
        this.lastUpdateCall = null, SVG.off(window, "mousemove.resize"), SVG.off(window, "mouseup.resize"), SVG.off(window, "touchmove.resize"), SVG.off(window, "touchend.resize"), this.el.fire("resizedone");
      }, t3.prototype.snapToGrid = function(t4, e4, i3, a3) {
        var s3;
        return void 0 !== a3 ? s3 = [(i3 + t4) % this.options.snapToGrid, (a3 + e4) % this.options.snapToGrid] : (i3 = null == i3 ? 3 : i3, s3 = [(this.parameters.box.x + t4 + (1 & i3 ? 0 : this.parameters.box.width)) % this.options.snapToGrid, (this.parameters.box.y + e4 + (2 & i3 ? 0 : this.parameters.box.height)) % this.options.snapToGrid]), t4 < 0 && (s3[0] -= this.options.snapToGrid), e4 < 0 && (s3[1] -= this.options.snapToGrid), t4 -= Math.abs(s3[0]) < this.options.snapToGrid / 2 ? s3[0] : s3[0] - (t4 < 0 ? -this.options.snapToGrid : this.options.snapToGrid), e4 -= Math.abs(s3[1]) < this.options.snapToGrid / 2 ? s3[1] : s3[1] - (e4 < 0 ? -this.options.snapToGrid : this.options.snapToGrid), this.constraintToBox(t4, e4, i3, a3);
      }, t3.prototype.constraintToBox = function(t4, e4, i3, a3) {
        var s3, r3, o3 = this.options.constraint || {};
        return void 0 !== a3 ? (s3 = i3, r3 = a3) : (s3 = this.parameters.box.x + (1 & i3 ? 0 : this.parameters.box.width), r3 = this.parameters.box.y + (2 & i3 ? 0 : this.parameters.box.height)), void 0 !== o3.minX && s3 + t4 < o3.minX && (t4 = o3.minX - s3), void 0 !== o3.maxX && s3 + t4 > o3.maxX && (t4 = o3.maxX - s3), void 0 !== o3.minY && r3 + e4 < o3.minY && (e4 = o3.minY - r3), void 0 !== o3.maxY && r3 + e4 > o3.maxY && (e4 = o3.maxY - r3), [t4, e4];
      }, t3.prototype.checkAspectRatio = function(t4, e4) {
        if (!this.options.saveAspectRatio)
          return t4;
        var i3 = t4.slice(), a3 = this.parameters.box.width / this.parameters.box.height, s3 = this.parameters.box.width + t4[0], r3 = this.parameters.box.height - t4[1], o3 = s3 / r3;
        return o3 < a3 ? (i3[1] = s3 / a3 - this.parameters.box.height, e4 && (i3[1] = -i3[1])) : o3 > a3 && (i3[0] = this.parameters.box.width - r3 * a3, e4 && (i3[0] = -i3[0])), i3;
      }, SVG.extend(SVG.Element, { resize: function(e4) {
        return (this.remember("_resizeHandler") || new t3(this)).init(e4 || {}), this;
      } }), SVG.Element.prototype.resize.defaults = { snapToAngle: 0.1, snapToGrid: 1, constraint: {}, saveAspectRatio: false };
    }).call(this);
  }(), void 0 === window.Apex && (window.Apex = {});
  var Gt = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "initModules", value: function() {
      this.ctx.publicMethods = ["updateOptions", "updateSeries", "appendData", "appendSeries", "isSeriesHidden", "toggleSeries", "showSeries", "hideSeries", "setLocale", "resetSeries", "zoomX", "toggleDataPointSelection", "dataURI", "exportToCSV", "addXaxisAnnotation", "addYaxisAnnotation", "addPointAnnotation", "clearAnnotations", "removeAnnotation", "paper", "destroy"], this.ctx.eventList = ["click", "mousedown", "mousemove", "mouseleave", "touchstart", "touchmove", "touchleave", "mouseup", "touchend"], this.ctx.animations = new b2(this.ctx), this.ctx.axes = new J2(this.ctx), this.ctx.core = new Wt(this.ctx.el, this.ctx), this.ctx.config = new Y3({}), this.ctx.data = new B2(this.ctx), this.ctx.grid = new j(this.ctx), this.ctx.graphics = new m2(this.ctx), this.ctx.coreUtils = new y2(this.ctx), this.ctx.crosshairs = new Q2(this.ctx), this.ctx.events = new Z3(this.ctx), this.ctx.exports = new G2(this.ctx), this.ctx.localization = new $(this.ctx), this.ctx.options = new I2(), this.ctx.responsive = new K2(this.ctx), this.ctx.series = new W2(this.ctx), this.ctx.theme = new tt(this.ctx), this.ctx.formatters = new S2(this.ctx), this.ctx.titleSubtitle = new et(this.ctx), this.ctx.legend = new lt(this.ctx), this.ctx.toolbar = new ht(this.ctx), this.ctx.tooltip = new bt(this.ctx), this.ctx.dimensions = new ot(this.ctx), this.ctx.updateHelpers = new Bt(this.ctx), this.ctx.zoomPanSelection = new ct(this.ctx), this.ctx.w.globals.tooltip = new bt(this.ctx);
    } }]), t3;
  }(), Vt = function() {
    function t3(e4) {
      a2(this, t3), this.ctx = e4, this.w = e4.w;
    }
    return r2(t3, [{ key: "clear", value: function(t4) {
      var e4 = t4.isUpdating;
      this.ctx.zoomPanSelection && this.ctx.zoomPanSelection.destroy(), this.ctx.toolbar && this.ctx.toolbar.destroy(), this.ctx.animations = null, this.ctx.axes = null, this.ctx.annotations = null, this.ctx.core = null, this.ctx.data = null, this.ctx.grid = null, this.ctx.series = null, this.ctx.responsive = null, this.ctx.theme = null, this.ctx.formatters = null, this.ctx.titleSubtitle = null, this.ctx.legend = null, this.ctx.dimensions = null, this.ctx.options = null, this.ctx.crosshairs = null, this.ctx.zoomPanSelection = null, this.ctx.updateHelpers = null, this.ctx.toolbar = null, this.ctx.localization = null, this.ctx.w.globals.tooltip = null, this.clearDomElements({ isUpdating: e4 });
    } }, { key: "killSVG", value: function(t4) {
      t4.each(function(t5, e4) {
        this.removeClass("*"), this.off(), this.stop();
      }, true), t4.ungroup(), t4.clear();
    } }, { key: "clearDomElements", value: function(t4) {
      var e4 = this, i3 = t4.isUpdating, a3 = this.w.globals.dom.Paper.node;
      a3.parentNode && a3.parentNode.parentNode && !i3 && (a3.parentNode.parentNode.style.minHeight = "unset");
      var s3 = this.w.globals.dom.baseEl;
      s3 && this.ctx.eventList.forEach(function(t5) {
        s3.removeEventListener(t5, e4.ctx.events.documentEvent);
      });
      var r3 = this.w.globals.dom;
      if (null !== this.ctx.el)
        for (; this.ctx.el.firstChild; )
          this.ctx.el.removeChild(this.ctx.el.firstChild);
      this.killSVG(r3.Paper), r3.Paper.remove(), r3.elWrap = null, r3.elGraphical = null, r3.elLegendWrap = null, r3.elLegendForeign = null, r3.baseEl = null, r3.elGridRect = null, r3.elGridRectMask = null, r3.elGridRectMarkerMask = null, r3.elForecastMask = null, r3.elNonForecastMask = null, r3.elDefs = null;
    } }]), t3;
  }(), jt = /* @__PURE__ */ new WeakMap();
  var _t = function() {
    function t3(e4, i3) {
      a2(this, t3), this.opts = i3, this.ctx = this, this.w = new R2(i3).init(), this.el = e4, this.w.globals.cuid = x2.randomId(), this.w.globals.chartID = this.w.config.chart.id ? x2.escapeString(this.w.config.chart.id) : this.w.globals.cuid, new Gt(this).initModules(), this.create = x2.bind(this.create, this), this.windowResizeHandler = this._windowResizeHandler.bind(this), this.parentResizeHandler = this._parentResizeCallback.bind(this);
    }
    return r2(t3, [{ key: "render", value: function() {
      var t4 = this;
      return new Promise(function(e4, i3) {
        if (null !== t4.el) {
          void 0 === Apex._chartInstances && (Apex._chartInstances = []), t4.w.config.chart.id && Apex._chartInstances.push({ id: t4.w.globals.chartID, group: t4.w.config.chart.group, chart: t4 }), t4.setLocale(t4.w.config.chart.defaultLocale);
          var a3 = t4.w.config.chart.events.beforeMount;
          "function" == typeof a3 && a3(t4, t4.w), t4.events.fireEvent("beforeMount", [t4, t4.w]), window.addEventListener("resize", t4.windowResizeHandler), function(t5, e6) {
            var i4 = false;
            if (t5.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
              var a4 = t5.getBoundingClientRect();
              "none" !== t5.style.display && 0 !== a4.width || (i4 = true);
            }
            var s4 = new ResizeObserver(function(a5) {
              i4 && e6.call(t5, a5), i4 = true;
            });
            t5.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? Array.from(t5.children).forEach(function(t6) {
              return s4.observe(t6);
            }) : s4.observe(t5), jt.set(e6, s4);
          }(t4.el.parentNode, t4.parentResizeHandler);
          var s3 = t4.el.getRootNode && t4.el.getRootNode(), r3 = x2.is("ShadowRoot", s3), o3 = t4.el.ownerDocument, n3 = r3 ? s3.getElementById("apexcharts-css") : o3.getElementById("apexcharts-css");
          if (!n3) {
            var l3;
            (n3 = document.createElement("style")).id = "apexcharts-css", n3.textContent = '@keyframes opaque {\n  0% {\n      opacity: 0\n  }\n\n  to {\n      opacity: 1\n  }\n}\n\n@keyframes resizeanim {\n  0%,to {\n      opacity: 0\n  }\n}\n\n.apexcharts-canvas {\n  position: relative;\n  user-select: none\n}\n\n.apexcharts-canvas ::-webkit-scrollbar {\n  -webkit-appearance: none;\n  width: 6px\n}\n\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: rgba(0,0,0,.5);\n  box-shadow: 0 0 1px rgba(255,255,255,.5);\n  -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5)\n}\n\n.apexcharts-inner {\n  position: relative\n}\n\n.apexcharts-text tspan {\n  font-family: inherit\n}\n\n.legend-mouseover-inactive {\n  transition: .15s ease all;\n  opacity: .2\n}\n\n.apexcharts-legend-text {\n  padding-left: 15px;\n  margin-left: -15px;\n}\n\n.apexcharts-series-collapsed {\n  opacity: 0\n}\n\n.apexcharts-tooltip {\n  border-radius: 5px;\n  box-shadow: 2px 2px 6px -4px #999;\n  cursor: default;\n  font-size: 14px;\n  left: 62px;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 20px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  white-space: nowrap;\n  z-index: 12;\n  transition: .15s ease all\n}\n\n.apexcharts-tooltip.apexcharts-active {\n  opacity: 1;\n  transition: .15s ease all\n}\n\n.apexcharts-tooltip.apexcharts-theme-light {\n  border: 1px solid #e3e3e3;\n  background: rgba(255,255,255,.96)\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark {\n  color: #fff;\n  background: rgba(30,30,30,.8)\n}\n\n.apexcharts-tooltip * {\n  font-family: inherit\n}\n\n.apexcharts-tooltip-title {\n  padding: 6px;\n  font-size: 15px;\n  margin-bottom: 4px\n}\n\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\n  background: #eceff1;\n  border-bottom: 1px solid #ddd\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\n  background: rgba(0,0,0,.7);\n  border-bottom: 1px solid #333\n}\n\n.apexcharts-tooltip-text-goals-value,.apexcharts-tooltip-text-y-value,.apexcharts-tooltip-text-z-value {\n  display: inline-block;\n  margin-left: 5px;\n  font-weight: 600\n}\n\n.apexcharts-tooltip-text-goals-label:empty,.apexcharts-tooltip-text-goals-value:empty,.apexcharts-tooltip-text-y-label:empty,.apexcharts-tooltip-text-y-value:empty,.apexcharts-tooltip-text-z-value:empty,.apexcharts-tooltip-title:empty {\n  display: none\n}\n\n.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {\n  padding: 6px 0 5px\n}\n\n.apexcharts-tooltip-goals-group,.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {\n  display: flex\n}\n\n.apexcharts-tooltip-text-goals-label:not(:empty),.apexcharts-tooltip-text-goals-value:not(:empty) {\n  margin-top: -6px\n}\n\n.apexcharts-tooltip-marker {\n  width: 12px;\n  height: 12px;\n  position: relative;\n  top: 0;\n  margin-right: 10px;\n  border-radius: 50%\n}\n\n.apexcharts-tooltip-series-group {\n  padding: 0 10px;\n  display: none;\n  text-align: left;\n  justify-content: left;\n  align-items: center\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\n  opacity: 1\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active,.apexcharts-tooltip-series-group:last-child {\n  padding-bottom: 4px\n}\n\n.apexcharts-tooltip-series-group-hidden {\n  opacity: 0;\n  height: 0;\n  line-height: 0;\n  padding: 0!important\n}\n\n.apexcharts-tooltip-y-group {\n  padding: 6px 0 5px\n}\n\n.apexcharts-custom-tooltip,.apexcharts-tooltip-box {\n  padding: 4px 8px\n}\n\n.apexcharts-tooltip-boxPlot {\n  display: flex;\n  flex-direction: column-reverse\n}\n\n.apexcharts-tooltip-box>div {\n  margin: 4px 0\n}\n\n.apexcharts-tooltip-box span.value {\n  font-weight: 700\n}\n\n.apexcharts-tooltip-rangebar {\n  padding: 5px 8px\n}\n\n.apexcharts-tooltip-rangebar .category {\n  font-weight: 600;\n  color: #777\n}\n\n.apexcharts-tooltip-rangebar .series-name {\n  font-weight: 700;\n  display: block;\n  margin-bottom: 5px\n}\n\n.apexcharts-xaxistooltip,.apexcharts-yaxistooltip {\n  opacity: 0;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #eceff1;\n  border: 1px solid #90a4ae\n}\n\n.apexcharts-xaxistooltip {\n  padding: 9px 10px;\n  transition: .15s ease all\n}\n\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\n  background: rgba(0,0,0,.7);\n  border: 1px solid rgba(0,0,0,.5);\n  color: #fff\n}\n\n.apexcharts-xaxistooltip:after,.apexcharts-xaxistooltip:before {\n  left: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none\n}\n\n.apexcharts-xaxistooltip:after {\n  border-color: transparent;\n  border-width: 6px;\n  margin-left: -6px\n}\n\n.apexcharts-xaxistooltip:before {\n  border-color: transparent;\n  border-width: 7px;\n  margin-left: -7px\n}\n\n.apexcharts-xaxistooltip-bottom:after,.apexcharts-xaxistooltip-bottom:before {\n  bottom: 100%\n}\n\n.apexcharts-xaxistooltip-top:after,.apexcharts-xaxistooltip-top:before {\n  top: 100%\n}\n\n.apexcharts-xaxistooltip-bottom:after {\n  border-bottom-color: #eceff1\n}\n\n.apexcharts-xaxistooltip-bottom:before {\n  border-bottom-color: #90a4ae\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\n  border-bottom-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-xaxistooltip-top:after {\n  border-top-color: #eceff1\n}\n\n.apexcharts-xaxistooltip-top:before {\n  border-top-color: #90a4ae\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\n  border-top-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-xaxistooltip.apexcharts-active {\n  opacity: 1;\n  transition: .15s ease all\n}\n\n.apexcharts-yaxistooltip {\n  padding: 4px 10px\n}\n\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\n  background: rgba(0,0,0,.7);\n  border: 1px solid rgba(0,0,0,.5);\n  color: #fff\n}\n\n.apexcharts-yaxistooltip:after,.apexcharts-yaxistooltip:before {\n  top: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none\n}\n\n.apexcharts-yaxistooltip:after {\n  border-color: transparent;\n  border-width: 6px;\n  margin-top: -6px\n}\n\n.apexcharts-yaxistooltip:before {\n  border-color: transparent;\n  border-width: 7px;\n  margin-top: -7px\n}\n\n.apexcharts-yaxistooltip-left:after,.apexcharts-yaxistooltip-left:before {\n  left: 100%\n}\n\n.apexcharts-yaxistooltip-right:after,.apexcharts-yaxistooltip-right:before {\n  right: 100%\n}\n\n.apexcharts-yaxistooltip-left:after {\n  border-left-color: #eceff1\n}\n\n.apexcharts-yaxistooltip-left:before {\n  border-left-color: #90a4ae\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\n  border-left-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-yaxistooltip-right:after {\n  border-right-color: #eceff1\n}\n\n.apexcharts-yaxistooltip-right:before {\n  border-right-color: #90a4ae\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\n  border-right-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-yaxistooltip.apexcharts-active {\n  opacity: 1\n}\n\n.apexcharts-yaxistooltip-hidden {\n  display: none\n}\n\n.apexcharts-xcrosshairs,.apexcharts-ycrosshairs {\n  pointer-events: none;\n  opacity: 0;\n  transition: .15s ease all\n}\n\n.apexcharts-xcrosshairs.apexcharts-active,.apexcharts-ycrosshairs.apexcharts-active {\n  opacity: 1;\n  transition: .15s ease all\n}\n\n.apexcharts-ycrosshairs-hidden {\n  opacity: 0\n}\n\n.apexcharts-selection-rect {\n  cursor: move\n}\n\n.svg_select_boundingRect,.svg_select_points_rot {\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden\n}\n\n.apexcharts-selection-rect+g .svg_select_boundingRect,.apexcharts-selection-rect+g .svg_select_points_rot {\n  opacity: 0;\n  visibility: hidden\n}\n\n.apexcharts-selection-rect+g .svg_select_points_l,.apexcharts-selection-rect+g .svg_select_points_r {\n  cursor: ew-resize;\n  opacity: 1;\n  visibility: visible\n}\n\n.svg_select_points {\n  fill: #efefef;\n  stroke: #333;\n  rx: 2\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-zoom {\n  cursor: crosshair\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-pan {\n  cursor: move\n}\n\n.apexcharts-menu-icon,.apexcharts-pan-icon,.apexcharts-reset-icon,.apexcharts-selection-icon,.apexcharts-toolbar-custom-icon,.apexcharts-zoom-icon,.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  line-height: 24px;\n  color: #6e8192;\n  text-align: center\n}\n\n.apexcharts-menu-icon svg,.apexcharts-reset-icon svg,.apexcharts-zoom-icon svg,.apexcharts-zoomin-icon svg,.apexcharts-zoomout-icon svg {\n  fill: #6e8192\n}\n\n.apexcharts-selection-icon svg {\n  fill: #444;\n  transform: scale(.76)\n}\n\n.apexcharts-theme-dark .apexcharts-menu-icon svg,.apexcharts-theme-dark .apexcharts-pan-icon svg,.apexcharts-theme-dark .apexcharts-reset-icon svg,.apexcharts-theme-dark .apexcharts-selection-icon svg,.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg,.apexcharts-theme-dark .apexcharts-zoom-icon svg,.apexcharts-theme-dark .apexcharts-zoomin-icon svg,.apexcharts-theme-dark .apexcharts-zoomout-icon svg {\n  fill: #f3f4f5\n}\n\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg {\n  fill: #008ffb\n}\n\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg,.apexcharts-theme-light .apexcharts-reset-icon:hover svg,.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg {\n  fill: #333\n}\n\n.apexcharts-menu-icon,.apexcharts-selection-icon {\n  position: relative\n}\n\n.apexcharts-reset-icon {\n  margin-left: 5px\n}\n\n.apexcharts-menu-icon,.apexcharts-reset-icon,.apexcharts-zoom-icon {\n  transform: scale(.85)\n}\n\n.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {\n  transform: scale(.7)\n}\n\n.apexcharts-zoomout-icon {\n  margin-right: 3px\n}\n\n.apexcharts-pan-icon {\n  transform: scale(.62);\n  position: relative;\n  left: 1px;\n  top: 0\n}\n\n.apexcharts-pan-icon svg {\n  fill: #fff;\n  stroke: #6e8192;\n  stroke-width: 2\n}\n\n.apexcharts-pan-icon.apexcharts-selected svg {\n  stroke: #008ffb\n}\n\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\n  stroke: #333\n}\n\n.apexcharts-toolbar {\n  position: absolute;\n  z-index: 11;\n  max-width: 176px;\n  text-align: right;\n  border-radius: 3px;\n  padding: 0 6px 2px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center\n}\n\n.apexcharts-menu {\n  background: #fff;\n  position: absolute;\n  top: 100%;\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  padding: 3px;\n  right: 10px;\n  opacity: 0;\n  min-width: 110px;\n  transition: .15s ease all;\n  pointer-events: none\n}\n\n.apexcharts-menu.apexcharts-menu-open {\n  opacity: 1;\n  pointer-events: all;\n  transition: .15s ease all\n}\n\n.apexcharts-menu-item {\n  padding: 6px 7px;\n  font-size: 12px;\n  cursor: pointer\n}\n\n.apexcharts-theme-light .apexcharts-menu-item:hover {\n  background: #eee\n}\n\n.apexcharts-theme-dark .apexcharts-menu {\n  background: rgba(0,0,0,.7);\n  color: #fff\n}\n\n@media screen and (min-width:768px) {\n  .apexcharts-canvas:hover .apexcharts-toolbar {\n      opacity: 1\n  }\n}\n\n.apexcharts-canvas .apexcharts-element-hidden,.apexcharts-datalabel.apexcharts-element-hidden,.apexcharts-hide .apexcharts-series-points {\n  opacity: 0\n}\n\n.apexcharts-hidden-element-shown {\n  opacity: 1;\n  transition: 0.25s ease all;\n}\n.apexcharts-datalabel,.apexcharts-datalabel-label,.apexcharts-datalabel-value,.apexcharts-datalabels,.apexcharts-pie-label {\n  cursor: default;\n  pointer-events: none\n}\n\n.apexcharts-pie-label-delay {\n  opacity: 0;\n  animation-name: opaque;\n  animation-duration: .3s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease\n}\n\n.apexcharts-radialbar-label {\n  cursor: pointer;\n}\n\n.apexcharts-annotation-rect,.apexcharts-area-series .apexcharts-area,.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-gridline,.apexcharts-line,.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-point-annotation-label,.apexcharts-radar-series path,.apexcharts-radar-series polygon,.apexcharts-toolbar svg,.apexcharts-tooltip .apexcharts-marker,.apexcharts-xaxis-annotation-label,.apexcharts-yaxis-annotation-label,.apexcharts-zoom-rect {\n  pointer-events: none\n}\n\n.apexcharts-marker {\n  transition: .15s ease all\n}\n\n.resize-triggers {\n  animation: 1ms resizeanim;\n  visibility: hidden;\n  opacity: 0;\n  height: 100%;\n  width: 100%;\n  overflow: hidden\n}\n\n.contract-trigger:before,.resize-triggers,.resize-triggers>div {\n  content: " ";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0\n}\n\n.resize-triggers>div {\n  height: 100%;\n  width: 100%;\n  background: #eee;\n  overflow: auto\n}\n\n.contract-trigger:before {\n  overflow: hidden;\n  width: 200%;\n  height: 200%\n}\n\n.apexcharts-bar-goals-markers{\n  pointer-events: none\n}\n\n.apexcharts-bar-shadows{\n  pointer-events: none\n}\n\n.apexcharts-rangebar-goals-markers{\n  pointer-events: none\n}';
            var h3 = (null === (l3 = t4.opts.chart) || void 0 === l3 ? void 0 : l3.nonce) || t4.w.config.chart.nonce;
            h3 && n3.setAttribute("nonce", h3), r3 ? s3.prepend(n3) : o3.head.appendChild(n3);
          }
          var c3 = t4.create(t4.w.config.series, {});
          if (!c3)
            return e4(t4);
          t4.mount(c3).then(function() {
            "function" == typeof t4.w.config.chart.events.mounted && t4.w.config.chart.events.mounted(t4, t4.w), t4.events.fireEvent("mounted", [t4, t4.w]), e4(c3);
          }).catch(function(t5) {
            i3(t5);
          });
        } else
          i3(new Error("Element not found"));
      });
    } }, { key: "create", value: function(t4, e4) {
      var i3 = this.w;
      new Gt(this).initModules();
      var a3 = this.w.globals;
      (a3.noData = false, a3.animationEnded = false, this.responsive.checkResponsiveConfig(e4), i3.config.xaxis.convertedCatToNumeric) && new E2(i3.config).convertCatToNumericXaxis(i3.config, this.ctx);
      if (null === this.el)
        return a3.animationEnded = true, null;
      if (this.core.setupElements(), "treemap" === i3.config.chart.type && (i3.config.grid.show = false, i3.config.yaxis[0].show = false), 0 === a3.svgWidth)
        return a3.animationEnded = true, null;
      var s3 = y2.checkComboSeries(t4, i3.config.chart.type);
      a3.comboCharts = s3.comboCharts, a3.comboBarCount = s3.comboBarCount;
      var r3 = t4.every(function(t5) {
        return t5.data && 0 === t5.data.length;
      });
      (0 === t4.length || r3) && this.series.handleNoData(), this.events.setupEventHandlers(), this.data.parseData(t4), this.theme.init(), new D2(this).setGlobalMarkerSize(), this.formatters.setLabelFormatters(), this.titleSubtitle.draw(), a3.noData && a3.collapsedSeries.length !== a3.series.length && !i3.config.legend.showForSingleSeries || this.legend.init(), this.series.hasAllSeriesEqualX(), a3.axisCharts && (this.core.coreCalculations(), "category" !== i3.config.xaxis.type && this.formatters.setLabelFormatters(), this.ctx.toolbar.minX = i3.globals.minX, this.ctx.toolbar.maxX = i3.globals.maxX), this.formatters.heatmapLabelFormatters(), new y2(this).getLargestMarkerSize(), this.dimensions.plotCoords();
      var o3 = this.core.xySettings();
      this.grid.createGridMask();
      var n3 = this.core.plotChartType(t4, o3), l3 = new N2(this);
      return l3.bringForward(), i3.config.dataLabels.background.enabled && l3.dataLabelsBackground(), this.core.shiftGraphPosition(), { elGraph: n3, xyRatios: o3, dimensions: { plot: { left: i3.globals.translateX, top: i3.globals.translateY, width: i3.globals.gridWidth, height: i3.globals.gridHeight } } };
    } }, { key: "mount", value: function() {
      var t4 = this, e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, i3 = this, a3 = i3.w;
      return new Promise(function(s3, r3) {
        if (null === i3.el)
          return r3(new Error("Not enough data to display or target element not found"));
        (null === e4 || a3.globals.allSeriesCollapsed) && i3.series.handleNoData(), i3.grid = new j(i3);
        var o3, n3, l3 = i3.grid.drawGrid();
        (i3.annotations = new T2(i3), i3.annotations.drawImageAnnos(), i3.annotations.drawTextAnnos(), "back" === a3.config.grid.position) && (l3 && a3.globals.dom.elGraphical.add(l3.el), null != l3 && null !== (o3 = l3.elGridBorders) && void 0 !== o3 && o3.node && a3.globals.dom.elGraphical.add(l3.elGridBorders));
        if (Array.isArray(e4.elGraph))
          for (var h3 = 0; h3 < e4.elGraph.length; h3++)
            a3.globals.dom.elGraphical.add(e4.elGraph[h3]);
        else
          a3.globals.dom.elGraphical.add(e4.elGraph);
        "front" === a3.config.grid.position && (l3 && a3.globals.dom.elGraphical.add(l3.el), null != l3 && null !== (n3 = l3.elGridBorders) && void 0 !== n3 && n3.node && a3.globals.dom.elGraphical.add(l3.elGridBorders));
        "front" === a3.config.xaxis.crosshairs.position && i3.crosshairs.drawXCrosshairs(), "front" === a3.config.yaxis[0].crosshairs.position && i3.crosshairs.drawYCrosshairs(), "treemap" !== a3.config.chart.type && i3.axes.drawAxis(a3.config.chart.type, l3);
        var c3 = new V2(t4.ctx, l3), d3 = new q2(t4.ctx, l3);
        if (null !== l3 && (c3.xAxisLabelCorrections(l3.xAxisTickWidth), d3.setYAxisTextAlignments(), a3.config.yaxis.map(function(t5, e6) {
          -1 === a3.globals.ignoreYAxisIndexes.indexOf(e6) && d3.yAxisTitleRotate(e6, t5.opposite);
        })), i3.annotations.drawAxesAnnotations(), !a3.globals.noData) {
          if (a3.config.tooltip.enabled && !a3.globals.noData && i3.w.globals.tooltip.drawTooltip(e4.xyRatios), a3.globals.axisCharts && (a3.globals.isXNumeric || a3.config.xaxis.convertedCatToNumeric || a3.globals.isRangeBar))
            (a3.config.chart.zoom.enabled || a3.config.chart.selection && a3.config.chart.selection.enabled || a3.config.chart.pan && a3.config.chart.pan.enabled) && i3.zoomPanSelection.init({ xyRatios: e4.xyRatios });
          else {
            var g3 = a3.config.chart.toolbar.tools;
            ["zoom", "zoomin", "zoomout", "selection", "pan", "reset"].forEach(function(t5) {
              g3[t5] = false;
            });
          }
          a3.config.chart.toolbar.show && !a3.globals.allSeriesCollapsed && i3.toolbar.createToolbar();
        }
        a3.globals.memory.methodsToExec.length > 0 && a3.globals.memory.methodsToExec.forEach(function(t5) {
          t5.method(t5.params, false, t5.context);
        }), a3.globals.axisCharts || a3.globals.noData || i3.core.resizeNonAxisCharts(), s3(i3);
      });
    } }, { key: "destroy", value: function() {
      var t4, e4;
      window.removeEventListener("resize", this.windowResizeHandler), this.el.parentNode, t4 = this.parentResizeHandler, (e4 = jt.get(t4)) && (e4.disconnect(), jt.delete(t4));
      var i3 = this.w.config.chart.id;
      i3 && Apex._chartInstances.forEach(function(t5, e6) {
        t5.id === x2.escapeString(i3) && Apex._chartInstances.splice(e6, 1);
      }), new Vt(this.ctx).clear({ isUpdating: false });
    } }, { key: "updateOptions", value: function(t4) {
      var e4 = this, i3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], a3 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], s3 = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], r3 = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4], o3 = this.w;
      return o3.globals.selection = void 0, t4.series && (this.series.resetSeries(false, true, false), t4.series.length && t4.series[0].data && (t4.series = t4.series.map(function(t5, i4) {
        return e4.updateHelpers._extendSeries(t5, i4);
      })), this.updateHelpers.revertDefaultAxisMinMax()), t4.xaxis && (t4 = this.updateHelpers.forceXAxisUpdate(t4)), t4.yaxis && (t4 = this.updateHelpers.forceYAxisUpdate(t4)), o3.globals.collapsedSeriesIndices.length > 0 && this.series.clearPreviousPaths(), t4.theme && (t4 = this.theme.updateThemeOptions(t4)), this.updateHelpers._updateOptions(t4, i3, a3, s3, r3);
    } }, { key: "updateSeries", value: function() {
      var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], e4 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i3 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
      return this.series.resetSeries(false), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(t4, e4, i3);
    } }, { key: "appendSeries", value: function(t4) {
      var e4 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i3 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], a3 = this.w.config.series.slice();
      return a3.push(t4), this.series.resetSeries(false), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(a3, e4, i3);
    } }, { key: "appendData", value: function(t4) {
      var e4 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i3 = this;
      i3.w.globals.dataChanged = true, i3.series.getPreviousPaths();
      for (var a3 = i3.w.config.series.slice(), s3 = 0; s3 < a3.length; s3++)
        if (null !== t4[s3] && void 0 !== t4[s3])
          for (var r3 = 0; r3 < t4[s3].data.length; r3++)
            a3[s3].data.push(t4[s3].data[r3]);
      return i3.w.config.series = a3, e4 && (i3.w.globals.initialSeries = x2.clone(i3.w.config.series)), this.update();
    } }, { key: "update", value: function(t4) {
      var e4 = this;
      return new Promise(function(i3, a3) {
        new Vt(e4.ctx).clear({ isUpdating: true });
        var s3 = e4.create(e4.w.config.series, t4);
        if (!s3)
          return i3(e4);
        e4.mount(s3).then(function() {
          "function" == typeof e4.w.config.chart.events.updated && e4.w.config.chart.events.updated(e4, e4.w), e4.events.fireEvent("updated", [e4, e4.w]), e4.w.globals.isDirty = true, i3(e4);
        }).catch(function(t5) {
          a3(t5);
        });
      });
    } }, { key: "getSyncedCharts", value: function() {
      var t4 = this.getGroupedCharts(), e4 = [this];
      return t4.length && (e4 = [], t4.forEach(function(t5) {
        e4.push(t5);
      })), e4;
    } }, { key: "getGroupedCharts", value: function() {
      var t4 = this;
      return Apex._chartInstances.filter(function(t5) {
        if (t5.group)
          return true;
      }).map(function(e4) {
        return t4.w.config.chart.group === e4.group ? e4.chart : t4;
      });
    } }, { key: "toggleSeries", value: function(t4) {
      return this.series.toggleSeries(t4);
    } }, { key: "highlightSeriesOnLegendHover", value: function(t4, e4) {
      return this.series.toggleSeriesOnHover(t4, e4);
    } }, { key: "showSeries", value: function(t4) {
      this.series.showSeries(t4);
    } }, { key: "hideSeries", value: function(t4) {
      this.series.hideSeries(t4);
    } }, { key: "isSeriesHidden", value: function(t4) {
      this.series.isSeriesHidden(t4);
    } }, { key: "resetSeries", value: function() {
      var t4 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], e4 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
      this.series.resetSeries(t4, e4);
    } }, { key: "addEventListener", value: function(t4, e4) {
      this.events.addEventListener(t4, e4);
    } }, { key: "removeEventListener", value: function(t4, e4) {
      this.events.removeEventListener(t4, e4);
    } }, { key: "addXaxisAnnotation", value: function(t4) {
      var e4 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0, a3 = this;
      i3 && (a3 = i3), a3.annotations.addXaxisAnnotationExternal(t4, e4, a3);
    } }, { key: "addYaxisAnnotation", value: function(t4) {
      var e4 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0, a3 = this;
      i3 && (a3 = i3), a3.annotations.addYaxisAnnotationExternal(t4, e4, a3);
    } }, { key: "addPointAnnotation", value: function(t4) {
      var e4 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0, a3 = this;
      i3 && (a3 = i3), a3.annotations.addPointAnnotationExternal(t4, e4, a3);
    } }, { key: "clearAnnotations", value: function() {
      var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0, e4 = this;
      t4 && (e4 = t4), e4.annotations.clearAnnotations(e4);
    } }, { key: "removeAnnotation", value: function(t4) {
      var e4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0, i3 = this;
      e4 && (i3 = e4), i3.annotations.removeAnnotation(i3, t4);
    } }, { key: "getChartArea", value: function() {
      return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner");
    } }, { key: "getSeriesTotalXRange", value: function(t4, e4) {
      return this.coreUtils.getSeriesTotalsXRange(t4, e4);
    } }, { key: "getHighestValueInSeries", value: function() {
      var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
      return new U2(this.ctx).getMinYMaxY(t4).highestY;
    } }, { key: "getLowestValueInSeries", value: function() {
      var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
      return new U2(this.ctx).getMinYMaxY(t4).lowestY;
    } }, { key: "getSeriesTotal", value: function() {
      return this.w.globals.seriesTotals;
    } }, { key: "toggleDataPointSelection", value: function(t4, e4) {
      return this.updateHelpers.toggleDataPointSelection(t4, e4);
    } }, { key: "zoomX", value: function(t4, e4) {
      this.ctx.toolbar.zoomUpdateOptions(t4, e4);
    } }, { key: "setLocale", value: function(t4) {
      this.localization.setCurrentLocaleValues(t4);
    } }, { key: "dataURI", value: function(t4) {
      return new G2(this.ctx).dataURI(t4);
    } }, { key: "exportToCSV", value: function() {
      var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
      return new G2(this.ctx).exportToCSV(t4);
    } }, { key: "paper", value: function() {
      return this.w.globals.dom.Paper;
    } }, { key: "_parentResizeCallback", value: function() {
      this.w.globals.animationEnded && this.w.config.chart.redrawOnParentResize && this._windowResize();
    } }, { key: "_windowResize", value: function() {
      var t4 = this;
      clearTimeout(this.w.globals.resizeTimer), this.w.globals.resizeTimer = window.setTimeout(function() {
        t4.w.globals.resized = true, t4.w.globals.dataChanged = false, t4.ctx.update();
      }, 150);
    } }, { key: "_windowResizeHandler", value: function() {
      var t4 = this.w.config.chart.redrawOnWindowResize;
      "function" == typeof t4 && (t4 = t4()), t4 && this._windowResize();
    } }], [{ key: "getChartByID", value: function(t4) {
      var e4 = x2.escapeString(t4);
      if (Apex._chartInstances) {
        var i3 = Apex._chartInstances.filter(function(t5) {
          return t5.id === e4;
        })[0];
        return i3 && i3.chart;
      }
    } }, { key: "initOnLoad", value: function() {
      for (var e4 = document.querySelectorAll("[data-apexcharts]"), i3 = 0; i3 < e4.length; i3++) {
        new t3(e4[i3], JSON.parse(e4[i3].getAttribute("data-options"))).render();
      }
    } }, { key: "exec", value: function(t4, e4) {
      var i3 = this.getChartByID(t4);
      if (i3) {
        i3.w.globals.isExecCalled = true;
        var a3 = null;
        if (-1 !== i3.publicMethods.indexOf(e4)) {
          for (var s3 = arguments.length, r3 = new Array(s3 > 2 ? s3 - 2 : 0), o3 = 2; o3 < s3; o3++)
            r3[o3 - 2] = arguments[o3];
          a3 = i3[e4].apply(i3, r3);
        }
        return a3;
      }
    } }, { key: "merge", value: function(t4, e4) {
      return x2.extend(t4, e4);
    } }]), t3;
  }();
  module.exports = _t;
})(apexcharts_common, apexcharts_common.exports);
var apexcharts_commonExports = apexcharts_common.exports;
var propTypes$2 = { exports: {} };
var ReactPropTypesSecret$1 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;
var ReactPropTypesSecret = ReactPropTypesSecret_1;
function emptyFunction() {
}
function emptyFunctionWithReset() {
}
emptyFunctionWithReset.resetWarningCache = emptyFunction;
var factoryWithThrowingShims = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    var err = new Error(
      "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
    );
    err.name = "Invariant Violation";
    throw err;
  }
  shim.isRequired = shim;
  function getShim() {
    return shim;
  }
  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};
{
  propTypes$2.exports = factoryWithThrowingShims();
}
var propTypesExports = propTypes$2.exports;
const PropTypes = /* @__PURE__ */ getDefaultExportFromCjs(propTypesExports);
var _default$1;
Object.defineProperty(reactApexcharts_min, "__esModule", { value: true });
var _typeof$G = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
  return typeof e3;
} : function(e3) {
  return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
}, _extends$x = Object.assign || function(e3) {
  for (var t2 = 1; t2 < arguments.length; t2++) {
    var r2, n2 = arguments[t2];
    for (r2 in n2)
      Object.prototype.hasOwnProperty.call(n2, r2) && (e3[r2] = n2[r2]);
  }
  return e3;
}, _createClass$d = /* @__PURE__ */ function() {
  function n2(e3, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n3 = t2[r2];
      n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e3, n3.key, n3);
    }
  }
  return function(e3, t2, r2) {
    return t2 && n2(e3.prototype, t2), r2 && n2(e3, r2), e3;
  };
}(), _apexcharts = apexcharts_commonExports, _apexcharts2 = _interopRequireDefault$2(_apexcharts), _react$2 = reactExports, _react2$2 = _interopRequireDefault$2(_react$2), _propTypes$2 = propTypesExports, _propTypes2$2 = _interopRequireDefault$2(_propTypes$2);
function _interopRequireDefault$2(e3) {
  return e3 && e3.__esModule ? e3 : { default: e3 };
}
function _defineProperty$D(e3, t2, r2) {
  return t2 in e3 ? Object.defineProperty(e3, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e3[t2] = r2, e3;
}
function _objectWithoutProperties$l(e3, t2) {
  var r2, n2 = {};
  for (r2 in e3)
    0 <= t2.indexOf(r2) || Object.prototype.hasOwnProperty.call(e3, r2) && (n2[r2] = e3[r2]);
  return n2;
}
function _classCallCheck$d(e3, t2) {
  if (!(e3 instanceof t2))
    throw new TypeError("Cannot call a class as a function");
}
function _possibleConstructorReturn$a(e3, t2) {
  if (e3)
    return !t2 || "object" != typeof t2 && "function" != typeof t2 ? e3 : t2;
  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
}
function _inherits$a(e3, t2) {
  if ("function" != typeof t2 && null !== t2)
    throw new TypeError("Super expression must either be null or a function, not " + typeof t2);
  e3.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e3, enumerable: false, writable: true, configurable: true } }), t2 && (Object.setPrototypeOf ? Object.setPrototypeOf(e3, t2) : e3.__proto__ = t2);
}
window.ApexCharts = _apexcharts2.default;
var Charts = function() {
  function r2(e3) {
    _classCallCheck$d(this, r2);
    var t2 = _possibleConstructorReturn$a(this, (r2.__proto__ || Object.getPrototypeOf(r2)).call(this, e3));
    return _react2$2.default.createRef ? t2.chartRef = _react2$2.default.createRef() : t2.setRef = function(e4) {
      return t2.chartRef = e4;
    }, t2.chart = null, t2;
  }
  return _inherits$a(r2, _react$2.Component), _createClass$d(r2, [{ key: "render", value: function() {
    var e3 = _objectWithoutProperties$l(this.props, []);
    return _react2$2.default.createElement("div", _extends$x({ ref: _react2$2.default.createRef ? this.chartRef : this.setRef }, e3));
  } }, { key: "componentDidMount", value: function() {
    var e3 = _react2$2.default.createRef ? this.chartRef.current : this.chartRef;
    this.chart = new _apexcharts2.default(e3, this.getConfig()), this.chart.render();
  } }, { key: "getConfig", value: function() {
    var e3 = this.props, t2 = e3.type, r3 = e3.height, n2 = e3.width, o2 = e3.series, e3 = e3.options;
    return this.extend(e3, { chart: { type: t2, height: r3, width: n2 }, series: o2 });
  } }, { key: "isObject", value: function(e3) {
    return e3 && "object" === (void 0 === e3 ? "undefined" : _typeof$G(e3)) && !Array.isArray(e3) && null != e3;
  } }, { key: "extend", value: function(t2, r3) {
    var n2 = this, o2 = ("function" != typeof Object.assign && (Object.assign = function(e3) {
      if (null == e3)
        throw new TypeError("Cannot convert undefined or null to object");
      for (var t3 = Object(e3), r4 = 1; r4 < arguments.length; r4++) {
        var n3 = arguments[r4];
        if (null != n3)
          for (var o3 in n3)
            n3.hasOwnProperty(o3) && (t3[o3] = n3[o3]);
      }
      return t3;
    }), Object.assign({}, t2));
    return this.isObject(t2) && this.isObject(r3) && Object.keys(r3).forEach(function(e3) {
      n2.isObject(r3[e3]) && e3 in t2 ? o2[e3] = n2.extend(t2[e3], r3[e3]) : Object.assign(o2, _defineProperty$D({}, e3, r3[e3]));
    }), o2;
  } }, { key: "componentDidUpdate", value: function(e3) {
    if (!this.chart)
      return null;
    var t2 = this.props, r3 = t2.options, n2 = t2.series, o2 = t2.height, t2 = t2.width, i2 = JSON.stringify(e3.options), a2 = JSON.stringify(e3.series), r3 = JSON.stringify(r3), s2 = JSON.stringify(n2);
    i2 === r3 && a2 === s2 && o2 === e3.height && t2 === e3.width || (a2 !== s2 && i2 === r3 && o2 === e3.height && t2 === e3.width ? this.chart.updateSeries(n2) : this.chart.updateOptions(this.getConfig()));
  } }, { key: "componentWillUnmount", value: function() {
    this.chart && "function" == typeof this.chart.destroy && this.chart.destroy();
  } }]), r2;
}();
(_default$1 = reactApexcharts_min.default = Charts).propTypes = { type: _propTypes2$2.default.string.isRequired, width: _propTypes2$2.default.oneOfType([_propTypes2$2.default.string, _propTypes2$2.default.number]), height: _propTypes2$2.default.oneOfType([_propTypes2$2.default.string, _propTypes2$2.default.number]), series: _propTypes2$2.default.array.isRequired, options: _propTypes2$2.default.object.isRequired }, Charts.defaultProps = { type: "line", width: "100%", height: "auto" };
const Bandwidth = () => {
  const series = [
    {
      name: "In",
      data: [
        {
          x: 1,
          y: 100
        },
        {
          x: 2,
          y: 120
        },
        {
          x: 3,
          y: 110
        },
        {
          x: 4,
          y: 350
        },
        {
          x: 5,
          y: 100
        },
        {
          x: 6,
          y: 690
        }
      ]
    },
    {
      name: "Out",
      data: [
        {
          x: 1,
          y: -50
        },
        {
          x: 2,
          y: -501
        },
        {
          x: 3,
          y: -205
        },
        {
          x: 4,
          y: -550
        },
        {
          x: 5,
          y: -590
        },
        {
          x: 6,
          y: -600
        }
      ]
    }
  ];
  const options = {
    chart: {
      type: "area",
      toolbar: {
        show: true,
        tools: {
          download: false
        }
      }
    },
    dataLabels: {
      enabled: false
    },
    stroke: {
      curve: "smooth"
    },
    tooltip: {
      theme: "dark"
    },
    yaxis: {
      title: {
        text: "Kb/s"
      }
    },
    colors: ["#5eead4", "#fda4af"],
    labels: [
      "11:40 PM",
      "11:45 PM",
      "11:50 PM",
      "11:55 PM",
      "00:00 AM",
      "00:05 AM"
    ]
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "col-span-3 border rounded-lg p-5", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-stone-900 text-xl font-bold", children: "Bandwidth Overtime" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      _default$1,
      {
        options,
        series,
        type: "area",
        height: 300
      }
    ) })
  ] });
};
function FileTypeChart$1() {
  const series = [
    {
      name: "Upload",
      data: [17, 5, 7, 1, 20]
    },
    {
      name: "Download",
      data: [3, 2, 1, 2, 1]
    }
  ];
  const options = {
    chart: {
      id: "basic-bar"
    },
    xaxis: {
      categories: ["JPG", "MP3", "PDF", "EXE", "Others"],
      title: {
        text: "Number of Files"
      }
    },
    plotOptions: {
      bar: {
        horizontal: true
      }
    },
    colors: ["#5eead4", "#fda4af"],
    dataLabels: {
      enabled: false
    }
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "border p-5 rounded-lg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-stone-900 text-xl font-bold", children: "File Types" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      _default$1,
      {
        options,
        series,
        type: "bar",
        height: 300
      }
    ) })
  ] });
}
function FileTypeChart() {
  const series = [
    {
      name: "Mon",
      data: [40, 28, 37, 75, 45, 23, 96, 22, 45, 32]
    },
    {
      name: "Tue",
      data: [40, 28, 37, 75, 45, 23, 96, 22, 45, 32]
    },
    {
      name: "Wed",
      data: [40, 28, 37, 75, 45, 23, 96, 22, 45, 32]
    },
    {
      name: "Thu",
      data: [40, 28, 37, 75, 45, 23, 96, 22, 45, 32]
    },
    {
      name: "Fri",
      data: [40, 28, 37, 75, 45, 23, 96, 22, 45, 32]
    },
    {
      name: "Sat",
      data: [40, 28, 37, 75, 45, 23, 96, 22, 45, 32]
    },
    {
      name: "Sun",
      data: [40, 28, 37, 75, 45, 23, 96, 22, 45, 32]
    }
  ];
  const options = {
    chart: {
      type: "heatmap"
    },
    colors: ["#5eead4"],
    dataLabels: {
      enabled: false
    },
    labels: [
      "Apr 1",
      "Mar 25",
      "Mar 18",
      "Mar 11",
      "Mar 4",
      "Feb 26",
      "Feb 19",
      "Feb 12",
      "Feb 5",
      "Jan 29"
    ].reverse(),
    xaxis: {
      title: {
        text: "Weeks"
      }
    }
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "border p-5 rounded-lg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-stone-900 text-xl font-bold", children: "Activity" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      _default$1,
      {
        options,
        series: series.reverse(),
        type: "heatmap",
        height: 300
      }
    ) })
  ] });
}
function StatsPageContent() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "size-full overflow-y-auto p-7", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "grid grid-cols-5 gap-7", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(StatsCardContainer, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Bandwidth, {})
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "grid grid-cols-2 gap-7 mt-7", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(FileTypeChart$1, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(FileTypeChart, {})
    ] })
  ] });
}
const StatsPage = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { id: "stats-page", className: "size-full flex flex-col", children: /* @__PURE__ */ jsxRuntimeExports.jsx(StatsPageContent, {}) });
};
const $1746a345f3d73bb7$var$useReactId = React$1["useId".toString()] || (() => void 0);
let $1746a345f3d73bb7$var$count = 0;
function $1746a345f3d73bb7$export$f680877a34711e37(deterministicId) {
  const [id2, setId] = reactExports.useState($1746a345f3d73bb7$var$useReactId());
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (!deterministicId)
      setId(
        (reactId) => reactId !== null && reactId !== void 0 ? reactId : String($1746a345f3d73bb7$var$count++)
      );
  }, [
    deterministicId
  ]);
  return deterministicId || (id2 ? `radix-${id2}` : "");
}
function $addc16e1bbe58fd0$export$3a72a57244d6e765(onEscapeKeyDownProp, ownerDocument = globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) {
  const onEscapeKeyDown = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onEscapeKeyDownProp);
  reactExports.useEffect(() => {
    const handleKeyDown = (event) => {
      if (event.key === "Escape")
        onEscapeKeyDown(event);
    };
    ownerDocument.addEventListener("keydown", handleKeyDown);
    return () => ownerDocument.removeEventListener("keydown", handleKeyDown);
  }, [
    onEscapeKeyDown,
    ownerDocument
  ]);
}
const $5cb92bef7577960e$var$CONTEXT_UPDATE = "dismissableLayer.update";
const $5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE = "dismissableLayer.pointerDownOutside";
const $5cb92bef7577960e$var$FOCUS_OUTSIDE = "dismissableLayer.focusOutside";
let $5cb92bef7577960e$var$originalBodyPointerEvents;
const $5cb92bef7577960e$var$DismissableLayerContext = /* @__PURE__ */ reactExports.createContext({
  layers: /* @__PURE__ */ new Set(),
  layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
  branches: /* @__PURE__ */ new Set()
});
const $5cb92bef7577960e$export$177fb62ff3ec1f22 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  var _node$ownerDocument;
  const { disableOutsidePointerEvents = false, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, onDismiss, ...layerProps } = props;
  const context = reactExports.useContext($5cb92bef7577960e$var$DismissableLayerContext);
  const [node1, setNode] = reactExports.useState(null);
  const ownerDocument = (_node$ownerDocument = node1 === null || node1 === void 0 ? void 0 : node1.ownerDocument) !== null && _node$ownerDocument !== void 0 ? _node$ownerDocument : globalThis === null || globalThis === void 0 ? void 0 : globalThis.document;
  const [, force] = reactExports.useState({});
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setNode(node)
  );
  const layers = Array.from(context.layers);
  const [highestLayerWithOutsidePointerEventsDisabled] = [
    ...context.layersWithOutsidePointerEventsDisabled
  ].slice(-1);
  const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled);
  const index2 = node1 ? layers.indexOf(node1) : -1;
  const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;
  const isPointerEventsEnabled = index2 >= highestLayerWithOutsidePointerEventsDisabledIndex;
  const pointerDownOutside = $5cb92bef7577960e$var$usePointerDownOutside((event) => {
    const target = event.target;
    const isPointerDownOnBranch = [
      ...context.branches
    ].some(
      (branch) => branch.contains(target)
    );
    if (!isPointerEventsEnabled || isPointerDownOnBranch)
      return;
    onPointerDownOutside === null || onPointerDownOutside === void 0 || onPointerDownOutside(event);
    onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);
    if (!event.defaultPrevented)
      onDismiss === null || onDismiss === void 0 || onDismiss();
  }, ownerDocument);
  const focusOutside = $5cb92bef7577960e$var$useFocusOutside((event) => {
    const target = event.target;
    const isFocusInBranch = [
      ...context.branches
    ].some(
      (branch) => branch.contains(target)
    );
    if (isFocusInBranch)
      return;
    onFocusOutside === null || onFocusOutside === void 0 || onFocusOutside(event);
    onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);
    if (!event.defaultPrevented)
      onDismiss === null || onDismiss === void 0 || onDismiss();
  }, ownerDocument);
  $addc16e1bbe58fd0$export$3a72a57244d6e765((event) => {
    const isHighestLayer = index2 === context.layers.size - 1;
    if (!isHighestLayer)
      return;
    onEscapeKeyDown === null || onEscapeKeyDown === void 0 || onEscapeKeyDown(event);
    if (!event.defaultPrevented && onDismiss) {
      event.preventDefault();
      onDismiss();
    }
  }, ownerDocument);
  reactExports.useEffect(() => {
    if (!node1)
      return;
    if (disableOutsidePointerEvents) {
      if (context.layersWithOutsidePointerEventsDisabled.size === 0) {
        $5cb92bef7577960e$var$originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;
        ownerDocument.body.style.pointerEvents = "none";
      }
      context.layersWithOutsidePointerEventsDisabled.add(node1);
    }
    context.layers.add(node1);
    $5cb92bef7577960e$var$dispatchUpdate();
    return () => {
      if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1)
        ownerDocument.body.style.pointerEvents = $5cb92bef7577960e$var$originalBodyPointerEvents;
    };
  }, [
    node1,
    ownerDocument,
    disableOutsidePointerEvents,
    context
  ]);
  reactExports.useEffect(() => {
    return () => {
      if (!node1)
        return;
      context.layers.delete(node1);
      context.layersWithOutsidePointerEventsDisabled.delete(node1);
      $5cb92bef7577960e$var$dispatchUpdate();
    };
  }, [
    node1,
    context
  ]);
  reactExports.useEffect(() => {
    const handleUpdate = () => force({});
    document.addEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate);
    return () => document.removeEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate);
  }, []);
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({}, layerProps, {
    ref: composedRefs,
    style: {
      pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? "auto" : "none" : void 0,
      ...props.style
    },
    onFocusCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocusCapture, focusOutside.onFocusCapture),
    onBlurCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onBlurCapture, focusOutside.onBlurCapture),
    onPointerDownCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownCapture, pointerDownOutside.onPointerDownCapture)
  }));
});
const $5cb92bef7577960e$export$4d5eb2109db14228 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const context = reactExports.useContext($5cb92bef7577960e$var$DismissableLayerContext);
  const ref = reactExports.useRef(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  reactExports.useEffect(() => {
    const node = ref.current;
    if (node) {
      context.branches.add(node);
      return () => {
        context.branches.delete(node);
      };
    }
  }, [
    context.branches
  ]);
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({}, props, {
    ref: composedRefs
  }));
});
function $5cb92bef7577960e$var$usePointerDownOutside(onPointerDownOutside, ownerDocument = globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) {
  const handlePointerDownOutside = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onPointerDownOutside);
  const isPointerInsideReactTreeRef = reactExports.useRef(false);
  const handleClickRef = reactExports.useRef(() => {
  });
  reactExports.useEffect(() => {
    const handlePointerDown = (event) => {
      if (event.target && !isPointerInsideReactTreeRef.current) {
        let handleAndDispatchPointerDownOutsideEvent2 = function() {
          $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE, handlePointerDownOutside, eventDetail, {
            discrete: true
          });
        };
        var handleAndDispatchPointerDownOutsideEvent = handleAndDispatchPointerDownOutsideEvent2;
        const eventDetail = {
          originalEvent: event
        };
        if (event.pointerType === "touch") {
          ownerDocument.removeEventListener("click", handleClickRef.current);
          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent2;
          ownerDocument.addEventListener("click", handleClickRef.current, {
            once: true
          });
        } else
          handleAndDispatchPointerDownOutsideEvent2();
      } else
        ownerDocument.removeEventListener("click", handleClickRef.current);
      isPointerInsideReactTreeRef.current = false;
    };
    const timerId = window.setTimeout(() => {
      ownerDocument.addEventListener("pointerdown", handlePointerDown);
    }, 0);
    return () => {
      window.clearTimeout(timerId);
      ownerDocument.removeEventListener("pointerdown", handlePointerDown);
      ownerDocument.removeEventListener("click", handleClickRef.current);
    };
  }, [
    ownerDocument,
    handlePointerDownOutside
  ]);
  return {
    // ensures we check React component tree (not just DOM tree)
    onPointerDownCapture: () => isPointerInsideReactTreeRef.current = true
  };
}
function $5cb92bef7577960e$var$useFocusOutside(onFocusOutside, ownerDocument = globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) {
  const handleFocusOutside = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onFocusOutside);
  const isFocusInsideReactTreeRef = reactExports.useRef(false);
  reactExports.useEffect(() => {
    const handleFocus = (event) => {
      if (event.target && !isFocusInsideReactTreeRef.current) {
        const eventDetail = {
          originalEvent: event
        };
        $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {
          discrete: false
        });
      }
    };
    ownerDocument.addEventListener("focusin", handleFocus);
    return () => ownerDocument.removeEventListener("focusin", handleFocus);
  }, [
    ownerDocument,
    handleFocusOutside
  ]);
  return {
    onFocusCapture: () => isFocusInsideReactTreeRef.current = true,
    onBlurCapture: () => isFocusInsideReactTreeRef.current = false
  };
}
function $5cb92bef7577960e$var$dispatchUpdate() {
  const event = new CustomEvent($5cb92bef7577960e$var$CONTEXT_UPDATE);
  document.dispatchEvent(event);
}
function $5cb92bef7577960e$var$handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {
  const target = detail.originalEvent.target;
  const event = new CustomEvent(name, {
    bubbles: false,
    cancelable: true,
    detail
  });
  if (handler)
    target.addEventListener(name, handler, {
      once: true
    });
  if (discrete)
    $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, event);
  else
    target.dispatchEvent(event);
}
const $5cb92bef7577960e$export$be92b6f5f03c0fe9 = $5cb92bef7577960e$export$177fb62ff3ec1f22;
const $5cb92bef7577960e$export$aecb2ddcb55c95be = $5cb92bef7577960e$export$4d5eb2109db14228;
const $d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT = "focusScope.autoFocusOnMount";
const $d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT = "focusScope.autoFocusOnUnmount";
const $d3863c46a17e8a28$var$EVENT_OPTIONS = {
  bubbles: false,
  cancelable: true
};
const $d3863c46a17e8a28$export$20e40289641fbbb6 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { loop = false, trapped = false, onMountAutoFocus: onMountAutoFocusProp, onUnmountAutoFocus: onUnmountAutoFocusProp, ...scopeProps } = props;
  const [container1, setContainer] = reactExports.useState(null);
  const onMountAutoFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onMountAutoFocusProp);
  const onUnmountAutoFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onUnmountAutoFocusProp);
  const lastFocusedElementRef = reactExports.useRef(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setContainer(node)
  );
  const focusScope = reactExports.useRef({
    paused: false,
    pause() {
      this.paused = true;
    },
    resume() {
      this.paused = false;
    }
  }).current;
  reactExports.useEffect(() => {
    if (trapped) {
      let handleFocusIn2 = function(event) {
        if (focusScope.paused || !container1)
          return;
        const target = event.target;
        if (container1.contains(target))
          lastFocusedElementRef.current = target;
        else
          $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {
            select: true
          });
      }, handleFocusOut2 = function(event) {
        if (focusScope.paused || !container1)
          return;
        const relatedTarget = event.relatedTarget;
        if (relatedTarget === null)
          return;
        if (!container1.contains(relatedTarget))
          $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {
            select: true
          });
      }, handleMutations2 = function(mutations) {
        const focusedElement = document.activeElement;
        if (focusedElement !== document.body)
          return;
        for (const mutation of mutations)
          if (mutation.removedNodes.length > 0)
            $d3863c46a17e8a28$var$focus(container1);
      };
      var handleFocusIn = handleFocusIn2, handleFocusOut = handleFocusOut2, handleMutations = handleMutations2;
      document.addEventListener("focusin", handleFocusIn2);
      document.addEventListener("focusout", handleFocusOut2);
      const mutationObserver = new MutationObserver(handleMutations2);
      if (container1)
        mutationObserver.observe(container1, {
          childList: true,
          subtree: true
        });
      return () => {
        document.removeEventListener("focusin", handleFocusIn2);
        document.removeEventListener("focusout", handleFocusOut2);
        mutationObserver.disconnect();
      };
    }
  }, [
    trapped,
    container1,
    focusScope.paused
  ]);
  reactExports.useEffect(() => {
    if (container1) {
      $d3863c46a17e8a28$var$focusScopesStack.add(focusScope);
      const previouslyFocusedElement = document.activeElement;
      const hasFocusedCandidate = container1.contains(previouslyFocusedElement);
      if (!hasFocusedCandidate) {
        const mountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);
        container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
        container1.dispatchEvent(mountEvent);
        if (!mountEvent.defaultPrevented) {
          $d3863c46a17e8a28$var$focusFirst($d3863c46a17e8a28$var$removeLinks($d3863c46a17e8a28$var$getTabbableCandidates(container1)), {
            select: true
          });
          if (document.activeElement === previouslyFocusedElement)
            $d3863c46a17e8a28$var$focus(container1);
        }
      }
      return () => {
        container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
        setTimeout(() => {
          const unmountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);
          container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
          container1.dispatchEvent(unmountEvent);
          if (!unmountEvent.defaultPrevented)
            $d3863c46a17e8a28$var$focus(previouslyFocusedElement !== null && previouslyFocusedElement !== void 0 ? previouslyFocusedElement : document.body, {
              select: true
            });
          container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
          $d3863c46a17e8a28$var$focusScopesStack.remove(focusScope);
        }, 0);
      };
    }
  }, [
    container1,
    onMountAutoFocus,
    onUnmountAutoFocus,
    focusScope
  ]);
  const handleKeyDown = reactExports.useCallback((event) => {
    if (!loop && !trapped)
      return;
    if (focusScope.paused)
      return;
    const isTabKey = event.key === "Tab" && !event.altKey && !event.ctrlKey && !event.metaKey;
    const focusedElement = document.activeElement;
    if (isTabKey && focusedElement) {
      const container2 = event.currentTarget;
      const [first, last2] = $d3863c46a17e8a28$var$getTabbableEdges(container2);
      const hasTabbableElementsInside = first && last2;
      if (!hasTabbableElementsInside) {
        if (focusedElement === container2)
          event.preventDefault();
      } else {
        if (!event.shiftKey && focusedElement === last2) {
          event.preventDefault();
          if (loop)
            $d3863c46a17e8a28$var$focus(first, {
              select: true
            });
        } else if (event.shiftKey && focusedElement === first) {
          event.preventDefault();
          if (loop)
            $d3863c46a17e8a28$var$focus(last2, {
              select: true
            });
        }
      }
    }
  }, [
    loop,
    trapped,
    focusScope.paused
  ]);
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    tabIndex: -1
  }, scopeProps, {
    ref: composedRefs,
    onKeyDown: handleKeyDown
  }));
});
function $d3863c46a17e8a28$var$focusFirst(candidates, { select: select2 = false } = {}) {
  const previouslyFocusedElement = document.activeElement;
  for (const candidate of candidates) {
    $d3863c46a17e8a28$var$focus(candidate, {
      select: select2
    });
    if (document.activeElement !== previouslyFocusedElement)
      return;
  }
}
function $d3863c46a17e8a28$var$getTabbableEdges(container2) {
  const candidates = $d3863c46a17e8a28$var$getTabbableCandidates(container2);
  const first = $d3863c46a17e8a28$var$findVisible(candidates, container2);
  const last2 = $d3863c46a17e8a28$var$findVisible(candidates.reverse(), container2);
  return [
    first,
    last2
  ];
}
function $d3863c46a17e8a28$var$getTabbableCandidates(container2) {
  const nodes = [];
  const walker = document.createTreeWalker(container2, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      const isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      if (node.disabled || node.hidden || isHiddenInput)
        return NodeFilter.FILTER_SKIP;
      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  while (walker.nextNode())
    nodes.push(walker.currentNode);
  return nodes;
}
function $d3863c46a17e8a28$var$findVisible(elements, container2) {
  for (const element of elements) {
    if (!$d3863c46a17e8a28$var$isHidden(element, {
      upTo: container2
    }))
      return element;
  }
}
function $d3863c46a17e8a28$var$isHidden(node, { upTo }) {
  if (getComputedStyle(node).visibility === "hidden")
    return true;
  while (node) {
    if (upTo !== void 0 && node === upTo)
      return false;
    if (getComputedStyle(node).display === "none")
      return true;
    node = node.parentElement;
  }
  return false;
}
function $d3863c46a17e8a28$var$isSelectableInput(element) {
  return element instanceof HTMLInputElement && "select" in element;
}
function $d3863c46a17e8a28$var$focus(element, { select: select2 = false } = {}) {
  if (element && element.focus) {
    const previouslyFocusedElement = document.activeElement;
    element.focus({
      preventScroll: true
    });
    if (element !== previouslyFocusedElement && $d3863c46a17e8a28$var$isSelectableInput(element) && select2)
      element.select();
  }
}
const $d3863c46a17e8a28$var$focusScopesStack = $d3863c46a17e8a28$var$createFocusScopesStack();
function $d3863c46a17e8a28$var$createFocusScopesStack() {
  let stack = [];
  return {
    add(focusScope) {
      const activeFocusScope = stack[0];
      if (focusScope !== activeFocusScope)
        activeFocusScope === null || activeFocusScope === void 0 || activeFocusScope.pause();
      stack = $d3863c46a17e8a28$var$arrayRemove(stack, focusScope);
      stack.unshift(focusScope);
    },
    remove(focusScope) {
      var _stack$;
      stack = $d3863c46a17e8a28$var$arrayRemove(stack, focusScope);
      (_stack$ = stack[0]) === null || _stack$ === void 0 || _stack$.resume();
    }
  };
}
function $d3863c46a17e8a28$var$arrayRemove(array2, item) {
  const updatedArray = [
    ...array2
  ];
  const index2 = updatedArray.indexOf(item);
  if (index2 !== -1)
    updatedArray.splice(index2, 1);
  return updatedArray;
}
function $d3863c46a17e8a28$var$removeLinks(items2) {
  return items2.filter(
    (item) => item.tagName !== "A"
  );
}
const $f1701beae083dbae$export$602eac185826482c = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  var _globalThis$document;
  const { container: container2 = globalThis === null || globalThis === void 0 ? void 0 : (_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 ? void 0 : _globalThis$document.body, ...portalProps } = props;
  return container2 ? /* @__PURE__ */ ReactDOM.createPortal(/* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({}, portalProps, {
    ref: forwardedRef
  })), container2) : null;
});
let $3db38b7d1fb3fe6a$var$count = 0;
function $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c() {
  reactExports.useEffect(() => {
    var _edgeGuards$, _edgeGuards$2;
    const edgeGuards = document.querySelectorAll("[data-radix-focus-guard]");
    document.body.insertAdjacentElement("afterbegin", (_edgeGuards$ = edgeGuards[0]) !== null && _edgeGuards$ !== void 0 ? _edgeGuards$ : $3db38b7d1fb3fe6a$var$createFocusGuard());
    document.body.insertAdjacentElement("beforeend", (_edgeGuards$2 = edgeGuards[1]) !== null && _edgeGuards$2 !== void 0 ? _edgeGuards$2 : $3db38b7d1fb3fe6a$var$createFocusGuard());
    $3db38b7d1fb3fe6a$var$count++;
    return () => {
      if ($3db38b7d1fb3fe6a$var$count === 1)
        document.querySelectorAll("[data-radix-focus-guard]").forEach(
          (node) => node.remove()
        );
      $3db38b7d1fb3fe6a$var$count--;
    };
  }, []);
}
function $3db38b7d1fb3fe6a$var$createFocusGuard() {
  const element = document.createElement("span");
  element.setAttribute("data-radix-focus-guard", "");
  element.tabIndex = 0;
  element.style.cssText = "outline: none; opacity: 0; position: fixed; pointer-events: none";
  return element;
}
var __assign = function() {
  __assign = Object.assign || function __assign2(t2) {
    for (var s2, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s2 = arguments[i2];
      for (var p2 in s2)
        if (Object.prototype.hasOwnProperty.call(s2, p2))
          t2[p2] = s2[p2];
    }
    return t2;
  };
  return __assign.apply(this, arguments);
};
function __rest(s2, e3) {
  var t2 = {};
  for (var p2 in s2)
    if (Object.prototype.hasOwnProperty.call(s2, p2) && e3.indexOf(p2) < 0)
      t2[p2] = s2[p2];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i2 = 0, p2 = Object.getOwnPropertySymbols(s2); i2 < p2.length; i2++) {
      if (e3.indexOf(p2[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p2[i2]))
        t2[p2[i2]] = s2[p2[i2]];
    }
  return t2;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i2 = 0, l2 = from.length, ar; i2 < l2; i2++) {
      if (ar || !(i2 in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i2);
        ar[i2] = from[i2];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
}
typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message) {
  var e3 = new Error(message);
  return e3.name = "SuppressedError", e3.error = error, e3.suppressed = suppressed, e3;
};
var zeroRightClassName = "right-scroll-bar-position";
var fullWidthClassName = "width-before-scroll-bar";
var noScrollbarsClassName = "with-scroll-bars-hidden";
var removedBarSizeVariable = "--removed-body-scroll-bar-size";
function assignRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
  return ref;
}
function useCallbackRef(initialValue, callback) {
  var ref = reactExports.useState(function() {
    return {
      // value
      value: initialValue,
      // last callback
      callback,
      // "memoized" public interface
      facade: {
        get current() {
          return ref.value;
        },
        set current(value) {
          var last2 = ref.value;
          if (last2 !== value) {
            ref.value = value;
            ref.callback(value, last2);
          }
        }
      }
    };
  })[0];
  ref.callback = callback;
  return ref.facade;
}
var useIsomorphicLayoutEffect$1 = typeof window !== "undefined" ? reactExports.useLayoutEffect : reactExports.useEffect;
var currentValues = /* @__PURE__ */ new WeakMap();
function useMergeRefs(refs, defaultValue2) {
  var callbackRef = useCallbackRef(defaultValue2 || null, function(newValue) {
    return refs.forEach(function(ref) {
      return assignRef(ref, newValue);
    });
  });
  useIsomorphicLayoutEffect$1(function() {
    var oldValue = currentValues.get(callbackRef);
    if (oldValue) {
      var prevRefs_1 = new Set(oldValue);
      var nextRefs_1 = new Set(refs);
      var current_1 = callbackRef.current;
      prevRefs_1.forEach(function(ref) {
        if (!nextRefs_1.has(ref)) {
          assignRef(ref, null);
        }
      });
      nextRefs_1.forEach(function(ref) {
        if (!prevRefs_1.has(ref)) {
          assignRef(ref, current_1);
        }
      });
    }
    currentValues.set(callbackRef, refs);
  }, [refs]);
  return callbackRef;
}
function ItoI(a2) {
  return a2;
}
function innerCreateMedium(defaults2, middleware) {
  if (middleware === void 0) {
    middleware = ItoI;
  }
  var buffer = [];
  var assigned = false;
  var medium = {
    read: function() {
      if (assigned) {
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      }
      if (buffer.length) {
        return buffer[buffer.length - 1];
      }
      return defaults2;
    },
    useMedium: function(data2) {
      var item = middleware(data2, assigned);
      buffer.push(item);
      return function() {
        buffer = buffer.filter(function(x2) {
          return x2 !== item;
        });
      };
    },
    assignSyncMedium: function(cb2) {
      assigned = true;
      while (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb2);
      }
      buffer = {
        push: function(x2) {
          return cb2(x2);
        },
        filter: function() {
          return buffer;
        }
      };
    },
    assignMedium: function(cb2) {
      assigned = true;
      var pendingQueue = [];
      if (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb2);
        pendingQueue = buffer;
      }
      var executeQueue = function() {
        var cbs2 = pendingQueue;
        pendingQueue = [];
        cbs2.forEach(cb2);
      };
      var cycle = function() {
        return Promise.resolve().then(executeQueue);
      };
      cycle();
      buffer = {
        push: function(x2) {
          pendingQueue.push(x2);
          cycle();
        },
        filter: function(filter2) {
          pendingQueue = pendingQueue.filter(filter2);
          return buffer;
        }
      };
    }
  };
  return medium;
}
function createSidecarMedium(options) {
  if (options === void 0) {
    options = {};
  }
  var medium = innerCreateMedium(null);
  medium.options = __assign({ async: true, ssr: false }, options);
  return medium;
}
var SideCar$1 = function(_a) {
  var sideCar = _a.sideCar, rest = __rest(_a, ["sideCar"]);
  if (!sideCar) {
    throw new Error("Sidecar: please provide `sideCar` property to import the right car");
  }
  var Target = sideCar.read();
  if (!Target) {
    throw new Error("Sidecar medium not found");
  }
  return reactExports.createElement(Target, __assign({}, rest));
};
SideCar$1.isSideCarExport = true;
function exportSidecar(medium, exported) {
  medium.useMedium(exported);
  return SideCar$1;
}
var effectCar = createSidecarMedium();
var nothing = function() {
  return;
};
var RemoveScroll = reactExports.forwardRef(function(props, parentRef) {
  var ref = reactExports.useRef(null);
  var _a = reactExports.useState({
    onScrollCapture: nothing,
    onWheelCapture: nothing,
    onTouchMoveCapture: nothing
  }), callbacks = _a[0], setCallbacks = _a[1];
  var forwardProps = props.forwardProps, children2 = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? "div" : _b, rest = __rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as"]);
  var SideCar2 = sideCar;
  var containerRef = useMergeRefs([ref, parentRef]);
  var containerProps = __assign(__assign({}, rest), callbacks);
  return reactExports.createElement(
    reactExports.Fragment,
    null,
    enabled && reactExports.createElement(SideCar2, { sideCar: effectCar, removeScrollBar, shards, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref }),
    forwardProps ? reactExports.cloneElement(reactExports.Children.only(children2), __assign(__assign({}, containerProps), { ref: containerRef })) : reactExports.createElement(Container, __assign({}, containerProps, { className, ref: containerRef }), children2)
  );
});
RemoveScroll.defaultProps = {
  enabled: true,
  removeScrollBar: true,
  inert: false
};
RemoveScroll.classNames = {
  fullWidth: fullWidthClassName,
  zeroRight: zeroRightClassName
};
var getNonce = function() {
  if (typeof __webpack_nonce__ !== "undefined") {
    return __webpack_nonce__;
  }
  return void 0;
};
function makeStyleTag() {
  if (!document)
    return null;
  var tag = document.createElement("style");
  tag.type = "text/css";
  var nonce = getNonce();
  if (nonce) {
    tag.setAttribute("nonce", nonce);
  }
  return tag;
}
function injectStyles(tag, css) {
  if (tag.styleSheet) {
    tag.styleSheet.cssText = css;
  } else {
    tag.appendChild(document.createTextNode(css));
  }
}
function insertStyleTag(tag) {
  var head = document.head || document.getElementsByTagName("head")[0];
  head.appendChild(tag);
}
var stylesheetSingleton = function() {
  var counter = 0;
  var stylesheet = null;
  return {
    add: function(style) {
      if (counter == 0) {
        if (stylesheet = makeStyleTag()) {
          injectStyles(stylesheet, style);
          insertStyleTag(stylesheet);
        }
      }
      counter++;
    },
    remove: function() {
      counter--;
      if (!counter && stylesheet) {
        stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);
        stylesheet = null;
      }
    }
  };
};
var styleHookSingleton = function() {
  var sheet = stylesheetSingleton();
  return function(styles, isDynamic) {
    reactExports.useEffect(function() {
      sheet.add(styles);
      return function() {
        sheet.remove();
      };
    }, [styles && isDynamic]);
  };
};
var styleSingleton = function() {
  var useStyle = styleHookSingleton();
  var Sheet = function(_a) {
    var styles = _a.styles, dynamic = _a.dynamic;
    useStyle(styles, dynamic);
    return null;
  };
  return Sheet;
};
var zeroGap = {
  left: 0,
  top: 0,
  right: 0,
  gap: 0
};
var parse = function(x2) {
  return parseInt(x2 || "", 10) || 0;
};
var getOffset$1 = function(gapMode) {
  var cs = window.getComputedStyle(document.body);
  var left = cs[gapMode === "padding" ? "paddingLeft" : "marginLeft"];
  var top = cs[gapMode === "padding" ? "paddingTop" : "marginTop"];
  var right = cs[gapMode === "padding" ? "paddingRight" : "marginRight"];
  return [parse(left), parse(top), parse(right)];
};
var getGapWidth = function(gapMode) {
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  if (typeof window === "undefined") {
    return zeroGap;
  }
  var offsets = getOffset$1(gapMode);
  var documentWidth = document.documentElement.clientWidth;
  var windowWidth = window.innerWidth;
  return {
    left: offsets[0],
    top: offsets[1],
    right: offsets[2],
    gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0])
  };
};
var Style = styleSingleton();
var lockAttribute = "data-scroll-locked";
var getStyles = function(_a, allowRelative, gapMode, important) {
  var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  return "\n  .".concat(noScrollbarsClassName, " {\n   overflow: hidden ").concat(important, ";\n   padding-right: ").concat(gap, "px ").concat(important, ";\n  }\n  body[").concat(lockAttribute, "] {\n    overflow: hidden ").concat(important, ";\n    overscroll-behavior: contain;\n    ").concat([
    allowRelative && "position: relative ".concat(important, ";"),
    gapMode === "margin" && "\n    padding-left: ".concat(left, "px;\n    padding-top: ").concat(top, "px;\n    padding-right: ").concat(right, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(gap, "px ").concat(important, ";\n    "),
    gapMode === "padding" && "padding-right: ".concat(gap, "px ").concat(important, ";")
  ].filter(Boolean).join(""), "\n  }\n  \n  .").concat(zeroRightClassName, " {\n    right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " {\n    margin-right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(zeroRightClassName, " .").concat(zeroRightClassName, " {\n    right: 0 ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " .").concat(fullWidthClassName, " {\n    margin-right: 0 ").concat(important, ";\n  }\n  \n  body[").concat(lockAttribute, "] {\n    ").concat(removedBarSizeVariable, ": ").concat(gap, "px;\n  }\n");
};
var getCurrentUseCounter = function() {
  var counter = parseInt(document.body.getAttribute(lockAttribute) || "0", 10);
  return isFinite(counter) ? counter : 0;
};
var useLockAttribute = function() {
  reactExports.useEffect(function() {
    document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());
    return function() {
      var newCounter = getCurrentUseCounter() - 1;
      if (newCounter <= 0) {
        document.body.removeAttribute(lockAttribute);
      } else {
        document.body.setAttribute(lockAttribute, newCounter.toString());
      }
    };
  }, []);
};
var RemoveScrollBar = function(_a) {
  var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? "margin" : _b;
  useLockAttribute();
  var gap = reactExports.useMemo(function() {
    return getGapWidth(gapMode);
  }, [gapMode]);
  return reactExports.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? "!important" : "") });
};
var passiveSupported = false;
if (typeof window !== "undefined") {
  try {
    var options = Object.defineProperty({}, "passive", {
      get: function() {
        passiveSupported = true;
        return true;
      }
    });
    window.addEventListener("test", options, options);
    window.removeEventListener("test", options, options);
  } catch (err) {
    passiveSupported = false;
  }
}
var nonPassive = passiveSupported ? { passive: false } : false;
var alwaysContainsScroll = function(node) {
  return node.tagName === "TEXTAREA";
};
var elementCanBeScrolled = function(node, overflow) {
  var styles = window.getComputedStyle(node);
  return (
    // not-not-scrollable
    styles[overflow] !== "hidden" && // contains scroll inside self
    !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === "visible")
  );
};
var elementCouldBeVScrolled = function(node) {
  return elementCanBeScrolled(node, "overflowY");
};
var elementCouldBeHScrolled = function(node) {
  return elementCanBeScrolled(node, "overflowX");
};
var locationCouldBeScrolled = function(axis, node) {
  var current = node;
  do {
    if (typeof ShadowRoot !== "undefined" && current instanceof ShadowRoot) {
      current = current.host;
    }
    var isScrollable = elementCouldBeScrolled(axis, current);
    if (isScrollable) {
      var _a = getScrollVariables(axis, current), s2 = _a[1], d2 = _a[2];
      if (s2 > d2) {
        return true;
      }
    }
    current = current.parentNode;
  } while (current && current !== document.body);
  return false;
};
var getVScrollVariables = function(_a) {
  var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
  return [
    scrollTop,
    scrollHeight,
    clientHeight
  ];
};
var getHScrollVariables = function(_a) {
  var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;
  return [
    scrollLeft,
    scrollWidth,
    clientWidth
  ];
};
var elementCouldBeScrolled = function(axis, node) {
  return axis === "v" ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);
};
var getScrollVariables = function(axis, node) {
  return axis === "v" ? getVScrollVariables(node) : getHScrollVariables(node);
};
var getDirectionFactor = function(axis, direction) {
  return axis === "h" && direction === "rtl" ? -1 : 1;
};
var handleScroll = function(axis, endTarget, event, sourceDelta, noOverscroll) {
  var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);
  var delta = directionFactor * sourceDelta;
  var target = event.target;
  var targetInLock = endTarget.contains(target);
  var shouldCancelScroll = false;
  var isDeltaPositive = delta > 0;
  var availableScroll = 0;
  var availableScrollTop = 0;
  do {
    var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];
    var elementScroll = scroll_1 - capacity - directionFactor * position;
    if (position || elementScroll) {
      if (elementCouldBeScrolled(axis, target)) {
        availableScroll += elementScroll;
        availableScrollTop += position;
      }
    }
    target = target.parentNode;
  } while (
    // portaled content
    !targetInLock && target !== document.body || // self content
    targetInLock && (endTarget.contains(target) || endTarget === target)
  );
  if (isDeltaPositive && (noOverscroll && availableScroll === 0 || !noOverscroll && delta > availableScroll)) {
    shouldCancelScroll = true;
  } else if (!isDeltaPositive && (noOverscroll && availableScrollTop === 0 || !noOverscroll && -delta > availableScrollTop)) {
    shouldCancelScroll = true;
  }
  return shouldCancelScroll;
};
var getTouchXY = function(event) {
  return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
};
var getDeltaXY = function(event) {
  return [event.deltaX, event.deltaY];
};
var extractRef = function(ref) {
  return ref && "current" in ref ? ref.current : ref;
};
var deltaCompare = function(x2, y2) {
  return x2[0] === y2[0] && x2[1] === y2[1];
};
var generateStyle = function(id2) {
  return "\n  .block-interactivity-".concat(id2, " {pointer-events: none;}\n  .allow-interactivity-").concat(id2, " {pointer-events: all;}\n");
};
var idCounter$1 = 0;
var lockStack = [];
function RemoveScrollSideCar(props) {
  var shouldPreventQueue = reactExports.useRef([]);
  var touchStartRef = reactExports.useRef([0, 0]);
  var activeAxis = reactExports.useRef();
  var id2 = reactExports.useState(idCounter$1++)[0];
  var Style2 = reactExports.useState(function() {
    return styleSingleton();
  })[0];
  var lastProps = reactExports.useRef(props);
  reactExports.useEffect(function() {
    lastProps.current = props;
  }, [props]);
  reactExports.useEffect(function() {
    if (props.inert) {
      document.body.classList.add("block-interactivity-".concat(id2));
      var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);
      allow_1.forEach(function(el2) {
        return el2.classList.add("allow-interactivity-".concat(id2));
      });
      return function() {
        document.body.classList.remove("block-interactivity-".concat(id2));
        allow_1.forEach(function(el2) {
          return el2.classList.remove("allow-interactivity-".concat(id2));
        });
      };
    }
    return;
  }, [props.inert, props.lockRef.current, props.shards]);
  var shouldCancelEvent = reactExports.useCallback(function(event, parent) {
    if ("touches" in event && event.touches.length === 2) {
      return !lastProps.current.allowPinchZoom;
    }
    var touch = getTouchXY(event);
    var touchStart = touchStartRef.current;
    var deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0];
    var deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1];
    var currentAxis;
    var target = event.target;
    var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
    if ("touches" in event && moveDirection === "h" && target.type === "range") {
      return false;
    }
    var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    if (!canBeScrolledInMainDirection) {
      return true;
    }
    if (canBeScrolledInMainDirection) {
      currentAxis = moveDirection;
    } else {
      currentAxis = moveDirection === "v" ? "h" : "v";
      canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    }
    if (!canBeScrolledInMainDirection) {
      return false;
    }
    if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY)) {
      activeAxis.current = currentAxis;
    }
    if (!currentAxis) {
      return true;
    }
    var cancelingAxis = activeAxis.current || currentAxis;
    return handleScroll(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, true);
  }, []);
  var shouldPrevent = reactExports.useCallback(function(_event) {
    var event = _event;
    if (!lockStack.length || lockStack[lockStack.length - 1] !== Style2) {
      return;
    }
    var delta = "deltaY" in event ? getDeltaXY(event) : getTouchXY(event);
    var sourceEvent2 = shouldPreventQueue.current.filter(function(e3) {
      return e3.name === event.type && e3.target === event.target && deltaCompare(e3.delta, delta);
    })[0];
    if (sourceEvent2 && sourceEvent2.should) {
      if (event.cancelable) {
        event.preventDefault();
      }
      return;
    }
    if (!sourceEvent2) {
      var shardNodes = (lastProps.current.shards || []).map(extractRef).filter(Boolean).filter(function(node) {
        return node.contains(event.target);
      });
      var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
      if (shouldStop) {
        if (event.cancelable) {
          event.preventDefault();
        }
      }
    }
  }, []);
  var shouldCancel = reactExports.useCallback(function(name, delta, target, should) {
    var event = { name, delta, target, should };
    shouldPreventQueue.current.push(event);
    setTimeout(function() {
      shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e3) {
        return e3 !== event;
      });
    }, 1);
  }, []);
  var scrollTouchStart = reactExports.useCallback(function(event) {
    touchStartRef.current = getTouchXY(event);
    activeAxis.current = void 0;
  }, []);
  var scrollWheel = reactExports.useCallback(function(event) {
    shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  var scrollTouchMove = reactExports.useCallback(function(event) {
    shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  reactExports.useEffect(function() {
    lockStack.push(Style2);
    props.setCallbacks({
      onScrollCapture: scrollWheel,
      onWheelCapture: scrollWheel,
      onTouchMoveCapture: scrollTouchMove
    });
    document.addEventListener("wheel", shouldPrevent, nonPassive);
    document.addEventListener("touchmove", shouldPrevent, nonPassive);
    document.addEventListener("touchstart", scrollTouchStart, nonPassive);
    return function() {
      lockStack = lockStack.filter(function(inst) {
        return inst !== Style2;
      });
      document.removeEventListener("wheel", shouldPrevent, nonPassive);
      document.removeEventListener("touchmove", shouldPrevent, nonPassive);
      document.removeEventListener("touchstart", scrollTouchStart, nonPassive);
    };
  }, []);
  var removeScrollBar = props.removeScrollBar, inert = props.inert;
  return reactExports.createElement(
    reactExports.Fragment,
    null,
    inert ? reactExports.createElement(Style2, { styles: generateStyle(id2) }) : null,
    removeScrollBar ? reactExports.createElement(RemoveScrollBar, { gapMode: "margin" }) : null
  );
}
const SideCar = exportSidecar(effectCar, RemoveScrollSideCar);
var ReactRemoveScroll = reactExports.forwardRef(function(props, ref) {
  return reactExports.createElement(RemoveScroll, __assign({}, props, { ref, sideCar: SideCar }));
});
ReactRemoveScroll.classNames = RemoveScroll.classNames;
const $01b9c$RemoveScroll = ReactRemoveScroll;
var getDefaultParent = function(originalTarget) {
  if (typeof document === "undefined") {
    return null;
  }
  var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
  return sampleTarget.ownerDocument.body;
};
var counterMap = /* @__PURE__ */ new WeakMap();
var uncontrolledNodes = /* @__PURE__ */ new WeakMap();
var markerMap = {};
var lockCount = 0;
var unwrapHost = function(node) {
  return node && (node.host || unwrapHost(node.parentNode));
};
var correctTargets = function(parent, targets) {
  return targets.map(function(target) {
    if (parent.contains(target)) {
      return target;
    }
    var correctedTarget = unwrapHost(target);
    if (correctedTarget && parent.contains(correctedTarget)) {
      return correctedTarget;
    }
    console.error("aria-hidden", target, "in not contained inside", parent, ". Doing nothing");
    return null;
  }).filter(function(x2) {
    return Boolean(x2);
  });
};
var applyAttributeToOthers = function(originalTarget, parentNode, markerName, controlAttribute) {
  var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  if (!markerMap[markerName]) {
    markerMap[markerName] = /* @__PURE__ */ new WeakMap();
  }
  var markerCounter = markerMap[markerName];
  var hiddenNodes = [];
  var elementsToKeep = /* @__PURE__ */ new Set();
  var elementsToStop = new Set(targets);
  var keep = function(el2) {
    if (!el2 || elementsToKeep.has(el2)) {
      return;
    }
    elementsToKeep.add(el2);
    keep(el2.parentNode);
  };
  targets.forEach(keep);
  var deep = function(parent) {
    if (!parent || elementsToStop.has(parent)) {
      return;
    }
    Array.prototype.forEach.call(parent.children, function(node) {
      if (elementsToKeep.has(node)) {
        deep(node);
      } else {
        try {
          var attr = node.getAttribute(controlAttribute);
          var alreadyHidden = attr !== null && attr !== "false";
          var counterValue = (counterMap.get(node) || 0) + 1;
          var markerValue = (markerCounter.get(node) || 0) + 1;
          counterMap.set(node, counterValue);
          markerCounter.set(node, markerValue);
          hiddenNodes.push(node);
          if (counterValue === 1 && alreadyHidden) {
            uncontrolledNodes.set(node, true);
          }
          if (markerValue === 1) {
            node.setAttribute(markerName, "true");
          }
          if (!alreadyHidden) {
            node.setAttribute(controlAttribute, "true");
          }
        } catch (e3) {
          console.error("aria-hidden: cannot operate on ", node, e3);
        }
      }
    });
  };
  deep(parentNode);
  elementsToKeep.clear();
  lockCount++;
  return function() {
    hiddenNodes.forEach(function(node) {
      var counterValue = counterMap.get(node) - 1;
      var markerValue = markerCounter.get(node) - 1;
      counterMap.set(node, counterValue);
      markerCounter.set(node, markerValue);
      if (!counterValue) {
        if (!uncontrolledNodes.has(node)) {
          node.removeAttribute(controlAttribute);
        }
        uncontrolledNodes.delete(node);
      }
      if (!markerValue) {
        node.removeAttribute(markerName);
      }
    });
    lockCount--;
    if (!lockCount) {
      counterMap = /* @__PURE__ */ new WeakMap();
      counterMap = /* @__PURE__ */ new WeakMap();
      uncontrolledNodes = /* @__PURE__ */ new WeakMap();
      markerMap = {};
    }
  };
};
var hideOthers = function(originalTarget, parentNode, markerName) {
  if (markerName === void 0) {
    markerName = "data-aria-hidden";
  }
  var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  var activeParentNode = parentNode || getDefaultParent(originalTarget);
  if (!activeParentNode) {
    return function() {
      return null;
    };
  }
  targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll("[aria-live]")));
  return applyAttributeToOthers(targets, activeParentNode, markerName, "aria-hidden");
};
const $5d3850c4d0b4e6c7$var$DIALOG_NAME = "Dialog";
const [$5d3850c4d0b4e6c7$var$createDialogContext, $5d3850c4d0b4e6c7$export$cc702773b8ea3e41] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($5d3850c4d0b4e6c7$var$DIALOG_NAME);
const [$5d3850c4d0b4e6c7$var$DialogProvider, $5d3850c4d0b4e6c7$var$useDialogContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$DIALOG_NAME);
const $5d3850c4d0b4e6c7$export$3ddf2d174ce01153 = (props) => {
  const { __scopeDialog, children: children2, open: openProp, defaultOpen, onOpenChange, modal = true } = props;
  const triggerRef = reactExports.useRef(null);
  const contentRef = reactExports.useRef(null);
  const [open = false, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return /* @__PURE__ */ reactExports.createElement($5d3850c4d0b4e6c7$var$DialogProvider, {
    scope: __scopeDialog,
    triggerRef,
    contentRef,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    titleId: $1746a345f3d73bb7$export$f680877a34711e37(),
    descriptionId: $1746a345f3d73bb7$export$f680877a34711e37(),
    open,
    onOpenChange: setOpen,
    onOpenToggle: reactExports.useCallback(
      () => setOpen(
        (prevOpen) => !prevOpen
      ),
      [
        setOpen
      ]
    ),
    modal
  }, children2);
};
const $5d3850c4d0b4e6c7$var$TRIGGER_NAME = "DialogTrigger";
const $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeDialog, ...triggerProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TRIGGER_NAME, __scopeDialog);
  const composedTriggerRef = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.triggerRef);
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends$y({
    type: "button",
    "aria-haspopup": "dialog",
    "aria-expanded": context.open,
    "aria-controls": context.contentId,
    "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
  }, triggerProps, {
    ref: composedTriggerRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, context.onOpenToggle)
  }));
});
const $5d3850c4d0b4e6c7$var$PORTAL_NAME = "DialogPortal";
const [$5d3850c4d0b4e6c7$var$PortalProvider, $5d3850c4d0b4e6c7$var$usePortalContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, {
  forceMount: void 0
});
const $5d3850c4d0b4e6c7$export$dad7c95542bacce0 = (props) => {
  const { __scopeDialog, forceMount, children: children2, container: container2 } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, __scopeDialog);
  return /* @__PURE__ */ reactExports.createElement($5d3850c4d0b4e6c7$var$PortalProvider, {
    scope: __scopeDialog,
    forceMount
  }, reactExports.Children.map(
    children2,
    (child) => /* @__PURE__ */ reactExports.createElement($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
      present: forceMount || context.open
    }, /* @__PURE__ */ reactExports.createElement($f1701beae083dbae$export$602eac185826482c, {
      asChild: true,
      container: container2
    }, child))
  ));
};
const $5d3850c4d0b4e6c7$var$OVERLAY_NAME = "DialogOverlay";
const $5d3850c4d0b4e6c7$export$bd1d06c79be19e17 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);
  const { forceMount = portalContext.forceMount, ...overlayProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);
  return context.modal ? /* @__PURE__ */ reactExports.createElement($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, /* @__PURE__ */ reactExports.createElement($5d3850c4d0b4e6c7$var$DialogOverlayImpl, _extends$y({}, overlayProps, {
    ref: forwardedRef
  }))) : null;
});
const $5d3850c4d0b4e6c7$var$DialogOverlayImpl = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeDialog, ...overlayProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, __scopeDialog);
  return (
    // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`
    // ie. when `Overlay` and `Content` are siblings
    /* @__PURE__ */ reactExports.createElement($01b9c$RemoveScroll, {
      as: $5e63c961fc1ce211$export$8c6ed5c666ac1360,
      allowPinchZoom: true,
      shards: [
        context.contentRef
      ]
    }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
      "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
    }, overlayProps, {
      ref: forwardedRef,
      style: {
        pointerEvents: "auto",
        ...overlayProps.style
      }
    })))
  );
});
const $5d3850c4d0b4e6c7$var$CONTENT_NAME = "DialogContent";
const $5d3850c4d0b4e6c7$export$b6d9565de1e068cf = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  const { forceMount = portalContext.forceMount, ...contentProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  return /* @__PURE__ */ reactExports.createElement($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, context.modal ? /* @__PURE__ */ reactExports.createElement($5d3850c4d0b4e6c7$var$DialogContentModal, _extends$y({}, contentProps, {
    ref: forwardedRef
  })) : /* @__PURE__ */ reactExports.createElement($5d3850c4d0b4e6c7$var$DialogContentNonModal, _extends$y({}, contentProps, {
    ref: forwardedRef
  })));
});
/* @__PURE__ */ Object.assign($5d3850c4d0b4e6c7$export$b6d9565de1e068cf, {
  displayName: $5d3850c4d0b4e6c7$var$CONTENT_NAME
});
const $5d3850c4d0b4e6c7$var$DialogContentModal = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  const contentRef = reactExports.useRef(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.contentRef, contentRef);
  reactExports.useEffect(() => {
    const content = contentRef.current;
    if (content)
      return hideOthers(content);
  }, []);
  return /* @__PURE__ */ reactExports.createElement($5d3850c4d0b4e6c7$var$DialogContentImpl, _extends$y({}, props, {
    ref: composedRefs,
    trapFocus: context.open,
    disableOutsidePointerEvents: true,
    onCloseAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onCloseAutoFocus, (event) => {
      var _context$triggerRef$c;
      event.preventDefault();
      (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();
    }),
    onPointerDownOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownOutside, (event) => {
      const originalEvent = event.detail.originalEvent;
      const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
      const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
      if (isRightClick)
        event.preventDefault();
    }),
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocusOutside,
      (event) => event.preventDefault()
    )
  }));
});
const $5d3850c4d0b4e6c7$var$DialogContentNonModal = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  const hasInteractedOutsideRef = reactExports.useRef(false);
  const hasPointerDownOutsideRef = reactExports.useRef(false);
  return /* @__PURE__ */ reactExports.createElement($5d3850c4d0b4e6c7$var$DialogContentImpl, _extends$y({}, props, {
    ref: forwardedRef,
    trapFocus: false,
    disableOutsidePointerEvents: false,
    onCloseAutoFocus: (event) => {
      var _props$onCloseAutoFoc;
      (_props$onCloseAutoFoc = props.onCloseAutoFocus) === null || _props$onCloseAutoFoc === void 0 || _props$onCloseAutoFoc.call(props, event);
      if (!event.defaultPrevented) {
        var _context$triggerRef$c2;
        if (!hasInteractedOutsideRef.current)
          (_context$triggerRef$c2 = context.triggerRef.current) === null || _context$triggerRef$c2 === void 0 || _context$triggerRef$c2.focus();
        event.preventDefault();
      }
      hasInteractedOutsideRef.current = false;
      hasPointerDownOutsideRef.current = false;
    },
    onInteractOutside: (event) => {
      var _props$onInteractOuts, _context$triggerRef$c3;
      (_props$onInteractOuts = props.onInteractOutside) === null || _props$onInteractOuts === void 0 || _props$onInteractOuts.call(props, event);
      if (!event.defaultPrevented) {
        hasInteractedOutsideRef.current = true;
        if (event.detail.originalEvent.type === "pointerdown")
          hasPointerDownOutsideRef.current = true;
      }
      const target = event.target;
      const targetIsTrigger = (_context$triggerRef$c3 = context.triggerRef.current) === null || _context$triggerRef$c3 === void 0 ? void 0 : _context$triggerRef$c3.contains(target);
      if (targetIsTrigger)
        event.preventDefault();
      if (event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current)
        event.preventDefault();
    }
  }));
});
const $5d3850c4d0b4e6c7$var$DialogContentImpl = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, __scopeDialog);
  const contentRef = reactExports.useRef(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, contentRef);
  $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c();
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement($d3863c46a17e8a28$export$20e40289641fbbb6, {
    asChild: true,
    loop: true,
    trapped: trapFocus,
    onMountAutoFocus: onOpenAutoFocus,
    onUnmountAutoFocus: onCloseAutoFocus
  }, /* @__PURE__ */ reactExports.createElement($5cb92bef7577960e$export$177fb62ff3ec1f22, _extends$y({
    role: "dialog",
    id: context.contentId,
    "aria-describedby": context.descriptionId,
    "aria-labelledby": context.titleId,
    "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
  }, contentProps, {
    ref: composedRefs,
    onDismiss: () => context.onOpenChange(false)
  }))), false);
});
const $5d3850c4d0b4e6c7$var$TITLE_NAME = "DialogTitle";
const $5d3850c4d0b4e6c7$export$16f7638e4a34b909 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeDialog, ...titleProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TITLE_NAME, __scopeDialog);
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.h2, _extends$y({
    id: context.titleId
  }, titleProps, {
    ref: forwardedRef
  }));
});
/* @__PURE__ */ Object.assign($5d3850c4d0b4e6c7$export$16f7638e4a34b909, {
  displayName: $5d3850c4d0b4e6c7$var$TITLE_NAME
});
const $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME = "DialogDescription";
const $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeDialog, ...descriptionProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$DESCRIPTION_NAME, __scopeDialog);
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.p, _extends$y({
    id: context.descriptionId
  }, descriptionProps, {
    ref: forwardedRef
  }));
});
/* @__PURE__ */ Object.assign($5d3850c4d0b4e6c7$export$94e94c2ec2c954d5, {
  displayName: $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME
});
const $5d3850c4d0b4e6c7$var$CLOSE_NAME = "DialogClose";
const $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeDialog, ...closeProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CLOSE_NAME, __scopeDialog);
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends$y({
    type: "button"
  }, closeProps, {
    ref: forwardedRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onClick,
      () => context.onOpenChange(false)
    )
  }));
});
/* @__PURE__ */ Object.assign($5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac, {
  displayName: $5d3850c4d0b4e6c7$var$CLOSE_NAME
});
function $5d3850c4d0b4e6c7$var$getState(open) {
  return open ? "open" : "closed";
}
const $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9 = $5d3850c4d0b4e6c7$export$3ddf2d174ce01153;
const $5d3850c4d0b4e6c7$export$41fb9f06171c75f4 = $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88;
const $5d3850c4d0b4e6c7$export$602eac185826482c = $5d3850c4d0b4e6c7$export$dad7c95542bacce0;
const $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff = $5d3850c4d0b4e6c7$export$bd1d06c79be19e17;
const $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2 = $5d3850c4d0b4e6c7$export$b6d9565de1e068cf;
const $5d3850c4d0b4e6c7$export$f99233281efd08a0 = $5d3850c4d0b4e6c7$export$16f7638e4a34b909;
const $5d3850c4d0b4e6c7$export$393edc798c47379d = $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5;
const $5d3850c4d0b4e6c7$export$f39c2d165cd861fe = $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac;
const Dialog = $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9;
const DialogTrigger = $5d3850c4d0b4e6c7$export$41fb9f06171c75f4;
const DialogPortal = $5d3850c4d0b4e6c7$export$602eac185826482c;
const DialogOverlay = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff,
  {
    ref,
    className: cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    ),
    ...props
  }
));
DialogOverlay.displayName = $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff.displayName;
const DialogContent = reactExports.forwardRef(({ className, children: children2, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsxs(DialogPortal, { children: [
  /* @__PURE__ */ jsxRuntimeExports.jsx(DialogOverlay, {}),
  /* @__PURE__ */ jsxRuntimeExports.jsxs(
    $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2,
    {
      ref,
      className: cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      ),
      ...props,
      children: [
        children2,
        /* @__PURE__ */ jsxRuntimeExports.jsxs($5d3850c4d0b4e6c7$export$f39c2d165cd861fe, { className: "absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(X, { className: "h-4 w-4" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "sr-only", children: "Close" })
        ] })
      ]
    }
  )
] }));
DialogContent.displayName = $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2.displayName;
const DialogHeader = ({
  className,
  ...props
}) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  "div",
  {
    className: cn(
      "flex flex-col space-y-1.5 text-center sm:text-left",
      className
    ),
    ...props
  }
);
DialogHeader.displayName = "DialogHeader";
const DialogFooter = ({
  className,
  ...props
}) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  "div",
  {
    className: cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    ),
    ...props
  }
);
DialogFooter.displayName = "DialogFooter";
const DialogTitle = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $5d3850c4d0b4e6c7$export$f99233281efd08a0,
  {
    ref,
    className: cn(
      "text-lg font-semibold leading-none tracking-tight",
      className
    ),
    ...props
  }
));
DialogTitle.displayName = $5d3850c4d0b4e6c7$export$f99233281efd08a0.displayName;
const DialogDescription = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $5d3850c4d0b4e6c7$export$393edc798c47379d,
  {
    ref,
    className: cn("text-sm text-muted-foreground", className),
    ...props
  }
));
DialogDescription.displayName = $5d3850c4d0b4e6c7$export$393edc798c47379d.displayName;
function DataTable$3({
  columns: columns3,
  data: data2
}) {
  const [sorting, setSorting] = reactExports.useState([]);
  const [columnFilters, setColumnFilters] = reactExports.useState(
    []
  );
  const [rowSelection, setRowSelection] = reactExports.useState({});
  const table = useReactTable({
    data: data2,
    columns: columns3,
    getCoreRowModel: getCoreRowModel(),
    getPaginationRowModel: getPaginationRowModel(),
    onSortingChange: setSorting,
    getSortedRowModel: getSortedRowModel(),
    onColumnFiltersChange: setColumnFilters,
    getFilteredRowModel: getFilteredRowModel(),
    onRowSelectionChange: setRowSelection,
    state: {
      sorting,
      columnFilters,
      rowSelection
    }
  });
  reactExports.useEffect(() => {
    table.setPageSize(3);
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "rounded-md border", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(Table, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(TableHeader, { children: table.getHeaderGroups().map((headerGroup) => /* @__PURE__ */ jsxRuntimeExports.jsx(TableRow, { children: headerGroup.headers.map((header) => {
        return /* @__PURE__ */ jsxRuntimeExports.jsx(TableHead, { children: header.isPlaceholder ? null : flexRender(
          header.column.columnDef.header,
          header.getContext()
        ) }, header.id);
      }) }, headerGroup.id)) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(TableBody, { children: table.getRowModel().rows?.length ? table.getRowModel().rows.map((row) => /* @__PURE__ */ jsxRuntimeExports.jsx(
        TableRow,
        {
          "data-state": row.getIsSelected() && "selected",
          children: row.getVisibleCells().map((cell) => /* @__PURE__ */ jsxRuntimeExports.jsx(TableCell, { className: "text-nowrap", children: flexRender(
            cell.column.columnDef.cell,
            cell.getContext()
          ) }, cell.id))
        },
        row.id
      )) : /* @__PURE__ */ jsxRuntimeExports.jsx(TableRow, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        TableCell,
        {
          colSpan: columns3.length,
          className: "h-24 text-center",
          children: "No results."
        }
      ) }) })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center justify-end space-x-2 py-4", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Button,
        {
          variant: "outline",
          size: "sm",
          onClick: () => {
            console.log(table.getState());
            table.previousPage();
          },
          disabled: !table.getCanPreviousPage(),
          children: "Previous"
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Button,
        {
          variant: "outline",
          size: "sm",
          onClick: () => {
            console.log(table.getState());
            table.nextPage();
            console.log(table.getState());
          },
          disabled: !table.getCanNextPage(),
          children: "Next"
        }
      )
    ] })
  ] });
}
const columns$3 = [
  {
    id: "select",
    header: ({ table }) => /* @__PURE__ */ jsxRuntimeExports.jsx(
      Checkbox,
      {
        checked: table.getIsAllPageRowsSelected() || table.getIsSomePageRowsSelected() && "indeterminate",
        onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value),
        "aria-label": "Select all"
      }
    ),
    cell: ({ row }) => /* @__PURE__ */ jsxRuntimeExports.jsx(
      Checkbox,
      {
        checked: row.getIsSelected(),
        onCheckedChange: (value) => row.toggleSelected(!!value),
        "aria-label": "Select row"
      }
    )
  },
  {
    accessorKey: "ipAddress",
    header: ({ column }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(
        Button,
        {
          variant: "ghost",
          onClick: () => column.toggleSorting(column.getIsSorted() === "asc"),
          children: [
            "IP Address",
            /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowUpDown, { className: "ml-2 h-4 w-4" })
          ]
        }
      );
    }
  },
  {
    accessorKey: "fileName",
    header: ({ column }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(
        Button,
        {
          variant: "ghost",
          onClick: () => column.toggleSorting(column.getIsSorted() === "asc"),
          children: [
            "File Name",
            /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowUpDown, { className: "ml-2 h-4 w-4" })
          ]
        }
      );
    }
  },
  {
    accessorKey: "region",
    header: ({ column }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(
        Button,
        {
          variant: "ghost",
          onClick: () => column.toggleSorting(column.getIsSorted() === "asc"),
          children: [
            "Region",
            /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowUpDown, { className: "ml-2 h-4 w-4" })
          ]
        }
      );
    }
  },
  {
    accessorKey: "price",
    header: ({ column }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(
        Button,
        {
          variant: "ghost",
          onClick: () => column.toggleSorting(column.getIsSorted() === "asc"),
          children: [
            "Price",
            /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowUpDown, { className: "ml-2 h-4 w-4" })
          ]
        }
      );
    },
    cell: ({ row }) => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "text-right", children: row.getValue("price") })
  }
];
const columns2 = [
  {
    id: "select",
    header: ({ table }) => /* @__PURE__ */ jsxRuntimeExports.jsx(
      Checkbox,
      {
        checked: table.getIsAllPageRowsSelected() || table.getIsSomePageRowsSelected() && "indeterminate",
        onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value),
        "aria-label": "Select all"
      }
    ),
    cell: ({ row }) => /* @__PURE__ */ jsxRuntimeExports.jsx(
      Checkbox,
      {
        checked: row.getIsSelected(),
        onCheckedChange: (value) => row.toggleSelected(!!value),
        "aria-label": "Select row"
      }
    )
  },
  {
    accessorKey: "name",
    header: ({ column }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(
        Button,
        {
          variant: "ghost",
          onClick: () => column.toggleSorting(column.getIsSorted() === "asc"),
          children: [
            "Name",
            /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowUpDown, { className: "ml-2 h-4 w-4" })
          ]
        }
      );
    }
  },
  {
    accessorKey: "price",
    header: ({ column }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(
        Button,
        {
          variant: "ghost",
          onClick: () => column.toggleSorting(column.getIsSorted() === "asc"),
          children: [
            "Price",
            /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowUpDown, { className: "ml-2 h-4 w-4" })
          ]
        }
      );
    }
  },
  {
    accessorKey: "rate",
    header: ({ column }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(
        Button,
        {
          variant: "ghost",
          onClick: () => column.toggleSorting(column.getIsSorted() === "asc"),
          children: [
            "Transfer Rate",
            /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowUpDown, { className: "ml-2 h-4 w-4" })
          ]
        }
      );
    }
  }
];
const TOAST_LIMIT = 1;
const TOAST_REMOVE_DELAY = 1e6;
let count = 0;
function genId() {
  count = (count + 1) % Number.MAX_SAFE_INTEGER;
  return count.toString();
}
const toastTimeouts = /* @__PURE__ */ new Map();
const addToRemoveQueue = (toastId) => {
  if (toastTimeouts.has(toastId)) {
    return;
  }
  const timeout2 = setTimeout(() => {
    toastTimeouts.delete(toastId);
    dispatch$1({
      type: "REMOVE_TOAST",
      toastId
    });
  }, TOAST_REMOVE_DELAY);
  toastTimeouts.set(toastId, timeout2);
};
const reducer = (state, action) => {
  switch (action.type) {
    case "ADD_TOAST":
      return {
        ...state,
        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT)
      };
    case "UPDATE_TOAST":
      return {
        ...state,
        toasts: state.toasts.map(
          (t2) => t2.id === action.toast.id ? { ...t2, ...action.toast } : t2
        )
      };
    case "DISMISS_TOAST": {
      const { toastId } = action;
      if (toastId) {
        addToRemoveQueue(toastId);
      } else {
        state.toasts.forEach((toast2) => {
          addToRemoveQueue(toast2.id);
        });
      }
      return {
        ...state,
        toasts: state.toasts.map(
          (t2) => t2.id === toastId || toastId === void 0 ? {
            ...t2,
            open: false
          } : t2
        )
      };
    }
    case "REMOVE_TOAST":
      if (action.toastId === void 0) {
        return {
          ...state,
          toasts: []
        };
      }
      return {
        ...state,
        toasts: state.toasts.filter((t2) => t2.id !== action.toastId)
      };
  }
};
const listeners = [];
let memoryState = { toasts: [] };
function dispatch$1(action) {
  memoryState = reducer(memoryState, action);
  listeners.forEach((listener) => {
    listener(memoryState);
  });
}
function toast({ ...props }) {
  const id2 = genId();
  const update = (props2) => dispatch$1({
    type: "UPDATE_TOAST",
    toast: { ...props2, id: id2 }
  });
  const dismiss = () => dispatch$1({ type: "DISMISS_TOAST", toastId: id2 });
  dispatch$1({
    type: "ADD_TOAST",
    toast: {
      ...props,
      id: id2,
      open: true,
      onOpenChange: (open) => {
        if (!open)
          dismiss();
      }
    }
  });
  return {
    id: id2,
    dismiss,
    update
  };
}
function useToast() {
  const [state, setState] = reactExports.useState(memoryState);
  reactExports.useEffect(() => {
    listeners.push(setState);
    return () => {
      const index2 = listeners.indexOf(setState);
      if (index2 > -1) {
        listeners.splice(index2, 1);
      }
    };
  }, [state]);
  return {
    ...state,
    toast,
    dismiss: (toastId) => dispatch$1({ type: "DISMISS_TOAST", toastId })
  };
}
const OverviewHeader = (props) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex justify-between mb-2", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(FilterInput, { setFilter: props.setFilter }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { className: "ml-2", onClick: () => props.setStatusFilter("all"), children: "All" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Button,
        {
          className: "ml-2",
          onClick: () => props.setStatusFilter("downloading"),
          children: "Downloading"
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Button,
        {
          className: "ml-2",
          onClick: () => props.setStatusFilter("paused"),
          children: "Paused"
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { className: "ml-2", onClick: () => props.setStatusFilter("error"), children: "Error" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Button,
        {
          className: "ml-2",
          onClick: () => props.setStatusFilter("completed"),
          children: "Completed"
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(AddJob, { addJob: props.addJob })
  ] });
};
const FilterInput = (props) => {
  const [buffer, setBuffer] = reactExports.useState("");
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "relative min-w-28", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Input,
      {
        type: "text",
        value: buffer,
        onChange: (e3) => setBuffer(e3.target.value),
        onKeyUp: (e3) => {
          if (e3.key === "Enter") {
            props.setFilter(buffer);
          }
        },
        placeholder: "Filter..."
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Filter,
      {
        className: "absolute right-2 top-2",
        onClick: () => props.setFilter(buffer)
      }
    )
  ] });
};
const fakeData = [
  { name: "Alice", price: "30 USD", rate: "30 Mb/s" },
  { name: "Bob", price: "35 USD", rate: "50 Mb/s" }
];
const DialogClose = $5d3850c4d0b4e6c7$export$f39c2d165cd861fe;
const AddJob = (props) => {
  const [buffer, setBuffer] = reactExports.useState("");
  const [validHash, setValidHash] = reactExports.useState(0);
  const hash = "f26811862f6ba50908850f61ad73fb5d8d86754cd2acb9ef";
  const resetAddJob = () => {
    setBuffer("");
    setValidHash(0);
  };
  const handleSearchHash = () => {
    if (buffer === hash) {
      setValidHash(1);
      console.log("Hello");
    } else {
      setValidHash(-1);
    }
  };
  const handleAddJob = () => {
    props.addJob(buffer);
    toast({
      title: "Job Successfully Added!",
      description: "Your job has been successfully added!"
    });
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(Dialog, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(DialogTrigger, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { onClick: resetAddJob, className: "ml-20", children: "Add Job" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(DialogContent, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(DialogTitle, { children: "Add Job" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Input,
        {
          type: "text",
          value: buffer,
          onChange: (e3) => setBuffer(e3.target.value),
          onKeyUp: (e3) => {
            if (e3.key === "Enter") {
              handleSearchHash();
            }
          },
          placeholder: "File hash..."
        }
      ),
      validHash !== 1 && /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { onClick: handleSearchHash, children: "Search Hash" }),
      validHash === -1 && /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: "No files match this hash" }),
      validHash === 1 && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(DataTable$3, { data: fakeData, columns: columns2 }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(DialogClose, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { onClick: handleAddJob, children: "Select Peer" }) })
      ] })
    ] })
  ] }) });
};
const sides = ["top", "right", "bottom", "left"];
const min$3 = Math.min;
const max$3 = Math.max;
const round$1 = Math.round;
const floor = Math.floor;
const createCoords = (v2) => ({
  x: v2,
  y: v2
});
const oppositeSideMap = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
const oppositeAlignmentMap = {
  start: "end",
  end: "start"
};
function clamp(start2, value, end) {
  return max$3(start2, min$3(value, end));
}
function evaluate(value, param) {
  return typeof value === "function" ? value(param) : value;
}
function getSide(placement) {
  return placement.split("-")[0];
}
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getOppositeAxis(axis) {
  return axis === "x" ? "y" : "x";
}
function getAxisLength(axis) {
  return axis === "y" ? "height" : "width";
}
function getSideAxis(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "y" : "x";
}
function getAlignmentAxis(placement) {
  return getOppositeAxis(getSideAxis(placement));
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const length2 = getAxisLength(alignmentAxis);
  let mainAlignmentSide = alignmentAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  if (rects.reference[length2] > rects.floating[length2]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }
  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];
}
function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
}
function getSideList(side, isStart, rtl) {
  const lr = ["left", "right"];
  const rl2 = ["right", "left"];
  const tb2 = ["top", "bottom"];
  const bt = ["bottom", "top"];
  switch (side) {
    case "top":
    case "bottom":
      if (rtl)
        return isStart ? rl2 : lr;
      return isStart ? lr : rl2;
    case "left":
    case "right":
      return isStart ? tb2 : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  const alignment = getAlignment(placement);
  let list = getSideList(getSide(placement), direction === "start", rtl);
  if (alignment) {
    list = list.map((side) => side + "-" + alignment);
    if (flipAlignment) {
      list = list.concat(list.map(getOppositeAlignmentPlacement));
    }
  }
  return list;
}
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getPaddingObject(padding) {
  return typeof padding !== "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  return {
    ...rect,
    top: rect.y,
    left: rect.x,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  };
}
function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref;
  const sideAxis = getSideAxis(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const alignLength = getAxisLength(alignmentAxis);
  const side = getSide(placement);
  const isVertical = sideAxis === "y";
  const commonX = reference.x + reference.width / 2 - floating.width / 2;
  const commonY = reference.y + reference.height / 2 - floating.height / 2;
  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;
  let coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case "right":
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
const computePosition$1 = async (reference, floating, config2) => {
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2
  } = config2;
  const validMiddleware = middleware.filter(Boolean);
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
  let rects = await platform2.getElementRects({
    reference,
    floating,
    strategy
  });
  let {
    x: x2,
    y: y2
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i2 = 0; i2 < validMiddleware.length; i2++) {
    const {
      name,
      fn
    } = validMiddleware[i2];
    const {
      x: nextX,
      y: nextY,
      data: data2,
      reset
    } = await fn({
      x: x2,
      y: y2,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform: platform2,
      elements: {
        reference,
        floating
      }
    });
    x2 = nextX != null ? nextX : x2;
    y2 = nextY != null ? nextY : y2;
    middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data2
      }
    };
    if (reset && resetCount <= 50) {
      resetCount++;
      if (typeof reset === "object") {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }
        if (reset.rects) {
          rects = reset.rects === true ? await platform2.getElementRects({
            reference,
            floating,
            strategy
          }) : reset.rects;
        }
        ({
          x: x2,
          y: y2
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i2 = -1;
    }
  }
  return {
    x: x2,
    y: y2,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};
async function detectOverflow(state, options) {
  var _await$platform$isEle;
  if (options === void 0) {
    options = {};
  }
  const {
    x: x2,
    y: y2,
    platform: platform2,
    rects,
    elements,
    strategy
  } = state;
  const {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = false,
    padding = 0
  } = evaluate(options, state);
  const paddingObject = getPaddingObject(padding);
  const altContext = elementContext === "floating" ? "reference" : "floating";
  const element = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = rectToClientRect(await platform2.getClippingRect({
    element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
    boundary,
    rootBoundary,
    strategy
  }));
  const rect = elementContext === "floating" ? {
    ...rects.floating,
    x: x2,
    y: y2
  } : rects.reference;
  const offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating));
  const offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  };
  const elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements,
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}
const arrow$2 = (options) => ({
  name: "arrow",
  options,
  async fn(state) {
    const {
      x: x2,
      y: y2,
      placement,
      rects,
      platform: platform2,
      elements,
      middlewareData
    } = state;
    const {
      element,
      padding = 0
    } = evaluate(options, state) || {};
    if (element == null) {
      return {};
    }
    const paddingObject = getPaddingObject(padding);
    const coords = {
      x: x2,
      y: y2
    };
    const axis = getAlignmentAxis(placement);
    const length2 = getAxisLength(axis);
    const arrowDimensions = await platform2.getDimensions(element);
    const isYAxis = axis === "y";
    const minProp = isYAxis ? "top" : "left";
    const maxProp = isYAxis ? "bottom" : "right";
    const clientProp = isYAxis ? "clientHeight" : "clientWidth";
    const endDiff = rects.reference[length2] + rects.reference[axis] - coords[axis] - rects.floating[length2];
    const startDiff = coords[axis] - rects.reference[axis];
    const arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element));
    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
    if (!clientSize || !await (platform2.isElement == null ? void 0 : platform2.isElement(arrowOffsetParent))) {
      clientSize = elements.floating[clientProp] || rects.floating[length2];
    }
    const centerToReference = endDiff / 2 - startDiff / 2;
    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length2] / 2 - 1;
    const minPadding = min$3(paddingObject[minProp], largestPossiblePadding);
    const maxPadding = min$3(paddingObject[maxProp], largestPossiblePadding);
    const min$12 = minPadding;
    const max2 = clientSize - arrowDimensions[length2] - maxPadding;
    const center = clientSize / 2 - arrowDimensions[length2] / 2 + centerToReference;
    const offset2 = clamp(min$12, center, max2);
    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset2 && rects.reference[length2] / 2 - (center < min$12 ? minPadding : maxPadding) - arrowDimensions[length2] / 2 < 0;
    const alignmentOffset = shouldAddOffset ? center < min$12 ? center - min$12 : center - max2 : 0;
    return {
      [axis]: coords[axis] + alignmentOffset,
      data: {
        [axis]: offset2,
        centerOffset: center - offset2 - alignmentOffset,
        ...shouldAddOffset && {
          alignmentOffset
        }
      },
      reset: shouldAddOffset
    };
  }
});
const flip$1 = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "flip",
    options,
    async fn(state) {
      var _middlewareData$arrow, _middlewareData$flip;
      const {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform: platform2,
        elements
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = "bestFit",
        fallbackAxisSideDirection = "none",
        flipAlignment = true,
        ...detectOverflowOptions
      } = evaluate(options, state);
      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
        return {};
      }
      const side = getSide(placement);
      const isBasePlacement = getSide(initialPlacement) === initialPlacement;
      const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== "none") {
        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
      }
      const placements = [initialPlacement, ...fallbackPlacements];
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const overflows = [];
      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis) {
        overflows.push(overflow[side]);
      }
      if (checkCrossAxis) {
        const sides2 = getAlignmentSides(placement, rects, rtl);
        overflows.push(overflow[sides2[0]], overflow[sides2[1]]);
      }
      overflowsData = [...overflowsData, {
        placement,
        overflows
      }];
      if (!overflows.every((side2) => side2 <= 0)) {
        var _middlewareData$flip2, _overflowsData$filter;
        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
        const nextPlacement = placements[nextIndex];
        if (nextPlacement) {
          return {
            data: {
              index: nextIndex,
              overflows: overflowsData
            },
            reset: {
              placement: nextPlacement
            }
          };
        }
        let resetPlacement = (_overflowsData$filter = overflowsData.filter((d2) => d2.overflows[0] <= 0).sort((a2, b2) => a2.overflows[1] - b2.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
        if (!resetPlacement) {
          switch (fallbackStrategy) {
            case "bestFit": {
              var _overflowsData$map$so;
              const placement2 = (_overflowsData$map$so = overflowsData.map((d2) => [d2.placement, d2.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a2, b2) => a2[1] - b2[1])[0]) == null ? void 0 : _overflowsData$map$so[0];
              if (placement2) {
                resetPlacement = placement2;
              }
              break;
            }
            case "initialPlacement":
              resetPlacement = initialPlacement;
              break;
          }
        }
        if (placement !== resetPlacement) {
          return {
            reset: {
              placement: resetPlacement
            }
          };
        }
      }
      return {};
    }
  };
};
function getSideOffsets(overflow, rect) {
  return {
    top: overflow.top - rect.height,
    right: overflow.right - rect.width,
    bottom: overflow.bottom - rect.height,
    left: overflow.left - rect.width
  };
}
function isAnySideFullyClipped(overflow) {
  return sides.some((side) => overflow[side] >= 0);
}
const hide$1 = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "hide",
    options,
    async fn(state) {
      const {
        rects
      } = state;
      const {
        strategy = "referenceHidden",
        ...detectOverflowOptions
      } = evaluate(options, state);
      switch (strategy) {
        case "referenceHidden": {
          const overflow = await detectOverflow(state, {
            ...detectOverflowOptions,
            elementContext: "reference"
          });
          const offsets = getSideOffsets(overflow, rects.reference);
          return {
            data: {
              referenceHiddenOffsets: offsets,
              referenceHidden: isAnySideFullyClipped(offsets)
            }
          };
        }
        case "escaped": {
          const overflow = await detectOverflow(state, {
            ...detectOverflowOptions,
            altBoundary: true
          });
          const offsets = getSideOffsets(overflow, rects.floating);
          return {
            data: {
              escapedOffsets: offsets,
              escaped: isAnySideFullyClipped(offsets)
            }
          };
        }
        default: {
          return {};
        }
      }
    }
  };
};
async function convertValueToCoords(state, options) {
  const {
    placement,
    platform: platform2,
    elements
  } = state;
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
  const side = getSide(placement);
  const alignment = getAlignment(placement);
  const isVertical = getSideAxis(placement) === "y";
  const mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical ? -1 : 1;
  const rawValue = evaluate(options, state);
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...rawValue
  };
  if (alignment && typeof alignmentAxis === "number") {
    crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
const offset = function(options) {
  if (options === void 0) {
    options = 0;
  }
  return {
    name: "offset",
    options,
    async fn(state) {
      var _middlewareData$offse, _middlewareData$arrow;
      const {
        x: x2,
        y: y2,
        placement,
        middlewareData
      } = state;
      const diffCoords = await convertValueToCoords(state, options);
      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
        return {};
      }
      return {
        x: x2 + diffCoords.x,
        y: y2 + diffCoords.y,
        data: {
          ...diffCoords,
          placement
        }
      };
    }
  };
};
const shift$1 = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "shift",
    options,
    async fn(state) {
      const {
        x: x2,
        y: y2,
        placement
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = false,
        limiter = {
          fn: (_ref) => {
            let {
              x: x3,
              y: y3
            } = _ref;
            return {
              x: x3,
              y: y3
            };
          }
        },
        ...detectOverflowOptions
      } = evaluate(options, state);
      const coords = {
        x: x2,
        y: y2
      };
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const crossAxis = getSideAxis(getSide(placement));
      const mainAxis = getOppositeAxis(crossAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      if (checkMainAxis) {
        const minSide = mainAxis === "y" ? "top" : "left";
        const maxSide = mainAxis === "y" ? "bottom" : "right";
        const min2 = mainAxisCoord + overflow[minSide];
        const max2 = mainAxisCoord - overflow[maxSide];
        mainAxisCoord = clamp(min2, mainAxisCoord, max2);
      }
      if (checkCrossAxis) {
        const minSide = crossAxis === "y" ? "top" : "left";
        const maxSide = crossAxis === "y" ? "bottom" : "right";
        const min2 = crossAxisCoord + overflow[minSide];
        const max2 = crossAxisCoord - overflow[maxSide];
        crossAxisCoord = clamp(min2, crossAxisCoord, max2);
      }
      const limitedCoords = limiter.fn({
        ...state,
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      });
      return {
        ...limitedCoords,
        data: {
          x: limitedCoords.x - x2,
          y: limitedCoords.y - y2
        }
      };
    }
  };
};
const limitShift$1 = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    options,
    fn(state) {
      const {
        x: x2,
        y: y2,
        placement,
        rects,
        middlewareData
      } = state;
      const {
        offset: offset2 = 0,
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true
      } = evaluate(options, state);
      const coords = {
        x: x2,
        y: y2
      };
      const crossAxis = getSideAxis(placement);
      const mainAxis = getOppositeAxis(crossAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      const rawOffset = evaluate(offset2, state);
      const computedOffset = typeof rawOffset === "number" ? {
        mainAxis: rawOffset,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...rawOffset
      };
      if (checkMainAxis) {
        const len = mainAxis === "y" ? "height" : "width";
        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;
        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
        if (mainAxisCoord < limitMin) {
          mainAxisCoord = limitMin;
        } else if (mainAxisCoord > limitMax) {
          mainAxisCoord = limitMax;
        }
      }
      if (checkCrossAxis) {
        var _middlewareData$offse, _middlewareData$offse2;
        const len = mainAxis === "y" ? "width" : "height";
        const isOriginSide = ["top", "left"].includes(getSide(placement));
        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);
        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);
        if (crossAxisCoord < limitMin) {
          crossAxisCoord = limitMin;
        } else if (crossAxisCoord > limitMax) {
          crossAxisCoord = limitMax;
        }
      }
      return {
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      };
    }
  };
};
const size$1 = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "size",
    options,
    async fn(state) {
      const {
        placement,
        rects,
        platform: platform2,
        elements
      } = state;
      const {
        apply: apply2 = () => {
        },
        ...detectOverflowOptions
      } = evaluate(options, state);
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const side = getSide(placement);
      const alignment = getAlignment(placement);
      const isYAxis = getSideAxis(placement) === "y";
      const {
        width,
        height
      } = rects.floating;
      let heightSide;
      let widthSide;
      if (side === "top" || side === "bottom") {
        heightSide = side;
        widthSide = alignment === (await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)) ? "start" : "end") ? "left" : "right";
      } else {
        widthSide = side;
        heightSide = alignment === "end" ? "top" : "bottom";
      }
      const overflowAvailableHeight = height - overflow[heightSide];
      const overflowAvailableWidth = width - overflow[widthSide];
      const noShift = !state.middlewareData.shift;
      let availableHeight = overflowAvailableHeight;
      let availableWidth = overflowAvailableWidth;
      if (isYAxis) {
        const maximumClippingWidth = width - overflow.left - overflow.right;
        availableWidth = alignment || noShift ? min$3(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;
      } else {
        const maximumClippingHeight = height - overflow.top - overflow.bottom;
        availableHeight = alignment || noShift ? min$3(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;
      }
      if (noShift && !alignment) {
        const xMin = max$3(overflow.left, 0);
        const xMax = max$3(overflow.right, 0);
        const yMin = max$3(overflow.top, 0);
        const yMax = max$3(overflow.bottom, 0);
        if (isYAxis) {
          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max$3(overflow.left, overflow.right));
        } else {
          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max$3(overflow.top, overflow.bottom));
        }
      }
      await apply2({
        ...state,
        availableWidth,
        availableHeight
      });
      const nextDimensions = await platform2.getDimensions(elements.floating);
      if (width !== nextDimensions.width || height !== nextDimensions.height) {
        return {
          reset: {
            rects: true
          }
        };
      }
      return {};
    }
  };
};
function getNodeName(node) {
  if (isNode(node)) {
    return (node.nodeName || "").toLowerCase();
  }
  return "#document";
}
function getWindow(node) {
  var _node$ownerDocument;
  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement(node) {
  var _ref;
  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function isNode(value) {
  return value instanceof Node || value instanceof getWindow(value).Node;
}
function isElement(value) {
  return value instanceof Element || value instanceof getWindow(value).Element;
}
function isHTMLElement$1(value) {
  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;
}
function isShadowRoot(value) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle$1(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
}
function isTableElement(element) {
  return ["table", "td", "th"].includes(getNodeName(element));
}
function isContainingBlock(element) {
  const webkit = isWebKit();
  const css = getComputedStyle$1(element);
  return css.transform !== "none" || css.perspective !== "none" || (css.containerType ? css.containerType !== "normal" : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== "none" : false) || !webkit && (css.filter ? css.filter !== "none" : false) || ["transform", "perspective", "filter"].some((value) => (css.willChange || "").includes(value)) || ["paint", "layout", "strict", "content"].some((value) => (css.contain || "").includes(value));
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  while (isHTMLElement$1(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else {
      currentNode = getParentNode(currentNode);
    }
  }
  return null;
}
function isWebKit() {
  if (typeof CSS === "undefined" || !CSS.supports)
    return false;
  return CSS.supports("-webkit-backdrop-filter", "none");
}
function isLastTraversableNode(node) {
  return ["html", "body", "#document"].includes(getNodeName(node));
}
function getComputedStyle$1(element) {
  return getWindow(element).getComputedStyle(element);
}
function getNodeScroll(element) {
  if (isElement(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.pageXOffset,
    scrollTop: element.pageYOffset
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html") {
    return node;
  }
  const result = (
    // Step into the shadow DOM of the parent of a slotted node.
    node.assignedSlot || // DOM Element detected.
    node.parentNode || // ShadowRoot detected.
    isShadowRoot(node) && node.host || // Fallback.
    getDocumentElement(node)
  );
  return isShadowRoot(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (isLastTraversableNode(parentNode)) {
    return node.ownerDocument ? node.ownerDocument.body : node.body;
  }
  if (isHTMLElement$1(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list, traverseIframes) {
  var _node$ownerDocument2;
  if (list === void 0) {
    list = [];
  }
  if (traverseIframes === void 0) {
    traverseIframes = true;
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
  const win = getWindow(scrollableAncestor);
  if (isBody) {
    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);
  }
  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}
function getCssDimensions(element) {
  const css = getComputedStyle$1(element);
  let width = parseFloat(css.width) || 0;
  let height = parseFloat(css.height) || 0;
  const hasOffset = isHTMLElement$1(element);
  const offsetWidth = hasOffset ? element.offsetWidth : width;
  const offsetHeight = hasOffset ? element.offsetHeight : height;
  const shouldFallback = round$1(width) !== offsetWidth || round$1(height) !== offsetHeight;
  if (shouldFallback) {
    width = offsetWidth;
    height = offsetHeight;
  }
  return {
    width,
    height,
    $: shouldFallback
  };
}
function unwrapElement(element) {
  return !isElement(element) ? element.contextElement : element;
}
function getScale(element) {
  const domElement = unwrapElement(element);
  if (!isHTMLElement$1(domElement)) {
    return createCoords(1);
  }
  const rect = domElement.getBoundingClientRect();
  const {
    width,
    height,
    $
  } = getCssDimensions(domElement);
  let x2 = ($ ? round$1(rect.width) : rect.width) / width;
  let y2 = ($ ? round$1(rect.height) : rect.height) / height;
  if (!x2 || !Number.isFinite(x2)) {
    x2 = 1;
  }
  if (!y2 || !Number.isFinite(y2)) {
    y2 = 1;
  }
  return {
    x: x2,
    y: y2
  };
}
const noOffsets = /* @__PURE__ */ createCoords(0);
function getVisualOffsets(element) {
  const win = getWindow(element);
  if (!isWebKit() || !win.visualViewport) {
    return noOffsets;
  }
  return {
    x: win.visualViewport.offsetLeft,
    y: win.visualViewport.offsetTop
  };
}
function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {
    return false;
  }
  return isFixed;
}
function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  const domElement = unwrapElement(element);
  let scale = createCoords(1);
  if (includeScale) {
    if (offsetParent) {
      if (isElement(offsetParent)) {
        scale = getScale(offsetParent);
      }
    } else {
      scale = getScale(element);
    }
  }
  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);
  let x2 = (clientRect.left + visualOffsets.x) / scale.x;
  let y2 = (clientRect.top + visualOffsets.y) / scale.y;
  let width = clientRect.width / scale.x;
  let height = clientRect.height / scale.y;
  if (domElement) {
    const win = getWindow(domElement);
    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;
    let currentWin = win;
    let currentIFrame = currentWin.frameElement;
    while (currentIFrame && offsetParent && offsetWin !== currentWin) {
      const iframeScale = getScale(currentIFrame);
      const iframeRect = currentIFrame.getBoundingClientRect();
      const css = getComputedStyle$1(currentIFrame);
      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
      x2 *= iframeScale.x;
      y2 *= iframeScale.y;
      width *= iframeScale.x;
      height *= iframeScale.y;
      x2 += left;
      y2 += top;
      currentWin = getWindow(currentIFrame);
      currentIFrame = currentWin.frameElement;
    }
  }
  return rectToClientRect({
    width,
    height,
    x: x2,
    y: y2
  });
}
const topLayerSelectors = [":popover-open", ":modal"];
function isTopLayer(floating) {
  return topLayerSelectors.some((selector2) => {
    try {
      return floating.matches(selector2);
    } catch (e3) {
      return false;
    }
  });
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    elements,
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isFixed = strategy === "fixed";
  const documentElement = getDocumentElement(offsetParent);
  const topLayer = elements ? isTopLayer(elements.floating) : false;
  if (offsetParent === documentElement || topLayer && isFixed) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  let scale = createCoords(1);
  const offsets = createCoords(0);
  const isOffsetParentAnElement = isHTMLElement$1(offsetParent);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement$1(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent);
      scale = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  return {
    width: rect.width * scale.x,
    height: rect.height * scale.y,
    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,
    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y
  };
}
function getClientRects(element) {
  return Array.from(element.getClientRects());
}
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;
}
function getDocumentRect(element) {
  const html = getDocumentElement(element);
  const scroll = getNodeScroll(element);
  const body = element.ownerDocument.body;
  const width = max$3(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
  const height = max$3(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
  let x2 = -scroll.scrollLeft + getWindowScrollBarX(element);
  const y2 = -scroll.scrollTop;
  if (getComputedStyle$1(body).direction === "rtl") {
    x2 += max$3(html.clientWidth, body.clientWidth) - width;
  }
  return {
    width,
    height,
    x: x2,
    y: y2
  };
}
function getViewportRect(element, strategy) {
  const win = getWindow(element);
  const html = getDocumentElement(element);
  const visualViewport = win.visualViewport;
  let width = html.clientWidth;
  let height = html.clientHeight;
  let x2 = 0;
  let y2 = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    const visualViewportBased = isWebKit();
    if (!visualViewportBased || visualViewportBased && strategy === "fixed") {
      x2 = visualViewport.offsetLeft;
      y2 = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x: x2,
    y: y2
  };
}
function getInnerBoundingClientRect(element, strategy) {
  const clientRect = getBoundingClientRect(element, true, strategy === "fixed");
  const top = clientRect.top + element.clientTop;
  const left = clientRect.left + element.clientLeft;
  const scale = isHTMLElement$1(element) ? getScale(element) : createCoords(1);
  const width = element.clientWidth * scale.x;
  const height = element.clientHeight * scale.y;
  const x2 = left * scale.x;
  const y2 = top * scale.y;
  return {
    width,
    height,
    x: x2,
    y: y2
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === "viewport") {
    rect = getViewportRect(element, strategy);
  } else if (clippingAncestor === "document") {
    rect = getDocumentRect(getDocumentElement(element));
  } else if (isElement(clippingAncestor)) {
    rect = getInnerBoundingClientRect(clippingAncestor, strategy);
  } else {
    const visualOffsets = getVisualOffsets(element);
    rect = {
      ...clippingAncestor,
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y
    };
  }
  return rectToClientRect(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
  const parentNode = getParentNode(element);
  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {
    return false;
  }
  return getComputedStyle$1(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
}
function getClippingElementAncestors(element, cache) {
  const cachedResult = cache.get(element);
  if (cachedResult) {
    return cachedResult;
  }
  let result = getOverflowAncestors(element, [], false).filter((el2) => isElement(el2) && getNodeName(el2) !== "body");
  let currentContainingBlockComputedStyle = null;
  const elementIsFixed = getComputedStyle$1(element).position === "fixed";
  let currentNode = elementIsFixed ? getParentNode(element) : element;
  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {
    const computedStyle = getComputedStyle$1(currentNode);
    const currentNodeIsContaining = isContainingBlock(currentNode);
    if (!currentNodeIsContaining && computedStyle.position === "fixed") {
      currentContainingBlockComputedStyle = null;
    }
    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
    if (shouldDropCurrentNode) {
      result = result.filter((ancestor) => ancestor !== currentNode);
    } else {
      currentContainingBlockComputedStyle = computedStyle;
    }
    currentNode = getParentNode(currentNode);
  }
  cache.set(element, result);
  return result;
}
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref;
  const elementClippingAncestors = boundary === "clippingAncestors" ? getClippingElementAncestors(element, this._c) : [].concat(boundary);
  const clippingAncestors = [...elementClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = max$3(rect.top, accRect.top);
    accRect.right = min$3(rect.right, accRect.right);
    accRect.bottom = min$3(rect.bottom, accRect.bottom);
    accRect.left = max$3(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
function getDimensions(element) {
  const {
    width,
    height
  } = getCssDimensions(element);
  return {
    width,
    height
  };
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement$1(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  const isFixed = strategy === "fixed";
  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = createCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isOffsetParentAnElement) {
      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  const x2 = rect.left + scroll.scrollLeft - offsets.x;
  const y2 = rect.top + scroll.scrollTop - offsets.y;
  return {
    x: x2,
    y: y2,
    width: rect.width,
    height: rect.height
  };
}
function getTrueOffsetParent(element, polyfill) {
  if (!isHTMLElement$1(element) || getComputedStyle$1(element).position === "fixed") {
    return null;
  }
  if (polyfill) {
    return polyfill(element);
  }
  return element.offsetParent;
}
function getOffsetParent(element, polyfill) {
  const window2 = getWindow(element);
  if (!isHTMLElement$1(element) || isTopLayer(element)) {
    return window2;
  }
  let offsetParent = getTrueOffsetParent(element, polyfill);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent, polyfill);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle$1(offsetParent).position === "static" && !isContainingBlock(offsetParent))) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}
const getElementRects = async function(data2) {
  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
  const getDimensionsFn = this.getDimensions;
  return {
    reference: getRectRelativeToOffsetParent(data2.reference, await getOffsetParentFn(data2.floating), data2.strategy),
    floating: {
      x: 0,
      y: 0,
      ...await getDimensionsFn(data2.floating)
    }
  };
};
function isRTL(element) {
  return getComputedStyle$1(element).direction === "rtl";
}
const platform = {
  convertOffsetParentRelativeRectToViewportRelativeRect,
  getDocumentElement,
  getClippingRect,
  getOffsetParent,
  getElementRects,
  getClientRects,
  getDimensions,
  getScale,
  isElement,
  isRTL
};
function observeMove(element, onMove) {
  let io = null;
  let timeoutId;
  const root2 = getDocumentElement(element);
  function cleanup() {
    var _io;
    clearTimeout(timeoutId);
    (_io = io) == null || _io.disconnect();
    io = null;
  }
  function refresh(skip, threshold2) {
    if (skip === void 0) {
      skip = false;
    }
    if (threshold2 === void 0) {
      threshold2 = 1;
    }
    cleanup();
    const {
      left,
      top,
      width,
      height
    } = element.getBoundingClientRect();
    if (!skip) {
      onMove();
    }
    if (!width || !height) {
      return;
    }
    const insetTop = floor(top);
    const insetRight = floor(root2.clientWidth - (left + width));
    const insetBottom = floor(root2.clientHeight - (top + height));
    const insetLeft = floor(left);
    const rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
    const options = {
      rootMargin,
      threshold: max$3(0, min$3(1, threshold2)) || 1
    };
    let isFirstUpdate = true;
    function handleObserve(entries) {
      const ratio = entries[0].intersectionRatio;
      if (ratio !== threshold2) {
        if (!isFirstUpdate) {
          return refresh();
        }
        if (!ratio) {
          timeoutId = setTimeout(() => {
            refresh(false, 1e-7);
          }, 100);
        } else {
          refresh(false, ratio);
        }
      }
      isFirstUpdate = false;
    }
    try {
      io = new IntersectionObserver(handleObserve, {
        ...options,
        // Handle <iframe>s
        root: root2.ownerDocument
      });
    } catch (e3) {
      io = new IntersectionObserver(handleObserve, options);
    }
    io.observe(element);
  }
  refresh(true);
  return cleanup;
}
function autoUpdate(reference, floating, update, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    ancestorScroll = true,
    ancestorResize = true,
    elementResize = typeof ResizeObserver === "function",
    layoutShift = typeof IntersectionObserver === "function",
    animationFrame = false
  } = options;
  const referenceEl = unwrapElement(reference);
  const ancestors = ancestorScroll || ancestorResize ? [...referenceEl ? getOverflowAncestors(referenceEl) : [], ...getOverflowAncestors(floating)] : [];
  ancestors.forEach((ancestor) => {
    ancestorScroll && ancestor.addEventListener("scroll", update, {
      passive: true
    });
    ancestorResize && ancestor.addEventListener("resize", update);
  });
  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
  let reobserveFrame = -1;
  let resizeObserver = null;
  if (elementResize) {
    resizeObserver = new ResizeObserver((_ref) => {
      let [firstEntry] = _ref;
      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {
        resizeObserver.unobserve(floating);
        cancelAnimationFrame(reobserveFrame);
        reobserveFrame = requestAnimationFrame(() => {
          var _resizeObserver;
          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);
        });
      }
      update();
    });
    if (referenceEl && !animationFrame) {
      resizeObserver.observe(referenceEl);
    }
    resizeObserver.observe(floating);
  }
  let frameId;
  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
  if (animationFrame) {
    frameLoop();
  }
  function frameLoop() {
    const nextRefRect = getBoundingClientRect(reference);
    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {
      update();
    }
    prevRefRect = nextRefRect;
    frameId = requestAnimationFrame(frameLoop);
  }
  update();
  return () => {
    var _resizeObserver2;
    ancestors.forEach((ancestor) => {
      ancestorScroll && ancestor.removeEventListener("scroll", update);
      ancestorResize && ancestor.removeEventListener("resize", update);
    });
    cleanupIo == null || cleanupIo();
    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();
    resizeObserver = null;
    if (animationFrame) {
      cancelAnimationFrame(frameId);
    }
  };
}
const shift = shift$1;
const flip = flip$1;
const size = size$1;
const hide = hide$1;
const arrow$1 = arrow$2;
const limitShift = limitShift$1;
const computePosition = (reference, floating, options) => {
  const cache = /* @__PURE__ */ new Map();
  const mergedOptions = {
    platform,
    ...options
  };
  const platformWithCache = {
    ...mergedOptions.platform,
    _c: cache
  };
  return computePosition$1(reference, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};
const arrow = (options) => {
  function isRef(value) {
    return {}.hasOwnProperty.call(value, "current");
  }
  return {
    name: "arrow",
    options,
    fn(state) {
      const {
        element,
        padding
      } = typeof options === "function" ? options(state) : options;
      if (element && isRef(element)) {
        if (element.current != null) {
          return arrow$1({
            element: element.current,
            padding
          }).fn(state);
        }
        return {};
      }
      if (element) {
        return arrow$1({
          element,
          padding
        }).fn(state);
      }
      return {};
    }
  };
};
var index$1 = typeof document !== "undefined" ? reactExports.useLayoutEffect : reactExports.useEffect;
function deepEqual$2(a2, b2) {
  if (a2 === b2) {
    return true;
  }
  if (typeof a2 !== typeof b2) {
    return false;
  }
  if (typeof a2 === "function" && a2.toString() === b2.toString()) {
    return true;
  }
  let length2;
  let i2;
  let keys2;
  if (a2 && b2 && typeof a2 === "object") {
    if (Array.isArray(a2)) {
      length2 = a2.length;
      if (length2 !== b2.length)
        return false;
      for (i2 = length2; i2-- !== 0; ) {
        if (!deepEqual$2(a2[i2], b2[i2])) {
          return false;
        }
      }
      return true;
    }
    keys2 = Object.keys(a2);
    length2 = keys2.length;
    if (length2 !== Object.keys(b2).length) {
      return false;
    }
    for (i2 = length2; i2-- !== 0; ) {
      if (!{}.hasOwnProperty.call(b2, keys2[i2])) {
        return false;
      }
    }
    for (i2 = length2; i2-- !== 0; ) {
      const key = keys2[i2];
      if (key === "_owner" && a2.$$typeof) {
        continue;
      }
      if (!deepEqual$2(a2[key], b2[key])) {
        return false;
      }
    }
    return true;
  }
  return a2 !== a2 && b2 !== b2;
}
function getDPR(element) {
  if (typeof window === "undefined") {
    return 1;
  }
  const win = element.ownerDocument.defaultView || window;
  return win.devicePixelRatio || 1;
}
function roundByDPR(element, value) {
  const dpr = getDPR(element);
  return Math.round(value * dpr) / dpr;
}
function useLatestRef(value) {
  const ref = reactExports.useRef(value);
  index$1(() => {
    ref.current = value;
  });
  return ref;
}
function useFloating(options) {
  if (options === void 0) {
    options = {};
  }
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2,
    elements: {
      reference: externalReference,
      floating: externalFloating
    } = {},
    transform: transform2 = true,
    whileElementsMounted,
    open
  } = options;
  const [data2, setData] = reactExports.useState({
    x: 0,
    y: 0,
    strategy,
    placement,
    middlewareData: {},
    isPositioned: false
  });
  const [latestMiddleware, setLatestMiddleware] = reactExports.useState(middleware);
  if (!deepEqual$2(latestMiddleware, middleware)) {
    setLatestMiddleware(middleware);
  }
  const [_reference, _setReference] = reactExports.useState(null);
  const [_floating, _setFloating] = reactExports.useState(null);
  const setReference = reactExports.useCallback((node) => {
    if (node !== referenceRef.current) {
      referenceRef.current = node;
      _setReference(node);
    }
  }, []);
  const setFloating = reactExports.useCallback((node) => {
    if (node !== floatingRef.current) {
      floatingRef.current = node;
      _setFloating(node);
    }
  }, []);
  const referenceEl = externalReference || _reference;
  const floatingEl = externalFloating || _floating;
  const referenceRef = reactExports.useRef(null);
  const floatingRef = reactExports.useRef(null);
  const dataRef = reactExports.useRef(data2);
  const hasWhileElementsMounted = whileElementsMounted != null;
  const whileElementsMountedRef = useLatestRef(whileElementsMounted);
  const platformRef = useLatestRef(platform2);
  const update = reactExports.useCallback(() => {
    if (!referenceRef.current || !floatingRef.current) {
      return;
    }
    const config2 = {
      placement,
      strategy,
      middleware: latestMiddleware
    };
    if (platformRef.current) {
      config2.platform = platformRef.current;
    }
    computePosition(referenceRef.current, floatingRef.current, config2).then((data3) => {
      const fullData = {
        ...data3,
        isPositioned: true
      };
      if (isMountedRef.current && !deepEqual$2(dataRef.current, fullData)) {
        dataRef.current = fullData;
        reactDomExports.flushSync(() => {
          setData(fullData);
        });
      }
    });
  }, [latestMiddleware, placement, strategy, platformRef]);
  index$1(() => {
    if (open === false && dataRef.current.isPositioned) {
      dataRef.current.isPositioned = false;
      setData((data3) => ({
        ...data3,
        isPositioned: false
      }));
    }
  }, [open]);
  const isMountedRef = reactExports.useRef(false);
  index$1(() => {
    isMountedRef.current = true;
    return () => {
      isMountedRef.current = false;
    };
  }, []);
  index$1(() => {
    if (referenceEl)
      referenceRef.current = referenceEl;
    if (floatingEl)
      floatingRef.current = floatingEl;
    if (referenceEl && floatingEl) {
      if (whileElementsMountedRef.current) {
        return whileElementsMountedRef.current(referenceEl, floatingEl, update);
      }
      update();
    }
  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);
  const refs = reactExports.useMemo(() => ({
    reference: referenceRef,
    floating: floatingRef,
    setReference,
    setFloating
  }), [setReference, setFloating]);
  const elements = reactExports.useMemo(() => ({
    reference: referenceEl,
    floating: floatingEl
  }), [referenceEl, floatingEl]);
  const floatingStyles = reactExports.useMemo(() => {
    const initialStyles = {
      position: strategy,
      left: 0,
      top: 0
    };
    if (!elements.floating) {
      return initialStyles;
    }
    const x2 = roundByDPR(elements.floating, data2.x);
    const y2 = roundByDPR(elements.floating, data2.y);
    if (transform2) {
      return {
        ...initialStyles,
        transform: "translate(" + x2 + "px, " + y2 + "px)",
        ...getDPR(elements.floating) >= 1.5 && {
          willChange: "transform"
        }
      };
    }
    return {
      position: strategy,
      left: x2,
      top: y2
    };
  }, [strategy, transform2, elements.floating, data2.x, data2.y]);
  return reactExports.useMemo(() => ({
    ...data2,
    update,
    refs,
    elements,
    floatingStyles
  }), [data2, update, refs, elements, floatingStyles]);
}
const $7e8f5cd07187803e$export$21b07c8f274aebd5 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { children: children2, width = 10, height = 5, ...arrowProps } = props;
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.svg, _extends$y({}, arrowProps, {
    ref: forwardedRef,
    width,
    height,
    viewBox: "0 0 30 10",
    preserveAspectRatio: "none"
  }), props.asChild ? children2 : /* @__PURE__ */ reactExports.createElement("polygon", {
    points: "0,0 30,0 15,10"
  }));
});
const $7e8f5cd07187803e$export$be92b6f5f03c0fe9 = $7e8f5cd07187803e$export$21b07c8f274aebd5;
const $cf1ac5d9fe0e8206$var$POPPER_NAME = "Popper";
const [$cf1ac5d9fe0e8206$var$createPopperContext, $cf1ac5d9fe0e8206$export$722aac194ae923] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($cf1ac5d9fe0e8206$var$POPPER_NAME);
const [$cf1ac5d9fe0e8206$var$PopperProvider, $cf1ac5d9fe0e8206$var$usePopperContext] = $cf1ac5d9fe0e8206$var$createPopperContext($cf1ac5d9fe0e8206$var$POPPER_NAME);
const $cf1ac5d9fe0e8206$export$badac9ada3a0bdf9 = (props) => {
  const { __scopePopper, children: children2 } = props;
  const [anchor, setAnchor] = reactExports.useState(null);
  return /* @__PURE__ */ reactExports.createElement($cf1ac5d9fe0e8206$var$PopperProvider, {
    scope: __scopePopper,
    anchor,
    onAnchorChange: setAnchor
  }, children2);
};
const $cf1ac5d9fe0e8206$var$ANCHOR_NAME = "PopperAnchor";
const $cf1ac5d9fe0e8206$export$ecd4e1ccab6ed6d = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopePopper, virtualRef, ...anchorProps } = props;
  const context = $cf1ac5d9fe0e8206$var$usePopperContext($cf1ac5d9fe0e8206$var$ANCHOR_NAME, __scopePopper);
  const ref = reactExports.useRef(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  reactExports.useEffect(() => {
    context.onAnchorChange((virtualRef === null || virtualRef === void 0 ? void 0 : virtualRef.current) || ref.current);
  });
  return virtualRef ? null : /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({}, anchorProps, {
    ref: composedRefs
  }));
});
const $cf1ac5d9fe0e8206$var$CONTENT_NAME = "PopperContent";
const [$cf1ac5d9fe0e8206$var$PopperContentProvider, $cf1ac5d9fe0e8206$var$useContentContext] = $cf1ac5d9fe0e8206$var$createPopperContext($cf1ac5d9fe0e8206$var$CONTENT_NAME);
const $cf1ac5d9fe0e8206$export$bc4ae5855d3c4fc = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  var _arrowSize$width, _arrowSize$height, _middlewareData$arrow, _middlewareData$arrow2, _middlewareData$arrow3, _middlewareData$trans, _middlewareData$trans2, _middlewareData$hide;
  const { __scopePopper, side = "bottom", sideOffset = 0, align = "center", alignOffset = 0, arrowPadding = 0, avoidCollisions = true, collisionBoundary = [], collisionPadding: collisionPaddingProp = 0, sticky = "partial", hideWhenDetached = false, updatePositionStrategy = "optimized", onPlaced, ...contentProps } = props;
  const context = $cf1ac5d9fe0e8206$var$usePopperContext($cf1ac5d9fe0e8206$var$CONTENT_NAME, __scopePopper);
  const [content, setContent] = reactExports.useState(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setContent(node)
  );
  const [arrow$12, setArrow] = reactExports.useState(null);
  const arrowSize = $db6c3485150b8e66$export$1ab7ae714698c4b8(arrow$12);
  const arrowWidth = (_arrowSize$width = arrowSize === null || arrowSize === void 0 ? void 0 : arrowSize.width) !== null && _arrowSize$width !== void 0 ? _arrowSize$width : 0;
  const arrowHeight = (_arrowSize$height = arrowSize === null || arrowSize === void 0 ? void 0 : arrowSize.height) !== null && _arrowSize$height !== void 0 ? _arrowSize$height : 0;
  const desiredPlacement = side + (align !== "center" ? "-" + align : "");
  const collisionPadding = typeof collisionPaddingProp === "number" ? collisionPaddingProp : {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...collisionPaddingProp
  };
  const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [
    collisionBoundary
  ];
  const hasExplicitBoundaries = boundary.length > 0;
  const detectOverflowOptions = {
    padding: collisionPadding,
    boundary: boundary.filter($cf1ac5d9fe0e8206$var$isNotNull),
    // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries
    altBoundary: hasExplicitBoundaries
  };
  const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({
    // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues
    strategy: "fixed",
    placement: desiredPlacement,
    whileElementsMounted: (...args) => {
      const cleanup = autoUpdate(...args, {
        animationFrame: updatePositionStrategy === "always"
      });
      return cleanup;
    },
    elements: {
      reference: context.anchor
    },
    middleware: [
      offset({
        mainAxis: sideOffset + arrowHeight,
        alignmentAxis: alignOffset
      }),
      avoidCollisions && shift({
        mainAxis: true,
        crossAxis: false,
        limiter: sticky === "partial" ? limitShift() : void 0,
        ...detectOverflowOptions
      }),
      avoidCollisions && flip({
        ...detectOverflowOptions
      }),
      size({
        ...detectOverflowOptions,
        apply: ({ elements, rects, availableWidth, availableHeight }) => {
          const { width: anchorWidth, height: anchorHeight } = rects.reference;
          const contentStyle = elements.floating.style;
          contentStyle.setProperty("--radix-popper-available-width", `${availableWidth}px`);
          contentStyle.setProperty("--radix-popper-available-height", `${availableHeight}px`);
          contentStyle.setProperty("--radix-popper-anchor-width", `${anchorWidth}px`);
          contentStyle.setProperty("--radix-popper-anchor-height", `${anchorHeight}px`);
        }
      }),
      arrow$12 && arrow({
        element: arrow$12,
        padding: arrowPadding
      }),
      $cf1ac5d9fe0e8206$var$transformOrigin({
        arrowWidth,
        arrowHeight
      }),
      hideWhenDetached && hide({
        strategy: "referenceHidden",
        ...detectOverflowOptions
      })
    ]
  });
  const [placedSide, placedAlign] = $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement);
  const handlePlaced = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onPlaced);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (isPositioned)
      handlePlaced === null || handlePlaced === void 0 || handlePlaced();
  }, [
    isPositioned,
    handlePlaced
  ]);
  const arrowX = (_middlewareData$arrow = middlewareData.arrow) === null || _middlewareData$arrow === void 0 ? void 0 : _middlewareData$arrow.x;
  const arrowY = (_middlewareData$arrow2 = middlewareData.arrow) === null || _middlewareData$arrow2 === void 0 ? void 0 : _middlewareData$arrow2.y;
  const cannotCenterArrow = ((_middlewareData$arrow3 = middlewareData.arrow) === null || _middlewareData$arrow3 === void 0 ? void 0 : _middlewareData$arrow3.centerOffset) !== 0;
  const [contentZIndex, setContentZIndex] = reactExports.useState();
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (content)
      setContentZIndex(window.getComputedStyle(content).zIndex);
  }, [
    content
  ]);
  return /* @__PURE__ */ reactExports.createElement("div", {
    ref: refs.setFloating,
    "data-radix-popper-content-wrapper": "",
    style: {
      ...floatingStyles,
      transform: isPositioned ? floatingStyles.transform : "translate(0, -200%)",
      // keep off the page when measuring
      minWidth: "max-content",
      zIndex: contentZIndex,
      ["--radix-popper-transform-origin"]: [
        (_middlewareData$trans = middlewareData.transformOrigin) === null || _middlewareData$trans === void 0 ? void 0 : _middlewareData$trans.x,
        (_middlewareData$trans2 = middlewareData.transformOrigin) === null || _middlewareData$trans2 === void 0 ? void 0 : _middlewareData$trans2.y
      ].join(" ")
    },
    dir: props.dir
  }, /* @__PURE__ */ reactExports.createElement($cf1ac5d9fe0e8206$var$PopperContentProvider, {
    scope: __scopePopper,
    placedSide,
    onArrowChange: setArrow,
    arrowX,
    arrowY,
    shouldHideArrow: cannotCenterArrow
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    "data-side": placedSide,
    "data-align": placedAlign
  }, contentProps, {
    ref: composedRefs,
    style: {
      ...contentProps.style,
      // if the PopperContent hasn't been placed yet (not all measurements done)
      // we prevent animations so that users's animation don't kick in too early referring wrong sides
      animation: !isPositioned ? "none" : void 0,
      // hide the content if using the hide middleware and should be hidden
      opacity: (_middlewareData$hide = middlewareData.hide) !== null && _middlewareData$hide !== void 0 && _middlewareData$hide.referenceHidden ? 0 : void 0
    }
  }))));
});
const $cf1ac5d9fe0e8206$var$ARROW_NAME = "PopperArrow";
const $cf1ac5d9fe0e8206$var$OPPOSITE_SIDE = {
  top: "bottom",
  right: "left",
  bottom: "top",
  left: "right"
};
const $cf1ac5d9fe0e8206$export$79d62cd4e10a3fd0 = /* @__PURE__ */ reactExports.forwardRef(function $cf1ac5d9fe0e8206$export$79d62cd4e10a3fd02(props, forwardedRef) {
  const { __scopePopper, ...arrowProps } = props;
  const contentContext = $cf1ac5d9fe0e8206$var$useContentContext($cf1ac5d9fe0e8206$var$ARROW_NAME, __scopePopper);
  const baseSide = $cf1ac5d9fe0e8206$var$OPPOSITE_SIDE[contentContext.placedSide];
  return (
    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)
    // doesn't report size as we'd expect on SVG elements.
    // it reports their bounding box which is effectively the largest path inside the SVG.
    /* @__PURE__ */ reactExports.createElement("span", {
      ref: contentContext.onArrowChange,
      style: {
        position: "absolute",
        left: contentContext.arrowX,
        top: contentContext.arrowY,
        [baseSide]: 0,
        transformOrigin: {
          top: "",
          right: "0 0",
          bottom: "center 0",
          left: "100% 0"
        }[contentContext.placedSide],
        transform: {
          top: "translateY(100%)",
          right: "translateY(50%) rotate(90deg) translateX(-50%)",
          bottom: `rotate(180deg)`,
          left: "translateY(50%) rotate(-90deg) translateX(50%)"
        }[contentContext.placedSide],
        visibility: contentContext.shouldHideArrow ? "hidden" : void 0
      }
    }, /* @__PURE__ */ reactExports.createElement($7e8f5cd07187803e$export$be92b6f5f03c0fe9, _extends$y({}, arrowProps, {
      ref: forwardedRef,
      style: {
        ...arrowProps.style,
        // ensures the element can be measured correctly (mostly for if SVG)
        display: "block"
      }
    })))
  );
});
/* @__PURE__ */ Object.assign($cf1ac5d9fe0e8206$export$79d62cd4e10a3fd0, {
  displayName: $cf1ac5d9fe0e8206$var$ARROW_NAME
});
function $cf1ac5d9fe0e8206$var$isNotNull(value) {
  return value !== null;
}
const $cf1ac5d9fe0e8206$var$transformOrigin = (options) => ({
  name: "transformOrigin",
  options,
  fn(data2) {
    var _middlewareData$arrow4, _middlewareData$arrow5, _middlewareData$arrow6, _middlewareData$arrow7, _middlewareData$arrow8;
    const { placement, rects, middlewareData } = data2;
    const cannotCenterArrow = ((_middlewareData$arrow4 = middlewareData.arrow) === null || _middlewareData$arrow4 === void 0 ? void 0 : _middlewareData$arrow4.centerOffset) !== 0;
    const isArrowHidden = cannotCenterArrow;
    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;
    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;
    const [placedSide, placedAlign] = $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement);
    const noArrowAlign = {
      start: "0%",
      center: "50%",
      end: "100%"
    }[placedAlign];
    const arrowXCenter = ((_middlewareData$arrow5 = (_middlewareData$arrow6 = middlewareData.arrow) === null || _middlewareData$arrow6 === void 0 ? void 0 : _middlewareData$arrow6.x) !== null && _middlewareData$arrow5 !== void 0 ? _middlewareData$arrow5 : 0) + arrowWidth / 2;
    const arrowYCenter = ((_middlewareData$arrow7 = (_middlewareData$arrow8 = middlewareData.arrow) === null || _middlewareData$arrow8 === void 0 ? void 0 : _middlewareData$arrow8.y) !== null && _middlewareData$arrow7 !== void 0 ? _middlewareData$arrow7 : 0) + arrowHeight / 2;
    let x2 = "";
    let y2 = "";
    if (placedSide === "bottom") {
      x2 = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;
      y2 = `${-arrowHeight}px`;
    } else if (placedSide === "top") {
      x2 = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;
      y2 = `${rects.floating.height + arrowHeight}px`;
    } else if (placedSide === "right") {
      x2 = `${-arrowHeight}px`;
      y2 = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;
    } else if (placedSide === "left") {
      x2 = `${rects.floating.width + arrowHeight}px`;
      y2 = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;
    }
    return {
      data: {
        x: x2,
        y: y2
      }
    };
  }
});
function $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement) {
  const [side, align = "center"] = placement.split("-");
  return [
    side,
    align
  ];
}
const $cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9 = $cf1ac5d9fe0e8206$export$badac9ada3a0bdf9;
const $cf1ac5d9fe0e8206$export$b688253958b8dfe7 = $cf1ac5d9fe0e8206$export$ecd4e1ccab6ed6d;
const $cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2 = $cf1ac5d9fe0e8206$export$bc4ae5855d3c4fc;
const $ea1ef594cf570d83$export$439d29a4e110a164 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends$y({}, props, {
    ref: forwardedRef,
    style: {
      // See: https://github.com/twbs/bootstrap/blob/master/scss/mixins/_screen-reader.scss
      position: "absolute",
      border: 0,
      width: 1,
      height: 1,
      padding: 0,
      margin: -1,
      overflow: "hidden",
      clip: "rect(0, 0, 0, 0)",
      whiteSpace: "nowrap",
      wordWrap: "normal",
      ...props.style
    }
  }));
});
const $ea1ef594cf570d83$export$be92b6f5f03c0fe9 = $ea1ef594cf570d83$export$439d29a4e110a164;
const [$a093c7e1ec25a057$var$createTooltipContext, $a093c7e1ec25a057$export$1c540a2224f0d865] = $c512c27ab02ef895$export$50c7b4e9d9f19c1("Tooltip", [
  $cf1ac5d9fe0e8206$export$722aac194ae923
]);
const $a093c7e1ec25a057$var$usePopperScope = $cf1ac5d9fe0e8206$export$722aac194ae923();
const $a093c7e1ec25a057$var$PROVIDER_NAME = "TooltipProvider";
const $a093c7e1ec25a057$var$DEFAULT_DELAY_DURATION = 700;
const $a093c7e1ec25a057$var$TOOLTIP_OPEN = "tooltip.open";
const [$a093c7e1ec25a057$var$TooltipProviderContextProvider, $a093c7e1ec25a057$var$useTooltipProviderContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$PROVIDER_NAME);
const $a093c7e1ec25a057$export$f78649fb9ca566b8 = (props) => {
  const { __scopeTooltip, delayDuration = $a093c7e1ec25a057$var$DEFAULT_DELAY_DURATION, skipDelayDuration = 300, disableHoverableContent = false, children: children2 } = props;
  const [isOpenDelayed, setIsOpenDelayed] = reactExports.useState(true);
  const isPointerInTransitRef = reactExports.useRef(false);
  const skipDelayTimerRef = reactExports.useRef(0);
  reactExports.useEffect(() => {
    const skipDelayTimer = skipDelayTimerRef.current;
    return () => window.clearTimeout(skipDelayTimer);
  }, []);
  return /* @__PURE__ */ reactExports.createElement($a093c7e1ec25a057$var$TooltipProviderContextProvider, {
    scope: __scopeTooltip,
    isOpenDelayed,
    delayDuration,
    onOpen: reactExports.useCallback(() => {
      window.clearTimeout(skipDelayTimerRef.current);
      setIsOpenDelayed(false);
    }, []),
    onClose: reactExports.useCallback(() => {
      window.clearTimeout(skipDelayTimerRef.current);
      skipDelayTimerRef.current = window.setTimeout(
        () => setIsOpenDelayed(true),
        skipDelayDuration
      );
    }, [
      skipDelayDuration
    ]),
    isPointerInTransitRef,
    onPointerInTransitChange: reactExports.useCallback((inTransit) => {
      isPointerInTransitRef.current = inTransit;
    }, []),
    disableHoverableContent
  }, children2);
};
const $a093c7e1ec25a057$var$TOOLTIP_NAME = "Tooltip";
const [$a093c7e1ec25a057$var$TooltipContextProvider, $a093c7e1ec25a057$var$useTooltipContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$TOOLTIP_NAME);
const $a093c7e1ec25a057$export$28c660c63b792dea = (props) => {
  const { __scopeTooltip, children: children2, open: openProp, defaultOpen = false, onOpenChange, disableHoverableContent: disableHoverableContentProp, delayDuration: delayDurationProp } = props;
  const providerContext = $a093c7e1ec25a057$var$useTooltipProviderContext($a093c7e1ec25a057$var$TOOLTIP_NAME, props.__scopeTooltip);
  const popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip);
  const [trigger, setTrigger] = reactExports.useState(null);
  const contentId = $1746a345f3d73bb7$export$f680877a34711e37();
  const openTimerRef = reactExports.useRef(0);
  const disableHoverableContent = disableHoverableContentProp !== null && disableHoverableContentProp !== void 0 ? disableHoverableContentProp : providerContext.disableHoverableContent;
  const delayDuration = delayDurationProp !== null && delayDurationProp !== void 0 ? delayDurationProp : providerContext.delayDuration;
  const wasOpenDelayedRef = reactExports.useRef(false);
  const [open1 = false, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: (open) => {
      if (open) {
        providerContext.onOpen();
        document.dispatchEvent(new CustomEvent($a093c7e1ec25a057$var$TOOLTIP_OPEN));
      } else
        providerContext.onClose();
      onOpenChange === null || onOpenChange === void 0 || onOpenChange(open);
    }
  });
  const stateAttribute = reactExports.useMemo(() => {
    return open1 ? wasOpenDelayedRef.current ? "delayed-open" : "instant-open" : "closed";
  }, [
    open1
  ]);
  const handleOpen = reactExports.useCallback(() => {
    window.clearTimeout(openTimerRef.current);
    wasOpenDelayedRef.current = false;
    setOpen(true);
  }, [
    setOpen
  ]);
  const handleClose = reactExports.useCallback(() => {
    window.clearTimeout(openTimerRef.current);
    setOpen(false);
  }, [
    setOpen
  ]);
  const handleDelayedOpen = reactExports.useCallback(() => {
    window.clearTimeout(openTimerRef.current);
    openTimerRef.current = window.setTimeout(() => {
      wasOpenDelayedRef.current = true;
      setOpen(true);
    }, delayDuration);
  }, [
    delayDuration,
    setOpen
  ]);
  reactExports.useEffect(() => {
    return () => window.clearTimeout(openTimerRef.current);
  }, []);
  return /* @__PURE__ */ reactExports.createElement($cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9, popperScope, /* @__PURE__ */ reactExports.createElement($a093c7e1ec25a057$var$TooltipContextProvider, {
    scope: __scopeTooltip,
    contentId,
    open: open1,
    stateAttribute,
    trigger,
    onTriggerChange: setTrigger,
    onTriggerEnter: reactExports.useCallback(() => {
      if (providerContext.isOpenDelayed)
        handleDelayedOpen();
      else
        handleOpen();
    }, [
      providerContext.isOpenDelayed,
      handleDelayedOpen,
      handleOpen
    ]),
    onTriggerLeave: reactExports.useCallback(() => {
      if (disableHoverableContent)
        handleClose();
      else
        window.clearTimeout(openTimerRef.current);
    }, [
      handleClose,
      disableHoverableContent
    ]),
    onOpen: handleOpen,
    onClose: handleClose,
    disableHoverableContent
  }, children2));
};
const $a093c7e1ec25a057$var$TRIGGER_NAME = "TooltipTrigger";
const $a093c7e1ec25a057$export$8c610744efcf8a1d = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeTooltip, ...triggerProps } = props;
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$TRIGGER_NAME, __scopeTooltip);
  const providerContext = $a093c7e1ec25a057$var$useTooltipProviderContext($a093c7e1ec25a057$var$TRIGGER_NAME, __scopeTooltip);
  const popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip);
  const ref = reactExports.useRef(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, context.onTriggerChange);
  const isPointerDownRef = reactExports.useRef(false);
  const hasPointerMoveOpenedRef = reactExports.useRef(false);
  const handlePointerUp = reactExports.useCallback(
    () => isPointerDownRef.current = false,
    []
  );
  reactExports.useEffect(() => {
    return () => document.removeEventListener("pointerup", handlePointerUp);
  }, [
    handlePointerUp
  ]);
  return /* @__PURE__ */ reactExports.createElement($cf1ac5d9fe0e8206$export$b688253958b8dfe7, _extends$y({
    asChild: true
  }, popperScope), /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends$y({
    // We purposefully avoid adding `type=button` here because tooltip triggers are also
    // commonly anchors and the anchor `type` attribute signifies MIME type.
    "aria-describedby": context.open ? context.contentId : void 0,
    "data-state": context.stateAttribute
  }, triggerProps, {
    ref: composedRefs,
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, (event) => {
      if (event.pointerType === "touch")
        return;
      if (!hasPointerMoveOpenedRef.current && !providerContext.isPointerInTransitRef.current) {
        context.onTriggerEnter();
        hasPointerMoveOpenedRef.current = true;
      }
    }),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerLeave, () => {
      context.onTriggerLeave();
      hasPointerMoveOpenedRef.current = false;
    }),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, () => {
      isPointerDownRef.current = true;
      document.addEventListener("pointerup", handlePointerUp, {
        once: true
      });
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocus, () => {
      if (!isPointerDownRef.current)
        context.onOpen();
    }),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onBlur, context.onClose),
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, context.onClose)
  })));
});
const $a093c7e1ec25a057$var$PORTAL_NAME = "TooltipPortal";
const [$a093c7e1ec25a057$var$PortalProvider, $a093c7e1ec25a057$var$usePortalContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$PORTAL_NAME, {
  forceMount: void 0
});
const $a093c7e1ec25a057$var$CONTENT_NAME = "TooltipContent";
const $a093c7e1ec25a057$export$e9003e2be37ec060 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const portalContext = $a093c7e1ec25a057$var$usePortalContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  const { forceMount = portalContext.forceMount, side = "top", ...contentProps } = props;
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  return /* @__PURE__ */ reactExports.createElement($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, context.disableHoverableContent ? /* @__PURE__ */ reactExports.createElement($a093c7e1ec25a057$var$TooltipContentImpl, _extends$y({
    side
  }, contentProps, {
    ref: forwardedRef
  })) : /* @__PURE__ */ reactExports.createElement($a093c7e1ec25a057$var$TooltipContentHoverable, _extends$y({
    side
  }, contentProps, {
    ref: forwardedRef
  })));
});
const $a093c7e1ec25a057$var$TooltipContentHoverable = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  const providerContext = $a093c7e1ec25a057$var$useTooltipProviderContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  const ref = reactExports.useRef(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const [pointerGraceArea, setPointerGraceArea] = reactExports.useState(null);
  const { trigger, onClose } = context;
  const content = ref.current;
  const { onPointerInTransitChange } = providerContext;
  const handleRemoveGraceArea = reactExports.useCallback(() => {
    setPointerGraceArea(null);
    onPointerInTransitChange(false);
  }, [
    onPointerInTransitChange
  ]);
  const handleCreateGraceArea = reactExports.useCallback((event, hoverTarget) => {
    const currentTarget = event.currentTarget;
    const exitPoint = {
      x: event.clientX,
      y: event.clientY
    };
    const exitSide = $a093c7e1ec25a057$var$getExitSideFromRect(exitPoint, currentTarget.getBoundingClientRect());
    const paddedExitPoints = $a093c7e1ec25a057$var$getPaddedExitPoints(exitPoint, exitSide);
    const hoverTargetPoints = $a093c7e1ec25a057$var$getPointsFromRect(hoverTarget.getBoundingClientRect());
    const graceArea = $a093c7e1ec25a057$var$getHull([
      ...paddedExitPoints,
      ...hoverTargetPoints
    ]);
    setPointerGraceArea(graceArea);
    onPointerInTransitChange(true);
  }, [
    onPointerInTransitChange
  ]);
  reactExports.useEffect(() => {
    return () => handleRemoveGraceArea();
  }, [
    handleRemoveGraceArea
  ]);
  reactExports.useEffect(() => {
    if (trigger && content) {
      const handleTriggerLeave = (event) => handleCreateGraceArea(event, content);
      const handleContentLeave = (event) => handleCreateGraceArea(event, trigger);
      trigger.addEventListener("pointerleave", handleTriggerLeave);
      content.addEventListener("pointerleave", handleContentLeave);
      return () => {
        trigger.removeEventListener("pointerleave", handleTriggerLeave);
        content.removeEventListener("pointerleave", handleContentLeave);
      };
    }
  }, [
    trigger,
    content,
    handleCreateGraceArea,
    handleRemoveGraceArea
  ]);
  reactExports.useEffect(() => {
    if (pointerGraceArea) {
      const handleTrackPointerGrace = (event) => {
        const target = event.target;
        const pointerPosition = {
          x: event.clientX,
          y: event.clientY
        };
        const hasEnteredTarget = (trigger === null || trigger === void 0 ? void 0 : trigger.contains(target)) || (content === null || content === void 0 ? void 0 : content.contains(target));
        const isPointerOutsideGraceArea = !$a093c7e1ec25a057$var$isPointInPolygon(pointerPosition, pointerGraceArea);
        if (hasEnteredTarget)
          handleRemoveGraceArea();
        else if (isPointerOutsideGraceArea) {
          handleRemoveGraceArea();
          onClose();
        }
      };
      document.addEventListener("pointermove", handleTrackPointerGrace);
      return () => document.removeEventListener("pointermove", handleTrackPointerGrace);
    }
  }, [
    trigger,
    content,
    pointerGraceArea,
    onClose,
    handleRemoveGraceArea
  ]);
  return /* @__PURE__ */ reactExports.createElement($a093c7e1ec25a057$var$TooltipContentImpl, _extends$y({}, props, {
    ref: composedRefs
  }));
});
const [$a093c7e1ec25a057$var$VisuallyHiddenContentContextProvider, $a093c7e1ec25a057$var$useVisuallyHiddenContentContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$TOOLTIP_NAME, {
  isInside: false
});
const $a093c7e1ec25a057$var$TooltipContentImpl = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeTooltip, children: children2, "aria-label": ariaLabel, onEscapeKeyDown, onPointerDownOutside, ...contentProps } = props;
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$CONTENT_NAME, __scopeTooltip);
  const popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip);
  const { onClose } = context;
  reactExports.useEffect(() => {
    document.addEventListener($a093c7e1ec25a057$var$TOOLTIP_OPEN, onClose);
    return () => document.removeEventListener($a093c7e1ec25a057$var$TOOLTIP_OPEN, onClose);
  }, [
    onClose
  ]);
  reactExports.useEffect(() => {
    if (context.trigger) {
      const handleScroll2 = (event) => {
        const target = event.target;
        if (target !== null && target !== void 0 && target.contains(context.trigger))
          onClose();
      };
      window.addEventListener("scroll", handleScroll2, {
        capture: true
      });
      return () => window.removeEventListener("scroll", handleScroll2, {
        capture: true
      });
    }
  }, [
    context.trigger,
    onClose
  ]);
  return /* @__PURE__ */ reactExports.createElement($5cb92bef7577960e$export$177fb62ff3ec1f22, {
    asChild: true,
    disableOutsidePointerEvents: false,
    onEscapeKeyDown,
    onPointerDownOutside,
    onFocusOutside: (event) => event.preventDefault(),
    onDismiss: onClose
  }, /* @__PURE__ */ reactExports.createElement($cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2, _extends$y({
    "data-state": context.stateAttribute
  }, popperScope, contentProps, {
    ref: forwardedRef,
    style: {
      ...contentProps.style,
      "--radix-tooltip-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-tooltip-content-available-width": "var(--radix-popper-available-width)",
      "--radix-tooltip-content-available-height": "var(--radix-popper-available-height)",
      "--radix-tooltip-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-tooltip-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }), /* @__PURE__ */ reactExports.createElement($5e63c961fc1ce211$export$d9f1ccf0bdb05d45, null, children2), /* @__PURE__ */ reactExports.createElement($a093c7e1ec25a057$var$VisuallyHiddenContentContextProvider, {
    scope: __scopeTooltip,
    isInside: true
  }, /* @__PURE__ */ reactExports.createElement($ea1ef594cf570d83$export$be92b6f5f03c0fe9, {
    id: context.contentId,
    role: "tooltip"
  }, ariaLabel || children2))));
});
function $a093c7e1ec25a057$var$getExitSideFromRect(point2, rect) {
  const top = Math.abs(rect.top - point2.y);
  const bottom = Math.abs(rect.bottom - point2.y);
  const right = Math.abs(rect.right - point2.x);
  const left = Math.abs(rect.left - point2.x);
  switch (Math.min(top, bottom, right, left)) {
    case left:
      return "left";
    case right:
      return "right";
    case top:
      return "top";
    case bottom:
      return "bottom";
    default:
      throw new Error("unreachable");
  }
}
function $a093c7e1ec25a057$var$getPaddedExitPoints(exitPoint, exitSide, padding = 5) {
  const paddedExitPoints = [];
  switch (exitSide) {
    case "top":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y + padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y + padding
      });
      break;
    case "bottom":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y - padding
      });
      break;
    case "left":
      paddedExitPoints.push({
        x: exitPoint.x + padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y + padding
      });
      break;
    case "right":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x - padding,
        y: exitPoint.y + padding
      });
      break;
  }
  return paddedExitPoints;
}
function $a093c7e1ec25a057$var$getPointsFromRect(rect) {
  const { top, right, bottom, left } = rect;
  return [
    {
      x: left,
      y: top
    },
    {
      x: right,
      y: top
    },
    {
      x: right,
      y: bottom
    },
    {
      x: left,
      y: bottom
    }
  ];
}
function $a093c7e1ec25a057$var$isPointInPolygon(point2, polygon) {
  const { x: x2, y: y2 } = point2;
  let inside = false;
  for (let i2 = 0, j = polygon.length - 1; i2 < polygon.length; j = i2++) {
    const xi2 = polygon[i2].x;
    const yi2 = polygon[i2].y;
    const xj2 = polygon[j].x;
    const yj2 = polygon[j].y;
    const intersect = yi2 > y2 !== yj2 > y2 && x2 < (xj2 - xi2) * (y2 - yi2) / (yj2 - yi2) + xi2;
    if (intersect)
      inside = !inside;
  }
  return inside;
}
function $a093c7e1ec25a057$var$getHull(points) {
  const newPoints = points.slice();
  newPoints.sort((a2, b2) => {
    if (a2.x < b2.x)
      return -1;
    else if (a2.x > b2.x)
      return 1;
    else if (a2.y < b2.y)
      return -1;
    else if (a2.y > b2.y)
      return 1;
    else
      return 0;
  });
  return $a093c7e1ec25a057$var$getHullPresorted(newPoints);
}
function $a093c7e1ec25a057$var$getHullPresorted(points) {
  if (points.length <= 1)
    return points.slice();
  const upperHull = [];
  for (let i2 = 0; i2 < points.length; i2++) {
    const p2 = points[i2];
    while (upperHull.length >= 2) {
      const q2 = upperHull[upperHull.length - 1];
      const r2 = upperHull[upperHull.length - 2];
      if ((q2.x - r2.x) * (p2.y - r2.y) >= (q2.y - r2.y) * (p2.x - r2.x))
        upperHull.pop();
      else
        break;
    }
    upperHull.push(p2);
  }
  upperHull.pop();
  const lowerHull = [];
  for (let i1 = points.length - 1; i1 >= 0; i1--) {
    const p2 = points[i1];
    while (lowerHull.length >= 2) {
      const q2 = lowerHull[lowerHull.length - 1];
      const r2 = lowerHull[lowerHull.length - 2];
      if ((q2.x - r2.x) * (p2.y - r2.y) >= (q2.y - r2.y) * (p2.x - r2.x))
        lowerHull.pop();
      else
        break;
    }
    lowerHull.push(p2);
  }
  lowerHull.pop();
  if (upperHull.length === 1 && lowerHull.length === 1 && upperHull[0].x === lowerHull[0].x && upperHull[0].y === lowerHull[0].y)
    return upperHull;
  else
    return upperHull.concat(lowerHull);
}
const $a093c7e1ec25a057$export$2881499e37b75b9a = $a093c7e1ec25a057$export$f78649fb9ca566b8;
const $a093c7e1ec25a057$export$be92b6f5f03c0fe9 = $a093c7e1ec25a057$export$28c660c63b792dea;
const $a093c7e1ec25a057$export$41fb9f06171c75f4 = $a093c7e1ec25a057$export$8c610744efcf8a1d;
const $a093c7e1ec25a057$export$7c6e2c02157bb7d2 = $a093c7e1ec25a057$export$e9003e2be37ec060;
const TooltipProvider = $a093c7e1ec25a057$export$2881499e37b75b9a;
const Tooltip$1 = $a093c7e1ec25a057$export$be92b6f5f03c0fe9;
const TooltipTrigger = $a093c7e1ec25a057$export$41fb9f06171c75f4;
const TooltipContent = reactExports.forwardRef(({ className, sideOffset = 4, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $a093c7e1ec25a057$export$7c6e2c02157bb7d2,
  {
    ref,
    sideOffset,
    className: cn(
      "z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className
    ),
    ...props
  }
));
TooltipContent.displayName = $a093c7e1ec25a057$export$7c6e2c02157bb7d2.displayName;
const $f631663db3294ace$var$DirectionContext = /* @__PURE__ */ reactExports.createContext(void 0);
function $f631663db3294ace$export$b39126d51d94e6f3(localDir) {
  const globalDir = reactExports.useContext($f631663db3294ace$var$DirectionContext);
  return localDir || globalDir || "ltr";
}
function $ae6933e535247d3d$export$7d15b64cf5a3a4c4(value, [min2, max2]) {
  return Math.min(max2, Math.max(min2, value));
}
function $6c2e24571c90391f$export$3e6543de14f8614f(initialState2, machine) {
  return reactExports.useReducer((state, event) => {
    const nextState = machine[state][event];
    return nextState !== null && nextState !== void 0 ? nextState : state;
  }, initialState2);
}
const $57acba87d6e25586$var$SCROLL_AREA_NAME = "ScrollArea";
const [$57acba87d6e25586$var$createScrollAreaContext, $57acba87d6e25586$export$488468afe3a6f2b1] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($57acba87d6e25586$var$SCROLL_AREA_NAME);
const [$57acba87d6e25586$var$ScrollAreaProvider, $57acba87d6e25586$var$useScrollAreaContext] = $57acba87d6e25586$var$createScrollAreaContext($57acba87d6e25586$var$SCROLL_AREA_NAME);
const $57acba87d6e25586$export$ccf8d8d7bbf3c2cc = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeScrollArea, type: type2 = "hover", dir, scrollHideDelay = 600, ...scrollAreaProps } = props;
  const [scrollArea, setScrollArea] = reactExports.useState(null);
  const [viewport, setViewport] = reactExports.useState(null);
  const [content, setContent] = reactExports.useState(null);
  const [scrollbarX, setScrollbarX] = reactExports.useState(null);
  const [scrollbarY, setScrollbarY] = reactExports.useState(null);
  const [cornerWidth, setCornerWidth] = reactExports.useState(0);
  const [cornerHeight, setCornerHeight] = reactExports.useState(0);
  const [scrollbarXEnabled, setScrollbarXEnabled] = reactExports.useState(false);
  const [scrollbarYEnabled, setScrollbarYEnabled] = reactExports.useState(false);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setScrollArea(node)
  );
  const direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  return /* @__PURE__ */ reactExports.createElement($57acba87d6e25586$var$ScrollAreaProvider, {
    scope: __scopeScrollArea,
    type: type2,
    dir: direction,
    scrollHideDelay,
    scrollArea,
    viewport,
    onViewportChange: setViewport,
    content,
    onContentChange: setContent,
    scrollbarX,
    onScrollbarXChange: setScrollbarX,
    scrollbarXEnabled,
    onScrollbarXEnabledChange: setScrollbarXEnabled,
    scrollbarY,
    onScrollbarYChange: setScrollbarY,
    scrollbarYEnabled,
    onScrollbarYEnabledChange: setScrollbarYEnabled,
    onCornerWidthChange: setCornerWidth,
    onCornerHeightChange: setCornerHeight
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    dir: direction
  }, scrollAreaProps, {
    ref: composedRefs,
    style: {
      position: "relative",
      // Pass corner sizes as CSS vars to reduce re-renders of context consumers
      ["--radix-scroll-area-corner-width"]: cornerWidth + "px",
      ["--radix-scroll-area-corner-height"]: cornerHeight + "px",
      ...props.style
    }
  })));
});
const $57acba87d6e25586$var$VIEWPORT_NAME = "ScrollAreaViewport";
const $57acba87d6e25586$export$a21cbf9f11fca853 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeScrollArea, children: children2, ...viewportProps } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$VIEWPORT_NAME, __scopeScrollArea);
  const ref = reactExports.useRef(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, context.onViewportChange);
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement("style", {
    dangerouslySetInnerHTML: {
      __html: `[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}`
    }
  }), /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    "data-radix-scroll-area-viewport": ""
  }, viewportProps, {
    ref: composedRefs,
    style: {
      /**
      * We don't support `visible` because the intention is to have at least one scrollbar
      * if this component is used and `visible` will behave like `auto` in that case
      * https://developer.mozilla.org/en-US/docs/Web/CSS/overflowed#description
      *
      * We don't handle `auto` because the intention is for the native implementation
      * to be hidden if using this component. We just want to ensure the node is scrollable
      * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent
      * the browser from having to work out whether to render native scrollbars or not,
      * we tell it to with the intention of hiding them in CSS.
      */
      overflowX: context.scrollbarXEnabled ? "scroll" : "hidden",
      overflowY: context.scrollbarYEnabled ? "scroll" : "hidden",
      ...props.style
    }
  }), /* @__PURE__ */ reactExports.createElement("div", {
    ref: context.onContentChange,
    style: {
      minWidth: "100%",
      display: "table"
    }
  }, children2)));
});
const $57acba87d6e25586$var$SCROLLBAR_NAME = "ScrollAreaScrollbar";
const $57acba87d6e25586$export$2fabd85d0eba3c57 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { forceMount, ...scrollbarProps } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);
  const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;
  const isHorizontal = props.orientation === "horizontal";
  reactExports.useEffect(() => {
    isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);
    return () => {
      isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);
    };
  }, [
    isHorizontal,
    onScrollbarXEnabledChange,
    onScrollbarYEnabledChange
  ]);
  return context.type === "hover" ? /* @__PURE__ */ reactExports.createElement($57acba87d6e25586$var$ScrollAreaScrollbarHover, _extends$y({}, scrollbarProps, {
    ref: forwardedRef,
    forceMount
  })) : context.type === "scroll" ? /* @__PURE__ */ reactExports.createElement($57acba87d6e25586$var$ScrollAreaScrollbarScroll, _extends$y({}, scrollbarProps, {
    ref: forwardedRef,
    forceMount
  })) : context.type === "auto" ? /* @__PURE__ */ reactExports.createElement($57acba87d6e25586$var$ScrollAreaScrollbarAuto, _extends$y({}, scrollbarProps, {
    ref: forwardedRef,
    forceMount
  })) : context.type === "always" ? /* @__PURE__ */ reactExports.createElement($57acba87d6e25586$var$ScrollAreaScrollbarVisible, _extends$y({}, scrollbarProps, {
    ref: forwardedRef
  })) : null;
});
const $57acba87d6e25586$var$ScrollAreaScrollbarHover = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { forceMount, ...scrollbarProps } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);
  const [visible, setVisible] = reactExports.useState(false);
  reactExports.useEffect(() => {
    const scrollArea = context.scrollArea;
    let hideTimer = 0;
    if (scrollArea) {
      const handlePointerEnter = () => {
        window.clearTimeout(hideTimer);
        setVisible(true);
      };
      const handlePointerLeave = () => {
        hideTimer = window.setTimeout(
          () => setVisible(false),
          context.scrollHideDelay
        );
      };
      scrollArea.addEventListener("pointerenter", handlePointerEnter);
      scrollArea.addEventListener("pointerleave", handlePointerLeave);
      return () => {
        window.clearTimeout(hideTimer);
        scrollArea.removeEventListener("pointerenter", handlePointerEnter);
        scrollArea.removeEventListener("pointerleave", handlePointerLeave);
      };
    }
  }, [
    context.scrollArea,
    context.scrollHideDelay
  ]);
  return /* @__PURE__ */ reactExports.createElement($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || visible
  }, /* @__PURE__ */ reactExports.createElement($57acba87d6e25586$var$ScrollAreaScrollbarAuto, _extends$y({
    "data-state": visible ? "visible" : "hidden"
  }, scrollbarProps, {
    ref: forwardedRef
  })));
});
const $57acba87d6e25586$var$ScrollAreaScrollbarScroll = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { forceMount, ...scrollbarProps } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);
  const isHorizontal = props.orientation === "horizontal";
  const debounceScrollEnd = $57acba87d6e25586$var$useDebounceCallback(
    () => send("SCROLL_END"),
    100
  );
  const [state, send] = $6c2e24571c90391f$export$3e6543de14f8614f("hidden", {
    hidden: {
      SCROLL: "scrolling"
    },
    scrolling: {
      SCROLL_END: "idle",
      POINTER_ENTER: "interacting"
    },
    interacting: {
      SCROLL: "interacting",
      POINTER_LEAVE: "idle"
    },
    idle: {
      HIDE: "hidden",
      SCROLL: "scrolling",
      POINTER_ENTER: "interacting"
    }
  });
  reactExports.useEffect(() => {
    if (state === "idle") {
      const hideTimer = window.setTimeout(
        () => send("HIDE"),
        context.scrollHideDelay
      );
      return () => window.clearTimeout(hideTimer);
    }
  }, [
    state,
    context.scrollHideDelay,
    send
  ]);
  reactExports.useEffect(() => {
    const viewport = context.viewport;
    const scrollDirection = isHorizontal ? "scrollLeft" : "scrollTop";
    if (viewport) {
      let prevScrollPos = viewport[scrollDirection];
      const handleScroll2 = () => {
        const scrollPos = viewport[scrollDirection];
        const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;
        if (hasScrollInDirectionChanged) {
          send("SCROLL");
          debounceScrollEnd();
        }
        prevScrollPos = scrollPos;
      };
      viewport.addEventListener("scroll", handleScroll2);
      return () => viewport.removeEventListener("scroll", handleScroll2);
    }
  }, [
    context.viewport,
    isHorizontal,
    send,
    debounceScrollEnd
  ]);
  return /* @__PURE__ */ reactExports.createElement($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || state !== "hidden"
  }, /* @__PURE__ */ reactExports.createElement($57acba87d6e25586$var$ScrollAreaScrollbarVisible, _extends$y({
    "data-state": state === "hidden" ? "hidden" : "visible"
  }, scrollbarProps, {
    ref: forwardedRef,
    onPointerEnter: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onPointerEnter,
      () => send("POINTER_ENTER")
    ),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onPointerLeave,
      () => send("POINTER_LEAVE")
    )
  })));
});
const $57acba87d6e25586$var$ScrollAreaScrollbarAuto = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);
  const { forceMount, ...scrollbarProps } = props;
  const [visible, setVisible] = reactExports.useState(false);
  const isHorizontal = props.orientation === "horizontal";
  const handleResize = $57acba87d6e25586$var$useDebounceCallback(() => {
    if (context.viewport) {
      const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;
      const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;
      setVisible(isHorizontal ? isOverflowX : isOverflowY);
    }
  }, 10);
  $57acba87d6e25586$var$useResizeObserver(context.viewport, handleResize);
  $57acba87d6e25586$var$useResizeObserver(context.content, handleResize);
  return /* @__PURE__ */ reactExports.createElement($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || visible
  }, /* @__PURE__ */ reactExports.createElement($57acba87d6e25586$var$ScrollAreaScrollbarVisible, _extends$y({
    "data-state": visible ? "visible" : "hidden"
  }, scrollbarProps, {
    ref: forwardedRef
  })));
});
const $57acba87d6e25586$var$ScrollAreaScrollbarVisible = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { orientation = "vertical", ...scrollbarProps } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);
  const thumbRef = reactExports.useRef(null);
  const pointerOffsetRef = reactExports.useRef(0);
  const [sizes, setSizes] = reactExports.useState({
    content: 0,
    viewport: 0,
    scrollbar: {
      size: 0,
      paddingStart: 0,
      paddingEnd: 0
    }
  });
  const thumbRatio = $57acba87d6e25586$var$getThumbRatio(sizes.viewport, sizes.content);
  const commonProps = {
    ...scrollbarProps,
    sizes,
    onSizesChange: setSizes,
    hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),
    onThumbChange: (thumb) => thumbRef.current = thumb,
    onThumbPointerUp: () => pointerOffsetRef.current = 0,
    onThumbPointerDown: (pointerPos) => pointerOffsetRef.current = pointerPos
  };
  function getScrollPosition(pointerPos, dir) {
    return $57acba87d6e25586$var$getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);
  }
  if (orientation === "horizontal")
    return /* @__PURE__ */ reactExports.createElement($57acba87d6e25586$var$ScrollAreaScrollbarX, _extends$y({}, commonProps, {
      ref: forwardedRef,
      onThumbPositionChange: () => {
        if (context.viewport && thumbRef.current) {
          const scrollPos = context.viewport.scrollLeft;
          const offset2 = $57acba87d6e25586$var$getThumbOffsetFromScroll(scrollPos, sizes, context.dir);
          thumbRef.current.style.transform = `translate3d(${offset2}px, 0, 0)`;
        }
      },
      onWheelScroll: (scrollPos) => {
        if (context.viewport)
          context.viewport.scrollLeft = scrollPos;
      },
      onDragScroll: (pointerPos) => {
        if (context.viewport)
          context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);
      }
    }));
  if (orientation === "vertical")
    return /* @__PURE__ */ reactExports.createElement($57acba87d6e25586$var$ScrollAreaScrollbarY, _extends$y({}, commonProps, {
      ref: forwardedRef,
      onThumbPositionChange: () => {
        if (context.viewport && thumbRef.current) {
          const scrollPos = context.viewport.scrollTop;
          const offset2 = $57acba87d6e25586$var$getThumbOffsetFromScroll(scrollPos, sizes);
          thumbRef.current.style.transform = `translate3d(0, ${offset2}px, 0)`;
        }
      },
      onWheelScroll: (scrollPos) => {
        if (context.viewport)
          context.viewport.scrollTop = scrollPos;
      },
      onDragScroll: (pointerPos) => {
        if (context.viewport)
          context.viewport.scrollTop = getScrollPosition(pointerPos);
      }
    }));
  return null;
});
const $57acba87d6e25586$var$ScrollAreaScrollbarX = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { sizes, onSizesChange, ...scrollbarProps } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);
  const [computedStyle, setComputedStyle] = reactExports.useState();
  const ref = reactExports.useRef(null);
  const composeRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, context.onScrollbarXChange);
  reactExports.useEffect(() => {
    if (ref.current)
      setComputedStyle(getComputedStyle(ref.current));
  }, [
    ref
  ]);
  return /* @__PURE__ */ reactExports.createElement($57acba87d6e25586$var$ScrollAreaScrollbarImpl, _extends$y({
    "data-orientation": "horizontal"
  }, scrollbarProps, {
    ref: composeRefs,
    sizes,
    style: {
      bottom: 0,
      left: context.dir === "rtl" ? "var(--radix-scroll-area-corner-width)" : 0,
      right: context.dir === "ltr" ? "var(--radix-scroll-area-corner-width)" : 0,
      ["--radix-scroll-area-thumb-width"]: $57acba87d6e25586$var$getThumbSize(sizes) + "px",
      ...props.style
    },
    onThumbPointerDown: (pointerPos) => props.onThumbPointerDown(pointerPos.x),
    onDragScroll: (pointerPos) => props.onDragScroll(pointerPos.x),
    onWheelScroll: (event, maxScrollPos) => {
      if (context.viewport) {
        const scrollPos = context.viewport.scrollLeft + event.deltaX;
        props.onWheelScroll(scrollPos);
        if ($57acba87d6e25586$var$isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos))
          event.preventDefault();
      }
    },
    onResize: () => {
      if (ref.current && context.viewport && computedStyle)
        onSizesChange({
          content: context.viewport.scrollWidth,
          viewport: context.viewport.offsetWidth,
          scrollbar: {
            size: ref.current.clientWidth,
            paddingStart: $57acba87d6e25586$var$toInt(computedStyle.paddingLeft),
            paddingEnd: $57acba87d6e25586$var$toInt(computedStyle.paddingRight)
          }
        });
    }
  }));
});
const $57acba87d6e25586$var$ScrollAreaScrollbarY = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { sizes, onSizesChange, ...scrollbarProps } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);
  const [computedStyle, setComputedStyle] = reactExports.useState();
  const ref = reactExports.useRef(null);
  const composeRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, context.onScrollbarYChange);
  reactExports.useEffect(() => {
    if (ref.current)
      setComputedStyle(getComputedStyle(ref.current));
  }, [
    ref
  ]);
  return /* @__PURE__ */ reactExports.createElement($57acba87d6e25586$var$ScrollAreaScrollbarImpl, _extends$y({
    "data-orientation": "vertical"
  }, scrollbarProps, {
    ref: composeRefs,
    sizes,
    style: {
      top: 0,
      right: context.dir === "ltr" ? 0 : void 0,
      left: context.dir === "rtl" ? 0 : void 0,
      bottom: "var(--radix-scroll-area-corner-height)",
      ["--radix-scroll-area-thumb-height"]: $57acba87d6e25586$var$getThumbSize(sizes) + "px",
      ...props.style
    },
    onThumbPointerDown: (pointerPos) => props.onThumbPointerDown(pointerPos.y),
    onDragScroll: (pointerPos) => props.onDragScroll(pointerPos.y),
    onWheelScroll: (event, maxScrollPos) => {
      if (context.viewport) {
        const scrollPos = context.viewport.scrollTop + event.deltaY;
        props.onWheelScroll(scrollPos);
        if ($57acba87d6e25586$var$isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos))
          event.preventDefault();
      }
    },
    onResize: () => {
      if (ref.current && context.viewport && computedStyle)
        onSizesChange({
          content: context.viewport.scrollHeight,
          viewport: context.viewport.offsetHeight,
          scrollbar: {
            size: ref.current.clientHeight,
            paddingStart: $57acba87d6e25586$var$toInt(computedStyle.paddingTop),
            paddingEnd: $57acba87d6e25586$var$toInt(computedStyle.paddingBottom)
          }
        });
    }
  }));
});
const [$57acba87d6e25586$var$ScrollbarProvider, $57acba87d6e25586$var$useScrollbarContext] = $57acba87d6e25586$var$createScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME);
const $57acba87d6e25586$var$ScrollAreaScrollbarImpl = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeScrollArea, sizes, hasThumb, onThumbChange, onThumbPointerUp, onThumbPointerDown, onThumbPositionChange, onDragScroll, onWheelScroll, onResize, ...scrollbarProps } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, __scopeScrollArea);
  const [scrollbar, setScrollbar] = reactExports.useState(null);
  const composeRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setScrollbar(node)
  );
  const rectRef = reactExports.useRef(null);
  const prevWebkitUserSelectRef = reactExports.useRef("");
  const viewport = context.viewport;
  const maxScrollPos = sizes.content - sizes.viewport;
  const handleWheelScroll = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onWheelScroll);
  const handleThumbPositionChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onThumbPositionChange);
  const handleResize = $57acba87d6e25586$var$useDebounceCallback(onResize, 10);
  function handleDragScroll(event) {
    if (rectRef.current) {
      const x2 = event.clientX - rectRef.current.left;
      const y2 = event.clientY - rectRef.current.top;
      onDragScroll({
        x: x2,
        y: y2
      });
    }
  }
  reactExports.useEffect(() => {
    const handleWheel = (event) => {
      const element = event.target;
      const isScrollbarWheel = scrollbar === null || scrollbar === void 0 ? void 0 : scrollbar.contains(element);
      if (isScrollbarWheel)
        handleWheelScroll(event, maxScrollPos);
    };
    document.addEventListener("wheel", handleWheel, {
      passive: false
    });
    return () => document.removeEventListener("wheel", handleWheel, {
      passive: false
    });
  }, [
    viewport,
    scrollbar,
    maxScrollPos,
    handleWheelScroll
  ]);
  reactExports.useEffect(handleThumbPositionChange, [
    sizes,
    handleThumbPositionChange
  ]);
  $57acba87d6e25586$var$useResizeObserver(scrollbar, handleResize);
  $57acba87d6e25586$var$useResizeObserver(context.content, handleResize);
  return /* @__PURE__ */ reactExports.createElement($57acba87d6e25586$var$ScrollbarProvider, {
    scope: __scopeScrollArea,
    scrollbar,
    hasThumb,
    onThumbChange: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onThumbChange),
    onThumbPointerUp: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onThumbPointerUp),
    onThumbPositionChange: handleThumbPositionChange,
    onThumbPointerDown: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onThumbPointerDown)
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({}, scrollbarProps, {
    ref: composeRefs,
    style: {
      position: "absolute",
      ...scrollbarProps.style
    },
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, (event) => {
      const mainPointer = 0;
      if (event.button === mainPointer) {
        const element = event.target;
        element.setPointerCapture(event.pointerId);
        rectRef.current = scrollbar.getBoundingClientRect();
        prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;
        document.body.style.webkitUserSelect = "none";
        if (context.viewport)
          context.viewport.style.scrollBehavior = "auto";
        handleDragScroll(event);
      }
    }),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, handleDragScroll),
    onPointerUp: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerUp, (event) => {
      const element = event.target;
      if (element.hasPointerCapture(event.pointerId))
        element.releasePointerCapture(event.pointerId);
      document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;
      if (context.viewport)
        context.viewport.style.scrollBehavior = "";
      rectRef.current = null;
    })
  })));
});
const $57acba87d6e25586$var$THUMB_NAME = "ScrollAreaThumb";
const $57acba87d6e25586$export$9fba1154677d7cd2 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { forceMount, ...thumbProps } = props;
  const scrollbarContext = $57acba87d6e25586$var$useScrollbarContext($57acba87d6e25586$var$THUMB_NAME, props.__scopeScrollArea);
  return /* @__PURE__ */ reactExports.createElement($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || scrollbarContext.hasThumb
  }, /* @__PURE__ */ reactExports.createElement($57acba87d6e25586$var$ScrollAreaThumbImpl, _extends$y({
    ref: forwardedRef
  }, thumbProps)));
});
const $57acba87d6e25586$var$ScrollAreaThumbImpl = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeScrollArea, style, ...thumbProps } = props;
  const scrollAreaContext = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$THUMB_NAME, __scopeScrollArea);
  const scrollbarContext = $57acba87d6e25586$var$useScrollbarContext($57acba87d6e25586$var$THUMB_NAME, __scopeScrollArea);
  const { onThumbPositionChange } = scrollbarContext;
  const composedRef = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => scrollbarContext.onThumbChange(node)
  );
  const removeUnlinkedScrollListenerRef = reactExports.useRef();
  const debounceScrollEnd = $57acba87d6e25586$var$useDebounceCallback(() => {
    if (removeUnlinkedScrollListenerRef.current) {
      removeUnlinkedScrollListenerRef.current();
      removeUnlinkedScrollListenerRef.current = void 0;
    }
  }, 100);
  reactExports.useEffect(() => {
    const viewport = scrollAreaContext.viewport;
    if (viewport) {
      const handleScroll2 = () => {
        debounceScrollEnd();
        if (!removeUnlinkedScrollListenerRef.current) {
          const listener = $57acba87d6e25586$var$addUnlinkedScrollListener(viewport, onThumbPositionChange);
          removeUnlinkedScrollListenerRef.current = listener;
          onThumbPositionChange();
        }
      };
      onThumbPositionChange();
      viewport.addEventListener("scroll", handleScroll2);
      return () => viewport.removeEventListener("scroll", handleScroll2);
    }
  }, [
    scrollAreaContext.viewport,
    debounceScrollEnd,
    onThumbPositionChange
  ]);
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    "data-state": scrollbarContext.hasThumb ? "visible" : "hidden"
  }, thumbProps, {
    ref: composedRef,
    style: {
      width: "var(--radix-scroll-area-thumb-width)",
      height: "var(--radix-scroll-area-thumb-height)",
      ...style
    },
    onPointerDownCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownCapture, (event) => {
      const thumb = event.target;
      const thumbRect = thumb.getBoundingClientRect();
      const x2 = event.clientX - thumbRect.left;
      const y2 = event.clientY - thumbRect.top;
      scrollbarContext.onThumbPointerDown({
        x: x2,
        y: y2
      });
    }),
    onPointerUp: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerUp, scrollbarContext.onThumbPointerUp)
  }));
});
const $57acba87d6e25586$var$CORNER_NAME = "ScrollAreaCorner";
const $57acba87d6e25586$export$56969d565df7cc4b = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$CORNER_NAME, props.__scopeScrollArea);
  const hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);
  const hasCorner = context.type !== "scroll" && hasBothScrollbarsVisible;
  return hasCorner ? /* @__PURE__ */ reactExports.createElement($57acba87d6e25586$var$ScrollAreaCornerImpl, _extends$y({}, props, {
    ref: forwardedRef
  })) : null;
});
const $57acba87d6e25586$var$ScrollAreaCornerImpl = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeScrollArea, ...cornerProps } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$CORNER_NAME, __scopeScrollArea);
  const [width1, setWidth] = reactExports.useState(0);
  const [height1, setHeight] = reactExports.useState(0);
  const hasSize = Boolean(width1 && height1);
  $57acba87d6e25586$var$useResizeObserver(context.scrollbarX, () => {
    var _context$scrollbarX;
    const height = ((_context$scrollbarX = context.scrollbarX) === null || _context$scrollbarX === void 0 ? void 0 : _context$scrollbarX.offsetHeight) || 0;
    context.onCornerHeightChange(height);
    setHeight(height);
  });
  $57acba87d6e25586$var$useResizeObserver(context.scrollbarY, () => {
    var _context$scrollbarY;
    const width = ((_context$scrollbarY = context.scrollbarY) === null || _context$scrollbarY === void 0 ? void 0 : _context$scrollbarY.offsetWidth) || 0;
    context.onCornerWidthChange(width);
    setWidth(width);
  });
  return hasSize ? /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({}, cornerProps, {
    ref: forwardedRef,
    style: {
      width: width1,
      height: height1,
      position: "absolute",
      right: context.dir === "ltr" ? 0 : void 0,
      left: context.dir === "rtl" ? 0 : void 0,
      bottom: 0,
      ...props.style
    }
  })) : null;
});
function $57acba87d6e25586$var$toInt(value) {
  return value ? parseInt(value, 10) : 0;
}
function $57acba87d6e25586$var$getThumbRatio(viewportSize, contentSize) {
  const ratio = viewportSize / contentSize;
  return isNaN(ratio) ? 0 : ratio;
}
function $57acba87d6e25586$var$getThumbSize(sizes) {
  const ratio = $57acba87d6e25586$var$getThumbRatio(sizes.viewport, sizes.content);
  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;
  const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio;
  return Math.max(thumbSize, 18);
}
function $57acba87d6e25586$var$getScrollPositionFromPointer(pointerPos, pointerOffset, sizes, dir = "ltr") {
  const thumbSizePx = $57acba87d6e25586$var$getThumbSize(sizes);
  const thumbCenter = thumbSizePx / 2;
  const offset2 = pointerOffset || thumbCenter;
  const thumbOffsetFromEnd = thumbSizePx - offset2;
  const minPointerPos = sizes.scrollbar.paddingStart + offset2;
  const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;
  const maxScrollPos = sizes.content - sizes.viewport;
  const scrollRange = dir === "ltr" ? [
    0,
    maxScrollPos
  ] : [
    maxScrollPos * -1,
    0
  ];
  const interpolate2 = $57acba87d6e25586$var$linearScale([
    minPointerPos,
    maxPointerPos
  ], scrollRange);
  return interpolate2(pointerPos);
}
function $57acba87d6e25586$var$getThumbOffsetFromScroll(scrollPos, sizes, dir = "ltr") {
  const thumbSizePx = $57acba87d6e25586$var$getThumbSize(sizes);
  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;
  const scrollbar = sizes.scrollbar.size - scrollbarPadding;
  const maxScrollPos = sizes.content - sizes.viewport;
  const maxThumbPos = scrollbar - thumbSizePx;
  const scrollClampRange = dir === "ltr" ? [
    0,
    maxScrollPos
  ] : [
    maxScrollPos * -1,
    0
  ];
  const scrollWithoutMomentum = $ae6933e535247d3d$export$7d15b64cf5a3a4c4(scrollPos, scrollClampRange);
  const interpolate2 = $57acba87d6e25586$var$linearScale([
    0,
    maxScrollPos
  ], [
    0,
    maxThumbPos
  ]);
  return interpolate2(scrollWithoutMomentum);
}
function $57acba87d6e25586$var$linearScale(input, output) {
  return (value) => {
    if (input[0] === input[1] || output[0] === output[1])
      return output[0];
    const ratio = (output[1] - output[0]) / (input[1] - input[0]);
    return output[0] + ratio * (value - input[0]);
  };
}
function $57acba87d6e25586$var$isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos) {
  return scrollPos > 0 && scrollPos < maxScrollPos;
}
const $57acba87d6e25586$var$addUnlinkedScrollListener = (node, handler = () => {
}) => {
  let prevPosition = {
    left: node.scrollLeft,
    top: node.scrollTop
  };
  let rAF = 0;
  (function loop() {
    const position = {
      left: node.scrollLeft,
      top: node.scrollTop
    };
    const isHorizontalScroll = prevPosition.left !== position.left;
    const isVerticalScroll = prevPosition.top !== position.top;
    if (isHorizontalScroll || isVerticalScroll)
      handler();
    prevPosition = position;
    rAF = window.requestAnimationFrame(loop);
  })();
  return () => window.cancelAnimationFrame(rAF);
};
function $57acba87d6e25586$var$useDebounceCallback(callback, delay) {
  const handleCallback = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback);
  const debounceTimerRef = reactExports.useRef(0);
  reactExports.useEffect(
    () => () => window.clearTimeout(debounceTimerRef.current),
    []
  );
  return reactExports.useCallback(() => {
    window.clearTimeout(debounceTimerRef.current);
    debounceTimerRef.current = window.setTimeout(handleCallback, delay);
  }, [
    handleCallback,
    delay
  ]);
}
function $57acba87d6e25586$var$useResizeObserver(element, onResize) {
  const handleResize = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onResize);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    let rAF = 0;
    if (element) {
      const resizeObserver = new ResizeObserver(() => {
        cancelAnimationFrame(rAF);
        rAF = window.requestAnimationFrame(handleResize);
      });
      resizeObserver.observe(element);
      return () => {
        window.cancelAnimationFrame(rAF);
        resizeObserver.unobserve(element);
      };
    }
  }, [
    element,
    handleResize
  ]);
}
const $57acba87d6e25586$export$be92b6f5f03c0fe9 = $57acba87d6e25586$export$ccf8d8d7bbf3c2cc;
const $57acba87d6e25586$export$d5c6c08dc2d3ca7 = $57acba87d6e25586$export$a21cbf9f11fca853;
const $57acba87d6e25586$export$ac61190d9fc311a9 = $57acba87d6e25586$export$56969d565df7cc4b;
const ScrollArea = reactExports.forwardRef(({ className, children: children2, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsxs(
  $57acba87d6e25586$export$be92b6f5f03c0fe9,
  {
    ref,
    className: cn("relative overflow-hidden", className),
    ...props,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx($57acba87d6e25586$export$d5c6c08dc2d3ca7, { className: "h-full w-full rounded-[inherit]", children: children2 }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(ScrollBar, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx($57acba87d6e25586$export$ac61190d9fc311a9, {})
    ]
  }
));
ScrollArea.displayName = $57acba87d6e25586$export$be92b6f5f03c0fe9.displayName;
const ScrollBar = reactExports.forwardRef(({ className, orientation = "vertical", ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $57acba87d6e25586$export$2fabd85d0eba3c57,
  {
    ref,
    orientation,
    className: cn(
      "flex touch-none select-none transition-colors",
      orientation === "vertical" && "h-full w-2.5 border-l border-l-transparent p-[1px]",
      orientation === "horizontal" && "h-2.5 flex-col border-t border-t-transparent p-[1px]",
      className
    ),
    ...props,
    children: /* @__PURE__ */ jsxRuntimeExports.jsx($57acba87d6e25586$export$9fba1154677d7cd2, { className: "relative flex-1 rounded-full bg-border" })
  }
));
ScrollBar.displayName = $57acba87d6e25586$export$2fabd85d0eba3c57.displayName;
const JobListHeader = (props) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center justify-between w-[calc(100%-1rem)] p-2 mb-2 rounded border", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        className: "w-48 flex items-center justify-center",
        onClick: () => {
          props.setSortOrder((prev) => {
            const poppedSort = prev.splice(
              prev.findIndex((e3) => {
                return e3[0] === "name";
              }),
              1
            );
            const newOrder = [...prev];
            newOrder.unshift([
              poppedSort[0][0],
              poppedSort[0][1] === "ascending" ? "descending" : "ascending"
            ]);
            return newOrder;
          });
        },
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
          "File Name",
          /* @__PURE__ */ jsxRuntimeExports.jsx("button", { className: "absolute", children: props.sortOrder[props.sortOrder.findIndex((e3) => {
            return e3[0] === "name";
          })][1] === "ascending" ? /* @__PURE__ */ jsxRuntimeExports.jsx(MoveUp, {}) : /* @__PURE__ */ jsxRuntimeExports.jsx(MoveDown, {}) })
        ] })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        className: "w-[4.5rem] flex items-center justify-center",
        onClick: () => {
          props.setSortOrder((prev) => {
            const poppedSort = prev.splice(
              prev.findIndex((e3) => {
                return e3[0] === "size";
              }),
              1
            );
            const newOrder = [...prev];
            newOrder.unshift([
              poppedSort[0][0],
              poppedSort[0][1] === "ascending" ? "descending" : "ascending"
            ]);
            return newOrder;
          });
        },
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
          "Size",
          /* @__PURE__ */ jsxRuntimeExports.jsx("button", { className: "absolute", children: props.sortOrder[props.sortOrder.findIndex((e3) => {
            return e3[0] === "size";
          })][1] === "ascending" ? /* @__PURE__ */ jsxRuntimeExports.jsx(MoveUp, {}) : /* @__PURE__ */ jsxRuntimeExports.jsx(MoveDown, {}) })
        ] })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        className: "w-16 flex items-center justify-center",
        onClick: () => {
          props.setSortOrder((prev) => {
            const poppedSort = prev.splice(
              prev.findIndex((e3) => {
                return e3[0] === "eta";
              }),
              1
            );
            const newOrder = [...prev];
            newOrder.unshift([
              poppedSort[0][0],
              poppedSort[0][1] === "ascending" ? "descending" : "ascending"
            ]);
            return newOrder;
          });
        },
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
          "ETA",
          /* @__PURE__ */ jsxRuntimeExports.jsx("button", { className: "absolute", children: props.sortOrder[props.sortOrder.findIndex((e3) => {
            return e3[0] === "eta";
          })][1] === "ascending" ? /* @__PURE__ */ jsxRuntimeExports.jsx(MoveUp, {}) : /* @__PURE__ */ jsxRuntimeExports.jsx(MoveDown, {}) })
        ] })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        className: "w-[9.5rem] flex items-center justify-center",
        onClick: () => {
          props.setSortOrder((prev) => {
            const poppedSort = prev.splice(
              prev.findIndex((e3) => {
                return e3[0] === "timeQueued";
              }),
              1
            );
            const newOrder = [...prev];
            newOrder.unshift([
              poppedSort[0][0],
              poppedSort[0][1] === "ascending" ? "descending" : "ascending"
            ]);
            return newOrder;
          });
        },
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
          "Time Queued",
          /* @__PURE__ */ jsxRuntimeExports.jsx("button", { className: "absolute", children: props.sortOrder[props.sortOrder.findIndex((e3) => {
            return e3[0] === "timeQueued";
          })][1] === "ascending" ? /* @__PURE__ */ jsxRuntimeExports.jsx(MoveDown, {}) : /* @__PURE__ */ jsxRuntimeExports.jsx(MoveUp, {}) })
        ] })
      }
    )
  ] });
};
const JobList = (props) => {
  const filteredJobs = props.jobInfoList.filter(
    (job) => job.status === props.statusFilter || props.statusFilter === "all"
  ).filter(
    (job) => job.fileName.toLowerCase().includes(props.filter.toLowerCase()) || props.filter === ""
  );
  console.log(props.sortOrder);
  filteredJobs.sort((a2, b2) => {
    for (let sorting of props.sortOrder) {
      const multiplier = sorting[1] === "ascending" ? 1 : -1;
      if (sorting[0] === "name" && a2.fileName !== b2.fileName) {
        return a2.fileName.localeCompare(b2.fileName) * multiplier;
      } else if (sorting[0] === "size" && a2.fileSize !== b2.fileSize) {
        const [a_number, a_unit] = a2.fileSize.split(" ");
        const [b_number, b_unit] = b2.fileSize.split(" ");
        if (a_unit === b_unit) {
          if (a_number.length < b_number.length) {
            return -multiplier;
          }
          if (a_number.length > b_number.length) {
            return multiplier;
          }
          return a_number.localeCompare(b_number) * multiplier;
        }
        if (a_unit === "TiB") {
          return multiplier;
        }
        if (b_unit === "TiB") {
          return -multiplier;
        }
        if (a_unit === "GiB") {
          return multiplier;
        }
        if (b_unit === "GiB") {
          return -multiplier;
        }
        if (a_unit === "MiB") {
          return multiplier;
        }
        if (b_unit === "MiB") {
          return -multiplier;
        }
        if (a_unit === "KiB") {
          return -multiplier;
        }
        return a_unit.localeCompare(b_unit) * multiplier;
      } else if (sorting[0] === "eta" && a2.remainingTime !== b2.remainingTime) {
        const [a_number, a_unit] = a2.remainingTime.split(" ");
        const [b_number, b_unit] = b2.remainingTime.split(" ");
        if (a_unit === b_unit) {
          if (a_number.length < b_number.length) {
            return -multiplier;
          }
          if (a_number.length > b_number.length) {
            return multiplier;
          }
          return a_number.localeCompare(b_number) * multiplier;
        }
        return -a_unit.localeCompare(b_unit) * multiplier;
      } else if (sorting[0] === "timeQueued" && a2.timeQueued !== b2.timeQueued) {
        return a2.timeQueued.localeCompare(b2.timeQueued) * multiplier;
      }
    }
    return 0;
  });
  return /* @__PURE__ */ jsxRuntimeExports.jsx(ScrollArea, { className: "h-[25rem]", children: /* @__PURE__ */ jsxRuntimeExports.jsx("ul", { className: "w-[calc(100%-1rem)]", children: filteredJobs.map((e3) => /* @__PURE__ */ jsxRuntimeExports.jsx(Job, { ...e3 }, e3.id)) }) });
};
const Job = (props) => {
  const { selectedJobs, setSelectedJobs } = reactExports.useContext(MarketPageContext);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "li",
    {
      className: `flex items-center justify-between p-2 mb-2 rounded ${selectedJobs.includes(props.id) ? "bg-gray-200 dark:bg-gray-600" : "bg-gray-50 hover:bg-accent hover:text-accent-foreground dark:bg-gray-900 dark:hover:bg-gray-800"}`,
      onClick: (e3) => {
        if (e3.ctrlKey) {
          if (selectedJobs.includes(props.id)) {
            setSelectedJobs(selectedJobs.filter((job) => job !== props.id));
          } else {
            const jobIDsCopy = [...selectedJobs];
            jobIDsCopy.push(props.id);
            setSelectedJobs(jobIDsCopy);
          }
        } else {
          if (selectedJobs.includes(props.id) && selectedJobs.length === 1) {
            setSelectedJobs([]);
          } else {
            setSelectedJobs([props.id]);
          }
        }
      },
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center w-48", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(TooltipProvider, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(Tooltip$1, { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(TooltipTrigger, { asChild: true, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              "svg",
              {
                width: "24",
                height: "24",
                viewBox: "0 0 24 24",
                fill: "none",
                stroke: "currentColor",
                strokeWidth: "4",
                strokeLinecap: "round",
                strokeLinejoin: "round",
                className: statusToColorCSS(props.status) + " overflow-visible",
                children: /* @__PURE__ */ jsxRuntimeExports.jsx("circle", { cx: "12", cy: "12", r: "2" })
              }
            ) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(TooltipContent, { children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: props.status }) })
          ] }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: props.fileName })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "w-[4.5rem] text-right", children: props.fileSize }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "w-16 text-right", children: props.remainingTime }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "w-[9.5rem] text-right", children: props.timeQueued })
      ]
    }
  );
};
const JobControls = (props) => {
  const { selectedJobs, setSelectedJobs } = reactExports.useContext(MarketPageContext);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center p-4", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "mr-8 min-w-28", children: selectedJobs.length + " job" + (selectedJobs.length === 1 ? "" : "s") + " selected" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "button",
      {
        onClick: () => {
          props.updateJobStatuses("downloading");
          toast({
            title: "File Download Resumed",
            description: "The file download has been resumed."
          });
        },
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(Play, { className: "size-6 text-gray-500 hover:text-gray-800" })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "button",
      {
        onClick: () => {
          props.updateJobStatuses("paused");
          toast({
            title: "File Download Paused",
            description: "The file download has been paused."
          });
        },
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(Pause, { className: "size-6 text-gray-500 hover:text-gray-800" })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("button", { onClick: () => {
      props.removeJobs;
      toast({
        variant: "destructive",
        title: "File Download Cancelled",
        description: "The file download has been cancelled."
      });
    }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Trash2, { className: "size-6 text-gray-500 hover:text-destructive" }) })
  ] });
};
function statusToColorCSS(status) {
  switch (status) {
    case "downloading":
      return "stroke-green-500";
    case "paused":
      return "stroke-yellow-500";
    case "error":
      return "stroke-red-500";
    case "completed":
      return "stroke-black dark:stroke-white";
    default:
      return "";
  }
}
const Overview = (props) => {
  const [filter2, setFilter] = reactExports.useState("");
  const [statusFilter, setStatusFilter] = reactExports.useState("all");
  const [sortOrder, setSortOrder] = reactExports.useState([
    ["timeQueued", "descending"],
    ["name", "descending"],
    ["size", "descending"],
    ["eta", "descending"]
  ]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      OverviewHeader,
      {
        setFilter,
        setStatusFilter,
        addJob: props.addJob
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      JobListHeader,
      {
        sortOrder,
        setSortOrder
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      JobList,
      {
        jobInfoList: props.jobInfoList,
        filter: filter2,
        statusFilter,
        sortOrder
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      JobControls,
      {
        updateJobStatuses: props.updateJobStatuses,
        removeJobs: props.removeJobs
      }
    )
  ] });
};
function $e02a7d9cb1dc128c$export$c74125a8e3af6bb2(name) {
  const PROVIDER_NAME = name + "CollectionProvider";
  const [createCollectionContext, createCollectionScope] = $c512c27ab02ef895$export$50c7b4e9d9f19c1(PROVIDER_NAME);
  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(PROVIDER_NAME, {
    collectionRef: {
      current: null
    },
    itemMap: /* @__PURE__ */ new Map()
  });
  const CollectionProvider = (props) => {
    const { scope, children: children2 } = props;
    const ref = React.useRef(null);
    const itemMap = React.useRef(/* @__PURE__ */ new Map()).current;
    return /* @__PURE__ */ React.createElement(CollectionProviderImpl, {
      scope,
      itemMap,
      collectionRef: ref
    }, children2);
  };
  const COLLECTION_SLOT_NAME = name + "CollectionSlot";
  const CollectionSlot = /* @__PURE__ */ React.forwardRef((props, forwardedRef) => {
    const { scope, children: children2 } = props;
    const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);
    const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.collectionRef);
    return /* @__PURE__ */ React.createElement($5e63c961fc1ce211$export$8c6ed5c666ac1360, {
      ref: composedRefs
    }, children2);
  });
  const ITEM_SLOT_NAME = name + "CollectionItemSlot";
  const ITEM_DATA_ATTR = "data-radix-collection-item";
  const CollectionItemSlot = /* @__PURE__ */ React.forwardRef((props, forwardedRef) => {
    const { scope, children: children2, ...itemData } = props;
    const ref = React.useRef(null);
    const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
    const context = useCollectionContext(ITEM_SLOT_NAME, scope);
    React.useEffect(() => {
      context.itemMap.set(ref, {
        ref,
        ...itemData
      });
      return () => void context.itemMap.delete(ref);
    });
    return /* @__PURE__ */ React.createElement($5e63c961fc1ce211$export$8c6ed5c666ac1360, {
      [ITEM_DATA_ATTR]: "",
      ref: composedRefs
    }, children2);
  });
  function useCollection(scope) {
    const context = useCollectionContext(name + "CollectionConsumer", scope);
    const getItems = React.useCallback(() => {
      const collectionNode = context.collectionRef.current;
      if (!collectionNode)
        return [];
      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));
      const items2 = Array.from(context.itemMap.values());
      const orderedItems = items2.sort(
        (a2, b2) => orderedNodes.indexOf(a2.ref.current) - orderedNodes.indexOf(b2.ref.current)
      );
      return orderedItems;
    }, [
      context.collectionRef,
      context.itemMap
    ]);
    return getItems;
  }
  return [
    {
      Provider: CollectionProvider,
      Slot: CollectionSlot,
      ItemSlot: CollectionItemSlot
    },
    useCollection,
    createCollectionScope
  ];
}
const $d7bdfb9eb0fdf311$var$ENTRY_FOCUS = "rovingFocusGroup.onEntryFocus";
const $d7bdfb9eb0fdf311$var$EVENT_OPTIONS = {
  bubbles: false,
  cancelable: true
};
const $d7bdfb9eb0fdf311$var$GROUP_NAME = "RovingFocusGroup";
const [$d7bdfb9eb0fdf311$var$Collection, $d7bdfb9eb0fdf311$var$useCollection, $d7bdfb9eb0fdf311$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($d7bdfb9eb0fdf311$var$GROUP_NAME);
const [$d7bdfb9eb0fdf311$var$createRovingFocusGroupContext, $d7bdfb9eb0fdf311$export$c7109489551a4f4] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($d7bdfb9eb0fdf311$var$GROUP_NAME, [
  $d7bdfb9eb0fdf311$var$createCollectionScope
]);
const [$d7bdfb9eb0fdf311$var$RovingFocusProvider, $d7bdfb9eb0fdf311$var$useRovingFocusContext] = $d7bdfb9eb0fdf311$var$createRovingFocusGroupContext($d7bdfb9eb0fdf311$var$GROUP_NAME);
const $d7bdfb9eb0fdf311$export$8699f7c8af148338 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  return /* @__PURE__ */ reactExports.createElement($d7bdfb9eb0fdf311$var$Collection.Provider, {
    scope: props.__scopeRovingFocusGroup
  }, /* @__PURE__ */ reactExports.createElement($d7bdfb9eb0fdf311$var$Collection.Slot, {
    scope: props.__scopeRovingFocusGroup
  }, /* @__PURE__ */ reactExports.createElement($d7bdfb9eb0fdf311$var$RovingFocusGroupImpl, _extends$y({}, props, {
    ref: forwardedRef
  }))));
});
const $d7bdfb9eb0fdf311$var$RovingFocusGroupImpl = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeRovingFocusGroup, orientation, loop = false, dir, currentTabStopId: currentTabStopIdProp, defaultCurrentTabStopId, onCurrentTabStopIdChange, onEntryFocus, ...groupProps } = props;
  const ref = reactExports.useRef(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  const [currentTabStopId = null, setCurrentTabStopId] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: currentTabStopIdProp,
    defaultProp: defaultCurrentTabStopId,
    onChange: onCurrentTabStopIdChange
  });
  const [isTabbingBackOut, setIsTabbingBackOut] = reactExports.useState(false);
  const handleEntryFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onEntryFocus);
  const getItems = $d7bdfb9eb0fdf311$var$useCollection(__scopeRovingFocusGroup);
  const isClickFocusRef = reactExports.useRef(false);
  const [focusableItemsCount, setFocusableItemsCount] = reactExports.useState(0);
  reactExports.useEffect(() => {
    const node = ref.current;
    if (node) {
      node.addEventListener($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, handleEntryFocus);
      return () => node.removeEventListener($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, handleEntryFocus);
    }
  }, [
    handleEntryFocus
  ]);
  return /* @__PURE__ */ reactExports.createElement($d7bdfb9eb0fdf311$var$RovingFocusProvider, {
    scope: __scopeRovingFocusGroup,
    orientation,
    dir: direction,
    loop,
    currentTabStopId,
    onItemFocus: reactExports.useCallback(
      (tabStopId) => setCurrentTabStopId(tabStopId),
      [
        setCurrentTabStopId
      ]
    ),
    onItemShiftTab: reactExports.useCallback(
      () => setIsTabbingBackOut(true),
      []
    ),
    onFocusableItemAdd: reactExports.useCallback(
      () => setFocusableItemsCount(
        (prevCount) => prevCount + 1
      ),
      []
    ),
    onFocusableItemRemove: reactExports.useCallback(
      () => setFocusableItemsCount(
        (prevCount) => prevCount - 1
      ),
      []
    )
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    tabIndex: isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0,
    "data-orientation": orientation
  }, groupProps, {
    ref: composedRefs,
    style: {
      outline: "none",
      ...props.style
    },
    onMouseDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onMouseDown, () => {
      isClickFocusRef.current = true;
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocus, (event) => {
      const isKeyboardFocus = !isClickFocusRef.current;
      if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {
        const entryFocusEvent = new CustomEvent($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, $d7bdfb9eb0fdf311$var$EVENT_OPTIONS);
        event.currentTarget.dispatchEvent(entryFocusEvent);
        if (!entryFocusEvent.defaultPrevented) {
          const items2 = getItems().filter(
            (item) => item.focusable
          );
          const activeItem = items2.find(
            (item) => item.active
          );
          const currentItem = items2.find(
            (item) => item.id === currentTabStopId
          );
          const candidateItems = [
            activeItem,
            currentItem,
            ...items2
          ].filter(Boolean);
          const candidateNodes = candidateItems.map(
            (item) => item.ref.current
          );
          $d7bdfb9eb0fdf311$var$focusFirst(candidateNodes);
        }
      }
      isClickFocusRef.current = false;
    }),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onBlur,
      () => setIsTabbingBackOut(false)
    )
  })));
});
const $d7bdfb9eb0fdf311$var$ITEM_NAME = "RovingFocusGroupItem";
const $d7bdfb9eb0fdf311$export$ab9df7c53fe8454 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeRovingFocusGroup, focusable = true, active = false, tabStopId, ...itemProps } = props;
  const autoId = $1746a345f3d73bb7$export$f680877a34711e37();
  const id2 = tabStopId || autoId;
  const context = $d7bdfb9eb0fdf311$var$useRovingFocusContext($d7bdfb9eb0fdf311$var$ITEM_NAME, __scopeRovingFocusGroup);
  const isCurrentTabStop = context.currentTabStopId === id2;
  const getItems = $d7bdfb9eb0fdf311$var$useCollection(__scopeRovingFocusGroup);
  const { onFocusableItemAdd, onFocusableItemRemove } = context;
  reactExports.useEffect(() => {
    if (focusable) {
      onFocusableItemAdd();
      return () => onFocusableItemRemove();
    }
  }, [
    focusable,
    onFocusableItemAdd,
    onFocusableItemRemove
  ]);
  return /* @__PURE__ */ reactExports.createElement($d7bdfb9eb0fdf311$var$Collection.ItemSlot, {
    scope: __scopeRovingFocusGroup,
    id: id2,
    focusable,
    active
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends$y({
    tabIndex: isCurrentTabStop ? 0 : -1,
    "data-orientation": context.orientation
  }, itemProps, {
    ref: forwardedRef,
    onMouseDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onMouseDown, (event) => {
      if (!focusable)
        event.preventDefault();
      else
        context.onItemFocus(id2);
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocus,
      () => context.onItemFocus(id2)
    ),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      if (event.key === "Tab" && event.shiftKey) {
        context.onItemShiftTab();
        return;
      }
      if (event.target !== event.currentTarget)
        return;
      const focusIntent = $d7bdfb9eb0fdf311$var$getFocusIntent(event, context.orientation, context.dir);
      if (focusIntent !== void 0) {
        event.preventDefault();
        const items2 = getItems().filter(
          (item) => item.focusable
        );
        let candidateNodes = items2.map(
          (item) => item.ref.current
        );
        if (focusIntent === "last")
          candidateNodes.reverse();
        else if (focusIntent === "prev" || focusIntent === "next") {
          if (focusIntent === "prev")
            candidateNodes.reverse();
          const currentIndex = candidateNodes.indexOf(event.currentTarget);
          candidateNodes = context.loop ? $d7bdfb9eb0fdf311$var$wrapArray(candidateNodes, currentIndex + 1) : candidateNodes.slice(currentIndex + 1);
        }
        setTimeout(
          () => $d7bdfb9eb0fdf311$var$focusFirst(candidateNodes)
        );
      }
    })
  })));
});
const $d7bdfb9eb0fdf311$var$MAP_KEY_TO_FOCUS_INTENT = {
  ArrowLeft: "prev",
  ArrowUp: "prev",
  ArrowRight: "next",
  ArrowDown: "next",
  PageUp: "first",
  Home: "first",
  PageDown: "last",
  End: "last"
};
function $d7bdfb9eb0fdf311$var$getDirectionAwareKey(key, dir) {
  if (dir !== "rtl")
    return key;
  return key === "ArrowLeft" ? "ArrowRight" : key === "ArrowRight" ? "ArrowLeft" : key;
}
function $d7bdfb9eb0fdf311$var$getFocusIntent(event, orientation, dir) {
  const key = $d7bdfb9eb0fdf311$var$getDirectionAwareKey(event.key, dir);
  if (orientation === "vertical" && [
    "ArrowLeft",
    "ArrowRight"
  ].includes(key))
    return void 0;
  if (orientation === "horizontal" && [
    "ArrowUp",
    "ArrowDown"
  ].includes(key))
    return void 0;
  return $d7bdfb9eb0fdf311$var$MAP_KEY_TO_FOCUS_INTENT[key];
}
function $d7bdfb9eb0fdf311$var$focusFirst(candidates) {
  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
  for (const candidate of candidates) {
    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT)
      return;
    candidate.focus();
    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT)
      return;
  }
}
function $d7bdfb9eb0fdf311$var$wrapArray(array2, startIndex) {
  return array2.map(
    (_, index2) => array2[(startIndex + index2) % array2.length]
  );
}
const $d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9 = $d7bdfb9eb0fdf311$export$8699f7c8af148338;
const $d7bdfb9eb0fdf311$export$6d08773d2e66f8f2 = $d7bdfb9eb0fdf311$export$ab9df7c53fe8454;
const $69cb30bb0017df05$var$TABS_NAME = "Tabs";
const [$69cb30bb0017df05$var$createTabsContext, $69cb30bb0017df05$export$355f5bd209d7b13a] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($69cb30bb0017df05$var$TABS_NAME, [
  $d7bdfb9eb0fdf311$export$c7109489551a4f4
]);
const $69cb30bb0017df05$var$useRovingFocusGroupScope = $d7bdfb9eb0fdf311$export$c7109489551a4f4();
const [$69cb30bb0017df05$var$TabsProvider, $69cb30bb0017df05$var$useTabsContext] = $69cb30bb0017df05$var$createTabsContext($69cb30bb0017df05$var$TABS_NAME);
const $69cb30bb0017df05$export$b2539bed5023c21c = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeTabs, value: valueProp, onValueChange, defaultValue: defaultValue2, orientation = "horizontal", dir, activationMode = "automatic", ...tabsProps } = props;
  const direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  const [value, setValue] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: valueProp,
    onChange: onValueChange,
    defaultProp: defaultValue2
  });
  return /* @__PURE__ */ reactExports.createElement($69cb30bb0017df05$var$TabsProvider, {
    scope: __scopeTabs,
    baseId: $1746a345f3d73bb7$export$f680877a34711e37(),
    value,
    onValueChange: setValue,
    orientation,
    dir: direction,
    activationMode
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    dir: direction,
    "data-orientation": orientation
  }, tabsProps, {
    ref: forwardedRef
  })));
});
const $69cb30bb0017df05$var$TAB_LIST_NAME = "TabsList";
const $69cb30bb0017df05$export$9712d22edc0d78c1 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeTabs, loop = true, ...listProps } = props;
  const context = $69cb30bb0017df05$var$useTabsContext($69cb30bb0017df05$var$TAB_LIST_NAME, __scopeTabs);
  const rovingFocusGroupScope = $69cb30bb0017df05$var$useRovingFocusGroupScope(__scopeTabs);
  return /* @__PURE__ */ reactExports.createElement($d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9, _extends$y({
    asChild: true
  }, rovingFocusGroupScope, {
    orientation: context.orientation,
    dir: context.dir,
    loop
  }), /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    role: "tablist",
    "aria-orientation": context.orientation
  }, listProps, {
    ref: forwardedRef
  })));
});
const $69cb30bb0017df05$var$TRIGGER_NAME = "TabsTrigger";
const $69cb30bb0017df05$export$8114b9fdfdf9f3ba = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeTabs, value, disabled = false, ...triggerProps } = props;
  const context = $69cb30bb0017df05$var$useTabsContext($69cb30bb0017df05$var$TRIGGER_NAME, __scopeTabs);
  const rovingFocusGroupScope = $69cb30bb0017df05$var$useRovingFocusGroupScope(__scopeTabs);
  const triggerId = $69cb30bb0017df05$var$makeTriggerId(context.baseId, value);
  const contentId = $69cb30bb0017df05$var$makeContentId(context.baseId, value);
  const isSelected = value === context.value;
  return /* @__PURE__ */ reactExports.createElement($d7bdfb9eb0fdf311$export$6d08773d2e66f8f2, _extends$y({
    asChild: true
  }, rovingFocusGroupScope, {
    focusable: !disabled,
    active: isSelected
  }), /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends$y({
    type: "button",
    role: "tab",
    "aria-selected": isSelected,
    "aria-controls": contentId,
    "data-state": isSelected ? "active" : "inactive",
    "data-disabled": disabled ? "" : void 0,
    disabled,
    id: triggerId
  }, triggerProps, {
    ref: forwardedRef,
    onMouseDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onMouseDown, (event) => {
      if (!disabled && event.button === 0 && event.ctrlKey === false)
        context.onValueChange(value);
      else
        event.preventDefault();
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      if ([
        " ",
        "Enter"
      ].includes(event.key))
        context.onValueChange(value);
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocus, () => {
      const isAutomaticActivation = context.activationMode !== "manual";
      if (!isSelected && !disabled && isAutomaticActivation)
        context.onValueChange(value);
    })
  })));
});
const $69cb30bb0017df05$var$CONTENT_NAME = "TabsContent";
const $69cb30bb0017df05$export$bd905d70e8fd2ebb = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeTabs, value, forceMount, children: children2, ...contentProps } = props;
  const context = $69cb30bb0017df05$var$useTabsContext($69cb30bb0017df05$var$CONTENT_NAME, __scopeTabs);
  const triggerId = $69cb30bb0017df05$var$makeTriggerId(context.baseId, value);
  const contentId = $69cb30bb0017df05$var$makeContentId(context.baseId, value);
  const isSelected = value === context.value;
  const isMountAnimationPreventedRef = reactExports.useRef(isSelected);
  reactExports.useEffect(() => {
    const rAF = requestAnimationFrame(
      () => isMountAnimationPreventedRef.current = false
    );
    return () => cancelAnimationFrame(rAF);
  }, []);
  return /* @__PURE__ */ reactExports.createElement(
    $921a889cee6df7e8$export$99c2b779aa4e8b8b,
    {
      present: forceMount || isSelected
    },
    ({ present }) => /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
      "data-state": isSelected ? "active" : "inactive",
      "data-orientation": context.orientation,
      role: "tabpanel",
      "aria-labelledby": triggerId,
      hidden: !present,
      id: contentId,
      tabIndex: 0
    }, contentProps, {
      ref: forwardedRef,
      style: {
        ...props.style,
        animationDuration: isMountAnimationPreventedRef.current ? "0s" : void 0
      }
    }), present && children2)
  );
});
function $69cb30bb0017df05$var$makeTriggerId(baseId, value) {
  return `${baseId}-trigger-${value}`;
}
function $69cb30bb0017df05$var$makeContentId(baseId, value) {
  return `${baseId}-content-${value}`;
}
const $69cb30bb0017df05$export$be92b6f5f03c0fe9 = $69cb30bb0017df05$export$b2539bed5023c21c;
const $69cb30bb0017df05$export$54c2e3dc7acea9f5 = $69cb30bb0017df05$export$9712d22edc0d78c1;
const $69cb30bb0017df05$export$41fb9f06171c75f4 = $69cb30bb0017df05$export$8114b9fdfdf9f3ba;
const $69cb30bb0017df05$export$7c6e2c02157bb7d2 = $69cb30bb0017df05$export$bd905d70e8fd2ebb;
const Tabs = $69cb30bb0017df05$export$be92b6f5f03c0fe9;
const TabsList = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $69cb30bb0017df05$export$54c2e3dc7acea9f5,
  {
    ref,
    className: cn(
      "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
      className
    ),
    ...props
  }
));
TabsList.displayName = $69cb30bb0017df05$export$54c2e3dc7acea9f5.displayName;
const TabsTrigger = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $69cb30bb0017df05$export$41fb9f06171c75f4,
  {
    ref,
    className: cn(
      "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
      className
    ),
    ...props
  }
));
TabsTrigger.displayName = $69cb30bb0017df05$export$41fb9f06171c75f4.displayName;
const TabsContent = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $69cb30bb0017df05$export$7c6e2c02157bb7d2,
  {
    ref,
    className: cn(
      "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
      className
    ),
    ...props
  }
));
TabsContent.displayName = $69cb30bb0017df05$export$7c6e2c02157bb7d2.displayName;
const $409067139f391064$var$COLLAPSIBLE_NAME = "Collapsible";
const [$409067139f391064$var$createCollapsibleContext, $409067139f391064$export$952b32dcbe73087a] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($409067139f391064$var$COLLAPSIBLE_NAME);
const [$409067139f391064$var$CollapsibleProvider, $409067139f391064$var$useCollapsibleContext] = $409067139f391064$var$createCollapsibleContext($409067139f391064$var$COLLAPSIBLE_NAME);
const $409067139f391064$export$6eb0f7ddcda6131f = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeCollapsible, open: openProp, defaultOpen, disabled, onOpenChange, ...collapsibleProps } = props;
  const [open = false, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return /* @__PURE__ */ reactExports.createElement($409067139f391064$var$CollapsibleProvider, {
    scope: __scopeCollapsible,
    disabled,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    open,
    onOpenToggle: reactExports.useCallback(
      () => setOpen(
        (prevOpen) => !prevOpen
      ),
      [
        setOpen
      ]
    )
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    "data-state": $409067139f391064$var$getState(open),
    "data-disabled": disabled ? "" : void 0
  }, collapsibleProps, {
    ref: forwardedRef
  })));
});
const $409067139f391064$var$TRIGGER_NAME = "CollapsibleTrigger";
const $409067139f391064$export$c135dce7b15bbbdc = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeCollapsible, ...triggerProps } = props;
  const context = $409067139f391064$var$useCollapsibleContext($409067139f391064$var$TRIGGER_NAME, __scopeCollapsible);
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends$y({
    type: "button",
    "aria-controls": context.contentId,
    "aria-expanded": context.open || false,
    "data-state": $409067139f391064$var$getState(context.open),
    "data-disabled": context.disabled ? "" : void 0,
    disabled: context.disabled
  }, triggerProps, {
    ref: forwardedRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, context.onOpenToggle)
  }));
});
const $409067139f391064$var$CONTENT_NAME = "CollapsibleContent";
const $409067139f391064$export$aadde00976f34151 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { forceMount, ...contentProps } = props;
  const context = $409067139f391064$var$useCollapsibleContext($409067139f391064$var$CONTENT_NAME, props.__scopeCollapsible);
  return /* @__PURE__ */ reactExports.createElement(
    $921a889cee6df7e8$export$99c2b779aa4e8b8b,
    {
      present: forceMount || context.open
    },
    ({ present }) => /* @__PURE__ */ reactExports.createElement($409067139f391064$var$CollapsibleContentImpl, _extends$y({}, contentProps, {
      ref: forwardedRef,
      present
    }))
  );
});
const $409067139f391064$var$CollapsibleContentImpl = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeCollapsible, present, children: children2, ...contentProps } = props;
  const context = $409067139f391064$var$useCollapsibleContext($409067139f391064$var$CONTENT_NAME, __scopeCollapsible);
  const [isPresent, setIsPresent] = reactExports.useState(present);
  const ref = reactExports.useRef(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const heightRef = reactExports.useRef(0);
  const height = heightRef.current;
  const widthRef = reactExports.useRef(0);
  const width = widthRef.current;
  const isOpen = context.open || isPresent;
  const isMountAnimationPreventedRef = reactExports.useRef(isOpen);
  const originalStylesRef = reactExports.useRef();
  reactExports.useEffect(() => {
    const rAF = requestAnimationFrame(
      () => isMountAnimationPreventedRef.current = false
    );
    return () => cancelAnimationFrame(rAF);
  }, []);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    const node = ref.current;
    if (node) {
      originalStylesRef.current = originalStylesRef.current || {
        transitionDuration: node.style.transitionDuration,
        animationName: node.style.animationName
      };
      node.style.transitionDuration = "0s";
      node.style.animationName = "none";
      const rect = node.getBoundingClientRect();
      heightRef.current = rect.height;
      widthRef.current = rect.width;
      if (!isMountAnimationPreventedRef.current) {
        node.style.transitionDuration = originalStylesRef.current.transitionDuration;
        node.style.animationName = originalStylesRef.current.animationName;
      }
      setIsPresent(present);
    }
  }, [
    context.open,
    present
  ]);
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    "data-state": $409067139f391064$var$getState(context.open),
    "data-disabled": context.disabled ? "" : void 0,
    id: context.contentId,
    hidden: !isOpen
  }, contentProps, {
    ref: composedRefs,
    style: {
      [`--radix-collapsible-content-height`]: height ? `${height}px` : void 0,
      [`--radix-collapsible-content-width`]: width ? `${width}px` : void 0,
      ...props.style
    }
  }), isOpen && children2);
});
function $409067139f391064$var$getState(open) {
  return open ? "open" : "closed";
}
const $409067139f391064$export$be92b6f5f03c0fe9 = $409067139f391064$export$6eb0f7ddcda6131f;
const $409067139f391064$export$41fb9f06171c75f4 = $409067139f391064$export$c135dce7b15bbbdc;
const $409067139f391064$export$7c6e2c02157bb7d2 = $409067139f391064$export$aadde00976f34151;
const $1bf158f521e1b1b4$var$ACCORDION_NAME = "Accordion";
const $1bf158f521e1b1b4$var$ACCORDION_KEYS = [
  "Home",
  "End",
  "ArrowDown",
  "ArrowUp",
  "ArrowLeft",
  "ArrowRight"
];
const [$1bf158f521e1b1b4$var$Collection, $1bf158f521e1b1b4$var$useCollection, $1bf158f521e1b1b4$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($1bf158f521e1b1b4$var$ACCORDION_NAME);
const [$1bf158f521e1b1b4$var$createAccordionContext, $1bf158f521e1b1b4$export$9748edc328a73be1] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($1bf158f521e1b1b4$var$ACCORDION_NAME, [
  $1bf158f521e1b1b4$var$createCollectionScope,
  $409067139f391064$export$952b32dcbe73087a
]);
const $1bf158f521e1b1b4$var$useCollapsibleScope = $409067139f391064$export$952b32dcbe73087a();
const $1bf158f521e1b1b4$export$a766cd26d0d69044 = /* @__PURE__ */ React.forwardRef((props, forwardedRef) => {
  const { type: type2, ...accordionProps } = props;
  const singleProps = accordionProps;
  const multipleProps = accordionProps;
  return /* @__PURE__ */ React.createElement($1bf158f521e1b1b4$var$Collection.Provider, {
    scope: props.__scopeAccordion
  }, type2 === "multiple" ? /* @__PURE__ */ React.createElement($1bf158f521e1b1b4$var$AccordionImplMultiple, _extends$y({}, multipleProps, {
    ref: forwardedRef
  })) : /* @__PURE__ */ React.createElement($1bf158f521e1b1b4$var$AccordionImplSingle, _extends$y({}, singleProps, {
    ref: forwardedRef
  })));
});
$1bf158f521e1b1b4$export$a766cd26d0d69044.propTypes = {
  type(props) {
    const value = props.value || props.defaultValue;
    if (props.type && ![
      "single",
      "multiple"
    ].includes(props.type))
      return new Error("Invalid prop `type` supplied to `Accordion`. Expected one of `single | multiple`.");
    if (props.type === "multiple" && typeof value === "string")
      return new Error("Invalid prop `type` supplied to `Accordion`. Expected `single` when `defaultValue` or `value` is type `string`.");
    if (props.type === "single" && Array.isArray(value))
      return new Error("Invalid prop `type` supplied to `Accordion`. Expected `multiple` when `defaultValue` or `value` is type `string[]`.");
    return null;
  }
};
const [$1bf158f521e1b1b4$var$AccordionValueProvider, $1bf158f521e1b1b4$var$useAccordionValueContext] = $1bf158f521e1b1b4$var$createAccordionContext($1bf158f521e1b1b4$var$ACCORDION_NAME);
const [$1bf158f521e1b1b4$var$AccordionCollapsibleProvider, $1bf158f521e1b1b4$var$useAccordionCollapsibleContext] = $1bf158f521e1b1b4$var$createAccordionContext($1bf158f521e1b1b4$var$ACCORDION_NAME, {
  collapsible: false
});
const $1bf158f521e1b1b4$var$AccordionImplSingle = /* @__PURE__ */ React.forwardRef((props, forwardedRef) => {
  const { value: valueProp, defaultValue: defaultValue2, onValueChange = () => {
  }, collapsible = false, ...accordionSingleProps } = props;
  const [value, setValue] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: valueProp,
    defaultProp: defaultValue2,
    onChange: onValueChange
  });
  return /* @__PURE__ */ React.createElement($1bf158f521e1b1b4$var$AccordionValueProvider, {
    scope: props.__scopeAccordion,
    value: value ? [
      value
    ] : [],
    onItemOpen: setValue,
    onItemClose: React.useCallback(
      () => collapsible && setValue(""),
      [
        collapsible,
        setValue
      ]
    )
  }, /* @__PURE__ */ React.createElement($1bf158f521e1b1b4$var$AccordionCollapsibleProvider, {
    scope: props.__scopeAccordion,
    collapsible
  }, /* @__PURE__ */ React.createElement($1bf158f521e1b1b4$var$AccordionImpl, _extends$y({}, accordionSingleProps, {
    ref: forwardedRef
  }))));
});
const $1bf158f521e1b1b4$var$AccordionImplMultiple = /* @__PURE__ */ React.forwardRef((props, forwardedRef) => {
  const { value: valueProp, defaultValue: defaultValue2, onValueChange = () => {
  }, ...accordionMultipleProps } = props;
  const [value1 = [], setValue] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: valueProp,
    defaultProp: defaultValue2,
    onChange: onValueChange
  });
  const handleItemOpen = React.useCallback(
    (itemValue) => setValue(
      (prevValue = []) => [
        ...prevValue,
        itemValue
      ]
    ),
    [
      setValue
    ]
  );
  const handleItemClose = React.useCallback(
    (itemValue) => setValue(
      (prevValue = []) => prevValue.filter(
        (value) => value !== itemValue
      )
    ),
    [
      setValue
    ]
  );
  return /* @__PURE__ */ React.createElement($1bf158f521e1b1b4$var$AccordionValueProvider, {
    scope: props.__scopeAccordion,
    value: value1,
    onItemOpen: handleItemOpen,
    onItemClose: handleItemClose
  }, /* @__PURE__ */ React.createElement($1bf158f521e1b1b4$var$AccordionCollapsibleProvider, {
    scope: props.__scopeAccordion,
    collapsible: true
  }, /* @__PURE__ */ React.createElement($1bf158f521e1b1b4$var$AccordionImpl, _extends$y({}, accordionMultipleProps, {
    ref: forwardedRef
  }))));
});
const [$1bf158f521e1b1b4$var$AccordionImplProvider, $1bf158f521e1b1b4$var$useAccordionContext] = $1bf158f521e1b1b4$var$createAccordionContext($1bf158f521e1b1b4$var$ACCORDION_NAME);
const $1bf158f521e1b1b4$var$AccordionImpl = /* @__PURE__ */ React.forwardRef((props, forwardedRef) => {
  const { __scopeAccordion, disabled, dir, orientation = "vertical", ...accordionProps } = props;
  const accordionRef = React.useRef(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(accordionRef, forwardedRef);
  const getItems = $1bf158f521e1b1b4$var$useCollection(__scopeAccordion);
  const direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  const isDirectionLTR = direction === "ltr";
  const handleKeyDown = $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
    var _triggerCollection$cl;
    if (!$1bf158f521e1b1b4$var$ACCORDION_KEYS.includes(event.key))
      return;
    const target = event.target;
    const triggerCollection = getItems().filter((item) => {
      var _item$ref$current;
      return !((_item$ref$current = item.ref.current) !== null && _item$ref$current !== void 0 && _item$ref$current.disabled);
    });
    const triggerIndex = triggerCollection.findIndex(
      (item) => item.ref.current === target
    );
    const triggerCount = triggerCollection.length;
    if (triggerIndex === -1)
      return;
    event.preventDefault();
    let nextIndex = triggerIndex;
    const homeIndex = 0;
    const endIndex = triggerCount - 1;
    const moveNext = () => {
      nextIndex = triggerIndex + 1;
      if (nextIndex > endIndex)
        nextIndex = homeIndex;
    };
    const movePrev = () => {
      nextIndex = triggerIndex - 1;
      if (nextIndex < homeIndex)
        nextIndex = endIndex;
    };
    switch (event.key) {
      case "Home":
        nextIndex = homeIndex;
        break;
      case "End":
        nextIndex = endIndex;
        break;
      case "ArrowRight":
        if (orientation === "horizontal") {
          if (isDirectionLTR)
            moveNext();
          else
            movePrev();
        }
        break;
      case "ArrowDown":
        if (orientation === "vertical")
          moveNext();
        break;
      case "ArrowLeft":
        if (orientation === "horizontal") {
          if (isDirectionLTR)
            movePrev();
          else
            moveNext();
        }
        break;
      case "ArrowUp":
        if (orientation === "vertical")
          movePrev();
        break;
    }
    const clampedIndex = nextIndex % triggerCount;
    (_triggerCollection$cl = triggerCollection[clampedIndex].ref.current) === null || _triggerCollection$cl === void 0 || _triggerCollection$cl.focus();
  });
  return /* @__PURE__ */ React.createElement($1bf158f521e1b1b4$var$AccordionImplProvider, {
    scope: __scopeAccordion,
    disabled,
    direction: dir,
    orientation
  }, /* @__PURE__ */ React.createElement($1bf158f521e1b1b4$var$Collection.Slot, {
    scope: __scopeAccordion
  }, /* @__PURE__ */ React.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({}, accordionProps, {
    "data-orientation": orientation,
    ref: composedRefs,
    onKeyDown: disabled ? void 0 : handleKeyDown
  }))));
});
const $1bf158f521e1b1b4$var$ITEM_NAME = "AccordionItem";
const [$1bf158f521e1b1b4$var$AccordionItemProvider, $1bf158f521e1b1b4$var$useAccordionItemContext] = $1bf158f521e1b1b4$var$createAccordionContext($1bf158f521e1b1b4$var$ITEM_NAME);
const $1bf158f521e1b1b4$export$d99097c13d4dac9f = /* @__PURE__ */ React.forwardRef((props, forwardedRef) => {
  const { __scopeAccordion, value, ...accordionItemProps } = props;
  const accordionContext = $1bf158f521e1b1b4$var$useAccordionContext($1bf158f521e1b1b4$var$ITEM_NAME, __scopeAccordion);
  const valueContext = $1bf158f521e1b1b4$var$useAccordionValueContext($1bf158f521e1b1b4$var$ITEM_NAME, __scopeAccordion);
  const collapsibleScope = $1bf158f521e1b1b4$var$useCollapsibleScope(__scopeAccordion);
  const triggerId = $1746a345f3d73bb7$export$f680877a34711e37();
  const open1 = value && valueContext.value.includes(value) || false;
  const disabled = accordionContext.disabled || props.disabled;
  return /* @__PURE__ */ React.createElement($1bf158f521e1b1b4$var$AccordionItemProvider, {
    scope: __scopeAccordion,
    open: open1,
    disabled,
    triggerId
  }, /* @__PURE__ */ React.createElement($409067139f391064$export$be92b6f5f03c0fe9, _extends$y({
    "data-orientation": accordionContext.orientation,
    "data-state": $1bf158f521e1b1b4$var$getState(open1)
  }, collapsibleScope, accordionItemProps, {
    ref: forwardedRef,
    disabled,
    open: open1,
    onOpenChange: (open) => {
      if (open)
        valueContext.onItemOpen(value);
      else
        valueContext.onItemClose(value);
    }
  })));
});
const $1bf158f521e1b1b4$var$HEADER_NAME = "AccordionHeader";
const $1bf158f521e1b1b4$export$5e3e5deaaf81ee41 = /* @__PURE__ */ React.forwardRef((props, forwardedRef) => {
  const { __scopeAccordion, ...headerProps } = props;
  const accordionContext = $1bf158f521e1b1b4$var$useAccordionContext($1bf158f521e1b1b4$var$ACCORDION_NAME, __scopeAccordion);
  const itemContext = $1bf158f521e1b1b4$var$useAccordionItemContext($1bf158f521e1b1b4$var$HEADER_NAME, __scopeAccordion);
  return /* @__PURE__ */ React.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.h3, _extends$y({
    "data-orientation": accordionContext.orientation,
    "data-state": $1bf158f521e1b1b4$var$getState(itemContext.open),
    "data-disabled": itemContext.disabled ? "" : void 0
  }, headerProps, {
    ref: forwardedRef
  }));
});
const $1bf158f521e1b1b4$var$TRIGGER_NAME = "AccordionTrigger";
const $1bf158f521e1b1b4$export$94e939b1f85bdd73 = /* @__PURE__ */ React.forwardRef((props, forwardedRef) => {
  const { __scopeAccordion, ...triggerProps } = props;
  const accordionContext = $1bf158f521e1b1b4$var$useAccordionContext($1bf158f521e1b1b4$var$ACCORDION_NAME, __scopeAccordion);
  const itemContext = $1bf158f521e1b1b4$var$useAccordionItemContext($1bf158f521e1b1b4$var$TRIGGER_NAME, __scopeAccordion);
  const collapsibleContext = $1bf158f521e1b1b4$var$useAccordionCollapsibleContext($1bf158f521e1b1b4$var$TRIGGER_NAME, __scopeAccordion);
  const collapsibleScope = $1bf158f521e1b1b4$var$useCollapsibleScope(__scopeAccordion);
  return /* @__PURE__ */ React.createElement($1bf158f521e1b1b4$var$Collection.ItemSlot, {
    scope: __scopeAccordion
  }, /* @__PURE__ */ React.createElement($409067139f391064$export$41fb9f06171c75f4, _extends$y({
    "aria-disabled": itemContext.open && !collapsibleContext.collapsible || void 0,
    "data-orientation": accordionContext.orientation,
    id: itemContext.triggerId
  }, collapsibleScope, triggerProps, {
    ref: forwardedRef
  })));
});
const $1bf158f521e1b1b4$var$CONTENT_NAME = "AccordionContent";
const $1bf158f521e1b1b4$export$985b9a77379b54a0 = /* @__PURE__ */ React.forwardRef((props, forwardedRef) => {
  const { __scopeAccordion, ...contentProps } = props;
  const accordionContext = $1bf158f521e1b1b4$var$useAccordionContext($1bf158f521e1b1b4$var$ACCORDION_NAME, __scopeAccordion);
  const itemContext = $1bf158f521e1b1b4$var$useAccordionItemContext($1bf158f521e1b1b4$var$CONTENT_NAME, __scopeAccordion);
  const collapsibleScope = $1bf158f521e1b1b4$var$useCollapsibleScope(__scopeAccordion);
  return /* @__PURE__ */ React.createElement($409067139f391064$export$7c6e2c02157bb7d2, _extends$y({
    role: "region",
    "aria-labelledby": itemContext.triggerId,
    "data-orientation": accordionContext.orientation
  }, collapsibleScope, contentProps, {
    ref: forwardedRef,
    style: {
      ["--radix-accordion-content-height"]: "var(--radix-collapsible-content-height)",
      ["--radix-accordion-content-width"]: "var(--radix-collapsible-content-width)",
      ...props.style
    }
  }));
});
function $1bf158f521e1b1b4$var$getState(open) {
  return open ? "open" : "closed";
}
const $1bf158f521e1b1b4$export$be92b6f5f03c0fe9 = $1bf158f521e1b1b4$export$a766cd26d0d69044;
const $1bf158f521e1b1b4$export$6d08773d2e66f8f2 = $1bf158f521e1b1b4$export$d99097c13d4dac9f;
const $1bf158f521e1b1b4$export$8b251419efc915eb = $1bf158f521e1b1b4$export$5e3e5deaaf81ee41;
const $1bf158f521e1b1b4$export$41fb9f06171c75f4 = $1bf158f521e1b1b4$export$94e939b1f85bdd73;
const $1bf158f521e1b1b4$export$7c6e2c02157bb7d2 = $1bf158f521e1b1b4$export$985b9a77379b54a0;
const Accordion = $1bf158f521e1b1b4$export$be92b6f5f03c0fe9;
const AccordionItem = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $1bf158f521e1b1b4$export$6d08773d2e66f8f2,
  {
    ref,
    className: cn("border-b", className),
    ...props
  }
));
AccordionItem.displayName = "AccordionItem";
const AccordionTrigger = reactExports.forwardRef(({ className, children: children2, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx($1bf158f521e1b1b4$export$8b251419efc915eb, { className: "flex", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
  $1bf158f521e1b1b4$export$41fb9f06171c75f4,
  {
    ref,
    className: cn(
      "flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180",
      className
    ),
    ...props,
    children: [
      children2,
      /* @__PURE__ */ jsxRuntimeExports.jsx(ChevronDown, { className: "h-4 w-4 shrink-0 transition-transform duration-200" })
    ]
  }
) }));
AccordionTrigger.displayName = $1bf158f521e1b1b4$export$41fb9f06171c75f4.displayName;
const AccordionContent = reactExports.forwardRef(({ className, children: children2, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $1bf158f521e1b1b4$export$7c6e2c02157bb7d2,
  {
    ref,
    className: "overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down",
    ...props,
    children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: cn("pb-4 pt-0", className), children: children2 })
  }
));
AccordionContent.displayName = $1bf158f521e1b1b4$export$7c6e2c02157bb7d2.displayName;
var isArray$f = Array.isArray;
var isArray_1 = isArray$f;
var freeGlobal$1 = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
var _freeGlobal = freeGlobal$1;
var freeGlobal = _freeGlobal;
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root$b = freeGlobal || freeSelf || Function("return this")();
var _root = root$b;
var root$a = _root;
var Symbol$7 = root$a.Symbol;
var _Symbol = Symbol$7;
var Symbol$6 = _Symbol;
var objectProto$c = Object.prototype;
var hasOwnProperty$a = objectProto$c.hasOwnProperty;
var nativeObjectToString$1 = objectProto$c.toString;
var symToStringTag$1 = Symbol$6 ? Symbol$6.toStringTag : void 0;
function getRawTag$1(value) {
  var isOwn = hasOwnProperty$a.call(value, symToStringTag$1), tag = value[symToStringTag$1];
  try {
    value[symToStringTag$1] = void 0;
    var unmasked = true;
  } catch (e3) {
  }
  var result = nativeObjectToString$1.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag$1] = tag;
    } else {
      delete value[symToStringTag$1];
    }
  }
  return result;
}
var _getRawTag = getRawTag$1;
var objectProto$b = Object.prototype;
var nativeObjectToString = objectProto$b.toString;
function objectToString$1(value) {
  return nativeObjectToString.call(value);
}
var _objectToString = objectToString$1;
var Symbol$5 = _Symbol, getRawTag = _getRawTag, objectToString = _objectToString;
var nullTag = "[object Null]", undefinedTag = "[object Undefined]";
var symToStringTag = Symbol$5 ? Symbol$5.toStringTag : void 0;
function baseGetTag$9(value) {
  if (value == null) {
    return value === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}
var _baseGetTag = baseGetTag$9;
function isObjectLike$9(value) {
  return value != null && typeof value == "object";
}
var isObjectLike_1 = isObjectLike$9;
var baseGetTag$8 = _baseGetTag, isObjectLike$8 = isObjectLike_1;
var symbolTag$1 = "[object Symbol]";
function isSymbol$6(value) {
  return typeof value == "symbol" || isObjectLike$8(value) && baseGetTag$8(value) == symbolTag$1;
}
var isSymbol_1 = isSymbol$6;
var isArray$e = isArray_1, isSymbol$5 = isSymbol_1;
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/;
function isKey$4(value, object2) {
  if (isArray$e(value)) {
    return false;
  }
  var type2 = typeof value;
  if (type2 == "number" || type2 == "symbol" || type2 == "boolean" || value == null || isSymbol$5(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object2 != null && value in Object(object2);
}
var _isKey = isKey$4;
function isObject$8(value) {
  var type2 = typeof value;
  return value != null && (type2 == "object" || type2 == "function");
}
var isObject_1 = isObject$8;
const isObject$9 = /* @__PURE__ */ getDefaultExportFromCjs(isObject_1);
var baseGetTag$7 = _baseGetTag, isObject$7 = isObject_1;
var asyncTag = "[object AsyncFunction]", funcTag$1 = "[object Function]", genTag = "[object GeneratorFunction]", proxyTag = "[object Proxy]";
function isFunction$3(value) {
  if (!isObject$7(value)) {
    return false;
  }
  var tag = baseGetTag$7(value);
  return tag == funcTag$1 || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_1 = isFunction$3;
const isFunction$4 = /* @__PURE__ */ getDefaultExportFromCjs(isFunction_1);
var root$9 = _root;
var coreJsData$1 = root$9["__core-js_shared__"];
var _coreJsData = coreJsData$1;
var coreJsData = _coreJsData;
var maskSrcKey = function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
  return uid ? "Symbol(src)_1." + uid : "";
}();
function isMasked$1(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var _isMasked = isMasked$1;
var funcProto$2 = Function.prototype;
var funcToString$2 = funcProto$2.toString;
function toSource$2(func) {
  if (func != null) {
    try {
      return funcToString$2.call(func);
    } catch (e3) {
    }
    try {
      return func + "";
    } catch (e3) {
    }
  }
  return "";
}
var _toSource = toSource$2;
var isFunction$2 = isFunction_1, isMasked = _isMasked, isObject$6 = isObject_1, toSource$1 = _toSource;
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto$1 = Function.prototype, objectProto$a = Object.prototype;
var funcToString$1 = funcProto$1.toString;
var hasOwnProperty$9 = objectProto$a.hasOwnProperty;
var reIsNative = RegExp(
  "^" + funcToString$1.call(hasOwnProperty$9).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function baseIsNative$1(value) {
  if (!isObject$6(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction$2(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource$1(value));
}
var _baseIsNative = baseIsNative$1;
function getValue$1(object2, key) {
  return object2 == null ? void 0 : object2[key];
}
var _getValue = getValue$1;
var baseIsNative = _baseIsNative, getValue = _getValue;
function getNative$7(object2, key) {
  var value = getValue(object2, key);
  return baseIsNative(value) ? value : void 0;
}
var _getNative = getNative$7;
var getNative$6 = _getNative;
var nativeCreate$4 = getNative$6(Object, "create");
var _nativeCreate = nativeCreate$4;
var nativeCreate$3 = _nativeCreate;
function hashClear$1() {
  this.__data__ = nativeCreate$3 ? nativeCreate$3(null) : {};
  this.size = 0;
}
var _hashClear = hashClear$1;
function hashDelete$1(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}
var _hashDelete = hashDelete$1;
var nativeCreate$2 = _nativeCreate;
var HASH_UNDEFINED$2 = "__lodash_hash_undefined__";
var objectProto$9 = Object.prototype;
var hasOwnProperty$8 = objectProto$9.hasOwnProperty;
function hashGet$1(key) {
  var data2 = this.__data__;
  if (nativeCreate$2) {
    var result = data2[key];
    return result === HASH_UNDEFINED$2 ? void 0 : result;
  }
  return hasOwnProperty$8.call(data2, key) ? data2[key] : void 0;
}
var _hashGet = hashGet$1;
var nativeCreate$1 = _nativeCreate;
var objectProto$8 = Object.prototype;
var hasOwnProperty$7 = objectProto$8.hasOwnProperty;
function hashHas$1(key) {
  var data2 = this.__data__;
  return nativeCreate$1 ? data2[key] !== void 0 : hasOwnProperty$7.call(data2, key);
}
var _hashHas = hashHas$1;
var nativeCreate = _nativeCreate;
var HASH_UNDEFINED$1 = "__lodash_hash_undefined__";
function hashSet$1(key, value) {
  var data2 = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data2[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED$1 : value;
  return this;
}
var _hashSet = hashSet$1;
var hashClear = _hashClear, hashDelete = _hashDelete, hashGet = _hashGet, hashHas = _hashHas, hashSet = _hashSet;
function Hash$1(entries) {
  var index2 = -1, length2 = entries == null ? 0 : entries.length;
  this.clear();
  while (++index2 < length2) {
    var entry = entries[index2];
    this.set(entry[0], entry[1]);
  }
}
Hash$1.prototype.clear = hashClear;
Hash$1.prototype["delete"] = hashDelete;
Hash$1.prototype.get = hashGet;
Hash$1.prototype.has = hashHas;
Hash$1.prototype.set = hashSet;
var _Hash = Hash$1;
function listCacheClear$1() {
  this.__data__ = [];
  this.size = 0;
}
var _listCacheClear = listCacheClear$1;
function eq$3(value, other) {
  return value === other || value !== value && other !== other;
}
var eq_1 = eq$3;
var eq$2 = eq_1;
function assocIndexOf$4(array2, key) {
  var length2 = array2.length;
  while (length2--) {
    if (eq$2(array2[length2][0], key)) {
      return length2;
    }
  }
  return -1;
}
var _assocIndexOf = assocIndexOf$4;
var assocIndexOf$3 = _assocIndexOf;
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete$1(key) {
  var data2 = this.__data__, index2 = assocIndexOf$3(data2, key);
  if (index2 < 0) {
    return false;
  }
  var lastIndex = data2.length - 1;
  if (index2 == lastIndex) {
    data2.pop();
  } else {
    splice.call(data2, index2, 1);
  }
  --this.size;
  return true;
}
var _listCacheDelete = listCacheDelete$1;
var assocIndexOf$2 = _assocIndexOf;
function listCacheGet$1(key) {
  var data2 = this.__data__, index2 = assocIndexOf$2(data2, key);
  return index2 < 0 ? void 0 : data2[index2][1];
}
var _listCacheGet = listCacheGet$1;
var assocIndexOf$1 = _assocIndexOf;
function listCacheHas$1(key) {
  return assocIndexOf$1(this.__data__, key) > -1;
}
var _listCacheHas = listCacheHas$1;
var assocIndexOf = _assocIndexOf;
function listCacheSet$1(key, value) {
  var data2 = this.__data__, index2 = assocIndexOf(data2, key);
  if (index2 < 0) {
    ++this.size;
    data2.push([key, value]);
  } else {
    data2[index2][1] = value;
  }
  return this;
}
var _listCacheSet = listCacheSet$1;
var listCacheClear = _listCacheClear, listCacheDelete = _listCacheDelete, listCacheGet = _listCacheGet, listCacheHas = _listCacheHas, listCacheSet = _listCacheSet;
function ListCache$4(entries) {
  var index2 = -1, length2 = entries == null ? 0 : entries.length;
  this.clear();
  while (++index2 < length2) {
    var entry = entries[index2];
    this.set(entry[0], entry[1]);
  }
}
ListCache$4.prototype.clear = listCacheClear;
ListCache$4.prototype["delete"] = listCacheDelete;
ListCache$4.prototype.get = listCacheGet;
ListCache$4.prototype.has = listCacheHas;
ListCache$4.prototype.set = listCacheSet;
var _ListCache = ListCache$4;
var getNative$5 = _getNative, root$8 = _root;
var Map$4 = getNative$5(root$8, "Map");
var _Map = Map$4;
var Hash = _Hash, ListCache$3 = _ListCache, Map$3 = _Map;
function mapCacheClear$1() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash(),
    "map": new (Map$3 || ListCache$3)(),
    "string": new Hash()
  };
}
var _mapCacheClear = mapCacheClear$1;
function isKeyable$1(value) {
  var type2 = typeof value;
  return type2 == "string" || type2 == "number" || type2 == "symbol" || type2 == "boolean" ? value !== "__proto__" : value === null;
}
var _isKeyable = isKeyable$1;
var isKeyable = _isKeyable;
function getMapData$4(map2, key) {
  var data2 = map2.__data__;
  return isKeyable(key) ? data2[typeof key == "string" ? "string" : "hash"] : data2.map;
}
var _getMapData = getMapData$4;
var getMapData$3 = _getMapData;
function mapCacheDelete$1(key) {
  var result = getMapData$3(this, key)["delete"](key);
  this.size -= result ? 1 : 0;
  return result;
}
var _mapCacheDelete = mapCacheDelete$1;
var getMapData$2 = _getMapData;
function mapCacheGet$1(key) {
  return getMapData$2(this, key).get(key);
}
var _mapCacheGet = mapCacheGet$1;
var getMapData$1 = _getMapData;
function mapCacheHas$1(key) {
  return getMapData$1(this, key).has(key);
}
var _mapCacheHas = mapCacheHas$1;
var getMapData = _getMapData;
function mapCacheSet$1(key, value) {
  var data2 = getMapData(this, key), size2 = data2.size;
  data2.set(key, value);
  this.size += data2.size == size2 ? 0 : 1;
  return this;
}
var _mapCacheSet = mapCacheSet$1;
var mapCacheClear = _mapCacheClear, mapCacheDelete = _mapCacheDelete, mapCacheGet = _mapCacheGet, mapCacheHas = _mapCacheHas, mapCacheSet = _mapCacheSet;
function MapCache$3(entries) {
  var index2 = -1, length2 = entries == null ? 0 : entries.length;
  this.clear();
  while (++index2 < length2) {
    var entry = entries[index2];
    this.set(entry[0], entry[1]);
  }
}
MapCache$3.prototype.clear = mapCacheClear;
MapCache$3.prototype["delete"] = mapCacheDelete;
MapCache$3.prototype.get = mapCacheGet;
MapCache$3.prototype.has = mapCacheHas;
MapCache$3.prototype.set = mapCacheSet;
var _MapCache = MapCache$3;
var MapCache$2 = _MapCache;
var FUNC_ERROR_TEXT$2 = "Expected a function";
function memoize$2(func, resolver) {
  if (typeof func != "function" || resolver != null && typeof resolver != "function") {
    throw new TypeError(FUNC_ERROR_TEXT$2);
  }
  var memoized = function() {
    var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize$2.Cache || MapCache$2)();
  return memoized;
}
memoize$2.Cache = MapCache$2;
var memoize_1 = memoize$2;
const memoize$3 = /* @__PURE__ */ getDefaultExportFromCjs(memoize_1);
var memoize$1 = memoize_1;
var MAX_MEMOIZE_SIZE = 500;
function memoizeCapped$1(func) {
  var result = memoize$1(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });
  var cache = result.cache;
  return result;
}
var _memoizeCapped = memoizeCapped$1;
var memoizeCapped = _memoizeCapped;
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath$2 = memoizeCapped(function(string2) {
  var result = [];
  if (string2.charCodeAt(0) === 46) {
    result.push("");
  }
  string2.replace(rePropName, function(match, number2, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, "$1") : number2 || match);
  });
  return result;
});
var _stringToPath = stringToPath$2;
function arrayMap$3(array2, iteratee) {
  var index2 = -1, length2 = array2 == null ? 0 : array2.length, result = Array(length2);
  while (++index2 < length2) {
    result[index2] = iteratee(array2[index2], index2, array2);
  }
  return result;
}
var _arrayMap = arrayMap$3;
var Symbol$4 = _Symbol, arrayMap$2 = _arrayMap, isArray$d = isArray_1, isSymbol$4 = isSymbol_1;
var INFINITY$3 = 1 / 0;
var symbolProto$1 = Symbol$4 ? Symbol$4.prototype : void 0, symbolToString = symbolProto$1 ? symbolProto$1.toString : void 0;
function baseToString$1(value) {
  if (typeof value == "string") {
    return value;
  }
  if (isArray$d(value)) {
    return arrayMap$2(value, baseToString$1) + "";
  }
  if (isSymbol$4(value)) {
    return symbolToString ? symbolToString.call(value) : "";
  }
  var result = value + "";
  return result == "0" && 1 / value == -INFINITY$3 ? "-0" : result;
}
var _baseToString = baseToString$1;
var baseToString = _baseToString;
function toString$3(value) {
  return value == null ? "" : baseToString(value);
}
var toString_1 = toString$3;
var isArray$c = isArray_1, isKey$3 = _isKey, stringToPath$1 = _stringToPath, toString$2 = toString_1;
function castPath$2(value, object2) {
  if (isArray$c(value)) {
    return value;
  }
  return isKey$3(value, object2) ? [value] : stringToPath$1(toString$2(value));
}
var _castPath = castPath$2;
var isSymbol$3 = isSymbol_1;
var INFINITY$2 = 1 / 0;
function toKey$4(value) {
  if (typeof value == "string" || isSymbol$3(value)) {
    return value;
  }
  var result = value + "";
  return result == "0" && 1 / value == -INFINITY$2 ? "-0" : result;
}
var _toKey = toKey$4;
var castPath$1 = _castPath, toKey$3 = _toKey;
function baseGet$4(object2, path) {
  path = castPath$1(path, object2);
  var index2 = 0, length2 = path.length;
  while (object2 != null && index2 < length2) {
    object2 = object2[toKey$3(path[index2++])];
  }
  return index2 && index2 == length2 ? object2 : void 0;
}
var _baseGet = baseGet$4;
var baseGet$3 = _baseGet;
function get$4(object2, path, defaultValue2) {
  var result = object2 == null ? void 0 : baseGet$3(object2, path);
  return result === void 0 ? defaultValue2 : result;
}
var get_1 = get$4;
const get$5 = /* @__PURE__ */ getDefaultExportFromCjs(get_1);
function isNil(value) {
  return value == null;
}
var isNil_1 = isNil;
const isNil$1 = /* @__PURE__ */ getDefaultExportFromCjs(isNil_1);
var baseGetTag$6 = _baseGetTag, isArray$b = isArray_1, isObjectLike$7 = isObjectLike_1;
var stringTag$2 = "[object String]";
function isString$2(value) {
  return typeof value == "string" || !isArray$b(value) && isObjectLike$7(value) && baseGetTag$6(value) == stringTag$2;
}
var isString_1 = isString$2;
const isString$3 = /* @__PURE__ */ getDefaultExportFromCjs(isString_1);
var reactIs = { exports: {} };
var reactIs_production_min = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b = "function" === typeof Symbol && Symbol.for, c$1 = b ? Symbol.for("react.element") : 60103, d = b ? Symbol.for("react.portal") : 60106, e = b ? Symbol.for("react.fragment") : 60107, f = b ? Symbol.for("react.strict_mode") : 60108, g = b ? Symbol.for("react.profiler") : 60114, h = b ? Symbol.for("react.provider") : 60109, k$1 = b ? Symbol.for("react.context") : 60110, l = b ? Symbol.for("react.async_mode") : 60111, m = b ? Symbol.for("react.concurrent_mode") : 60111, n$2 = b ? Symbol.for("react.forward_ref") : 60112, p = b ? Symbol.for("react.suspense") : 60113, q = b ? Symbol.for("react.suspense_list") : 60120, r = b ? Symbol.for("react.memo") : 60115, t$2 = b ? Symbol.for("react.lazy") : 60116, v = b ? Symbol.for("react.block") : 60121, w = b ? Symbol.for("react.fundamental") : 60117, x$1 = b ? Symbol.for("react.responder") : 60118, y$1 = b ? Symbol.for("react.scope") : 60119;
function z$1(a2) {
  if ("object" === typeof a2 && null !== a2) {
    var u2 = a2.$$typeof;
    switch (u2) {
      case c$1:
        switch (a2 = a2.type, a2) {
          case l:
          case m:
          case e:
          case g:
          case f:
          case p:
            return a2;
          default:
            switch (a2 = a2 && a2.$$typeof, a2) {
              case k$1:
              case n$2:
              case t$2:
              case r:
              case h:
                return a2;
              default:
                return u2;
            }
        }
      case d:
        return u2;
    }
  }
}
function A(a2) {
  return z$1(a2) === m;
}
reactIs_production_min.AsyncMode = l;
reactIs_production_min.ConcurrentMode = m;
reactIs_production_min.ContextConsumer = k$1;
reactIs_production_min.ContextProvider = h;
reactIs_production_min.Element = c$1;
reactIs_production_min.ForwardRef = n$2;
reactIs_production_min.Fragment = e;
reactIs_production_min.Lazy = t$2;
reactIs_production_min.Memo = r;
reactIs_production_min.Portal = d;
reactIs_production_min.Profiler = g;
reactIs_production_min.StrictMode = f;
reactIs_production_min.Suspense = p;
reactIs_production_min.isAsyncMode = function(a2) {
  return A(a2) || z$1(a2) === l;
};
reactIs_production_min.isConcurrentMode = A;
reactIs_production_min.isContextConsumer = function(a2) {
  return z$1(a2) === k$1;
};
reactIs_production_min.isContextProvider = function(a2) {
  return z$1(a2) === h;
};
reactIs_production_min.isElement = function(a2) {
  return "object" === typeof a2 && null !== a2 && a2.$$typeof === c$1;
};
reactIs_production_min.isForwardRef = function(a2) {
  return z$1(a2) === n$2;
};
reactIs_production_min.isFragment = function(a2) {
  return z$1(a2) === e;
};
reactIs_production_min.isLazy = function(a2) {
  return z$1(a2) === t$2;
};
reactIs_production_min.isMemo = function(a2) {
  return z$1(a2) === r;
};
reactIs_production_min.isPortal = function(a2) {
  return z$1(a2) === d;
};
reactIs_production_min.isProfiler = function(a2) {
  return z$1(a2) === g;
};
reactIs_production_min.isStrictMode = function(a2) {
  return z$1(a2) === f;
};
reactIs_production_min.isSuspense = function(a2) {
  return z$1(a2) === p;
};
reactIs_production_min.isValidElementType = function(a2) {
  return "string" === typeof a2 || "function" === typeof a2 || a2 === e || a2 === m || a2 === g || a2 === f || a2 === p || a2 === q || "object" === typeof a2 && null !== a2 && (a2.$$typeof === t$2 || a2.$$typeof === r || a2.$$typeof === h || a2.$$typeof === k$1 || a2.$$typeof === n$2 || a2.$$typeof === w || a2.$$typeof === x$1 || a2.$$typeof === y$1 || a2.$$typeof === v);
};
reactIs_production_min.typeOf = z$1;
{
  reactIs.exports = reactIs_production_min;
}
var reactIsExports = reactIs.exports;
var baseGetTag$5 = _baseGetTag, isObjectLike$6 = isObjectLike_1;
var numberTag$2 = "[object Number]";
function isNumber$2(value) {
  return typeof value == "number" || isObjectLike$6(value) && baseGetTag$5(value) == numberTag$2;
}
var isNumber_1 = isNumber$2;
const isNumber$3 = /* @__PURE__ */ getDefaultExportFromCjs(isNumber_1);
var isNumber$1 = isNumber_1;
function isNaN$1(value) {
  return isNumber$1(value) && value != +value;
}
var _isNaN = isNaN$1;
const isNan = /* @__PURE__ */ getDefaultExportFromCjs(_isNaN);
var mathSign = function mathSign2(value) {
  if (value === 0) {
    return 0;
  }
  if (value > 0) {
    return 1;
  }
  return -1;
};
var isPercent = function isPercent2(value) {
  return isString$3(value) && value.indexOf("%") === value.length - 1;
};
var isNumber = function isNumber2(value) {
  return isNumber$3(value) && !isNan(value);
};
var isNumOrStr = function isNumOrStr2(value) {
  return isNumber(value) || isString$3(value);
};
var idCounter = 0;
var uniqueId = function uniqueId2(prefix2) {
  var id2 = ++idCounter;
  return "".concat(prefix2 || "").concat(id2);
};
var getPercentValue = function getPercentValue2(percent, totalValue) {
  var defaultValue2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
  var validate = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
  if (!isNumber(percent) && !isString$3(percent)) {
    return defaultValue2;
  }
  var value;
  if (isPercent(percent)) {
    var index2 = percent.indexOf("%");
    value = totalValue * parseFloat(percent.slice(0, index2)) / 100;
  } else {
    value = +percent;
  }
  if (isNan(value)) {
    value = defaultValue2;
  }
  if (validate && value > totalValue) {
    value = totalValue;
  }
  return value;
};
var getAnyElementOfObject = function getAnyElementOfObject2(obj) {
  if (!obj) {
    return null;
  }
  var keys2 = Object.keys(obj);
  if (keys2 && keys2.length) {
    return obj[keys2[0]];
  }
  return null;
};
var hasDuplicate = function hasDuplicate2(ary) {
  if (!Array.isArray(ary)) {
    return false;
  }
  var len = ary.length;
  var cache = {};
  for (var i2 = 0; i2 < len; i2++) {
    if (!cache[ary[i2]]) {
      cache[ary[i2]] = true;
    } else {
      return true;
    }
  }
  return false;
};
var interpolateNumber$3 = function interpolateNumber(numberA, numberB) {
  if (isNumber(numberA) && isNumber(numberB)) {
    return function(t2) {
      return numberA + t2 * (numberB - numberA);
    };
  }
  return function() {
    return numberB;
  };
};
function findEntryInArray(ary, specifiedKey, specifiedValue) {
  if (!ary || !ary.length) {
    return null;
  }
  return ary.find(function(entry) {
    return entry && (typeof specifiedKey === "function" ? specifiedKey(entry) : get$5(entry, specifiedKey)) === specifiedValue;
  });
}
function shallowEqual(a2, b2) {
  for (var key in a2) {
    if ({}.hasOwnProperty.call(a2, key) && (!{}.hasOwnProperty.call(b2, key) || a2[key] !== b2[key])) {
      return false;
    }
  }
  for (var _key in b2) {
    if ({}.hasOwnProperty.call(b2, _key) && !{}.hasOwnProperty.call(a2, _key)) {
      return false;
    }
  }
  return true;
}
function _typeof$F(o2) {
  "@babel/helpers - typeof";
  return _typeof$F = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$F(o2);
}
var SVGContainerPropKeys = ["viewBox", "children"];
var SVGElementPropKeys = [
  "aria-activedescendant",
  "aria-atomic",
  "aria-autocomplete",
  "aria-busy",
  "aria-checked",
  "aria-colcount",
  "aria-colindex",
  "aria-colspan",
  "aria-controls",
  "aria-current",
  "aria-describedby",
  "aria-details",
  "aria-disabled",
  "aria-errormessage",
  "aria-expanded",
  "aria-flowto",
  "aria-haspopup",
  "aria-hidden",
  "aria-invalid",
  "aria-keyshortcuts",
  "aria-label",
  "aria-labelledby",
  "aria-level",
  "aria-live",
  "aria-modal",
  "aria-multiline",
  "aria-multiselectable",
  "aria-orientation",
  "aria-owns",
  "aria-placeholder",
  "aria-posinset",
  "aria-pressed",
  "aria-readonly",
  "aria-relevant",
  "aria-required",
  "aria-roledescription",
  "aria-rowcount",
  "aria-rowindex",
  "aria-rowspan",
  "aria-selected",
  "aria-setsize",
  "aria-sort",
  "aria-valuemax",
  "aria-valuemin",
  "aria-valuenow",
  "aria-valuetext",
  "className",
  "color",
  "height",
  "id",
  "lang",
  "max",
  "media",
  "method",
  "min",
  "name",
  "style",
  /*
   * removed 'type' SVGElementPropKey because we do not currently use any SVG elements
   * that can use it and it conflicts with the recharts prop 'type'
   * https://github.com/recharts/recharts/pull/3327
   * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/type
   */
  // 'type',
  "target",
  "width",
  "role",
  "tabIndex",
  "accentHeight",
  "accumulate",
  "additive",
  "alignmentBaseline",
  "allowReorder",
  "alphabetic",
  "amplitude",
  "arabicForm",
  "ascent",
  "attributeName",
  "attributeType",
  "autoReverse",
  "azimuth",
  "baseFrequency",
  "baselineShift",
  "baseProfile",
  "bbox",
  "begin",
  "bias",
  "by",
  "calcMode",
  "capHeight",
  "clip",
  "clipPath",
  "clipPathUnits",
  "clipRule",
  "colorInterpolation",
  "colorInterpolationFilters",
  "colorProfile",
  "colorRendering",
  "contentScriptType",
  "contentStyleType",
  "cursor",
  "cx",
  "cy",
  "d",
  "decelerate",
  "descent",
  "diffuseConstant",
  "direction",
  "display",
  "divisor",
  "dominantBaseline",
  "dur",
  "dx",
  "dy",
  "edgeMode",
  "elevation",
  "enableBackground",
  "end",
  "exponent",
  "externalResourcesRequired",
  "fill",
  "fillOpacity",
  "fillRule",
  "filter",
  "filterRes",
  "filterUnits",
  "floodColor",
  "floodOpacity",
  "focusable",
  "fontFamily",
  "fontSize",
  "fontSizeAdjust",
  "fontStretch",
  "fontStyle",
  "fontVariant",
  "fontWeight",
  "format",
  "from",
  "fx",
  "fy",
  "g1",
  "g2",
  "glyphName",
  "glyphOrientationHorizontal",
  "glyphOrientationVertical",
  "glyphRef",
  "gradientTransform",
  "gradientUnits",
  "hanging",
  "horizAdvX",
  "horizOriginX",
  "href",
  "ideographic",
  "imageRendering",
  "in2",
  "in",
  "intercept",
  "k1",
  "k2",
  "k3",
  "k4",
  "k",
  "kernelMatrix",
  "kernelUnitLength",
  "kerning",
  "keyPoints",
  "keySplines",
  "keyTimes",
  "lengthAdjust",
  "letterSpacing",
  "lightingColor",
  "limitingConeAngle",
  "local",
  "markerEnd",
  "markerHeight",
  "markerMid",
  "markerStart",
  "markerUnits",
  "markerWidth",
  "mask",
  "maskContentUnits",
  "maskUnits",
  "mathematical",
  "mode",
  "numOctaves",
  "offset",
  "opacity",
  "operator",
  "order",
  "orient",
  "orientation",
  "origin",
  "overflow",
  "overlinePosition",
  "overlineThickness",
  "paintOrder",
  "panose1",
  "pathLength",
  "patternContentUnits",
  "patternTransform",
  "patternUnits",
  "pointerEvents",
  "pointsAtX",
  "pointsAtY",
  "pointsAtZ",
  "preserveAlpha",
  "preserveAspectRatio",
  "primitiveUnits",
  "r",
  "radius",
  "refX",
  "refY",
  "renderingIntent",
  "repeatCount",
  "repeatDur",
  "requiredExtensions",
  "requiredFeatures",
  "restart",
  "result",
  "rotate",
  "rx",
  "ry",
  "seed",
  "shapeRendering",
  "slope",
  "spacing",
  "specularConstant",
  "specularExponent",
  "speed",
  "spreadMethod",
  "startOffset",
  "stdDeviation",
  "stemh",
  "stemv",
  "stitchTiles",
  "stopColor",
  "stopOpacity",
  "strikethroughPosition",
  "strikethroughThickness",
  "string",
  "stroke",
  "strokeDasharray",
  "strokeDashoffset",
  "strokeLinecap",
  "strokeLinejoin",
  "strokeMiterlimit",
  "strokeOpacity",
  "strokeWidth",
  "surfaceScale",
  "systemLanguage",
  "tableValues",
  "targetX",
  "targetY",
  "textAnchor",
  "textDecoration",
  "textLength",
  "textRendering",
  "to",
  "transform",
  "u1",
  "u2",
  "underlinePosition",
  "underlineThickness",
  "unicode",
  "unicodeBidi",
  "unicodeRange",
  "unitsPerEm",
  "vAlphabetic",
  "values",
  "vectorEffect",
  "version",
  "vertAdvY",
  "vertOriginX",
  "vertOriginY",
  "vHanging",
  "vIdeographic",
  "viewTarget",
  "visibility",
  "vMathematical",
  "widths",
  "wordSpacing",
  "writingMode",
  "x1",
  "x2",
  "x",
  "xChannelSelector",
  "xHeight",
  "xlinkActuate",
  "xlinkArcrole",
  "xlinkHref",
  "xlinkRole",
  "xlinkShow",
  "xlinkTitle",
  "xlinkType",
  "xmlBase",
  "xmlLang",
  "xmlns",
  "xmlnsXlink",
  "xmlSpace",
  "y1",
  "y2",
  "y",
  "yChannelSelector",
  "z",
  "zoomAndPan",
  "ref",
  "key",
  "angle"
];
var PolyElementKeys = ["points", "pathLength"];
var FilteredElementKeyMap = {
  svg: SVGContainerPropKeys,
  polygon: PolyElementKeys,
  polyline: PolyElementKeys
};
var EventKeys = ["dangerouslySetInnerHTML", "onCopy", "onCopyCapture", "onCut", "onCutCapture", "onPaste", "onPasteCapture", "onCompositionEnd", "onCompositionEndCapture", "onCompositionStart", "onCompositionStartCapture", "onCompositionUpdate", "onCompositionUpdateCapture", "onFocus", "onFocusCapture", "onBlur", "onBlurCapture", "onChange", "onChangeCapture", "onBeforeInput", "onBeforeInputCapture", "onInput", "onInputCapture", "onReset", "onResetCapture", "onSubmit", "onSubmitCapture", "onInvalid", "onInvalidCapture", "onLoad", "onLoadCapture", "onError", "onErrorCapture", "onKeyDown", "onKeyDownCapture", "onKeyPress", "onKeyPressCapture", "onKeyUp", "onKeyUpCapture", "onAbort", "onAbortCapture", "onCanPlay", "onCanPlayCapture", "onCanPlayThrough", "onCanPlayThroughCapture", "onDurationChange", "onDurationChangeCapture", "onEmptied", "onEmptiedCapture", "onEncrypted", "onEncryptedCapture", "onEnded", "onEndedCapture", "onLoadedData", "onLoadedDataCapture", "onLoadedMetadata", "onLoadedMetadataCapture", "onLoadStart", "onLoadStartCapture", "onPause", "onPauseCapture", "onPlay", "onPlayCapture", "onPlaying", "onPlayingCapture", "onProgress", "onProgressCapture", "onRateChange", "onRateChangeCapture", "onSeeked", "onSeekedCapture", "onSeeking", "onSeekingCapture", "onStalled", "onStalledCapture", "onSuspend", "onSuspendCapture", "onTimeUpdate", "onTimeUpdateCapture", "onVolumeChange", "onVolumeChangeCapture", "onWaiting", "onWaitingCapture", "onAuxClick", "onAuxClickCapture", "onClick", "onClickCapture", "onContextMenu", "onContextMenuCapture", "onDoubleClick", "onDoubleClickCapture", "onDrag", "onDragCapture", "onDragEnd", "onDragEndCapture", "onDragEnter", "onDragEnterCapture", "onDragExit", "onDragExitCapture", "onDragLeave", "onDragLeaveCapture", "onDragOver", "onDragOverCapture", "onDragStart", "onDragStartCapture", "onDrop", "onDropCapture", "onMouseDown", "onMouseDownCapture", "onMouseEnter", "onMouseLeave", "onMouseMove", "onMouseMoveCapture", "onMouseOut", "onMouseOutCapture", "onMouseOver", "onMouseOverCapture", "onMouseUp", "onMouseUpCapture", "onSelect", "onSelectCapture", "onTouchCancel", "onTouchCancelCapture", "onTouchEnd", "onTouchEndCapture", "onTouchMove", "onTouchMoveCapture", "onTouchStart", "onTouchStartCapture", "onPointerDown", "onPointerDownCapture", "onPointerMove", "onPointerMoveCapture", "onPointerUp", "onPointerUpCapture", "onPointerCancel", "onPointerCancelCapture", "onPointerEnter", "onPointerEnterCapture", "onPointerLeave", "onPointerLeaveCapture", "onPointerOver", "onPointerOverCapture", "onPointerOut", "onPointerOutCapture", "onGotPointerCapture", "onGotPointerCaptureCapture", "onLostPointerCapture", "onLostPointerCaptureCapture", "onScroll", "onScrollCapture", "onWheel", "onWheelCapture", "onAnimationStart", "onAnimationStartCapture", "onAnimationEnd", "onAnimationEndCapture", "onAnimationIteration", "onAnimationIterationCapture", "onTransitionEnd", "onTransitionEndCapture"];
var adaptEventHandlers = function adaptEventHandlers2(props, newHandler) {
  if (!props || typeof props === "function" || typeof props === "boolean") {
    return null;
  }
  var inputProps = props;
  if (/* @__PURE__ */ reactExports.isValidElement(props)) {
    inputProps = props.props;
  }
  if (!isObject$9(inputProps)) {
    return null;
  }
  var out = {};
  Object.keys(inputProps).forEach(function(key) {
    if (EventKeys.includes(key)) {
      out[key] = newHandler || function(e3) {
        return inputProps[key](inputProps, e3);
      };
    }
  });
  return out;
};
var getEventHandlerOfChild = function getEventHandlerOfChild2(originalHandler, data2, index2) {
  return function(e3) {
    originalHandler(data2, index2, e3);
    return null;
  };
};
var adaptEventsOfChild = function adaptEventsOfChild2(props, data2, index2) {
  if (!isObject$9(props) || _typeof$F(props) !== "object") {
    return null;
  }
  var out = null;
  Object.keys(props).forEach(function(key) {
    var item = props[key];
    if (EventKeys.includes(key) && typeof item === "function") {
      if (!out)
        out = {};
      out[key] = getEventHandlerOfChild(item, data2, index2);
    }
  });
  return out;
};
var _excluded$t = ["children"], _excluded2$5 = ["children"];
function _objectWithoutProperties$k(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$j(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$j(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _typeof$E(o2) {
  "@babel/helpers - typeof";
  return _typeof$E = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$E(o2);
}
var REACT_BROWSER_EVENT_MAP = {
  click: "onClick",
  mousedown: "onMouseDown",
  mouseup: "onMouseUp",
  mouseover: "onMouseOver",
  mousemove: "onMouseMove",
  mouseout: "onMouseOut",
  mouseenter: "onMouseEnter",
  mouseleave: "onMouseLeave",
  touchcancel: "onTouchCancel",
  touchend: "onTouchEnd",
  touchmove: "onTouchMove",
  touchstart: "onTouchStart"
};
var getDisplayName = function getDisplayName2(Comp) {
  if (typeof Comp === "string") {
    return Comp;
  }
  if (!Comp) {
    return "";
  }
  return Comp.displayName || Comp.name || "Component";
};
var lastChildren = null;
var lastResult = null;
var toArray = function toArray2(children2) {
  if (children2 === lastChildren && Array.isArray(lastResult)) {
    return lastResult;
  }
  var result = [];
  reactExports.Children.forEach(children2, function(child) {
    if (isNil$1(child))
      return;
    if (reactIsExports.isFragment(child)) {
      result = result.concat(toArray2(child.props.children));
    } else {
      result.push(child);
    }
  });
  lastResult = result;
  lastChildren = children2;
  return result;
};
function findAllByType(children2, type2) {
  var result = [];
  var types = [];
  if (Array.isArray(type2)) {
    types = type2.map(function(t2) {
      return getDisplayName(t2);
    });
  } else {
    types = [getDisplayName(type2)];
  }
  toArray(children2).forEach(function(child) {
    var childType = get$5(child, "type.displayName") || get$5(child, "type.name");
    if (types.indexOf(childType) !== -1) {
      result.push(child);
    }
  });
  return result;
}
function findChildByType(children2, type2) {
  var result = findAllByType(children2, type2);
  return result && result[0];
}
var validateWidthHeight = function validateWidthHeight2(el2) {
  if (!el2 || !el2.props) {
    return false;
  }
  var _el$props = el2.props, width = _el$props.width, height = _el$props.height;
  if (!isNumber(width) || width <= 0 || !isNumber(height) || height <= 0) {
    return false;
  }
  return true;
};
var SVG_TAGS = ["a", "altGlyph", "altGlyphDef", "altGlyphItem", "animate", "animateColor", "animateMotion", "animateTransform", "circle", "clipPath", "color-profile", "cursor", "defs", "desc", "ellipse", "feBlend", "feColormatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "filter", "font", "font-face", "font-face-format", "font-face-name", "font-face-url", "foreignObject", "g", "glyph", "glyphRef", "hkern", "image", "line", "lineGradient", "marker", "mask", "metadata", "missing-glyph", "mpath", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "script", "set", "stop", "style", "svg", "switch", "symbol", "text", "textPath", "title", "tref", "tspan", "use", "view", "vkern"];
var isSvgElement = function isSvgElement2(child) {
  return child && child.type && isString$3(child.type) && SVG_TAGS.indexOf(child.type) >= 0;
};
var isDotProps = function isDotProps2(dot) {
  return dot && _typeof$E(dot) === "object" && "cx" in dot && "cy" in dot && "r" in dot;
};
var isValidSpreadableProp = function isValidSpreadableProp2(property2, key, includeEvents, svgElementType) {
  var _FilteredElementKeyMa;
  var matchingElementTypeKeys = (_FilteredElementKeyMa = FilteredElementKeyMap === null || FilteredElementKeyMap === void 0 ? void 0 : FilteredElementKeyMap[svgElementType]) !== null && _FilteredElementKeyMa !== void 0 ? _FilteredElementKeyMa : [];
  return !isFunction$4(property2) && (svgElementType && matchingElementTypeKeys.includes(key) || SVGElementPropKeys.includes(key)) || includeEvents && EventKeys.includes(key);
};
var filterProps = function filterProps2(props, includeEvents, svgElementType) {
  if (!props || typeof props === "function" || typeof props === "boolean") {
    return null;
  }
  var inputProps = props;
  if (/* @__PURE__ */ reactExports.isValidElement(props)) {
    inputProps = props.props;
  }
  if (!isObject$9(inputProps)) {
    return null;
  }
  var out = {};
  Object.keys(inputProps).forEach(function(key) {
    var _inputProps;
    if (isValidSpreadableProp((_inputProps = inputProps) === null || _inputProps === void 0 ? void 0 : _inputProps[key], key, includeEvents, svgElementType)) {
      out[key] = inputProps[key];
    }
  });
  return out;
};
var isChildrenEqual = function isChildrenEqual2(nextChildren, prevChildren) {
  if (nextChildren === prevChildren) {
    return true;
  }
  var count2 = reactExports.Children.count(nextChildren);
  if (count2 !== reactExports.Children.count(prevChildren)) {
    return false;
  }
  if (count2 === 0) {
    return true;
  }
  if (count2 === 1) {
    return isSingleChildEqual(Array.isArray(nextChildren) ? nextChildren[0] : nextChildren, Array.isArray(prevChildren) ? prevChildren[0] : prevChildren);
  }
  for (var i2 = 0; i2 < count2; i2++) {
    var nextChild = nextChildren[i2];
    var prevChild = prevChildren[i2];
    if (Array.isArray(nextChild) || Array.isArray(prevChild)) {
      if (!isChildrenEqual2(nextChild, prevChild)) {
        return false;
      }
    } else if (!isSingleChildEqual(nextChild, prevChild)) {
      return false;
    }
  }
  return true;
};
var isSingleChildEqual = function isSingleChildEqual2(nextChild, prevChild) {
  if (isNil$1(nextChild) && isNil$1(prevChild)) {
    return true;
  }
  if (!isNil$1(nextChild) && !isNil$1(prevChild)) {
    var _ref = nextChild.props || {}, nextChildren = _ref.children, nextProps = _objectWithoutProperties$k(_ref, _excluded$t);
    var _ref2 = prevChild.props || {}, prevChildren = _ref2.children, prevProps = _objectWithoutProperties$k(_ref2, _excluded2$5);
    if (nextChildren && prevChildren) {
      return shallowEqual(nextProps, prevProps) && isChildrenEqual(nextChildren, prevChildren);
    }
    if (!nextChildren && !prevChildren) {
      return shallowEqual(nextProps, prevProps);
    }
    return false;
  }
  return false;
};
var renderByOrder = function renderByOrder2(children2, renderMap) {
  var elements = [];
  var record = {};
  toArray(children2).forEach(function(child, index2) {
    if (isSvgElement(child)) {
      elements.push(child);
    } else if (child) {
      var displayName = getDisplayName(child.type);
      var _ref3 = renderMap[displayName] || {}, handler = _ref3.handler, once = _ref3.once;
      if (handler && (!once || !record[displayName])) {
        var results = handler(child, displayName, index2);
        elements.push(results);
        record[displayName] = true;
      }
    }
  });
  return elements;
};
var getReactEventByType = function getReactEventByType2(e3) {
  var type2 = e3 && e3.type;
  if (type2 && REACT_BROWSER_EVENT_MAP[type2]) {
    return REACT_BROWSER_EVENT_MAP[type2];
  }
  return null;
};
var parseChildIndex = function parseChildIndex2(child, children2) {
  return toArray(children2).indexOf(child);
};
var _excluded$s = ["children", "width", "height", "viewBox", "className", "style", "title", "desc"];
function _extends$w() {
  _extends$w = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$w.apply(this, arguments);
}
function _objectWithoutProperties$j(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$i(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$i(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function Surface(props) {
  var children2 = props.children, width = props.width, height = props.height, viewBox = props.viewBox, className = props.className, style = props.style, title = props.title, desc = props.desc, others = _objectWithoutProperties$j(props, _excluded$s);
  var svgView = viewBox || {
    width,
    height,
    x: 0,
    y: 0
  };
  var layerClass = clsx$1("recharts-surface", className);
  return /* @__PURE__ */ React.createElement("svg", _extends$w({}, filterProps(others, true, "svg"), {
    className: layerClass,
    width,
    height,
    style,
    viewBox: "".concat(svgView.x, " ").concat(svgView.y, " ").concat(svgView.width, " ").concat(svgView.height)
  }), /* @__PURE__ */ React.createElement("title", null, title), /* @__PURE__ */ React.createElement("desc", null, desc), children2);
}
var _excluded$r = ["children", "className"];
function _extends$v() {
  _extends$v = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$v.apply(this, arguments);
}
function _objectWithoutProperties$i(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$h(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$h(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Layer = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  var children2 = props.children, className = props.className, others = _objectWithoutProperties$i(props, _excluded$r);
  var layerClass = clsx$1("recharts-layer", className);
  return /* @__PURE__ */ React.createElement("g", _extends$v({
    className: layerClass
  }, filterProps(others, true), {
    ref
  }), children2);
});
var warn = function warn2(condition, format2) {
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }
};
function baseSlice$1(array2, start2, end) {
  var index2 = -1, length2 = array2.length;
  if (start2 < 0) {
    start2 = -start2 > length2 ? 0 : length2 + start2;
  }
  end = end > length2 ? length2 : end;
  if (end < 0) {
    end += length2;
  }
  length2 = start2 > end ? 0 : end - start2 >>> 0;
  start2 >>>= 0;
  var result = Array(length2);
  while (++index2 < length2) {
    result[index2] = array2[index2 + start2];
  }
  return result;
}
var _baseSlice = baseSlice$1;
var baseSlice = _baseSlice;
function castSlice$1(array2, start2, end) {
  var length2 = array2.length;
  end = end === void 0 ? length2 : end;
  return !start2 && end >= length2 ? array2 : baseSlice(array2, start2, end);
}
var _castSlice = castSlice$1;
var rsAstralRange$1 = "\\ud800-\\udfff", rsComboMarksRange$1 = "\\u0300-\\u036f", reComboHalfMarksRange$1 = "\\ufe20-\\ufe2f", rsComboSymbolsRange$1 = "\\u20d0-\\u20ff", rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1, rsVarRange$1 = "\\ufe0e\\ufe0f";
var rsZWJ$1 = "\\u200d";
var reHasUnicode = RegExp("[" + rsZWJ$1 + rsAstralRange$1 + rsComboRange$1 + rsVarRange$1 + "]");
function hasUnicode$2(string2) {
  return reHasUnicode.test(string2);
}
var _hasUnicode = hasUnicode$2;
function asciiToArray$1(string2) {
  return string2.split("");
}
var _asciiToArray = asciiToArray$1;
var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsVarRange = "\\ufe0e\\ufe0f";
var rsAstral = "[" + rsAstralRange + "]", rsCombo = "[" + rsComboRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsZWJ = "\\u200d";
var reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
function unicodeToArray$1(string2) {
  return string2.match(reUnicode) || [];
}
var _unicodeToArray = unicodeToArray$1;
var asciiToArray = _asciiToArray, hasUnicode$1 = _hasUnicode, unicodeToArray = _unicodeToArray;
function stringToArray$1(string2) {
  return hasUnicode$1(string2) ? unicodeToArray(string2) : asciiToArray(string2);
}
var _stringToArray = stringToArray$1;
var castSlice = _castSlice, hasUnicode = _hasUnicode, stringToArray = _stringToArray, toString$1 = toString_1;
function createCaseFirst$1(methodName) {
  return function(string2) {
    string2 = toString$1(string2);
    var strSymbols = hasUnicode(string2) ? stringToArray(string2) : void 0;
    var chr = strSymbols ? strSymbols[0] : string2.charAt(0);
    var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string2.slice(1);
    return chr[methodName]() + trailing;
  };
}
var _createCaseFirst = createCaseFirst$1;
var createCaseFirst = _createCaseFirst;
var upperFirst = createCaseFirst("toUpperCase");
var upperFirst_1 = upperFirst;
const upperFirst$1 = /* @__PURE__ */ getDefaultExportFromCjs(upperFirst_1);
function constant$7(x2) {
  return function constant2() {
    return x2;
  };
}
const cos$1 = Math.cos;
const sin$1 = Math.sin;
const sqrt$2 = Math.sqrt;
const pi$2 = Math.PI;
const tau$2 = 2 * pi$2;
const pi$1 = Math.PI, tau$1 = 2 * pi$1, epsilon$1 = 1e-6, tauEpsilon = tau$1 - epsilon$1;
function append(strings) {
  this._ += strings[0];
  for (let i2 = 1, n2 = strings.length; i2 < n2; ++i2) {
    this._ += arguments[i2] + strings[i2];
  }
}
function appendRound(digits) {
  let d2 = Math.floor(digits);
  if (!(d2 >= 0))
    throw new Error(`invalid digits: ${digits}`);
  if (d2 > 15)
    return append;
  const k2 = 10 ** d2;
  return function(strings) {
    this._ += strings[0];
    for (let i2 = 1, n2 = strings.length; i2 < n2; ++i2) {
      this._ += Math.round(arguments[i2] * k2) / k2 + strings[i2];
    }
  };
}
class Path {
  constructor(digits) {
    this._x0 = this._y0 = // start of current subpath
    this._x1 = this._y1 = null;
    this._ = "";
    this._append = digits == null ? append : appendRound(digits);
  }
  moveTo(x2, y2) {
    this._append`M${this._x0 = this._x1 = +x2},${this._y0 = this._y1 = +y2}`;
  }
  closePath() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._append`Z`;
    }
  }
  lineTo(x2, y2) {
    this._append`L${this._x1 = +x2},${this._y1 = +y2}`;
  }
  quadraticCurveTo(x12, y12, x2, y2) {
    this._append`Q${+x12},${+y12},${this._x1 = +x2},${this._y1 = +y2}`;
  }
  bezierCurveTo(x12, y12, x2, y2, x3, y3) {
    this._append`C${+x12},${+y12},${+x2},${+y2},${this._x1 = +x3},${this._y1 = +y3}`;
  }
  arcTo(x12, y12, x2, y2, r2) {
    x12 = +x12, y12 = +y12, x2 = +x2, y2 = +y2, r2 = +r2;
    if (r2 < 0)
      throw new Error(`negative radius: ${r2}`);
    let x02 = this._x1, y02 = this._y1, x21 = x2 - x12, y21 = y2 - y12, x01 = x02 - x12, y01 = y02 - y12, l01_2 = x01 * x01 + y01 * y01;
    if (this._x1 === null) {
      this._append`M${this._x1 = x12},${this._y1 = y12}`;
    } else if (!(l01_2 > epsilon$1))
      ;
    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r2) {
      this._append`L${this._x1 = x12},${this._y1 = y12}`;
    } else {
      let x20 = x2 - x02, y20 = y2 - y02, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l2 = r2 * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l2 / l01, t21 = l2 / l21;
      if (Math.abs(t01 - 1) > epsilon$1) {
        this._append`L${x12 + t01 * x01},${y12 + t01 * y01}`;
      }
      this._append`A${r2},${r2},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x12 + t21 * x21},${this._y1 = y12 + t21 * y21}`;
    }
  }
  arc(x2, y2, r2, a0, a1, ccw) {
    x2 = +x2, y2 = +y2, r2 = +r2, ccw = !!ccw;
    if (r2 < 0)
      throw new Error(`negative radius: ${r2}`);
    let dx = r2 * Math.cos(a0), dy = r2 * Math.sin(a0), x02 = x2 + dx, y02 = y2 + dy, cw = 1 ^ ccw, da2 = ccw ? a0 - a1 : a1 - a0;
    if (this._x1 === null) {
      this._append`M${x02},${y02}`;
    } else if (Math.abs(this._x1 - x02) > epsilon$1 || Math.abs(this._y1 - y02) > epsilon$1) {
      this._append`L${x02},${y02}`;
    }
    if (!r2)
      return;
    if (da2 < 0)
      da2 = da2 % tau$1 + tau$1;
    if (da2 > tauEpsilon) {
      this._append`A${r2},${r2},0,1,${cw},${x2 - dx},${y2 - dy}A${r2},${r2},0,1,${cw},${this._x1 = x02},${this._y1 = y02}`;
    } else if (da2 > epsilon$1) {
      this._append`A${r2},${r2},0,${+(da2 >= pi$1)},${cw},${this._x1 = x2 + r2 * Math.cos(a1)},${this._y1 = y2 + r2 * Math.sin(a1)}`;
    }
  }
  rect(x2, y2, w2, h2) {
    this._append`M${this._x0 = this._x1 = +x2},${this._y0 = this._y1 = +y2}h${w2 = +w2}v${+h2}h${-w2}Z`;
  }
  toString() {
    return this._;
  }
}
function withPath(shape) {
  let digits = 3;
  shape.digits = function(_) {
    if (!arguments.length)
      return digits;
    if (_ == null) {
      digits = null;
    } else {
      const d2 = Math.floor(_);
      if (!(d2 >= 0))
        throw new RangeError(`invalid digits: ${_}`);
      digits = d2;
    }
    return shape;
  };
  return () => new Path(digits);
}
function array$1(x2) {
  return typeof x2 === "object" && "length" in x2 ? x2 : Array.from(x2);
}
function Linear(context) {
  this._context = context;
}
Linear.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
      default:
        this._context.lineTo(x2, y2);
        break;
    }
  }
};
function curveLinear(context) {
  return new Linear(context);
}
function x(p2) {
  return p2[0];
}
function y(p2) {
  return p2[1];
}
function shapeLine(x$12, y$12) {
  var defined3 = constant$7(true), context = null, curve = curveLinear, output = null, path = withPath(line);
  x$12 = typeof x$12 === "function" ? x$12 : x$12 === void 0 ? x : constant$7(x$12);
  y$12 = typeof y$12 === "function" ? y$12 : y$12 === void 0 ? y : constant$7(y$12);
  function line(data2) {
    var i2, n2 = (data2 = array$1(data2)).length, d2, defined0 = false, buffer;
    if (context == null)
      output = curve(buffer = path());
    for (i2 = 0; i2 <= n2; ++i2) {
      if (!(i2 < n2 && defined3(d2 = data2[i2], i2, data2)) === defined0) {
        if (defined0 = !defined0)
          output.lineStart();
        else
          output.lineEnd();
      }
      if (defined0)
        output.point(+x$12(d2, i2, data2), +y$12(d2, i2, data2));
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  line.x = function(_) {
    return arguments.length ? (x$12 = typeof _ === "function" ? _ : constant$7(+_), line) : x$12;
  };
  line.y = function(_) {
    return arguments.length ? (y$12 = typeof _ === "function" ? _ : constant$7(+_), line) : y$12;
  };
  line.defined = function(_) {
    return arguments.length ? (defined3 = typeof _ === "function" ? _ : constant$7(!!_), line) : defined3;
  };
  line.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };
  line.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };
  return line;
}
function shapeArea(x02, y02, y12) {
  var x12 = null, defined3 = constant$7(true), context = null, curve = curveLinear, output = null, path = withPath(area2);
  x02 = typeof x02 === "function" ? x02 : x02 === void 0 ? x : constant$7(+x02);
  y02 = typeof y02 === "function" ? y02 : y02 === void 0 ? constant$7(0) : constant$7(+y02);
  y12 = typeof y12 === "function" ? y12 : y12 === void 0 ? y : constant$7(+y12);
  function area2(data2) {
    var i2, j, k2, n2 = (data2 = array$1(data2)).length, d2, defined0 = false, buffer, x0z = new Array(n2), y0z = new Array(n2);
    if (context == null)
      output = curve(buffer = path());
    for (i2 = 0; i2 <= n2; ++i2) {
      if (!(i2 < n2 && defined3(d2 = data2[i2], i2, data2)) === defined0) {
        if (defined0 = !defined0) {
          j = i2;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();
          for (k2 = i2 - 1; k2 >= j; --k2) {
            output.point(x0z[k2], y0z[k2]);
          }
          output.lineEnd();
          output.areaEnd();
        }
      }
      if (defined0) {
        x0z[i2] = +x02(d2, i2, data2), y0z[i2] = +y02(d2, i2, data2);
        output.point(x12 ? +x12(d2, i2, data2) : x0z[i2], y12 ? +y12(d2, i2, data2) : y0z[i2]);
      }
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  function arealine() {
    return shapeLine().defined(defined3).curve(curve).context(context);
  }
  area2.x = function(_) {
    return arguments.length ? (x02 = typeof _ === "function" ? _ : constant$7(+_), x12 = null, area2) : x02;
  };
  area2.x0 = function(_) {
    return arguments.length ? (x02 = typeof _ === "function" ? _ : constant$7(+_), area2) : x02;
  };
  area2.x1 = function(_) {
    return arguments.length ? (x12 = _ == null ? null : typeof _ === "function" ? _ : constant$7(+_), area2) : x12;
  };
  area2.y = function(_) {
    return arguments.length ? (y02 = typeof _ === "function" ? _ : constant$7(+_), y12 = null, area2) : y02;
  };
  area2.y0 = function(_) {
    return arguments.length ? (y02 = typeof _ === "function" ? _ : constant$7(+_), area2) : y02;
  };
  area2.y1 = function(_) {
    return arguments.length ? (y12 = _ == null ? null : typeof _ === "function" ? _ : constant$7(+_), area2) : y12;
  };
  area2.lineX0 = area2.lineY0 = function() {
    return arealine().x(x02).y(y02);
  };
  area2.lineY1 = function() {
    return arealine().x(x02).y(y12);
  };
  area2.lineX1 = function() {
    return arealine().x(x12).y(y02);
  };
  area2.defined = function(_) {
    return arguments.length ? (defined3 = typeof _ === "function" ? _ : constant$7(!!_), area2) : defined3;
  };
  area2.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area2) : curve;
  };
  area2.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area2) : context;
  };
  return area2;
}
class Bump {
  constructor(context, x2) {
    this._context = context;
    this._x = x2;
  }
  areaStart() {
    this._line = 0;
  }
  areaEnd() {
    this._line = NaN;
  }
  lineStart() {
    this._point = 0;
  }
  lineEnd() {
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  }
  point(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0: {
        this._point = 1;
        if (this._line)
          this._context.lineTo(x2, y2);
        else
          this._context.moveTo(x2, y2);
        break;
      }
      case 1:
        this._point = 2;
      default: {
        if (this._x)
          this._context.bezierCurveTo(this._x0 = (this._x0 + x2) / 2, this._y0, this._x0, y2, x2, y2);
        else
          this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y2) / 2, x2, this._y0, x2, y2);
        break;
      }
    }
    this._x0 = x2, this._y0 = y2;
  }
}
function bumpX(context) {
  return new Bump(context, true);
}
function bumpY(context) {
  return new Bump(context, false);
}
const symbolCircle = {
  draw(context, size2) {
    const r2 = sqrt$2(size2 / pi$2);
    context.moveTo(r2, 0);
    context.arc(0, 0, r2, 0, tau$2);
  }
};
const symbolCross = {
  draw(context, size2) {
    const r2 = sqrt$2(size2 / 5) / 2;
    context.moveTo(-3 * r2, -r2);
    context.lineTo(-r2, -r2);
    context.lineTo(-r2, -3 * r2);
    context.lineTo(r2, -3 * r2);
    context.lineTo(r2, -r2);
    context.lineTo(3 * r2, -r2);
    context.lineTo(3 * r2, r2);
    context.lineTo(r2, r2);
    context.lineTo(r2, 3 * r2);
    context.lineTo(-r2, 3 * r2);
    context.lineTo(-r2, r2);
    context.lineTo(-3 * r2, r2);
    context.closePath();
  }
};
const tan30 = sqrt$2(1 / 3);
const tan30_2 = tan30 * 2;
const symbolDiamond = {
  draw(context, size2) {
    const y2 = sqrt$2(size2 / tan30_2);
    const x2 = y2 * tan30;
    context.moveTo(0, -y2);
    context.lineTo(x2, 0);
    context.lineTo(0, y2);
    context.lineTo(-x2, 0);
    context.closePath();
  }
};
const symbolSquare = {
  draw(context, size2) {
    const w2 = sqrt$2(size2);
    const x2 = -w2 / 2;
    context.rect(x2, x2, w2, w2);
  }
};
const ka = 0.8908130915292852;
const kr = sin$1(pi$2 / 10) / sin$1(7 * pi$2 / 10);
const kx = sin$1(tau$2 / 10) * kr;
const ky = -cos$1(tau$2 / 10) * kr;
const symbolStar = {
  draw(context, size2) {
    const r2 = sqrt$2(size2 * ka);
    const x2 = kx * r2;
    const y2 = ky * r2;
    context.moveTo(0, -r2);
    context.lineTo(x2, y2);
    for (let i2 = 1; i2 < 5; ++i2) {
      const a2 = tau$2 * i2 / 5;
      const c2 = cos$1(a2);
      const s2 = sin$1(a2);
      context.lineTo(s2 * r2, -c2 * r2);
      context.lineTo(c2 * x2 - s2 * y2, s2 * x2 + c2 * y2);
    }
    context.closePath();
  }
};
const sqrt3 = sqrt$2(3);
const symbolTriangle = {
  draw(context, size2) {
    const y2 = -sqrt$2(size2 / (sqrt3 * 3));
    context.moveTo(0, y2 * 2);
    context.lineTo(-sqrt3 * y2, -y2);
    context.lineTo(sqrt3 * y2, -y2);
    context.closePath();
  }
};
const c = -0.5;
const s = sqrt$2(3) / 2;
const k = 1 / sqrt$2(12);
const a = (k / 2 + 1) * 3;
const symbolWye = {
  draw(context, size2) {
    const r2 = sqrt$2(size2 / a);
    const x02 = r2 / 2, y02 = r2 * k;
    const x12 = x02, y12 = r2 * k + r2;
    const x2 = -x12, y2 = y12;
    context.moveTo(x02, y02);
    context.lineTo(x12, y12);
    context.lineTo(x2, y2);
    context.lineTo(c * x02 - s * y02, s * x02 + c * y02);
    context.lineTo(c * x12 - s * y12, s * x12 + c * y12);
    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
    context.lineTo(c * x02 + s * y02, c * y02 - s * x02);
    context.lineTo(c * x12 + s * y12, c * y12 - s * x12);
    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
    context.closePath();
  }
};
function Symbol$3(type2, size2) {
  let context = null, path = withPath(symbol);
  type2 = typeof type2 === "function" ? type2 : constant$7(type2 || symbolCircle);
  size2 = typeof size2 === "function" ? size2 : constant$7(size2 === void 0 ? 64 : +size2);
  function symbol() {
    let buffer;
    if (!context)
      context = buffer = path();
    type2.apply(this, arguments).draw(context, +size2.apply(this, arguments));
    if (buffer)
      return context = null, buffer + "" || null;
  }
  symbol.type = function(_) {
    return arguments.length ? (type2 = typeof _ === "function" ? _ : constant$7(_), symbol) : type2;
  };
  symbol.size = function(_) {
    return arguments.length ? (size2 = typeof _ === "function" ? _ : constant$7(+_), symbol) : size2;
  };
  symbol.context = function(_) {
    return arguments.length ? (context = _ == null ? null : _, symbol) : context;
  };
  return symbol;
}
function noop$4() {
}
function point$2(that, x2, y2) {
  that._context.bezierCurveTo(
    (2 * that._x0 + that._x1) / 3,
    (2 * that._y0 + that._y1) / 3,
    (that._x0 + 2 * that._x1) / 3,
    (that._y0 + 2 * that._y1) / 3,
    (that._x0 + 4 * that._x1 + x2) / 6,
    (that._y0 + 4 * that._y1 + y2) / 6
  );
}
function Basis(context) {
  this._context = context;
}
Basis.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3:
        point$2(this, this._x1, this._y1);
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
      default:
        point$2(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
  }
};
function curveBasis(context) {
  return new Basis(context);
}
function BasisClosed(context) {
  this._context = context;
}
BasisClosed.prototype = {
  areaStart: noop$4,
  areaEnd: noop$4,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x2, this._y2);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x2, this._y2);
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        break;
      }
    }
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x2, this._y2 = y2;
        break;
      case 1:
        this._point = 2;
        this._x3 = x2, this._y3 = y2;
        break;
      case 2:
        this._point = 3;
        this._x4 = x2, this._y4 = y2;
        this._context.moveTo((this._x0 + 4 * this._x1 + x2) / 6, (this._y0 + 4 * this._y1 + y2) / 6);
        break;
      default:
        point$2(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
  }
};
function curveBasisClosed(context) {
  return new BasisClosed(context);
}
function BasisOpen(context) {
  this._context = context;
}
BasisOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        var x02 = (this._x0 + 4 * this._x1 + x2) / 6, y02 = (this._y0 + 4 * this._y1 + y2) / 6;
        this._line ? this._context.lineTo(x02, y02) : this._context.moveTo(x02, y02);
        break;
      case 3:
        this._point = 4;
      default:
        point$2(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
  }
};
function curveBasisOpen(context) {
  return new BasisOpen(context);
}
function LinearClosed(context) {
  this._context = context;
}
LinearClosed.prototype = {
  areaStart: noop$4,
  areaEnd: noop$4,
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._point)
      this._context.closePath();
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    if (this._point)
      this._context.lineTo(x2, y2);
    else
      this._point = 1, this._context.moveTo(x2, y2);
  }
};
function curveLinearClosed(context) {
  return new LinearClosed(context);
}
function sign$1(x2) {
  return x2 < 0 ? -1 : 1;
}
function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0, h1 = x2 - that._x1, s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0), s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0), p2 = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p2)) || 0;
}
function slope2(that, t2) {
  var h2 = that._x1 - that._x0;
  return h2 ? (3 * (that._y1 - that._y0) / h2 - t2) / 2 : t2;
}
function point$1(that, t02, t12) {
  var x02 = that._x0, y02 = that._y0, x12 = that._x1, y12 = that._y1, dx = (x12 - x02) / 3;
  that._context.bezierCurveTo(x02 + dx, y02 + dx * t02, x12 - dx, y12 - dx * t12, x12, y12);
}
function MonotoneX(context) {
  this._context = context;
}
MonotoneX.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
      case 3:
        point$1(this, this._t0, slope2(this, this._t0));
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    var t12 = NaN;
    x2 = +x2, y2 = +y2;
    if (x2 === this._x1 && y2 === this._y1)
      return;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        point$1(this, slope2(this, t12 = slope3(this, x2, y2)), t12);
        break;
      default:
        point$1(this, this._t0, t12 = slope3(this, x2, y2));
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
    this._t0 = t12;
  }
};
function MonotoneY(context) {
  this._context = new ReflectContext(context);
}
(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x2, y2) {
  MonotoneX.prototype.point.call(this, y2, x2);
};
function ReflectContext(context) {
  this._context = context;
}
ReflectContext.prototype = {
  moveTo: function(x2, y2) {
    this._context.moveTo(y2, x2);
  },
  closePath: function() {
    this._context.closePath();
  },
  lineTo: function(x2, y2) {
    this._context.lineTo(y2, x2);
  },
  bezierCurveTo: function(x12, y12, x2, y2, x3, y3) {
    this._context.bezierCurveTo(y12, x12, y2, x2, y3, x3);
  }
};
function monotoneX(context) {
  return new MonotoneX(context);
}
function monotoneY(context) {
  return new MonotoneY(context);
}
function Natural(context) {
  this._context = context;
}
Natural.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function() {
    var x2 = this._x, y2 = this._y, n2 = x2.length;
    if (n2) {
      this._line ? this._context.lineTo(x2[0], y2[0]) : this._context.moveTo(x2[0], y2[0]);
      if (n2 === 2) {
        this._context.lineTo(x2[1], y2[1]);
      } else {
        var px = controlPoints(x2), py = controlPoints(y2);
        for (var i0 = 0, i1 = 1; i1 < n2; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x2[i1], y2[i1]);
        }
      }
    }
    if (this._line || this._line !== 0 && n2 === 1)
      this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function(x2, y2) {
    this._x.push(+x2);
    this._y.push(+y2);
  }
};
function controlPoints(x2) {
  var i2, n2 = x2.length - 1, m2, a2 = new Array(n2), b2 = new Array(n2), r2 = new Array(n2);
  a2[0] = 0, b2[0] = 2, r2[0] = x2[0] + 2 * x2[1];
  for (i2 = 1; i2 < n2 - 1; ++i2)
    a2[i2] = 1, b2[i2] = 4, r2[i2] = 4 * x2[i2] + 2 * x2[i2 + 1];
  a2[n2 - 1] = 2, b2[n2 - 1] = 7, r2[n2 - 1] = 8 * x2[n2 - 1] + x2[n2];
  for (i2 = 1; i2 < n2; ++i2)
    m2 = a2[i2] / b2[i2 - 1], b2[i2] -= m2, r2[i2] -= m2 * r2[i2 - 1];
  a2[n2 - 1] = r2[n2 - 1] / b2[n2 - 1];
  for (i2 = n2 - 2; i2 >= 0; --i2)
    a2[i2] = (r2[i2] - a2[i2 + 1]) / b2[i2];
  b2[n2 - 1] = (x2[n2] + a2[n2 - 1]) / 2;
  for (i2 = 0; i2 < n2 - 1; ++i2)
    b2[i2] = 2 * x2[i2 + 1] - a2[i2 + 1];
  return [a2, b2];
}
function curveNatural(context) {
  return new Natural(context);
}
function Step(context, t2) {
  this._context = context;
  this._t = t2;
}
Step.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (0 < this._t && this._t < 1 && this._point === 2)
      this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    if (this._line >= 0)
      this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
      default: {
        if (this._t <= 0) {
          this._context.lineTo(this._x, y2);
          this._context.lineTo(x2, y2);
        } else {
          var x12 = this._x * (1 - this._t) + x2 * this._t;
          this._context.lineTo(x12, this._y);
          this._context.lineTo(x12, y2);
        }
        break;
      }
    }
    this._x = x2, this._y = y2;
  }
};
function curveStep(context) {
  return new Step(context, 0.5);
}
function stepBefore(context) {
  return new Step(context, 0);
}
function stepAfter(context) {
  return new Step(context, 1);
}
function stackOffsetNone(series, order) {
  if (!((n2 = series.length) > 1))
    return;
  for (var i2 = 1, j, s0, s1 = series[order[0]], n2, m2 = s1.length; i2 < n2; ++i2) {
    s0 = s1, s1 = series[order[i2]];
    for (j = 0; j < m2; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
}
function stackOrderNone(series) {
  var n2 = series.length, o2 = new Array(n2);
  while (--n2 >= 0)
    o2[n2] = n2;
  return o2;
}
function stackValue(d2, key) {
  return d2[key];
}
function stackSeries(key) {
  const series = [];
  series.key = key;
  return series;
}
function shapeStack() {
  var keys2 = constant$7([]), order = stackOrderNone, offset2 = stackOffsetNone, value = stackValue;
  function stack(data2) {
    var sz = Array.from(keys2.apply(this, arguments), stackSeries), i2, n2 = sz.length, j = -1, oz;
    for (const d2 of data2) {
      for (i2 = 0, ++j; i2 < n2; ++i2) {
        (sz[i2][j] = [0, +value(d2, sz[i2].key, j, data2)]).data = d2;
      }
    }
    for (i2 = 0, oz = array$1(order(sz)); i2 < n2; ++i2) {
      sz[oz[i2]].index = i2;
    }
    offset2(sz, oz);
    return sz;
  }
  stack.keys = function(_) {
    return arguments.length ? (keys2 = typeof _ === "function" ? _ : constant$7(Array.from(_)), stack) : keys2;
  };
  stack.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : constant$7(+_), stack) : value;
  };
  stack.order = function(_) {
    return arguments.length ? (order = _ == null ? stackOrderNone : typeof _ === "function" ? _ : constant$7(Array.from(_)), stack) : order;
  };
  stack.offset = function(_) {
    return arguments.length ? (offset2 = _ == null ? stackOffsetNone : _, stack) : offset2;
  };
  return stack;
}
function stackOffsetExpand(series, order) {
  if (!((n2 = series.length) > 0))
    return;
  for (var i2, n2, j = 0, m2 = series[0].length, y2; j < m2; ++j) {
    for (y2 = i2 = 0; i2 < n2; ++i2)
      y2 += series[i2][j][1] || 0;
    if (y2)
      for (i2 = 0; i2 < n2; ++i2)
        series[i2][j][1] /= y2;
  }
  stackOffsetNone(series, order);
}
function stackOffsetSilhouette(series, order) {
  if (!((n2 = series.length) > 0))
    return;
  for (var j = 0, s0 = series[order[0]], n2, m2 = s0.length; j < m2; ++j) {
    for (var i2 = 0, y2 = 0; i2 < n2; ++i2)
      y2 += series[i2][j][1] || 0;
    s0[j][1] += s0[j][0] = -y2 / 2;
  }
  stackOffsetNone(series, order);
}
function stackOffsetWiggle(series, order) {
  if (!((n2 = series.length) > 0) || !((m2 = (s0 = series[order[0]]).length) > 0))
    return;
  for (var y2 = 0, j = 1, s0, m2, n2; j < m2; ++j) {
    for (var i2 = 0, s1 = 0, s2 = 0; i2 < n2; ++i2) {
      var si2 = series[order[i2]], sij0 = si2[j][1] || 0, sij1 = si2[j - 1][1] || 0, s3 = (sij0 - sij1) / 2;
      for (var k2 = 0; k2 < i2; ++k2) {
        var sk2 = series[order[k2]], skj0 = sk2[j][1] || 0, skj1 = sk2[j - 1][1] || 0;
        s3 += skj0 - skj1;
      }
      s1 += sij0, s2 += s3 * sij0;
    }
    s0[j - 1][1] += s0[j - 1][0] = y2;
    if (s1)
      y2 -= s2 / s1;
  }
  s0[j - 1][1] += s0[j - 1][0] = y2;
  stackOffsetNone(series, order);
}
function _typeof$D(o2) {
  "@babel/helpers - typeof";
  return _typeof$D = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$D(o2);
}
var _excluded$q = ["type", "size", "sizeType"];
function _extends$u() {
  _extends$u = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$u.apply(this, arguments);
}
function ownKeys$z(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$y(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$z(Object(t2), true).forEach(function(r3) {
      _defineProperty$C(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$z(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$C(obj, key, value) {
  key = _toPropertyKey$B(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$B(t2) {
  var i2 = _toPrimitive$B(t2, "string");
  return "symbol" == _typeof$D(i2) ? i2 : String(i2);
}
function _toPrimitive$B(t2, r2) {
  if ("object" != _typeof$D(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$D(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function _objectWithoutProperties$h(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$g(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$g(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var symbolFactories = {
  symbolCircle,
  symbolCross,
  symbolDiamond,
  symbolSquare,
  symbolStar,
  symbolTriangle,
  symbolWye
};
var RADIAN$1 = Math.PI / 180;
var getSymbolFactory = function getSymbolFactory2(type2) {
  var name = "symbol".concat(upperFirst$1(type2));
  return symbolFactories[name] || symbolCircle;
};
var calculateAreaSize = function calculateAreaSize2(size2, sizeType, type2) {
  if (sizeType === "area") {
    return size2;
  }
  switch (type2) {
    case "cross":
      return 5 * size2 * size2 / 9;
    case "diamond":
      return 0.5 * size2 * size2 / Math.sqrt(3);
    case "square":
      return size2 * size2;
    case "star": {
      var angle2 = 18 * RADIAN$1;
      return 1.25 * size2 * size2 * (Math.tan(angle2) - Math.tan(angle2 * 2) * Math.pow(Math.tan(angle2), 2));
    }
    case "triangle":
      return Math.sqrt(3) * size2 * size2 / 4;
    case "wye":
      return (21 - 10 * Math.sqrt(3)) * size2 * size2 / 8;
    default:
      return Math.PI * size2 * size2 / 4;
  }
};
var registerSymbol = function registerSymbol2(key, factory) {
  symbolFactories["symbol".concat(upperFirst$1(key))] = factory;
};
var Symbols = function Symbols2(_ref) {
  var _ref$type = _ref.type, type2 = _ref$type === void 0 ? "circle" : _ref$type, _ref$size = _ref.size, size2 = _ref$size === void 0 ? 64 : _ref$size, _ref$sizeType = _ref.sizeType, sizeType = _ref$sizeType === void 0 ? "area" : _ref$sizeType, rest = _objectWithoutProperties$h(_ref, _excluded$q);
  var props = _objectSpread$y(_objectSpread$y({}, rest), {}, {
    type: type2,
    size: size2,
    sizeType
  });
  var getPath4 = function getPath5() {
    var symbolFactory = getSymbolFactory(type2);
    var symbol = Symbol$3().type(symbolFactory).size(calculateAreaSize(size2, sizeType, type2));
    return symbol();
  };
  var className = props.className, cx2 = props.cx, cy = props.cy;
  var filteredProps = filterProps(props, true);
  if (cx2 === +cx2 && cy === +cy && size2 === +size2) {
    return /* @__PURE__ */ React.createElement("path", _extends$u({}, filteredProps, {
      className: clsx$1("recharts-symbols", className),
      transform: "translate(".concat(cx2, ", ").concat(cy, ")"),
      d: getPath4()
    }));
  }
  return null;
};
Symbols.registerSymbol = registerSymbol;
function _typeof$C(o2) {
  "@babel/helpers - typeof";
  return _typeof$C = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$C(o2);
}
function _extends$t() {
  _extends$t = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$t.apply(this, arguments);
}
function ownKeys$y(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$x(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$y(Object(t2), true).forEach(function(r3) {
      _defineProperty$B(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$y(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _classCallCheck$c(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$c(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey$A(descriptor.key), descriptor);
  }
}
function _createClass$c(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$c(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$c(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _callSuper$8(t2, o2, e3) {
  return o2 = _getPrototypeOf$9(o2), _possibleConstructorReturn$9(t2, _isNativeReflectConstruct$9() ? Reflect.construct(o2, e3 || [], _getPrototypeOf$9(t2).constructor) : o2.apply(t2, e3));
}
function _possibleConstructorReturn$9(self2, call) {
  if (call && (_typeof$C(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized$9(self2);
}
function _assertThisInitialized$9(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$9() {
  try {
    var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t3) {
  }
  return (_isNativeReflectConstruct$9 = function _isNativeReflectConstruct2() {
    return !!t2;
  })();
}
function _getPrototypeOf$9(o2) {
  _getPrototypeOf$9 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o3) {
    return o3.__proto__ || Object.getPrototypeOf(o3);
  };
  return _getPrototypeOf$9(o2);
}
function _inherits$9(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf$9(subClass, superClass);
}
function _setPrototypeOf$9(o2, p2) {
  _setPrototypeOf$9 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o3, p3) {
    o3.__proto__ = p3;
    return o3;
  };
  return _setPrototypeOf$9(o2, p2);
}
function _defineProperty$B(obj, key, value) {
  key = _toPropertyKey$A(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$A(t2) {
  var i2 = _toPrimitive$A(t2, "string");
  return "symbol" == _typeof$C(i2) ? i2 : String(i2);
}
function _toPrimitive$A(t2, r2) {
  if ("object" != _typeof$C(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$C(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var SIZE = 32;
var DefaultLegendContent = /* @__PURE__ */ function(_PureComponent) {
  _inherits$9(DefaultLegendContent2, _PureComponent);
  function DefaultLegendContent2() {
    _classCallCheck$c(this, DefaultLegendContent2);
    return _callSuper$8(this, DefaultLegendContent2, arguments);
  }
  _createClass$c(DefaultLegendContent2, [{
    key: "renderIcon",
    value: (
      /**
       * Render the path of icon
       * @param {Object} data Data of each legend item
       * @return {String} Path element
       */
      function renderIcon(data2) {
        var inactiveColor = this.props.inactiveColor;
        var halfSize = SIZE / 2;
        var sixthSize = SIZE / 6;
        var thirdSize = SIZE / 3;
        var color2 = data2.inactive ? inactiveColor : data2.color;
        if (data2.type === "plainline") {
          return /* @__PURE__ */ React.createElement("line", {
            strokeWidth: 4,
            fill: "none",
            stroke: color2,
            strokeDasharray: data2.payload.strokeDasharray,
            x1: 0,
            y1: halfSize,
            x2: SIZE,
            y2: halfSize,
            className: "recharts-legend-icon"
          });
        }
        if (data2.type === "line") {
          return /* @__PURE__ */ React.createElement("path", {
            strokeWidth: 4,
            fill: "none",
            stroke: color2,
            d: "M0,".concat(halfSize, "h").concat(thirdSize, "\n            A").concat(sixthSize, ",").concat(sixthSize, ",0,1,1,").concat(2 * thirdSize, ",").concat(halfSize, "\n            H").concat(SIZE, "M").concat(2 * thirdSize, ",").concat(halfSize, "\n            A").concat(sixthSize, ",").concat(sixthSize, ",0,1,1,").concat(thirdSize, ",").concat(halfSize),
            className: "recharts-legend-icon"
          });
        }
        if (data2.type === "rect") {
          return /* @__PURE__ */ React.createElement("path", {
            stroke: "none",
            fill: color2,
            d: "M0,".concat(SIZE / 8, "h").concat(SIZE, "v").concat(SIZE * 3 / 4, "h").concat(-SIZE, "z"),
            className: "recharts-legend-icon"
          });
        }
        if (/* @__PURE__ */ React.isValidElement(data2.legendIcon)) {
          var iconProps = _objectSpread$x({}, data2);
          delete iconProps.legendIcon;
          return /* @__PURE__ */ React.cloneElement(data2.legendIcon, iconProps);
        }
        return /* @__PURE__ */ React.createElement(Symbols, {
          fill: color2,
          cx: halfSize,
          cy: halfSize,
          size: SIZE,
          sizeType: "diameter",
          type: data2.type
        });
      }
    )
    /**
     * Draw items of legend
     * @return {ReactElement} Items
     */
  }, {
    key: "renderItems",
    value: function renderItems() {
      var _this = this;
      var _this$props = this.props, payload = _this$props.payload, iconSize = _this$props.iconSize, layout = _this$props.layout, formatter = _this$props.formatter, inactiveColor = _this$props.inactiveColor;
      var viewBox = {
        x: 0,
        y: 0,
        width: SIZE,
        height: SIZE
      };
      var itemStyle = {
        display: layout === "horizontal" ? "inline-block" : "block",
        marginRight: 10
      };
      var svgStyle = {
        display: "inline-block",
        verticalAlign: "middle",
        marginRight: 4
      };
      return payload.map(function(entry, i2) {
        var finalFormatter = entry.formatter || formatter;
        var className = clsx$1(_defineProperty$B(_defineProperty$B({
          "recharts-legend-item": true
        }, "legend-item-".concat(i2), true), "inactive", entry.inactive));
        if (entry.type === "none") {
          return null;
        }
        var entryValue = !isFunction$4(entry.value) ? entry.value : null;
        warn(
          !isFunction$4(entry.value),
          `The name property is also required when using a function for the dataKey of a chart's cartesian components. Ex: <Bar name="Name of my Data"/>`
          // eslint-disable-line max-len
        );
        var color2 = entry.inactive ? inactiveColor : entry.color;
        return /* @__PURE__ */ React.createElement("li", _extends$t({
          className,
          style: itemStyle,
          key: "legend-item-".concat(i2)
        }, adaptEventsOfChild(_this.props, entry, i2)), /* @__PURE__ */ React.createElement(Surface, {
          width: iconSize,
          height: iconSize,
          viewBox,
          style: svgStyle
        }, _this.renderIcon(entry)), /* @__PURE__ */ React.createElement("span", {
          className: "recharts-legend-item-text",
          style: {
            color: color2
          }
        }, finalFormatter ? finalFormatter(entryValue, entry, i2) : entryValue));
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props, payload = _this$props2.payload, layout = _this$props2.layout, align = _this$props2.align;
      if (!payload || !payload.length) {
        return null;
      }
      var finalStyle = {
        padding: 0,
        margin: 0,
        textAlign: layout === "horizontal" ? align : "left"
      };
      return /* @__PURE__ */ React.createElement("ul", {
        className: "recharts-default-legend",
        style: finalStyle
      }, this.renderItems());
    }
  }]);
  return DefaultLegendContent2;
}(reactExports.PureComponent);
_defineProperty$B(DefaultLegendContent, "displayName", "Legend");
_defineProperty$B(DefaultLegendContent, "defaultProps", {
  iconSize: 14,
  layout: "horizontal",
  align: "center",
  verticalAlign: "middle",
  inactiveColor: "#ccc"
});
var ListCache$2 = _ListCache;
function stackClear$1() {
  this.__data__ = new ListCache$2();
  this.size = 0;
}
var _stackClear = stackClear$1;
function stackDelete$1(key) {
  var data2 = this.__data__, result = data2["delete"](key);
  this.size = data2.size;
  return result;
}
var _stackDelete = stackDelete$1;
function stackGet$1(key) {
  return this.__data__.get(key);
}
var _stackGet = stackGet$1;
function stackHas$1(key) {
  return this.__data__.has(key);
}
var _stackHas = stackHas$1;
var ListCache$1 = _ListCache, Map$2 = _Map, MapCache$1 = _MapCache;
var LARGE_ARRAY_SIZE$1 = 200;
function stackSet$1(key, value) {
  var data2 = this.__data__;
  if (data2 instanceof ListCache$1) {
    var pairs = data2.__data__;
    if (!Map$2 || pairs.length < LARGE_ARRAY_SIZE$1 - 1) {
      pairs.push([key, value]);
      this.size = ++data2.size;
      return this;
    }
    data2 = this.__data__ = new MapCache$1(pairs);
  }
  data2.set(key, value);
  this.size = data2.size;
  return this;
}
var _stackSet = stackSet$1;
var ListCache = _ListCache, stackClear = _stackClear, stackDelete = _stackDelete, stackGet = _stackGet, stackHas = _stackHas, stackSet = _stackSet;
function Stack$2(entries) {
  var data2 = this.__data__ = new ListCache(entries);
  this.size = data2.size;
}
Stack$2.prototype.clear = stackClear;
Stack$2.prototype["delete"] = stackDelete;
Stack$2.prototype.get = stackGet;
Stack$2.prototype.has = stackHas;
Stack$2.prototype.set = stackSet;
var _Stack = Stack$2;
var HASH_UNDEFINED = "__lodash_hash_undefined__";
function setCacheAdd$1(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}
var _setCacheAdd = setCacheAdd$1;
function setCacheHas$1(value) {
  return this.__data__.has(value);
}
var _setCacheHas = setCacheHas$1;
var MapCache = _MapCache, setCacheAdd = _setCacheAdd, setCacheHas = _setCacheHas;
function SetCache$2(values) {
  var index2 = -1, length2 = values == null ? 0 : values.length;
  this.__data__ = new MapCache();
  while (++index2 < length2) {
    this.add(values[index2]);
  }
}
SetCache$2.prototype.add = SetCache$2.prototype.push = setCacheAdd;
SetCache$2.prototype.has = setCacheHas;
var _SetCache = SetCache$2;
function arraySome$2(array2, predicate) {
  var index2 = -1, length2 = array2 == null ? 0 : array2.length;
  while (++index2 < length2) {
    if (predicate(array2[index2], index2, array2)) {
      return true;
    }
  }
  return false;
}
var _arraySome = arraySome$2;
function cacheHas$2(cache, key) {
  return cache.has(key);
}
var _cacheHas = cacheHas$2;
var SetCache$1 = _SetCache, arraySome$1 = _arraySome, cacheHas$1 = _cacheHas;
var COMPARE_PARTIAL_FLAG$5 = 1, COMPARE_UNORDERED_FLAG$3 = 2;
function equalArrays$2(array2, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$5, arrLength = array2.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array2);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array2;
  }
  var index2 = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG$3 ? new SetCache$1() : void 0;
  stack.set(array2, other);
  stack.set(other, array2);
  while (++index2 < arrLength) {
    var arrValue = array2[index2], othValue = other[index2];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index2, other, array2, stack) : customizer(arrValue, othValue, index2, array2, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    if (seen) {
      if (!arraySome$1(other, function(othValue2, othIndex) {
        if (!cacheHas$1(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }
  stack["delete"](array2);
  stack["delete"](other);
  return result;
}
var _equalArrays = equalArrays$2;
var root$7 = _root;
var Uint8Array$1 = root$7.Uint8Array;
var _Uint8Array = Uint8Array$1;
function mapToArray$1(map2) {
  var index2 = -1, result = Array(map2.size);
  map2.forEach(function(value, key) {
    result[++index2] = [key, value];
  });
  return result;
}
var _mapToArray = mapToArray$1;
function setToArray$3(set3) {
  var index2 = -1, result = Array(set3.size);
  set3.forEach(function(value) {
    result[++index2] = value;
  });
  return result;
}
var _setToArray = setToArray$3;
var Symbol$2 = _Symbol, Uint8Array = _Uint8Array, eq$1 = eq_1, equalArrays$1 = _equalArrays, mapToArray = _mapToArray, setToArray$2 = _setToArray;
var COMPARE_PARTIAL_FLAG$4 = 1, COMPARE_UNORDERED_FLAG$2 = 2;
var boolTag$2 = "[object Boolean]", dateTag$1 = "[object Date]", errorTag$1 = "[object Error]", mapTag$2 = "[object Map]", numberTag$1 = "[object Number]", regexpTag$1 = "[object RegExp]", setTag$2 = "[object Set]", stringTag$1 = "[object String]", symbolTag = "[object Symbol]";
var arrayBufferTag$1 = "[object ArrayBuffer]", dataViewTag$2 = "[object DataView]";
var symbolProto = Symbol$2 ? Symbol$2.prototype : void 0, symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
function equalByTag$1(object2, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag$2:
      if (object2.byteLength != other.byteLength || object2.byteOffset != other.byteOffset) {
        return false;
      }
      object2 = object2.buffer;
      other = other.buffer;
    case arrayBufferTag$1:
      if (object2.byteLength != other.byteLength || !equalFunc(new Uint8Array(object2), new Uint8Array(other))) {
        return false;
      }
      return true;
    case boolTag$2:
    case dateTag$1:
    case numberTag$1:
      return eq$1(+object2, +other);
    case errorTag$1:
      return object2.name == other.name && object2.message == other.message;
    case regexpTag$1:
    case stringTag$1:
      return object2 == other + "";
    case mapTag$2:
      var convert = mapToArray;
    case setTag$2:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$4;
      convert || (convert = setToArray$2);
      if (object2.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object2);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG$2;
      stack.set(object2, other);
      var result = equalArrays$1(convert(object2), convert(other), bitmask, customizer, equalFunc, stack);
      stack["delete"](object2);
      return result;
    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object2) == symbolValueOf.call(other);
      }
  }
  return false;
}
var _equalByTag = equalByTag$1;
function arrayPush$2(array2, values) {
  var index2 = -1, length2 = values.length, offset2 = array2.length;
  while (++index2 < length2) {
    array2[offset2 + index2] = values[index2];
  }
  return array2;
}
var _arrayPush = arrayPush$2;
var arrayPush$1 = _arrayPush, isArray$a = isArray_1;
function baseGetAllKeys$1(object2, keysFunc, symbolsFunc) {
  var result = keysFunc(object2);
  return isArray$a(object2) ? result : arrayPush$1(result, symbolsFunc(object2));
}
var _baseGetAllKeys = baseGetAllKeys$1;
function arrayFilter$1(array2, predicate) {
  var index2 = -1, length2 = array2 == null ? 0 : array2.length, resIndex = 0, result = [];
  while (++index2 < length2) {
    var value = array2[index2];
    if (predicate(value, index2, array2)) {
      result[resIndex++] = value;
    }
  }
  return result;
}
var _arrayFilter = arrayFilter$1;
function stubArray$1() {
  return [];
}
var stubArray_1 = stubArray$1;
var arrayFilter = _arrayFilter, stubArray = stubArray_1;
var objectProto$7 = Object.prototype;
var propertyIsEnumerable$1 = objectProto$7.propertyIsEnumerable;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbols$1 = !nativeGetSymbols ? stubArray : function(object2) {
  if (object2 == null) {
    return [];
  }
  object2 = Object(object2);
  return arrayFilter(nativeGetSymbols(object2), function(symbol) {
    return propertyIsEnumerable$1.call(object2, symbol);
  });
};
var _getSymbols = getSymbols$1;
function baseTimes$1(n2, iteratee) {
  var index2 = -1, result = Array(n2);
  while (++index2 < n2) {
    result[index2] = iteratee(index2);
  }
  return result;
}
var _baseTimes = baseTimes$1;
var baseGetTag$4 = _baseGetTag, isObjectLike$5 = isObjectLike_1;
var argsTag$2 = "[object Arguments]";
function baseIsArguments$1(value) {
  return isObjectLike$5(value) && baseGetTag$4(value) == argsTag$2;
}
var _baseIsArguments = baseIsArguments$1;
var baseIsArguments = _baseIsArguments, isObjectLike$4 = isObjectLike_1;
var objectProto$6 = Object.prototype;
var hasOwnProperty$6 = objectProto$6.hasOwnProperty;
var propertyIsEnumerable = objectProto$6.propertyIsEnumerable;
var isArguments$3 = baseIsArguments(/* @__PURE__ */ function() {
  return arguments;
}()) ? baseIsArguments : function(value) {
  return isObjectLike$4(value) && hasOwnProperty$6.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
};
var isArguments_1 = isArguments$3;
var isBuffer$2 = { exports: {} };
function stubFalse() {
  return false;
}
var stubFalse_1 = stubFalse;
isBuffer$2.exports;
(function(module, exports) {
  var root2 = _root, stubFalse2 = stubFalse_1;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer = moduleExports ? root2.Buffer : void 0;
  var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
  var isBuffer2 = nativeIsBuffer || stubFalse2;
  module.exports = isBuffer2;
})(isBuffer$2, isBuffer$2.exports);
var isBufferExports = isBuffer$2.exports;
var MAX_SAFE_INTEGER$2 = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex$3(value, length2) {
  var type2 = typeof value;
  length2 = length2 == null ? MAX_SAFE_INTEGER$2 : length2;
  return !!length2 && (type2 == "number" || type2 != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length2);
}
var _isIndex = isIndex$3;
var MAX_SAFE_INTEGER$1 = 9007199254740991;
function isLength$3(value) {
  return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER$1;
}
var isLength_1 = isLength$3;
var baseGetTag$3 = _baseGetTag, isLength$2 = isLength_1, isObjectLike$3 = isObjectLike_1;
var argsTag$1 = "[object Arguments]", arrayTag$1 = "[object Array]", boolTag$1 = "[object Boolean]", dateTag = "[object Date]", errorTag = "[object Error]", funcTag = "[object Function]", mapTag$1 = "[object Map]", numberTag = "[object Number]", objectTag$3 = "[object Object]", regexpTag = "[object RegExp]", setTag$1 = "[object Set]", stringTag = "[object String]", weakMapTag$1 = "[object WeakMap]";
var arrayBufferTag = "[object ArrayBuffer]", dataViewTag$1 = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag$1] = typedArrayTags[arrayTag$1] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag$1] = typedArrayTags[dataViewTag$1] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag$1] = typedArrayTags[numberTag] = typedArrayTags[objectTag$3] = typedArrayTags[regexpTag] = typedArrayTags[setTag$1] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag$1] = false;
function baseIsTypedArray$1(value) {
  return isObjectLike$3(value) && isLength$2(value.length) && !!typedArrayTags[baseGetTag$3(value)];
}
var _baseIsTypedArray = baseIsTypedArray$1;
function baseUnary$2(func) {
  return function(value) {
    return func(value);
  };
}
var _baseUnary = baseUnary$2;
var _nodeUtil = { exports: {} };
_nodeUtil.exports;
(function(module, exports) {
  var freeGlobal2 = _freeGlobal;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var freeProcess = moduleExports && freeGlobal2.process;
  var nodeUtil2 = function() {
    try {
      var types = freeModule && freeModule.require && freeModule.require("util").types;
      if (types) {
        return types;
      }
      return freeProcess && freeProcess.binding && freeProcess.binding("util");
    } catch (e3) {
    }
  }();
  module.exports = nodeUtil2;
})(_nodeUtil, _nodeUtil.exports);
var _nodeUtilExports = _nodeUtil.exports;
var baseIsTypedArray = _baseIsTypedArray, baseUnary$1 = _baseUnary, nodeUtil = _nodeUtilExports;
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
var isTypedArray$3 = nodeIsTypedArray ? baseUnary$1(nodeIsTypedArray) : baseIsTypedArray;
var isTypedArray_1 = isTypedArray$3;
var baseTimes = _baseTimes, isArguments$2 = isArguments_1, isArray$9 = isArray_1, isBuffer$1 = isBufferExports, isIndex$2 = _isIndex, isTypedArray$2 = isTypedArray_1;
var objectProto$5 = Object.prototype;
var hasOwnProperty$5 = objectProto$5.hasOwnProperty;
function arrayLikeKeys$1(value, inherited) {
  var isArr = isArray$9(value), isArg = !isArr && isArguments$2(value), isBuff = !isArr && !isArg && isBuffer$1(value), isType = !isArr && !isArg && !isBuff && isTypedArray$2(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length2 = result.length;
  for (var key in value) {
    if ((inherited || hasOwnProperty$5.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
    (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
    isIndex$2(key, length2)))) {
      result.push(key);
    }
  }
  return result;
}
var _arrayLikeKeys = arrayLikeKeys$1;
var objectProto$4 = Object.prototype;
function isPrototype$1(value) {
  var Ctor = value && value.constructor, proto2 = typeof Ctor == "function" && Ctor.prototype || objectProto$4;
  return value === proto2;
}
var _isPrototype = isPrototype$1;
function overArg$2(func, transform2) {
  return function(arg) {
    return func(transform2(arg));
  };
}
var _overArg = overArg$2;
var overArg$1 = _overArg;
var nativeKeys$1 = overArg$1(Object.keys, Object);
var _nativeKeys = nativeKeys$1;
var isPrototype = _isPrototype, nativeKeys = _nativeKeys;
var objectProto$3 = Object.prototype;
var hasOwnProperty$4 = objectProto$3.hasOwnProperty;
function baseKeys$1(object2) {
  if (!isPrototype(object2)) {
    return nativeKeys(object2);
  }
  var result = [];
  for (var key in Object(object2)) {
    if (hasOwnProperty$4.call(object2, key) && key != "constructor") {
      result.push(key);
    }
  }
  return result;
}
var _baseKeys = baseKeys$1;
var isFunction$1 = isFunction_1, isLength$1 = isLength_1;
function isArrayLike$5(value) {
  return value != null && isLength$1(value.length) && !isFunction$1(value);
}
var isArrayLike_1 = isArrayLike$5;
var arrayLikeKeys = _arrayLikeKeys, baseKeys = _baseKeys, isArrayLike$4 = isArrayLike_1;
function keys$5(object2) {
  return isArrayLike$4(object2) ? arrayLikeKeys(object2) : baseKeys(object2);
}
var keys_1 = keys$5;
var baseGetAllKeys = _baseGetAllKeys, getSymbols = _getSymbols, keys$4 = keys_1;
function getAllKeys$1(object2) {
  return baseGetAllKeys(object2, keys$4, getSymbols);
}
var _getAllKeys = getAllKeys$1;
var getAllKeys = _getAllKeys;
var COMPARE_PARTIAL_FLAG$3 = 1;
var objectProto$2 = Object.prototype;
var hasOwnProperty$3 = objectProto$2.hasOwnProperty;
function equalObjects$1(object2, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3, objProps = getAllKeys(object2), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index2 = objLength;
  while (index2--) {
    var key = objProps[index2];
    if (!(isPartial ? key in other : hasOwnProperty$3.call(other, key))) {
      return false;
    }
  }
  var objStacked = stack.get(object2);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object2;
  }
  var result = true;
  stack.set(object2, other);
  stack.set(other, object2);
  var skipCtor = isPartial;
  while (++index2 < objLength) {
    key = objProps[index2];
    var objValue = object2[key], othValue = other[key];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object2, stack) : customizer(objValue, othValue, key, object2, other, stack);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == "constructor");
  }
  if (result && !skipCtor) {
    var objCtor = object2.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && ("constructor" in object2 && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack["delete"](object2);
  stack["delete"](other);
  return result;
}
var _equalObjects = equalObjects$1;
var getNative$4 = _getNative, root$6 = _root;
var DataView$2 = getNative$4(root$6, "DataView");
var _DataView = DataView$2;
var getNative$3 = _getNative, root$5 = _root;
var Promise$2 = getNative$3(root$5, "Promise");
var _Promise = Promise$2;
var getNative$2 = _getNative, root$4 = _root;
var Set$3 = getNative$2(root$4, "Set");
var _Set = Set$3;
var getNative$1 = _getNative, root$3 = _root;
var WeakMap$2 = getNative$1(root$3, "WeakMap");
var _WeakMap = WeakMap$2;
var DataView$1 = _DataView, Map$1 = _Map, Promise$1 = _Promise, Set$2 = _Set, WeakMap$1 = _WeakMap, baseGetTag$2 = _baseGetTag, toSource = _toSource;
var mapTag = "[object Map]", objectTag$2 = "[object Object]", promiseTag = "[object Promise]", setTag = "[object Set]", weakMapTag = "[object WeakMap]";
var dataViewTag = "[object DataView]";
var dataViewCtorString = toSource(DataView$1), mapCtorString = toSource(Map$1), promiseCtorString = toSource(Promise$1), setCtorString = toSource(Set$2), weakMapCtorString = toSource(WeakMap$1);
var getTag$2 = baseGetTag$2;
if (DataView$1 && getTag$2(new DataView$1(new ArrayBuffer(1))) != dataViewTag || Map$1 && getTag$2(new Map$1()) != mapTag || Promise$1 && getTag$2(Promise$1.resolve()) != promiseTag || Set$2 && getTag$2(new Set$2()) != setTag || WeakMap$1 && getTag$2(new WeakMap$1()) != weakMapTag) {
  getTag$2 = function(value) {
    var result = baseGetTag$2(value), Ctor = result == objectTag$2 ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag;
        case mapCtorString:
          return mapTag;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag;
        case weakMapCtorString:
          return weakMapTag;
      }
    }
    return result;
  };
}
var _getTag = getTag$2;
var Stack$1 = _Stack, equalArrays = _equalArrays, equalByTag = _equalByTag, equalObjects = _equalObjects, getTag$1 = _getTag, isArray$8 = isArray_1, isBuffer = isBufferExports, isTypedArray$1 = isTypedArray_1;
var COMPARE_PARTIAL_FLAG$2 = 1;
var argsTag = "[object Arguments]", arrayTag = "[object Array]", objectTag$1 = "[object Object]";
var objectProto$1 = Object.prototype;
var hasOwnProperty$2 = objectProto$1.hasOwnProperty;
function baseIsEqualDeep$1(object2, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray$8(object2), othIsArr = isArray$8(other), objTag = objIsArr ? arrayTag : getTag$1(object2), othTag = othIsArr ? arrayTag : getTag$1(other);
  objTag = objTag == argsTag ? objectTag$1 : objTag;
  othTag = othTag == argsTag ? objectTag$1 : othTag;
  var objIsObj = objTag == objectTag$1, othIsObj = othTag == objectTag$1, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer(object2)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack$1());
    return objIsArr || isTypedArray$1(object2) ? equalArrays(object2, other, bitmask, customizer, equalFunc, stack) : equalByTag(object2, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG$2)) {
    var objIsWrapped = objIsObj && hasOwnProperty$2.call(object2, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty$2.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object2.value() : object2, othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack$1());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack$1());
  return equalObjects(object2, other, bitmask, customizer, equalFunc, stack);
}
var _baseIsEqualDeep = baseIsEqualDeep$1;
var baseIsEqualDeep = _baseIsEqualDeep, isObjectLike$2 = isObjectLike_1;
function baseIsEqual$3(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike$2(value) && !isObjectLike$2(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual$3, stack);
}
var _baseIsEqual = baseIsEqual$3;
var Stack = _Stack, baseIsEqual$2 = _baseIsEqual;
var COMPARE_PARTIAL_FLAG$1 = 1, COMPARE_UNORDERED_FLAG$1 = 2;
function baseIsMatch$1(object2, source, matchData, customizer) {
  var index2 = matchData.length, length2 = index2, noCustomizer = !customizer;
  if (object2 == null) {
    return !length2;
  }
  object2 = Object(object2);
  while (index2--) {
    var data2 = matchData[index2];
    if (noCustomizer && data2[2] ? data2[1] !== object2[data2[0]] : !(data2[0] in object2)) {
      return false;
    }
  }
  while (++index2 < length2) {
    data2 = matchData[index2];
    var key = data2[0], objValue = object2[key], srcValue = data2[1];
    if (noCustomizer && data2[2]) {
      if (objValue === void 0 && !(key in object2)) {
        return false;
      }
    } else {
      var stack = new Stack();
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object2, source, stack);
      }
      if (!(result === void 0 ? baseIsEqual$2(srcValue, objValue, COMPARE_PARTIAL_FLAG$1 | COMPARE_UNORDERED_FLAG$1, customizer, stack) : result)) {
        return false;
      }
    }
  }
  return true;
}
var _baseIsMatch = baseIsMatch$1;
var isObject$5 = isObject_1;
function isStrictComparable$2(value) {
  return value === value && !isObject$5(value);
}
var _isStrictComparable = isStrictComparable$2;
var isStrictComparable$1 = _isStrictComparable, keys$3 = keys_1;
function getMatchData$1(object2) {
  var result = keys$3(object2), length2 = result.length;
  while (length2--) {
    var key = result[length2], value = object2[key];
    result[length2] = [key, value, isStrictComparable$1(value)];
  }
  return result;
}
var _getMatchData = getMatchData$1;
function matchesStrictComparable$2(key, srcValue) {
  return function(object2) {
    if (object2 == null) {
      return false;
    }
    return object2[key] === srcValue && (srcValue !== void 0 || key in Object(object2));
  };
}
var _matchesStrictComparable = matchesStrictComparable$2;
var baseIsMatch = _baseIsMatch, getMatchData = _getMatchData, matchesStrictComparable$1 = _matchesStrictComparable;
function baseMatches$1(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable$1(matchData[0][0], matchData[0][1]);
  }
  return function(object2) {
    return object2 === source || baseIsMatch(object2, source, matchData);
  };
}
var _baseMatches = baseMatches$1;
function baseHasIn$1(object2, key) {
  return object2 != null && key in Object(object2);
}
var _baseHasIn = baseHasIn$1;
var castPath = _castPath, isArguments$1 = isArguments_1, isArray$7 = isArray_1, isIndex$1 = _isIndex, isLength = isLength_1, toKey$2 = _toKey;
function hasPath$1(object2, path, hasFunc) {
  path = castPath(path, object2);
  var index2 = -1, length2 = path.length, result = false;
  while (++index2 < length2) {
    var key = toKey$2(path[index2]);
    if (!(result = object2 != null && hasFunc(object2, key))) {
      break;
    }
    object2 = object2[key];
  }
  if (result || ++index2 != length2) {
    return result;
  }
  length2 = object2 == null ? 0 : object2.length;
  return !!length2 && isLength(length2) && isIndex$1(key, length2) && (isArray$7(object2) || isArguments$1(object2));
}
var _hasPath = hasPath$1;
var baseHasIn = _baseHasIn, hasPath = _hasPath;
function hasIn$1(object2, path) {
  return object2 != null && hasPath(object2, path, baseHasIn);
}
var hasIn_1 = hasIn$1;
var baseIsEqual$1 = _baseIsEqual, get$3 = get_1, hasIn = hasIn_1, isKey$2 = _isKey, isStrictComparable = _isStrictComparable, matchesStrictComparable = _matchesStrictComparable, toKey$1 = _toKey;
var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
function baseMatchesProperty$1(path, srcValue) {
  if (isKey$2(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey$1(path), srcValue);
  }
  return function(object2) {
    var objValue = get$3(object2, path);
    return objValue === void 0 && objValue === srcValue ? hasIn(object2, path) : baseIsEqual$1(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}
var _baseMatchesProperty = baseMatchesProperty$1;
function identity$g(value) {
  return value;
}
var identity_1 = identity$g;
function baseProperty$1(key) {
  return function(object2) {
    return object2 == null ? void 0 : object2[key];
  };
}
var _baseProperty = baseProperty$1;
var baseGet$2 = _baseGet;
function basePropertyDeep$1(path) {
  return function(object2) {
    return baseGet$2(object2, path);
  };
}
var _basePropertyDeep = basePropertyDeep$1;
var baseProperty = _baseProperty, basePropertyDeep = _basePropertyDeep, isKey$1 = _isKey, toKey = _toKey;
function property$1(path) {
  return isKey$1(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}
var property_1 = property$1;
var baseMatches = _baseMatches, baseMatchesProperty = _baseMatchesProperty, identity$f = identity_1, isArray$6 = isArray_1, property = property_1;
function baseIteratee$8(value) {
  if (typeof value == "function") {
    return value;
  }
  if (value == null) {
    return identity$f;
  }
  if (typeof value == "object") {
    return isArray$6(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
  }
  return property(value);
}
var _baseIteratee = baseIteratee$8;
function baseFindIndex$2(array2, predicate, fromIndex, fromRight) {
  var length2 = array2.length, index2 = fromIndex + (fromRight ? 1 : -1);
  while (fromRight ? index2-- : ++index2 < length2) {
    if (predicate(array2[index2], index2, array2)) {
      return index2;
    }
  }
  return -1;
}
var _baseFindIndex = baseFindIndex$2;
function baseIsNaN$1(value) {
  return value !== value;
}
var _baseIsNaN = baseIsNaN$1;
function strictIndexOf$1(array2, value, fromIndex) {
  var index2 = fromIndex - 1, length2 = array2.length;
  while (++index2 < length2) {
    if (array2[index2] === value) {
      return index2;
    }
  }
  return -1;
}
var _strictIndexOf = strictIndexOf$1;
var baseFindIndex$1 = _baseFindIndex, baseIsNaN = _baseIsNaN, strictIndexOf = _strictIndexOf;
function baseIndexOf$1(array2, value, fromIndex) {
  return value === value ? strictIndexOf(array2, value, fromIndex) : baseFindIndex$1(array2, baseIsNaN, fromIndex);
}
var _baseIndexOf = baseIndexOf$1;
var baseIndexOf = _baseIndexOf;
function arrayIncludes$1(array2, value) {
  var length2 = array2 == null ? 0 : array2.length;
  return !!length2 && baseIndexOf(array2, value, 0) > -1;
}
var _arrayIncludes = arrayIncludes$1;
function arrayIncludesWith$1(array2, value, comparator) {
  var index2 = -1, length2 = array2 == null ? 0 : array2.length;
  while (++index2 < length2) {
    if (comparator(value, array2[index2])) {
      return true;
    }
  }
  return false;
}
var _arrayIncludesWith = arrayIncludesWith$1;
function noop$3() {
}
var noop_1 = noop$3;
var Set$1 = _Set, noop$2 = noop_1, setToArray$1 = _setToArray;
var INFINITY$1 = 1 / 0;
var createSet$1 = !(Set$1 && 1 / setToArray$1(new Set$1([, -0]))[1] == INFINITY$1) ? noop$2 : function(values) {
  return new Set$1(values);
};
var _createSet = createSet$1;
var SetCache = _SetCache, arrayIncludes = _arrayIncludes, arrayIncludesWith = _arrayIncludesWith, cacheHas = _cacheHas, createSet = _createSet, setToArray = _setToArray;
var LARGE_ARRAY_SIZE = 200;
function baseUniq$1(array2, iteratee, comparator) {
  var index2 = -1, includes = arrayIncludes, length2 = array2.length, isCommon = true, result = [], seen = result;
  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith;
  } else if (length2 >= LARGE_ARRAY_SIZE) {
    var set3 = iteratee ? null : createSet(array2);
    if (set3) {
      return setToArray(set3);
    }
    isCommon = false;
    includes = cacheHas;
    seen = new SetCache();
  } else {
    seen = iteratee ? [] : result;
  }
  outer:
    while (++index2 < length2) {
      var value = array2[index2], computed = iteratee ? iteratee(value) : value;
      value = comparator || value !== 0 ? value : 0;
      if (isCommon && computed === computed) {
        var seenIndex = seen.length;
        while (seenIndex--) {
          if (seen[seenIndex] === computed) {
            continue outer;
          }
        }
        if (iteratee) {
          seen.push(computed);
        }
        result.push(value);
      } else if (!includes(seen, computed, comparator)) {
        if (seen !== result) {
          seen.push(computed);
        }
        result.push(value);
      }
    }
  return result;
}
var _baseUniq = baseUniq$1;
var baseIteratee$7 = _baseIteratee, baseUniq = _baseUniq;
function uniqBy(array2, iteratee) {
  return array2 && array2.length ? baseUniq(array2, baseIteratee$7(iteratee)) : [];
}
var uniqBy_1 = uniqBy;
const uniqBy$1 = /* @__PURE__ */ getDefaultExportFromCjs(uniqBy_1);
function getUniqPayload(payload, option, defaultUniqBy2) {
  if (option === true) {
    return uniqBy$1(payload, defaultUniqBy2);
  }
  if (isFunction$4(option)) {
    return uniqBy$1(payload, option);
  }
  return payload;
}
function _typeof$B(o2) {
  "@babel/helpers - typeof";
  return _typeof$B = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$B(o2);
}
var _excluded$p = ["ref"];
function ownKeys$x(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$w(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$x(Object(t2), true).forEach(function(r3) {
      _defineProperty$A(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$x(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _classCallCheck$b(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$b(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey$z(descriptor.key), descriptor);
  }
}
function _createClass$b(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$b(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$b(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _callSuper$7(t2, o2, e3) {
  return o2 = _getPrototypeOf$8(o2), _possibleConstructorReturn$8(t2, _isNativeReflectConstruct$8() ? Reflect.construct(o2, e3 || [], _getPrototypeOf$8(t2).constructor) : o2.apply(t2, e3));
}
function _possibleConstructorReturn$8(self2, call) {
  if (call && (_typeof$B(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized$8(self2);
}
function _isNativeReflectConstruct$8() {
  try {
    var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t3) {
  }
  return (_isNativeReflectConstruct$8 = function _isNativeReflectConstruct2() {
    return !!t2;
  })();
}
function _getPrototypeOf$8(o2) {
  _getPrototypeOf$8 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o3) {
    return o3.__proto__ || Object.getPrototypeOf(o3);
  };
  return _getPrototypeOf$8(o2);
}
function _assertThisInitialized$8(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inherits$8(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf$8(subClass, superClass);
}
function _setPrototypeOf$8(o2, p2) {
  _setPrototypeOf$8 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o3, p3) {
    o3.__proto__ = p3;
    return o3;
  };
  return _setPrototypeOf$8(o2, p2);
}
function _defineProperty$A(obj, key, value) {
  key = _toPropertyKey$z(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$z(t2) {
  var i2 = _toPrimitive$z(t2, "string");
  return "symbol" == _typeof$B(i2) ? i2 : String(i2);
}
function _toPrimitive$z(t2, r2) {
  if ("object" != _typeof$B(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$B(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function _objectWithoutProperties$g(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$f(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$f(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function defaultUniqBy$1(entry) {
  return entry.value;
}
function renderContent$1(content, props) {
  if (/* @__PURE__ */ React.isValidElement(content)) {
    return /* @__PURE__ */ React.cloneElement(content, props);
  }
  if (typeof content === "function") {
    return /* @__PURE__ */ React.createElement(content, props);
  }
  props.ref;
  var otherProps = _objectWithoutProperties$g(props, _excluded$p);
  return /* @__PURE__ */ React.createElement(DefaultLegendContent, otherProps);
}
var EPS$1 = 1;
var Legend = /* @__PURE__ */ function(_PureComponent) {
  _inherits$8(Legend2, _PureComponent);
  function Legend2() {
    var _this;
    _classCallCheck$b(this, Legend2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper$7(this, Legend2, [].concat(args));
    _defineProperty$A(_assertThisInitialized$8(_this), "lastBoundingBox", {
      width: -1,
      height: -1
    });
    return _this;
  }
  _createClass$b(Legend2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateBBox();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.updateBBox();
    }
  }, {
    key: "getBBox",
    value: function getBBox() {
      if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {
        var _box = this.wrapperNode.getBoundingClientRect();
        _box.height = this.wrapperNode.offsetHeight;
        _box.width = this.wrapperNode.offsetWidth;
        return _box;
      }
      return null;
    }
  }, {
    key: "updateBBox",
    value: function updateBBox() {
      var onBBoxUpdate = this.props.onBBoxUpdate;
      var box = this.getBBox();
      if (box) {
        if (Math.abs(box.width - this.lastBoundingBox.width) > EPS$1 || Math.abs(box.height - this.lastBoundingBox.height) > EPS$1) {
          this.lastBoundingBox.width = box.width;
          this.lastBoundingBox.height = box.height;
          if (onBBoxUpdate) {
            onBBoxUpdate(box);
          }
        }
      } else if (this.lastBoundingBox.width !== -1 || this.lastBoundingBox.height !== -1) {
        this.lastBoundingBox.width = -1;
        this.lastBoundingBox.height = -1;
        if (onBBoxUpdate) {
          onBBoxUpdate(null);
        }
      }
    }
  }, {
    key: "getBBoxSnapshot",
    value: function getBBoxSnapshot() {
      if (this.lastBoundingBox.width >= 0 && this.lastBoundingBox.height >= 0) {
        return _objectSpread$w({}, this.lastBoundingBox);
      }
      return {
        width: 0,
        height: 0
      };
    }
  }, {
    key: "getDefaultPosition",
    value: function getDefaultPosition(style) {
      var _this$props = this.props, layout = _this$props.layout, align = _this$props.align, verticalAlign = _this$props.verticalAlign, margin = _this$props.margin, chartWidth = _this$props.chartWidth, chartHeight = _this$props.chartHeight;
      var hPos, vPos;
      if (!style || (style.left === void 0 || style.left === null) && (style.right === void 0 || style.right === null)) {
        if (align === "center" && layout === "vertical") {
          var _box2 = this.getBBoxSnapshot();
          hPos = {
            left: ((chartWidth || 0) - _box2.width) / 2
          };
        } else {
          hPos = align === "right" ? {
            right: margin && margin.right || 0
          } : {
            left: margin && margin.left || 0
          };
        }
      }
      if (!style || (style.top === void 0 || style.top === null) && (style.bottom === void 0 || style.bottom === null)) {
        if (verticalAlign === "middle") {
          var _box3 = this.getBBoxSnapshot();
          vPos = {
            top: ((chartHeight || 0) - _box3.height) / 2
          };
        } else {
          vPos = verticalAlign === "bottom" ? {
            bottom: margin && margin.bottom || 0
          } : {
            top: margin && margin.top || 0
          };
        }
      }
      return _objectSpread$w(_objectSpread$w({}, hPos), vPos);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var _this$props2 = this.props, content = _this$props2.content, width = _this$props2.width, height = _this$props2.height, wrapperStyle = _this$props2.wrapperStyle, payloadUniqBy = _this$props2.payloadUniqBy, payload = _this$props2.payload;
      var outerStyle = _objectSpread$w(_objectSpread$w({
        position: "absolute",
        width: width || "auto",
        height: height || "auto"
      }, this.getDefaultPosition(wrapperStyle)), wrapperStyle);
      return /* @__PURE__ */ React.createElement("div", {
        className: "recharts-legend-wrapper",
        style: outerStyle,
        ref: function ref(node) {
          _this2.wrapperNode = node;
        }
      }, renderContent$1(content, _objectSpread$w(_objectSpread$w({}, this.props), {}, {
        payload: getUniqPayload(payload, payloadUniqBy, defaultUniqBy$1)
      })));
    }
  }], [{
    key: "getWithHeight",
    value: function getWithHeight(item, chartWidth) {
      var layout = item.props.layout;
      if (layout === "vertical" && isNumber(item.props.height)) {
        return {
          height: item.props.height
        };
      }
      if (layout === "horizontal") {
        return {
          width: item.props.width || chartWidth
        };
      }
      return null;
    }
  }]);
  return Legend2;
}(reactExports.PureComponent);
_defineProperty$A(Legend, "displayName", "Legend");
_defineProperty$A(Legend, "defaultProps", {
  iconSize: 14,
  layout: "horizontal",
  align: "center",
  verticalAlign: "bottom"
});
var Symbol$1 = _Symbol, isArguments = isArguments_1, isArray$5 = isArray_1;
var spreadableSymbol = Symbol$1 ? Symbol$1.isConcatSpreadable : void 0;
function isFlattenable$1(value) {
  return isArray$5(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}
var _isFlattenable = isFlattenable$1;
var arrayPush = _arrayPush, isFlattenable = _isFlattenable;
function baseFlatten$2(array2, depth, predicate, isStrict, result) {
  var index2 = -1, length2 = array2.length;
  predicate || (predicate = isFlattenable);
  result || (result = []);
  while (++index2 < length2) {
    var value = array2[index2];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        baseFlatten$2(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}
var _baseFlatten = baseFlatten$2;
function createBaseFor$1(fromRight) {
  return function(object2, iteratee, keysFunc) {
    var index2 = -1, iterable = Object(object2), props = keysFunc(object2), length2 = props.length;
    while (length2--) {
      var key = props[fromRight ? length2 : ++index2];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object2;
  };
}
var _createBaseFor = createBaseFor$1;
var createBaseFor = _createBaseFor;
var baseFor$1 = createBaseFor();
var _baseFor = baseFor$1;
var baseFor = _baseFor, keys$2 = keys_1;
function baseForOwn$2(object2, iteratee) {
  return object2 && baseFor(object2, iteratee, keys$2);
}
var _baseForOwn = baseForOwn$2;
var isArrayLike$3 = isArrayLike_1;
function createBaseEach$1(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike$3(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length2 = collection.length, index2 = fromRight ? length2 : -1, iterable = Object(collection);
    while (fromRight ? index2-- : ++index2 < length2) {
      if (iteratee(iterable[index2], index2, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}
var _createBaseEach = createBaseEach$1;
var baseForOwn$1 = _baseForOwn, createBaseEach = _createBaseEach;
var baseEach$3 = createBaseEach(baseForOwn$1);
var _baseEach = baseEach$3;
var baseEach$2 = _baseEach, isArrayLike$2 = isArrayLike_1;
function baseMap$2(collection, iteratee) {
  var index2 = -1, result = isArrayLike$2(collection) ? Array(collection.length) : [];
  baseEach$2(collection, function(value, key, collection2) {
    result[++index2] = iteratee(value, key, collection2);
  });
  return result;
}
var _baseMap = baseMap$2;
function baseSortBy$1(array2, comparer) {
  var length2 = array2.length;
  array2.sort(comparer);
  while (length2--) {
    array2[length2] = array2[length2].value;
  }
  return array2;
}
var _baseSortBy = baseSortBy$1;
var isSymbol$2 = isSymbol_1;
function compareAscending$1(value, other) {
  if (value !== other) {
    var valIsDefined = value !== void 0, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol$2(value);
    var othIsDefined = other !== void 0, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol$2(other);
    if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
      return 1;
    }
    if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}
var _compareAscending = compareAscending$1;
var compareAscending = _compareAscending;
function compareMultiple$1(object2, other, orders) {
  var index2 = -1, objCriteria = object2.criteria, othCriteria = other.criteria, length2 = objCriteria.length, ordersLength = orders.length;
  while (++index2 < length2) {
    var result = compareAscending(objCriteria[index2], othCriteria[index2]);
    if (result) {
      if (index2 >= ordersLength) {
        return result;
      }
      var order = orders[index2];
      return result * (order == "desc" ? -1 : 1);
    }
  }
  return object2.index - other.index;
}
var _compareMultiple = compareMultiple$1;
var arrayMap$1 = _arrayMap, baseGet$1 = _baseGet, baseIteratee$6 = _baseIteratee, baseMap$1 = _baseMap, baseSortBy = _baseSortBy, baseUnary = _baseUnary, compareMultiple = _compareMultiple, identity$e = identity_1, isArray$4 = isArray_1;
function baseOrderBy$1(collection, iteratees, orders) {
  if (iteratees.length) {
    iteratees = arrayMap$1(iteratees, function(iteratee) {
      if (isArray$4(iteratee)) {
        return function(value) {
          return baseGet$1(value, iteratee.length === 1 ? iteratee[0] : iteratee);
        };
      }
      return iteratee;
    });
  } else {
    iteratees = [identity$e];
  }
  var index2 = -1;
  iteratees = arrayMap$1(iteratees, baseUnary(baseIteratee$6));
  var result = baseMap$1(collection, function(value, key, collection2) {
    var criteria = arrayMap$1(iteratees, function(iteratee) {
      return iteratee(value);
    });
    return { "criteria": criteria, "index": ++index2, "value": value };
  });
  return baseSortBy(result, function(object2, other) {
    return compareMultiple(object2, other, orders);
  });
}
var _baseOrderBy = baseOrderBy$1;
function apply$1(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}
var _apply = apply$1;
var apply = _apply;
var nativeMax$3 = Math.max;
function overRest$1(func, start2, transform2) {
  start2 = nativeMax$3(start2 === void 0 ? func.length - 1 : start2, 0);
  return function() {
    var args = arguments, index2 = -1, length2 = nativeMax$3(args.length - start2, 0), array2 = Array(length2);
    while (++index2 < length2) {
      array2[index2] = args[start2 + index2];
    }
    index2 = -1;
    var otherArgs = Array(start2 + 1);
    while (++index2 < start2) {
      otherArgs[index2] = args[index2];
    }
    otherArgs[start2] = transform2(array2);
    return apply(func, this, otherArgs);
  };
}
var _overRest = overRest$1;
function constant$6(value) {
  return function() {
    return value;
  };
}
var constant_1 = constant$6;
var getNative = _getNative;
var defineProperty$2 = function() {
  try {
    var func = getNative(Object, "defineProperty");
    func({}, "", {});
    return func;
  } catch (e3) {
  }
}();
var _defineProperty$z = defineProperty$2;
var constant$5 = constant_1, defineProperty$1 = _defineProperty$z, identity$d = identity_1;
var baseSetToString$1 = !defineProperty$1 ? identity$d : function(func, string2) {
  return defineProperty$1(func, "toString", {
    "configurable": true,
    "enumerable": false,
    "value": constant$5(string2),
    "writable": true
  });
};
var _baseSetToString = baseSetToString$1;
var HOT_COUNT = 800, HOT_SPAN = 16;
var nativeNow = Date.now;
function shortOut$1(func) {
  var count2 = 0, lastCalled = 0;
  return function() {
    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;
    if (remaining > 0) {
      if (++count2 >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count2 = 0;
    }
    return func.apply(void 0, arguments);
  };
}
var _shortOut = shortOut$1;
var baseSetToString = _baseSetToString, shortOut = _shortOut;
var setToString$1 = shortOut(baseSetToString);
var _setToString = setToString$1;
var identity$c = identity_1, overRest = _overRest, setToString = _setToString;
function baseRest$1(func, start2) {
  return setToString(overRest(func, start2, identity$c), func + "");
}
var _baseRest = baseRest$1;
var eq = eq_1, isArrayLike$1 = isArrayLike_1, isIndex = _isIndex, isObject$4 = isObject_1;
function isIterateeCall$4(value, index2, object2) {
  if (!isObject$4(object2)) {
    return false;
  }
  var type2 = typeof index2;
  if (type2 == "number" ? isArrayLike$1(object2) && isIndex(index2, object2.length) : type2 == "string" && index2 in object2) {
    return eq(object2[index2], value);
  }
  return false;
}
var _isIterateeCall = isIterateeCall$4;
var baseFlatten$1 = _baseFlatten, baseOrderBy = _baseOrderBy, baseRest = _baseRest, isIterateeCall$3 = _isIterateeCall;
var sortBy = baseRest(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length2 = iteratees.length;
  if (length2 > 1 && isIterateeCall$3(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length2 > 2 && isIterateeCall$3(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return baseOrderBy(collection, baseFlatten$1(iteratees, 1), []);
});
var sortBy_1 = sortBy;
const sortBy$1 = /* @__PURE__ */ getDefaultExportFromCjs(sortBy_1);
function _typeof$A(o2) {
  "@babel/helpers - typeof";
  return _typeof$A = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$A(o2);
}
function _extends$s() {
  _extends$s = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$s.apply(this, arguments);
}
function _slicedToArray$b(arr, i2) {
  return _arrayWithHoles$c(arr) || _iterableToArrayLimit$b(arr, i2) || _unsupportedIterableToArray$j(arr, i2) || _nonIterableRest$c();
}
function _nonIterableRest$c() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$j(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$j(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$j(o2, minLen);
}
function _arrayLikeToArray$j(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function _iterableToArrayLimit$b(r2, l2) {
  var t2 = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
  if (null != t2) {
    var e3, n2, i2, u2, a2 = [], f2 = true, o2 = false;
    try {
      if (i2 = (t2 = t2.call(r2)).next, 0 === l2) {
        if (Object(t2) !== t2)
          return;
        f2 = false;
      } else
        for (; !(f2 = (e3 = i2.call(t2)).done) && (a2.push(e3.value), a2.length !== l2); f2 = true)
          ;
    } catch (r3) {
      o2 = true, n2 = r3;
    } finally {
      try {
        if (!f2 && null != t2["return"] && (u2 = t2["return"](), Object(u2) !== u2))
          return;
      } finally {
        if (o2)
          throw n2;
      }
    }
    return a2;
  }
}
function _arrayWithHoles$c(arr) {
  if (Array.isArray(arr))
    return arr;
}
function ownKeys$w(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$v(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$w(Object(t2), true).forEach(function(r3) {
      _defineProperty$y(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$w(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$y(obj, key, value) {
  key = _toPropertyKey$y(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$y(t2) {
  var i2 = _toPrimitive$y(t2, "string");
  return "symbol" == _typeof$A(i2) ? i2 : String(i2);
}
function _toPrimitive$y(t2, r2) {
  if ("object" != _typeof$A(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$A(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function defaultFormatter(value) {
  return Array.isArray(value) && isNumOrStr(value[0]) && isNumOrStr(value[1]) ? value.join(" ~ ") : value;
}
var DefaultTooltipContent = function DefaultTooltipContent2(props) {
  var _props$separator = props.separator, separator = _props$separator === void 0 ? " : " : _props$separator, _props$contentStyle = props.contentStyle, contentStyle = _props$contentStyle === void 0 ? {} : _props$contentStyle, _props$itemStyle = props.itemStyle, itemStyle = _props$itemStyle === void 0 ? {} : _props$itemStyle, _props$labelStyle = props.labelStyle, labelStyle = _props$labelStyle === void 0 ? {} : _props$labelStyle, payload = props.payload, formatter = props.formatter, itemSorter = props.itemSorter, wrapperClassName = props.wrapperClassName, labelClassName = props.labelClassName, label = props.label, labelFormatter = props.labelFormatter, _props$accessibilityL = props.accessibilityLayer, accessibilityLayer = _props$accessibilityL === void 0 ? false : _props$accessibilityL;
  var renderContent2 = function renderContent3() {
    if (payload && payload.length) {
      var listStyle = {
        padding: 0,
        margin: 0
      };
      var items2 = (itemSorter ? sortBy$1(payload, itemSorter) : payload).map(function(entry, i2) {
        if (entry.type === "none") {
          return null;
        }
        var finalItemStyle = _objectSpread$v({
          display: "block",
          paddingTop: 4,
          paddingBottom: 4,
          color: entry.color || "#000"
        }, itemStyle);
        var finalFormatter = entry.formatter || formatter || defaultFormatter;
        var value = entry.value, name = entry.name;
        var finalValue = value;
        var finalName = name;
        if (finalFormatter && finalValue != null && finalName != null) {
          var formatted = finalFormatter(value, name, entry, i2, payload);
          if (Array.isArray(formatted)) {
            var _formatted = _slicedToArray$b(formatted, 2);
            finalValue = _formatted[0];
            finalName = _formatted[1];
          } else {
            finalValue = formatted;
          }
        }
        return (
          // eslint-disable-next-line react/no-array-index-key
          /* @__PURE__ */ React.createElement("li", {
            className: "recharts-tooltip-item",
            key: "tooltip-item-".concat(i2),
            style: finalItemStyle
          }, isNumOrStr(finalName) ? /* @__PURE__ */ React.createElement("span", {
            className: "recharts-tooltip-item-name"
          }, finalName) : null, isNumOrStr(finalName) ? /* @__PURE__ */ React.createElement("span", {
            className: "recharts-tooltip-item-separator"
          }, separator) : null, /* @__PURE__ */ React.createElement("span", {
            className: "recharts-tooltip-item-value"
          }, finalValue), /* @__PURE__ */ React.createElement("span", {
            className: "recharts-tooltip-item-unit"
          }, entry.unit || ""))
        );
      });
      return /* @__PURE__ */ React.createElement("ul", {
        className: "recharts-tooltip-item-list",
        style: listStyle
      }, items2);
    }
    return null;
  };
  var finalStyle = _objectSpread$v({
    margin: 0,
    padding: 10,
    backgroundColor: "#fff",
    border: "1px solid #ccc",
    whiteSpace: "nowrap"
  }, contentStyle);
  var finalLabelStyle = _objectSpread$v({
    margin: 0
  }, labelStyle);
  var hasLabel = !isNil$1(label);
  var finalLabel = hasLabel ? label : "";
  var wrapperCN = clsx$1("recharts-default-tooltip", wrapperClassName);
  var labelCN = clsx$1("recharts-tooltip-label", labelClassName);
  if (hasLabel && labelFormatter && payload !== void 0 && payload !== null) {
    finalLabel = labelFormatter(label, payload);
  }
  var accessibilityAttributes = accessibilityLayer ? {
    role: "status",
    "aria-live": "assertive"
  } : {};
  return /* @__PURE__ */ React.createElement("div", _extends$s({
    className: wrapperCN,
    style: finalStyle
  }, accessibilityAttributes), /* @__PURE__ */ React.createElement("p", {
    className: labelCN,
    style: finalLabelStyle
  }, /* @__PURE__ */ React.isValidElement(finalLabel) ? finalLabel : "".concat(finalLabel)), renderContent2());
};
function _typeof$z(o2) {
  "@babel/helpers - typeof";
  return _typeof$z = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$z(o2);
}
function _defineProperty$x(obj, key, value) {
  key = _toPropertyKey$x(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$x(t2) {
  var i2 = _toPrimitive$x(t2, "string");
  return "symbol" == _typeof$z(i2) ? i2 : String(i2);
}
function _toPrimitive$x(t2, r2) {
  if ("object" != _typeof$z(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$z(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var CSS_CLASS_PREFIX = "recharts-tooltip-wrapper";
var TOOLTIP_HIDDEN = {
  visibility: "hidden"
};
function getTooltipCSSClassName(_ref) {
  var coordinate = _ref.coordinate, translateX = _ref.translateX, translateY = _ref.translateY;
  return clsx$1(CSS_CLASS_PREFIX, _defineProperty$x(_defineProperty$x(_defineProperty$x(_defineProperty$x({}, "".concat(CSS_CLASS_PREFIX, "-right"), isNumber(translateX) && coordinate && isNumber(coordinate.x) && translateX >= coordinate.x), "".concat(CSS_CLASS_PREFIX, "-left"), isNumber(translateX) && coordinate && isNumber(coordinate.x) && translateX < coordinate.x), "".concat(CSS_CLASS_PREFIX, "-bottom"), isNumber(translateY) && coordinate && isNumber(coordinate.y) && translateY >= coordinate.y), "".concat(CSS_CLASS_PREFIX, "-top"), isNumber(translateY) && coordinate && isNumber(coordinate.y) && translateY < coordinate.y));
}
function getTooltipTranslateXY(_ref2) {
  var allowEscapeViewBox = _ref2.allowEscapeViewBox, coordinate = _ref2.coordinate, key = _ref2.key, offsetTopLeft = _ref2.offsetTopLeft, position = _ref2.position, reverseDirection = _ref2.reverseDirection, tooltipDimension = _ref2.tooltipDimension, viewBox = _ref2.viewBox, viewBoxDimension = _ref2.viewBoxDimension;
  if (position && isNumber(position[key])) {
    return position[key];
  }
  var negative = coordinate[key] - tooltipDimension - offsetTopLeft;
  var positive = coordinate[key] + offsetTopLeft;
  if (allowEscapeViewBox[key]) {
    return reverseDirection[key] ? negative : positive;
  }
  if (reverseDirection[key]) {
    var _tooltipBoundary = negative;
    var _viewBoxBoundary = viewBox[key];
    if (_tooltipBoundary < _viewBoxBoundary) {
      return Math.max(positive, viewBox[key]);
    }
    return Math.max(negative, viewBox[key]);
  }
  var tooltipBoundary = positive + tooltipDimension;
  var viewBoxBoundary = viewBox[key] + viewBoxDimension;
  if (tooltipBoundary > viewBoxBoundary) {
    return Math.max(negative, viewBox[key]);
  }
  return Math.max(positive, viewBox[key]);
}
function getTransformStyle(_ref3) {
  var translateX = _ref3.translateX, translateY = _ref3.translateY, useTranslate3d = _ref3.useTranslate3d;
  return {
    transform: useTranslate3d ? "translate3d(".concat(translateX, "px, ").concat(translateY, "px, 0)") : "translate(".concat(translateX, "px, ").concat(translateY, "px)")
  };
}
function getTooltipTranslate(_ref4) {
  var allowEscapeViewBox = _ref4.allowEscapeViewBox, coordinate = _ref4.coordinate, offsetTopLeft = _ref4.offsetTopLeft, position = _ref4.position, reverseDirection = _ref4.reverseDirection, tooltipBox = _ref4.tooltipBox, useTranslate3d = _ref4.useTranslate3d, viewBox = _ref4.viewBox;
  var cssProperties, translateX, translateY;
  if (tooltipBox.height > 0 && tooltipBox.width > 0 && coordinate) {
    translateX = getTooltipTranslateXY({
      allowEscapeViewBox,
      coordinate,
      key: "x",
      offsetTopLeft,
      position,
      reverseDirection,
      tooltipDimension: tooltipBox.width,
      viewBox,
      viewBoxDimension: viewBox.width
    });
    translateY = getTooltipTranslateXY({
      allowEscapeViewBox,
      coordinate,
      key: "y",
      offsetTopLeft,
      position,
      reverseDirection,
      tooltipDimension: tooltipBox.height,
      viewBox,
      viewBoxDimension: viewBox.height
    });
    cssProperties = getTransformStyle({
      translateX,
      translateY,
      useTranslate3d
    });
  } else {
    cssProperties = TOOLTIP_HIDDEN;
  }
  return {
    cssProperties,
    cssClasses: getTooltipCSSClassName({
      translateX,
      translateY,
      coordinate
    })
  };
}
function _typeof$y(o2) {
  "@babel/helpers - typeof";
  return _typeof$y = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$y(o2);
}
function ownKeys$v(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$u(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$v(Object(t2), true).forEach(function(r3) {
      _defineProperty$w(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$v(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _classCallCheck$a(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$a(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey$w(descriptor.key), descriptor);
  }
}
function _createClass$a(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$a(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$a(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _callSuper$6(t2, o2, e3) {
  return o2 = _getPrototypeOf$7(o2), _possibleConstructorReturn$7(t2, _isNativeReflectConstruct$7() ? Reflect.construct(o2, e3 || [], _getPrototypeOf$7(t2).constructor) : o2.apply(t2, e3));
}
function _possibleConstructorReturn$7(self2, call) {
  if (call && (_typeof$y(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized$7(self2);
}
function _isNativeReflectConstruct$7() {
  try {
    var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t3) {
  }
  return (_isNativeReflectConstruct$7 = function _isNativeReflectConstruct2() {
    return !!t2;
  })();
}
function _getPrototypeOf$7(o2) {
  _getPrototypeOf$7 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o3) {
    return o3.__proto__ || Object.getPrototypeOf(o3);
  };
  return _getPrototypeOf$7(o2);
}
function _assertThisInitialized$7(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inherits$7(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf$7(subClass, superClass);
}
function _setPrototypeOf$7(o2, p2) {
  _setPrototypeOf$7 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o3, p3) {
    o3.__proto__ = p3;
    return o3;
  };
  return _setPrototypeOf$7(o2, p2);
}
function _defineProperty$w(obj, key, value) {
  key = _toPropertyKey$w(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$w(t2) {
  var i2 = _toPrimitive$w(t2, "string");
  return "symbol" == _typeof$y(i2) ? i2 : String(i2);
}
function _toPrimitive$w(t2, r2) {
  if ("object" != _typeof$y(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$y(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var EPSILON = 1;
var TooltipBoundingBox = /* @__PURE__ */ function(_PureComponent) {
  _inherits$7(TooltipBoundingBox2, _PureComponent);
  function TooltipBoundingBox2() {
    var _this;
    _classCallCheck$a(this, TooltipBoundingBox2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper$6(this, TooltipBoundingBox2, [].concat(args));
    _defineProperty$w(_assertThisInitialized$7(_this), "state", {
      dismissed: false,
      dismissedAtCoordinate: {
        x: 0,
        y: 0
      }
    });
    _defineProperty$w(_assertThisInitialized$7(_this), "lastBoundingBox", {
      width: -1,
      height: -1
    });
    _defineProperty$w(_assertThisInitialized$7(_this), "handleKeyDown", function(event) {
      if (event.key === "Escape") {
        var _this$props$coordinat, _this$props$coordinat2, _this$props$coordinat3, _this$props$coordinat4;
        _this.setState({
          dismissed: true,
          dismissedAtCoordinate: {
            x: (_this$props$coordinat = (_this$props$coordinat2 = _this.props.coordinate) === null || _this$props$coordinat2 === void 0 ? void 0 : _this$props$coordinat2.x) !== null && _this$props$coordinat !== void 0 ? _this$props$coordinat : 0,
            y: (_this$props$coordinat3 = (_this$props$coordinat4 = _this.props.coordinate) === null || _this$props$coordinat4 === void 0 ? void 0 : _this$props$coordinat4.y) !== null && _this$props$coordinat3 !== void 0 ? _this$props$coordinat3 : 0
          }
        });
      }
    });
    return _this;
  }
  _createClass$a(TooltipBoundingBox2, [{
    key: "updateBBox",
    value: function updateBBox() {
      if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {
        var box = this.wrapperNode.getBoundingClientRect();
        if (Math.abs(box.width - this.lastBoundingBox.width) > EPSILON || Math.abs(box.height - this.lastBoundingBox.height) > EPSILON) {
          this.lastBoundingBox.width = box.width;
          this.lastBoundingBox.height = box.height;
        }
      } else if (this.lastBoundingBox.width !== -1 || this.lastBoundingBox.height !== -1) {
        this.lastBoundingBox.width = -1;
        this.lastBoundingBox.height = -1;
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      document.addEventListener("keydown", this.handleKeyDown);
      this.updateBBox();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      document.removeEventListener("keydown", this.handleKeyDown);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var _this$props$coordinat5, _this$props$coordinat6;
      if (this.props.active) {
        this.updateBBox();
      }
      if (!this.state.dismissed) {
        return;
      }
      if (((_this$props$coordinat5 = this.props.coordinate) === null || _this$props$coordinat5 === void 0 ? void 0 : _this$props$coordinat5.x) !== this.state.dismissedAtCoordinate.x || ((_this$props$coordinat6 = this.props.coordinate) === null || _this$props$coordinat6 === void 0 ? void 0 : _this$props$coordinat6.y) !== this.state.dismissedAtCoordinate.y) {
        this.state.dismissed = false;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var _this$props = this.props, active = _this$props.active, allowEscapeViewBox = _this$props.allowEscapeViewBox, animationDuration = _this$props.animationDuration, animationEasing = _this$props.animationEasing, children2 = _this$props.children, coordinate = _this$props.coordinate, hasPayload = _this$props.hasPayload, isAnimationActive = _this$props.isAnimationActive, offset2 = _this$props.offset, position = _this$props.position, reverseDirection = _this$props.reverseDirection, useTranslate3d = _this$props.useTranslate3d, viewBox = _this$props.viewBox, wrapperStyle = _this$props.wrapperStyle;
      var _getTooltipTranslate = getTooltipTranslate({
        allowEscapeViewBox,
        coordinate,
        offsetTopLeft: offset2,
        position,
        reverseDirection,
        tooltipBox: {
          height: this.lastBoundingBox.height,
          width: this.lastBoundingBox.width
        },
        useTranslate3d,
        viewBox
      }), cssClasses = _getTooltipTranslate.cssClasses, cssProperties = _getTooltipTranslate.cssProperties;
      var outerStyle = _objectSpread$u(_objectSpread$u({
        transition: isAnimationActive && active ? "transform ".concat(animationDuration, "ms ").concat(animationEasing) : void 0
      }, cssProperties), {}, {
        pointerEvents: "none",
        visibility: !this.state.dismissed && active && hasPayload ? "visible" : "hidden",
        position: "absolute",
        top: 0,
        left: 0
      }, wrapperStyle);
      return (
        // This element allow listening to the `Escape` key.
        // See https://github.com/recharts/recharts/pull/2925
        /* @__PURE__ */ React.createElement("div", {
          tabIndex: -1,
          className: cssClasses,
          style: outerStyle,
          ref: function ref(node) {
            _this2.wrapperNode = node;
          }
        }, children2)
      );
    }
  }]);
  return TooltipBoundingBox2;
}(reactExports.PureComponent);
var parseIsSsrByDefault = function parseIsSsrByDefault2() {
  return !(typeof window !== "undefined" && window.document && window.document.createElement && window.setTimeout);
};
var Global = {
  isSsr: parseIsSsrByDefault(),
  get: function get(key) {
    return Global[key];
  },
  set: function set(key, value) {
    if (typeof key === "string") {
      Global[key] = value;
    } else {
      var keys2 = Object.keys(key);
      if (keys2 && keys2.length) {
        keys2.forEach(function(k2) {
          Global[k2] = key[k2];
        });
      }
    }
  }
};
function _typeof$x(o2) {
  "@babel/helpers - typeof";
  return _typeof$x = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$x(o2);
}
function ownKeys$u(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$t(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$u(Object(t2), true).forEach(function(r3) {
      _defineProperty$v(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$u(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _classCallCheck$9(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$9(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey$v(descriptor.key), descriptor);
  }
}
function _createClass$9(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$9(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$9(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _callSuper$5(t2, o2, e3) {
  return o2 = _getPrototypeOf$6(o2), _possibleConstructorReturn$6(t2, _isNativeReflectConstruct$6() ? Reflect.construct(o2, e3 || [], _getPrototypeOf$6(t2).constructor) : o2.apply(t2, e3));
}
function _possibleConstructorReturn$6(self2, call) {
  if (call && (_typeof$x(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized$6(self2);
}
function _assertThisInitialized$6(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$6() {
  try {
    var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t3) {
  }
  return (_isNativeReflectConstruct$6 = function _isNativeReflectConstruct2() {
    return !!t2;
  })();
}
function _getPrototypeOf$6(o2) {
  _getPrototypeOf$6 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o3) {
    return o3.__proto__ || Object.getPrototypeOf(o3);
  };
  return _getPrototypeOf$6(o2);
}
function _inherits$6(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf$6(subClass, superClass);
}
function _setPrototypeOf$6(o2, p2) {
  _setPrototypeOf$6 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o3, p3) {
    o3.__proto__ = p3;
    return o3;
  };
  return _setPrototypeOf$6(o2, p2);
}
function _defineProperty$v(obj, key, value) {
  key = _toPropertyKey$v(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$v(t2) {
  var i2 = _toPrimitive$v(t2, "string");
  return "symbol" == _typeof$x(i2) ? i2 : String(i2);
}
function _toPrimitive$v(t2, r2) {
  if ("object" != _typeof$x(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$x(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function defaultUniqBy(entry) {
  return entry.dataKey;
}
function renderContent(content, props) {
  if (/* @__PURE__ */ React.isValidElement(content)) {
    return /* @__PURE__ */ React.cloneElement(content, props);
  }
  if (typeof content === "function") {
    return /* @__PURE__ */ React.createElement(content, props);
  }
  return /* @__PURE__ */ React.createElement(DefaultTooltipContent, props);
}
var Tooltip = /* @__PURE__ */ function(_PureComponent) {
  _inherits$6(Tooltip2, _PureComponent);
  function Tooltip2() {
    _classCallCheck$9(this, Tooltip2);
    return _callSuper$5(this, Tooltip2, arguments);
  }
  _createClass$9(Tooltip2, [{
    key: "render",
    value: function render() {
      var _this = this;
      var _this$props = this.props, active = _this$props.active, allowEscapeViewBox = _this$props.allowEscapeViewBox, animationDuration = _this$props.animationDuration, animationEasing = _this$props.animationEasing, content = _this$props.content, coordinate = _this$props.coordinate, filterNull = _this$props.filterNull, isAnimationActive = _this$props.isAnimationActive, offset2 = _this$props.offset, payload = _this$props.payload, payloadUniqBy = _this$props.payloadUniqBy, position = _this$props.position, reverseDirection = _this$props.reverseDirection, useTranslate3d = _this$props.useTranslate3d, viewBox = _this$props.viewBox, wrapperStyle = _this$props.wrapperStyle;
      var finalPayload = payload !== null && payload !== void 0 ? payload : [];
      if (filterNull && finalPayload.length) {
        finalPayload = getUniqPayload(payload.filter(function(entry) {
          return entry.value != null && (entry.hide !== true || _this.props.includeHidden);
        }), payloadUniqBy, defaultUniqBy);
      }
      var hasPayload = finalPayload.length > 0;
      return /* @__PURE__ */ React.createElement(TooltipBoundingBox, {
        allowEscapeViewBox,
        animationDuration,
        animationEasing,
        isAnimationActive,
        active,
        coordinate,
        hasPayload,
        offset: offset2,
        position,
        reverseDirection,
        useTranslate3d,
        viewBox,
        wrapperStyle
      }, renderContent(content, _objectSpread$t(_objectSpread$t({}, this.props), {}, {
        payload: finalPayload
      })));
    }
  }]);
  return Tooltip2;
}(reactExports.PureComponent);
_defineProperty$v(Tooltip, "displayName", "Tooltip");
_defineProperty$v(Tooltip, "defaultProps", {
  accessibilityLayer: false,
  allowEscapeViewBox: {
    x: false,
    y: false
  },
  animationDuration: 400,
  animationEasing: "ease",
  contentStyle: {},
  coordinate: {
    x: 0,
    y: 0
  },
  cursor: true,
  cursorStyle: {},
  filterNull: true,
  isAnimationActive: !Global.isSsr,
  itemStyle: {},
  labelStyle: {},
  offset: 10,
  reverseDirection: {
    x: false,
    y: false
  },
  separator: " : ",
  trigger: "hover",
  useTranslate3d: false,
  viewBox: {
    x: 0,
    y: 0,
    height: 0,
    width: 0
  },
  wrapperStyle: {}
});
var root$2 = _root;
var now$2 = function() {
  return root$2.Date.now();
};
var now_1 = now$2;
var reWhitespace = /\s/;
function trimmedEndIndex$1(string2) {
  var index2 = string2.length;
  while (index2-- && reWhitespace.test(string2.charAt(index2))) {
  }
  return index2;
}
var _trimmedEndIndex = trimmedEndIndex$1;
var trimmedEndIndex = _trimmedEndIndex;
var reTrimStart = /^\s+/;
function baseTrim$1(string2) {
  return string2 ? string2.slice(0, trimmedEndIndex(string2) + 1).replace(reTrimStart, "") : string2;
}
var _baseTrim = baseTrim$1;
var baseTrim = _baseTrim, isObject$3 = isObject_1, isSymbol$1 = isSymbol_1;
var NAN = 0 / 0;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
function toNumber$2(value) {
  if (typeof value == "number") {
    return value;
  }
  if (isSymbol$1(value)) {
    return NAN;
  }
  if (isObject$3(value)) {
    var other = typeof value.valueOf == "function" ? value.valueOf() : value;
    value = isObject$3(other) ? other + "" : other;
  }
  if (typeof value != "string") {
    return value === 0 ? value : +value;
  }
  value = baseTrim(value);
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}
var toNumber_1 = toNumber$2;
var isObject$2 = isObject_1, now$1 = now_1, toNumber$1 = toNumber_1;
var FUNC_ERROR_TEXT$1 = "Expected a function";
var nativeMax$2 = Math.max, nativeMin = Math.min;
function debounce$1(func, wait, options) {
  var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT$1);
  }
  wait = toNumber$1(wait) || 0;
  if (isObject$2(options)) {
    leading = !!options.leading;
    maxing = "maxWait" in options;
    maxWait = maxing ? nativeMax$2(toNumber$1(options.maxWait) || 0, wait) : maxWait;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  function invokeFunc(time2) {
    var args = lastArgs, thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time2;
    result = func.apply(thisArg, args);
    return result;
  }
  function leadingEdge(time2) {
    lastInvokeTime = time2;
    timerId = setTimeout(timerExpired, wait);
    return leading ? invokeFunc(time2) : result;
  }
  function remainingWait(time2) {
    var timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time2) {
    var timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time2 = now$1();
    if (shouldInvoke(time2)) {
      return trailingEdge(time2);
    }
    timerId = setTimeout(timerExpired, remainingWait(time2));
  }
  function trailingEdge(time2) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time2);
    }
    lastArgs = lastThis = void 0;
    return result;
  }
  function cancel() {
    if (timerId !== void 0) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result : trailingEdge(now$1());
  }
  function debounced() {
    var time2 = now$1(), isInvoking = shouldInvoke(time2);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time2;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}
var debounce_1 = debounce$1;
var debounce = debounce_1, isObject$1 = isObject_1;
var FUNC_ERROR_TEXT = "Expected a function";
function throttle(func, wait, options) {
  var leading = true, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject$1(options)) {
    leading = "leading" in options ? !!options.leading : leading;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  return debounce(func, wait, {
    "leading": leading,
    "maxWait": wait,
    "trailing": trailing
  });
}
var throttle_1 = throttle;
const throttle$1 = /* @__PURE__ */ getDefaultExportFromCjs(throttle_1);
var Cell = function Cell2(_props) {
  return null;
};
Cell.displayName = "Cell";
function _typeof$w(o2) {
  "@babel/helpers - typeof";
  return _typeof$w = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$w(o2);
}
function ownKeys$t(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$s(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$t(Object(t2), true).forEach(function(r3) {
      _defineProperty$u(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$t(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$u(obj, key, value) {
  key = _toPropertyKey$u(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$u(t2) {
  var i2 = _toPrimitive$u(t2, "string");
  return "symbol" == _typeof$w(i2) ? i2 : String(i2);
}
function _toPrimitive$u(t2, r2) {
  if ("object" != _typeof$w(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$w(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var stringCache = {
  widthCache: {},
  cacheCount: 0
};
var MAX_CACHE_NUM = 2e3;
var SPAN_STYLE = {
  position: "absolute",
  top: "-20000px",
  left: 0,
  padding: 0,
  margin: 0,
  border: "none",
  whiteSpace: "pre"
};
var MEASUREMENT_SPAN_ID = "recharts_measurement_span";
function removeInvalidKeys(obj) {
  var copyObj = _objectSpread$s({}, obj);
  Object.keys(copyObj).forEach(function(key) {
    if (!copyObj[key]) {
      delete copyObj[key];
    }
  });
  return copyObj;
}
var getStringSize = function getStringSize2(text2) {
  var style = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  if (text2 === void 0 || text2 === null || Global.isSsr) {
    return {
      width: 0,
      height: 0
    };
  }
  var copyStyle = removeInvalidKeys(style);
  var cacheKey = JSON.stringify({
    text: text2,
    copyStyle
  });
  if (stringCache.widthCache[cacheKey]) {
    return stringCache.widthCache[cacheKey];
  }
  try {
    var measurementSpan = document.getElementById(MEASUREMENT_SPAN_ID);
    if (!measurementSpan) {
      measurementSpan = document.createElement("span");
      measurementSpan.setAttribute("id", MEASUREMENT_SPAN_ID);
      measurementSpan.setAttribute("aria-hidden", "true");
      document.body.appendChild(measurementSpan);
    }
    var measurementSpanStyle = _objectSpread$s(_objectSpread$s({}, SPAN_STYLE), copyStyle);
    Object.assign(measurementSpan.style, measurementSpanStyle);
    measurementSpan.textContent = "".concat(text2);
    var rect = measurementSpan.getBoundingClientRect();
    var result = {
      width: rect.width,
      height: rect.height
    };
    stringCache.widthCache[cacheKey] = result;
    if (++stringCache.cacheCount > MAX_CACHE_NUM) {
      stringCache.cacheCount = 0;
      stringCache.widthCache = {};
    }
    return result;
  } catch (e3) {
    return {
      width: 0,
      height: 0
    };
  }
};
var getOffset = function getOffset2(rect) {
  return {
    top: rect.top + window.scrollY - document.documentElement.clientTop,
    left: rect.left + window.scrollX - document.documentElement.clientLeft
  };
};
function _typeof$v(o2) {
  "@babel/helpers - typeof";
  return _typeof$v = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$v(o2);
}
function _slicedToArray$a(arr, i2) {
  return _arrayWithHoles$b(arr) || _iterableToArrayLimit$a(arr, i2) || _unsupportedIterableToArray$i(arr, i2) || _nonIterableRest$b();
}
function _nonIterableRest$b() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$i(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$i(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$i(o2, minLen);
}
function _arrayLikeToArray$i(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function _iterableToArrayLimit$a(r2, l2) {
  var t2 = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
  if (null != t2) {
    var e3, n2, i2, u2, a2 = [], f2 = true, o2 = false;
    try {
      if (i2 = (t2 = t2.call(r2)).next, 0 === l2) {
        if (Object(t2) !== t2)
          return;
        f2 = false;
      } else
        for (; !(f2 = (e3 = i2.call(t2)).done) && (a2.push(e3.value), a2.length !== l2); f2 = true)
          ;
    } catch (r3) {
      o2 = true, n2 = r3;
    } finally {
      try {
        if (!f2 && null != t2["return"] && (u2 = t2["return"](), Object(u2) !== u2))
          return;
      } finally {
        if (o2)
          throw n2;
      }
    }
    return a2;
  }
}
function _arrayWithHoles$b(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _classCallCheck$8(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$8(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey$t(descriptor.key), descriptor);
  }
}
function _createClass$8(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$8(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$8(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey$t(t2) {
  var i2 = _toPrimitive$t(t2, "string");
  return "symbol" == _typeof$v(i2) ? i2 : String(i2);
}
function _toPrimitive$t(t2, r2) {
  if ("object" != _typeof$v(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$v(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var MULTIPLY_OR_DIVIDE_REGEX = /(-?\d+(?:\.\d+)?[a-zA-Z%]*)([*/])(-?\d+(?:\.\d+)?[a-zA-Z%]*)/;
var ADD_OR_SUBTRACT_REGEX = /(-?\d+(?:\.\d+)?[a-zA-Z%]*)([+-])(-?\d+(?:\.\d+)?[a-zA-Z%]*)/;
var CSS_LENGTH_UNIT_REGEX = /^px|cm|vh|vw|em|rem|%|mm|in|pt|pc|ex|ch|vmin|vmax|Q$/;
var NUM_SPLIT_REGEX = /(-?\d+(?:\.\d+)?)([a-zA-Z%]+)?/;
var CONVERSION_RATES = {
  cm: 96 / 2.54,
  mm: 96 / 25.4,
  pt: 96 / 72,
  pc: 96 / 6,
  "in": 96,
  Q: 96 / (2.54 * 40),
  px: 1
};
var FIXED_CSS_LENGTH_UNITS = Object.keys(CONVERSION_RATES);
var STR_NAN = "NaN";
function convertToPx(value, unit2) {
  return value * CONVERSION_RATES[unit2];
}
var DecimalCSS = /* @__PURE__ */ function() {
  function DecimalCSS2(num, unit2) {
    _classCallCheck$8(this, DecimalCSS2);
    this.num = num;
    this.unit = unit2;
    this.num = num;
    this.unit = unit2;
    if (Number.isNaN(num)) {
      this.unit = "";
    }
    if (unit2 !== "" && !CSS_LENGTH_UNIT_REGEX.test(unit2)) {
      this.num = NaN;
      this.unit = "";
    }
    if (FIXED_CSS_LENGTH_UNITS.includes(unit2)) {
      this.num = convertToPx(num, unit2);
      this.unit = "px";
    }
  }
  _createClass$8(DecimalCSS2, [{
    key: "add",
    value: function add2(other) {
      if (this.unit !== other.unit) {
        return new DecimalCSS2(NaN, "");
      }
      return new DecimalCSS2(this.num + other.num, this.unit);
    }
  }, {
    key: "subtract",
    value: function subtract2(other) {
      if (this.unit !== other.unit) {
        return new DecimalCSS2(NaN, "");
      }
      return new DecimalCSS2(this.num - other.num, this.unit);
    }
  }, {
    key: "multiply",
    value: function multiply(other) {
      if (this.unit !== "" && other.unit !== "" && this.unit !== other.unit) {
        return new DecimalCSS2(NaN, "");
      }
      return new DecimalCSS2(this.num * other.num, this.unit || other.unit);
    }
  }, {
    key: "divide",
    value: function divide2(other) {
      if (this.unit !== "" && other.unit !== "" && this.unit !== other.unit) {
        return new DecimalCSS2(NaN, "");
      }
      return new DecimalCSS2(this.num / other.num, this.unit || other.unit);
    }
  }, {
    key: "toString",
    value: function toString2() {
      return "".concat(this.num).concat(this.unit);
    }
  }, {
    key: "isNaN",
    value: function isNaN2() {
      return Number.isNaN(this.num);
    }
  }], [{
    key: "parse",
    value: function parse2(str) {
      var _NUM_SPLIT_REGEX$exec;
      var _ref = (_NUM_SPLIT_REGEX$exec = NUM_SPLIT_REGEX.exec(str)) !== null && _NUM_SPLIT_REGEX$exec !== void 0 ? _NUM_SPLIT_REGEX$exec : [], _ref2 = _slicedToArray$a(_ref, 3), numStr = _ref2[1], unit2 = _ref2[2];
      return new DecimalCSS2(parseFloat(numStr), unit2 !== null && unit2 !== void 0 ? unit2 : "");
    }
  }]);
  return DecimalCSS2;
}();
function calculateArithmetic(expr) {
  if (expr.includes(STR_NAN)) {
    return STR_NAN;
  }
  var newExpr = expr;
  while (newExpr.includes("*") || newExpr.includes("/")) {
    var _MULTIPLY_OR_DIVIDE_R;
    var _ref3 = (_MULTIPLY_OR_DIVIDE_R = MULTIPLY_OR_DIVIDE_REGEX.exec(newExpr)) !== null && _MULTIPLY_OR_DIVIDE_R !== void 0 ? _MULTIPLY_OR_DIVIDE_R : [], _ref4 = _slicedToArray$a(_ref3, 4), leftOperand = _ref4[1], operator = _ref4[2], rightOperand = _ref4[3];
    var lTs = DecimalCSS.parse(leftOperand !== null && leftOperand !== void 0 ? leftOperand : "");
    var rTs = DecimalCSS.parse(rightOperand !== null && rightOperand !== void 0 ? rightOperand : "");
    var result = operator === "*" ? lTs.multiply(rTs) : lTs.divide(rTs);
    if (result.isNaN()) {
      return STR_NAN;
    }
    newExpr = newExpr.replace(MULTIPLY_OR_DIVIDE_REGEX, result.toString());
  }
  while (newExpr.includes("+") || /.-\d+(?:\.\d+)?/.test(newExpr)) {
    var _ADD_OR_SUBTRACT_REGE;
    var _ref5 = (_ADD_OR_SUBTRACT_REGE = ADD_OR_SUBTRACT_REGEX.exec(newExpr)) !== null && _ADD_OR_SUBTRACT_REGE !== void 0 ? _ADD_OR_SUBTRACT_REGE : [], _ref6 = _slicedToArray$a(_ref5, 4), _leftOperand = _ref6[1], _operator = _ref6[2], _rightOperand = _ref6[3];
    var _lTs = DecimalCSS.parse(_leftOperand !== null && _leftOperand !== void 0 ? _leftOperand : "");
    var _rTs = DecimalCSS.parse(_rightOperand !== null && _rightOperand !== void 0 ? _rightOperand : "");
    var _result = _operator === "+" ? _lTs.add(_rTs) : _lTs.subtract(_rTs);
    if (_result.isNaN()) {
      return STR_NAN;
    }
    newExpr = newExpr.replace(ADD_OR_SUBTRACT_REGEX, _result.toString());
  }
  return newExpr;
}
var PARENTHESES_REGEX = /\(([^()]*)\)/;
function calculateParentheses(expr) {
  var newExpr = expr;
  while (newExpr.includes("(")) {
    var _PARENTHESES_REGEX$ex = PARENTHESES_REGEX.exec(newExpr), _PARENTHESES_REGEX$ex2 = _slicedToArray$a(_PARENTHESES_REGEX$ex, 2), parentheticalExpression = _PARENTHESES_REGEX$ex2[1];
    newExpr = newExpr.replace(PARENTHESES_REGEX, calculateArithmetic(parentheticalExpression));
  }
  return newExpr;
}
function evaluateExpression(expression) {
  var newExpr = expression.replace(/\s+/g, "");
  newExpr = calculateParentheses(newExpr);
  newExpr = calculateArithmetic(newExpr);
  return newExpr;
}
function safeEvaluateExpression(expression) {
  try {
    return evaluateExpression(expression);
  } catch (e3) {
    return STR_NAN;
  }
}
function reduceCSSCalc(expression) {
  var result = safeEvaluateExpression(expression.slice(5, -1));
  if (result === STR_NAN) {
    return "";
  }
  return result;
}
var _excluded$o = ["x", "y", "lineHeight", "capHeight", "scaleToFit", "textAnchor", "verticalAnchor", "fill"], _excluded2$4 = ["dx", "dy", "angle", "className", "breakAll"];
function _extends$r() {
  _extends$r = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$r.apply(this, arguments);
}
function _objectWithoutProperties$f(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$e(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$e(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _slicedToArray$9(arr, i2) {
  return _arrayWithHoles$a(arr) || _iterableToArrayLimit$9(arr, i2) || _unsupportedIterableToArray$h(arr, i2) || _nonIterableRest$a();
}
function _nonIterableRest$a() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$h(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$h(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$h(o2, minLen);
}
function _arrayLikeToArray$h(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function _iterableToArrayLimit$9(r2, l2) {
  var t2 = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
  if (null != t2) {
    var e3, n2, i2, u2, a2 = [], f2 = true, o2 = false;
    try {
      if (i2 = (t2 = t2.call(r2)).next, 0 === l2) {
        if (Object(t2) !== t2)
          return;
        f2 = false;
      } else
        for (; !(f2 = (e3 = i2.call(t2)).done) && (a2.push(e3.value), a2.length !== l2); f2 = true)
          ;
    } catch (r3) {
      o2 = true, n2 = r3;
    } finally {
      try {
        if (!f2 && null != t2["return"] && (u2 = t2["return"](), Object(u2) !== u2))
          return;
      } finally {
        if (o2)
          throw n2;
      }
    }
    return a2;
  }
}
function _arrayWithHoles$a(arr) {
  if (Array.isArray(arr))
    return arr;
}
var BREAKING_SPACES = /[ \f\n\r\t\v\u2028\u2029]+/;
var calculateWordWidths = function calculateWordWidths2(_ref) {
  var children2 = _ref.children, breakAll = _ref.breakAll, style = _ref.style;
  try {
    var words = [];
    if (!isNil$1(children2)) {
      if (breakAll) {
        words = children2.toString().split("");
      } else {
        words = children2.toString().split(BREAKING_SPACES);
      }
    }
    var wordsWithComputedWidth = words.map(function(word) {
      return {
        word,
        width: getStringSize(word, style).width
      };
    });
    var spaceWidth = breakAll ? 0 : getStringSize(" ", style).width;
    return {
      wordsWithComputedWidth,
      spaceWidth
    };
  } catch (e3) {
    return null;
  }
};
var calculateWordsByLines = function calculateWordsByLines2(_ref2, initialWordsWithComputedWith, spaceWidth, lineWidth, scaleToFit) {
  var maxLines = _ref2.maxLines, children2 = _ref2.children, style = _ref2.style, breakAll = _ref2.breakAll;
  var shouldLimitLines = isNumber(maxLines);
  var text2 = children2;
  var calculate = function calculate2() {
    var words = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    return words.reduce(function(result2, _ref3) {
      var word = _ref3.word, width = _ref3.width;
      var currentLine = result2[result2.length - 1];
      if (currentLine && (lineWidth == null || scaleToFit || currentLine.width + width + spaceWidth < Number(lineWidth))) {
        currentLine.words.push(word);
        currentLine.width += width + spaceWidth;
      } else {
        var newLine = {
          words: [word],
          width
        };
        result2.push(newLine);
      }
      return result2;
    }, []);
  };
  var originalResult = calculate(initialWordsWithComputedWith);
  var findLongestLine = function findLongestLine2(words) {
    return words.reduce(function(a2, b2) {
      return a2.width > b2.width ? a2 : b2;
    });
  };
  if (!shouldLimitLines) {
    return originalResult;
  }
  var suffix = "…";
  var checkOverflow = function checkOverflow2(index2) {
    var tempText = text2.slice(0, index2);
    var words = calculateWordWidths({
      breakAll,
      style,
      children: tempText + suffix
    }).wordsWithComputedWidth;
    var result2 = calculate(words);
    var doesOverflow = result2.length > maxLines || findLongestLine(result2).width > Number(lineWidth);
    return [doesOverflow, result2];
  };
  var start2 = 0;
  var end = text2.length - 1;
  var iterations2 = 0;
  var trimmedResult;
  while (start2 <= end && iterations2 <= text2.length - 1) {
    var middle = Math.floor((start2 + end) / 2);
    var prev = middle - 1;
    var _checkOverflow = checkOverflow(prev), _checkOverflow2 = _slicedToArray$9(_checkOverflow, 2), doesPrevOverflow = _checkOverflow2[0], result = _checkOverflow2[1];
    var _checkOverflow3 = checkOverflow(middle), _checkOverflow4 = _slicedToArray$9(_checkOverflow3, 1), doesMiddleOverflow = _checkOverflow4[0];
    if (!doesPrevOverflow && !doesMiddleOverflow) {
      start2 = middle + 1;
    }
    if (doesPrevOverflow && doesMiddleOverflow) {
      end = middle - 1;
    }
    if (!doesPrevOverflow && doesMiddleOverflow) {
      trimmedResult = result;
      break;
    }
    iterations2++;
  }
  return trimmedResult || originalResult;
};
var getWordsWithoutCalculate = function getWordsWithoutCalculate2(children2) {
  var words = !isNil$1(children2) ? children2.toString().split(BREAKING_SPACES) : [];
  return [{
    words
  }];
};
var getWordsByLines = function getWordsByLines2(_ref4) {
  var width = _ref4.width, scaleToFit = _ref4.scaleToFit, children2 = _ref4.children, style = _ref4.style, breakAll = _ref4.breakAll, maxLines = _ref4.maxLines;
  if ((width || scaleToFit) && !Global.isSsr) {
    var wordsWithComputedWidth, spaceWidth;
    var wordWidths = calculateWordWidths({
      breakAll,
      children: children2,
      style
    });
    if (wordWidths) {
      var wcw = wordWidths.wordsWithComputedWidth, sw = wordWidths.spaceWidth;
      wordsWithComputedWidth = wcw;
      spaceWidth = sw;
    } else {
      return getWordsWithoutCalculate(children2);
    }
    return calculateWordsByLines({
      breakAll,
      children: children2,
      maxLines,
      style
    }, wordsWithComputedWidth, spaceWidth, width, scaleToFit);
  }
  return getWordsWithoutCalculate(children2);
};
var DEFAULT_FILL = "#808080";
var Text = function Text2(_ref5) {
  var _ref5$x = _ref5.x, propsX = _ref5$x === void 0 ? 0 : _ref5$x, _ref5$y = _ref5.y, propsY = _ref5$y === void 0 ? 0 : _ref5$y, _ref5$lineHeight = _ref5.lineHeight, lineHeight = _ref5$lineHeight === void 0 ? "1em" : _ref5$lineHeight, _ref5$capHeight = _ref5.capHeight, capHeight = _ref5$capHeight === void 0 ? "0.71em" : _ref5$capHeight, _ref5$scaleToFit = _ref5.scaleToFit, scaleToFit = _ref5$scaleToFit === void 0 ? false : _ref5$scaleToFit, _ref5$textAnchor = _ref5.textAnchor, textAnchor = _ref5$textAnchor === void 0 ? "start" : _ref5$textAnchor, _ref5$verticalAnchor = _ref5.verticalAnchor, verticalAnchor = _ref5$verticalAnchor === void 0 ? "end" : _ref5$verticalAnchor, _ref5$fill = _ref5.fill, fill = _ref5$fill === void 0 ? DEFAULT_FILL : _ref5$fill, props = _objectWithoutProperties$f(_ref5, _excluded$o);
  var wordsByLines = reactExports.useMemo(function() {
    return getWordsByLines({
      breakAll: props.breakAll,
      children: props.children,
      maxLines: props.maxLines,
      scaleToFit,
      style: props.style,
      width: props.width
    });
  }, [props.breakAll, props.children, props.maxLines, scaleToFit, props.style, props.width]);
  var dx = props.dx, dy = props.dy, angle2 = props.angle, className = props.className, breakAll = props.breakAll, textProps = _objectWithoutProperties$f(props, _excluded2$4);
  if (!isNumOrStr(propsX) || !isNumOrStr(propsY)) {
    return null;
  }
  var x2 = propsX + (isNumber(dx) ? dx : 0);
  var y2 = propsY + (isNumber(dy) ? dy : 0);
  var startDy;
  switch (verticalAnchor) {
    case "start":
      startDy = reduceCSSCalc("calc(".concat(capHeight, ")"));
      break;
    case "middle":
      startDy = reduceCSSCalc("calc(".concat((wordsByLines.length - 1) / 2, " * -").concat(lineHeight, " + (").concat(capHeight, " / 2))"));
      break;
    default:
      startDy = reduceCSSCalc("calc(".concat(wordsByLines.length - 1, " * -").concat(lineHeight, ")"));
      break;
  }
  var transforms = [];
  if (scaleToFit) {
    var lineWidth = wordsByLines[0].width;
    var width = props.width;
    transforms.push("scale(".concat((isNumber(width) ? width / lineWidth : 1) / lineWidth, ")"));
  }
  if (angle2) {
    transforms.push("rotate(".concat(angle2, ", ").concat(x2, ", ").concat(y2, ")"));
  }
  if (transforms.length) {
    textProps.transform = transforms.join(" ");
  }
  return /* @__PURE__ */ React.createElement("text", _extends$r({}, filterProps(textProps, true), {
    x: x2,
    y: y2,
    className: clsx$1("recharts-text", className),
    textAnchor,
    fill: fill.includes("url") ? DEFAULT_FILL : fill
  }), wordsByLines.map(function(line, index2) {
    var words = line.words.join(breakAll ? "" : " ");
    return /* @__PURE__ */ React.createElement("tspan", {
      x: x2,
      dy: index2 === 0 ? startDy : lineHeight,
      key: words
    }, words);
  }));
};
function ascending$1(a2, b2) {
  return a2 == null || b2 == null ? NaN : a2 < b2 ? -1 : a2 > b2 ? 1 : a2 >= b2 ? 0 : NaN;
}
function descending(a2, b2) {
  return a2 == null || b2 == null ? NaN : b2 < a2 ? -1 : b2 > a2 ? 1 : b2 >= a2 ? 0 : NaN;
}
function bisector(f2) {
  let compare1, compare2, delta;
  if (f2.length !== 2) {
    compare1 = ascending$1;
    compare2 = (d2, x2) => ascending$1(f2(d2), x2);
    delta = (d2, x2) => f2(d2) - x2;
  } else {
    compare1 = f2 === ascending$1 || f2 === descending ? f2 : zero$2;
    compare2 = f2;
    delta = f2;
  }
  function left(a2, x2, lo = 0, hi2 = a2.length) {
    if (lo < hi2) {
      if (compare1(x2, x2) !== 0)
        return hi2;
      do {
        const mid = lo + hi2 >>> 1;
        if (compare2(a2[mid], x2) < 0)
          lo = mid + 1;
        else
          hi2 = mid;
      } while (lo < hi2);
    }
    return lo;
  }
  function right(a2, x2, lo = 0, hi2 = a2.length) {
    if (lo < hi2) {
      if (compare1(x2, x2) !== 0)
        return hi2;
      do {
        const mid = lo + hi2 >>> 1;
        if (compare2(a2[mid], x2) <= 0)
          lo = mid + 1;
        else
          hi2 = mid;
      } while (lo < hi2);
    }
    return lo;
  }
  function center(a2, x2, lo = 0, hi2 = a2.length) {
    const i2 = left(a2, x2, lo, hi2 - 1);
    return i2 > lo && delta(a2[i2 - 1], x2) > -delta(a2[i2], x2) ? i2 - 1 : i2;
  }
  return { left, center, right };
}
function zero$2() {
  return 0;
}
function number$2(x2) {
  return x2 === null ? NaN : +x2;
}
function* numbers(values, valueof) {
  if (valueof === void 0) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        yield value;
      }
    }
  } else {
    let index2 = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index2, values)) != null && (value = +value) >= value) {
        yield value;
      }
    }
  }
}
const ascendingBisect = bisector(ascending$1);
const bisectRight = ascendingBisect.right;
bisector(number$2).center;
class InternMap extends Map {
  constructor(entries, key = keyof) {
    super();
    Object.defineProperties(this, { _intern: { value: /* @__PURE__ */ new Map() }, _key: { value: key } });
    if (entries != null)
      for (const [key2, value] of entries)
        this.set(key2, value);
  }
  get(key) {
    return super.get(intern_get(this, key));
  }
  has(key) {
    return super.has(intern_get(this, key));
  }
  set(key, value) {
    return super.set(intern_set(this, key), value);
  }
  delete(key) {
    return super.delete(intern_delete(this, key));
  }
}
function intern_get({ _intern, _key }, value) {
  const key = _key(value);
  return _intern.has(key) ? _intern.get(key) : value;
}
function intern_set({ _intern, _key }, value) {
  const key = _key(value);
  if (_intern.has(key))
    return _intern.get(key);
  _intern.set(key, value);
  return value;
}
function intern_delete({ _intern, _key }, value) {
  const key = _key(value);
  if (_intern.has(key)) {
    value = _intern.get(key);
    _intern.delete(key);
  }
  return value;
}
function keyof(value) {
  return value !== null && typeof value === "object" ? value.valueOf() : value;
}
function compareDefined(compare = ascending$1) {
  if (compare === ascending$1)
    return ascendingDefined;
  if (typeof compare !== "function")
    throw new TypeError("compare is not a function");
  return (a2, b2) => {
    const x2 = compare(a2, b2);
    if (x2 || x2 === 0)
      return x2;
    return (compare(b2, b2) === 0) - (compare(a2, a2) === 0);
  };
}
function ascendingDefined(a2, b2) {
  return (a2 == null || !(a2 >= a2)) - (b2 == null || !(b2 >= b2)) || (a2 < b2 ? -1 : a2 > b2 ? 1 : 0);
}
const e10 = Math.sqrt(50), e5 = Math.sqrt(10), e2 = Math.sqrt(2);
function tickSpec(start2, stop, count2) {
  const step = (stop - start2) / Math.max(0, count2), power = Math.floor(Math.log10(step)), error = step / Math.pow(10, power), factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;
  let i1, i2, inc;
  if (power < 0) {
    inc = Math.pow(10, -power) / factor;
    i1 = Math.round(start2 * inc);
    i2 = Math.round(stop * inc);
    if (i1 / inc < start2)
      ++i1;
    if (i2 / inc > stop)
      --i2;
    inc = -inc;
  } else {
    inc = Math.pow(10, power) * factor;
    i1 = Math.round(start2 / inc);
    i2 = Math.round(stop / inc);
    if (i1 * inc < start2)
      ++i1;
    if (i2 * inc > stop)
      --i2;
  }
  if (i2 < i1 && 0.5 <= count2 && count2 < 2)
    return tickSpec(start2, stop, count2 * 2);
  return [i1, i2, inc];
}
function ticks(start2, stop, count2) {
  stop = +stop, start2 = +start2, count2 = +count2;
  if (!(count2 > 0))
    return [];
  if (start2 === stop)
    return [start2];
  const reverse3 = stop < start2, [i1, i2, inc] = reverse3 ? tickSpec(stop, start2, count2) : tickSpec(start2, stop, count2);
  if (!(i2 >= i1))
    return [];
  const n2 = i2 - i1 + 1, ticks2 = new Array(n2);
  if (reverse3) {
    if (inc < 0)
      for (let i3 = 0; i3 < n2; ++i3)
        ticks2[i3] = (i2 - i3) / -inc;
    else
      for (let i3 = 0; i3 < n2; ++i3)
        ticks2[i3] = (i2 - i3) * inc;
  } else {
    if (inc < 0)
      for (let i3 = 0; i3 < n2; ++i3)
        ticks2[i3] = (i1 + i3) / -inc;
    else
      for (let i3 = 0; i3 < n2; ++i3)
        ticks2[i3] = (i1 + i3) * inc;
  }
  return ticks2;
}
function tickIncrement(start2, stop, count2) {
  stop = +stop, start2 = +start2, count2 = +count2;
  return tickSpec(start2, stop, count2)[2];
}
function tickStep(start2, stop, count2) {
  stop = +stop, start2 = +start2, count2 = +count2;
  const reverse3 = stop < start2, inc = reverse3 ? tickIncrement(stop, start2, count2) : tickIncrement(start2, stop, count2);
  return (reverse3 ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);
}
function max$2(values, valueof) {
  let max2;
  if (valueof === void 0) {
    for (const value of values) {
      if (value != null && (max2 < value || max2 === void 0 && value >= value)) {
        max2 = value;
      }
    }
  } else {
    let index2 = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index2, values)) != null && (max2 < value || max2 === void 0 && value >= value)) {
        max2 = value;
      }
    }
  }
  return max2;
}
function min$2(values, valueof) {
  let min2;
  if (valueof === void 0) {
    for (const value of values) {
      if (value != null && (min2 > value || min2 === void 0 && value >= value)) {
        min2 = value;
      }
    }
  } else {
    let index2 = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index2, values)) != null && (min2 > value || min2 === void 0 && value >= value)) {
        min2 = value;
      }
    }
  }
  return min2;
}
function quickselect(array2, k2, left = 0, right = Infinity, compare) {
  k2 = Math.floor(k2);
  left = Math.floor(Math.max(0, left));
  right = Math.floor(Math.min(array2.length - 1, right));
  if (!(left <= k2 && k2 <= right))
    return array2;
  compare = compare === void 0 ? ascendingDefined : compareDefined(compare);
  while (right > left) {
    if (right - left > 600) {
      const n2 = right - left + 1;
      const m2 = k2 - left + 1;
      const z2 = Math.log(n2);
      const s2 = 0.5 * Math.exp(2 * z2 / 3);
      const sd2 = 0.5 * Math.sqrt(z2 * s2 * (n2 - s2) / n2) * (m2 - n2 / 2 < 0 ? -1 : 1);
      const newLeft = Math.max(left, Math.floor(k2 - m2 * s2 / n2 + sd2));
      const newRight = Math.min(right, Math.floor(k2 + (n2 - m2) * s2 / n2 + sd2));
      quickselect(array2, k2, newLeft, newRight, compare);
    }
    const t2 = array2[k2];
    let i2 = left;
    let j = right;
    swap(array2, left, k2);
    if (compare(array2[right], t2) > 0)
      swap(array2, left, right);
    while (i2 < j) {
      swap(array2, i2, j), ++i2, --j;
      while (compare(array2[i2], t2) < 0)
        ++i2;
      while (compare(array2[j], t2) > 0)
        --j;
    }
    if (compare(array2[left], t2) === 0)
      swap(array2, left, j);
    else
      ++j, swap(array2, j, right);
    if (j <= k2)
      left = j + 1;
    if (k2 <= j)
      right = j - 1;
  }
  return array2;
}
function swap(array2, i2, j) {
  const t2 = array2[i2];
  array2[i2] = array2[j];
  array2[j] = t2;
}
function quantile$1(values, p2, valueof) {
  values = Float64Array.from(numbers(values, valueof));
  if (!(n2 = values.length) || isNaN(p2 = +p2))
    return;
  if (p2 <= 0 || n2 < 2)
    return min$2(values);
  if (p2 >= 1)
    return max$2(values);
  var n2, i2 = (n2 - 1) * p2, i0 = Math.floor(i2), value0 = max$2(quickselect(values, i0).subarray(0, i0 + 1)), value1 = min$2(values.subarray(i0 + 1));
  return value0 + (value1 - value0) * (i2 - i0);
}
function quantileSorted(values, p2, valueof = number$2) {
  if (!(n2 = values.length) || isNaN(p2 = +p2))
    return;
  if (p2 <= 0 || n2 < 2)
    return +valueof(values[0], 0, values);
  if (p2 >= 1)
    return +valueof(values[n2 - 1], n2 - 1, values);
  var n2, i2 = (n2 - 1) * p2, i0 = Math.floor(i2), value0 = +valueof(values[i0], i0, values), value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i2 - i0);
}
function range$5(start2, stop, step) {
  start2 = +start2, stop = +stop, step = (n2 = arguments.length) < 2 ? (stop = start2, start2 = 0, 1) : n2 < 3 ? 1 : +step;
  var i2 = -1, n2 = Math.max(0, Math.ceil((stop - start2) / step)) | 0, range3 = new Array(n2);
  while (++i2 < n2) {
    range3[i2] = start2 + i2 * step;
  }
  return range3;
}
function initRange(domain, range3) {
  switch (arguments.length) {
    case 0:
      break;
    case 1:
      this.range(domain);
      break;
    default:
      this.range(range3).domain(domain);
      break;
  }
  return this;
}
function initInterpolator(domain, interpolator) {
  switch (arguments.length) {
    case 0:
      break;
    case 1: {
      if (typeof domain === "function")
        this.interpolator(domain);
      else
        this.range(domain);
      break;
    }
    default: {
      this.domain(domain);
      if (typeof interpolator === "function")
        this.interpolator(interpolator);
      else
        this.range(interpolator);
      break;
    }
  }
  return this;
}
const implicit = Symbol("implicit");
function ordinal() {
  var index2 = new InternMap(), domain = [], range3 = [], unknown = implicit;
  function scale(d2) {
    let i2 = index2.get(d2);
    if (i2 === void 0) {
      if (unknown !== implicit)
        return unknown;
      index2.set(d2, i2 = domain.push(d2) - 1);
    }
    return range3[i2 % range3.length];
  }
  scale.domain = function(_) {
    if (!arguments.length)
      return domain.slice();
    domain = [], index2 = new InternMap();
    for (const value of _) {
      if (index2.has(value))
        continue;
      index2.set(value, domain.push(value) - 1);
    }
    return scale;
  };
  scale.range = function(_) {
    return arguments.length ? (range3 = Array.from(_), scale) : range3.slice();
  };
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };
  scale.copy = function() {
    return ordinal(domain, range3).unknown(unknown);
  };
  initRange.apply(scale, arguments);
  return scale;
}
function band() {
  var scale = ordinal().unknown(void 0), domain = scale.domain, ordinalRange = scale.range, r0 = 0, r1 = 1, step, bandwidth, round2 = false, paddingInner = 0, paddingOuter = 0, align = 0.5;
  delete scale.unknown;
  function rescale() {
    var n2 = domain().length, reverse3 = r1 < r0, start2 = reverse3 ? r1 : r0, stop = reverse3 ? r0 : r1;
    step = (stop - start2) / Math.max(1, n2 - paddingInner + paddingOuter * 2);
    if (round2)
      step = Math.floor(step);
    start2 += (stop - start2 - step * (n2 - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round2)
      start2 = Math.round(start2), bandwidth = Math.round(bandwidth);
    var values = range$5(n2).map(function(i2) {
      return start2 + step * i2;
    });
    return ordinalRange(reverse3 ? values.reverse() : values);
  }
  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };
  scale.range = function(_) {
    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
  };
  scale.rangeRound = function(_) {
    return [r0, r1] = _, r0 = +r0, r1 = +r1, round2 = true, rescale();
  };
  scale.bandwidth = function() {
    return bandwidth;
  };
  scale.step = function() {
    return step;
  };
  scale.round = function(_) {
    return arguments.length ? (round2 = !!_, rescale()) : round2;
  };
  scale.padding = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };
  scale.paddingInner = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };
  scale.paddingOuter = function(_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };
  scale.align = function(_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };
  scale.copy = function() {
    return band(domain(), [r0, r1]).round(round2).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
  };
  return initRange.apply(rescale(), arguments);
}
function pointish(scale) {
  var copy2 = scale.copy;
  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;
  scale.copy = function() {
    return pointish(copy2());
  };
  return scale;
}
function point() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}
function define$1(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}
function extend$1(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition)
    prototype[key] = definition[key];
  return prototype;
}
function Color$1() {
}
var darker$1 = 0.7;
var brighter$1 = 1 / darker$1;
var reI$1 = "\\s*([+-]?\\d+)\\s*", reN$1 = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*", reP$1 = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*", reHex$1 = /^#([0-9a-f]{3,8})$/, reRgbInteger$1 = new RegExp(`^rgb\\(${reI$1},${reI$1},${reI$1}\\)$`), reRgbPercent$1 = new RegExp(`^rgb\\(${reP$1},${reP$1},${reP$1}\\)$`), reRgbaInteger$1 = new RegExp(`^rgba\\(${reI$1},${reI$1},${reI$1},${reN$1}\\)$`), reRgbaPercent$1 = new RegExp(`^rgba\\(${reP$1},${reP$1},${reP$1},${reN$1}\\)$`), reHslPercent$1 = new RegExp(`^hsl\\(${reN$1},${reP$1},${reP$1}\\)$`), reHslaPercent$1 = new RegExp(`^hsla\\(${reN$1},${reP$1},${reP$1},${reN$1}\\)$`);
var named$1 = {
  aliceblue: 15792383,
  antiquewhite: 16444375,
  aqua: 65535,
  aquamarine: 8388564,
  azure: 15794175,
  beige: 16119260,
  bisque: 16770244,
  black: 0,
  blanchedalmond: 16772045,
  blue: 255,
  blueviolet: 9055202,
  brown: 10824234,
  burlywood: 14596231,
  cadetblue: 6266528,
  chartreuse: 8388352,
  chocolate: 13789470,
  coral: 16744272,
  cornflowerblue: 6591981,
  cornsilk: 16775388,
  crimson: 14423100,
  cyan: 65535,
  darkblue: 139,
  darkcyan: 35723,
  darkgoldenrod: 12092939,
  darkgray: 11119017,
  darkgreen: 25600,
  darkgrey: 11119017,
  darkkhaki: 12433259,
  darkmagenta: 9109643,
  darkolivegreen: 5597999,
  darkorange: 16747520,
  darkorchid: 10040012,
  darkred: 9109504,
  darksalmon: 15308410,
  darkseagreen: 9419919,
  darkslateblue: 4734347,
  darkslategray: 3100495,
  darkslategrey: 3100495,
  darkturquoise: 52945,
  darkviolet: 9699539,
  deeppink: 16716947,
  deepskyblue: 49151,
  dimgray: 6908265,
  dimgrey: 6908265,
  dodgerblue: 2003199,
  firebrick: 11674146,
  floralwhite: 16775920,
  forestgreen: 2263842,
  fuchsia: 16711935,
  gainsboro: 14474460,
  ghostwhite: 16316671,
  gold: 16766720,
  goldenrod: 14329120,
  gray: 8421504,
  green: 32768,
  greenyellow: 11403055,
  grey: 8421504,
  honeydew: 15794160,
  hotpink: 16738740,
  indianred: 13458524,
  indigo: 4915330,
  ivory: 16777200,
  khaki: 15787660,
  lavender: 15132410,
  lavenderblush: 16773365,
  lawngreen: 8190976,
  lemonchiffon: 16775885,
  lightblue: 11393254,
  lightcoral: 15761536,
  lightcyan: 14745599,
  lightgoldenrodyellow: 16448210,
  lightgray: 13882323,
  lightgreen: 9498256,
  lightgrey: 13882323,
  lightpink: 16758465,
  lightsalmon: 16752762,
  lightseagreen: 2142890,
  lightskyblue: 8900346,
  lightslategray: 7833753,
  lightslategrey: 7833753,
  lightsteelblue: 11584734,
  lightyellow: 16777184,
  lime: 65280,
  limegreen: 3329330,
  linen: 16445670,
  magenta: 16711935,
  maroon: 8388608,
  mediumaquamarine: 6737322,
  mediumblue: 205,
  mediumorchid: 12211667,
  mediumpurple: 9662683,
  mediumseagreen: 3978097,
  mediumslateblue: 8087790,
  mediumspringgreen: 64154,
  mediumturquoise: 4772300,
  mediumvioletred: 13047173,
  midnightblue: 1644912,
  mintcream: 16121850,
  mistyrose: 16770273,
  moccasin: 16770229,
  navajowhite: 16768685,
  navy: 128,
  oldlace: 16643558,
  olive: 8421376,
  olivedrab: 7048739,
  orange: 16753920,
  orangered: 16729344,
  orchid: 14315734,
  palegoldenrod: 15657130,
  palegreen: 10025880,
  paleturquoise: 11529966,
  palevioletred: 14381203,
  papayawhip: 16773077,
  peachpuff: 16767673,
  peru: 13468991,
  pink: 16761035,
  plum: 14524637,
  powderblue: 11591910,
  purple: 8388736,
  rebeccapurple: 6697881,
  red: 16711680,
  rosybrown: 12357519,
  royalblue: 4286945,
  saddlebrown: 9127187,
  salmon: 16416882,
  sandybrown: 16032864,
  seagreen: 3050327,
  seashell: 16774638,
  sienna: 10506797,
  silver: 12632256,
  skyblue: 8900331,
  slateblue: 6970061,
  slategray: 7372944,
  slategrey: 7372944,
  snow: 16775930,
  springgreen: 65407,
  steelblue: 4620980,
  tan: 13808780,
  teal: 32896,
  thistle: 14204888,
  tomato: 16737095,
  turquoise: 4251856,
  violet: 15631086,
  wheat: 16113331,
  white: 16777215,
  whitesmoke: 16119285,
  yellow: 16776960,
  yellowgreen: 10145074
};
define$1(Color$1, color$1, {
  copy(channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable() {
    return this.rgb().displayable();
  },
  hex: color_formatHex$1,
  // Deprecated! Use color.formatHex.
  formatHex: color_formatHex$1,
  formatHex8: color_formatHex8,
  formatHsl: color_formatHsl$1,
  formatRgb: color_formatRgb$1,
  toString: color_formatRgb$1
});
function color_formatHex$1() {
  return this.rgb().formatHex();
}
function color_formatHex8() {
  return this.rgb().formatHex8();
}
function color_formatHsl$1() {
  return hslConvert$1(this).formatHsl();
}
function color_formatRgb$1() {
  return this.rgb().formatRgb();
}
function color$1(format2) {
  var m2, l2;
  format2 = (format2 + "").trim().toLowerCase();
  return (m2 = reHex$1.exec(format2)) ? (l2 = m2[1].length, m2 = parseInt(m2[1], 16), l2 === 6 ? rgbn$1(m2) : l2 === 3 ? new Rgb$1(m2 >> 8 & 15 | m2 >> 4 & 240, m2 >> 4 & 15 | m2 & 240, (m2 & 15) << 4 | m2 & 15, 1) : l2 === 8 ? rgba$1(m2 >> 24 & 255, m2 >> 16 & 255, m2 >> 8 & 255, (m2 & 255) / 255) : l2 === 4 ? rgba$1(m2 >> 12 & 15 | m2 >> 8 & 240, m2 >> 8 & 15 | m2 >> 4 & 240, m2 >> 4 & 15 | m2 & 240, ((m2 & 15) << 4 | m2 & 15) / 255) : null) : (m2 = reRgbInteger$1.exec(format2)) ? new Rgb$1(m2[1], m2[2], m2[3], 1) : (m2 = reRgbPercent$1.exec(format2)) ? new Rgb$1(m2[1] * 255 / 100, m2[2] * 255 / 100, m2[3] * 255 / 100, 1) : (m2 = reRgbaInteger$1.exec(format2)) ? rgba$1(m2[1], m2[2], m2[3], m2[4]) : (m2 = reRgbaPercent$1.exec(format2)) ? rgba$1(m2[1] * 255 / 100, m2[2] * 255 / 100, m2[3] * 255 / 100, m2[4]) : (m2 = reHslPercent$1.exec(format2)) ? hsla$1(m2[1], m2[2] / 100, m2[3] / 100, 1) : (m2 = reHslaPercent$1.exec(format2)) ? hsla$1(m2[1], m2[2] / 100, m2[3] / 100, m2[4]) : named$1.hasOwnProperty(format2) ? rgbn$1(named$1[format2]) : format2 === "transparent" ? new Rgb$1(NaN, NaN, NaN, 0) : null;
}
function rgbn$1(n2) {
  return new Rgb$1(n2 >> 16 & 255, n2 >> 8 & 255, n2 & 255, 1);
}
function rgba$1(r2, g2, b2, a2) {
  if (a2 <= 0)
    r2 = g2 = b2 = NaN;
  return new Rgb$1(r2, g2, b2, a2);
}
function rgbConvert$1(o2) {
  if (!(o2 instanceof Color$1))
    o2 = color$1(o2);
  if (!o2)
    return new Rgb$1();
  o2 = o2.rgb();
  return new Rgb$1(o2.r, o2.g, o2.b, o2.opacity);
}
function rgb$2(r2, g2, b2, opacity) {
  return arguments.length === 1 ? rgbConvert$1(r2) : new Rgb$1(r2, g2, b2, opacity == null ? 1 : opacity);
}
function Rgb$1(r2, g2, b2, opacity) {
  this.r = +r2;
  this.g = +g2;
  this.b = +b2;
  this.opacity = +opacity;
}
define$1(Rgb$1, rgb$2, extend$1(Color$1, {
  brighter(k2) {
    k2 = k2 == null ? brighter$1 : Math.pow(brighter$1, k2);
    return new Rgb$1(this.r * k2, this.g * k2, this.b * k2, this.opacity);
  },
  darker(k2) {
    k2 = k2 == null ? darker$1 : Math.pow(darker$1, k2);
    return new Rgb$1(this.r * k2, this.g * k2, this.b * k2, this.opacity);
  },
  rgb() {
    return this;
  },
  clamp() {
    return new Rgb$1(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));
  },
  displayable() {
    return -0.5 <= this.r && this.r < 255.5 && (-0.5 <= this.g && this.g < 255.5) && (-0.5 <= this.b && this.b < 255.5) && (0 <= this.opacity && this.opacity <= 1);
  },
  hex: rgb_formatHex$1,
  // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex$1,
  formatHex8: rgb_formatHex8,
  formatRgb: rgb_formatRgb$1,
  toString: rgb_formatRgb$1
}));
function rgb_formatHex$1() {
  return `#${hex$1(this.r)}${hex$1(this.g)}${hex$1(this.b)}`;
}
function rgb_formatHex8() {
  return `#${hex$1(this.r)}${hex$1(this.g)}${hex$1(this.b)}${hex$1((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
}
function rgb_formatRgb$1() {
  const a2 = clampa(this.opacity);
  return `${a2 === 1 ? "rgb(" : "rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a2 === 1 ? ")" : `, ${a2})`}`;
}
function clampa(opacity) {
  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));
}
function clampi(value) {
  return Math.max(0, Math.min(255, Math.round(value) || 0));
}
function hex$1(value) {
  value = clampi(value);
  return (value < 16 ? "0" : "") + value.toString(16);
}
function hsla$1(h2, s2, l2, a2) {
  if (a2 <= 0)
    h2 = s2 = l2 = NaN;
  else if (l2 <= 0 || l2 >= 1)
    h2 = s2 = NaN;
  else if (s2 <= 0)
    h2 = NaN;
  return new Hsl$1(h2, s2, l2, a2);
}
function hslConvert$1(o2) {
  if (o2 instanceof Hsl$1)
    return new Hsl$1(o2.h, o2.s, o2.l, o2.opacity);
  if (!(o2 instanceof Color$1))
    o2 = color$1(o2);
  if (!o2)
    return new Hsl$1();
  if (o2 instanceof Hsl$1)
    return o2;
  o2 = o2.rgb();
  var r2 = o2.r / 255, g2 = o2.g / 255, b2 = o2.b / 255, min2 = Math.min(r2, g2, b2), max2 = Math.max(r2, g2, b2), h2 = NaN, s2 = max2 - min2, l2 = (max2 + min2) / 2;
  if (s2) {
    if (r2 === max2)
      h2 = (g2 - b2) / s2 + (g2 < b2) * 6;
    else if (g2 === max2)
      h2 = (b2 - r2) / s2 + 2;
    else
      h2 = (r2 - g2) / s2 + 4;
    s2 /= l2 < 0.5 ? max2 + min2 : 2 - max2 - min2;
    h2 *= 60;
  } else {
    s2 = l2 > 0 && l2 < 1 ? 0 : h2;
  }
  return new Hsl$1(h2, s2, l2, o2.opacity);
}
function hsl$1(h2, s2, l2, opacity) {
  return arguments.length === 1 ? hslConvert$1(h2) : new Hsl$1(h2, s2, l2, opacity == null ? 1 : opacity);
}
function Hsl$1(h2, s2, l2, opacity) {
  this.h = +h2;
  this.s = +s2;
  this.l = +l2;
  this.opacity = +opacity;
}
define$1(Hsl$1, hsl$1, extend$1(Color$1, {
  brighter(k2) {
    k2 = k2 == null ? brighter$1 : Math.pow(brighter$1, k2);
    return new Hsl$1(this.h, this.s, this.l * k2, this.opacity);
  },
  darker(k2) {
    k2 = k2 == null ? darker$1 : Math.pow(darker$1, k2);
    return new Hsl$1(this.h, this.s, this.l * k2, this.opacity);
  },
  rgb() {
    var h2 = this.h % 360 + (this.h < 0) * 360, s2 = isNaN(h2) || isNaN(this.s) ? 0 : this.s, l2 = this.l, m2 = l2 + (l2 < 0.5 ? l2 : 1 - l2) * s2, m1 = 2 * l2 - m2;
    return new Rgb$1(
      hsl2rgb$1(h2 >= 240 ? h2 - 240 : h2 + 120, m1, m2),
      hsl2rgb$1(h2, m1, m2),
      hsl2rgb$1(h2 < 120 ? h2 + 240 : h2 - 120, m1, m2),
      this.opacity
    );
  },
  clamp() {
    return new Hsl$1(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));
  },
  displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && (0 <= this.l && this.l <= 1) && (0 <= this.opacity && this.opacity <= 1);
  },
  formatHsl() {
    const a2 = clampa(this.opacity);
    return `${a2 === 1 ? "hsl(" : "hsla("}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a2 === 1 ? ")" : `, ${a2})`}`;
  }
}));
function clamph(value) {
  value = (value || 0) % 360;
  return value < 0 ? value + 360 : value;
}
function clampt(value) {
  return Math.max(0, Math.min(1, value || 0));
}
function hsl2rgb$1(h2, m1, m2) {
  return (h2 < 60 ? m1 + (m2 - m1) * h2 / 60 : h2 < 180 ? m2 : h2 < 240 ? m1 + (m2 - m1) * (240 - h2) / 60 : m1) * 255;
}
const constant$4 = (x2) => () => x2;
function linear$2(a2, d2) {
  return function(t2) {
    return a2 + t2 * d2;
  };
}
function exponential$1(a2, b2, y2) {
  return a2 = Math.pow(a2, y2), b2 = Math.pow(b2, y2) - a2, y2 = 1 / y2, function(t2) {
    return Math.pow(a2 + t2 * b2, y2);
  };
}
function gamma$1(y2) {
  return (y2 = +y2) === 1 ? nogamma$1 : function(a2, b2) {
    return b2 - a2 ? exponential$1(a2, b2, y2) : constant$4(isNaN(a2) ? b2 : a2);
  };
}
function nogamma$1(a2, b2) {
  var d2 = b2 - a2;
  return d2 ? linear$2(a2, d2) : constant$4(isNaN(a2) ? b2 : a2);
}
const rgb$1 = function rgbGamma(y2) {
  var color2 = gamma$1(y2);
  function rgb2(start2, end) {
    var r2 = color2((start2 = rgb$2(start2)).r, (end = rgb$2(end)).r), g2 = color2(start2.g, end.g), b2 = color2(start2.b, end.b), opacity = nogamma$1(start2.opacity, end.opacity);
    return function(t2) {
      start2.r = r2(t2);
      start2.g = g2(t2);
      start2.b = b2(t2);
      start2.opacity = opacity(t2);
      return start2 + "";
    };
  }
  rgb2.gamma = rgbGamma;
  return rgb2;
}(1);
function numberArray(a2, b2) {
  if (!b2)
    b2 = [];
  var n2 = a2 ? Math.min(b2.length, a2.length) : 0, c2 = b2.slice(), i2;
  return function(t2) {
    for (i2 = 0; i2 < n2; ++i2)
      c2[i2] = a2[i2] * (1 - t2) + b2[i2] * t2;
    return c2;
  };
}
function isNumberArray(x2) {
  return ArrayBuffer.isView(x2) && !(x2 instanceof DataView);
}
function genericArray(a2, b2) {
  var nb2 = b2 ? b2.length : 0, na = a2 ? Math.min(nb2, a2.length) : 0, x2 = new Array(na), c2 = new Array(nb2), i2;
  for (i2 = 0; i2 < na; ++i2)
    x2[i2] = interpolate$2(a2[i2], b2[i2]);
  for (; i2 < nb2; ++i2)
    c2[i2] = b2[i2];
  return function(t2) {
    for (i2 = 0; i2 < na; ++i2)
      c2[i2] = x2[i2](t2);
    return c2;
  };
}
function date$1(a2, b2) {
  var d2 = /* @__PURE__ */ new Date();
  return a2 = +a2, b2 = +b2, function(t2) {
    return d2.setTime(a2 * (1 - t2) + b2 * t2), d2;
  };
}
function interpolateNumber$2(a2, b2) {
  return a2 = +a2, b2 = +b2, function(t2) {
    return a2 * (1 - t2) + b2 * t2;
  };
}
function object$2(a2, b2) {
  var i2 = {}, c2 = {}, k2;
  if (a2 === null || typeof a2 !== "object")
    a2 = {};
  if (b2 === null || typeof b2 !== "object")
    b2 = {};
  for (k2 in b2) {
    if (k2 in a2) {
      i2[k2] = interpolate$2(a2[k2], b2[k2]);
    } else {
      c2[k2] = b2[k2];
    }
  }
  return function(t2) {
    for (k2 in i2)
      c2[k2] = i2[k2](t2);
    return c2;
  };
}
var reA$1 = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, reB$1 = new RegExp(reA$1.source, "g");
function zero$1(b2) {
  return function() {
    return b2;
  };
}
function one$1(b2) {
  return function(t2) {
    return b2(t2) + "";
  };
}
function string(a2, b2) {
  var bi2 = reA$1.lastIndex = reB$1.lastIndex = 0, am, bm, bs, i2 = -1, s2 = [], q2 = [];
  a2 = a2 + "", b2 = b2 + "";
  while ((am = reA$1.exec(a2)) && (bm = reB$1.exec(b2))) {
    if ((bs = bm.index) > bi2) {
      bs = b2.slice(bi2, bs);
      if (s2[i2])
        s2[i2] += bs;
      else
        s2[++i2] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) {
      if (s2[i2])
        s2[i2] += bm;
      else
        s2[++i2] = bm;
    } else {
      s2[++i2] = null;
      q2.push({ i: i2, x: interpolateNumber$2(am, bm) });
    }
    bi2 = reB$1.lastIndex;
  }
  if (bi2 < b2.length) {
    bs = b2.slice(bi2);
    if (s2[i2])
      s2[i2] += bs;
    else
      s2[++i2] = bs;
  }
  return s2.length < 2 ? q2[0] ? one$1(q2[0].x) : zero$1(b2) : (b2 = q2.length, function(t2) {
    for (var i3 = 0, o2; i3 < b2; ++i3)
      s2[(o2 = q2[i3]).i] = o2.x(t2);
    return s2.join("");
  });
}
function interpolate$2(a2, b2) {
  var t2 = typeof b2, c2;
  return b2 == null || t2 === "boolean" ? constant$4(b2) : (t2 === "number" ? interpolateNumber$2 : t2 === "string" ? (c2 = color$1(b2)) ? (b2 = c2, rgb$1) : string : b2 instanceof color$1 ? rgb$1 : b2 instanceof Date ? date$1 : isNumberArray(b2) ? numberArray : Array.isArray(b2) ? genericArray : typeof b2.valueOf !== "function" && typeof b2.toString !== "function" || isNaN(b2) ? object$2 : interpolateNumber$2)(a2, b2);
}
function interpolateRound(a2, b2) {
  return a2 = +a2, b2 = +b2, function(t2) {
    return Math.round(a2 * (1 - t2) + b2 * t2);
  };
}
function piecewise(interpolate2, values) {
  if (values === void 0)
    values = interpolate2, interpolate2 = interpolate$2;
  var i2 = 0, n2 = values.length - 1, v2 = values[0], I2 = new Array(n2 < 0 ? 0 : n2);
  while (i2 < n2)
    I2[i2] = interpolate2(v2, v2 = values[++i2]);
  return function(t2) {
    var i3 = Math.max(0, Math.min(n2 - 1, Math.floor(t2 *= n2)));
    return I2[i3](t2 - i3);
  };
}
function constants(x2) {
  return function() {
    return x2;
  };
}
function number$1(x2) {
  return +x2;
}
var unit = [0, 1];
function identity$b(x2) {
  return x2;
}
function normalize(a2, b2) {
  return (b2 -= a2 = +a2) ? function(x2) {
    return (x2 - a2) / b2;
  } : constants(isNaN(b2) ? NaN : 0.5);
}
function clamper(a2, b2) {
  var t2;
  if (a2 > b2)
    t2 = a2, a2 = b2, b2 = t2;
  return function(x2) {
    return Math.max(a2, Math.min(b2, x2));
  };
}
function bimap(domain, range3, interpolate2) {
  var d0 = domain[0], d1 = domain[1], r0 = range3[0], r1 = range3[1];
  if (d1 < d0)
    d0 = normalize(d1, d0), r0 = interpolate2(r1, r0);
  else
    d0 = normalize(d0, d1), r0 = interpolate2(r0, r1);
  return function(x2) {
    return r0(d0(x2));
  };
}
function polymap(domain, range3, interpolate2) {
  var j = Math.min(domain.length, range3.length) - 1, d2 = new Array(j), r2 = new Array(j), i2 = -1;
  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range3 = range3.slice().reverse();
  }
  while (++i2 < j) {
    d2[i2] = normalize(domain[i2], domain[i2 + 1]);
    r2[i2] = interpolate2(range3[i2], range3[i2 + 1]);
  }
  return function(x2) {
    var i3 = bisectRight(domain, x2, 1, j) - 1;
    return r2[i3](d2[i3](x2));
  };
}
function copy$1(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}
function transformer$3() {
  var domain = unit, range3 = unit, interpolate2 = interpolate$2, transform2, untransform, unknown, clamp2 = identity$b, piecewise2, output, input;
  function rescale() {
    var n2 = Math.min(domain.length, range3.length);
    if (clamp2 !== identity$b)
      clamp2 = clamper(domain[0], domain[n2 - 1]);
    piecewise2 = n2 > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }
  function scale(x2) {
    return x2 == null || isNaN(x2 = +x2) ? unknown : (output || (output = piecewise2(domain.map(transform2), range3, interpolate2)))(transform2(clamp2(x2)));
  }
  scale.invert = function(y2) {
    return clamp2(untransform((input || (input = piecewise2(range3, domain.map(transform2), interpolateNumber$2)))(y2)));
  };
  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_, number$1), rescale()) : domain.slice();
  };
  scale.range = function(_) {
    return arguments.length ? (range3 = Array.from(_), rescale()) : range3.slice();
  };
  scale.rangeRound = function(_) {
    return range3 = Array.from(_), interpolate2 = interpolateRound, rescale();
  };
  scale.clamp = function(_) {
    return arguments.length ? (clamp2 = _ ? true : identity$b, rescale()) : clamp2 !== identity$b;
  };
  scale.interpolate = function(_) {
    return arguments.length ? (interpolate2 = _, rescale()) : interpolate2;
  };
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };
  return function(t2, u2) {
    transform2 = t2, untransform = u2;
    return rescale();
  };
}
function continuous() {
  return transformer$3()(identity$b, identity$b);
}
function formatDecimal(x2) {
  return Math.abs(x2 = Math.round(x2)) >= 1e21 ? x2.toLocaleString("en").replace(/,/g, "") : x2.toString(10);
}
function formatDecimalParts(x2, p2) {
  if ((i2 = (x2 = p2 ? x2.toExponential(p2 - 1) : x2.toExponential()).indexOf("e")) < 0)
    return null;
  var i2, coefficient = x2.slice(0, i2);
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x2.slice(i2 + 1)
  ];
}
function exponent(x2) {
  return x2 = formatDecimalParts(Math.abs(x2)), x2 ? x2[1] : NaN;
}
function formatGroup(grouping, thousands) {
  return function(value, width) {
    var i2 = value.length, t2 = [], j = 0, g2 = grouping[0], length2 = 0;
    while (i2 > 0 && g2 > 0) {
      if (length2 + g2 + 1 > width)
        g2 = Math.max(1, width - length2);
      t2.push(value.substring(i2 -= g2, i2 + g2));
      if ((length2 += g2 + 1) > width)
        break;
      g2 = grouping[j = (j + 1) % grouping.length];
    }
    return t2.reverse().join(thousands);
  };
}
function formatNumerals(numerals) {
  return function(value) {
    return value.replace(/[0-9]/g, function(i2) {
      return numerals[+i2];
    });
  };
}
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier)))
    throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}
formatSpecifier.prototype = FormatSpecifier.prototype;
function FormatSpecifier(specifier) {
  this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
  this.align = specifier.align === void 0 ? ">" : specifier.align + "";
  this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === void 0 ? void 0 : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === void 0 ? "" : specifier.type + "";
}
FormatSpecifier.prototype.toString = function() {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};
function formatTrim(s2) {
  out:
    for (var n2 = s2.length, i2 = 1, i0 = -1, i1; i2 < n2; ++i2) {
      switch (s2[i2]) {
        case ".":
          i0 = i1 = i2;
          break;
        case "0":
          if (i0 === 0)
            i0 = i2;
          i1 = i2;
          break;
        default:
          if (!+s2[i2])
            break out;
          if (i0 > 0)
            i0 = 0;
          break;
      }
    }
  return i0 > 0 ? s2.slice(0, i0) + s2.slice(i1 + 1) : s2;
}
var prefixExponent;
function formatPrefixAuto(x2, p2) {
  var d2 = formatDecimalParts(x2, p2);
  if (!d2)
    return x2 + "";
  var coefficient = d2[0], exponent2 = d2[1], i2 = exponent2 - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent2 / 3))) * 3) + 1, n2 = coefficient.length;
  return i2 === n2 ? coefficient : i2 > n2 ? coefficient + new Array(i2 - n2 + 1).join("0") : i2 > 0 ? coefficient.slice(0, i2) + "." + coefficient.slice(i2) : "0." + new Array(1 - i2).join("0") + formatDecimalParts(x2, Math.max(0, p2 + i2 - 1))[0];
}
function formatRounded(x2, p2) {
  var d2 = formatDecimalParts(x2, p2);
  if (!d2)
    return x2 + "";
  var coefficient = d2[0], exponent2 = d2[1];
  return exponent2 < 0 ? "0." + new Array(-exponent2).join("0") + coefficient : coefficient.length > exponent2 + 1 ? coefficient.slice(0, exponent2 + 1) + "." + coefficient.slice(exponent2 + 1) : coefficient + new Array(exponent2 - coefficient.length + 2).join("0");
}
const formatTypes = {
  "%": (x2, p2) => (x2 * 100).toFixed(p2),
  "b": (x2) => Math.round(x2).toString(2),
  "c": (x2) => x2 + "",
  "d": formatDecimal,
  "e": (x2, p2) => x2.toExponential(p2),
  "f": (x2, p2) => x2.toFixed(p2),
  "g": (x2, p2) => x2.toPrecision(p2),
  "o": (x2) => Math.round(x2).toString(8),
  "p": (x2, p2) => formatRounded(x2 * 100, p2),
  "r": formatRounded,
  "s": formatPrefixAuto,
  "X": (x2) => Math.round(x2).toString(16).toUpperCase(),
  "x": (x2) => Math.round(x2).toString(16)
};
function identity$a(x2) {
  return x2;
}
var map$3 = Array.prototype.map, prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
function formatLocale$1(locale2) {
  var group = locale2.grouping === void 0 || locale2.thousands === void 0 ? identity$a : formatGroup(map$3.call(locale2.grouping, Number), locale2.thousands + ""), currencyPrefix = locale2.currency === void 0 ? "" : locale2.currency[0] + "", currencySuffix = locale2.currency === void 0 ? "" : locale2.currency[1] + "", decimal = locale2.decimal === void 0 ? "." : locale2.decimal + "", numerals = locale2.numerals === void 0 ? identity$a : formatNumerals(map$3.call(locale2.numerals, String)), percent = locale2.percent === void 0 ? "%" : locale2.percent + "", minus = locale2.minus === void 0 ? "−" : locale2.minus + "", nan = locale2.nan === void 0 ? "NaN" : locale2.nan + "";
  function newFormat(specifier) {
    specifier = formatSpecifier(specifier);
    var fill = specifier.fill, align = specifier.align, sign2 = specifier.sign, symbol = specifier.symbol, zero2 = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim = specifier.trim, type2 = specifier.type;
    if (type2 === "n")
      comma = true, type2 = "g";
    else if (!formatTypes[type2])
      precision === void 0 && (precision = 12), trim = true, type2 = "g";
    if (zero2 || fill === "0" && align === "=")
      zero2 = true, fill = "0", align = "=";
    var prefix2 = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type2) ? "0" + type2.toLowerCase() : "", suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type2) ? percent : "";
    var formatType = formatTypes[type2], maybeSuffix = /[defgprs%]/.test(type2);
    precision = precision === void 0 ? 6 : /[gprs]/.test(type2) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
    function format2(value) {
      var valuePrefix = prefix2, valueSuffix = suffix, i2, n2, c2;
      if (type2 === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value;
        var valueNegative = value < 0 || 1 / value < 0;
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);
        if (trim)
          value = formatTrim(value);
        if (valueNegative && +value === 0 && sign2 !== "+")
          valueNegative = false;
        valuePrefix = (valueNegative ? sign2 === "(" ? sign2 : minus : sign2 === "-" || sign2 === "(" ? "" : sign2) + valuePrefix;
        valueSuffix = (type2 === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign2 === "(" ? ")" : "");
        if (maybeSuffix) {
          i2 = -1, n2 = value.length;
          while (++i2 < n2) {
            if (c2 = value.charCodeAt(i2), 48 > c2 || c2 > 57) {
              valueSuffix = (c2 === 46 ? decimal + value.slice(i2 + 1) : value.slice(i2)) + valueSuffix;
              value = value.slice(0, i2);
              break;
            }
          }
        }
      }
      if (comma && !zero2)
        value = group(value, Infinity);
      var length2 = valuePrefix.length + value.length + valueSuffix.length, padding = length2 < width ? new Array(width - length2 + 1).join(fill) : "";
      if (comma && zero2)
        value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;
        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;
        case "^":
          value = padding.slice(0, length2 = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length2);
          break;
        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }
      return numerals(value);
    }
    format2.toString = function() {
      return specifier + "";
    };
    return format2;
  }
  function formatPrefix2(specifier, value) {
    var f2 = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)), e3 = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3, k2 = Math.pow(10, -e3), prefix2 = prefixes[8 + e3 / 3];
    return function(value2) {
      return f2(k2 * value2) + prefix2;
    };
  }
  return {
    format: newFormat,
    formatPrefix: formatPrefix2
  };
}
var locale$1;
var format;
var formatPrefix;
defaultLocale$1({
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});
function defaultLocale$1(definition) {
  locale$1 = formatLocale$1(definition);
  format = locale$1.format;
  formatPrefix = locale$1.formatPrefix;
  return locale$1;
}
function precisionFixed(step) {
  return Math.max(0, -exponent(Math.abs(step)));
}
function precisionPrefix(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));
}
function precisionRound(step, max2) {
  step = Math.abs(step), max2 = Math.abs(max2) - step;
  return Math.max(0, exponent(max2) - exponent(step)) + 1;
}
function tickFormat(start2, stop, count2, specifier) {
  var step = tickStep(start2, stop, count2), precision;
  specifier = formatSpecifier(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value = Math.max(Math.abs(start2), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value)))
        specifier.precision = precision;
      return formatPrefix(specifier, value);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start2), Math.abs(stop)))))
        specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = precisionFixed(step)))
        specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return format(specifier);
}
function linearish(scale) {
  var domain = scale.domain;
  scale.ticks = function(count2) {
    var d2 = domain();
    return ticks(d2[0], d2[d2.length - 1], count2 == null ? 10 : count2);
  };
  scale.tickFormat = function(count2, specifier) {
    var d2 = domain();
    return tickFormat(d2[0], d2[d2.length - 1], count2 == null ? 10 : count2, specifier);
  };
  scale.nice = function(count2) {
    if (count2 == null)
      count2 = 10;
    var d2 = domain();
    var i0 = 0;
    var i1 = d2.length - 1;
    var start2 = d2[i0];
    var stop = d2[i1];
    var prestep;
    var step;
    var maxIter = 10;
    if (stop < start2) {
      step = start2, start2 = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }
    while (maxIter-- > 0) {
      step = tickIncrement(start2, stop, count2);
      if (step === prestep) {
        d2[i0] = start2;
        d2[i1] = stop;
        return domain(d2);
      } else if (step > 0) {
        start2 = Math.floor(start2 / step) * step;
        stop = Math.ceil(stop / step) * step;
      } else if (step < 0) {
        start2 = Math.ceil(start2 * step) / step;
        stop = Math.floor(stop * step) / step;
      } else {
        break;
      }
      prestep = step;
    }
    return scale;
  };
  return scale;
}
function linear$1() {
  var scale = continuous();
  scale.copy = function() {
    return copy$1(scale, linear$1());
  };
  initRange.apply(scale, arguments);
  return linearish(scale);
}
function identity$9(domain) {
  var unknown;
  function scale(x2) {
    return x2 == null || isNaN(x2 = +x2) ? unknown : x2;
  }
  scale.invert = scale;
  scale.domain = scale.range = function(_) {
    return arguments.length ? (domain = Array.from(_, number$1), scale) : domain.slice();
  };
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };
  scale.copy = function() {
    return identity$9(domain).unknown(unknown);
  };
  domain = arguments.length ? Array.from(domain, number$1) : [0, 1];
  return linearish(scale);
}
function nice(domain, interval2) {
  domain = domain.slice();
  var i0 = 0, i1 = domain.length - 1, x02 = domain[i0], x12 = domain[i1], t2;
  if (x12 < x02) {
    t2 = i0, i0 = i1, i1 = t2;
    t2 = x02, x02 = x12, x12 = t2;
  }
  domain[i0] = interval2.floor(x02);
  domain[i1] = interval2.ceil(x12);
  return domain;
}
function transformLog(x2) {
  return Math.log(x2);
}
function transformExp(x2) {
  return Math.exp(x2);
}
function transformLogn(x2) {
  return -Math.log(-x2);
}
function transformExpn(x2) {
  return -Math.exp(-x2);
}
function pow10(x2) {
  return isFinite(x2) ? +("1e" + x2) : x2 < 0 ? 0 : x2;
}
function powp(base) {
  return base === 10 ? pow10 : base === Math.E ? Math.exp : (x2) => Math.pow(base, x2);
}
function logp(base) {
  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), (x2) => Math.log(x2) / base);
}
function reflect(f2) {
  return (x2, k2) => -f2(-x2, k2);
}
function loggish(transform2) {
  const scale = transform2(transformLog, transformExp);
  const domain = scale.domain;
  let base = 10;
  let logs;
  let pows;
  function rescale() {
    logs = logp(base), pows = powp(base);
    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform2(transformLogn, transformExpn);
    } else {
      transform2(transformLog, transformExp);
    }
    return scale;
  }
  scale.base = function(_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };
  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };
  scale.ticks = (count2) => {
    const d2 = domain();
    let u2 = d2[0];
    let v2 = d2[d2.length - 1];
    const r2 = v2 < u2;
    if (r2)
      [u2, v2] = [v2, u2];
    let i2 = logs(u2);
    let j = logs(v2);
    let k2;
    let t2;
    const n2 = count2 == null ? 10 : +count2;
    let z2 = [];
    if (!(base % 1) && j - i2 < n2) {
      i2 = Math.floor(i2), j = Math.ceil(j);
      if (u2 > 0)
        for (; i2 <= j; ++i2) {
          for (k2 = 1; k2 < base; ++k2) {
            t2 = i2 < 0 ? k2 / pows(-i2) : k2 * pows(i2);
            if (t2 < u2)
              continue;
            if (t2 > v2)
              break;
            z2.push(t2);
          }
        }
      else
        for (; i2 <= j; ++i2) {
          for (k2 = base - 1; k2 >= 1; --k2) {
            t2 = i2 > 0 ? k2 / pows(-i2) : k2 * pows(i2);
            if (t2 < u2)
              continue;
            if (t2 > v2)
              break;
            z2.push(t2);
          }
        }
      if (z2.length * 2 < n2)
        z2 = ticks(u2, v2, n2);
    } else {
      z2 = ticks(i2, j, Math.min(j - i2, n2)).map(pows);
    }
    return r2 ? z2.reverse() : z2;
  };
  scale.tickFormat = (count2, specifier) => {
    if (count2 == null)
      count2 = 10;
    if (specifier == null)
      specifier = base === 10 ? "s" : ",";
    if (typeof specifier !== "function") {
      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null)
        specifier.trim = true;
      specifier = format(specifier);
    }
    if (count2 === Infinity)
      return specifier;
    const k2 = Math.max(1, base * count2 / scale.ticks().length);
    return (d2) => {
      let i2 = d2 / pows(Math.round(logs(d2)));
      if (i2 * base < base - 0.5)
        i2 *= base;
      return i2 <= k2 ? specifier(d2) : "";
    };
  };
  scale.nice = () => {
    return domain(nice(domain(), {
      floor: (x2) => pows(Math.floor(logs(x2))),
      ceil: (x2) => pows(Math.ceil(logs(x2)))
    }));
  };
  return scale;
}
function log$1() {
  const scale = loggish(transformer$3()).domain([1, 10]);
  scale.copy = () => copy$1(scale, log$1()).base(scale.base());
  initRange.apply(scale, arguments);
  return scale;
}
function transformSymlog(c2) {
  return function(x2) {
    return Math.sign(x2) * Math.log1p(Math.abs(x2 / c2));
  };
}
function transformSymexp(c2) {
  return function(x2) {
    return Math.sign(x2) * Math.expm1(Math.abs(x2)) * c2;
  };
}
function symlogish(transform2) {
  var c2 = 1, scale = transform2(transformSymlog(c2), transformSymexp(c2));
  scale.constant = function(_) {
    return arguments.length ? transform2(transformSymlog(c2 = +_), transformSymexp(c2)) : c2;
  };
  return linearish(scale);
}
function symlog() {
  var scale = symlogish(transformer$3());
  scale.copy = function() {
    return copy$1(scale, symlog()).constant(scale.constant());
  };
  return initRange.apply(scale, arguments);
}
function transformPow(exponent2) {
  return function(x2) {
    return x2 < 0 ? -Math.pow(-x2, exponent2) : Math.pow(x2, exponent2);
  };
}
function transformSqrt(x2) {
  return x2 < 0 ? -Math.sqrt(-x2) : Math.sqrt(x2);
}
function transformSquare(x2) {
  return x2 < 0 ? -x2 * x2 : x2 * x2;
}
function powish(transform2) {
  var scale = transform2(identity$b, identity$b), exponent2 = 1;
  function rescale() {
    return exponent2 === 1 ? transform2(identity$b, identity$b) : exponent2 === 0.5 ? transform2(transformSqrt, transformSquare) : transform2(transformPow(exponent2), transformPow(1 / exponent2));
  }
  scale.exponent = function(_) {
    return arguments.length ? (exponent2 = +_, rescale()) : exponent2;
  };
  return linearish(scale);
}
function pow$1() {
  var scale = powish(transformer$3());
  scale.copy = function() {
    return copy$1(scale, pow$1()).exponent(scale.exponent());
  };
  initRange.apply(scale, arguments);
  return scale;
}
function sqrt$1() {
  return pow$1.apply(null, arguments).exponent(0.5);
}
function square(x2) {
  return Math.sign(x2) * x2 * x2;
}
function unsquare(x2) {
  return Math.sign(x2) * Math.sqrt(Math.abs(x2));
}
function radial() {
  var squared = continuous(), range3 = [0, 1], round2 = false, unknown;
  function scale(x2) {
    var y2 = unsquare(squared(x2));
    return isNaN(y2) ? unknown : round2 ? Math.round(y2) : y2;
  }
  scale.invert = function(y2) {
    return squared.invert(square(y2));
  };
  scale.domain = function(_) {
    return arguments.length ? (squared.domain(_), scale) : squared.domain();
  };
  scale.range = function(_) {
    return arguments.length ? (squared.range((range3 = Array.from(_, number$1)).map(square)), scale) : range3.slice();
  };
  scale.rangeRound = function(_) {
    return scale.range(_).round(true);
  };
  scale.round = function(_) {
    return arguments.length ? (round2 = !!_, scale) : round2;
  };
  scale.clamp = function(_) {
    return arguments.length ? (squared.clamp(_), scale) : squared.clamp();
  };
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };
  scale.copy = function() {
    return radial(squared.domain(), range3).round(round2).clamp(squared.clamp()).unknown(unknown);
  };
  initRange.apply(scale, arguments);
  return linearish(scale);
}
function quantile() {
  var domain = [], range3 = [], thresholds = [], unknown;
  function rescale() {
    var i2 = 0, n2 = Math.max(1, range3.length);
    thresholds = new Array(n2 - 1);
    while (++i2 < n2)
      thresholds[i2 - 1] = quantileSorted(domain, i2 / n2);
    return scale;
  }
  function scale(x2) {
    return x2 == null || isNaN(x2 = +x2) ? unknown : range3[bisectRight(thresholds, x2)];
  }
  scale.invertExtent = function(y2) {
    var i2 = range3.indexOf(y2);
    return i2 < 0 ? [NaN, NaN] : [
      i2 > 0 ? thresholds[i2 - 1] : domain[0],
      i2 < thresholds.length ? thresholds[i2] : domain[domain.length - 1]
    ];
  };
  scale.domain = function(_) {
    if (!arguments.length)
      return domain.slice();
    domain = [];
    for (let d2 of _)
      if (d2 != null && !isNaN(d2 = +d2))
        domain.push(d2);
    domain.sort(ascending$1);
    return rescale();
  };
  scale.range = function(_) {
    return arguments.length ? (range3 = Array.from(_), rescale()) : range3.slice();
  };
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };
  scale.quantiles = function() {
    return thresholds.slice();
  };
  scale.copy = function() {
    return quantile().domain(domain).range(range3).unknown(unknown);
  };
  return initRange.apply(scale, arguments);
}
function quantize() {
  var x02 = 0, x12 = 1, n2 = 1, domain = [0.5], range3 = [0, 1], unknown;
  function scale(x2) {
    return x2 != null && x2 <= x2 ? range3[bisectRight(domain, x2, 0, n2)] : unknown;
  }
  function rescale() {
    var i2 = -1;
    domain = new Array(n2);
    while (++i2 < n2)
      domain[i2] = ((i2 + 1) * x12 - (i2 - n2) * x02) / (n2 + 1);
    return scale;
  }
  scale.domain = function(_) {
    return arguments.length ? ([x02, x12] = _, x02 = +x02, x12 = +x12, rescale()) : [x02, x12];
  };
  scale.range = function(_) {
    return arguments.length ? (n2 = (range3 = Array.from(_)).length - 1, rescale()) : range3.slice();
  };
  scale.invertExtent = function(y2) {
    var i2 = range3.indexOf(y2);
    return i2 < 0 ? [NaN, NaN] : i2 < 1 ? [x02, domain[0]] : i2 >= n2 ? [domain[n2 - 1], x12] : [domain[i2 - 1], domain[i2]];
  };
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };
  scale.thresholds = function() {
    return domain.slice();
  };
  scale.copy = function() {
    return quantize().domain([x02, x12]).range(range3).unknown(unknown);
  };
  return initRange.apply(linearish(scale), arguments);
}
function threshold() {
  var domain = [0.5], range3 = [0, 1], unknown, n2 = 1;
  function scale(x2) {
    return x2 != null && x2 <= x2 ? range3[bisectRight(domain, x2, 0, n2)] : unknown;
  }
  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_), n2 = Math.min(domain.length, range3.length - 1), scale) : domain.slice();
  };
  scale.range = function(_) {
    return arguments.length ? (range3 = Array.from(_), n2 = Math.min(domain.length, range3.length - 1), scale) : range3.slice();
  };
  scale.invertExtent = function(y2) {
    var i2 = range3.indexOf(y2);
    return [domain[i2 - 1], domain[i2]];
  };
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };
  scale.copy = function() {
    return threshold().domain(domain).range(range3).unknown(unknown);
  };
  return initRange.apply(scale, arguments);
}
const t0 = /* @__PURE__ */ new Date(), t1 = /* @__PURE__ */ new Date();
function timeInterval(floori, offseti, count2, field) {
  function interval2(date2) {
    return floori(date2 = arguments.length === 0 ? /* @__PURE__ */ new Date() : /* @__PURE__ */ new Date(+date2)), date2;
  }
  interval2.floor = (date2) => {
    return floori(date2 = /* @__PURE__ */ new Date(+date2)), date2;
  };
  interval2.ceil = (date2) => {
    return floori(date2 = new Date(date2 - 1)), offseti(date2, 1), floori(date2), date2;
  };
  interval2.round = (date2) => {
    const d0 = interval2(date2), d1 = interval2.ceil(date2);
    return date2 - d0 < d1 - date2 ? d0 : d1;
  };
  interval2.offset = (date2, step) => {
    return offseti(date2 = /* @__PURE__ */ new Date(+date2), step == null ? 1 : Math.floor(step)), date2;
  };
  interval2.range = (start2, stop, step) => {
    const range3 = [];
    start2 = interval2.ceil(start2);
    step = step == null ? 1 : Math.floor(step);
    if (!(start2 < stop) || !(step > 0))
      return range3;
    let previous;
    do
      range3.push(previous = /* @__PURE__ */ new Date(+start2)), offseti(start2, step), floori(start2);
    while (previous < start2 && start2 < stop);
    return range3;
  };
  interval2.filter = (test) => {
    return timeInterval((date2) => {
      if (date2 >= date2)
        while (floori(date2), !test(date2))
          date2.setTime(date2 - 1);
    }, (date2, step) => {
      if (date2 >= date2) {
        if (step < 0)
          while (++step <= 0) {
            while (offseti(date2, -1), !test(date2)) {
            }
          }
        else
          while (--step >= 0) {
            while (offseti(date2, 1), !test(date2)) {
            }
          }
      }
    });
  };
  if (count2) {
    interval2.count = (start2, end) => {
      t0.setTime(+start2), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count2(t0, t1));
    };
    interval2.every = (step) => {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval2 : interval2.filter(field ? (d2) => field(d2) % step === 0 : (d2) => interval2.count(0, d2) % step === 0);
    };
  }
  return interval2;
}
const millisecond = timeInterval(() => {
}, (date2, step) => {
  date2.setTime(+date2 + step);
}, (start2, end) => {
  return end - start2;
});
millisecond.every = (k2) => {
  k2 = Math.floor(k2);
  if (!isFinite(k2) || !(k2 > 0))
    return null;
  if (!(k2 > 1))
    return millisecond;
  return timeInterval((date2) => {
    date2.setTime(Math.floor(date2 / k2) * k2);
  }, (date2, step) => {
    date2.setTime(+date2 + step * k2);
  }, (start2, end) => {
    return (end - start2) / k2;
  });
};
millisecond.range;
const durationSecond = 1e3;
const durationMinute = durationSecond * 60;
const durationHour = durationMinute * 60;
const durationDay = durationHour * 24;
const durationWeek = durationDay * 7;
const durationMonth = durationDay * 30;
const durationYear = durationDay * 365;
const second = timeInterval((date2) => {
  date2.setTime(date2 - date2.getMilliseconds());
}, (date2, step) => {
  date2.setTime(+date2 + step * durationSecond);
}, (start2, end) => {
  return (end - start2) / durationSecond;
}, (date2) => {
  return date2.getUTCSeconds();
});
second.range;
const timeMinute = timeInterval((date2) => {
  date2.setTime(date2 - date2.getMilliseconds() - date2.getSeconds() * durationSecond);
}, (date2, step) => {
  date2.setTime(+date2 + step * durationMinute);
}, (start2, end) => {
  return (end - start2) / durationMinute;
}, (date2) => {
  return date2.getMinutes();
});
timeMinute.range;
const utcMinute = timeInterval((date2) => {
  date2.setUTCSeconds(0, 0);
}, (date2, step) => {
  date2.setTime(+date2 + step * durationMinute);
}, (start2, end) => {
  return (end - start2) / durationMinute;
}, (date2) => {
  return date2.getUTCMinutes();
});
utcMinute.range;
const timeHour = timeInterval((date2) => {
  date2.setTime(date2 - date2.getMilliseconds() - date2.getSeconds() * durationSecond - date2.getMinutes() * durationMinute);
}, (date2, step) => {
  date2.setTime(+date2 + step * durationHour);
}, (start2, end) => {
  return (end - start2) / durationHour;
}, (date2) => {
  return date2.getHours();
});
timeHour.range;
const utcHour = timeInterval((date2) => {
  date2.setUTCMinutes(0, 0, 0);
}, (date2, step) => {
  date2.setTime(+date2 + step * durationHour);
}, (start2, end) => {
  return (end - start2) / durationHour;
}, (date2) => {
  return date2.getUTCHours();
});
utcHour.range;
const timeDay = timeInterval(
  (date2) => date2.setHours(0, 0, 0, 0),
  (date2, step) => date2.setDate(date2.getDate() + step),
  (start2, end) => (end - start2 - (end.getTimezoneOffset() - start2.getTimezoneOffset()) * durationMinute) / durationDay,
  (date2) => date2.getDate() - 1
);
timeDay.range;
const utcDay = timeInterval((date2) => {
  date2.setUTCHours(0, 0, 0, 0);
}, (date2, step) => {
  date2.setUTCDate(date2.getUTCDate() + step);
}, (start2, end) => {
  return (end - start2) / durationDay;
}, (date2) => {
  return date2.getUTCDate() - 1;
});
utcDay.range;
const unixDay = timeInterval((date2) => {
  date2.setUTCHours(0, 0, 0, 0);
}, (date2, step) => {
  date2.setUTCDate(date2.getUTCDate() + step);
}, (start2, end) => {
  return (end - start2) / durationDay;
}, (date2) => {
  return Math.floor(date2 / durationDay);
});
unixDay.range;
function timeWeekday(i2) {
  return timeInterval((date2) => {
    date2.setDate(date2.getDate() - (date2.getDay() + 7 - i2) % 7);
    date2.setHours(0, 0, 0, 0);
  }, (date2, step) => {
    date2.setDate(date2.getDate() + step * 7);
  }, (start2, end) => {
    return (end - start2 - (end.getTimezoneOffset() - start2.getTimezoneOffset()) * durationMinute) / durationWeek;
  });
}
const timeSunday = timeWeekday(0);
const timeMonday = timeWeekday(1);
const timeTuesday = timeWeekday(2);
const timeWednesday = timeWeekday(3);
const timeThursday = timeWeekday(4);
const timeFriday = timeWeekday(5);
const timeSaturday = timeWeekday(6);
timeSunday.range;
timeMonday.range;
timeTuesday.range;
timeWednesday.range;
timeThursday.range;
timeFriday.range;
timeSaturday.range;
function utcWeekday(i2) {
  return timeInterval((date2) => {
    date2.setUTCDate(date2.getUTCDate() - (date2.getUTCDay() + 7 - i2) % 7);
    date2.setUTCHours(0, 0, 0, 0);
  }, (date2, step) => {
    date2.setUTCDate(date2.getUTCDate() + step * 7);
  }, (start2, end) => {
    return (end - start2) / durationWeek;
  });
}
const utcSunday = utcWeekday(0);
const utcMonday = utcWeekday(1);
const utcTuesday = utcWeekday(2);
const utcWednesday = utcWeekday(3);
const utcThursday = utcWeekday(4);
const utcFriday = utcWeekday(5);
const utcSaturday = utcWeekday(6);
utcSunday.range;
utcMonday.range;
utcTuesday.range;
utcWednesday.range;
utcThursday.range;
utcFriday.range;
utcSaturday.range;
const timeMonth = timeInterval((date2) => {
  date2.setDate(1);
  date2.setHours(0, 0, 0, 0);
}, (date2, step) => {
  date2.setMonth(date2.getMonth() + step);
}, (start2, end) => {
  return end.getMonth() - start2.getMonth() + (end.getFullYear() - start2.getFullYear()) * 12;
}, (date2) => {
  return date2.getMonth();
});
timeMonth.range;
const utcMonth = timeInterval((date2) => {
  date2.setUTCDate(1);
  date2.setUTCHours(0, 0, 0, 0);
}, (date2, step) => {
  date2.setUTCMonth(date2.getUTCMonth() + step);
}, (start2, end) => {
  return end.getUTCMonth() - start2.getUTCMonth() + (end.getUTCFullYear() - start2.getUTCFullYear()) * 12;
}, (date2) => {
  return date2.getUTCMonth();
});
utcMonth.range;
const timeYear = timeInterval((date2) => {
  date2.setMonth(0, 1);
  date2.setHours(0, 0, 0, 0);
}, (date2, step) => {
  date2.setFullYear(date2.getFullYear() + step);
}, (start2, end) => {
  return end.getFullYear() - start2.getFullYear();
}, (date2) => {
  return date2.getFullYear();
});
timeYear.every = (k2) => {
  return !isFinite(k2 = Math.floor(k2)) || !(k2 > 0) ? null : timeInterval((date2) => {
    date2.setFullYear(Math.floor(date2.getFullYear() / k2) * k2);
    date2.setMonth(0, 1);
    date2.setHours(0, 0, 0, 0);
  }, (date2, step) => {
    date2.setFullYear(date2.getFullYear() + step * k2);
  });
};
timeYear.range;
const utcYear = timeInterval((date2) => {
  date2.setUTCMonth(0, 1);
  date2.setUTCHours(0, 0, 0, 0);
}, (date2, step) => {
  date2.setUTCFullYear(date2.getUTCFullYear() + step);
}, (start2, end) => {
  return end.getUTCFullYear() - start2.getUTCFullYear();
}, (date2) => {
  return date2.getUTCFullYear();
});
utcYear.every = (k2) => {
  return !isFinite(k2 = Math.floor(k2)) || !(k2 > 0) ? null : timeInterval((date2) => {
    date2.setUTCFullYear(Math.floor(date2.getUTCFullYear() / k2) * k2);
    date2.setUTCMonth(0, 1);
    date2.setUTCHours(0, 0, 0, 0);
  }, (date2, step) => {
    date2.setUTCFullYear(date2.getUTCFullYear() + step * k2);
  });
};
utcYear.range;
function ticker(year, month, week, day, hour, minute) {
  const tickIntervals = [
    [second, 1, durationSecond],
    [second, 5, 5 * durationSecond],
    [second, 15, 15 * durationSecond],
    [second, 30, 30 * durationSecond],
    [minute, 1, durationMinute],
    [minute, 5, 5 * durationMinute],
    [minute, 15, 15 * durationMinute],
    [minute, 30, 30 * durationMinute],
    [hour, 1, durationHour],
    [hour, 3, 3 * durationHour],
    [hour, 6, 6 * durationHour],
    [hour, 12, 12 * durationHour],
    [day, 1, durationDay],
    [day, 2, 2 * durationDay],
    [week, 1, durationWeek],
    [month, 1, durationMonth],
    [month, 3, 3 * durationMonth],
    [year, 1, durationYear]
  ];
  function ticks2(start2, stop, count2) {
    const reverse3 = stop < start2;
    if (reverse3)
      [start2, stop] = [stop, start2];
    const interval2 = count2 && typeof count2.range === "function" ? count2 : tickInterval(start2, stop, count2);
    const ticks3 = interval2 ? interval2.range(start2, +stop + 1) : [];
    return reverse3 ? ticks3.reverse() : ticks3;
  }
  function tickInterval(start2, stop, count2) {
    const target = Math.abs(stop - start2) / count2;
    const i2 = bisector(([, , step2]) => step2).right(tickIntervals, target);
    if (i2 === tickIntervals.length)
      return year.every(tickStep(start2 / durationYear, stop / durationYear, count2));
    if (i2 === 0)
      return millisecond.every(Math.max(tickStep(start2, stop, count2), 1));
    const [t2, step] = tickIntervals[target / tickIntervals[i2 - 1][2] < tickIntervals[i2][2] / target ? i2 - 1 : i2];
    return t2.every(step);
  }
  return [ticks2, tickInterval];
}
const [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcSunday, unixDay, utcHour, utcMinute);
const [timeTicks, timeTickInterval] = ticker(timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute);
function localDate(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date2 = new Date(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
    date2.setFullYear(d2.y);
    return date2;
  }
  return new Date(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
}
function utcDate(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date2 = new Date(Date.UTC(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
    date2.setUTCFullYear(d2.y);
    return date2;
  }
  return new Date(Date.UTC(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
}
function newDate(y2, m2, d2) {
  return { y: y2, m: m2, d: d2, H: 0, M: 0, S: 0, L: 0 };
}
function formatLocale(locale2) {
  var locale_dateTime = locale2.dateTime, locale_date = locale2.date, locale_time = locale2.time, locale_periods = locale2.periods, locale_weekdays = locale2.days, locale_shortWeekdays = locale2.shortDays, locale_months = locale2.months, locale_shortMonths = locale2.shortMonths;
  var periodRe = formatRe(locale_periods), periodLookup = formatLookup(locale_periods), weekdayRe = formatRe(locale_weekdays), weekdayLookup = formatLookup(locale_weekdays), shortWeekdayRe = formatRe(locale_shortWeekdays), shortWeekdayLookup = formatLookup(locale_shortWeekdays), monthRe = formatRe(locale_months), monthLookup = formatLookup(locale_months), shortMonthRe = formatRe(locale_shortMonths), shortMonthLookup = formatLookup(locale_shortMonths);
  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "g": formatYearISO,
    "G": formatFullYearISO,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };
  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "g": formatUTCYearISO,
    "G": formatUTCFullYearISO,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };
  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "g": parseYear,
    "G": parseFullYear,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "q": parseQuarter,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  };
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);
  function newFormat(specifier, formats2) {
    return function(date2) {
      var string2 = [], i2 = -1, j = 0, n2 = specifier.length, c2, pad2, format2;
      if (!(date2 instanceof Date))
        date2 = /* @__PURE__ */ new Date(+date2);
      while (++i2 < n2) {
        if (specifier.charCodeAt(i2) === 37) {
          string2.push(specifier.slice(j, i2));
          if ((pad2 = pads[c2 = specifier.charAt(++i2)]) != null)
            c2 = specifier.charAt(++i2);
          else
            pad2 = c2 === "e" ? " " : "0";
          if (format2 = formats2[c2])
            c2 = format2(date2, pad2);
          string2.push(c2);
          j = i2 + 1;
        }
      }
      string2.push(specifier.slice(j, i2));
      return string2.join("");
    };
  }
  function newParse(specifier, Z3) {
    return function(string2) {
      var d2 = newDate(1900, void 0, 1), i2 = parseSpecifier(d2, specifier, string2 += "", 0), week, day;
      if (i2 != string2.length)
        return null;
      if ("Q" in d2)
        return new Date(d2.Q);
      if ("s" in d2)
        return new Date(d2.s * 1e3 + ("L" in d2 ? d2.L : 0));
      if (Z3 && !("Z" in d2))
        d2.Z = 0;
      if ("p" in d2)
        d2.H = d2.H % 12 + d2.p * 12;
      if (d2.m === void 0)
        d2.m = "q" in d2 ? d2.q : 0;
      if ("V" in d2) {
        if (d2.V < 1 || d2.V > 53)
          return null;
        if (!("w" in d2))
          d2.w = 1;
        if ("Z" in d2) {
          week = utcDate(newDate(d2.y, 0, 1)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);
          week = utcDay.offset(week, (d2.V - 1) * 7);
          d2.y = week.getUTCFullYear();
          d2.m = week.getUTCMonth();
          d2.d = week.getUTCDate() + (d2.w + 6) % 7;
        } else {
          week = localDate(newDate(d2.y, 0, 1)), day = week.getDay();
          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);
          week = timeDay.offset(week, (d2.V - 1) * 7);
          d2.y = week.getFullYear();
          d2.m = week.getMonth();
          d2.d = week.getDate() + (d2.w + 6) % 7;
        }
      } else if ("W" in d2 || "U" in d2) {
        if (!("w" in d2))
          d2.w = "u" in d2 ? d2.u % 7 : "W" in d2 ? 1 : 0;
        day = "Z" in d2 ? utcDate(newDate(d2.y, 0, 1)).getUTCDay() : localDate(newDate(d2.y, 0, 1)).getDay();
        d2.m = 0;
        d2.d = "W" in d2 ? (d2.w + 6) % 7 + d2.W * 7 - (day + 5) % 7 : d2.w + d2.U * 7 - (day + 6) % 7;
      }
      if ("Z" in d2) {
        d2.H += d2.Z / 100 | 0;
        d2.M += d2.Z % 100;
        return utcDate(d2);
      }
      return localDate(d2);
    };
  }
  function parseSpecifier(d2, specifier, string2, j) {
    var i2 = 0, n2 = specifier.length, m2 = string2.length, c2, parse2;
    while (i2 < n2) {
      if (j >= m2)
        return -1;
      c2 = specifier.charCodeAt(i2++);
      if (c2 === 37) {
        c2 = specifier.charAt(i2++);
        parse2 = parses[c2 in pads ? specifier.charAt(i2++) : c2];
        if (!parse2 || (j = parse2(d2, string2, j)) < 0)
          return -1;
      } else if (c2 != string2.charCodeAt(j++)) {
        return -1;
      }
    }
    return j;
  }
  function parsePeriod(d2, string2, i2) {
    var n2 = periodRe.exec(string2.slice(i2));
    return n2 ? (d2.p = periodLookup.get(n2[0].toLowerCase()), i2 + n2[0].length) : -1;
  }
  function parseShortWeekday(d2, string2, i2) {
    var n2 = shortWeekdayRe.exec(string2.slice(i2));
    return n2 ? (d2.w = shortWeekdayLookup.get(n2[0].toLowerCase()), i2 + n2[0].length) : -1;
  }
  function parseWeekday(d2, string2, i2) {
    var n2 = weekdayRe.exec(string2.slice(i2));
    return n2 ? (d2.w = weekdayLookup.get(n2[0].toLowerCase()), i2 + n2[0].length) : -1;
  }
  function parseShortMonth(d2, string2, i2) {
    var n2 = shortMonthRe.exec(string2.slice(i2));
    return n2 ? (d2.m = shortMonthLookup.get(n2[0].toLowerCase()), i2 + n2[0].length) : -1;
  }
  function parseMonth(d2, string2, i2) {
    var n2 = monthRe.exec(string2.slice(i2));
    return n2 ? (d2.m = monthLookup.get(n2[0].toLowerCase()), i2 + n2[0].length) : -1;
  }
  function parseLocaleDateTime(d2, string2, i2) {
    return parseSpecifier(d2, locale_dateTime, string2, i2);
  }
  function parseLocaleDate(d2, string2, i2) {
    return parseSpecifier(d2, locale_date, string2, i2);
  }
  function parseLocaleTime(d2, string2, i2) {
    return parseSpecifier(d2, locale_time, string2, i2);
  }
  function formatShortWeekday(d2) {
    return locale_shortWeekdays[d2.getDay()];
  }
  function formatWeekday(d2) {
    return locale_weekdays[d2.getDay()];
  }
  function formatShortMonth(d2) {
    return locale_shortMonths[d2.getMonth()];
  }
  function formatMonth(d2) {
    return locale_months[d2.getMonth()];
  }
  function formatPeriod(d2) {
    return locale_periods[+(d2.getHours() >= 12)];
  }
  function formatQuarter(d2) {
    return 1 + ~~(d2.getMonth() / 3);
  }
  function formatUTCShortWeekday(d2) {
    return locale_shortWeekdays[d2.getUTCDay()];
  }
  function formatUTCWeekday(d2) {
    return locale_weekdays[d2.getUTCDay()];
  }
  function formatUTCShortMonth(d2) {
    return locale_shortMonths[d2.getUTCMonth()];
  }
  function formatUTCMonth(d2) {
    return locale_months[d2.getUTCMonth()];
  }
  function formatUTCPeriod(d2) {
    return locale_periods[+(d2.getUTCHours() >= 12)];
  }
  function formatUTCQuarter(d2) {
    return 1 + ~~(d2.getUTCMonth() / 3);
  }
  return {
    format: function(specifier) {
      var f2 = newFormat(specifier += "", formats);
      f2.toString = function() {
        return specifier;
      };
      return f2;
    },
    parse: function(specifier) {
      var p2 = newParse(specifier += "", false);
      p2.toString = function() {
        return specifier;
      };
      return p2;
    },
    utcFormat: function(specifier) {
      var f2 = newFormat(specifier += "", utcFormats);
      f2.toString = function() {
        return specifier;
      };
      return f2;
    },
    utcParse: function(specifier) {
      var p2 = newParse(specifier += "", true);
      p2.toString = function() {
        return specifier;
      };
      return p2;
    }
  };
}
var pads = { "-": "", "_": " ", "0": "0" }, numberRe = /^\s*\d+/, percentRe = /^%/, requoteRe = /[\\^$*+?|[\]().{}]/g;
function pad(value, fill, width) {
  var sign2 = value < 0 ? "-" : "", string2 = (sign2 ? -value : value) + "", length2 = string2.length;
  return sign2 + (length2 < width ? new Array(width - length2 + 1).join(fill) + string2 : string2);
}
function requote(s2) {
  return s2.replace(requoteRe, "\\$&");
}
function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}
function formatLookup(names) {
  return new Map(names.map((name, i2) => [name.toLowerCase(), i2]));
}
function parseWeekdayNumberSunday(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 1));
  return n2 ? (d2.w = +n2[0], i2 + n2[0].length) : -1;
}
function parseWeekdayNumberMonday(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 1));
  return n2 ? (d2.u = +n2[0], i2 + n2[0].length) : -1;
}
function parseWeekNumberSunday(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 2));
  return n2 ? (d2.U = +n2[0], i2 + n2[0].length) : -1;
}
function parseWeekNumberISO(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 2));
  return n2 ? (d2.V = +n2[0], i2 + n2[0].length) : -1;
}
function parseWeekNumberMonday(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 2));
  return n2 ? (d2.W = +n2[0], i2 + n2[0].length) : -1;
}
function parseFullYear(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 4));
  return n2 ? (d2.y = +n2[0], i2 + n2[0].length) : -1;
}
function parseYear(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 2));
  return n2 ? (d2.y = +n2[0] + (+n2[0] > 68 ? 1900 : 2e3), i2 + n2[0].length) : -1;
}
function parseZone(d2, string2, i2) {
  var n2 = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string2.slice(i2, i2 + 6));
  return n2 ? (d2.Z = n2[1] ? 0 : -(n2[2] + (n2[3] || "00")), i2 + n2[0].length) : -1;
}
function parseQuarter(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 1));
  return n2 ? (d2.q = n2[0] * 3 - 3, i2 + n2[0].length) : -1;
}
function parseMonthNumber(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 2));
  return n2 ? (d2.m = n2[0] - 1, i2 + n2[0].length) : -1;
}
function parseDayOfMonth(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 2));
  return n2 ? (d2.d = +n2[0], i2 + n2[0].length) : -1;
}
function parseDayOfYear(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 3));
  return n2 ? (d2.m = 0, d2.d = +n2[0], i2 + n2[0].length) : -1;
}
function parseHour24(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 2));
  return n2 ? (d2.H = +n2[0], i2 + n2[0].length) : -1;
}
function parseMinutes(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 2));
  return n2 ? (d2.M = +n2[0], i2 + n2[0].length) : -1;
}
function parseSeconds(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 2));
  return n2 ? (d2.S = +n2[0], i2 + n2[0].length) : -1;
}
function parseMilliseconds(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 3));
  return n2 ? (d2.L = +n2[0], i2 + n2[0].length) : -1;
}
function parseMicroseconds(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2, i2 + 6));
  return n2 ? (d2.L = Math.floor(n2[0] / 1e3), i2 + n2[0].length) : -1;
}
function parseLiteralPercent(d2, string2, i2) {
  var n2 = percentRe.exec(string2.slice(i2, i2 + 1));
  return n2 ? i2 + n2[0].length : -1;
}
function parseUnixTimestamp(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2));
  return n2 ? (d2.Q = +n2[0], i2 + n2[0].length) : -1;
}
function parseUnixTimestampSeconds(d2, string2, i2) {
  var n2 = numberRe.exec(string2.slice(i2));
  return n2 ? (d2.s = +n2[0], i2 + n2[0].length) : -1;
}
function formatDayOfMonth(d2, p2) {
  return pad(d2.getDate(), p2, 2);
}
function formatHour24(d2, p2) {
  return pad(d2.getHours(), p2, 2);
}
function formatHour12(d2, p2) {
  return pad(d2.getHours() % 12 || 12, p2, 2);
}
function formatDayOfYear(d2, p2) {
  return pad(1 + timeDay.count(timeYear(d2), d2), p2, 3);
}
function formatMilliseconds(d2, p2) {
  return pad(d2.getMilliseconds(), p2, 3);
}
function formatMicroseconds(d2, p2) {
  return formatMilliseconds(d2, p2) + "000";
}
function formatMonthNumber(d2, p2) {
  return pad(d2.getMonth() + 1, p2, 2);
}
function formatMinutes(d2, p2) {
  return pad(d2.getMinutes(), p2, 2);
}
function formatSeconds(d2, p2) {
  return pad(d2.getSeconds(), p2, 2);
}
function formatWeekdayNumberMonday(d2) {
  var day = d2.getDay();
  return day === 0 ? 7 : day;
}
function formatWeekNumberSunday(d2, p2) {
  return pad(timeSunday.count(timeYear(d2) - 1, d2), p2, 2);
}
function dISO(d2) {
  var day = d2.getDay();
  return day >= 4 || day === 0 ? timeThursday(d2) : timeThursday.ceil(d2);
}
function formatWeekNumberISO(d2, p2) {
  d2 = dISO(d2);
  return pad(timeThursday.count(timeYear(d2), d2) + (timeYear(d2).getDay() === 4), p2, 2);
}
function formatWeekdayNumberSunday(d2) {
  return d2.getDay();
}
function formatWeekNumberMonday(d2, p2) {
  return pad(timeMonday.count(timeYear(d2) - 1, d2), p2, 2);
}
function formatYear(d2, p2) {
  return pad(d2.getFullYear() % 100, p2, 2);
}
function formatYearISO(d2, p2) {
  d2 = dISO(d2);
  return pad(d2.getFullYear() % 100, p2, 2);
}
function formatFullYear(d2, p2) {
  return pad(d2.getFullYear() % 1e4, p2, 4);
}
function formatFullYearISO(d2, p2) {
  var day = d2.getDay();
  d2 = day >= 4 || day === 0 ? timeThursday(d2) : timeThursday.ceil(d2);
  return pad(d2.getFullYear() % 1e4, p2, 4);
}
function formatZone(d2) {
  var z2 = d2.getTimezoneOffset();
  return (z2 > 0 ? "-" : (z2 *= -1, "+")) + pad(z2 / 60 | 0, "0", 2) + pad(z2 % 60, "0", 2);
}
function formatUTCDayOfMonth(d2, p2) {
  return pad(d2.getUTCDate(), p2, 2);
}
function formatUTCHour24(d2, p2) {
  return pad(d2.getUTCHours(), p2, 2);
}
function formatUTCHour12(d2, p2) {
  return pad(d2.getUTCHours() % 12 || 12, p2, 2);
}
function formatUTCDayOfYear(d2, p2) {
  return pad(1 + utcDay.count(utcYear(d2), d2), p2, 3);
}
function formatUTCMilliseconds(d2, p2) {
  return pad(d2.getUTCMilliseconds(), p2, 3);
}
function formatUTCMicroseconds(d2, p2) {
  return formatUTCMilliseconds(d2, p2) + "000";
}
function formatUTCMonthNumber(d2, p2) {
  return pad(d2.getUTCMonth() + 1, p2, 2);
}
function formatUTCMinutes(d2, p2) {
  return pad(d2.getUTCMinutes(), p2, 2);
}
function formatUTCSeconds(d2, p2) {
  return pad(d2.getUTCSeconds(), p2, 2);
}
function formatUTCWeekdayNumberMonday(d2) {
  var dow = d2.getUTCDay();
  return dow === 0 ? 7 : dow;
}
function formatUTCWeekNumberSunday(d2, p2) {
  return pad(utcSunday.count(utcYear(d2) - 1, d2), p2, 2);
}
function UTCdISO(d2) {
  var day = d2.getUTCDay();
  return day >= 4 || day === 0 ? utcThursday(d2) : utcThursday.ceil(d2);
}
function formatUTCWeekNumberISO(d2, p2) {
  d2 = UTCdISO(d2);
  return pad(utcThursday.count(utcYear(d2), d2) + (utcYear(d2).getUTCDay() === 4), p2, 2);
}
function formatUTCWeekdayNumberSunday(d2) {
  return d2.getUTCDay();
}
function formatUTCWeekNumberMonday(d2, p2) {
  return pad(utcMonday.count(utcYear(d2) - 1, d2), p2, 2);
}
function formatUTCYear(d2, p2) {
  return pad(d2.getUTCFullYear() % 100, p2, 2);
}
function formatUTCYearISO(d2, p2) {
  d2 = UTCdISO(d2);
  return pad(d2.getUTCFullYear() % 100, p2, 2);
}
function formatUTCFullYear(d2, p2) {
  return pad(d2.getUTCFullYear() % 1e4, p2, 4);
}
function formatUTCFullYearISO(d2, p2) {
  var day = d2.getUTCDay();
  d2 = day >= 4 || day === 0 ? utcThursday(d2) : utcThursday.ceil(d2);
  return pad(d2.getUTCFullYear() % 1e4, p2, 4);
}
function formatUTCZone() {
  return "+0000";
}
function formatLiteralPercent() {
  return "%";
}
function formatUnixTimestamp(d2) {
  return +d2;
}
function formatUnixTimestampSeconds(d2) {
  return Math.floor(+d2 / 1e3);
}
var locale;
var timeFormat;
var utcFormat;
defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});
function defaultLocale(definition) {
  locale = formatLocale(definition);
  timeFormat = locale.format;
  locale.parse;
  utcFormat = locale.utcFormat;
  locale.utcParse;
  return locale;
}
function date(t2) {
  return new Date(t2);
}
function number(t2) {
  return t2 instanceof Date ? +t2 : +/* @__PURE__ */ new Date(+t2);
}
function calendar(ticks2, tickInterval, year, month, week, day, hour, minute, second2, format2) {
  var scale = continuous(), invert = scale.invert, domain = scale.domain;
  var formatMillisecond = format2(".%L"), formatSecond = format2(":%S"), formatMinute = format2("%I:%M"), formatHour = format2("%I %p"), formatDay = format2("%a %d"), formatWeek = format2("%b %d"), formatMonth = format2("%B"), formatYear2 = format2("%Y");
  function tickFormat2(date2) {
    return (second2(date2) < date2 ? formatMillisecond : minute(date2) < date2 ? formatSecond : hour(date2) < date2 ? formatMinute : day(date2) < date2 ? formatHour : month(date2) < date2 ? week(date2) < date2 ? formatDay : formatWeek : year(date2) < date2 ? formatMonth : formatYear2)(date2);
  }
  scale.invert = function(y2) {
    return new Date(invert(y2));
  };
  scale.domain = function(_) {
    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);
  };
  scale.ticks = function(interval2) {
    var d2 = domain();
    return ticks2(d2[0], d2[d2.length - 1], interval2 == null ? 10 : interval2);
  };
  scale.tickFormat = function(count2, specifier) {
    return specifier == null ? tickFormat2 : format2(specifier);
  };
  scale.nice = function(interval2) {
    var d2 = domain();
    if (!interval2 || typeof interval2.range !== "function")
      interval2 = tickInterval(d2[0], d2[d2.length - 1], interval2 == null ? 10 : interval2);
    return interval2 ? domain(nice(d2, interval2)) : scale;
  };
  scale.copy = function() {
    return copy$1(scale, calendar(ticks2, tickInterval, year, month, week, day, hour, minute, second2, format2));
  };
  return scale;
}
function time() {
  return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute, second, timeFormat).domain([new Date(2e3, 0, 1), new Date(2e3, 0, 2)]), arguments);
}
function utcTime() {
  return initRange.apply(calendar(utcTicks, utcTickInterval, utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, utcFormat).domain([Date.UTC(2e3, 0, 1), Date.UTC(2e3, 0, 2)]), arguments);
}
function transformer$2() {
  var x02 = 0, x12 = 1, t02, t12, k10, transform2, interpolator = identity$b, clamp2 = false, unknown;
  function scale(x2) {
    return x2 == null || isNaN(x2 = +x2) ? unknown : interpolator(k10 === 0 ? 0.5 : (x2 = (transform2(x2) - t02) * k10, clamp2 ? Math.max(0, Math.min(1, x2)) : x2));
  }
  scale.domain = function(_) {
    return arguments.length ? ([x02, x12] = _, t02 = transform2(x02 = +x02), t12 = transform2(x12 = +x12), k10 = t02 === t12 ? 0 : 1 / (t12 - t02), scale) : [x02, x12];
  };
  scale.clamp = function(_) {
    return arguments.length ? (clamp2 = !!_, scale) : clamp2;
  };
  scale.interpolator = function(_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };
  function range3(interpolate2) {
    return function(_) {
      var r0, r1;
      return arguments.length ? ([r0, r1] = _, interpolator = interpolate2(r0, r1), scale) : [interpolator(0), interpolator(1)];
    };
  }
  scale.range = range3(interpolate$2);
  scale.rangeRound = range3(interpolateRound);
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };
  return function(t2) {
    transform2 = t2, t02 = t2(x02), t12 = t2(x12), k10 = t02 === t12 ? 0 : 1 / (t12 - t02);
    return scale;
  };
}
function copy(source, target) {
  return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());
}
function sequential() {
  var scale = linearish(transformer$2()(identity$b));
  scale.copy = function() {
    return copy(scale, sequential());
  };
  return initInterpolator.apply(scale, arguments);
}
function sequentialLog() {
  var scale = loggish(transformer$2()).domain([1, 10]);
  scale.copy = function() {
    return copy(scale, sequentialLog()).base(scale.base());
  };
  return initInterpolator.apply(scale, arguments);
}
function sequentialSymlog() {
  var scale = symlogish(transformer$2());
  scale.copy = function() {
    return copy(scale, sequentialSymlog()).constant(scale.constant());
  };
  return initInterpolator.apply(scale, arguments);
}
function sequentialPow() {
  var scale = powish(transformer$2());
  scale.copy = function() {
    return copy(scale, sequentialPow()).exponent(scale.exponent());
  };
  return initInterpolator.apply(scale, arguments);
}
function sequentialSqrt() {
  return sequentialPow.apply(null, arguments).exponent(0.5);
}
function sequentialQuantile() {
  var domain = [], interpolator = identity$b;
  function scale(x2) {
    if (x2 != null && !isNaN(x2 = +x2))
      return interpolator((bisectRight(domain, x2, 1) - 1) / (domain.length - 1));
  }
  scale.domain = function(_) {
    if (!arguments.length)
      return domain.slice();
    domain = [];
    for (let d2 of _)
      if (d2 != null && !isNaN(d2 = +d2))
        domain.push(d2);
    domain.sort(ascending$1);
    return scale;
  };
  scale.interpolator = function(_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };
  scale.range = function() {
    return domain.map((d2, i2) => interpolator(i2 / (domain.length - 1)));
  };
  scale.quantiles = function(n2) {
    return Array.from({ length: n2 + 1 }, (_, i2) => quantile$1(domain, i2 / n2));
  };
  scale.copy = function() {
    return sequentialQuantile(interpolator).domain(domain);
  };
  return initInterpolator.apply(scale, arguments);
}
function transformer$1() {
  var x02 = 0, x12 = 0.5, x2 = 1, s2 = 1, t02, t12, t2, k10, k21, interpolator = identity$b, transform2, clamp2 = false, unknown;
  function scale(x3) {
    return isNaN(x3 = +x3) ? unknown : (x3 = 0.5 + ((x3 = +transform2(x3)) - t12) * (s2 * x3 < s2 * t12 ? k10 : k21), interpolator(clamp2 ? Math.max(0, Math.min(1, x3)) : x3));
  }
  scale.domain = function(_) {
    return arguments.length ? ([x02, x12, x2] = _, t02 = transform2(x02 = +x02), t12 = transform2(x12 = +x12), t2 = transform2(x2 = +x2), k10 = t02 === t12 ? 0 : 0.5 / (t12 - t02), k21 = t12 === t2 ? 0 : 0.5 / (t2 - t12), s2 = t12 < t02 ? -1 : 1, scale) : [x02, x12, x2];
  };
  scale.clamp = function(_) {
    return arguments.length ? (clamp2 = !!_, scale) : clamp2;
  };
  scale.interpolator = function(_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };
  function range3(interpolate2) {
    return function(_) {
      var r0, r1, r2;
      return arguments.length ? ([r0, r1, r2] = _, interpolator = piecewise(interpolate2, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];
    };
  }
  scale.range = range3(interpolate$2);
  scale.rangeRound = range3(interpolateRound);
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };
  return function(t3) {
    transform2 = t3, t02 = t3(x02), t12 = t3(x12), t2 = t3(x2), k10 = t02 === t12 ? 0 : 0.5 / (t12 - t02), k21 = t12 === t2 ? 0 : 0.5 / (t2 - t12), s2 = t12 < t02 ? -1 : 1;
    return scale;
  };
}
function diverging() {
  var scale = linearish(transformer$1()(identity$b));
  scale.copy = function() {
    return copy(scale, diverging());
  };
  return initInterpolator.apply(scale, arguments);
}
function divergingLog() {
  var scale = loggish(transformer$1()).domain([0.1, 1, 10]);
  scale.copy = function() {
    return copy(scale, divergingLog()).base(scale.base());
  };
  return initInterpolator.apply(scale, arguments);
}
function divergingSymlog() {
  var scale = symlogish(transformer$1());
  scale.copy = function() {
    return copy(scale, divergingSymlog()).constant(scale.constant());
  };
  return initInterpolator.apply(scale, arguments);
}
function divergingPow() {
  var scale = powish(transformer$1());
  scale.copy = function() {
    return copy(scale, divergingPow()).exponent(scale.exponent());
  };
  return initInterpolator.apply(scale, arguments);
}
function divergingSqrt() {
  return divergingPow.apply(null, arguments).exponent(0.5);
}
const d3Scales = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  scaleBand: band,
  scaleDiverging: diverging,
  scaleDivergingLog: divergingLog,
  scaleDivergingPow: divergingPow,
  scaleDivergingSqrt: divergingSqrt,
  scaleDivergingSymlog: divergingSymlog,
  scaleIdentity: identity$9,
  scaleImplicit: implicit,
  scaleLinear: linear$1,
  scaleLog: log$1,
  scaleOrdinal: ordinal,
  scalePoint: point,
  scalePow: pow$1,
  scaleQuantile: quantile,
  scaleQuantize: quantize,
  scaleRadial: radial,
  scaleSequential: sequential,
  scaleSequentialLog: sequentialLog,
  scaleSequentialPow: sequentialPow,
  scaleSequentialQuantile: sequentialQuantile,
  scaleSequentialSqrt: sequentialSqrt,
  scaleSequentialSymlog: sequentialSymlog,
  scaleSqrt: sqrt$1,
  scaleSymlog: symlog,
  scaleThreshold: threshold,
  scaleTime: time,
  scaleUtc: utcTime,
  tickFormat
}, Symbol.toStringTag, { value: "Module" }));
var isSymbol = isSymbol_1;
function baseExtremum$2(array2, iteratee, comparator) {
  var index2 = -1, length2 = array2.length;
  while (++index2 < length2) {
    var value = array2[index2], current = iteratee(value);
    if (current != null && (computed === void 0 ? current === current && !isSymbol(current) : comparator(current, computed))) {
      var computed = current, result = value;
    }
  }
  return result;
}
var _baseExtremum = baseExtremum$2;
function baseGt$1(value, other) {
  return value > other;
}
var _baseGt = baseGt$1;
var baseExtremum$1 = _baseExtremum, baseGt = _baseGt, identity$8 = identity_1;
function max(array2) {
  return array2 && array2.length ? baseExtremum$1(array2, identity$8, baseGt) : void 0;
}
var max_1 = max;
const max$1 = /* @__PURE__ */ getDefaultExportFromCjs(max_1);
function baseLt$1(value, other) {
  return value < other;
}
var _baseLt = baseLt$1;
var baseExtremum = _baseExtremum, baseLt = _baseLt, identity$7 = identity_1;
function min(array2) {
  return array2 && array2.length ? baseExtremum(array2, identity$7, baseLt) : void 0;
}
var min_1 = min;
const min$1 = /* @__PURE__ */ getDefaultExportFromCjs(min_1);
var arrayMap = _arrayMap, baseIteratee$5 = _baseIteratee, baseMap = _baseMap, isArray$3 = isArray_1;
function map$2(collection, iteratee) {
  var func = isArray$3(collection) ? arrayMap : baseMap;
  return func(collection, baseIteratee$5(iteratee));
}
var map_1 = map$2;
var baseFlatten = _baseFlatten, map$1 = map_1;
function flatMap(collection, iteratee) {
  return baseFlatten(map$1(collection, iteratee), 1);
}
var flatMap_1 = flatMap;
const flatMap$1 = /* @__PURE__ */ getDefaultExportFromCjs(flatMap_1);
var baseIsEqual = _baseIsEqual;
function isEqual(value, other) {
  return baseIsEqual(value, other);
}
var isEqual_1 = isEqual;
const isEqual$1 = /* @__PURE__ */ getDefaultExportFromCjs(isEqual_1);
var MAX_DIGITS = 1e9, defaults = {
  // These values must be integers within the stated ranges (inclusive).
  // Most of these values can be changed during run-time using `Decimal.config`.
  // The maximum number of significant digits of the result of a calculation or base conversion.
  // E.g. `Decimal.config({ precision: 20 });`
  precision: 20,
  // 1 to MAX_DIGITS
  // The rounding mode used by default by `toInteger`, `toDecimalPlaces`, `toExponential`,
  // `toFixed`, `toPrecision` and `toSignificantDigits`.
  //
  // ROUND_UP         0 Away from zero.
  // ROUND_DOWN       1 Towards zero.
  // ROUND_CEIL       2 Towards +Infinity.
  // ROUND_FLOOR      3 Towards -Infinity.
  // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.
  // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
  // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
  // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
  // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
  //
  // E.g.
  // `Decimal.rounding = 4;`
  // `Decimal.rounding = Decimal.ROUND_HALF_UP;`
  rounding: 4,
  // 0 to 8
  // The exponent value at and beneath which `toString` returns exponential notation.
  // JavaScript numbers: -7
  toExpNeg: -7,
  // 0 to -MAX_E
  // The exponent value at and above which `toString` returns exponential notation.
  // JavaScript numbers: 21
  toExpPos: 21,
  // 0 to MAX_E
  // The natural logarithm of 10.
  // 115 digits
  LN10: "2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286"
}, Decimal, external = true, decimalError = "[DecimalError] ", invalidArgument = decimalError + "Invalid argument: ", exponentOutOfRange = decimalError + "Exponent out of range: ", mathfloor = Math.floor, mathpow = Math.pow, isDecimal = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i, ONE, BASE = 1e7, LOG_BASE = 7, MAX_SAFE_INTEGER = 9007199254740991, MAX_E = mathfloor(MAX_SAFE_INTEGER / LOG_BASE), P = {};
P.absoluteValue = P.abs = function() {
  var x2 = new this.constructor(this);
  if (x2.s)
    x2.s = 1;
  return x2;
};
P.comparedTo = P.cmp = function(y2) {
  var i2, j, xdL, ydL, x2 = this;
  y2 = new x2.constructor(y2);
  if (x2.s !== y2.s)
    return x2.s || -y2.s;
  if (x2.e !== y2.e)
    return x2.e > y2.e ^ x2.s < 0 ? 1 : -1;
  xdL = x2.d.length;
  ydL = y2.d.length;
  for (i2 = 0, j = xdL < ydL ? xdL : ydL; i2 < j; ++i2) {
    if (x2.d[i2] !== y2.d[i2])
      return x2.d[i2] > y2.d[i2] ^ x2.s < 0 ? 1 : -1;
  }
  return xdL === ydL ? 0 : xdL > ydL ^ x2.s < 0 ? 1 : -1;
};
P.decimalPlaces = P.dp = function() {
  var x2 = this, w2 = x2.d.length - 1, dp = (w2 - x2.e) * LOG_BASE;
  w2 = x2.d[w2];
  if (w2)
    for (; w2 % 10 == 0; w2 /= 10)
      dp--;
  return dp < 0 ? 0 : dp;
};
P.dividedBy = P.div = function(y2) {
  return divide(this, new this.constructor(y2));
};
P.dividedToIntegerBy = P.idiv = function(y2) {
  var x2 = this, Ctor = x2.constructor;
  return round(divide(x2, new Ctor(y2), 0, 1), Ctor.precision);
};
P.equals = P.eq = function(y2) {
  return !this.cmp(y2);
};
P.exponent = function() {
  return getBase10Exponent(this);
};
P.greaterThan = P.gt = function(y2) {
  return this.cmp(y2) > 0;
};
P.greaterThanOrEqualTo = P.gte = function(y2) {
  return this.cmp(y2) >= 0;
};
P.isInteger = P.isint = function() {
  return this.e > this.d.length - 2;
};
P.isNegative = P.isneg = function() {
  return this.s < 0;
};
P.isPositive = P.ispos = function() {
  return this.s > 0;
};
P.isZero = function() {
  return this.s === 0;
};
P.lessThan = P.lt = function(y2) {
  return this.cmp(y2) < 0;
};
P.lessThanOrEqualTo = P.lte = function(y2) {
  return this.cmp(y2) < 1;
};
P.logarithm = P.log = function(base) {
  var r2, x2 = this, Ctor = x2.constructor, pr = Ctor.precision, wpr = pr + 5;
  if (base === void 0) {
    base = new Ctor(10);
  } else {
    base = new Ctor(base);
    if (base.s < 1 || base.eq(ONE))
      throw Error(decimalError + "NaN");
  }
  if (x2.s < 1)
    throw Error(decimalError + (x2.s ? "NaN" : "-Infinity"));
  if (x2.eq(ONE))
    return new Ctor(0);
  external = false;
  r2 = divide(ln(x2, wpr), ln(base, wpr), wpr);
  external = true;
  return round(r2, pr);
};
P.minus = P.sub = function(y2) {
  var x2 = this;
  y2 = new x2.constructor(y2);
  return x2.s == y2.s ? subtract(x2, y2) : add(x2, (y2.s = -y2.s, y2));
};
P.modulo = P.mod = function(y2) {
  var q2, x2 = this, Ctor = x2.constructor, pr = Ctor.precision;
  y2 = new Ctor(y2);
  if (!y2.s)
    throw Error(decimalError + "NaN");
  if (!x2.s)
    return round(new Ctor(x2), pr);
  external = false;
  q2 = divide(x2, y2, 0, 1).times(y2);
  external = true;
  return x2.minus(q2);
};
P.naturalExponential = P.exp = function() {
  return exp$1(this);
};
P.naturalLogarithm = P.ln = function() {
  return ln(this);
};
P.negated = P.neg = function() {
  var x2 = new this.constructor(this);
  x2.s = -x2.s || 0;
  return x2;
};
P.plus = P.add = function(y2) {
  var x2 = this;
  y2 = new x2.constructor(y2);
  return x2.s == y2.s ? add(x2, y2) : subtract(x2, (y2.s = -y2.s, y2));
};
P.precision = P.sd = function(z2) {
  var e3, sd2, w2, x2 = this;
  if (z2 !== void 0 && z2 !== !!z2 && z2 !== 1 && z2 !== 0)
    throw Error(invalidArgument + z2);
  e3 = getBase10Exponent(x2) + 1;
  w2 = x2.d.length - 1;
  sd2 = w2 * LOG_BASE + 1;
  w2 = x2.d[w2];
  if (w2) {
    for (; w2 % 10 == 0; w2 /= 10)
      sd2--;
    for (w2 = x2.d[0]; w2 >= 10; w2 /= 10)
      sd2++;
  }
  return z2 && e3 > sd2 ? e3 : sd2;
};
P.squareRoot = P.sqrt = function() {
  var e3, n2, pr, r2, s2, t2, wpr, x2 = this, Ctor = x2.constructor;
  if (x2.s < 1) {
    if (!x2.s)
      return new Ctor(0);
    throw Error(decimalError + "NaN");
  }
  e3 = getBase10Exponent(x2);
  external = false;
  s2 = Math.sqrt(+x2);
  if (s2 == 0 || s2 == 1 / 0) {
    n2 = digitsToString(x2.d);
    if ((n2.length + e3) % 2 == 0)
      n2 += "0";
    s2 = Math.sqrt(n2);
    e3 = mathfloor((e3 + 1) / 2) - (e3 < 0 || e3 % 2);
    if (s2 == 1 / 0) {
      n2 = "5e" + e3;
    } else {
      n2 = s2.toExponential();
      n2 = n2.slice(0, n2.indexOf("e") + 1) + e3;
    }
    r2 = new Ctor(n2);
  } else {
    r2 = new Ctor(s2.toString());
  }
  pr = Ctor.precision;
  s2 = wpr = pr + 3;
  for (; ; ) {
    t2 = r2;
    r2 = t2.plus(divide(x2, t2, wpr + 2)).times(0.5);
    if (digitsToString(t2.d).slice(0, wpr) === (n2 = digitsToString(r2.d)).slice(0, wpr)) {
      n2 = n2.slice(wpr - 3, wpr + 1);
      if (s2 == wpr && n2 == "4999") {
        round(t2, pr + 1, 0);
        if (t2.times(t2).eq(x2)) {
          r2 = t2;
          break;
        }
      } else if (n2 != "9999") {
        break;
      }
      wpr += 4;
    }
  }
  external = true;
  return round(r2, pr);
};
P.times = P.mul = function(y2) {
  var carry, e3, i2, k2, r2, rL, t2, xdL, ydL, x2 = this, Ctor = x2.constructor, xd2 = x2.d, yd2 = (y2 = new Ctor(y2)).d;
  if (!x2.s || !y2.s)
    return new Ctor(0);
  y2.s *= x2.s;
  e3 = x2.e + y2.e;
  xdL = xd2.length;
  ydL = yd2.length;
  if (xdL < ydL) {
    r2 = xd2;
    xd2 = yd2;
    yd2 = r2;
    rL = xdL;
    xdL = ydL;
    ydL = rL;
  }
  r2 = [];
  rL = xdL + ydL;
  for (i2 = rL; i2--; )
    r2.push(0);
  for (i2 = ydL; --i2 >= 0; ) {
    carry = 0;
    for (k2 = xdL + i2; k2 > i2; ) {
      t2 = r2[k2] + yd2[i2] * xd2[k2 - i2 - 1] + carry;
      r2[k2--] = t2 % BASE | 0;
      carry = t2 / BASE | 0;
    }
    r2[k2] = (r2[k2] + carry) % BASE | 0;
  }
  for (; !r2[--rL]; )
    r2.pop();
  if (carry)
    ++e3;
  else
    r2.shift();
  y2.d = r2;
  y2.e = e3;
  return external ? round(y2, Ctor.precision) : y2;
};
P.toDecimalPlaces = P.todp = function(dp, rm) {
  var x2 = this, Ctor = x2.constructor;
  x2 = new Ctor(x2);
  if (dp === void 0)
    return x2;
  checkInt32(dp, 0, MAX_DIGITS);
  if (rm === void 0)
    rm = Ctor.rounding;
  else
    checkInt32(rm, 0, 8);
  return round(x2, dp + getBase10Exponent(x2) + 1, rm);
};
P.toExponential = function(dp, rm) {
  var str, x2 = this, Ctor = x2.constructor;
  if (dp === void 0) {
    str = toString(x2, true);
  } else {
    checkInt32(dp, 0, MAX_DIGITS);
    if (rm === void 0)
      rm = Ctor.rounding;
    else
      checkInt32(rm, 0, 8);
    x2 = round(new Ctor(x2), dp + 1, rm);
    str = toString(x2, true, dp + 1);
  }
  return str;
};
P.toFixed = function(dp, rm) {
  var str, y2, x2 = this, Ctor = x2.constructor;
  if (dp === void 0)
    return toString(x2);
  checkInt32(dp, 0, MAX_DIGITS);
  if (rm === void 0)
    rm = Ctor.rounding;
  else
    checkInt32(rm, 0, 8);
  y2 = round(new Ctor(x2), dp + getBase10Exponent(x2) + 1, rm);
  str = toString(y2.abs(), false, dp + getBase10Exponent(y2) + 1);
  return x2.isneg() && !x2.isZero() ? "-" + str : str;
};
P.toInteger = P.toint = function() {
  var x2 = this, Ctor = x2.constructor;
  return round(new Ctor(x2), getBase10Exponent(x2) + 1, Ctor.rounding);
};
P.toNumber = function() {
  return +this;
};
P.toPower = P.pow = function(y2) {
  var e3, k2, pr, r2, sign2, yIsInt, x2 = this, Ctor = x2.constructor, guard = 12, yn = +(y2 = new Ctor(y2));
  if (!y2.s)
    return new Ctor(ONE);
  x2 = new Ctor(x2);
  if (!x2.s) {
    if (y2.s < 1)
      throw Error(decimalError + "Infinity");
    return x2;
  }
  if (x2.eq(ONE))
    return x2;
  pr = Ctor.precision;
  if (y2.eq(ONE))
    return round(x2, pr);
  e3 = y2.e;
  k2 = y2.d.length - 1;
  yIsInt = e3 >= k2;
  sign2 = x2.s;
  if (!yIsInt) {
    if (sign2 < 0)
      throw Error(decimalError + "NaN");
  } else if ((k2 = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {
    r2 = new Ctor(ONE);
    e3 = Math.ceil(pr / LOG_BASE + 4);
    external = false;
    for (; ; ) {
      if (k2 % 2) {
        r2 = r2.times(x2);
        truncate(r2.d, e3);
      }
      k2 = mathfloor(k2 / 2);
      if (k2 === 0)
        break;
      x2 = x2.times(x2);
      truncate(x2.d, e3);
    }
    external = true;
    return y2.s < 0 ? new Ctor(ONE).div(r2) : round(r2, pr);
  }
  sign2 = sign2 < 0 && y2.d[Math.max(e3, k2)] & 1 ? -1 : 1;
  x2.s = 1;
  external = false;
  r2 = y2.times(ln(x2, pr + guard));
  external = true;
  r2 = exp$1(r2);
  r2.s = sign2;
  return r2;
};
P.toPrecision = function(sd2, rm) {
  var e3, str, x2 = this, Ctor = x2.constructor;
  if (sd2 === void 0) {
    e3 = getBase10Exponent(x2);
    str = toString(x2, e3 <= Ctor.toExpNeg || e3 >= Ctor.toExpPos);
  } else {
    checkInt32(sd2, 1, MAX_DIGITS);
    if (rm === void 0)
      rm = Ctor.rounding;
    else
      checkInt32(rm, 0, 8);
    x2 = round(new Ctor(x2), sd2, rm);
    e3 = getBase10Exponent(x2);
    str = toString(x2, sd2 <= e3 || e3 <= Ctor.toExpNeg, sd2);
  }
  return str;
};
P.toSignificantDigits = P.tosd = function(sd2, rm) {
  var x2 = this, Ctor = x2.constructor;
  if (sd2 === void 0) {
    sd2 = Ctor.precision;
    rm = Ctor.rounding;
  } else {
    checkInt32(sd2, 1, MAX_DIGITS);
    if (rm === void 0)
      rm = Ctor.rounding;
    else
      checkInt32(rm, 0, 8);
  }
  return round(new Ctor(x2), sd2, rm);
};
P.toString = P.valueOf = P.val = P.toJSON = P[Symbol.for("nodejs.util.inspect.custom")] = function() {
  var x2 = this, e3 = getBase10Exponent(x2), Ctor = x2.constructor;
  return toString(x2, e3 <= Ctor.toExpNeg || e3 >= Ctor.toExpPos);
};
function add(x2, y2) {
  var carry, d2, e3, i2, k2, len, xd2, yd2, Ctor = x2.constructor, pr = Ctor.precision;
  if (!x2.s || !y2.s) {
    if (!y2.s)
      y2 = new Ctor(x2);
    return external ? round(y2, pr) : y2;
  }
  xd2 = x2.d;
  yd2 = y2.d;
  k2 = x2.e;
  e3 = y2.e;
  xd2 = xd2.slice();
  i2 = k2 - e3;
  if (i2) {
    if (i2 < 0) {
      d2 = xd2;
      i2 = -i2;
      len = yd2.length;
    } else {
      d2 = yd2;
      e3 = k2;
      len = xd2.length;
    }
    k2 = Math.ceil(pr / LOG_BASE);
    len = k2 > len ? k2 + 1 : len + 1;
    if (i2 > len) {
      i2 = len;
      d2.length = 1;
    }
    d2.reverse();
    for (; i2--; )
      d2.push(0);
    d2.reverse();
  }
  len = xd2.length;
  i2 = yd2.length;
  if (len - i2 < 0) {
    i2 = len;
    d2 = yd2;
    yd2 = xd2;
    xd2 = d2;
  }
  for (carry = 0; i2; ) {
    carry = (xd2[--i2] = xd2[i2] + yd2[i2] + carry) / BASE | 0;
    xd2[i2] %= BASE;
  }
  if (carry) {
    xd2.unshift(carry);
    ++e3;
  }
  for (len = xd2.length; xd2[--len] == 0; )
    xd2.pop();
  y2.d = xd2;
  y2.e = e3;
  return external ? round(y2, pr) : y2;
}
function checkInt32(i2, min2, max2) {
  if (i2 !== ~~i2 || i2 < min2 || i2 > max2) {
    throw Error(invalidArgument + i2);
  }
}
function digitsToString(d2) {
  var i2, k2, ws, indexOfLastWord = d2.length - 1, str = "", w2 = d2[0];
  if (indexOfLastWord > 0) {
    str += w2;
    for (i2 = 1; i2 < indexOfLastWord; i2++) {
      ws = d2[i2] + "";
      k2 = LOG_BASE - ws.length;
      if (k2)
        str += getZeroString(k2);
      str += ws;
    }
    w2 = d2[i2];
    ws = w2 + "";
    k2 = LOG_BASE - ws.length;
    if (k2)
      str += getZeroString(k2);
  } else if (w2 === 0) {
    return "0";
  }
  for (; w2 % 10 === 0; )
    w2 /= 10;
  return str + w2;
}
var divide = /* @__PURE__ */ function() {
  function multiplyInteger(x2, k2) {
    var temp, carry = 0, i2 = x2.length;
    for (x2 = x2.slice(); i2--; ) {
      temp = x2[i2] * k2 + carry;
      x2[i2] = temp % BASE | 0;
      carry = temp / BASE | 0;
    }
    if (carry)
      x2.unshift(carry);
    return x2;
  }
  function compare(a2, b2, aL, bL) {
    var i2, r2;
    if (aL != bL) {
      r2 = aL > bL ? 1 : -1;
    } else {
      for (i2 = r2 = 0; i2 < aL; i2++) {
        if (a2[i2] != b2[i2]) {
          r2 = a2[i2] > b2[i2] ? 1 : -1;
          break;
        }
      }
    }
    return r2;
  }
  function subtract2(a2, b2, aL) {
    var i2 = 0;
    for (; aL--; ) {
      a2[aL] -= i2;
      i2 = a2[aL] < b2[aL] ? 1 : 0;
      a2[aL] = i2 * BASE + a2[aL] - b2[aL];
    }
    for (; !a2[0] && a2.length > 1; )
      a2.shift();
  }
  return function(x2, y2, pr, dp) {
    var cmp, e3, i2, k2, prod, prodL, q2, qd2, rem, remL, rem0, sd2, t2, xi2, xL, yd0, yL, yz, Ctor = x2.constructor, sign2 = x2.s == y2.s ? 1 : -1, xd2 = x2.d, yd2 = y2.d;
    if (!x2.s)
      return new Ctor(x2);
    if (!y2.s)
      throw Error(decimalError + "Division by zero");
    e3 = x2.e - y2.e;
    yL = yd2.length;
    xL = xd2.length;
    q2 = new Ctor(sign2);
    qd2 = q2.d = [];
    for (i2 = 0; yd2[i2] == (xd2[i2] || 0); )
      ++i2;
    if (yd2[i2] > (xd2[i2] || 0))
      --e3;
    if (pr == null) {
      sd2 = pr = Ctor.precision;
    } else if (dp) {
      sd2 = pr + (getBase10Exponent(x2) - getBase10Exponent(y2)) + 1;
    } else {
      sd2 = pr;
    }
    if (sd2 < 0)
      return new Ctor(0);
    sd2 = sd2 / LOG_BASE + 2 | 0;
    i2 = 0;
    if (yL == 1) {
      k2 = 0;
      yd2 = yd2[0];
      sd2++;
      for (; (i2 < xL || k2) && sd2--; i2++) {
        t2 = k2 * BASE + (xd2[i2] || 0);
        qd2[i2] = t2 / yd2 | 0;
        k2 = t2 % yd2 | 0;
      }
    } else {
      k2 = BASE / (yd2[0] + 1) | 0;
      if (k2 > 1) {
        yd2 = multiplyInteger(yd2, k2);
        xd2 = multiplyInteger(xd2, k2);
        yL = yd2.length;
        xL = xd2.length;
      }
      xi2 = yL;
      rem = xd2.slice(0, yL);
      remL = rem.length;
      for (; remL < yL; )
        rem[remL++] = 0;
      yz = yd2.slice();
      yz.unshift(0);
      yd0 = yd2[0];
      if (yd2[1] >= BASE / 2)
        ++yd0;
      do {
        k2 = 0;
        cmp = compare(yd2, rem, yL, remL);
        if (cmp < 0) {
          rem0 = rem[0];
          if (yL != remL)
            rem0 = rem0 * BASE + (rem[1] || 0);
          k2 = rem0 / yd0 | 0;
          if (k2 > 1) {
            if (k2 >= BASE)
              k2 = BASE - 1;
            prod = multiplyInteger(yd2, k2);
            prodL = prod.length;
            remL = rem.length;
            cmp = compare(prod, rem, prodL, remL);
            if (cmp == 1) {
              k2--;
              subtract2(prod, yL < prodL ? yz : yd2, prodL);
            }
          } else {
            if (k2 == 0)
              cmp = k2 = 1;
            prod = yd2.slice();
          }
          prodL = prod.length;
          if (prodL < remL)
            prod.unshift(0);
          subtract2(rem, prod, remL);
          if (cmp == -1) {
            remL = rem.length;
            cmp = compare(yd2, rem, yL, remL);
            if (cmp < 1) {
              k2++;
              subtract2(rem, yL < remL ? yz : yd2, remL);
            }
          }
          remL = rem.length;
        } else if (cmp === 0) {
          k2++;
          rem = [0];
        }
        qd2[i2++] = k2;
        if (cmp && rem[0]) {
          rem[remL++] = xd2[xi2] || 0;
        } else {
          rem = [xd2[xi2]];
          remL = 1;
        }
      } while ((xi2++ < xL || rem[0] !== void 0) && sd2--);
    }
    if (!qd2[0])
      qd2.shift();
    q2.e = e3;
    return round(q2, dp ? pr + getBase10Exponent(q2) + 1 : pr);
  };
}();
function exp$1(x2, sd2) {
  var denominator, guard, pow2, sum2, t2, wpr, i2 = 0, k2 = 0, Ctor = x2.constructor, pr = Ctor.precision;
  if (getBase10Exponent(x2) > 16)
    throw Error(exponentOutOfRange + getBase10Exponent(x2));
  if (!x2.s)
    return new Ctor(ONE);
  if (sd2 == null) {
    external = false;
    wpr = pr;
  } else {
    wpr = sd2;
  }
  t2 = new Ctor(0.03125);
  while (x2.abs().gte(0.1)) {
    x2 = x2.times(t2);
    k2 += 5;
  }
  guard = Math.log(mathpow(2, k2)) / Math.LN10 * 2 + 5 | 0;
  wpr += guard;
  denominator = pow2 = sum2 = new Ctor(ONE);
  Ctor.precision = wpr;
  for (; ; ) {
    pow2 = round(pow2.times(x2), wpr);
    denominator = denominator.times(++i2);
    t2 = sum2.plus(divide(pow2, denominator, wpr));
    if (digitsToString(t2.d).slice(0, wpr) === digitsToString(sum2.d).slice(0, wpr)) {
      while (k2--)
        sum2 = round(sum2.times(sum2), wpr);
      Ctor.precision = pr;
      return sd2 == null ? (external = true, round(sum2, pr)) : sum2;
    }
    sum2 = t2;
  }
}
function getBase10Exponent(x2) {
  var e3 = x2.e * LOG_BASE, w2 = x2.d[0];
  for (; w2 >= 10; w2 /= 10)
    e3++;
  return e3;
}
function getLn10(Ctor, sd2, pr) {
  if (sd2 > Ctor.LN10.sd()) {
    external = true;
    if (pr)
      Ctor.precision = pr;
    throw Error(decimalError + "LN10 precision limit exceeded");
  }
  return round(new Ctor(Ctor.LN10), sd2);
}
function getZeroString(k2) {
  var zs = "";
  for (; k2--; )
    zs += "0";
  return zs;
}
function ln(y2, sd2) {
  var c2, c0, denominator, e3, numerator, sum2, t2, wpr, x2, n2 = 1, guard = 10, x3 = y2, xd2 = x3.d, Ctor = x3.constructor, pr = Ctor.precision;
  if (x3.s < 1)
    throw Error(decimalError + (x3.s ? "NaN" : "-Infinity"));
  if (x3.eq(ONE))
    return new Ctor(0);
  if (sd2 == null) {
    external = false;
    wpr = pr;
  } else {
    wpr = sd2;
  }
  if (x3.eq(10)) {
    if (sd2 == null)
      external = true;
    return getLn10(Ctor, wpr);
  }
  wpr += guard;
  Ctor.precision = wpr;
  c2 = digitsToString(xd2);
  c0 = c2.charAt(0);
  e3 = getBase10Exponent(x3);
  if (Math.abs(e3) < 15e14) {
    while (c0 < 7 && c0 != 1 || c0 == 1 && c2.charAt(1) > 3) {
      x3 = x3.times(y2);
      c2 = digitsToString(x3.d);
      c0 = c2.charAt(0);
      n2++;
    }
    e3 = getBase10Exponent(x3);
    if (c0 > 1) {
      x3 = new Ctor("0." + c2);
      e3++;
    } else {
      x3 = new Ctor(c0 + "." + c2.slice(1));
    }
  } else {
    t2 = getLn10(Ctor, wpr + 2, pr).times(e3 + "");
    x3 = ln(new Ctor(c0 + "." + c2.slice(1)), wpr - guard).plus(t2);
    Ctor.precision = pr;
    return sd2 == null ? (external = true, round(x3, pr)) : x3;
  }
  sum2 = numerator = x3 = divide(x3.minus(ONE), x3.plus(ONE), wpr);
  x2 = round(x3.times(x3), wpr);
  denominator = 3;
  for (; ; ) {
    numerator = round(numerator.times(x2), wpr);
    t2 = sum2.plus(divide(numerator, new Ctor(denominator), wpr));
    if (digitsToString(t2.d).slice(0, wpr) === digitsToString(sum2.d).slice(0, wpr)) {
      sum2 = sum2.times(2);
      if (e3 !== 0)
        sum2 = sum2.plus(getLn10(Ctor, wpr + 2, pr).times(e3 + ""));
      sum2 = divide(sum2, new Ctor(n2), wpr);
      Ctor.precision = pr;
      return sd2 == null ? (external = true, round(sum2, pr)) : sum2;
    }
    sum2 = t2;
    denominator += 2;
  }
}
function parseDecimal(x2, str) {
  var e3, i2, len;
  if ((e3 = str.indexOf(".")) > -1)
    str = str.replace(".", "");
  if ((i2 = str.search(/e/i)) > 0) {
    if (e3 < 0)
      e3 = i2;
    e3 += +str.slice(i2 + 1);
    str = str.substring(0, i2);
  } else if (e3 < 0) {
    e3 = str.length;
  }
  for (i2 = 0; str.charCodeAt(i2) === 48; )
    ++i2;
  for (len = str.length; str.charCodeAt(len - 1) === 48; )
    --len;
  str = str.slice(i2, len);
  if (str) {
    len -= i2;
    e3 = e3 - i2 - 1;
    x2.e = mathfloor(e3 / LOG_BASE);
    x2.d = [];
    i2 = (e3 + 1) % LOG_BASE;
    if (e3 < 0)
      i2 += LOG_BASE;
    if (i2 < len) {
      if (i2)
        x2.d.push(+str.slice(0, i2));
      for (len -= LOG_BASE; i2 < len; )
        x2.d.push(+str.slice(i2, i2 += LOG_BASE));
      str = str.slice(i2);
      i2 = LOG_BASE - str.length;
    } else {
      i2 -= len;
    }
    for (; i2--; )
      str += "0";
    x2.d.push(+str);
    if (external && (x2.e > MAX_E || x2.e < -MAX_E))
      throw Error(exponentOutOfRange + e3);
  } else {
    x2.s = 0;
    x2.e = 0;
    x2.d = [0];
  }
  return x2;
}
function round(x2, sd2, rm) {
  var i2, j, k2, n2, rd2, doRound, w2, xdi, xd2 = x2.d;
  for (n2 = 1, k2 = xd2[0]; k2 >= 10; k2 /= 10)
    n2++;
  i2 = sd2 - n2;
  if (i2 < 0) {
    i2 += LOG_BASE;
    j = sd2;
    w2 = xd2[xdi = 0];
  } else {
    xdi = Math.ceil((i2 + 1) / LOG_BASE);
    k2 = xd2.length;
    if (xdi >= k2)
      return x2;
    w2 = k2 = xd2[xdi];
    for (n2 = 1; k2 >= 10; k2 /= 10)
      n2++;
    i2 %= LOG_BASE;
    j = i2 - LOG_BASE + n2;
  }
  if (rm !== void 0) {
    k2 = mathpow(10, n2 - j - 1);
    rd2 = w2 / k2 % 10 | 0;
    doRound = sd2 < 0 || xd2[xdi + 1] !== void 0 || w2 % k2;
    doRound = rm < 4 ? (rd2 || doRound) && (rm == 0 || rm == (x2.s < 0 ? 3 : 2)) : rd2 > 5 || rd2 == 5 && (rm == 4 || doRound || rm == 6 && // Check whether the digit to the left of the rounding digit is odd.
    (i2 > 0 ? j > 0 ? w2 / mathpow(10, n2 - j) : 0 : xd2[xdi - 1]) % 10 & 1 || rm == (x2.s < 0 ? 8 : 7));
  }
  if (sd2 < 1 || !xd2[0]) {
    if (doRound) {
      k2 = getBase10Exponent(x2);
      xd2.length = 1;
      sd2 = sd2 - k2 - 1;
      xd2[0] = mathpow(10, (LOG_BASE - sd2 % LOG_BASE) % LOG_BASE);
      x2.e = mathfloor(-sd2 / LOG_BASE) || 0;
    } else {
      xd2.length = 1;
      xd2[0] = x2.e = x2.s = 0;
    }
    return x2;
  }
  if (i2 == 0) {
    xd2.length = xdi;
    k2 = 1;
    xdi--;
  } else {
    xd2.length = xdi + 1;
    k2 = mathpow(10, LOG_BASE - i2);
    xd2[xdi] = j > 0 ? (w2 / mathpow(10, n2 - j) % mathpow(10, j) | 0) * k2 : 0;
  }
  if (doRound) {
    for (; ; ) {
      if (xdi == 0) {
        if ((xd2[0] += k2) == BASE) {
          xd2[0] = 1;
          ++x2.e;
        }
        break;
      } else {
        xd2[xdi] += k2;
        if (xd2[xdi] != BASE)
          break;
        xd2[xdi--] = 0;
        k2 = 1;
      }
    }
  }
  for (i2 = xd2.length; xd2[--i2] === 0; )
    xd2.pop();
  if (external && (x2.e > MAX_E || x2.e < -MAX_E)) {
    throw Error(exponentOutOfRange + getBase10Exponent(x2));
  }
  return x2;
}
function subtract(x2, y2) {
  var d2, e3, i2, j, k2, len, xd2, xe, xLTy, yd2, Ctor = x2.constructor, pr = Ctor.precision;
  if (!x2.s || !y2.s) {
    if (y2.s)
      y2.s = -y2.s;
    else
      y2 = new Ctor(x2);
    return external ? round(y2, pr) : y2;
  }
  xd2 = x2.d;
  yd2 = y2.d;
  e3 = y2.e;
  xe = x2.e;
  xd2 = xd2.slice();
  k2 = xe - e3;
  if (k2) {
    xLTy = k2 < 0;
    if (xLTy) {
      d2 = xd2;
      k2 = -k2;
      len = yd2.length;
    } else {
      d2 = yd2;
      e3 = xe;
      len = xd2.length;
    }
    i2 = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;
    if (k2 > i2) {
      k2 = i2;
      d2.length = 1;
    }
    d2.reverse();
    for (i2 = k2; i2--; )
      d2.push(0);
    d2.reverse();
  } else {
    i2 = xd2.length;
    len = yd2.length;
    xLTy = i2 < len;
    if (xLTy)
      len = i2;
    for (i2 = 0; i2 < len; i2++) {
      if (xd2[i2] != yd2[i2]) {
        xLTy = xd2[i2] < yd2[i2];
        break;
      }
    }
    k2 = 0;
  }
  if (xLTy) {
    d2 = xd2;
    xd2 = yd2;
    yd2 = d2;
    y2.s = -y2.s;
  }
  len = xd2.length;
  for (i2 = yd2.length - len; i2 > 0; --i2)
    xd2[len++] = 0;
  for (i2 = yd2.length; i2 > k2; ) {
    if (xd2[--i2] < yd2[i2]) {
      for (j = i2; j && xd2[--j] === 0; )
        xd2[j] = BASE - 1;
      --xd2[j];
      xd2[i2] += BASE;
    }
    xd2[i2] -= yd2[i2];
  }
  for (; xd2[--len] === 0; )
    xd2.pop();
  for (; xd2[0] === 0; xd2.shift())
    --e3;
  if (!xd2[0])
    return new Ctor(0);
  y2.d = xd2;
  y2.e = e3;
  return external ? round(y2, pr) : y2;
}
function toString(x2, isExp, sd2) {
  var k2, e3 = getBase10Exponent(x2), str = digitsToString(x2.d), len = str.length;
  if (isExp) {
    if (sd2 && (k2 = sd2 - len) > 0) {
      str = str.charAt(0) + "." + str.slice(1) + getZeroString(k2);
    } else if (len > 1) {
      str = str.charAt(0) + "." + str.slice(1);
    }
    str = str + (e3 < 0 ? "e" : "e+") + e3;
  } else if (e3 < 0) {
    str = "0." + getZeroString(-e3 - 1) + str;
    if (sd2 && (k2 = sd2 - len) > 0)
      str += getZeroString(k2);
  } else if (e3 >= len) {
    str += getZeroString(e3 + 1 - len);
    if (sd2 && (k2 = sd2 - e3 - 1) > 0)
      str = str + "." + getZeroString(k2);
  } else {
    if ((k2 = e3 + 1) < len)
      str = str.slice(0, k2) + "." + str.slice(k2);
    if (sd2 && (k2 = sd2 - len) > 0) {
      if (e3 + 1 === len)
        str += ".";
      str += getZeroString(k2);
    }
  }
  return x2.s < 0 ? "-" + str : str;
}
function truncate(arr, len) {
  if (arr.length > len) {
    arr.length = len;
    return true;
  }
}
function clone(obj) {
  var i2, p2, ps;
  function Decimal2(value) {
    var x2 = this;
    if (!(x2 instanceof Decimal2))
      return new Decimal2(value);
    x2.constructor = Decimal2;
    if (value instanceof Decimal2) {
      x2.s = value.s;
      x2.e = value.e;
      x2.d = (value = value.d) ? value.slice() : value;
      return;
    }
    if (typeof value === "number") {
      if (value * 0 !== 0) {
        throw Error(invalidArgument + value);
      }
      if (value > 0) {
        x2.s = 1;
      } else if (value < 0) {
        value = -value;
        x2.s = -1;
      } else {
        x2.s = 0;
        x2.e = 0;
        x2.d = [0];
        return;
      }
      if (value === ~~value && value < 1e7) {
        x2.e = 0;
        x2.d = [value];
        return;
      }
      return parseDecimal(x2, value.toString());
    } else if (typeof value !== "string") {
      throw Error(invalidArgument + value);
    }
    if (value.charCodeAt(0) === 45) {
      value = value.slice(1);
      x2.s = -1;
    } else {
      x2.s = 1;
    }
    if (isDecimal.test(value))
      parseDecimal(x2, value);
    else
      throw Error(invalidArgument + value);
  }
  Decimal2.prototype = P;
  Decimal2.ROUND_UP = 0;
  Decimal2.ROUND_DOWN = 1;
  Decimal2.ROUND_CEIL = 2;
  Decimal2.ROUND_FLOOR = 3;
  Decimal2.ROUND_HALF_UP = 4;
  Decimal2.ROUND_HALF_DOWN = 5;
  Decimal2.ROUND_HALF_EVEN = 6;
  Decimal2.ROUND_HALF_CEIL = 7;
  Decimal2.ROUND_HALF_FLOOR = 8;
  Decimal2.clone = clone;
  Decimal2.config = Decimal2.set = config;
  if (obj === void 0)
    obj = {};
  if (obj) {
    ps = ["precision", "rounding", "toExpNeg", "toExpPos", "LN10"];
    for (i2 = 0; i2 < ps.length; )
      if (!obj.hasOwnProperty(p2 = ps[i2++]))
        obj[p2] = this[p2];
  }
  Decimal2.config(obj);
  return Decimal2;
}
function config(obj) {
  if (!obj || typeof obj !== "object") {
    throw Error(decimalError + "Object expected");
  }
  var i2, p2, v2, ps = [
    "precision",
    1,
    MAX_DIGITS,
    "rounding",
    0,
    8,
    "toExpNeg",
    -1 / 0,
    0,
    "toExpPos",
    0,
    1 / 0
  ];
  for (i2 = 0; i2 < ps.length; i2 += 3) {
    if ((v2 = obj[p2 = ps[i2]]) !== void 0) {
      if (mathfloor(v2) === v2 && v2 >= ps[i2 + 1] && v2 <= ps[i2 + 2])
        this[p2] = v2;
      else
        throw Error(invalidArgument + p2 + ": " + v2);
    }
  }
  if ((v2 = obj[p2 = "LN10"]) !== void 0) {
    if (v2 == Math.LN10)
      this[p2] = new this(v2);
    else
      throw Error(invalidArgument + p2 + ": " + v2);
  }
  return this;
}
var Decimal = clone(defaults);
ONE = new Decimal(1);
const Decimal$1 = Decimal;
function _toConsumableArray$a(arr) {
  return _arrayWithoutHoles$a(arr) || _iterableToArray$b(arr) || _unsupportedIterableToArray$g(arr) || _nonIterableSpread$a();
}
function _nonIterableSpread$a() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$g(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$g(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$g(o2, minLen);
}
function _iterableToArray$b(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
    return Array.from(iter);
}
function _arrayWithoutHoles$a(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$g(arr);
}
function _arrayLikeToArray$g(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
    arr2[i2] = arr[i2];
  }
  return arr2;
}
var identity$6 = function identity(i2) {
  return i2;
};
var PLACE_HOLDER = {
  "@@functional/placeholder": true
};
var isPlaceHolder = function isPlaceHolder2(val) {
  return val === PLACE_HOLDER;
};
var curry0 = function curry02(fn) {
  return function _curried() {
    if (arguments.length === 0 || arguments.length === 1 && isPlaceHolder(arguments.length <= 0 ? void 0 : arguments[0])) {
      return _curried;
    }
    return fn.apply(void 0, arguments);
  };
};
var curryN = function curryN2(n2, fn) {
  if (n2 === 1) {
    return fn;
  }
  return curry0(function() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var argsLength = args.filter(function(arg) {
      return arg !== PLACE_HOLDER;
    }).length;
    if (argsLength >= n2) {
      return fn.apply(void 0, args);
    }
    return curryN2(n2 - argsLength, curry0(function() {
      for (var _len2 = arguments.length, restArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        restArgs[_key2] = arguments[_key2];
      }
      var newArgs = args.map(function(arg) {
        return isPlaceHolder(arg) ? restArgs.shift() : arg;
      });
      return fn.apply(void 0, _toConsumableArray$a(newArgs).concat(restArgs));
    }));
  });
};
var curry = function curry2(fn) {
  return curryN(fn.length, fn);
};
var range$4 = function range(begin, end) {
  var arr = [];
  for (var i2 = begin; i2 < end; ++i2) {
    arr[i2 - begin] = i2;
  }
  return arr;
};
var map = curry(function(fn, arr) {
  if (Array.isArray(arr)) {
    return arr.map(fn);
  }
  return Object.keys(arr).map(function(key) {
    return arr[key];
  }).map(fn);
});
var compose$1 = function compose() {
  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    args[_key3] = arguments[_key3];
  }
  if (!args.length) {
    return identity$6;
  }
  var fns = args.reverse();
  var firstFn = fns[0];
  var tailsFn = fns.slice(1);
  return function() {
    return tailsFn.reduce(function(res, fn) {
      return fn(res);
    }, firstFn.apply(void 0, arguments));
  };
};
var reverse$1 = function reverse(arr) {
  if (Array.isArray(arr)) {
    return arr.reverse();
  }
  return arr.split("").reverse.join("");
};
var memoize = function memoize2(fn) {
  var lastArgs = null;
  var lastResult2 = null;
  return function() {
    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }
    if (lastArgs && args.every(function(val, i2) {
      return val === lastArgs[i2];
    })) {
      return lastResult2;
    }
    lastArgs = args;
    lastResult2 = fn.apply(void 0, args);
    return lastResult2;
  };
};
function getDigitCount(value) {
  var result;
  if (value === 0) {
    result = 1;
  } else {
    result = Math.floor(new Decimal$1(value).abs().log(10).toNumber()) + 1;
  }
  return result;
}
function rangeStep(start2, end, step) {
  var num = new Decimal$1(start2);
  var i2 = 0;
  var result = [];
  while (num.lt(end) && i2 < 1e5) {
    result.push(num.toNumber());
    num = num.add(step);
    i2++;
  }
  return result;
}
var interpolateNumber$1 = curry(function(a2, b2, t2) {
  var newA = +a2;
  var newB = +b2;
  return newA + t2 * (newB - newA);
});
var uninterpolateNumber = curry(function(a2, b2, x2) {
  var diff = b2 - +a2;
  diff = diff || Infinity;
  return (x2 - a2) / diff;
});
var uninterpolateTruncation = curry(function(a2, b2, x2) {
  var diff = b2 - +a2;
  diff = diff || Infinity;
  return Math.max(0, Math.min(1, (x2 - a2) / diff));
});
const Arithmetic = {
  rangeStep,
  getDigitCount,
  interpolateNumber: interpolateNumber$1,
  uninterpolateNumber,
  uninterpolateTruncation
};
function _toConsumableArray$9(arr) {
  return _arrayWithoutHoles$9(arr) || _iterableToArray$a(arr) || _unsupportedIterableToArray$f(arr) || _nonIterableSpread$9();
}
function _nonIterableSpread$9() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray$a(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
    return Array.from(iter);
}
function _arrayWithoutHoles$9(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$f(arr);
}
function _slicedToArray$8(arr, i2) {
  return _arrayWithHoles$9(arr) || _iterableToArrayLimit$8(arr, i2) || _unsupportedIterableToArray$f(arr, i2) || _nonIterableRest$9();
}
function _nonIterableRest$9() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$f(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$f(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$f(o2, minLen);
}
function _arrayLikeToArray$f(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
    arr2[i2] = arr[i2];
  }
  return arr2;
}
function _iterableToArrayLimit$8(arr, i2) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i2 && _arr.length === i2)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles$9(arr) {
  if (Array.isArray(arr))
    return arr;
}
function getValidInterval(_ref) {
  var _ref2 = _slicedToArray$8(_ref, 2), min2 = _ref2[0], max2 = _ref2[1];
  var validMin = min2, validMax = max2;
  if (min2 > max2) {
    validMin = max2;
    validMax = min2;
  }
  return [validMin, validMax];
}
function getFormatStep(roughStep, allowDecimals, correctionFactor) {
  if (roughStep.lte(0)) {
    return new Decimal$1(0);
  }
  var digitCount = Arithmetic.getDigitCount(roughStep.toNumber());
  var digitCountValue = new Decimal$1(10).pow(digitCount);
  var stepRatio = roughStep.div(digitCountValue);
  var stepRatioScale = digitCount !== 1 ? 0.05 : 0.1;
  var amendStepRatio = new Decimal$1(Math.ceil(stepRatio.div(stepRatioScale).toNumber())).add(correctionFactor).mul(stepRatioScale);
  var formatStep = amendStepRatio.mul(digitCountValue);
  return allowDecimals ? formatStep : new Decimal$1(Math.ceil(formatStep));
}
function getTickOfSingleValue(value, tickCount, allowDecimals) {
  var step = 1;
  var middle = new Decimal$1(value);
  if (!middle.isint() && allowDecimals) {
    var absVal = Math.abs(value);
    if (absVal < 1) {
      step = new Decimal$1(10).pow(Arithmetic.getDigitCount(value) - 1);
      middle = new Decimal$1(Math.floor(middle.div(step).toNumber())).mul(step);
    } else if (absVal > 1) {
      middle = new Decimal$1(Math.floor(value));
    }
  } else if (value === 0) {
    middle = new Decimal$1(Math.floor((tickCount - 1) / 2));
  } else if (!allowDecimals) {
    middle = new Decimal$1(Math.floor(value));
  }
  var middleIndex = Math.floor((tickCount - 1) / 2);
  var fn = compose$1(map(function(n2) {
    return middle.add(new Decimal$1(n2 - middleIndex).mul(step)).toNumber();
  }), range$4);
  return fn(0, tickCount);
}
function calculateStep(min2, max2, tickCount, allowDecimals) {
  var correctionFactor = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0;
  if (!Number.isFinite((max2 - min2) / (tickCount - 1))) {
    return {
      step: new Decimal$1(0),
      tickMin: new Decimal$1(0),
      tickMax: new Decimal$1(0)
    };
  }
  var step = getFormatStep(new Decimal$1(max2).sub(min2).div(tickCount - 1), allowDecimals, correctionFactor);
  var middle;
  if (min2 <= 0 && max2 >= 0) {
    middle = new Decimal$1(0);
  } else {
    middle = new Decimal$1(min2).add(max2).div(2);
    middle = middle.sub(new Decimal$1(middle).mod(step));
  }
  var belowCount = Math.ceil(middle.sub(min2).div(step).toNumber());
  var upCount = Math.ceil(new Decimal$1(max2).sub(middle).div(step).toNumber());
  var scaleCount = belowCount + upCount + 1;
  if (scaleCount > tickCount) {
    return calculateStep(min2, max2, tickCount, allowDecimals, correctionFactor + 1);
  }
  if (scaleCount < tickCount) {
    upCount = max2 > 0 ? upCount + (tickCount - scaleCount) : upCount;
    belowCount = max2 > 0 ? belowCount : belowCount + (tickCount - scaleCount);
  }
  return {
    step,
    tickMin: middle.sub(new Decimal$1(belowCount).mul(step)),
    tickMax: middle.add(new Decimal$1(upCount).mul(step))
  };
}
function getNiceTickValuesFn(_ref3) {
  var _ref4 = _slicedToArray$8(_ref3, 2), min2 = _ref4[0], max2 = _ref4[1];
  var tickCount = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 6;
  var allowDecimals = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  var count2 = Math.max(tickCount, 2);
  var _getValidInterval = getValidInterval([min2, max2]), _getValidInterval2 = _slicedToArray$8(_getValidInterval, 2), cormin = _getValidInterval2[0], cormax = _getValidInterval2[1];
  if (cormin === -Infinity || cormax === Infinity) {
    var _values = cormax === Infinity ? [cormin].concat(_toConsumableArray$9(range$4(0, tickCount - 1).map(function() {
      return Infinity;
    }))) : [].concat(_toConsumableArray$9(range$4(0, tickCount - 1).map(function() {
      return -Infinity;
    })), [cormax]);
    return min2 > max2 ? reverse$1(_values) : _values;
  }
  if (cormin === cormax) {
    return getTickOfSingleValue(cormin, tickCount, allowDecimals);
  }
  var _calculateStep = calculateStep(cormin, cormax, count2, allowDecimals), step = _calculateStep.step, tickMin = _calculateStep.tickMin, tickMax = _calculateStep.tickMax;
  var values = Arithmetic.rangeStep(tickMin, tickMax.add(new Decimal$1(0.1).mul(step)), step);
  return min2 > max2 ? reverse$1(values) : values;
}
function getTickValuesFixedDomainFn(_ref7, tickCount) {
  var _ref8 = _slicedToArray$8(_ref7, 2), min2 = _ref8[0], max2 = _ref8[1];
  var allowDecimals = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  var _getValidInterval5 = getValidInterval([min2, max2]), _getValidInterval6 = _slicedToArray$8(_getValidInterval5, 2), cormin = _getValidInterval6[0], cormax = _getValidInterval6[1];
  if (cormin === -Infinity || cormax === Infinity) {
    return [min2, max2];
  }
  if (cormin === cormax) {
    return [cormin];
  }
  var count2 = Math.max(tickCount, 2);
  var step = getFormatStep(new Decimal$1(cormax).sub(cormin).div(count2 - 1), allowDecimals, 0);
  var values = [].concat(_toConsumableArray$9(Arithmetic.rangeStep(new Decimal$1(cormin), new Decimal$1(cormax).sub(new Decimal$1(0.99).mul(step)), step)), [cormax]);
  return min2 > max2 ? reverse$1(values) : values;
}
var getNiceTickValues = memoize(getNiceTickValuesFn);
var getTickValuesFixedDomain = memoize(getTickValuesFixedDomainFn);
var prefix = "Invariant failed";
function invariant$1(condition, message) {
  if (condition) {
    return;
  }
  {
    throw new Error(prefix);
  }
}
var _excluded$n = ["offset", "layout", "width", "dataKey", "data", "dataPointFormatter", "xAxis", "yAxis"];
function _extends$q() {
  _extends$q = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$q.apply(this, arguments);
}
function _slicedToArray$7(arr, i2) {
  return _arrayWithHoles$8(arr) || _iterableToArrayLimit$7(arr, i2) || _unsupportedIterableToArray$e(arr, i2) || _nonIterableRest$8();
}
function _nonIterableRest$8() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$e(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$e(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$e(o2, minLen);
}
function _arrayLikeToArray$e(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function _iterableToArrayLimit$7(r2, l2) {
  var t2 = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
  if (null != t2) {
    var e3, n2, i2, u2, a2 = [], f2 = true, o2 = false;
    try {
      if (i2 = (t2 = t2.call(r2)).next, 0 === l2) {
        if (Object(t2) !== t2)
          return;
        f2 = false;
      } else
        for (; !(f2 = (e3 = i2.call(t2)).done) && (a2.push(e3.value), a2.length !== l2); f2 = true)
          ;
    } catch (r22) {
      o2 = true, n2 = r22;
    } finally {
      try {
        if (!f2 && null != t2["return"] && (u2 = t2["return"](), Object(u2) !== u2))
          return;
      } finally {
        if (o2)
          throw n2;
      }
    }
    return a2;
  }
}
function _arrayWithHoles$8(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _objectWithoutProperties$e(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$d(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$d(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function ErrorBar(props) {
  var offset2 = props.offset, layout = props.layout, width = props.width, dataKey = props.dataKey, data2 = props.data, dataPointFormatter = props.dataPointFormatter, xAxis = props.xAxis, yAxis = props.yAxis, others = _objectWithoutProperties$e(props, _excluded$n);
  var svgProps = filterProps(others, false);
  !!(props.direction === "x" && xAxis.type !== "number") ? invariant$1(false) : void 0;
  var errorBars = data2.map(function(entry) {
    var _dataPointFormatter = dataPointFormatter(entry, dataKey), x2 = _dataPointFormatter.x, y2 = _dataPointFormatter.y, value = _dataPointFormatter.value, errorVal = _dataPointFormatter.errorVal;
    if (!errorVal) {
      return null;
    }
    var lineCoordinates = [];
    var lowBound, highBound;
    if (Array.isArray(errorVal)) {
      var _errorVal = _slicedToArray$7(errorVal, 2);
      lowBound = _errorVal[0];
      highBound = _errorVal[1];
    } else {
      lowBound = highBound = errorVal;
    }
    if (layout === "vertical") {
      var scale = xAxis.scale;
      var yMid = y2 + offset2;
      var yMin = yMid + width;
      var yMax = yMid - width;
      var xMin = scale(value - lowBound);
      var xMax = scale(value + highBound);
      lineCoordinates.push({
        x1: xMax,
        y1: yMin,
        x2: xMax,
        y2: yMax
      });
      lineCoordinates.push({
        x1: xMin,
        y1: yMid,
        x2: xMax,
        y2: yMid
      });
      lineCoordinates.push({
        x1: xMin,
        y1: yMin,
        x2: xMin,
        y2: yMax
      });
    } else if (layout === "horizontal") {
      var _scale = yAxis.scale;
      var xMid = x2 + offset2;
      var _xMin = xMid - width;
      var _xMax = xMid + width;
      var _yMin = _scale(value - lowBound);
      var _yMax = _scale(value + highBound);
      lineCoordinates.push({
        x1: _xMin,
        y1: _yMax,
        x2: _xMax,
        y2: _yMax
      });
      lineCoordinates.push({
        x1: xMid,
        y1: _yMin,
        x2: xMid,
        y2: _yMax
      });
      lineCoordinates.push({
        x1: _xMin,
        y1: _yMin,
        x2: _xMax,
        y2: _yMin
      });
    }
    return /* @__PURE__ */ React.createElement(Layer, _extends$q({
      className: "recharts-errorBar",
      key: "bar-".concat(lineCoordinates.map(function(c2) {
        return "".concat(c2.x1, "-").concat(c2.x2, "-").concat(c2.y1, "-").concat(c2.y2);
      }))
    }, svgProps), lineCoordinates.map(function(coordinates2) {
      return /* @__PURE__ */ React.createElement("line", _extends$q({}, coordinates2, {
        key: "line-".concat(coordinates2.x1, "-").concat(coordinates2.x2, "-").concat(coordinates2.y1, "-").concat(coordinates2.y2)
      }));
    }));
  });
  return /* @__PURE__ */ React.createElement(Layer, {
    className: "recharts-errorBars"
  }, errorBars);
}
ErrorBar.defaultProps = {
  stroke: "black",
  strokeWidth: 1.5,
  width: 5,
  offset: 0,
  layout: "horizontal"
};
ErrorBar.displayName = "ErrorBar";
function _typeof$u(o2) {
  "@babel/helpers - typeof";
  return _typeof$u = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$u(o2);
}
function ownKeys$s(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$r(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$s(Object(t2), true).forEach(function(r3) {
      _defineProperty$t(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$s(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$t(obj, key, value) {
  key = _toPropertyKey$s(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$s(t2) {
  var i2 = _toPrimitive$s(t2, "string");
  return "symbol" == _typeof$u(i2) ? i2 : String(i2);
}
function _toPrimitive$s(t2, r2) {
  if ("object" != _typeof$u(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$u(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var getLegendProps = function getLegendProps2(_ref) {
  var children2 = _ref.children, formattedGraphicalItems = _ref.formattedGraphicalItems, legendWidth = _ref.legendWidth, legendContent = _ref.legendContent;
  var legendItem = findChildByType(children2, Legend);
  if (!legendItem) {
    return null;
  }
  var legendData;
  if (legendItem.props && legendItem.props.payload) {
    legendData = legendItem.props && legendItem.props.payload;
  } else if (legendContent === "children") {
    legendData = (formattedGraphicalItems || []).reduce(function(result, _ref2) {
      var item = _ref2.item, props = _ref2.props;
      var data2 = props.sectors || props.data || [];
      return result.concat(data2.map(function(entry) {
        return {
          type: legendItem.props.iconType || item.props.legendType,
          value: entry.name,
          color: entry.fill,
          payload: entry
        };
      }));
    }, []);
  } else {
    legendData = (formattedGraphicalItems || []).map(function(_ref3) {
      var item = _ref3.item;
      var _item$props = item.props, dataKey = _item$props.dataKey, name = _item$props.name, legendType = _item$props.legendType, hide2 = _item$props.hide;
      return {
        inactive: hide2,
        dataKey,
        type: legendItem.props.iconType || legendType || "square",
        color: getMainColorOfGraphicItem(item),
        value: name || dataKey,
        // @ts-expect-error property strokeDasharray is required in Payload but optional in props
        payload: item.props
      };
    });
  }
  return _objectSpread$r(_objectSpread$r(_objectSpread$r({}, legendItem.props), Legend.getWithHeight(legendItem, legendWidth)), {}, {
    payload: legendData,
    item: legendItem
  });
};
function _typeof$t(o2) {
  "@babel/helpers - typeof";
  return _typeof$t = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$t(o2);
}
function ownKeys$r(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$q(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$r(Object(t2), true).forEach(function(r3) {
      _defineProperty$s(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$r(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$s(obj, key, value) {
  key = _toPropertyKey$r(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$r(t2) {
  var i2 = _toPrimitive$r(t2, "string");
  return "symbol" == _typeof$t(i2) ? i2 : String(i2);
}
function _toPrimitive$r(t2, r2) {
  if ("object" != _typeof$t(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$t(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function _toConsumableArray$8(arr) {
  return _arrayWithoutHoles$8(arr) || _iterableToArray$9(arr) || _unsupportedIterableToArray$d(arr) || _nonIterableSpread$8();
}
function _nonIterableSpread$8() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$d(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$d(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$d(o2, minLen);
}
function _iterableToArray$9(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles$8(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$d(arr);
}
function _arrayLikeToArray$d(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function getValueByDataKey(obj, dataKey, defaultValue2) {
  if (isNil$1(obj) || isNil$1(dataKey)) {
    return defaultValue2;
  }
  if (isNumOrStr(dataKey)) {
    return get$5(obj, dataKey, defaultValue2);
  }
  if (isFunction$4(dataKey)) {
    return dataKey(obj);
  }
  return defaultValue2;
}
function getDomainOfDataByKey(data2, key, type2, filterNil) {
  var flattenData = flatMap$1(data2, function(entry) {
    return getValueByDataKey(entry, key);
  });
  if (type2 === "number") {
    var domain = flattenData.filter(function(entry) {
      return isNumber(entry) || parseFloat(entry);
    });
    return domain.length ? [min$1(domain), max$1(domain)] : [Infinity, -Infinity];
  }
  var validateData = filterNil ? flattenData.filter(function(entry) {
    return !isNil$1(entry);
  }) : flattenData;
  return validateData.map(function(entry) {
    return isNumOrStr(entry) || entry instanceof Date ? entry : "";
  });
}
var calculateActiveTickIndex = function calculateActiveTickIndex2(coordinate) {
  var _ticks$length;
  var ticks2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  var unsortedTicks = arguments.length > 2 ? arguments[2] : void 0;
  var axis = arguments.length > 3 ? arguments[3] : void 0;
  var index2 = -1;
  var len = (_ticks$length = ticks2 === null || ticks2 === void 0 ? void 0 : ticks2.length) !== null && _ticks$length !== void 0 ? _ticks$length : 0;
  if (len <= 1) {
    return 0;
  }
  if (axis && axis.axisType === "angleAxis" && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {
    var range3 = axis.range;
    for (var i2 = 0; i2 < len; i2++) {
      var before = i2 > 0 ? unsortedTicks[i2 - 1].coordinate : unsortedTicks[len - 1].coordinate;
      var cur = unsortedTicks[i2].coordinate;
      var after = i2 >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i2 + 1].coordinate;
      var sameDirectionCoord = void 0;
      if (mathSign(cur - before) !== mathSign(after - cur)) {
        var diffInterval = [];
        if (mathSign(after - cur) === mathSign(range3[1] - range3[0])) {
          sameDirectionCoord = after;
          var curInRange = cur + range3[1] - range3[0];
          diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);
          diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);
        } else {
          sameDirectionCoord = before;
          var afterInRange = after + range3[1] - range3[0];
          diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);
          diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);
        }
        var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];
        if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {
          index2 = unsortedTicks[i2].index;
          break;
        }
      } else {
        var minValue = Math.min(before, after);
        var maxValue = Math.max(before, after);
        if (coordinate > (minValue + cur) / 2 && coordinate <= (maxValue + cur) / 2) {
          index2 = unsortedTicks[i2].index;
          break;
        }
      }
    }
  } else {
    for (var _i = 0; _i < len; _i++) {
      if (_i === 0 && coordinate <= (ticks2[_i].coordinate + ticks2[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks2[_i].coordinate + ticks2[_i - 1].coordinate) / 2 && coordinate <= (ticks2[_i].coordinate + ticks2[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks2[_i].coordinate + ticks2[_i - 1].coordinate) / 2) {
        index2 = ticks2[_i].index;
        break;
      }
    }
  }
  return index2;
};
var getMainColorOfGraphicItem = function getMainColorOfGraphicItem2(item) {
  var _ref = item, displayName = _ref.type.displayName;
  var _item$props = item.props, stroke = _item$props.stroke, fill = _item$props.fill;
  var result;
  switch (displayName) {
    case "Line":
      result = stroke;
      break;
    case "Area":
    case "Radar":
      result = stroke && stroke !== "none" ? stroke : fill;
      break;
    default:
      result = fill;
      break;
  }
  return result;
};
var getBarSizeList = function getBarSizeList2(_ref2) {
  var globalSize = _ref2.barSize, totalSize = _ref2.totalSize, _ref2$stackGroups = _ref2.stackGroups, stackGroups = _ref2$stackGroups === void 0 ? {} : _ref2$stackGroups;
  if (!stackGroups) {
    return {};
  }
  var result = {};
  var numericAxisIds = Object.keys(stackGroups);
  for (var i2 = 0, len = numericAxisIds.length; i2 < len; i2++) {
    var sgs = stackGroups[numericAxisIds[i2]].stackGroups;
    var stackIds = Object.keys(sgs);
    for (var j = 0, sLen = stackIds.length; j < sLen; j++) {
      var _sgs$stackIds$j = sgs[stackIds[j]], items2 = _sgs$stackIds$j.items, cateAxisId = _sgs$stackIds$j.cateAxisId;
      var barItems = items2.filter(function(item) {
        return getDisplayName(item.type).indexOf("Bar") >= 0;
      });
      if (barItems && barItems.length) {
        var selfSize = barItems[0].props.barSize;
        var cateId = barItems[0].props[cateAxisId];
        if (!result[cateId]) {
          result[cateId] = [];
        }
        var barSize = isNil$1(selfSize) ? globalSize : selfSize;
        result[cateId].push({
          item: barItems[0],
          stackList: barItems.slice(1),
          barSize: isNil$1(barSize) ? void 0 : getPercentValue(barSize, totalSize, 0)
        });
      }
    }
  }
  return result;
};
var getBarPosition = function getBarPosition2(_ref3) {
  var barGap = _ref3.barGap, barCategoryGap = _ref3.barCategoryGap, bandSize = _ref3.bandSize, _ref3$sizeList = _ref3.sizeList, sizeList = _ref3$sizeList === void 0 ? [] : _ref3$sizeList, maxBarSize = _ref3.maxBarSize;
  var len = sizeList.length;
  if (len < 1)
    return null;
  var realBarGap = getPercentValue(barGap, bandSize, 0, true);
  var result;
  var initialValue = [];
  if (sizeList[0].barSize === +sizeList[0].barSize) {
    var useFull = false;
    var fullBarSize = bandSize / len;
    var sum2 = sizeList.reduce(function(res, entry) {
      return res + entry.barSize || 0;
    }, 0);
    sum2 += (len - 1) * realBarGap;
    if (sum2 >= bandSize) {
      sum2 -= (len - 1) * realBarGap;
      realBarGap = 0;
    }
    if (sum2 >= bandSize && fullBarSize > 0) {
      useFull = true;
      fullBarSize *= 0.9;
      sum2 = len * fullBarSize;
    }
    var offset2 = (bandSize - sum2) / 2 >> 0;
    var prev = {
      offset: offset2 - realBarGap,
      size: 0
    };
    result = sizeList.reduce(function(res, entry) {
      var newPosition = {
        item: entry.item,
        position: {
          offset: prev.offset + prev.size + realBarGap,
          // @ts-expect-error the type check above does not check for type number explicitly
          size: useFull ? fullBarSize : entry.barSize
        }
      };
      var newRes = [].concat(_toConsumableArray$8(res), [newPosition]);
      prev = newRes[newRes.length - 1].position;
      if (entry.stackList && entry.stackList.length) {
        entry.stackList.forEach(function(item) {
          newRes.push({
            item,
            position: prev
          });
        });
      }
      return newRes;
    }, initialValue);
  } else {
    var _offset = getPercentValue(barCategoryGap, bandSize, 0, true);
    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {
      realBarGap = 0;
    }
    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;
    if (originalSize > 1) {
      originalSize >>= 0;
    }
    var size2 = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;
    result = sizeList.reduce(function(res, entry, i2) {
      var newRes = [].concat(_toConsumableArray$8(res), [{
        item: entry.item,
        position: {
          offset: _offset + (originalSize + realBarGap) * i2 + (originalSize - size2) / 2,
          size: size2
        }
      }]);
      if (entry.stackList && entry.stackList.length) {
        entry.stackList.forEach(function(item) {
          newRes.push({
            item,
            position: newRes[newRes.length - 1].position
          });
        });
      }
      return newRes;
    }, initialValue);
  }
  return result;
};
var appendOffsetOfLegend = function appendOffsetOfLegend2(offset2, _unused, props, legendBox) {
  var children2 = props.children, width = props.width, margin = props.margin;
  var legendWidth = width - (margin.left || 0) - (margin.right || 0);
  var legendProps = getLegendProps({
    children: children2,
    legendWidth
  });
  if (legendProps) {
    var _ref4 = legendBox || {}, boxWidth = _ref4.width, boxHeight = _ref4.height;
    var align = legendProps.align, verticalAlign = legendProps.verticalAlign, layout = legendProps.layout;
    if ((layout === "vertical" || layout === "horizontal" && verticalAlign === "middle") && align !== "center" && isNumber(offset2[align])) {
      return _objectSpread$q(_objectSpread$q({}, offset2), {}, _defineProperty$s({}, align, offset2[align] + (boxWidth || 0)));
    }
    if ((layout === "horizontal" || layout === "vertical" && align === "center") && verticalAlign !== "middle" && isNumber(offset2[verticalAlign])) {
      return _objectSpread$q(_objectSpread$q({}, offset2), {}, _defineProperty$s({}, verticalAlign, offset2[verticalAlign] + (boxHeight || 0)));
    }
  }
  return offset2;
};
var isErrorBarRelevantForAxis = function isErrorBarRelevantForAxis2(layout, axisType, direction) {
  if (isNil$1(axisType)) {
    return true;
  }
  if (layout === "horizontal") {
    return axisType === "yAxis";
  }
  if (layout === "vertical") {
    return axisType === "xAxis";
  }
  if (direction === "x") {
    return axisType === "xAxis";
  }
  if (direction === "y") {
    return axisType === "yAxis";
  }
  return true;
};
var getDomainOfErrorBars = function getDomainOfErrorBars2(data2, item, dataKey, layout, axisType) {
  var children2 = item.props.children;
  var errorBars = findAllByType(children2, ErrorBar).filter(function(errorBarChild) {
    return isErrorBarRelevantForAxis(layout, axisType, errorBarChild.props.direction);
  });
  if (errorBars && errorBars.length) {
    var keys2 = errorBars.map(function(errorBarChild) {
      return errorBarChild.props.dataKey;
    });
    return data2.reduce(function(result, entry) {
      var entryValue = getValueByDataKey(entry, dataKey);
      if (isNil$1(entryValue))
        return result;
      var mainValue = Array.isArray(entryValue) ? [min$1(entryValue), max$1(entryValue)] : [entryValue, entryValue];
      var errorDomain = keys2.reduce(function(prevErrorArr, k2) {
        var errorValue = getValueByDataKey(entry, k2, 0);
        var lowerValue = mainValue[0] - Math.abs(Array.isArray(errorValue) ? errorValue[0] : errorValue);
        var upperValue = mainValue[1] + Math.abs(Array.isArray(errorValue) ? errorValue[1] : errorValue);
        return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];
      }, [Infinity, -Infinity]);
      return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];
    }, [Infinity, -Infinity]);
  }
  return null;
};
var parseErrorBarsOfAxis = function parseErrorBarsOfAxis2(data2, items2, dataKey, axisType, layout) {
  var domains = items2.map(function(item) {
    return getDomainOfErrorBars(data2, item, dataKey, layout, axisType);
  }).filter(function(entry) {
    return !isNil$1(entry);
  });
  if (domains && domains.length) {
    return domains.reduce(function(result, entry) {
      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];
    }, [Infinity, -Infinity]);
  }
  return null;
};
var getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis2(data2, items2, type2, layout, filterNil) {
  var domains = items2.map(function(item) {
    var dataKey = item.props.dataKey;
    if (type2 === "number" && dataKey) {
      return getDomainOfErrorBars(data2, item, dataKey, layout) || getDomainOfDataByKey(data2, dataKey, type2, filterNil);
    }
    return getDomainOfDataByKey(data2, dataKey, type2, filterNil);
  });
  if (type2 === "number") {
    return domains.reduce(
      // @ts-expect-error if (type === number) means that the domain is numerical type
      // - but this link is missing in the type definition
      function(result, entry) {
        return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];
      },
      [Infinity, -Infinity]
    );
  }
  var tag = {};
  return domains.reduce(function(result, entry) {
    for (var i2 = 0, len = entry.length; i2 < len; i2++) {
      if (!tag[entry[i2]]) {
        tag[entry[i2]] = true;
        result.push(entry[i2]);
      }
    }
    return result;
  }, []);
};
var isCategoricalAxis = function isCategoricalAxis2(layout, axisType) {
  return layout === "horizontal" && axisType === "xAxis" || layout === "vertical" && axisType === "yAxis" || layout === "centric" && axisType === "angleAxis" || layout === "radial" && axisType === "radiusAxis";
};
var getCoordinatesOfGrid = function getCoordinatesOfGrid2(ticks2, minValue, maxValue, syncWithTicks) {
  if (syncWithTicks) {
    return ticks2.map(function(entry) {
      return entry.coordinate;
    });
  }
  var hasMin, hasMax;
  var values = ticks2.map(function(entry) {
    if (entry.coordinate === minValue) {
      hasMin = true;
    }
    if (entry.coordinate === maxValue) {
      hasMax = true;
    }
    return entry.coordinate;
  });
  if (!hasMin) {
    values.push(minValue);
  }
  if (!hasMax) {
    values.push(maxValue);
  }
  return values;
};
var getTicksOfAxis = function getTicksOfAxis2(axis, isGrid, isAll) {
  if (!axis)
    return null;
  var scale = axis.scale;
  var duplicateDomain = axis.duplicateDomain, type2 = axis.type, range3 = axis.range;
  var offsetForBand = axis.realScaleType === "scaleBand" ? scale.bandwidth() / 2 : 2;
  var offset2 = (isGrid || isAll) && type2 === "category" && scale.bandwidth ? scale.bandwidth() / offsetForBand : 0;
  offset2 = axis.axisType === "angleAxis" && (range3 === null || range3 === void 0 ? void 0 : range3.length) >= 2 ? mathSign(range3[0] - range3[1]) * 2 * offset2 : offset2;
  if (isGrid && (axis.ticks || axis.niceTicks)) {
    var result = (axis.ticks || axis.niceTicks).map(function(entry) {
      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;
      return {
        // If the scaleContent is not a number, the coordinate will be NaN.
        // That could be the case for example with a PointScale and a string as domain.
        coordinate: scale(scaleContent) + offset2,
        value: entry,
        offset: offset2
      };
    });
    return result.filter(function(row) {
      return !isNan(row.coordinate);
    });
  }
  if (axis.isCategorical && axis.categoricalDomain) {
    return axis.categoricalDomain.map(function(entry, index2) {
      return {
        coordinate: scale(entry) + offset2,
        value: entry,
        index: index2,
        offset: offset2
      };
    });
  }
  if (scale.ticks && !isAll) {
    return scale.ticks(axis.tickCount).map(function(entry) {
      return {
        coordinate: scale(entry) + offset2,
        value: entry,
        offset: offset2
      };
    });
  }
  return scale.domain().map(function(entry, index2) {
    return {
      coordinate: scale(entry) + offset2,
      value: duplicateDomain ? duplicateDomain[entry] : entry,
      index: index2,
      offset: offset2
    };
  });
};
var handlerWeakMap = /* @__PURE__ */ new WeakMap();
var combineEventHandlers = function combineEventHandlers2(defaultHandler, childHandler) {
  if (typeof childHandler !== "function") {
    return defaultHandler;
  }
  if (!handlerWeakMap.has(defaultHandler)) {
    handlerWeakMap.set(defaultHandler, /* @__PURE__ */ new WeakMap());
  }
  var childWeakMap = handlerWeakMap.get(defaultHandler);
  if (childWeakMap.has(childHandler)) {
    return childWeakMap.get(childHandler);
  }
  var combineHandler = function combineHandler2() {
    defaultHandler.apply(void 0, arguments);
    childHandler.apply(void 0, arguments);
  };
  childWeakMap.set(childHandler, combineHandler);
  return combineHandler;
};
var parseScale = function parseScale2(axis, chartType, hasBar) {
  var scale = axis.scale, type2 = axis.type, layout = axis.layout, axisType = axis.axisType;
  if (scale === "auto") {
    if (layout === "radial" && axisType === "radiusAxis") {
      return {
        scale: band(),
        realScaleType: "band"
      };
    }
    if (layout === "radial" && axisType === "angleAxis") {
      return {
        scale: linear$1(),
        realScaleType: "linear"
      };
    }
    if (type2 === "category" && chartType && (chartType.indexOf("LineChart") >= 0 || chartType.indexOf("AreaChart") >= 0 || chartType.indexOf("ComposedChart") >= 0 && !hasBar)) {
      return {
        scale: point(),
        realScaleType: "point"
      };
    }
    if (type2 === "category") {
      return {
        scale: band(),
        realScaleType: "band"
      };
    }
    return {
      scale: linear$1(),
      realScaleType: "linear"
    };
  }
  if (isString$3(scale)) {
    var name = "scale".concat(upperFirst$1(scale));
    return {
      scale: (d3Scales[name] || point)(),
      realScaleType: d3Scales[name] ? name : "point"
    };
  }
  return isFunction$4(scale) ? {
    scale
  } : {
    scale: point(),
    realScaleType: "point"
  };
};
var EPS = 1e-4;
var checkDomainOfScale = function checkDomainOfScale2(scale) {
  var domain = scale.domain();
  if (!domain || domain.length <= 2) {
    return;
  }
  var len = domain.length;
  var range3 = scale.range();
  var minValue = Math.min(range3[0], range3[1]) - EPS;
  var maxValue = Math.max(range3[0], range3[1]) + EPS;
  var first = scale(domain[0]);
  var last2 = scale(domain[len - 1]);
  if (first < minValue || first > maxValue || last2 < minValue || last2 > maxValue) {
    scale.domain([domain[0], domain[len - 1]]);
  }
};
var findPositionOfBar = function findPositionOfBar2(barPosition, child) {
  if (!barPosition) {
    return null;
  }
  for (var i2 = 0, len = barPosition.length; i2 < len; i2++) {
    if (barPosition[i2].item === child) {
      return barPosition[i2].position;
    }
  }
  return null;
};
var truncateByDomain = function truncateByDomain2(value, domain) {
  if (!domain || domain.length !== 2 || !isNumber(domain[0]) || !isNumber(domain[1])) {
    return value;
  }
  var minValue = Math.min(domain[0], domain[1]);
  var maxValue = Math.max(domain[0], domain[1]);
  var result = [value[0], value[1]];
  if (!isNumber(value[0]) || value[0] < minValue) {
    result[0] = minValue;
  }
  if (!isNumber(value[1]) || value[1] > maxValue) {
    result[1] = maxValue;
  }
  if (result[0] > maxValue) {
    result[0] = maxValue;
  }
  if (result[1] < minValue) {
    result[1] = minValue;
  }
  return result;
};
var offsetSign = function offsetSign2(series) {
  var n2 = series.length;
  if (n2 <= 0) {
    return;
  }
  for (var j = 0, m2 = series[0].length; j < m2; ++j) {
    var positive = 0;
    var negative = 0;
    for (var i2 = 0; i2 < n2; ++i2) {
      var value = isNan(series[i2][j][1]) ? series[i2][j][0] : series[i2][j][1];
      if (value >= 0) {
        series[i2][j][0] = positive;
        series[i2][j][1] = positive + value;
        positive = series[i2][j][1];
      } else {
        series[i2][j][0] = negative;
        series[i2][j][1] = negative + value;
        negative = series[i2][j][1];
      }
    }
  }
};
var offsetPositive = function offsetPositive2(series) {
  var n2 = series.length;
  if (n2 <= 0) {
    return;
  }
  for (var j = 0, m2 = series[0].length; j < m2; ++j) {
    var positive = 0;
    for (var i2 = 0; i2 < n2; ++i2) {
      var value = isNan(series[i2][j][1]) ? series[i2][j][0] : series[i2][j][1];
      if (value >= 0) {
        series[i2][j][0] = positive;
        series[i2][j][1] = positive + value;
        positive = series[i2][j][1];
      } else {
        series[i2][j][0] = 0;
        series[i2][j][1] = 0;
      }
    }
  }
};
var STACK_OFFSET_MAP = {
  sign: offsetSign,
  // @ts-expect-error definitelytyped types are incorrect
  expand: stackOffsetExpand,
  // @ts-expect-error definitelytyped types are incorrect
  none: stackOffsetNone,
  // @ts-expect-error definitelytyped types are incorrect
  silhouette: stackOffsetSilhouette,
  // @ts-expect-error definitelytyped types are incorrect
  wiggle: stackOffsetWiggle,
  positive: offsetPositive
};
var getStackedData = function getStackedData2(data2, stackItems, offsetType) {
  var dataKeys = stackItems.map(function(item) {
    return item.props.dataKey;
  });
  var offsetAccessor = STACK_OFFSET_MAP[offsetType];
  var stack = shapeStack().keys(dataKeys).value(function(d2, key) {
    return +getValueByDataKey(d2, key, 0);
  }).order(stackOrderNone).offset(offsetAccessor);
  return stack(data2);
};
var getStackGroupsByAxisId = function getStackGroupsByAxisId2(data2, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {
  if (!data2) {
    return null;
  }
  var items2 = reverseStackOrder ? _items.reverse() : _items;
  var parentStackGroupsInitialValue = {};
  var stackGroups = items2.reduce(function(result, item) {
    var _item$props2 = item.props, stackId = _item$props2.stackId, hide2 = _item$props2.hide;
    if (hide2) {
      return result;
    }
    var axisId = item.props[numericAxisId];
    var parentGroup = result[axisId] || {
      hasStack: false,
      stackGroups: {}
    };
    if (isNumOrStr(stackId)) {
      var childGroup = parentGroup.stackGroups[stackId] || {
        numericAxisId,
        cateAxisId,
        items: []
      };
      childGroup.items.push(item);
      parentGroup.hasStack = true;
      parentGroup.stackGroups[stackId] = childGroup;
    } else {
      parentGroup.stackGroups[uniqueId("_stackId_")] = {
        numericAxisId,
        cateAxisId,
        items: [item]
      };
    }
    return _objectSpread$q(_objectSpread$q({}, result), {}, _defineProperty$s({}, axisId, parentGroup));
  }, parentStackGroupsInitialValue);
  var axisStackGroupsInitialValue = {};
  return Object.keys(stackGroups).reduce(function(result, axisId) {
    var group = stackGroups[axisId];
    if (group.hasStack) {
      var stackGroupsInitialValue = {};
      group.stackGroups = Object.keys(group.stackGroups).reduce(function(res, stackId) {
        var g2 = group.stackGroups[stackId];
        return _objectSpread$q(_objectSpread$q({}, res), {}, _defineProperty$s({}, stackId, {
          numericAxisId,
          cateAxisId,
          items: g2.items,
          stackedData: getStackedData(data2, g2.items, offsetType)
        }));
      }, stackGroupsInitialValue);
    }
    return _objectSpread$q(_objectSpread$q({}, result), {}, _defineProperty$s({}, axisId, group));
  }, axisStackGroupsInitialValue);
};
var getTicksOfScale = function getTicksOfScale2(scale, opts) {
  var realScaleType = opts.realScaleType, type2 = opts.type, tickCount = opts.tickCount, originalDomain = opts.originalDomain, allowDecimals = opts.allowDecimals;
  var scaleType = realScaleType || opts.scale;
  if (scaleType !== "auto" && scaleType !== "linear") {
    return null;
  }
  if (tickCount && type2 === "number" && originalDomain && (originalDomain[0] === "auto" || originalDomain[1] === "auto")) {
    var domain = scale.domain();
    if (!domain.length) {
      return null;
    }
    var tickValues = getNiceTickValues(domain, tickCount, allowDecimals);
    scale.domain([min$1(tickValues), max$1(tickValues)]);
    return {
      niceTicks: tickValues
    };
  }
  if (tickCount && type2 === "number") {
    var _domain = scale.domain();
    var _tickValues = getTickValuesFixedDomain(_domain, tickCount, allowDecimals);
    return {
      niceTicks: _tickValues
    };
  }
  return null;
};
function getCateCoordinateOfLine(_ref5) {
  var axis = _ref5.axis, ticks2 = _ref5.ticks, bandSize = _ref5.bandSize, entry = _ref5.entry, index2 = _ref5.index, dataKey = _ref5.dataKey;
  if (axis.type === "category") {
    if (!axis.allowDuplicatedCategory && axis.dataKey && !isNil$1(entry[axis.dataKey])) {
      var matchedTick = findEntryInArray(ticks2, "value", entry[axis.dataKey]);
      if (matchedTick) {
        return matchedTick.coordinate + bandSize / 2;
      }
    }
    return ticks2[index2] ? ticks2[index2].coordinate + bandSize / 2 : null;
  }
  var value = getValueByDataKey(entry, !isNil$1(dataKey) ? dataKey : axis.dataKey);
  return !isNil$1(value) ? axis.scale(value) : null;
}
var getCateCoordinateOfBar = function getCateCoordinateOfBar2(_ref6) {
  var axis = _ref6.axis, ticks2 = _ref6.ticks, offset2 = _ref6.offset, bandSize = _ref6.bandSize, entry = _ref6.entry, index2 = _ref6.index;
  if (axis.type === "category") {
    return ticks2[index2] ? ticks2[index2].coordinate + offset2 : null;
  }
  var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index2]);
  return !isNil$1(value) ? axis.scale(value) - bandSize / 2 + offset2 : null;
};
var getBaseValueOfBar = function getBaseValueOfBar2(_ref7) {
  var numericAxis = _ref7.numericAxis;
  var domain = numericAxis.scale.domain();
  if (numericAxis.type === "number") {
    var minValue = Math.min(domain[0], domain[1]);
    var maxValue = Math.max(domain[0], domain[1]);
    if (minValue <= 0 && maxValue >= 0) {
      return 0;
    }
    if (maxValue < 0) {
      return maxValue;
    }
    return minValue;
  }
  return domain[0];
};
var getStackedDataOfItem = function getStackedDataOfItem2(item, stackGroups) {
  var stackId = item.props.stackId;
  if (isNumOrStr(stackId)) {
    var group = stackGroups[stackId];
    if (group) {
      var itemIndex = group.items.indexOf(item);
      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;
    }
  }
  return null;
};
var getDomainOfSingle = function getDomainOfSingle2(data2) {
  return data2.reduce(function(result, entry) {
    return [min$1(entry.concat([result[0]]).filter(isNumber)), max$1(entry.concat([result[1]]).filter(isNumber))];
  }, [Infinity, -Infinity]);
};
var getDomainOfStackGroups = function getDomainOfStackGroups2(stackGroups, startIndex, endIndex) {
  return Object.keys(stackGroups).reduce(function(result, stackId) {
    var group = stackGroups[stackId];
    var stackedData = group.stackedData;
    var domain = stackedData.reduce(function(res, entry) {
      var s2 = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));
      return [Math.min(res[0], s2[0]), Math.max(res[1], s2[1])];
    }, [Infinity, -Infinity]);
    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];
  }, [Infinity, -Infinity]).map(function(result) {
    return result === Infinity || result === -Infinity ? 0 : result;
  });
};
var MIN_VALUE_REG = /^dataMin[\s]*-[\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;
var MAX_VALUE_REG = /^dataMax[\s]*\+[\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;
var parseSpecifiedDomain = function parseSpecifiedDomain2(specifiedDomain, dataDomain, allowDataOverflow) {
  if (isFunction$4(specifiedDomain)) {
    return specifiedDomain(dataDomain, allowDataOverflow);
  }
  if (!Array.isArray(specifiedDomain)) {
    return dataDomain;
  }
  var domain = [];
  if (isNumber(specifiedDomain[0])) {
    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);
  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {
    var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];
    domain[0] = dataDomain[0] - value;
  } else if (isFunction$4(specifiedDomain[0])) {
    domain[0] = specifiedDomain[0](dataDomain[0]);
  } else {
    domain[0] = dataDomain[0];
  }
  if (isNumber(specifiedDomain[1])) {
    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);
  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {
    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];
    domain[1] = dataDomain[1] + _value;
  } else if (isFunction$4(specifiedDomain[1])) {
    domain[1] = specifiedDomain[1](dataDomain[1]);
  } else {
    domain[1] = dataDomain[1];
  }
  return domain;
};
var getBandSizeOfAxis = function getBandSizeOfAxis2(axis, ticks2, isBar) {
  if (axis && axis.scale && axis.scale.bandwidth) {
    var bandWidth = axis.scale.bandwidth();
    if (!isBar || bandWidth > 0) {
      return bandWidth;
    }
  }
  if (axis && ticks2 && ticks2.length >= 2) {
    var orderedTicks = sortBy$1(ticks2, function(o2) {
      return o2.coordinate;
    });
    var bandSize = Infinity;
    for (var i2 = 1, len = orderedTicks.length; i2 < len; i2++) {
      var cur = orderedTicks[i2];
      var prev = orderedTicks[i2 - 1];
      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);
    }
    return bandSize === Infinity ? 0 : bandSize;
  }
  return isBar ? void 0 : 0;
};
var parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis2(specifiedDomain, calculatedDomain, axisChild) {
  if (!specifiedDomain || !specifiedDomain.length) {
    return calculatedDomain;
  }
  if (isEqual$1(specifiedDomain, get$5(axisChild, "type.defaultProps.domain"))) {
    return calculatedDomain;
  }
  return specifiedDomain;
};
var getTooltipItem = function getTooltipItem2(graphicalItem, payload) {
  var _graphicalItem$props = graphicalItem.props, dataKey = _graphicalItem$props.dataKey, name = _graphicalItem$props.name, unit2 = _graphicalItem$props.unit, formatter = _graphicalItem$props.formatter, tooltipType = _graphicalItem$props.tooltipType, chartType = _graphicalItem$props.chartType, hide2 = _graphicalItem$props.hide;
  return _objectSpread$q(_objectSpread$q({}, filterProps(graphicalItem, false)), {}, {
    dataKey,
    unit: unit2,
    formatter,
    name: name || dataKey,
    color: getMainColorOfGraphicItem(graphicalItem),
    value: getValueByDataKey(payload, dataKey),
    type: tooltipType,
    payload,
    chartType,
    hide: hide2
  });
};
function _typeof$s(o2) {
  "@babel/helpers - typeof";
  return _typeof$s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$s(o2);
}
function ownKeys$q(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$p(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$q(Object(t2), true).forEach(function(r3) {
      _defineProperty$r(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$q(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$r(obj, key, value) {
  key = _toPropertyKey$q(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$q(t2) {
  var i2 = _toPrimitive$q(t2, "string");
  return "symbol" == _typeof$s(i2) ? i2 : String(i2);
}
function _toPrimitive$q(t2, r2) {
  if ("object" != _typeof$s(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$s(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var RADIAN = Math.PI / 180;
var radianToDegree = function radianToDegree2(angleInRadian) {
  return angleInRadian * 180 / Math.PI;
};
var polarToCartesian = function polarToCartesian2(cx2, cy, radius, angle2) {
  return {
    x: cx2 + Math.cos(-RADIAN * angle2) * radius,
    y: cy + Math.sin(-RADIAN * angle2) * radius
  };
};
var distanceBetweenPoints = function distanceBetweenPoints2(point2, anotherPoint) {
  var x12 = point2.x, y12 = point2.y;
  var x2 = anotherPoint.x, y2 = anotherPoint.y;
  return Math.sqrt(Math.pow(x12 - x2, 2) + Math.pow(y12 - y2, 2));
};
var getAngleOfPoint = function getAngleOfPoint2(_ref, _ref2) {
  var x2 = _ref.x, y2 = _ref.y;
  var cx2 = _ref2.cx, cy = _ref2.cy;
  var radius = distanceBetweenPoints({
    x: x2,
    y: y2
  }, {
    x: cx2,
    y: cy
  });
  if (radius <= 0) {
    return {
      radius
    };
  }
  var cos2 = (x2 - cx2) / radius;
  var angleInRadian = Math.acos(cos2);
  if (y2 > cy) {
    angleInRadian = 2 * Math.PI - angleInRadian;
  }
  return {
    radius,
    angle: radianToDegree(angleInRadian),
    angleInRadian
  };
};
var formatAngleOfSector = function formatAngleOfSector2(_ref3) {
  var startAngle = _ref3.startAngle, endAngle = _ref3.endAngle;
  var startCnt = Math.floor(startAngle / 360);
  var endCnt = Math.floor(endAngle / 360);
  var min2 = Math.min(startCnt, endCnt);
  return {
    startAngle: startAngle - min2 * 360,
    endAngle: endAngle - min2 * 360
  };
};
var reverseFormatAngleOfSetor = function reverseFormatAngleOfSetor2(angle2, _ref4) {
  var startAngle = _ref4.startAngle, endAngle = _ref4.endAngle;
  var startCnt = Math.floor(startAngle / 360);
  var endCnt = Math.floor(endAngle / 360);
  var min2 = Math.min(startCnt, endCnt);
  return angle2 + min2 * 360;
};
var inRangeOfSector = function inRangeOfSector2(_ref5, sector) {
  var x2 = _ref5.x, y2 = _ref5.y;
  var _getAngleOfPoint = getAngleOfPoint({
    x: x2,
    y: y2
  }, sector), radius = _getAngleOfPoint.radius, angle2 = _getAngleOfPoint.angle;
  var innerRadius = sector.innerRadius, outerRadius = sector.outerRadius;
  if (radius < innerRadius || radius > outerRadius) {
    return false;
  }
  if (radius === 0) {
    return true;
  }
  var _formatAngleOfSector = formatAngleOfSector(sector), startAngle = _formatAngleOfSector.startAngle, endAngle = _formatAngleOfSector.endAngle;
  var formatAngle = angle2;
  var inRange;
  if (startAngle <= endAngle) {
    while (formatAngle > endAngle) {
      formatAngle -= 360;
    }
    while (formatAngle < startAngle) {
      formatAngle += 360;
    }
    inRange = formatAngle >= startAngle && formatAngle <= endAngle;
  } else {
    while (formatAngle > startAngle) {
      formatAngle -= 360;
    }
    while (formatAngle < endAngle) {
      formatAngle += 360;
    }
    inRange = formatAngle >= endAngle && formatAngle <= startAngle;
  }
  if (inRange) {
    return _objectSpread$p(_objectSpread$p({}, sector), {}, {
      radius,
      angle: reverseFormatAngleOfSetor(formatAngle, sector)
    });
  }
  return null;
};
function _typeof$r(o2) {
  "@babel/helpers - typeof";
  return _typeof$r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$r(o2);
}
var _excluded$m = ["offset"];
function _toConsumableArray$7(arr) {
  return _arrayWithoutHoles$7(arr) || _iterableToArray$8(arr) || _unsupportedIterableToArray$c(arr) || _nonIterableSpread$7();
}
function _nonIterableSpread$7() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$c(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$c(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$c(o2, minLen);
}
function _iterableToArray$8(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles$7(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$c(arr);
}
function _arrayLikeToArray$c(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function _objectWithoutProperties$d(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$c(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$c(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function ownKeys$p(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$o(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$p(Object(t2), true).forEach(function(r3) {
      _defineProperty$q(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$p(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$q(obj, key, value) {
  key = _toPropertyKey$p(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$p(t2) {
  var i2 = _toPrimitive$p(t2, "string");
  return "symbol" == _typeof$r(i2) ? i2 : String(i2);
}
function _toPrimitive$p(t2, r2) {
  if ("object" != _typeof$r(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$r(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function _extends$p() {
  _extends$p = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$p.apply(this, arguments);
}
var getLabel = function getLabel2(props) {
  var value = props.value, formatter = props.formatter;
  var label = isNil$1(props.children) ? value : props.children;
  if (isFunction$4(formatter)) {
    return formatter(label);
  }
  return label;
};
var getDeltaAngle$1 = function getDeltaAngle(startAngle, endAngle) {
  var sign2 = mathSign(endAngle - startAngle);
  var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);
  return sign2 * deltaAngle;
};
var renderRadialLabel = function renderRadialLabel2(labelProps, label, attrs) {
  var position = labelProps.position, viewBox = labelProps.viewBox, offset2 = labelProps.offset, className = labelProps.className;
  var _ref = viewBox, cx2 = _ref.cx, cy = _ref.cy, innerRadius = _ref.innerRadius, outerRadius = _ref.outerRadius, startAngle = _ref.startAngle, endAngle = _ref.endAngle, clockWise = _ref.clockWise;
  var radius = (innerRadius + outerRadius) / 2;
  var deltaAngle = getDeltaAngle$1(startAngle, endAngle);
  var sign2 = deltaAngle >= 0 ? 1 : -1;
  var labelAngle, direction;
  if (position === "insideStart") {
    labelAngle = startAngle + sign2 * offset2;
    direction = clockWise;
  } else if (position === "insideEnd") {
    labelAngle = endAngle - sign2 * offset2;
    direction = !clockWise;
  } else if (position === "end") {
    labelAngle = endAngle + sign2 * offset2;
    direction = clockWise;
  }
  direction = deltaAngle <= 0 ? direction : !direction;
  var startPoint = polarToCartesian(cx2, cy, radius, labelAngle);
  var endPoint = polarToCartesian(cx2, cy, radius, labelAngle + (direction ? 1 : -1) * 359);
  var path = "M".concat(startPoint.x, ",").concat(startPoint.y, "\n    A").concat(radius, ",").concat(radius, ",0,1,").concat(direction ? 0 : 1, ",\n    ").concat(endPoint.x, ",").concat(endPoint.y);
  var id2 = isNil$1(labelProps.id) ? uniqueId("recharts-radial-line-") : labelProps.id;
  return /* @__PURE__ */ React.createElement("text", _extends$p({}, attrs, {
    dominantBaseline: "central",
    className: clsx$1("recharts-radial-bar-label", className)
  }), /* @__PURE__ */ React.createElement("defs", null, /* @__PURE__ */ React.createElement("path", {
    id: id2,
    d: path
  })), /* @__PURE__ */ React.createElement("textPath", {
    xlinkHref: "#".concat(id2)
  }, label));
};
var getAttrsOfPolarLabel = function getAttrsOfPolarLabel2(props) {
  var viewBox = props.viewBox, offset2 = props.offset, position = props.position;
  var _ref2 = viewBox, cx2 = _ref2.cx, cy = _ref2.cy, innerRadius = _ref2.innerRadius, outerRadius = _ref2.outerRadius, startAngle = _ref2.startAngle, endAngle = _ref2.endAngle;
  var midAngle = (startAngle + endAngle) / 2;
  if (position === "outside") {
    var _polarToCartesian = polarToCartesian(cx2, cy, outerRadius + offset2, midAngle), _x = _polarToCartesian.x, _y = _polarToCartesian.y;
    return {
      x: _x,
      y: _y,
      textAnchor: _x >= cx2 ? "start" : "end",
      verticalAnchor: "middle"
    };
  }
  if (position === "center") {
    return {
      x: cx2,
      y: cy,
      textAnchor: "middle",
      verticalAnchor: "middle"
    };
  }
  if (position === "centerTop") {
    return {
      x: cx2,
      y: cy,
      textAnchor: "middle",
      verticalAnchor: "start"
    };
  }
  if (position === "centerBottom") {
    return {
      x: cx2,
      y: cy,
      textAnchor: "middle",
      verticalAnchor: "end"
    };
  }
  var r2 = (innerRadius + outerRadius) / 2;
  var _polarToCartesian2 = polarToCartesian(cx2, cy, r2, midAngle), x2 = _polarToCartesian2.x, y2 = _polarToCartesian2.y;
  return {
    x: x2,
    y: y2,
    textAnchor: "middle",
    verticalAnchor: "middle"
  };
};
var getAttrsOfCartesianLabel = function getAttrsOfCartesianLabel2(props) {
  var viewBox = props.viewBox, parentViewBox = props.parentViewBox, offset2 = props.offset, position = props.position;
  var _ref3 = viewBox, x2 = _ref3.x, y2 = _ref3.y, width = _ref3.width, height = _ref3.height;
  var verticalSign = height >= 0 ? 1 : -1;
  var verticalOffset = verticalSign * offset2;
  var verticalEnd = verticalSign > 0 ? "end" : "start";
  var verticalStart = verticalSign > 0 ? "start" : "end";
  var horizontalSign = width >= 0 ? 1 : -1;
  var horizontalOffset = horizontalSign * offset2;
  var horizontalEnd = horizontalSign > 0 ? "end" : "start";
  var horizontalStart = horizontalSign > 0 ? "start" : "end";
  if (position === "top") {
    var attrs = {
      x: x2 + width / 2,
      y: y2 - verticalSign * offset2,
      textAnchor: "middle",
      verticalAnchor: verticalEnd
    };
    return _objectSpread$o(_objectSpread$o({}, attrs), parentViewBox ? {
      height: Math.max(y2 - parentViewBox.y, 0),
      width
    } : {});
  }
  if (position === "bottom") {
    var _attrs = {
      x: x2 + width / 2,
      y: y2 + height + verticalOffset,
      textAnchor: "middle",
      verticalAnchor: verticalStart
    };
    return _objectSpread$o(_objectSpread$o({}, _attrs), parentViewBox ? {
      height: Math.max(parentViewBox.y + parentViewBox.height - (y2 + height), 0),
      width
    } : {});
  }
  if (position === "left") {
    var _attrs2 = {
      x: x2 - horizontalOffset,
      y: y2 + height / 2,
      textAnchor: horizontalEnd,
      verticalAnchor: "middle"
    };
    return _objectSpread$o(_objectSpread$o({}, _attrs2), parentViewBox ? {
      width: Math.max(_attrs2.x - parentViewBox.x, 0),
      height
    } : {});
  }
  if (position === "right") {
    var _attrs3 = {
      x: x2 + width + horizontalOffset,
      y: y2 + height / 2,
      textAnchor: horizontalStart,
      verticalAnchor: "middle"
    };
    return _objectSpread$o(_objectSpread$o({}, _attrs3), parentViewBox ? {
      width: Math.max(parentViewBox.x + parentViewBox.width - _attrs3.x, 0),
      height
    } : {});
  }
  var sizeAttrs = parentViewBox ? {
    width,
    height
  } : {};
  if (position === "insideLeft") {
    return _objectSpread$o({
      x: x2 + horizontalOffset,
      y: y2 + height / 2,
      textAnchor: horizontalStart,
      verticalAnchor: "middle"
    }, sizeAttrs);
  }
  if (position === "insideRight") {
    return _objectSpread$o({
      x: x2 + width - horizontalOffset,
      y: y2 + height / 2,
      textAnchor: horizontalEnd,
      verticalAnchor: "middle"
    }, sizeAttrs);
  }
  if (position === "insideTop") {
    return _objectSpread$o({
      x: x2 + width / 2,
      y: y2 + verticalOffset,
      textAnchor: "middle",
      verticalAnchor: verticalStart
    }, sizeAttrs);
  }
  if (position === "insideBottom") {
    return _objectSpread$o({
      x: x2 + width / 2,
      y: y2 + height - verticalOffset,
      textAnchor: "middle",
      verticalAnchor: verticalEnd
    }, sizeAttrs);
  }
  if (position === "insideTopLeft") {
    return _objectSpread$o({
      x: x2 + horizontalOffset,
      y: y2 + verticalOffset,
      textAnchor: horizontalStart,
      verticalAnchor: verticalStart
    }, sizeAttrs);
  }
  if (position === "insideTopRight") {
    return _objectSpread$o({
      x: x2 + width - horizontalOffset,
      y: y2 + verticalOffset,
      textAnchor: horizontalEnd,
      verticalAnchor: verticalStart
    }, sizeAttrs);
  }
  if (position === "insideBottomLeft") {
    return _objectSpread$o({
      x: x2 + horizontalOffset,
      y: y2 + height - verticalOffset,
      textAnchor: horizontalStart,
      verticalAnchor: verticalEnd
    }, sizeAttrs);
  }
  if (position === "insideBottomRight") {
    return _objectSpread$o({
      x: x2 + width - horizontalOffset,
      y: y2 + height - verticalOffset,
      textAnchor: horizontalEnd,
      verticalAnchor: verticalEnd
    }, sizeAttrs);
  }
  if (isObject$9(position) && (isNumber(position.x) || isPercent(position.x)) && (isNumber(position.y) || isPercent(position.y))) {
    return _objectSpread$o({
      x: x2 + getPercentValue(position.x, width),
      y: y2 + getPercentValue(position.y, height),
      textAnchor: "end",
      verticalAnchor: "end"
    }, sizeAttrs);
  }
  return _objectSpread$o({
    x: x2 + width / 2,
    y: y2 + height / 2,
    textAnchor: "middle",
    verticalAnchor: "middle"
  }, sizeAttrs);
};
var isPolar = function isPolar2(viewBox) {
  return "cx" in viewBox && isNumber(viewBox.cx);
};
function Label$1(_ref4) {
  var _ref4$offset = _ref4.offset, offset2 = _ref4$offset === void 0 ? 5 : _ref4$offset, restProps = _objectWithoutProperties$d(_ref4, _excluded$m);
  var props = _objectSpread$o({
    offset: offset2
  }, restProps);
  var viewBox = props.viewBox, position = props.position, value = props.value, children2 = props.children, content = props.content, _props$className = props.className, className = _props$className === void 0 ? "" : _props$className, textBreakAll = props.textBreakAll;
  if (!viewBox || isNil$1(value) && isNil$1(children2) && !/* @__PURE__ */ reactExports.isValidElement(content) && !isFunction$4(content)) {
    return null;
  }
  if (/* @__PURE__ */ reactExports.isValidElement(content)) {
    return /* @__PURE__ */ reactExports.cloneElement(content, props);
  }
  var label;
  if (isFunction$4(content)) {
    label = /* @__PURE__ */ reactExports.createElement(content, props);
    if (/* @__PURE__ */ reactExports.isValidElement(label)) {
      return label;
    }
  } else {
    label = getLabel(props);
  }
  var isPolarLabel = isPolar(viewBox);
  var attrs = filterProps(props, true);
  if (isPolarLabel && (position === "insideStart" || position === "insideEnd" || position === "end")) {
    return renderRadialLabel(props, label, attrs);
  }
  var positionAttrs = isPolarLabel ? getAttrsOfPolarLabel(props) : getAttrsOfCartesianLabel(props);
  return /* @__PURE__ */ React.createElement(Text, _extends$p({
    className: clsx$1("recharts-label", className)
  }, attrs, positionAttrs, {
    breakAll: textBreakAll
  }), label);
}
Label$1.displayName = "Label";
var parseViewBox = function parseViewBox2(props) {
  var cx2 = props.cx, cy = props.cy, angle2 = props.angle, startAngle = props.startAngle, endAngle = props.endAngle, r2 = props.r, radius = props.radius, innerRadius = props.innerRadius, outerRadius = props.outerRadius, x2 = props.x, y2 = props.y, top = props.top, left = props.left, width = props.width, height = props.height, clockWise = props.clockWise, labelViewBox = props.labelViewBox;
  if (labelViewBox) {
    return labelViewBox;
  }
  if (isNumber(width) && isNumber(height)) {
    if (isNumber(x2) && isNumber(y2)) {
      return {
        x: x2,
        y: y2,
        width,
        height
      };
    }
    if (isNumber(top) && isNumber(left)) {
      return {
        x: top,
        y: left,
        width,
        height
      };
    }
  }
  if (isNumber(x2) && isNumber(y2)) {
    return {
      x: x2,
      y: y2,
      width: 0,
      height: 0
    };
  }
  if (isNumber(cx2) && isNumber(cy)) {
    return {
      cx: cx2,
      cy,
      startAngle: startAngle || angle2 || 0,
      endAngle: endAngle || angle2 || 0,
      innerRadius: innerRadius || 0,
      outerRadius: outerRadius || radius || r2 || 0,
      clockWise
    };
  }
  if (props.viewBox) {
    return props.viewBox;
  }
  return {};
};
var parseLabel = function parseLabel2(label, viewBox) {
  if (!label) {
    return null;
  }
  if (label === true) {
    return /* @__PURE__ */ React.createElement(Label$1, {
      key: "label-implicit",
      viewBox
    });
  }
  if (isNumOrStr(label)) {
    return /* @__PURE__ */ React.createElement(Label$1, {
      key: "label-implicit",
      viewBox,
      value: label
    });
  }
  if (/* @__PURE__ */ reactExports.isValidElement(label)) {
    if (label.type === Label$1) {
      return /* @__PURE__ */ reactExports.cloneElement(label, {
        key: "label-implicit",
        viewBox
      });
    }
    return /* @__PURE__ */ React.createElement(Label$1, {
      key: "label-implicit",
      content: label,
      viewBox
    });
  }
  if (isFunction$4(label)) {
    return /* @__PURE__ */ React.createElement(Label$1, {
      key: "label-implicit",
      content: label,
      viewBox
    });
  }
  if (isObject$9(label)) {
    return /* @__PURE__ */ React.createElement(Label$1, _extends$p({
      viewBox
    }, label, {
      key: "label-implicit"
    }));
  }
  return null;
};
var renderCallByParent$1 = function renderCallByParent(parentProps, viewBox) {
  var checkPropsLabel = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  if (!parentProps || !parentProps.children && checkPropsLabel && !parentProps.label) {
    return null;
  }
  var children2 = parentProps.children;
  var parentViewBox = parseViewBox(parentProps);
  var explicitChildren = findAllByType(children2, Label$1).map(function(child, index2) {
    return /* @__PURE__ */ reactExports.cloneElement(child, {
      viewBox: viewBox || parentViewBox,
      // eslint-disable-next-line react/no-array-index-key
      key: "label-".concat(index2)
    });
  });
  if (!checkPropsLabel) {
    return explicitChildren;
  }
  var implicitLabel = parseLabel(parentProps.label, viewBox || parentViewBox);
  return [implicitLabel].concat(_toConsumableArray$7(explicitChildren));
};
Label$1.parseViewBox = parseViewBox;
Label$1.renderCallByParent = renderCallByParent$1;
function last(array2) {
  var length2 = array2 == null ? 0 : array2.length;
  return length2 ? array2[length2 - 1] : void 0;
}
var last_1 = last;
const last$1 = /* @__PURE__ */ getDefaultExportFromCjs(last_1);
function _typeof$q(o2) {
  "@babel/helpers - typeof";
  return _typeof$q = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$q(o2);
}
var _excluded$l = ["valueAccessor"], _excluded2$3 = ["data", "dataKey", "clockWise", "id", "textBreakAll"];
function _toConsumableArray$6(arr) {
  return _arrayWithoutHoles$6(arr) || _iterableToArray$7(arr) || _unsupportedIterableToArray$b(arr) || _nonIterableSpread$6();
}
function _nonIterableSpread$6() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$b(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$b(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$b(o2, minLen);
}
function _iterableToArray$7(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles$6(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$b(arr);
}
function _arrayLikeToArray$b(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function _extends$o() {
  _extends$o = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$o.apply(this, arguments);
}
function ownKeys$o(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$n(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$o(Object(t2), true).forEach(function(r3) {
      _defineProperty$p(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$o(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$p(obj, key, value) {
  key = _toPropertyKey$o(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$o(t2) {
  var i2 = _toPrimitive$o(t2, "string");
  return "symbol" == _typeof$q(i2) ? i2 : String(i2);
}
function _toPrimitive$o(t2, r2) {
  if ("object" != _typeof$q(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$q(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function _objectWithoutProperties$c(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$b(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$b(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var defaultAccessor = function defaultAccessor2(entry) {
  return Array.isArray(entry.value) ? last$1(entry.value) : entry.value;
};
function LabelList(_ref) {
  var _ref$valueAccessor = _ref.valueAccessor, valueAccessor = _ref$valueAccessor === void 0 ? defaultAccessor : _ref$valueAccessor, restProps = _objectWithoutProperties$c(_ref, _excluded$l);
  var data2 = restProps.data, dataKey = restProps.dataKey, clockWise = restProps.clockWise, id2 = restProps.id, textBreakAll = restProps.textBreakAll, others = _objectWithoutProperties$c(restProps, _excluded2$3);
  if (!data2 || !data2.length) {
    return null;
  }
  return /* @__PURE__ */ React.createElement(Layer, {
    className: "recharts-label-list"
  }, data2.map(function(entry, index2) {
    var value = isNil$1(dataKey) ? valueAccessor(entry, index2) : getValueByDataKey(entry && entry.payload, dataKey);
    var idProps = isNil$1(id2) ? {} : {
      id: "".concat(id2, "-").concat(index2)
    };
    return /* @__PURE__ */ React.createElement(Label$1, _extends$o({}, filterProps(entry, true), others, idProps, {
      parentViewBox: entry.parentViewBox,
      value,
      textBreakAll,
      viewBox: Label$1.parseViewBox(isNil$1(clockWise) ? entry : _objectSpread$n(_objectSpread$n({}, entry), {}, {
        clockWise
      })),
      key: "label-".concat(index2),
      index: index2
    }));
  }));
}
LabelList.displayName = "LabelList";
function parseLabelList(label, data2) {
  if (!label) {
    return null;
  }
  if (label === true) {
    return /* @__PURE__ */ React.createElement(LabelList, {
      key: "labelList-implicit",
      data: data2
    });
  }
  if (/* @__PURE__ */ React.isValidElement(label) || isFunction$4(label)) {
    return /* @__PURE__ */ React.createElement(LabelList, {
      key: "labelList-implicit",
      data: data2,
      content: label
    });
  }
  if (isObject$9(label)) {
    return /* @__PURE__ */ React.createElement(LabelList, _extends$o({
      data: data2
    }, label, {
      key: "labelList-implicit"
    }));
  }
  return null;
}
function renderCallByParent2(parentProps, data2) {
  var checkPropsLabel = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  if (!parentProps || !parentProps.children && checkPropsLabel && !parentProps.label) {
    return null;
  }
  var children2 = parentProps.children;
  var explicitChildren = findAllByType(children2, LabelList).map(function(child, index2) {
    return /* @__PURE__ */ reactExports.cloneElement(child, {
      data: data2,
      // eslint-disable-next-line react/no-array-index-key
      key: "labelList-".concat(index2)
    });
  });
  if (!checkPropsLabel) {
    return explicitChildren;
  }
  var implicitLabelList = parseLabelList(parentProps.label, data2);
  return [implicitLabelList].concat(_toConsumableArray$6(explicitChildren));
}
LabelList.renderCallByParent = renderCallByParent2;
function _typeof$p(o2) {
  "@babel/helpers - typeof";
  return _typeof$p = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$p(o2);
}
function _extends$n() {
  _extends$n = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$n.apply(this, arguments);
}
function ownKeys$n(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$m(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$n(Object(t2), true).forEach(function(r3) {
      _defineProperty$o(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$n(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$o(obj, key, value) {
  key = _toPropertyKey$n(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$n(t2) {
  var i2 = _toPrimitive$n(t2, "string");
  return "symbol" == _typeof$p(i2) ? i2 : String(i2);
}
function _toPrimitive$n(t2, r2) {
  if ("object" != _typeof$p(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$p(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var getDeltaAngle2 = function getDeltaAngle3(startAngle, endAngle) {
  var sign2 = mathSign(endAngle - startAngle);
  var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 359.999);
  return sign2 * deltaAngle;
};
var getTangentCircle = function getTangentCircle2(_ref) {
  var cx2 = _ref.cx, cy = _ref.cy, radius = _ref.radius, angle2 = _ref.angle, sign2 = _ref.sign, isExternal = _ref.isExternal, cornerRadius = _ref.cornerRadius, cornerIsExternal = _ref.cornerIsExternal;
  var centerRadius = cornerRadius * (isExternal ? 1 : -1) + radius;
  var theta = Math.asin(cornerRadius / centerRadius) / RADIAN;
  var centerAngle = cornerIsExternal ? angle2 : angle2 + sign2 * theta;
  var center = polarToCartesian(cx2, cy, centerRadius, centerAngle);
  var circleTangency = polarToCartesian(cx2, cy, radius, centerAngle);
  var lineTangencyAngle = cornerIsExternal ? angle2 - sign2 * theta : angle2;
  var lineTangency = polarToCartesian(cx2, cy, centerRadius * Math.cos(theta * RADIAN), lineTangencyAngle);
  return {
    center,
    circleTangency,
    lineTangency,
    theta
  };
};
var getSectorPath = function getSectorPath2(_ref2) {
  var cx2 = _ref2.cx, cy = _ref2.cy, innerRadius = _ref2.innerRadius, outerRadius = _ref2.outerRadius, startAngle = _ref2.startAngle, endAngle = _ref2.endAngle;
  var angle2 = getDeltaAngle2(startAngle, endAngle);
  var tempEndAngle = startAngle + angle2;
  var outerStartPoint = polarToCartesian(cx2, cy, outerRadius, startAngle);
  var outerEndPoint = polarToCartesian(cx2, cy, outerRadius, tempEndAngle);
  var path = "M ".concat(outerStartPoint.x, ",").concat(outerStartPoint.y, "\n    A ").concat(outerRadius, ",").concat(outerRadius, ",0,\n    ").concat(+(Math.abs(angle2) > 180), ",").concat(+(startAngle > tempEndAngle), ",\n    ").concat(outerEndPoint.x, ",").concat(outerEndPoint.y, "\n  ");
  if (innerRadius > 0) {
    var innerStartPoint = polarToCartesian(cx2, cy, innerRadius, startAngle);
    var innerEndPoint = polarToCartesian(cx2, cy, innerRadius, tempEndAngle);
    path += "L ".concat(innerEndPoint.x, ",").concat(innerEndPoint.y, "\n            A ").concat(innerRadius, ",").concat(innerRadius, ",0,\n            ").concat(+(Math.abs(angle2) > 180), ",").concat(+(startAngle <= tempEndAngle), ",\n            ").concat(innerStartPoint.x, ",").concat(innerStartPoint.y, " Z");
  } else {
    path += "L ".concat(cx2, ",").concat(cy, " Z");
  }
  return path;
};
var getSectorWithCorner = function getSectorWithCorner2(_ref3) {
  var cx2 = _ref3.cx, cy = _ref3.cy, innerRadius = _ref3.innerRadius, outerRadius = _ref3.outerRadius, cornerRadius = _ref3.cornerRadius, forceCornerRadius = _ref3.forceCornerRadius, cornerIsExternal = _ref3.cornerIsExternal, startAngle = _ref3.startAngle, endAngle = _ref3.endAngle;
  var sign2 = mathSign(endAngle - startAngle);
  var _getTangentCircle = getTangentCircle({
    cx: cx2,
    cy,
    radius: outerRadius,
    angle: startAngle,
    sign: sign2,
    cornerRadius,
    cornerIsExternal
  }), soct = _getTangentCircle.circleTangency, solt = _getTangentCircle.lineTangency, sot = _getTangentCircle.theta;
  var _getTangentCircle2 = getTangentCircle({
    cx: cx2,
    cy,
    radius: outerRadius,
    angle: endAngle,
    sign: -sign2,
    cornerRadius,
    cornerIsExternal
  }), eoct = _getTangentCircle2.circleTangency, eolt = _getTangentCircle2.lineTangency, eot = _getTangentCircle2.theta;
  var outerArcAngle = cornerIsExternal ? Math.abs(startAngle - endAngle) : Math.abs(startAngle - endAngle) - sot - eot;
  if (outerArcAngle < 0) {
    if (forceCornerRadius) {
      return "M ".concat(solt.x, ",").concat(solt.y, "\n        a").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,1,").concat(cornerRadius * 2, ",0\n        a").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,1,").concat(-cornerRadius * 2, ",0\n      ");
    }
    return getSectorPath({
      cx: cx2,
      cy,
      innerRadius,
      outerRadius,
      startAngle,
      endAngle
    });
  }
  var path = "M ".concat(solt.x, ",").concat(solt.y, "\n    A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign2 < 0), ",").concat(soct.x, ",").concat(soct.y, "\n    A").concat(outerRadius, ",").concat(outerRadius, ",0,").concat(+(outerArcAngle > 180), ",").concat(+(sign2 < 0), ",").concat(eoct.x, ",").concat(eoct.y, "\n    A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign2 < 0), ",").concat(eolt.x, ",").concat(eolt.y, "\n  ");
  if (innerRadius > 0) {
    var _getTangentCircle3 = getTangentCircle({
      cx: cx2,
      cy,
      radius: innerRadius,
      angle: startAngle,
      sign: sign2,
      isExternal: true,
      cornerRadius,
      cornerIsExternal
    }), sict = _getTangentCircle3.circleTangency, silt = _getTangentCircle3.lineTangency, sit = _getTangentCircle3.theta;
    var _getTangentCircle4 = getTangentCircle({
      cx: cx2,
      cy,
      radius: innerRadius,
      angle: endAngle,
      sign: -sign2,
      isExternal: true,
      cornerRadius,
      cornerIsExternal
    }), eict = _getTangentCircle4.circleTangency, eilt = _getTangentCircle4.lineTangency, eit = _getTangentCircle4.theta;
    var innerArcAngle = cornerIsExternal ? Math.abs(startAngle - endAngle) : Math.abs(startAngle - endAngle) - sit - eit;
    if (innerArcAngle < 0 && cornerRadius === 0) {
      return "".concat(path, "L").concat(cx2, ",").concat(cy, "Z");
    }
    path += "L".concat(eilt.x, ",").concat(eilt.y, "\n      A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign2 < 0), ",").concat(eict.x, ",").concat(eict.y, "\n      A").concat(innerRadius, ",").concat(innerRadius, ",0,").concat(+(innerArcAngle > 180), ",").concat(+(sign2 > 0), ",").concat(sict.x, ",").concat(sict.y, "\n      A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign2 < 0), ",").concat(silt.x, ",").concat(silt.y, "Z");
  } else {
    path += "L".concat(cx2, ",").concat(cy, "Z");
  }
  return path;
};
var defaultProps$5 = {
  cx: 0,
  cy: 0,
  innerRadius: 0,
  outerRadius: 0,
  startAngle: 0,
  endAngle: 0,
  cornerRadius: 0,
  forceCornerRadius: false,
  cornerIsExternal: false
};
var Sector = function Sector2(sectorProps) {
  var props = _objectSpread$m(_objectSpread$m({}, defaultProps$5), sectorProps);
  var cx2 = props.cx, cy = props.cy, innerRadius = props.innerRadius, outerRadius = props.outerRadius, cornerRadius = props.cornerRadius, forceCornerRadius = props.forceCornerRadius, cornerIsExternal = props.cornerIsExternal, startAngle = props.startAngle, endAngle = props.endAngle, className = props.className;
  if (outerRadius < innerRadius || startAngle === endAngle) {
    return null;
  }
  var layerClass = clsx$1("recharts-sector", className);
  var deltaRadius = outerRadius - innerRadius;
  var cr = getPercentValue(cornerRadius, deltaRadius, 0, true);
  var path;
  if (cr > 0 && Math.abs(startAngle - endAngle) < 360) {
    path = getSectorWithCorner({
      cx: cx2,
      cy,
      innerRadius,
      outerRadius,
      cornerRadius: Math.min(cr, deltaRadius / 2),
      forceCornerRadius,
      cornerIsExternal,
      startAngle,
      endAngle
    });
  } else {
    path = getSectorPath({
      cx: cx2,
      cy,
      innerRadius,
      outerRadius,
      startAngle,
      endAngle
    });
  }
  return /* @__PURE__ */ React.createElement("path", _extends$n({}, filterProps(props, true), {
    className: layerClass,
    d: path,
    role: "img"
  }));
};
function _typeof$o(o2) {
  "@babel/helpers - typeof";
  return _typeof$o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$o(o2);
}
function _extends$m() {
  _extends$m = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$m.apply(this, arguments);
}
function ownKeys$m(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$l(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$m(Object(t2), true).forEach(function(r3) {
      _defineProperty$n(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$m(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$n(obj, key, value) {
  key = _toPropertyKey$m(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$m(t2) {
  var i2 = _toPrimitive$m(t2, "string");
  return "symbol" == _typeof$o(i2) ? i2 : String(i2);
}
function _toPrimitive$m(t2, r2) {
  if ("object" != _typeof$o(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$o(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var CURVE_FACTORIES = {
  curveBasisClosed,
  curveBasisOpen,
  curveBasis,
  curveBumpX: bumpX,
  curveBumpY: bumpY,
  curveLinearClosed,
  curveLinear,
  curveMonotoneX: monotoneX,
  curveMonotoneY: monotoneY,
  curveNatural,
  curveStep,
  curveStepAfter: stepAfter,
  curveStepBefore: stepBefore
};
var defined = function defined2(p2) {
  return p2.x === +p2.x && p2.y === +p2.y;
};
var getX = function getX2(p2) {
  return p2.x;
};
var getY = function getY2(p2) {
  return p2.y;
};
var getCurveFactory = function getCurveFactory2(type2, layout) {
  if (isFunction$4(type2)) {
    return type2;
  }
  var name = "curve".concat(upperFirst$1(type2));
  if ((name === "curveMonotone" || name === "curveBump") && layout) {
    return CURVE_FACTORIES["".concat(name).concat(layout === "vertical" ? "Y" : "X")];
  }
  return CURVE_FACTORIES[name] || curveLinear;
};
var getPath$1 = function getPath(_ref) {
  var _ref$type = _ref.type, type2 = _ref$type === void 0 ? "linear" : _ref$type, _ref$points = _ref.points, points = _ref$points === void 0 ? [] : _ref$points, baseLine = _ref.baseLine, layout = _ref.layout, _ref$connectNulls = _ref.connectNulls, connectNulls = _ref$connectNulls === void 0 ? false : _ref$connectNulls;
  var curveFactory = getCurveFactory(type2, layout);
  var formatPoints = connectNulls ? points.filter(function(entry) {
    return defined(entry);
  }) : points;
  var lineFunction;
  if (Array.isArray(baseLine)) {
    var formatBaseLine = connectNulls ? baseLine.filter(function(base) {
      return defined(base);
    }) : baseLine;
    var areaPoints = formatPoints.map(function(entry, index2) {
      return _objectSpread$l(_objectSpread$l({}, entry), {}, {
        base: formatBaseLine[index2]
      });
    });
    if (layout === "vertical") {
      lineFunction = shapeArea().y(getY).x1(getX).x0(function(d2) {
        return d2.base.x;
      });
    } else {
      lineFunction = shapeArea().x(getX).y1(getY).y0(function(d2) {
        return d2.base.y;
      });
    }
    lineFunction.defined(defined).curve(curveFactory);
    return lineFunction(areaPoints);
  }
  if (layout === "vertical" && isNumber(baseLine)) {
    lineFunction = shapeArea().y(getY).x1(getX).x0(baseLine);
  } else if (isNumber(baseLine)) {
    lineFunction = shapeArea().x(getX).y1(getY).y0(baseLine);
  } else {
    lineFunction = shapeLine().x(getX).y(getY);
  }
  lineFunction.defined(defined).curve(curveFactory);
  return lineFunction(formatPoints);
};
var Curve = function Curve2(props) {
  var className = props.className, points = props.points, path = props.path, pathRef = props.pathRef;
  if ((!points || !points.length) && !path) {
    return null;
  }
  var realPath = points && points.length ? getPath$1(props) : path;
  return /* @__PURE__ */ React.createElement("path", _extends$m({}, filterProps(props, false), adaptEventHandlers(props), {
    className: clsx$1("recharts-curve", className),
    d: realPath,
    ref: pathRef
  }));
};
var getOwnPropertyNames = Object.getOwnPropertyNames, getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
function combineComparators(comparatorA, comparatorB) {
  return function isEqual2(a2, b2, state) {
    return comparatorA(a2, b2, state) && comparatorB(a2, b2, state);
  };
}
function createIsCircular(areItemsEqual) {
  return function isCircular(a2, b2, state) {
    if (!a2 || !b2 || typeof a2 !== "object" || typeof b2 !== "object") {
      return areItemsEqual(a2, b2, state);
    }
    var cache = state.cache;
    var cachedA = cache.get(a2);
    var cachedB = cache.get(b2);
    if (cachedA && cachedB) {
      return cachedA === b2 && cachedB === a2;
    }
    cache.set(a2, b2);
    cache.set(b2, a2);
    var result = areItemsEqual(a2, b2, state);
    cache.delete(a2);
    cache.delete(b2);
    return result;
  };
}
function getStrictProperties(object2) {
  return getOwnPropertyNames(object2).concat(getOwnPropertySymbols(object2));
}
var hasOwn = Object.hasOwn || function(object2, property2) {
  return hasOwnProperty$1.call(object2, property2);
};
function sameValueZeroEqual(a2, b2) {
  return a2 || b2 ? a2 === b2 : a2 === b2 || a2 !== a2 && b2 !== b2;
}
var OWNER = "_owner";
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor, keys$1 = Object.keys;
function areArraysEqual(a2, b2, state) {
  var index2 = a2.length;
  if (b2.length !== index2) {
    return false;
  }
  while (index2-- > 0) {
    if (!state.equals(a2[index2], b2[index2], index2, index2, a2, b2, state)) {
      return false;
    }
  }
  return true;
}
function areDatesEqual(a2, b2) {
  return sameValueZeroEqual(a2.getTime(), b2.getTime());
}
function areMapsEqual(a2, b2, state) {
  if (a2.size !== b2.size) {
    return false;
  }
  var matchedIndices = {};
  var aIterable = a2.entries();
  var index2 = 0;
  var aResult;
  var bResult;
  while (aResult = aIterable.next()) {
    if (aResult.done) {
      break;
    }
    var bIterable = b2.entries();
    var hasMatch = false;
    var matchIndex = 0;
    while (bResult = bIterable.next()) {
      if (bResult.done) {
        break;
      }
      var _a = aResult.value, aKey = _a[0], aValue = _a[1];
      var _b = bResult.value, bKey = _b[0], bValue = _b[1];
      if (!hasMatch && !matchedIndices[matchIndex] && (hasMatch = state.equals(aKey, bKey, index2, matchIndex, a2, b2, state) && state.equals(aValue, bValue, aKey, bKey, a2, b2, state))) {
        matchedIndices[matchIndex] = true;
      }
      matchIndex++;
    }
    if (!hasMatch) {
      return false;
    }
    index2++;
  }
  return true;
}
function areObjectsEqual(a2, b2, state) {
  var properties = keys$1(a2);
  var index2 = properties.length;
  if (keys$1(b2).length !== index2) {
    return false;
  }
  var property2;
  while (index2-- > 0) {
    property2 = properties[index2];
    if (property2 === OWNER && (a2.$$typeof || b2.$$typeof) && a2.$$typeof !== b2.$$typeof) {
      return false;
    }
    if (!hasOwn(b2, property2) || !state.equals(a2[property2], b2[property2], property2, property2, a2, b2, state)) {
      return false;
    }
  }
  return true;
}
function areObjectsEqualStrict(a2, b2, state) {
  var properties = getStrictProperties(a2);
  var index2 = properties.length;
  if (getStrictProperties(b2).length !== index2) {
    return false;
  }
  var property2;
  var descriptorA;
  var descriptorB;
  while (index2-- > 0) {
    property2 = properties[index2];
    if (property2 === OWNER && (a2.$$typeof || b2.$$typeof) && a2.$$typeof !== b2.$$typeof) {
      return false;
    }
    if (!hasOwn(b2, property2)) {
      return false;
    }
    if (!state.equals(a2[property2], b2[property2], property2, property2, a2, b2, state)) {
      return false;
    }
    descriptorA = getOwnPropertyDescriptor(a2, property2);
    descriptorB = getOwnPropertyDescriptor(b2, property2);
    if ((descriptorA || descriptorB) && (!descriptorA || !descriptorB || descriptorA.configurable !== descriptorB.configurable || descriptorA.enumerable !== descriptorB.enumerable || descriptorA.writable !== descriptorB.writable)) {
      return false;
    }
  }
  return true;
}
function arePrimitiveWrappersEqual(a2, b2) {
  return sameValueZeroEqual(a2.valueOf(), b2.valueOf());
}
function areRegExpsEqual(a2, b2) {
  return a2.source === b2.source && a2.flags === b2.flags;
}
function areSetsEqual(a2, b2, state) {
  if (a2.size !== b2.size) {
    return false;
  }
  var matchedIndices = {};
  var aIterable = a2.values();
  var aResult;
  var bResult;
  while (aResult = aIterable.next()) {
    if (aResult.done) {
      break;
    }
    var bIterable = b2.values();
    var hasMatch = false;
    var matchIndex = 0;
    while (bResult = bIterable.next()) {
      if (bResult.done) {
        break;
      }
      if (!hasMatch && !matchedIndices[matchIndex] && (hasMatch = state.equals(aResult.value, bResult.value, aResult.value, bResult.value, a2, b2, state))) {
        matchedIndices[matchIndex] = true;
      }
      matchIndex++;
    }
    if (!hasMatch) {
      return false;
    }
  }
  return true;
}
function areTypedArraysEqual(a2, b2) {
  var index2 = a2.length;
  if (b2.length !== index2) {
    return false;
  }
  while (index2-- > 0) {
    if (a2[index2] !== b2[index2]) {
      return false;
    }
  }
  return true;
}
var ARGUMENTS_TAG = "[object Arguments]";
var BOOLEAN_TAG = "[object Boolean]";
var DATE_TAG = "[object Date]";
var MAP_TAG = "[object Map]";
var NUMBER_TAG = "[object Number]";
var OBJECT_TAG = "[object Object]";
var REG_EXP_TAG = "[object RegExp]";
var SET_TAG = "[object Set]";
var STRING_TAG = "[object String]";
var isArray$2 = Array.isArray;
var isTypedArray = typeof ArrayBuffer === "function" && ArrayBuffer.isView ? ArrayBuffer.isView : null;
var assign = Object.assign;
var getTag = Object.prototype.toString.call.bind(Object.prototype.toString);
function createEqualityComparator(_a) {
  var areArraysEqual2 = _a.areArraysEqual, areDatesEqual2 = _a.areDatesEqual, areMapsEqual2 = _a.areMapsEqual, areObjectsEqual2 = _a.areObjectsEqual, arePrimitiveWrappersEqual2 = _a.arePrimitiveWrappersEqual, areRegExpsEqual2 = _a.areRegExpsEqual, areSetsEqual2 = _a.areSetsEqual, areTypedArraysEqual2 = _a.areTypedArraysEqual;
  return function comparator(a2, b2, state) {
    if (a2 === b2) {
      return true;
    }
    if (a2 == null || b2 == null || typeof a2 !== "object" || typeof b2 !== "object") {
      return a2 !== a2 && b2 !== b2;
    }
    var constructor = a2.constructor;
    if (constructor !== b2.constructor) {
      return false;
    }
    if (constructor === Object) {
      return areObjectsEqual2(a2, b2, state);
    }
    if (isArray$2(a2)) {
      return areArraysEqual2(a2, b2, state);
    }
    if (isTypedArray != null && isTypedArray(a2)) {
      return areTypedArraysEqual2(a2, b2, state);
    }
    if (constructor === Date) {
      return areDatesEqual2(a2, b2, state);
    }
    if (constructor === RegExp) {
      return areRegExpsEqual2(a2, b2, state);
    }
    if (constructor === Map) {
      return areMapsEqual2(a2, b2, state);
    }
    if (constructor === Set) {
      return areSetsEqual2(a2, b2, state);
    }
    var tag = getTag(a2);
    if (tag === DATE_TAG) {
      return areDatesEqual2(a2, b2, state);
    }
    if (tag === REG_EXP_TAG) {
      return areRegExpsEqual2(a2, b2, state);
    }
    if (tag === MAP_TAG) {
      return areMapsEqual2(a2, b2, state);
    }
    if (tag === SET_TAG) {
      return areSetsEqual2(a2, b2, state);
    }
    if (tag === OBJECT_TAG) {
      return typeof a2.then !== "function" && typeof b2.then !== "function" && areObjectsEqual2(a2, b2, state);
    }
    if (tag === ARGUMENTS_TAG) {
      return areObjectsEqual2(a2, b2, state);
    }
    if (tag === BOOLEAN_TAG || tag === NUMBER_TAG || tag === STRING_TAG) {
      return arePrimitiveWrappersEqual2(a2, b2, state);
    }
    return false;
  };
}
function createEqualityComparatorConfig(_a) {
  var circular = _a.circular, createCustomConfig = _a.createCustomConfig, strict = _a.strict;
  var config2 = {
    areArraysEqual: strict ? areObjectsEqualStrict : areArraysEqual,
    areDatesEqual,
    areMapsEqual: strict ? combineComparators(areMapsEqual, areObjectsEqualStrict) : areMapsEqual,
    areObjectsEqual: strict ? areObjectsEqualStrict : areObjectsEqual,
    arePrimitiveWrappersEqual,
    areRegExpsEqual,
    areSetsEqual: strict ? combineComparators(areSetsEqual, areObjectsEqualStrict) : areSetsEqual,
    areTypedArraysEqual: strict ? areObjectsEqualStrict : areTypedArraysEqual
  };
  if (createCustomConfig) {
    config2 = assign({}, config2, createCustomConfig(config2));
  }
  if (circular) {
    var areArraysEqual$1 = createIsCircular(config2.areArraysEqual);
    var areMapsEqual$1 = createIsCircular(config2.areMapsEqual);
    var areObjectsEqual$1 = createIsCircular(config2.areObjectsEqual);
    var areSetsEqual$1 = createIsCircular(config2.areSetsEqual);
    config2 = assign({}, config2, {
      areArraysEqual: areArraysEqual$1,
      areMapsEqual: areMapsEqual$1,
      areObjectsEqual: areObjectsEqual$1,
      areSetsEqual: areSetsEqual$1
    });
  }
  return config2;
}
function createInternalEqualityComparator(compare) {
  return function(a2, b2, _indexOrKeyA, _indexOrKeyB, _parentA, _parentB, state) {
    return compare(a2, b2, state);
  };
}
function createIsEqual(_a) {
  var circular = _a.circular, comparator = _a.comparator, createState = _a.createState, equals2 = _a.equals, strict = _a.strict;
  if (createState) {
    return function isEqual2(a2, b2) {
      var _a2 = createState(), _b = _a2.cache, cache = _b === void 0 ? circular ? /* @__PURE__ */ new WeakMap() : void 0 : _b, meta = _a2.meta;
      return comparator(a2, b2, {
        cache,
        equals: equals2,
        meta,
        strict
      });
    };
  }
  if (circular) {
    return function isEqual2(a2, b2) {
      return comparator(a2, b2, {
        cache: /* @__PURE__ */ new WeakMap(),
        equals: equals2,
        meta: void 0,
        strict
      });
    };
  }
  var state = {
    cache: void 0,
    equals: equals2,
    meta: void 0,
    strict
  };
  return function isEqual2(a2, b2) {
    return comparator(a2, b2, state);
  };
}
var deepEqual$1 = createCustomEqual();
createCustomEqual({ strict: true });
createCustomEqual({ circular: true });
createCustomEqual({
  circular: true,
  strict: true
});
createCustomEqual({
  createInternalComparator: function() {
    return sameValueZeroEqual;
  }
});
createCustomEqual({
  strict: true,
  createInternalComparator: function() {
    return sameValueZeroEqual;
  }
});
createCustomEqual({
  circular: true,
  createInternalComparator: function() {
    return sameValueZeroEqual;
  }
});
createCustomEqual({
  circular: true,
  createInternalComparator: function() {
    return sameValueZeroEqual;
  },
  strict: true
});
function createCustomEqual(options) {
  if (options === void 0) {
    options = {};
  }
  var _a = options.circular, circular = _a === void 0 ? false : _a, createCustomInternalComparator = options.createInternalComparator, createState = options.createState, _b = options.strict, strict = _b === void 0 ? false : _b;
  var config2 = createEqualityComparatorConfig(options);
  var comparator = createEqualityComparator(config2);
  var equals2 = createCustomInternalComparator ? createCustomInternalComparator(comparator) : createInternalEqualityComparator(comparator);
  return createIsEqual({ circular, comparator, createState, equals: equals2, strict });
}
function safeRequestAnimationFrame(callback) {
  if (typeof requestAnimationFrame !== "undefined")
    requestAnimationFrame(callback);
}
function setRafTimeout(callback) {
  var timeout2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var currTime = -1;
  var shouldUpdate = function shouldUpdate2(now2) {
    if (currTime < 0) {
      currTime = now2;
    }
    if (now2 - currTime > timeout2) {
      callback(now2);
      currTime = -1;
    } else {
      safeRequestAnimationFrame(shouldUpdate2);
    }
  };
  requestAnimationFrame(shouldUpdate);
}
function _typeof$n(o2) {
  "@babel/helpers - typeof";
  return _typeof$n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$n(o2);
}
function _toArray(arr) {
  return _arrayWithHoles$7(arr) || _iterableToArray$6(arr) || _unsupportedIterableToArray$a(arr) || _nonIterableRest$7();
}
function _nonIterableRest$7() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$a(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$a(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$a(o2, minLen);
}
function _arrayLikeToArray$a(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function _iterableToArray$6(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithHoles$7(arr) {
  if (Array.isArray(arr))
    return arr;
}
function createAnimateManager() {
  var currStyle = {};
  var handleChange = function handleChange2() {
    return null;
  };
  var shouldStop = false;
  var setStyle = function setStyle2(_style) {
    if (shouldStop) {
      return;
    }
    if (Array.isArray(_style)) {
      if (!_style.length) {
        return;
      }
      var styles = _style;
      var _styles = _toArray(styles), curr = _styles[0], restStyles = _styles.slice(1);
      if (typeof curr === "number") {
        setRafTimeout(setStyle2.bind(null, restStyles), curr);
        return;
      }
      setStyle2(curr);
      setRafTimeout(setStyle2.bind(null, restStyles));
      return;
    }
    if (_typeof$n(_style) === "object") {
      currStyle = _style;
      handleChange(currStyle);
    }
    if (typeof _style === "function") {
      _style();
    }
  };
  return {
    stop: function stop() {
      shouldStop = true;
    },
    start: function start2(style) {
      shouldStop = false;
      setStyle(style);
    },
    subscribe: function subscribe(_handleChange) {
      handleChange = _handleChange;
      return function() {
        handleChange = function handleChange2() {
          return null;
        };
      };
    }
  };
}
function _typeof$m(o2) {
  "@babel/helpers - typeof";
  return _typeof$m = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o22) {
    return typeof o22;
  } : function(o22) {
    return o22 && "function" == typeof Symbol && o22.constructor === Symbol && o22 !== Symbol.prototype ? "symbol" : typeof o22;
  }, _typeof$m(o2);
}
function ownKeys$l(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r22) {
      return Object.getOwnPropertyDescriptor(e3, r22).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$k(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$l(Object(t2), true).forEach(function(r22) {
      _defineProperty$m(e3, r22, t2[r22]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$l(Object(t2)).forEach(function(r22) {
      Object.defineProperty(e3, r22, Object.getOwnPropertyDescriptor(t2, r22));
    });
  }
  return e3;
}
function _defineProperty$m(obj, key, value) {
  key = _toPropertyKey$l(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$l(arg) {
  var key = _toPrimitive$l(arg, "string");
  return _typeof$m(key) === "symbol" ? key : String(key);
}
function _toPrimitive$l(input, hint) {
  if (_typeof$m(input) !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof$m(res) !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var getIntersectionKeys = function getIntersectionKeys2(preObj, nextObj) {
  return [Object.keys(preObj), Object.keys(nextObj)].reduce(function(a2, b2) {
    return a2.filter(function(c2) {
      return b2.includes(c2);
    });
  });
};
var identity$5 = function identity2(param) {
  return param;
};
var getDashCase = function getDashCase2(name) {
  return name.replace(/([A-Z])/g, function(v2) {
    return "-".concat(v2.toLowerCase());
  });
};
var mapObject = function mapObject2(fn, obj) {
  return Object.keys(obj).reduce(function(res, key) {
    return _objectSpread$k(_objectSpread$k({}, res), {}, _defineProperty$m({}, key, fn(key, obj[key])));
  }, {});
};
var getTransitionVal = function getTransitionVal2(props, duration, easing) {
  return props.map(function(prop) {
    return "".concat(getDashCase(prop), " ").concat(duration, "ms ").concat(easing);
  }).join(",");
};
function _slicedToArray$6(arr, i2) {
  return _arrayWithHoles$6(arr) || _iterableToArrayLimit$6(arr, i2) || _unsupportedIterableToArray$9(arr, i2) || _nonIterableRest$6();
}
function _nonIterableRest$6() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit$6(r2, l2) {
  var t2 = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
  if (null != t2) {
    var e3, n2, i2, u2, a2 = [], f2 = true, o2 = false;
    try {
      if (i2 = (t2 = t2.call(r2)).next, 0 === l2) {
        if (Object(t2) !== t2)
          return;
        f2 = false;
      } else
        for (; !(f2 = (e3 = i2.call(t2)).done) && (a2.push(e3.value), a2.length !== l2); f2 = true)
          ;
    } catch (r3) {
      o2 = true, n2 = r3;
    } finally {
      try {
        if (!f2 && null != t2.return && (u2 = t2.return(), Object(u2) !== u2))
          return;
      } finally {
        if (o2)
          throw n2;
      }
    }
    return a2;
  }
}
function _arrayWithHoles$6(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray$5(arr) {
  return _arrayWithoutHoles$5(arr) || _iterableToArray$5(arr) || _unsupportedIterableToArray$9(arr) || _nonIterableSpread$5();
}
function _nonIterableSpread$5() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$9(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$9(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$9(o2, minLen);
}
function _iterableToArray$5(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles$5(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$9(arr);
}
function _arrayLikeToArray$9(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
var ACCURACY = 1e-4;
var cubicBezierFactor = function cubicBezierFactor2(c1, c2) {
  return [0, 3 * c1, 3 * c2 - 6 * c1, 3 * c1 - 3 * c2 + 1];
};
var multyTime = function multyTime2(params, t2) {
  return params.map(function(param, i2) {
    return param * Math.pow(t2, i2);
  }).reduce(function(pre, curr) {
    return pre + curr;
  });
};
var cubicBezier = function cubicBezier2(c1, c2) {
  return function(t2) {
    var params = cubicBezierFactor(c1, c2);
    return multyTime(params, t2);
  };
};
var derivativeCubicBezier = function derivativeCubicBezier2(c1, c2) {
  return function(t2) {
    var params = cubicBezierFactor(c1, c2);
    var newParams = [].concat(_toConsumableArray$5(params.map(function(param, i2) {
      return param * i2;
    }).slice(1)), [0]);
    return multyTime(newParams, t2);
  };
};
var configBezier = function configBezier2() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  var x12 = args[0], y12 = args[1], x2 = args[2], y2 = args[3];
  if (args.length === 1) {
    switch (args[0]) {
      case "linear":
        x12 = 0;
        y12 = 0;
        x2 = 1;
        y2 = 1;
        break;
      case "ease":
        x12 = 0.25;
        y12 = 0.1;
        x2 = 0.25;
        y2 = 1;
        break;
      case "ease-in":
        x12 = 0.42;
        y12 = 0;
        x2 = 1;
        y2 = 1;
        break;
      case "ease-out":
        x12 = 0.42;
        y12 = 0;
        x2 = 0.58;
        y2 = 1;
        break;
      case "ease-in-out":
        x12 = 0;
        y12 = 0;
        x2 = 0.58;
        y2 = 1;
        break;
      default: {
        var easing = args[0].split("(");
        if (easing[0] === "cubic-bezier" && easing[1].split(")")[0].split(",").length === 4) {
          var _easing$1$split$0$spl = easing[1].split(")")[0].split(",").map(function(x3) {
            return parseFloat(x3);
          });
          var _easing$1$split$0$spl2 = _slicedToArray$6(_easing$1$split$0$spl, 4);
          x12 = _easing$1$split$0$spl2[0];
          y12 = _easing$1$split$0$spl2[1];
          x2 = _easing$1$split$0$spl2[2];
          y2 = _easing$1$split$0$spl2[3];
        }
      }
    }
  }
  var curveX = cubicBezier(x12, x2);
  var curveY = cubicBezier(y12, y2);
  var derCurveX = derivativeCubicBezier(x12, x2);
  var rangeValue = function rangeValue2(value) {
    if (value > 1) {
      return 1;
    }
    if (value < 0) {
      return 0;
    }
    return value;
  };
  var bezier = function bezier2(_t) {
    var t2 = _t > 1 ? 1 : _t;
    var x3 = t2;
    for (var i2 = 0; i2 < 8; ++i2) {
      var evalT = curveX(x3) - t2;
      var derVal = derCurveX(x3);
      if (Math.abs(evalT - t2) < ACCURACY || derVal < ACCURACY) {
        return curveY(x3);
      }
      x3 = rangeValue(x3 - evalT / derVal);
    }
    return curveY(x3);
  };
  bezier.isStepper = false;
  return bezier;
};
var configSpring = function configSpring2() {
  var config2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _config$stiff = config2.stiff, stiff = _config$stiff === void 0 ? 100 : _config$stiff, _config$damping = config2.damping, damping = _config$damping === void 0 ? 8 : _config$damping, _config$dt = config2.dt, dt = _config$dt === void 0 ? 17 : _config$dt;
  var stepper = function stepper2(currX, destX, currV) {
    var FSpring = -(currX - destX) * stiff;
    var FDamping = currV * damping;
    var newV = currV + (FSpring - FDamping) * dt / 1e3;
    var newX = currV * dt / 1e3 + currX;
    if (Math.abs(newX - destX) < ACCURACY && Math.abs(newV) < ACCURACY) {
      return [destX, 0];
    }
    return [newX, newV];
  };
  stepper.isStepper = true;
  stepper.dt = dt;
  return stepper;
};
var configEasing = function configEasing2() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }
  var easing = args[0];
  if (typeof easing === "string") {
    switch (easing) {
      case "ease":
      case "ease-in-out":
      case "ease-out":
      case "ease-in":
      case "linear":
        return configBezier(easing);
      case "spring":
        return configSpring();
      default:
        if (easing.split("(")[0] === "cubic-bezier") {
          return configBezier(easing);
        }
    }
  }
  if (typeof easing === "function") {
    return easing;
  }
  return null;
};
function _typeof$l(o2) {
  "@babel/helpers - typeof";
  return _typeof$l = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$l(o2);
}
function _toConsumableArray$4(arr) {
  return _arrayWithoutHoles$4(arr) || _iterableToArray$4(arr) || _unsupportedIterableToArray$8(arr) || _nonIterableSpread$4();
}
function _nonIterableSpread$4() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray$4(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles$4(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$8(arr);
}
function ownKeys$k(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$j(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$k(Object(t2), true).forEach(function(r3) {
      _defineProperty$l(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$k(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$l(obj, key, value) {
  key = _toPropertyKey$k(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$k(arg) {
  var key = _toPrimitive$k(arg, "string");
  return _typeof$l(key) === "symbol" ? key : String(key);
}
function _toPrimitive$k(input, hint) {
  if (_typeof$l(input) !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof$l(res) !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _slicedToArray$5(arr, i2) {
  return _arrayWithHoles$5(arr) || _iterableToArrayLimit$5(arr, i2) || _unsupportedIterableToArray$8(arr, i2) || _nonIterableRest$5();
}
function _nonIterableRest$5() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$8(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$8(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$8(o2, minLen);
}
function _arrayLikeToArray$8(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function _iterableToArrayLimit$5(r2, l2) {
  var t2 = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
  if (null != t2) {
    var e3, n2, i2, u2, a2 = [], f2 = true, o2 = false;
    try {
      if (i2 = (t2 = t2.call(r2)).next, 0 === l2) {
        if (Object(t2) !== t2)
          return;
        f2 = false;
      } else
        for (; !(f2 = (e3 = i2.call(t2)).done) && (a2.push(e3.value), a2.length !== l2); f2 = true)
          ;
    } catch (r3) {
      o2 = true, n2 = r3;
    } finally {
      try {
        if (!f2 && null != t2.return && (u2 = t2.return(), Object(u2) !== u2))
          return;
      } finally {
        if (o2)
          throw n2;
      }
    }
    return a2;
  }
}
function _arrayWithHoles$5(arr) {
  if (Array.isArray(arr))
    return arr;
}
var alpha = function alpha2(begin, end, k2) {
  return begin + (end - begin) * k2;
};
var needContinue = function needContinue2(_ref) {
  var from = _ref.from, to = _ref.to;
  return from !== to;
};
var calStepperVals = function calStepperVals2(easing, preVals, steps) {
  var nextStepVals = mapObject(function(key, val) {
    if (needContinue(val)) {
      var _easing = easing(val.from, val.to, val.velocity), _easing2 = _slicedToArray$5(_easing, 2), newX = _easing2[0], newV = _easing2[1];
      return _objectSpread$j(_objectSpread$j({}, val), {}, {
        from: newX,
        velocity: newV
      });
    }
    return val;
  }, preVals);
  if (steps < 1) {
    return mapObject(function(key, val) {
      if (needContinue(val)) {
        return _objectSpread$j(_objectSpread$j({}, val), {}, {
          velocity: alpha(val.velocity, nextStepVals[key].velocity, steps),
          from: alpha(val.from, nextStepVals[key].from, steps)
        });
      }
      return val;
    }, preVals);
  }
  return calStepperVals2(easing, nextStepVals, steps - 1);
};
const configUpdate = function(from, to, easing, duration, render) {
  var interKeys = getIntersectionKeys(from, to);
  var timingStyle = interKeys.reduce(function(res, key) {
    return _objectSpread$j(_objectSpread$j({}, res), {}, _defineProperty$l({}, key, [from[key], to[key]]));
  }, {});
  var stepperStyle = interKeys.reduce(function(res, key) {
    return _objectSpread$j(_objectSpread$j({}, res), {}, _defineProperty$l({}, key, {
      from: from[key],
      velocity: 0,
      to: to[key]
    }));
  }, {});
  var cafId = -1;
  var preTime;
  var beginTime;
  var update = function update2() {
    return null;
  };
  var getCurrStyle = function getCurrStyle2() {
    return mapObject(function(key, val) {
      return val.from;
    }, stepperStyle);
  };
  var shouldStopAnimation = function shouldStopAnimation2() {
    return !Object.values(stepperStyle).filter(needContinue).length;
  };
  var stepperUpdate = function stepperUpdate2(now2) {
    if (!preTime) {
      preTime = now2;
    }
    var deltaTime = now2 - preTime;
    var steps = deltaTime / easing.dt;
    stepperStyle = calStepperVals(easing, stepperStyle, steps);
    render(_objectSpread$j(_objectSpread$j(_objectSpread$j({}, from), to), getCurrStyle()));
    preTime = now2;
    if (!shouldStopAnimation()) {
      cafId = requestAnimationFrame(update);
    }
  };
  var timingUpdate = function timingUpdate2(now2) {
    if (!beginTime) {
      beginTime = now2;
    }
    var t2 = (now2 - beginTime) / duration;
    var currStyle = mapObject(function(key, val) {
      return alpha.apply(void 0, _toConsumableArray$4(val).concat([easing(t2)]));
    }, timingStyle);
    render(_objectSpread$j(_objectSpread$j(_objectSpread$j({}, from), to), currStyle));
    if (t2 < 1) {
      cafId = requestAnimationFrame(update);
    } else {
      var finalStyle = mapObject(function(key, val) {
        return alpha.apply(void 0, _toConsumableArray$4(val).concat([easing(1)]));
      }, timingStyle);
      render(_objectSpread$j(_objectSpread$j(_objectSpread$j({}, from), to), finalStyle));
    }
  };
  update = easing.isStepper ? stepperUpdate : timingUpdate;
  return function() {
    requestAnimationFrame(update);
    return function() {
      cancelAnimationFrame(cafId);
    };
  };
};
function _typeof$k(o2) {
  "@babel/helpers - typeof";
  return _typeof$k = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$k(o2);
}
var _excluded$k = ["children", "begin", "duration", "attributeName", "easing", "isActive", "steps", "from", "to", "canBegin", "onAnimationEnd", "shouldReAnimate", "onAnimationReStart"];
function _objectWithoutProperties$b(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$a(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$a(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _toConsumableArray$3(arr) {
  return _arrayWithoutHoles$3(arr) || _iterableToArray$3(arr) || _unsupportedIterableToArray$7(arr) || _nonIterableSpread$3();
}
function _nonIterableSpread$3() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$7(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$7(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$7(o2, minLen);
}
function _iterableToArray$3(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles$3(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$7(arr);
}
function _arrayLikeToArray$7(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function ownKeys$j(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$i(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$j(Object(t2), true).forEach(function(r3) {
      _defineProperty$k(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$j(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$k(obj, key, value) {
  key = _toPropertyKey$j(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _classCallCheck$7(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$7(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey$j(descriptor.key), descriptor);
  }
}
function _createClass$7(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$7(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$7(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey$j(arg) {
  var key = _toPrimitive$j(arg, "string");
  return _typeof$k(key) === "symbol" ? key : String(key);
}
function _toPrimitive$j(input, hint) {
  if (_typeof$k(input) !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof$k(res) !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _inherits$5(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf$5(subClass, superClass);
}
function _setPrototypeOf$5(o2, p2) {
  _setPrototypeOf$5 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o3, p3) {
    o3.__proto__ = p3;
    return o3;
  };
  return _setPrototypeOf$5(o2, p2);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$5();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$5(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$5(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$5(this, result);
  };
}
function _possibleConstructorReturn$5(self2, call) {
  if (call && (_typeof$k(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized$5(self2);
}
function _assertThisInitialized$5(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$5() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$5(o2) {
  _getPrototypeOf$5 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o3) {
    return o3.__proto__ || Object.getPrototypeOf(o3);
  };
  return _getPrototypeOf$5(o2);
}
var Animate = /* @__PURE__ */ function(_PureComponent) {
  _inherits$5(Animate2, _PureComponent);
  var _super = _createSuper(Animate2);
  function Animate2(props, context) {
    var _this;
    _classCallCheck$7(this, Animate2);
    _this = _super.call(this, props, context);
    var _this$props = _this.props, isActive = _this$props.isActive, attributeName = _this$props.attributeName, from = _this$props.from, to = _this$props.to, steps = _this$props.steps, children2 = _this$props.children, duration = _this$props.duration;
    _this.handleStyleChange = _this.handleStyleChange.bind(_assertThisInitialized$5(_this));
    _this.changeStyle = _this.changeStyle.bind(_assertThisInitialized$5(_this));
    if (!isActive || duration <= 0) {
      _this.state = {
        style: {}
      };
      if (typeof children2 === "function") {
        _this.state = {
          style: to
        };
      }
      return _possibleConstructorReturn$5(_this);
    }
    if (steps && steps.length) {
      _this.state = {
        style: steps[0].style
      };
    } else if (from) {
      if (typeof children2 === "function") {
        _this.state = {
          style: from
        };
        return _possibleConstructorReturn$5(_this);
      }
      _this.state = {
        style: attributeName ? _defineProperty$k({}, attributeName, from) : from
      };
    } else {
      _this.state = {
        style: {}
      };
    }
    return _this;
  }
  _createClass$7(Animate2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props2 = this.props, isActive = _this$props2.isActive, canBegin = _this$props2.canBegin;
      this.mounted = true;
      if (!isActive || !canBegin) {
        return;
      }
      this.runAnimation(this.props);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var _this$props3 = this.props, isActive = _this$props3.isActive, canBegin = _this$props3.canBegin, attributeName = _this$props3.attributeName, shouldReAnimate = _this$props3.shouldReAnimate, to = _this$props3.to, currentFrom = _this$props3.from;
      var style = this.state.style;
      if (!canBegin) {
        return;
      }
      if (!isActive) {
        var newState = {
          style: attributeName ? _defineProperty$k({}, attributeName, to) : to
        };
        if (this.state && style) {
          if (attributeName && style[attributeName] !== to || !attributeName && style !== to) {
            this.setState(newState);
          }
        }
        return;
      }
      if (deepEqual$1(prevProps.to, to) && prevProps.canBegin && prevProps.isActive) {
        return;
      }
      var isTriggered = !prevProps.canBegin || !prevProps.isActive;
      if (this.manager) {
        this.manager.stop();
      }
      if (this.stopJSAnimation) {
        this.stopJSAnimation();
      }
      var from = isTriggered || shouldReAnimate ? currentFrom : prevProps.to;
      if (this.state && style) {
        var _newState = {
          style: attributeName ? _defineProperty$k({}, attributeName, from) : from
        };
        if (attributeName && style[attributeName] !== from || !attributeName && style !== from) {
          this.setState(_newState);
        }
      }
      this.runAnimation(_objectSpread$i(_objectSpread$i({}, this.props), {}, {
        from,
        begin: 0
      }));
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.mounted = false;
      var onAnimationEnd2 = this.props.onAnimationEnd;
      if (this.unSubscribe) {
        this.unSubscribe();
      }
      if (this.manager) {
        this.manager.stop();
        this.manager = null;
      }
      if (this.stopJSAnimation) {
        this.stopJSAnimation();
      }
      if (onAnimationEnd2) {
        onAnimationEnd2();
      }
    }
  }, {
    key: "handleStyleChange",
    value: function handleStyleChange(style) {
      this.changeStyle(style);
    }
  }, {
    key: "changeStyle",
    value: function changeStyle(style) {
      if (this.mounted) {
        this.setState({
          style
        });
      }
    }
  }, {
    key: "runJSAnimation",
    value: function runJSAnimation(props) {
      var _this2 = this;
      var from = props.from, to = props.to, duration = props.duration, easing = props.easing, begin = props.begin, onAnimationEnd2 = props.onAnimationEnd, onAnimationStart2 = props.onAnimationStart;
      var startAnimation = configUpdate(from, to, configEasing(easing), duration, this.changeStyle);
      var finalStartAnimation = function finalStartAnimation2() {
        _this2.stopJSAnimation = startAnimation();
      };
      this.manager.start([onAnimationStart2, begin, finalStartAnimation, duration, onAnimationEnd2]);
    }
  }, {
    key: "runStepAnimation",
    value: function runStepAnimation(props) {
      var _this3 = this;
      var steps = props.steps, begin = props.begin, onAnimationStart2 = props.onAnimationStart;
      var _steps$ = steps[0], initialStyle = _steps$.style, _steps$$duration = _steps$.duration, initialTime = _steps$$duration === void 0 ? 0 : _steps$$duration;
      var addStyle = function addStyle2(sequence, nextItem, index2) {
        if (index2 === 0) {
          return sequence;
        }
        var duration = nextItem.duration, _nextItem$easing = nextItem.easing, easing = _nextItem$easing === void 0 ? "ease" : _nextItem$easing, style = nextItem.style, nextProperties = nextItem.properties, onAnimationEnd2 = nextItem.onAnimationEnd;
        var preItem = index2 > 0 ? steps[index2 - 1] : nextItem;
        var properties = nextProperties || Object.keys(style);
        if (typeof easing === "function" || easing === "spring") {
          return [].concat(_toConsumableArray$3(sequence), [_this3.runJSAnimation.bind(_this3, {
            from: preItem.style,
            to: style,
            duration,
            easing
          }), duration]);
        }
        var transition = getTransitionVal(properties, duration, easing);
        var newStyle = _objectSpread$i(_objectSpread$i(_objectSpread$i({}, preItem.style), style), {}, {
          transition
        });
        return [].concat(_toConsumableArray$3(sequence), [newStyle, duration, onAnimationEnd2]).filter(identity$5);
      };
      return this.manager.start([onAnimationStart2].concat(_toConsumableArray$3(steps.reduce(addStyle, [initialStyle, Math.max(initialTime, begin)])), [props.onAnimationEnd]));
    }
  }, {
    key: "runAnimation",
    value: function runAnimation(props) {
      if (!this.manager) {
        this.manager = createAnimateManager();
      }
      var begin = props.begin, duration = props.duration, attributeName = props.attributeName, propsTo = props.to, easing = props.easing, onAnimationStart2 = props.onAnimationStart, onAnimationEnd2 = props.onAnimationEnd, steps = props.steps, children2 = props.children;
      var manager = this.manager;
      this.unSubscribe = manager.subscribe(this.handleStyleChange);
      if (typeof easing === "function" || typeof children2 === "function" || easing === "spring") {
        this.runJSAnimation(props);
        return;
      }
      if (steps.length > 1) {
        this.runStepAnimation(props);
        return;
      }
      var to = attributeName ? _defineProperty$k({}, attributeName, propsTo) : propsTo;
      var transition = getTransitionVal(Object.keys(to), duration, easing);
      manager.start([onAnimationStart2, begin, _objectSpread$i(_objectSpread$i({}, to), {}, {
        transition
      }), duration, onAnimationEnd2]);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props4 = this.props, children2 = _this$props4.children;
      _this$props4.begin;
      var duration = _this$props4.duration;
      _this$props4.attributeName;
      _this$props4.easing;
      var isActive = _this$props4.isActive;
      _this$props4.steps;
      _this$props4.from;
      _this$props4.to;
      _this$props4.canBegin;
      _this$props4.onAnimationEnd;
      _this$props4.shouldReAnimate;
      _this$props4.onAnimationReStart;
      var others = _objectWithoutProperties$b(_this$props4, _excluded$k);
      var count2 = reactExports.Children.count(children2);
      var stateStyle = this.state.style;
      if (typeof children2 === "function") {
        return children2(stateStyle);
      }
      if (!isActive || count2 === 0 || duration <= 0) {
        return children2;
      }
      var cloneContainer = function cloneContainer2(container2) {
        var _container$props = container2.props, _container$props$styl = _container$props.style, style = _container$props$styl === void 0 ? {} : _container$props$styl, className = _container$props.className;
        var res = /* @__PURE__ */ reactExports.cloneElement(container2, _objectSpread$i(_objectSpread$i({}, others), {}, {
          style: _objectSpread$i(_objectSpread$i({}, style), stateStyle),
          className
        }));
        return res;
      };
      if (count2 === 1) {
        return cloneContainer(reactExports.Children.only(children2));
      }
      return /* @__PURE__ */ React.createElement("div", null, reactExports.Children.map(children2, function(child) {
        return cloneContainer(child);
      }));
    }
  }]);
  return Animate2;
}(reactExports.PureComponent);
Animate.displayName = "Animate";
Animate.defaultProps = {
  begin: 0,
  duration: 1e3,
  from: "",
  to: "",
  attributeName: "",
  easing: "ease",
  isActive: true,
  canBegin: true,
  steps: [],
  onAnimationEnd: function onAnimationEnd() {
  },
  onAnimationStart: function onAnimationStart() {
  }
};
Animate.propTypes = {
  from: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),
  to: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),
  attributeName: PropTypes.string,
  // animation duration
  duration: PropTypes.number,
  begin: PropTypes.number,
  easing: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  steps: PropTypes.arrayOf(PropTypes.shape({
    duration: PropTypes.number.isRequired,
    style: PropTypes.object.isRequired,
    easing: PropTypes.oneOfType([PropTypes.oneOf(["ease", "ease-in", "ease-out", "ease-in-out", "linear"]), PropTypes.func]),
    // transition css properties(dash case), optional
    properties: PropTypes.arrayOf("string"),
    onAnimationEnd: PropTypes.func
  })),
  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),
  isActive: PropTypes.bool,
  canBegin: PropTypes.bool,
  onAnimationEnd: PropTypes.func,
  // decide if it should reanimate with initial from style when props change
  shouldReAnimate: PropTypes.bool,
  onAnimationStart: PropTypes.func,
  onAnimationReStart: PropTypes.func
};
({
  appearOptions: PropTypes.object,
  enterOptions: PropTypes.object,
  leaveOptions: PropTypes.object,
  children: PropTypes.element
});
({
  appear: PropTypes.object,
  enter: PropTypes.object,
  leave: PropTypes.object,
  children: PropTypes.oneOfType([PropTypes.array, PropTypes.element]),
  component: PropTypes.any
});
function _typeof$j(o2) {
  "@babel/helpers - typeof";
  return _typeof$j = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$j(o2);
}
function _extends$l() {
  _extends$l = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$l.apply(this, arguments);
}
function _slicedToArray$4(arr, i2) {
  return _arrayWithHoles$4(arr) || _iterableToArrayLimit$4(arr, i2) || _unsupportedIterableToArray$6(arr, i2) || _nonIterableRest$4();
}
function _nonIterableRest$4() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$6(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$6(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$6(o2, minLen);
}
function _arrayLikeToArray$6(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function _iterableToArrayLimit$4(r2, l2) {
  var t2 = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
  if (null != t2) {
    var e3, n2, i2, u2, a2 = [], f2 = true, o2 = false;
    try {
      if (i2 = (t2 = t2.call(r2)).next, 0 === l2) {
        if (Object(t2) !== t2)
          return;
        f2 = false;
      } else
        for (; !(f2 = (e3 = i2.call(t2)).done) && (a2.push(e3.value), a2.length !== l2); f2 = true)
          ;
    } catch (r3) {
      o2 = true, n2 = r3;
    } finally {
      try {
        if (!f2 && null != t2["return"] && (u2 = t2["return"](), Object(u2) !== u2))
          return;
      } finally {
        if (o2)
          throw n2;
      }
    }
    return a2;
  }
}
function _arrayWithHoles$4(arr) {
  if (Array.isArray(arr))
    return arr;
}
function ownKeys$i(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$h(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$i(Object(t2), true).forEach(function(r3) {
      _defineProperty$j(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$i(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$j(obj, key, value) {
  key = _toPropertyKey$i(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$i(t2) {
  var i2 = _toPrimitive$i(t2, "string");
  return "symbol" == _typeof$j(i2) ? i2 : String(i2);
}
function _toPrimitive$i(t2, r2) {
  if ("object" != _typeof$j(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$j(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var getRectanglePath = function getRectanglePath2(x2, y2, width, height, radius) {
  var maxRadius = Math.min(Math.abs(width) / 2, Math.abs(height) / 2);
  var ySign = height >= 0 ? 1 : -1;
  var xSign = width >= 0 ? 1 : -1;
  var clockWise = height >= 0 && width >= 0 || height < 0 && width < 0 ? 1 : 0;
  var path;
  if (maxRadius > 0 && radius instanceof Array) {
    var newRadius = [0, 0, 0, 0];
    for (var i2 = 0, len = 4; i2 < len; i2++) {
      newRadius[i2] = radius[i2] > maxRadius ? maxRadius : radius[i2];
    }
    path = "M".concat(x2, ",").concat(y2 + ySign * newRadius[0]);
    if (newRadius[0] > 0) {
      path += "A ".concat(newRadius[0], ",").concat(newRadius[0], ",0,0,").concat(clockWise, ",").concat(x2 + xSign * newRadius[0], ",").concat(y2);
    }
    path += "L ".concat(x2 + width - xSign * newRadius[1], ",").concat(y2);
    if (newRadius[1] > 0) {
      path += "A ".concat(newRadius[1], ",").concat(newRadius[1], ",0,0,").concat(clockWise, ",\n        ").concat(x2 + width, ",").concat(y2 + ySign * newRadius[1]);
    }
    path += "L ".concat(x2 + width, ",").concat(y2 + height - ySign * newRadius[2]);
    if (newRadius[2] > 0) {
      path += "A ".concat(newRadius[2], ",").concat(newRadius[2], ",0,0,").concat(clockWise, ",\n        ").concat(x2 + width - xSign * newRadius[2], ",").concat(y2 + height);
    }
    path += "L ".concat(x2 + xSign * newRadius[3], ",").concat(y2 + height);
    if (newRadius[3] > 0) {
      path += "A ".concat(newRadius[3], ",").concat(newRadius[3], ",0,0,").concat(clockWise, ",\n        ").concat(x2, ",").concat(y2 + height - ySign * newRadius[3]);
    }
    path += "Z";
  } else if (maxRadius > 0 && radius === +radius && radius > 0) {
    var _newRadius = Math.min(maxRadius, radius);
    path = "M ".concat(x2, ",").concat(y2 + ySign * _newRadius, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x2 + xSign * _newRadius, ",").concat(y2, "\n            L ").concat(x2 + width - xSign * _newRadius, ",").concat(y2, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x2 + width, ",").concat(y2 + ySign * _newRadius, "\n            L ").concat(x2 + width, ",").concat(y2 + height - ySign * _newRadius, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x2 + width - xSign * _newRadius, ",").concat(y2 + height, "\n            L ").concat(x2 + xSign * _newRadius, ",").concat(y2 + height, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x2, ",").concat(y2 + height - ySign * _newRadius, " Z");
  } else {
    path = "M ".concat(x2, ",").concat(y2, " h ").concat(width, " v ").concat(height, " h ").concat(-width, " Z");
  }
  return path;
};
var isInRectangle = function isInRectangle2(point2, rect) {
  if (!point2 || !rect) {
    return false;
  }
  var px = point2.x, py = point2.y;
  var x2 = rect.x, y2 = rect.y, width = rect.width, height = rect.height;
  if (Math.abs(width) > 0 && Math.abs(height) > 0) {
    var minX = Math.min(x2, x2 + width);
    var maxX = Math.max(x2, x2 + width);
    var minY = Math.min(y2, y2 + height);
    var maxY = Math.max(y2, y2 + height);
    return px >= minX && px <= maxX && py >= minY && py <= maxY;
  }
  return false;
};
var defaultProps$4 = {
  x: 0,
  y: 0,
  width: 0,
  height: 0,
  // The radius of border
  // The radius of four corners when radius is a number
  // The radius of left-top, right-top, right-bottom, left-bottom when radius is an array
  radius: 0,
  isAnimationActive: false,
  isUpdateAnimationActive: false,
  animationBegin: 0,
  animationDuration: 1500,
  animationEasing: "ease"
};
var Rectangle = function Rectangle2(rectangleProps) {
  var props = _objectSpread$h(_objectSpread$h({}, defaultProps$4), rectangleProps);
  var pathRef = reactExports.useRef();
  var _useState = reactExports.useState(-1), _useState2 = _slicedToArray$4(_useState, 2), totalLength = _useState2[0], setTotalLength = _useState2[1];
  reactExports.useEffect(function() {
    if (pathRef.current && pathRef.current.getTotalLength) {
      try {
        var pathTotalLength = pathRef.current.getTotalLength();
        if (pathTotalLength) {
          setTotalLength(pathTotalLength);
        }
      } catch (err) {
      }
    }
  }, []);
  var x2 = props.x, y2 = props.y, width = props.width, height = props.height, radius = props.radius, className = props.className;
  var animationEasing = props.animationEasing, animationDuration = props.animationDuration, animationBegin = props.animationBegin, isAnimationActive = props.isAnimationActive, isUpdateAnimationActive = props.isUpdateAnimationActive;
  if (x2 !== +x2 || y2 !== +y2 || width !== +width || height !== +height || width === 0 || height === 0) {
    return null;
  }
  var layerClass = clsx$1("recharts-rectangle", className);
  if (!isUpdateAnimationActive) {
    return /* @__PURE__ */ React.createElement("path", _extends$l({}, filterProps(props, true), {
      className: layerClass,
      d: getRectanglePath(x2, y2, width, height, radius)
    }));
  }
  return /* @__PURE__ */ React.createElement(Animate, {
    canBegin: totalLength > 0,
    from: {
      width,
      height,
      x: x2,
      y: y2
    },
    to: {
      width,
      height,
      x: x2,
      y: y2
    },
    duration: animationDuration,
    animationEasing,
    isActive: isUpdateAnimationActive
  }, function(_ref) {
    var currWidth = _ref.width, currHeight = _ref.height, currX = _ref.x, currY = _ref.y;
    return /* @__PURE__ */ React.createElement(Animate, {
      canBegin: totalLength > 0,
      from: "0px ".concat(totalLength === -1 ? 1 : totalLength, "px"),
      to: "".concat(totalLength, "px 0px"),
      attributeName: "strokeDasharray",
      begin: animationBegin,
      duration: animationDuration,
      isActive: isAnimationActive,
      easing: animationEasing
    }, /* @__PURE__ */ React.createElement("path", _extends$l({}, filterProps(props, true), {
      className: layerClass,
      d: getRectanglePath(currX, currY, currWidth, currHeight, radius),
      ref: pathRef
    })));
  });
};
function _extends$k() {
  _extends$k = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$k.apply(this, arguments);
}
var Dot = function Dot2(props) {
  var cx2 = props.cx, cy = props.cy, r2 = props.r, className = props.className;
  var layerClass = clsx$1("recharts-dot", className);
  if (cx2 === +cx2 && cy === +cy && r2 === +r2) {
    return /* @__PURE__ */ React.createElement("circle", _extends$k({}, filterProps(props, false), adaptEventHandlers(props), {
      className: layerClass,
      cx: cx2,
      cy,
      r: r2
    }));
  }
  return null;
};
function _typeof$i(o2) {
  "@babel/helpers - typeof";
  return _typeof$i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$i(o2);
}
var _excluded$j = ["x", "y", "top", "left", "width", "height", "className"];
function _extends$j() {
  _extends$j = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$j.apply(this, arguments);
}
function ownKeys$h(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$g(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$h(Object(t2), true).forEach(function(r3) {
      _defineProperty$i(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$h(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$i(obj, key, value) {
  key = _toPropertyKey$h(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$h(t2) {
  var i2 = _toPrimitive$h(t2, "string");
  return "symbol" == _typeof$i(i2) ? i2 : String(i2);
}
function _toPrimitive$h(t2, r2) {
  if ("object" != _typeof$i(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$i(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function _objectWithoutProperties$a(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$9(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$9(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var getPath2 = function getPath3(x2, y2, width, height, top, left) {
  return "M".concat(x2, ",").concat(top, "v").concat(height, "M").concat(left, ",").concat(y2, "h").concat(width);
};
var Cross = function Cross2(_ref) {
  var _ref$x = _ref.x, x2 = _ref$x === void 0 ? 0 : _ref$x, _ref$y = _ref.y, y2 = _ref$y === void 0 ? 0 : _ref$y, _ref$top = _ref.top, top = _ref$top === void 0 ? 0 : _ref$top, _ref$left = _ref.left, left = _ref$left === void 0 ? 0 : _ref$left, _ref$width = _ref.width, width = _ref$width === void 0 ? 0 : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? 0 : _ref$height, className = _ref.className, rest = _objectWithoutProperties$a(_ref, _excluded$j);
  var props = _objectSpread$g({
    x: x2,
    y: y2,
    top,
    left,
    width,
    height
  }, rest);
  if (!isNumber(x2) || !isNumber(y2) || !isNumber(width) || !isNumber(height) || !isNumber(top) || !isNumber(left)) {
    return null;
  }
  return /* @__PURE__ */ React.createElement("path", _extends$j({}, filterProps(props, true), {
    className: clsx$1("recharts-cross", className),
    d: getPath2(x2, y2, width, height, top, left)
  }));
};
var overArg = _overArg;
var getPrototype$1 = overArg(Object.getPrototypeOf, Object);
var _getPrototype = getPrototype$1;
var baseGetTag$1 = _baseGetTag, getPrototype = _getPrototype, isObjectLike$1 = isObjectLike_1;
var objectTag = "[object Object]";
var funcProto = Function.prototype, objectProto = Object.prototype;
var funcToString = funcProto.toString;
var hasOwnProperty = objectProto.hasOwnProperty;
var objectCtorString = funcToString.call(Object);
function isPlainObject$1(value) {
  if (!isObjectLike$1(value) || baseGetTag$1(value) != objectTag) {
    return false;
  }
  var proto2 = getPrototype(value);
  if (proto2 === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto2, "constructor") && proto2.constructor;
  return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
}
var isPlainObject_1 = isPlainObject$1;
const isPlainObject$2 = /* @__PURE__ */ getDefaultExportFromCjs(isPlainObject_1);
var baseGetTag = _baseGetTag, isObjectLike = isObjectLike_1;
var boolTag = "[object Boolean]";
function isBoolean$1(value) {
  return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
}
var isBoolean_1 = isBoolean$1;
const isBoolean$2 = /* @__PURE__ */ getDefaultExportFromCjs(isBoolean_1);
function _typeof$h(o2) {
  "@babel/helpers - typeof";
  return _typeof$h = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$h(o2);
}
function _extends$i() {
  _extends$i = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$i.apply(this, arguments);
}
function _slicedToArray$3(arr, i2) {
  return _arrayWithHoles$3(arr) || _iterableToArrayLimit$3(arr, i2) || _unsupportedIterableToArray$5(arr, i2) || _nonIterableRest$3();
}
function _nonIterableRest$3() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$5(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$5(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$5(o2, minLen);
}
function _arrayLikeToArray$5(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function _iterableToArrayLimit$3(r2, l2) {
  var t2 = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
  if (null != t2) {
    var e3, n2, i2, u2, a2 = [], f2 = true, o2 = false;
    try {
      if (i2 = (t2 = t2.call(r2)).next, 0 === l2) {
        if (Object(t2) !== t2)
          return;
        f2 = false;
      } else
        for (; !(f2 = (e3 = i2.call(t2)).done) && (a2.push(e3.value), a2.length !== l2); f2 = true)
          ;
    } catch (r3) {
      o2 = true, n2 = r3;
    } finally {
      try {
        if (!f2 && null != t2["return"] && (u2 = t2["return"](), Object(u2) !== u2))
          return;
      } finally {
        if (o2)
          throw n2;
      }
    }
    return a2;
  }
}
function _arrayWithHoles$3(arr) {
  if (Array.isArray(arr))
    return arr;
}
function ownKeys$g(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$f(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$g(Object(t2), true).forEach(function(r3) {
      _defineProperty$h(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$g(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$h(obj, key, value) {
  key = _toPropertyKey$g(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$g(t2) {
  var i2 = _toPrimitive$g(t2, "string");
  return "symbol" == _typeof$h(i2) ? i2 : String(i2);
}
function _toPrimitive$g(t2, r2) {
  if ("object" != _typeof$h(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$h(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var getTrapezoidPath = function getTrapezoidPath2(x2, y2, upperWidth, lowerWidth, height) {
  var widthGap = upperWidth - lowerWidth;
  var path;
  path = "M ".concat(x2, ",").concat(y2);
  path += "L ".concat(x2 + upperWidth, ",").concat(y2);
  path += "L ".concat(x2 + upperWidth - widthGap / 2, ",").concat(y2 + height);
  path += "L ".concat(x2 + upperWidth - widthGap / 2 - lowerWidth, ",").concat(y2 + height);
  path += "L ".concat(x2, ",").concat(y2, " Z");
  return path;
};
var defaultProps$3 = {
  x: 0,
  y: 0,
  upperWidth: 0,
  lowerWidth: 0,
  height: 0,
  isUpdateAnimationActive: false,
  animationBegin: 0,
  animationDuration: 1500,
  animationEasing: "ease"
};
var Trapezoid = function Trapezoid2(props) {
  var trapezoidProps = _objectSpread$f(_objectSpread$f({}, defaultProps$3), props);
  var pathRef = reactExports.useRef();
  var _useState = reactExports.useState(-1), _useState2 = _slicedToArray$3(_useState, 2), totalLength = _useState2[0], setTotalLength = _useState2[1];
  reactExports.useEffect(function() {
    if (pathRef.current && pathRef.current.getTotalLength) {
      try {
        var pathTotalLength = pathRef.current.getTotalLength();
        if (pathTotalLength) {
          setTotalLength(pathTotalLength);
        }
      } catch (err) {
      }
    }
  }, []);
  var x2 = trapezoidProps.x, y2 = trapezoidProps.y, upperWidth = trapezoidProps.upperWidth, lowerWidth = trapezoidProps.lowerWidth, height = trapezoidProps.height, className = trapezoidProps.className;
  var animationEasing = trapezoidProps.animationEasing, animationDuration = trapezoidProps.animationDuration, animationBegin = trapezoidProps.animationBegin, isUpdateAnimationActive = trapezoidProps.isUpdateAnimationActive;
  if (x2 !== +x2 || y2 !== +y2 || upperWidth !== +upperWidth || lowerWidth !== +lowerWidth || height !== +height || upperWidth === 0 && lowerWidth === 0 || height === 0) {
    return null;
  }
  var layerClass = clsx$1("recharts-trapezoid", className);
  if (!isUpdateAnimationActive) {
    return /* @__PURE__ */ React.createElement("g", null, /* @__PURE__ */ React.createElement("path", _extends$i({}, filterProps(trapezoidProps, true), {
      className: layerClass,
      d: getTrapezoidPath(x2, y2, upperWidth, lowerWidth, height)
    })));
  }
  return /* @__PURE__ */ React.createElement(Animate, {
    canBegin: totalLength > 0,
    from: {
      upperWidth: 0,
      lowerWidth: 0,
      height,
      x: x2,
      y: y2
    },
    to: {
      upperWidth,
      lowerWidth,
      height,
      x: x2,
      y: y2
    },
    duration: animationDuration,
    animationEasing,
    isActive: isUpdateAnimationActive
  }, function(_ref) {
    var currUpperWidth = _ref.upperWidth, currLowerWidth = _ref.lowerWidth, currHeight = _ref.height, currX = _ref.x, currY = _ref.y;
    return /* @__PURE__ */ React.createElement(Animate, {
      canBegin: totalLength > 0,
      from: "0px ".concat(totalLength === -1 ? 1 : totalLength, "px"),
      to: "".concat(totalLength, "px 0px"),
      attributeName: "strokeDasharray",
      begin: animationBegin,
      duration: animationDuration,
      easing: animationEasing
    }, /* @__PURE__ */ React.createElement("path", _extends$i({}, filterProps(trapezoidProps, true), {
      className: layerClass,
      d: getTrapezoidPath(currX, currY, currUpperWidth, currLowerWidth, currHeight),
      ref: pathRef
    })));
  });
};
var _excluded$i = ["option", "shapeType", "propTransformer", "activeClassName", "isActive"];
function _typeof$g(o2) {
  "@babel/helpers - typeof";
  return _typeof$g = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$g(o2);
}
function _objectWithoutProperties$9(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$8(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$8(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function ownKeys$f(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$e(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$f(Object(t2), true).forEach(function(r3) {
      _defineProperty$g(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$f(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$g(obj, key, value) {
  key = _toPropertyKey$f(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$f(t2) {
  var i2 = _toPrimitive$f(t2, "string");
  return "symbol" == _typeof$g(i2) ? i2 : String(i2);
}
function _toPrimitive$f(t2, r2) {
  if ("object" != _typeof$g(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$g(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function defaultPropTransformer(option, props) {
  return _objectSpread$e(_objectSpread$e({}, props), option);
}
function isSymbolsProps(shapeType, _elementProps) {
  return shapeType === "symbols";
}
function ShapeSelector(_ref) {
  var shapeType = _ref.shapeType, elementProps = _ref.elementProps;
  switch (shapeType) {
    case "rectangle":
      return /* @__PURE__ */ React.createElement(Rectangle, elementProps);
    case "trapezoid":
      return /* @__PURE__ */ React.createElement(Trapezoid, elementProps);
    case "sector":
      return /* @__PURE__ */ React.createElement(Sector, elementProps);
    case "symbols":
      if (isSymbolsProps(shapeType)) {
        return /* @__PURE__ */ React.createElement(Symbols, elementProps);
      }
      break;
    default:
      return null;
  }
}
function getPropsFromShapeOption(option) {
  if (/* @__PURE__ */ reactExports.isValidElement(option)) {
    return option.props;
  }
  return option;
}
function Shape(_ref2) {
  var option = _ref2.option, shapeType = _ref2.shapeType, _ref2$propTransformer = _ref2.propTransformer, propTransformer = _ref2$propTransformer === void 0 ? defaultPropTransformer : _ref2$propTransformer, _ref2$activeClassName = _ref2.activeClassName, activeClassName = _ref2$activeClassName === void 0 ? "recharts-active-shape" : _ref2$activeClassName, isActive = _ref2.isActive, props = _objectWithoutProperties$9(_ref2, _excluded$i);
  var shape;
  if (/* @__PURE__ */ reactExports.isValidElement(option)) {
    shape = /* @__PURE__ */ reactExports.cloneElement(option, _objectSpread$e(_objectSpread$e({}, props), getPropsFromShapeOption(option)));
  } else if (isFunction$4(option)) {
    shape = option(props);
  } else if (isPlainObject$2(option) && !isBoolean$2(option)) {
    var nextProps = propTransformer(option, props);
    shape = /* @__PURE__ */ React.createElement(ShapeSelector, {
      shapeType,
      elementProps: nextProps
    });
  } else {
    var elementProps = props;
    shape = /* @__PURE__ */ React.createElement(ShapeSelector, {
      shapeType,
      elementProps
    });
  }
  if (isActive) {
    return /* @__PURE__ */ React.createElement(Layer, {
      className: activeClassName
    }, shape);
  }
  return shape;
}
function isFunnel(graphicalItem, _item) {
  return _item != null && "trapezoids" in graphicalItem.props;
}
function isPie(graphicalItem, _item) {
  return _item != null && "sectors" in graphicalItem.props;
}
function isScatter(graphicalItem, _item) {
  return _item != null && "points" in graphicalItem.props;
}
function compareFunnel(shapeData, activeTooltipItem) {
  var _activeTooltipItem$la, _activeTooltipItem$la2;
  var xMatches = shapeData.x === (activeTooltipItem === null || activeTooltipItem === void 0 || (_activeTooltipItem$la = activeTooltipItem.labelViewBox) === null || _activeTooltipItem$la === void 0 ? void 0 : _activeTooltipItem$la.x) || shapeData.x === activeTooltipItem.x;
  var yMatches = shapeData.y === (activeTooltipItem === null || activeTooltipItem === void 0 || (_activeTooltipItem$la2 = activeTooltipItem.labelViewBox) === null || _activeTooltipItem$la2 === void 0 ? void 0 : _activeTooltipItem$la2.y) || shapeData.y === activeTooltipItem.y;
  return xMatches && yMatches;
}
function comparePie(shapeData, activeTooltipItem) {
  var startAngleMatches = shapeData.endAngle === activeTooltipItem.endAngle;
  var endAngleMatches = shapeData.startAngle === activeTooltipItem.startAngle;
  return startAngleMatches && endAngleMatches;
}
function compareScatter(shapeData, activeTooltipItem) {
  var xMatches = shapeData.x === activeTooltipItem.x;
  var yMatches = shapeData.y === activeTooltipItem.y;
  var zMatches = shapeData.z === activeTooltipItem.z;
  return xMatches && yMatches && zMatches;
}
function getComparisonFn(graphicalItem, activeItem) {
  var comparison;
  if (isFunnel(graphicalItem, activeItem)) {
    comparison = compareFunnel;
  } else if (isPie(graphicalItem, activeItem)) {
    comparison = comparePie;
  } else if (isScatter(graphicalItem, activeItem)) {
    comparison = compareScatter;
  }
  return comparison;
}
function getShapeDataKey(graphicalItem, activeItem) {
  var shapeKey;
  if (isFunnel(graphicalItem, activeItem)) {
    shapeKey = "trapezoids";
  } else if (isPie(graphicalItem, activeItem)) {
    shapeKey = "sectors";
  } else if (isScatter(graphicalItem, activeItem)) {
    shapeKey = "points";
  }
  return shapeKey;
}
function getActiveShapeTooltipPayload(graphicalItem, activeItem) {
  if (isFunnel(graphicalItem, activeItem)) {
    var _activeItem$tooltipPa;
    return (_activeItem$tooltipPa = activeItem.tooltipPayload) === null || _activeItem$tooltipPa === void 0 || (_activeItem$tooltipPa = _activeItem$tooltipPa[0]) === null || _activeItem$tooltipPa === void 0 || (_activeItem$tooltipPa = _activeItem$tooltipPa.payload) === null || _activeItem$tooltipPa === void 0 ? void 0 : _activeItem$tooltipPa.payload;
  }
  if (isPie(graphicalItem, activeItem)) {
    var _activeItem$tooltipPa2;
    return (_activeItem$tooltipPa2 = activeItem.tooltipPayload) === null || _activeItem$tooltipPa2 === void 0 || (_activeItem$tooltipPa2 = _activeItem$tooltipPa2[0]) === null || _activeItem$tooltipPa2 === void 0 || (_activeItem$tooltipPa2 = _activeItem$tooltipPa2.payload) === null || _activeItem$tooltipPa2 === void 0 ? void 0 : _activeItem$tooltipPa2.payload;
  }
  if (isScatter(graphicalItem, activeItem)) {
    return activeItem.payload;
  }
  return {};
}
function getActiveShapeIndexForTooltip(_ref3) {
  var activeTooltipItem = _ref3.activeTooltipItem, graphicalItem = _ref3.graphicalItem, itemData = _ref3.itemData;
  var shapeKey = getShapeDataKey(graphicalItem, activeTooltipItem);
  var tooltipPayload = getActiveShapeTooltipPayload(graphicalItem, activeTooltipItem);
  var activeItemMatches = itemData.filter(function(datum2, dataIndex) {
    var valuesMatch = isEqual$1(tooltipPayload, datum2);
    var mouseCoordinateMatches = graphicalItem.props[shapeKey].filter(function(shapeData) {
      var comparison = getComparisonFn(graphicalItem, activeTooltipItem);
      return comparison(shapeData, activeTooltipItem);
    });
    var indexOfMouseCoordinates = graphicalItem.props[shapeKey].indexOf(mouseCoordinateMatches[mouseCoordinateMatches.length - 1]);
    var coordinatesMatch = dataIndex === indexOfMouseCoordinates;
    return valuesMatch && coordinatesMatch;
  });
  var activeIndex = itemData.indexOf(activeItemMatches[activeItemMatches.length - 1]);
  return activeIndex;
}
var nativeCeil = Math.ceil, nativeMax$1 = Math.max;
function baseRange$1(start2, end, step, fromRight) {
  var index2 = -1, length2 = nativeMax$1(nativeCeil((end - start2) / (step || 1)), 0), result = Array(length2);
  while (length2--) {
    result[fromRight ? length2 : ++index2] = start2;
    start2 += step;
  }
  return result;
}
var _baseRange = baseRange$1;
var toNumber = toNumber_1;
var INFINITY = 1 / 0, MAX_INTEGER = 17976931348623157e292;
function toFinite$2(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign2 = value < 0 ? -1 : 1;
    return sign2 * MAX_INTEGER;
  }
  return value === value ? value : 0;
}
var toFinite_1 = toFinite$2;
var baseRange = _baseRange, isIterateeCall$2 = _isIterateeCall, toFinite$1 = toFinite_1;
function createRange$1(fromRight) {
  return function(start2, end, step) {
    if (step && typeof step != "number" && isIterateeCall$2(start2, end, step)) {
      end = step = void 0;
    }
    start2 = toFinite$1(start2);
    if (end === void 0) {
      end = start2;
      start2 = 0;
    } else {
      end = toFinite$1(end);
    }
    step = step === void 0 ? start2 < end ? 1 : -1 : toFinite$1(step);
    return baseRange(start2, end, step, fromRight);
  };
}
var _createRange = createRange$1;
var createRange = _createRange;
var range$2 = createRange();
var range_1 = range$2;
const range$3 = /* @__PURE__ */ getDefaultExportFromCjs(range_1);
function _typeof$f(o2) {
  "@babel/helpers - typeof";
  return _typeof$f = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$f(o2);
}
function ownKeys$e(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$d(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$e(Object(t2), true).forEach(function(r3) {
      _defineProperty$f(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$e(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$f(obj, key, value) {
  key = _toPropertyKey$e(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$e(t2) {
  var i2 = _toPrimitive$e(t2, "string");
  return "symbol" == _typeof$f(i2) ? i2 : String(i2);
}
function _toPrimitive$e(t2, r2) {
  if ("object" != _typeof$f(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$f(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var PREFIX_LIST = ["Webkit", "Moz", "O", "ms"];
var generatePrefixStyle = function generatePrefixStyle2(name, value) {
  if (!name) {
    return null;
  }
  var camelName = name.replace(/(\w)/, function(v2) {
    return v2.toUpperCase();
  });
  var result = PREFIX_LIST.reduce(function(res, entry) {
    return _objectSpread$d(_objectSpread$d({}, res), {}, _defineProperty$f({}, entry + camelName, value));
  }, {});
  result[name] = value;
  return result;
};
function _typeof$e(o2) {
  "@babel/helpers - typeof";
  return _typeof$e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$e(o2);
}
function _extends$h() {
  _extends$h = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$h.apply(this, arguments);
}
function ownKeys$d(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$c(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$d(Object(t2), true).forEach(function(r3) {
      _defineProperty$e(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$d(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _classCallCheck$6(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$6(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey$d(descriptor.key), descriptor);
  }
}
function _createClass$6(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$6(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$6(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _callSuper$4(t2, o2, e3) {
  return o2 = _getPrototypeOf$4(o2), _possibleConstructorReturn$4(t2, _isNativeReflectConstruct$4() ? Reflect.construct(o2, e3 || [], _getPrototypeOf$4(t2).constructor) : o2.apply(t2, e3));
}
function _possibleConstructorReturn$4(self2, call) {
  if (call && (_typeof$e(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized$4(self2);
}
function _isNativeReflectConstruct$4() {
  try {
    var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t3) {
  }
  return (_isNativeReflectConstruct$4 = function _isNativeReflectConstruct2() {
    return !!t2;
  })();
}
function _getPrototypeOf$4(o2) {
  _getPrototypeOf$4 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o3) {
    return o3.__proto__ || Object.getPrototypeOf(o3);
  };
  return _getPrototypeOf$4(o2);
}
function _assertThisInitialized$4(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inherits$4(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf$4(subClass, superClass);
}
function _setPrototypeOf$4(o2, p2) {
  _setPrototypeOf$4 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o3, p3) {
    o3.__proto__ = p3;
    return o3;
  };
  return _setPrototypeOf$4(o2, p2);
}
function _defineProperty$e(obj, key, value) {
  key = _toPropertyKey$d(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$d(t2) {
  var i2 = _toPrimitive$d(t2, "string");
  return "symbol" == _typeof$e(i2) ? i2 : String(i2);
}
function _toPrimitive$d(t2, r2) {
  if ("object" != _typeof$e(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$e(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var createScale = function createScale2(_ref) {
  var data2 = _ref.data, startIndex = _ref.startIndex, endIndex = _ref.endIndex, x2 = _ref.x, width = _ref.width, travellerWidth = _ref.travellerWidth;
  if (!data2 || !data2.length) {
    return {};
  }
  var len = data2.length;
  var scale = point().domain(range$3(0, len)).range([x2, x2 + width - travellerWidth]);
  var scaleValues = scale.domain().map(function(entry) {
    return scale(entry);
  });
  return {
    isTextActive: false,
    isSlideMoving: false,
    isTravellerMoving: false,
    isTravellerFocused: false,
    startX: scale(startIndex),
    endX: scale(endIndex),
    scale,
    scaleValues
  };
};
var isTouch = function isTouch2(e3) {
  return e3.changedTouches && !!e3.changedTouches.length;
};
var Brush = /* @__PURE__ */ function(_PureComponent) {
  _inherits$4(Brush2, _PureComponent);
  function Brush2(props) {
    var _this;
    _classCallCheck$6(this, Brush2);
    _this = _callSuper$4(this, Brush2, [props]);
    _defineProperty$e(_assertThisInitialized$4(_this), "handleDrag", function(e3) {
      if (_this.leaveTimer) {
        clearTimeout(_this.leaveTimer);
        _this.leaveTimer = null;
      }
      if (_this.state.isTravellerMoving) {
        _this.handleTravellerMove(e3);
      } else if (_this.state.isSlideMoving) {
        _this.handleSlideDrag(e3);
      }
    });
    _defineProperty$e(_assertThisInitialized$4(_this), "handleTouchMove", function(e3) {
      if (e3.changedTouches != null && e3.changedTouches.length > 0) {
        _this.handleDrag(e3.changedTouches[0]);
      }
    });
    _defineProperty$e(_assertThisInitialized$4(_this), "handleDragEnd", function() {
      _this.setState({
        isTravellerMoving: false,
        isSlideMoving: false
      }, function() {
        var _this$props = _this.props, endIndex = _this$props.endIndex, onDragEnd = _this$props.onDragEnd, startIndex = _this$props.startIndex;
        onDragEnd === null || onDragEnd === void 0 || onDragEnd({
          endIndex,
          startIndex
        });
      });
      _this.detachDragEndListener();
    });
    _defineProperty$e(_assertThisInitialized$4(_this), "handleLeaveWrapper", function() {
      if (_this.state.isTravellerMoving || _this.state.isSlideMoving) {
        _this.leaveTimer = window.setTimeout(_this.handleDragEnd, _this.props.leaveTimeOut);
      }
    });
    _defineProperty$e(_assertThisInitialized$4(_this), "handleEnterSlideOrTraveller", function() {
      _this.setState({
        isTextActive: true
      });
    });
    _defineProperty$e(_assertThisInitialized$4(_this), "handleLeaveSlideOrTraveller", function() {
      _this.setState({
        isTextActive: false
      });
    });
    _defineProperty$e(_assertThisInitialized$4(_this), "handleSlideDragStart", function(e3) {
      var event = isTouch(e3) ? e3.changedTouches[0] : e3;
      _this.setState({
        isTravellerMoving: false,
        isSlideMoving: true,
        slideMoveStartX: event.pageX
      });
      _this.attachDragEndListener();
    });
    _this.travellerDragStartHandlers = {
      startX: _this.handleTravellerDragStart.bind(_assertThisInitialized$4(_this), "startX"),
      endX: _this.handleTravellerDragStart.bind(_assertThisInitialized$4(_this), "endX")
    };
    _this.state = {};
    return _this;
  }
  _createClass$6(Brush2, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.leaveTimer) {
        clearTimeout(this.leaveTimer);
        this.leaveTimer = null;
      }
      this.detachDragEndListener();
    }
  }, {
    key: "getIndex",
    value: function getIndex(_ref2) {
      var startX = _ref2.startX, endX = _ref2.endX;
      var scaleValues = this.state.scaleValues;
      var _this$props2 = this.props, gap = _this$props2.gap, data2 = _this$props2.data;
      var lastIndex = data2.length - 1;
      var min2 = Math.min(startX, endX);
      var max2 = Math.max(startX, endX);
      var minIndex = Brush2.getIndexInRange(scaleValues, min2);
      var maxIndex = Brush2.getIndexInRange(scaleValues, max2);
      return {
        startIndex: minIndex - minIndex % gap,
        endIndex: maxIndex === lastIndex ? lastIndex : maxIndex - maxIndex % gap
      };
    }
  }, {
    key: "getTextOfTick",
    value: function getTextOfTick(index2) {
      var _this$props3 = this.props, data2 = _this$props3.data, tickFormatter = _this$props3.tickFormatter, dataKey = _this$props3.dataKey;
      var text2 = getValueByDataKey(data2[index2], dataKey, index2);
      return isFunction$4(tickFormatter) ? tickFormatter(text2, index2) : text2;
    }
  }, {
    key: "attachDragEndListener",
    value: function attachDragEndListener() {
      window.addEventListener("mouseup", this.handleDragEnd, true);
      window.addEventListener("touchend", this.handleDragEnd, true);
      window.addEventListener("mousemove", this.handleDrag, true);
    }
  }, {
    key: "detachDragEndListener",
    value: function detachDragEndListener() {
      window.removeEventListener("mouseup", this.handleDragEnd, true);
      window.removeEventListener("touchend", this.handleDragEnd, true);
      window.removeEventListener("mousemove", this.handleDrag, true);
    }
  }, {
    key: "handleSlideDrag",
    value: function handleSlideDrag(e3) {
      var _this$state = this.state, slideMoveStartX = _this$state.slideMoveStartX, startX = _this$state.startX, endX = _this$state.endX;
      var _this$props4 = this.props, x2 = _this$props4.x, width = _this$props4.width, travellerWidth = _this$props4.travellerWidth, startIndex = _this$props4.startIndex, endIndex = _this$props4.endIndex, onChange = _this$props4.onChange;
      var delta = e3.pageX - slideMoveStartX;
      if (delta > 0) {
        delta = Math.min(delta, x2 + width - travellerWidth - endX, x2 + width - travellerWidth - startX);
      } else if (delta < 0) {
        delta = Math.max(delta, x2 - startX, x2 - endX);
      }
      var newIndex = this.getIndex({
        startX: startX + delta,
        endX: endX + delta
      });
      if ((newIndex.startIndex !== startIndex || newIndex.endIndex !== endIndex) && onChange) {
        onChange(newIndex);
      }
      this.setState({
        startX: startX + delta,
        endX: endX + delta,
        slideMoveStartX: e3.pageX
      });
    }
  }, {
    key: "handleTravellerDragStart",
    value: function handleTravellerDragStart(id2, e3) {
      var event = isTouch(e3) ? e3.changedTouches[0] : e3;
      this.setState({
        isSlideMoving: false,
        isTravellerMoving: true,
        movingTravellerId: id2,
        brushMoveStartX: event.pageX
      });
      this.attachDragEndListener();
    }
  }, {
    key: "handleTravellerMove",
    value: function handleTravellerMove(e3) {
      var _this$state2 = this.state, brushMoveStartX = _this$state2.brushMoveStartX, movingTravellerId = _this$state2.movingTravellerId, endX = _this$state2.endX, startX = _this$state2.startX;
      var prevValue = this.state[movingTravellerId];
      var _this$props5 = this.props, x2 = _this$props5.x, width = _this$props5.width, travellerWidth = _this$props5.travellerWidth, onChange = _this$props5.onChange, gap = _this$props5.gap, data2 = _this$props5.data;
      var params = {
        startX: this.state.startX,
        endX: this.state.endX
      };
      var delta = e3.pageX - brushMoveStartX;
      if (delta > 0) {
        delta = Math.min(delta, x2 + width - travellerWidth - prevValue);
      } else if (delta < 0) {
        delta = Math.max(delta, x2 - prevValue);
      }
      params[movingTravellerId] = prevValue + delta;
      var newIndex = this.getIndex(params);
      var startIndex = newIndex.startIndex, endIndex = newIndex.endIndex;
      var isFullGap = function isFullGap2() {
        var lastIndex = data2.length - 1;
        if (movingTravellerId === "startX" && (endX > startX ? startIndex % gap === 0 : endIndex % gap === 0) || endX < startX && endIndex === lastIndex || movingTravellerId === "endX" && (endX > startX ? endIndex % gap === 0 : startIndex % gap === 0) || endX > startX && endIndex === lastIndex) {
          return true;
        }
        return false;
      };
      this.setState(_defineProperty$e(_defineProperty$e({}, movingTravellerId, prevValue + delta), "brushMoveStartX", e3.pageX), function() {
        if (onChange) {
          if (isFullGap()) {
            onChange(newIndex);
          }
        }
      });
    }
  }, {
    key: "handleTravellerMoveKeyboard",
    value: function handleTravellerMoveKeyboard(direction, id2) {
      var _this2 = this;
      var _this$state3 = this.state, scaleValues = _this$state3.scaleValues, startX = _this$state3.startX, endX = _this$state3.endX;
      var currentScaleValue = this.state[id2];
      var currentIndex = scaleValues.indexOf(currentScaleValue);
      if (currentIndex === -1) {
        return;
      }
      var newIndex = currentIndex + direction;
      if (newIndex === -1 || newIndex >= scaleValues.length) {
        return;
      }
      var newScaleValue = scaleValues[newIndex];
      if (id2 === "startX" && newScaleValue >= endX || id2 === "endX" && newScaleValue <= startX) {
        return;
      }
      this.setState(_defineProperty$e({}, id2, newScaleValue), function() {
        _this2.props.onChange(_this2.getIndex({
          startX: _this2.state.startX,
          endX: _this2.state.endX
        }));
      });
    }
  }, {
    key: "renderBackground",
    value: function renderBackground() {
      var _this$props6 = this.props, x2 = _this$props6.x, y2 = _this$props6.y, width = _this$props6.width, height = _this$props6.height, fill = _this$props6.fill, stroke = _this$props6.stroke;
      return /* @__PURE__ */ React.createElement("rect", {
        stroke,
        fill,
        x: x2,
        y: y2,
        width,
        height
      });
    }
  }, {
    key: "renderPanorama",
    value: function renderPanorama() {
      var _this$props7 = this.props, x2 = _this$props7.x, y2 = _this$props7.y, width = _this$props7.width, height = _this$props7.height, data2 = _this$props7.data, children2 = _this$props7.children, padding = _this$props7.padding;
      var chartElement = reactExports.Children.only(children2);
      if (!chartElement) {
        return null;
      }
      return /* @__PURE__ */ React.cloneElement(chartElement, {
        x: x2,
        y: y2,
        width,
        height,
        margin: padding,
        compact: true,
        data: data2
      });
    }
  }, {
    key: "renderTravellerLayer",
    value: function renderTravellerLayer(travellerX, id2) {
      var _this3 = this;
      var _this$props8 = this.props, y2 = _this$props8.y, travellerWidth = _this$props8.travellerWidth, height = _this$props8.height, traveller = _this$props8.traveller, ariaLabel = _this$props8.ariaLabel, data2 = _this$props8.data, startIndex = _this$props8.startIndex, endIndex = _this$props8.endIndex;
      var x2 = Math.max(travellerX, this.props.x);
      var travellerProps = _objectSpread$c(_objectSpread$c({}, filterProps(this.props, false)), {}, {
        x: x2,
        y: y2,
        width: travellerWidth,
        height
      });
      var ariaLabelBrush = ariaLabel || "Min value: ".concat(data2[startIndex].name, ", Max value: ").concat(data2[endIndex].name);
      return /* @__PURE__ */ React.createElement(Layer, {
        tabIndex: 0,
        role: "slider",
        "aria-label": ariaLabelBrush,
        "aria-valuenow": travellerX,
        className: "recharts-brush-traveller",
        onMouseEnter: this.handleEnterSlideOrTraveller,
        onMouseLeave: this.handleLeaveSlideOrTraveller,
        onMouseDown: this.travellerDragStartHandlers[id2],
        onTouchStart: this.travellerDragStartHandlers[id2],
        onKeyDown: function onKeyDown(e3) {
          if (!["ArrowLeft", "ArrowRight"].includes(e3.key)) {
            return;
          }
          e3.preventDefault();
          e3.stopPropagation();
          _this3.handleTravellerMoveKeyboard(e3.key === "ArrowRight" ? 1 : -1, id2);
        },
        onFocus: function onFocus() {
          _this3.setState({
            isTravellerFocused: true
          });
        },
        onBlur: function onBlur() {
          _this3.setState({
            isTravellerFocused: false
          });
        },
        style: {
          cursor: "col-resize"
        }
      }, Brush2.renderTraveller(traveller, travellerProps));
    }
  }, {
    key: "renderSlide",
    value: function renderSlide(startX, endX) {
      var _this$props9 = this.props, y2 = _this$props9.y, height = _this$props9.height, stroke = _this$props9.stroke, travellerWidth = _this$props9.travellerWidth;
      var x2 = Math.min(startX, endX) + travellerWidth;
      var width = Math.max(Math.abs(endX - startX) - travellerWidth, 0);
      return /* @__PURE__ */ React.createElement("rect", {
        className: "recharts-brush-slide",
        onMouseEnter: this.handleEnterSlideOrTraveller,
        onMouseLeave: this.handleLeaveSlideOrTraveller,
        onMouseDown: this.handleSlideDragStart,
        onTouchStart: this.handleSlideDragStart,
        style: {
          cursor: "move"
        },
        stroke: "none",
        fill: stroke,
        fillOpacity: 0.2,
        x: x2,
        y: y2,
        width,
        height
      });
    }
  }, {
    key: "renderText",
    value: function renderText() {
      var _this$props10 = this.props, startIndex = _this$props10.startIndex, endIndex = _this$props10.endIndex, y2 = _this$props10.y, height = _this$props10.height, travellerWidth = _this$props10.travellerWidth, stroke = _this$props10.stroke;
      var _this$state4 = this.state, startX = _this$state4.startX, endX = _this$state4.endX;
      var offset2 = 5;
      var attrs = {
        pointerEvents: "none",
        fill: stroke
      };
      return /* @__PURE__ */ React.createElement(Layer, {
        className: "recharts-brush-texts"
      }, /* @__PURE__ */ React.createElement(Text, _extends$h({
        textAnchor: "end",
        verticalAnchor: "middle",
        x: Math.min(startX, endX) - offset2,
        y: y2 + height / 2
      }, attrs), this.getTextOfTick(startIndex)), /* @__PURE__ */ React.createElement(Text, _extends$h({
        textAnchor: "start",
        verticalAnchor: "middle",
        x: Math.max(startX, endX) + travellerWidth + offset2,
        y: y2 + height / 2
      }, attrs), this.getTextOfTick(endIndex)));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props11 = this.props, data2 = _this$props11.data, className = _this$props11.className, children2 = _this$props11.children, x2 = _this$props11.x, y2 = _this$props11.y, width = _this$props11.width, height = _this$props11.height, alwaysShowText = _this$props11.alwaysShowText;
      var _this$state5 = this.state, startX = _this$state5.startX, endX = _this$state5.endX, isTextActive = _this$state5.isTextActive, isSlideMoving = _this$state5.isSlideMoving, isTravellerMoving = _this$state5.isTravellerMoving, isTravellerFocused = _this$state5.isTravellerFocused;
      if (!data2 || !data2.length || !isNumber(x2) || !isNumber(y2) || !isNumber(width) || !isNumber(height) || width <= 0 || height <= 0) {
        return null;
      }
      var layerClass = clsx$1("recharts-brush", className);
      var isPanoramic = React.Children.count(children2) === 1;
      var style = generatePrefixStyle("userSelect", "none");
      return /* @__PURE__ */ React.createElement(Layer, {
        className: layerClass,
        onMouseLeave: this.handleLeaveWrapper,
        onTouchMove: this.handleTouchMove,
        style
      }, this.renderBackground(), isPanoramic && this.renderPanorama(), this.renderSlide(startX, endX), this.renderTravellerLayer(startX, "startX"), this.renderTravellerLayer(endX, "endX"), (isTextActive || isSlideMoving || isTravellerMoving || isTravellerFocused || alwaysShowText) && this.renderText());
    }
  }], [{
    key: "renderDefaultTraveller",
    value: function renderDefaultTraveller(props) {
      var x2 = props.x, y2 = props.y, width = props.width, height = props.height, stroke = props.stroke;
      var lineY = Math.floor(y2 + height / 2) - 1;
      return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("rect", {
        x: x2,
        y: y2,
        width,
        height,
        fill: stroke,
        stroke: "none"
      }), /* @__PURE__ */ React.createElement("line", {
        x1: x2 + 1,
        y1: lineY,
        x2: x2 + width - 1,
        y2: lineY,
        fill: "none",
        stroke: "#fff"
      }), /* @__PURE__ */ React.createElement("line", {
        x1: x2 + 1,
        y1: lineY + 2,
        x2: x2 + width - 1,
        y2: lineY + 2,
        fill: "none",
        stroke: "#fff"
      }));
    }
  }, {
    key: "renderTraveller",
    value: function renderTraveller(option, props) {
      var rectangle;
      if (/* @__PURE__ */ React.isValidElement(option)) {
        rectangle = /* @__PURE__ */ React.cloneElement(option, props);
      } else if (isFunction$4(option)) {
        rectangle = option(props);
      } else {
        rectangle = Brush2.renderDefaultTraveller(props);
      }
      return rectangle;
    }
  }, {
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      var data2 = nextProps.data, width = nextProps.width, x2 = nextProps.x, travellerWidth = nextProps.travellerWidth, updateId = nextProps.updateId, startIndex = nextProps.startIndex, endIndex = nextProps.endIndex;
      if (data2 !== prevState.prevData || updateId !== prevState.prevUpdateId) {
        return _objectSpread$c({
          prevData: data2,
          prevTravellerWidth: travellerWidth,
          prevUpdateId: updateId,
          prevX: x2,
          prevWidth: width
        }, data2 && data2.length ? createScale({
          data: data2,
          width,
          x: x2,
          travellerWidth,
          startIndex,
          endIndex
        }) : {
          scale: null,
          scaleValues: null
        });
      }
      if (prevState.scale && (width !== prevState.prevWidth || x2 !== prevState.prevX || travellerWidth !== prevState.prevTravellerWidth)) {
        prevState.scale.range([x2, x2 + width - travellerWidth]);
        var scaleValues = prevState.scale.domain().map(function(entry) {
          return prevState.scale(entry);
        });
        return {
          prevData: data2,
          prevTravellerWidth: travellerWidth,
          prevUpdateId: updateId,
          prevX: x2,
          prevWidth: width,
          startX: prevState.scale(nextProps.startIndex),
          endX: prevState.scale(nextProps.endIndex),
          scaleValues
        };
      }
      return null;
    }
  }, {
    key: "getIndexInRange",
    value: function getIndexInRange(valueRange, x2) {
      var len = valueRange.length;
      var start2 = 0;
      var end = len - 1;
      while (end - start2 > 1) {
        var middle = Math.floor((start2 + end) / 2);
        if (valueRange[middle] > x2) {
          end = middle;
        } else {
          start2 = middle;
        }
      }
      return x2 >= valueRange[end] ? end : start2;
    }
  }]);
  return Brush2;
}(reactExports.PureComponent);
_defineProperty$e(Brush, "displayName", "Brush");
_defineProperty$e(Brush, "defaultProps", {
  height: 40,
  travellerWidth: 5,
  gap: 1,
  fill: "#fff",
  stroke: "#666",
  padding: {
    top: 1,
    right: 1,
    bottom: 1,
    left: 1
  },
  leaveTimeOut: 1e3,
  alwaysShowText: false
});
var baseEach$1 = _baseEach;
function baseSome$1(collection, predicate) {
  var result;
  baseEach$1(collection, function(value, index2, collection2) {
    result = predicate(value, index2, collection2);
    return !result;
  });
  return !!result;
}
var _baseSome = baseSome$1;
var arraySome = _arraySome, baseIteratee$4 = _baseIteratee, baseSome = _baseSome, isArray$1 = isArray_1, isIterateeCall$1 = _isIterateeCall;
function some(collection, predicate, guard) {
  var func = isArray$1(collection) ? arraySome : baseSome;
  if (guard && isIterateeCall$1(collection, predicate, guard)) {
    predicate = void 0;
  }
  return func(collection, baseIteratee$4(predicate));
}
var some_1 = some;
const some$1 = /* @__PURE__ */ getDefaultExportFromCjs(some_1);
var ifOverflowMatches = function ifOverflowMatches2(props, value) {
  var alwaysShow = props.alwaysShow;
  var ifOverflow = props.ifOverflow;
  if (alwaysShow) {
    ifOverflow = "extendDomain";
  }
  return ifOverflow === value;
};
var defineProperty = _defineProperty$z;
function baseAssignValue$1(object2, key, value) {
  if (key == "__proto__" && defineProperty) {
    defineProperty(object2, key, {
      "configurable": true,
      "enumerable": true,
      "value": value,
      "writable": true
    });
  } else {
    object2[key] = value;
  }
}
var _baseAssignValue = baseAssignValue$1;
var baseAssignValue = _baseAssignValue, baseForOwn = _baseForOwn, baseIteratee$3 = _baseIteratee;
function mapValues(object2, iteratee) {
  var result = {};
  iteratee = baseIteratee$3(iteratee);
  baseForOwn(object2, function(value, key, object3) {
    baseAssignValue(result, key, iteratee(value, key, object3));
  });
  return result;
}
var mapValues_1 = mapValues;
const mapValues$1 = /* @__PURE__ */ getDefaultExportFromCjs(mapValues_1);
function arrayEvery$1(array2, predicate) {
  var index2 = -1, length2 = array2 == null ? 0 : array2.length;
  while (++index2 < length2) {
    if (!predicate(array2[index2], index2, array2)) {
      return false;
    }
  }
  return true;
}
var _arrayEvery = arrayEvery$1;
var baseEach = _baseEach;
function baseEvery$1(collection, predicate) {
  var result = true;
  baseEach(collection, function(value, index2, collection2) {
    result = !!predicate(value, index2, collection2);
    return result;
  });
  return result;
}
var _baseEvery = baseEvery$1;
var arrayEvery = _arrayEvery, baseEvery = _baseEvery, baseIteratee$2 = _baseIteratee, isArray = isArray_1, isIterateeCall = _isIterateeCall;
function every(collection, predicate, guard) {
  var func = isArray(collection) ? arrayEvery : baseEvery;
  if (guard && isIterateeCall(collection, predicate, guard)) {
    predicate = void 0;
  }
  return func(collection, baseIteratee$2(predicate));
}
var every_1 = every;
const every$1 = /* @__PURE__ */ getDefaultExportFromCjs(every_1);
var _excluded$h = ["x", "y"];
function _typeof$d(o2) {
  "@babel/helpers - typeof";
  return _typeof$d = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o22) {
    return typeof o22;
  } : function(o22) {
    return o22 && "function" == typeof Symbol && o22.constructor === Symbol && o22 !== Symbol.prototype ? "symbol" : typeof o22;
  }, _typeof$d(o2);
}
function _extends$g() {
  _extends$g = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$g.apply(this, arguments);
}
function ownKeys$c(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r22) {
      return Object.getOwnPropertyDescriptor(e3, r22).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$b(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$c(Object(t2), true).forEach(function(r22) {
      _defineProperty$d(e3, r22, t2[r22]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$c(Object(t2)).forEach(function(r22) {
      Object.defineProperty(e3, r22, Object.getOwnPropertyDescriptor(t2, r22));
    });
  }
  return e3;
}
function _defineProperty$d(obj, key, value) {
  key = _toPropertyKey$c(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$c(t2) {
  var i2 = _toPrimitive$c(t2, "string");
  return "symbol" == _typeof$d(i2) ? i2 : String(i2);
}
function _toPrimitive$c(t2, r2) {
  if ("object" != _typeof$d(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$d(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function _objectWithoutProperties$8(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$7(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$7(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function typeguardBarRectangleProps(_ref, props) {
  var xProp = _ref.x, yProp = _ref.y, option = _objectWithoutProperties$8(_ref, _excluded$h);
  var xValue = "".concat(xProp);
  var x2 = parseInt(xValue, 10);
  var yValue = "".concat(yProp);
  var y2 = parseInt(yValue, 10);
  var heightValue = "".concat(props.height || option.height);
  var height = parseInt(heightValue, 10);
  var widthValue = "".concat(props.width || option.width);
  var width = parseInt(widthValue, 10);
  return _objectSpread$b(_objectSpread$b(_objectSpread$b(_objectSpread$b(_objectSpread$b({}, props), option), x2 ? {
    x: x2
  } : {}), y2 ? {
    y: y2
  } : {}), {}, {
    height,
    width,
    name: props.name,
    radius: props.radius
  });
}
function BarRectangle(props) {
  return /* @__PURE__ */ React.createElement(Shape, _extends$g({
    shapeType: "rectangle",
    propTransformer: typeguardBarRectangleProps,
    activeClassName: "recharts-active-bar"
  }, props));
}
var minPointSizeCallback = function minPointSizeCallback2(minPointSize) {
  var defaultValue2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  return function(value, index2) {
    if (typeof minPointSize === "number")
      return minPointSize;
    var isValueNumber = typeof value === "number";
    if (isValueNumber) {
      return minPointSize(value, index2);
    }
    !isValueNumber ? invariant$1(false) : void 0;
    return defaultValue2;
  };
};
var _excluded$g = ["value", "background"];
var _Bar;
function _typeof$c(o2) {
  "@babel/helpers - typeof";
  return _typeof$c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$c(o2);
}
function _objectWithoutProperties$7(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$6(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$6(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends$f() {
  _extends$f = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$f.apply(this, arguments);
}
function ownKeys$b(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$a(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$b(Object(t2), true).forEach(function(r3) {
      _defineProperty$c(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$b(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _classCallCheck$5(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$5(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey$b(descriptor.key), descriptor);
  }
}
function _createClass$5(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$5(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$5(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _callSuper$3(t2, o2, e3) {
  return o2 = _getPrototypeOf$3(o2), _possibleConstructorReturn$3(t2, _isNativeReflectConstruct$3() ? Reflect.construct(o2, e3 || [], _getPrototypeOf$3(t2).constructor) : o2.apply(t2, e3));
}
function _possibleConstructorReturn$3(self2, call) {
  if (call && (_typeof$c(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized$3(self2);
}
function _isNativeReflectConstruct$3() {
  try {
    var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t3) {
  }
  return (_isNativeReflectConstruct$3 = function _isNativeReflectConstruct2() {
    return !!t2;
  })();
}
function _getPrototypeOf$3(o2) {
  _getPrototypeOf$3 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o3) {
    return o3.__proto__ || Object.getPrototypeOf(o3);
  };
  return _getPrototypeOf$3(o2);
}
function _assertThisInitialized$3(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inherits$3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf$3(subClass, superClass);
}
function _setPrototypeOf$3(o2, p2) {
  _setPrototypeOf$3 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o3, p3) {
    o3.__proto__ = p3;
    return o3;
  };
  return _setPrototypeOf$3(o2, p2);
}
function _defineProperty$c(obj, key, value) {
  key = _toPropertyKey$b(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$b(t2) {
  var i2 = _toPrimitive$b(t2, "string");
  return "symbol" == _typeof$c(i2) ? i2 : String(i2);
}
function _toPrimitive$b(t2, r2) {
  if ("object" != _typeof$c(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$c(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var Bar = /* @__PURE__ */ function(_PureComponent) {
  _inherits$3(Bar2, _PureComponent);
  function Bar2() {
    var _this;
    _classCallCheck$5(this, Bar2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper$3(this, Bar2, [].concat(args));
    _defineProperty$c(_assertThisInitialized$3(_this), "state", {
      isAnimationFinished: false
    });
    _defineProperty$c(_assertThisInitialized$3(_this), "id", uniqueId("recharts-bar-"));
    _defineProperty$c(_assertThisInitialized$3(_this), "handleAnimationEnd", function() {
      var onAnimationEnd2 = _this.props.onAnimationEnd;
      _this.setState({
        isAnimationFinished: true
      });
      if (onAnimationEnd2) {
        onAnimationEnd2();
      }
    });
    _defineProperty$c(_assertThisInitialized$3(_this), "handleAnimationStart", function() {
      var onAnimationStart2 = _this.props.onAnimationStart;
      _this.setState({
        isAnimationFinished: false
      });
      if (onAnimationStart2) {
        onAnimationStart2();
      }
    });
    return _this;
  }
  _createClass$5(Bar2, [{
    key: "renderRectanglesStatically",
    value: function renderRectanglesStatically(data2) {
      var _this2 = this;
      var _this$props = this.props, shape = _this$props.shape, dataKey = _this$props.dataKey, activeIndex = _this$props.activeIndex, activeBar = _this$props.activeBar;
      var baseProps = filterProps(this.props, false);
      return data2 && data2.map(function(entry, i2) {
        var isActive = i2 === activeIndex;
        var option = isActive ? activeBar : shape;
        var props = _objectSpread$a(_objectSpread$a(_objectSpread$a({}, baseProps), entry), {}, {
          isActive,
          option,
          index: i2,
          dataKey,
          onAnimationStart: _this2.handleAnimationStart,
          onAnimationEnd: _this2.handleAnimationEnd
        });
        return /* @__PURE__ */ React.createElement(Layer, _extends$f({
          className: "recharts-bar-rectangle"
        }, adaptEventsOfChild(_this2.props, entry, i2), {
          key: "rectangle-".concat(entry === null || entry === void 0 ? void 0 : entry.x, "-").concat(entry === null || entry === void 0 ? void 0 : entry.y, "-").concat(entry === null || entry === void 0 ? void 0 : entry.value)
        }), /* @__PURE__ */ React.createElement(BarRectangle, props));
      });
    }
  }, {
    key: "renderRectanglesWithAnimation",
    value: function renderRectanglesWithAnimation() {
      var _this3 = this;
      var _this$props2 = this.props, data2 = _this$props2.data, layout = _this$props2.layout, isAnimationActive = _this$props2.isAnimationActive, animationBegin = _this$props2.animationBegin, animationDuration = _this$props2.animationDuration, animationEasing = _this$props2.animationEasing, animationId = _this$props2.animationId;
      var prevData = this.state.prevData;
      return /* @__PURE__ */ React.createElement(Animate, {
        begin: animationBegin,
        duration: animationDuration,
        isActive: isAnimationActive,
        easing: animationEasing,
        from: {
          t: 0
        },
        to: {
          t: 1
        },
        key: "bar-".concat(animationId),
        onAnimationEnd: this.handleAnimationEnd,
        onAnimationStart: this.handleAnimationStart
      }, function(_ref) {
        var t2 = _ref.t;
        var stepData = data2.map(function(entry, index2) {
          var prev = prevData && prevData[index2];
          if (prev) {
            var interpolatorX = interpolateNumber$3(prev.x, entry.x);
            var interpolatorY = interpolateNumber$3(prev.y, entry.y);
            var interpolatorWidth = interpolateNumber$3(prev.width, entry.width);
            var interpolatorHeight = interpolateNumber$3(prev.height, entry.height);
            return _objectSpread$a(_objectSpread$a({}, entry), {}, {
              x: interpolatorX(t2),
              y: interpolatorY(t2),
              width: interpolatorWidth(t2),
              height: interpolatorHeight(t2)
            });
          }
          if (layout === "horizontal") {
            var _interpolatorHeight = interpolateNumber$3(0, entry.height);
            var h2 = _interpolatorHeight(t2);
            return _objectSpread$a(_objectSpread$a({}, entry), {}, {
              y: entry.y + entry.height - h2,
              height: h2
            });
          }
          var interpolator = interpolateNumber$3(0, entry.width);
          var w2 = interpolator(t2);
          return _objectSpread$a(_objectSpread$a({}, entry), {}, {
            width: w2
          });
        });
        return /* @__PURE__ */ React.createElement(Layer, null, _this3.renderRectanglesStatically(stepData));
      });
    }
  }, {
    key: "renderRectangles",
    value: function renderRectangles() {
      var _this$props3 = this.props, data2 = _this$props3.data, isAnimationActive = _this$props3.isAnimationActive;
      var prevData = this.state.prevData;
      if (isAnimationActive && data2 && data2.length && (!prevData || !isEqual$1(prevData, data2))) {
        return this.renderRectanglesWithAnimation();
      }
      return this.renderRectanglesStatically(data2);
    }
  }, {
    key: "renderBackground",
    value: function renderBackground() {
      var _this4 = this;
      var _this$props4 = this.props, data2 = _this$props4.data, dataKey = _this$props4.dataKey, activeIndex = _this$props4.activeIndex;
      var backgroundProps = filterProps(this.props.background, false);
      return data2.map(function(entry, i2) {
        entry.value;
        var background = entry.background, rest = _objectWithoutProperties$7(entry, _excluded$g);
        if (!background) {
          return null;
        }
        var props = _objectSpread$a(_objectSpread$a(_objectSpread$a(_objectSpread$a(_objectSpread$a({}, rest), {}, {
          fill: "#eee"
        }, background), backgroundProps), adaptEventsOfChild(_this4.props, entry, i2)), {}, {
          onAnimationStart: _this4.handleAnimationStart,
          onAnimationEnd: _this4.handleAnimationEnd,
          dataKey,
          index: i2,
          key: "background-bar-".concat(i2),
          className: "recharts-bar-background-rectangle"
        });
        return /* @__PURE__ */ React.createElement(BarRectangle, _extends$f({
          option: _this4.props.background,
          isActive: i2 === activeIndex
        }, props));
      });
    }
  }, {
    key: "renderErrorBar",
    value: function renderErrorBar(needClip, clipPathId) {
      if (this.props.isAnimationActive && !this.state.isAnimationFinished) {
        return null;
      }
      var _this$props5 = this.props, data2 = _this$props5.data, xAxis = _this$props5.xAxis, yAxis = _this$props5.yAxis, layout = _this$props5.layout, children2 = _this$props5.children;
      var errorBarItems = findAllByType(children2, ErrorBar);
      if (!errorBarItems) {
        return null;
      }
      var offset2 = layout === "vertical" ? data2[0].height / 2 : data2[0].width / 2;
      var dataPointFormatter = function dataPointFormatter2(dataPoint, dataKey) {
        var value = Array.isArray(dataPoint.value) ? dataPoint.value[1] : dataPoint.value;
        return {
          x: dataPoint.x,
          y: dataPoint.y,
          value,
          errorVal: getValueByDataKey(dataPoint, dataKey)
        };
      };
      var errorBarProps = {
        clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null
      };
      return /* @__PURE__ */ React.createElement(Layer, errorBarProps, errorBarItems.map(function(item) {
        return /* @__PURE__ */ React.cloneElement(item, {
          key: "error-bar-".concat(clipPathId, "-").concat(item.props.dataKey),
          data: data2,
          xAxis,
          yAxis,
          layout,
          offset: offset2,
          dataPointFormatter
        });
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props6 = this.props, hide2 = _this$props6.hide, data2 = _this$props6.data, className = _this$props6.className, xAxis = _this$props6.xAxis, yAxis = _this$props6.yAxis, left = _this$props6.left, top = _this$props6.top, width = _this$props6.width, height = _this$props6.height, isAnimationActive = _this$props6.isAnimationActive, background = _this$props6.background, id2 = _this$props6.id;
      if (hide2 || !data2 || !data2.length) {
        return null;
      }
      var isAnimationFinished = this.state.isAnimationFinished;
      var layerClass = clsx$1("recharts-bar", className);
      var needClipX = xAxis && xAxis.allowDataOverflow;
      var needClipY = yAxis && yAxis.allowDataOverflow;
      var needClip = needClipX || needClipY;
      var clipPathId = isNil$1(id2) ? this.id : id2;
      return /* @__PURE__ */ React.createElement(Layer, {
        className: layerClass
      }, needClipX || needClipY ? /* @__PURE__ */ React.createElement("defs", null, /* @__PURE__ */ React.createElement("clipPath", {
        id: "clipPath-".concat(clipPathId)
      }, /* @__PURE__ */ React.createElement("rect", {
        x: needClipX ? left : left - width / 2,
        y: needClipY ? top : top - height / 2,
        width: needClipX ? width : width * 2,
        height: needClipY ? height : height * 2
      }))) : null, /* @__PURE__ */ React.createElement(Layer, {
        className: "recharts-bar-rectangles",
        clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null
      }, background ? this.renderBackground() : null, this.renderRectangles()), this.renderErrorBar(needClip, clipPathId), (!isAnimationActive || isAnimationFinished) && LabelList.renderCallByParent(this.props, data2));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      if (nextProps.animationId !== prevState.prevAnimationId) {
        return {
          prevAnimationId: nextProps.animationId,
          curData: nextProps.data,
          prevData: prevState.curData
        };
      }
      if (nextProps.data !== prevState.curData) {
        return {
          curData: nextProps.data
        };
      }
      return null;
    }
  }]);
  return Bar2;
}(reactExports.PureComponent);
_Bar = Bar;
_defineProperty$c(Bar, "displayName", "Bar");
_defineProperty$c(Bar, "defaultProps", {
  xAxisId: 0,
  yAxisId: 0,
  legendType: "rect",
  minPointSize: 0,
  hide: false,
  data: [],
  layout: "vertical",
  activeBar: false,
  isAnimationActive: !Global.isSsr,
  animationBegin: 0,
  animationDuration: 400,
  animationEasing: "ease"
});
_defineProperty$c(Bar, "getComposedData", function(_ref2) {
  var props = _ref2.props, item = _ref2.item, barPosition = _ref2.barPosition, bandSize = _ref2.bandSize, xAxis = _ref2.xAxis, yAxis = _ref2.yAxis, xAxisTicks = _ref2.xAxisTicks, yAxisTicks = _ref2.yAxisTicks, stackedData = _ref2.stackedData, dataStartIndex = _ref2.dataStartIndex, displayedData = _ref2.displayedData, offset2 = _ref2.offset;
  var pos = findPositionOfBar(barPosition, item);
  if (!pos) {
    return null;
  }
  var layout = props.layout;
  var _item$props = item.props, dataKey = _item$props.dataKey, children2 = _item$props.children, minPointSizeProp = _item$props.minPointSize;
  var numericAxis = layout === "horizontal" ? yAxis : xAxis;
  var stackedDomain = stackedData ? numericAxis.scale.domain() : null;
  var baseValue = getBaseValueOfBar({
    numericAxis
  });
  var cells = findAllByType(children2, Cell);
  var rects = displayedData.map(function(entry, index2) {
    var value, x2, y2, width, height, background;
    if (stackedData) {
      value = truncateByDomain(stackedData[dataStartIndex + index2], stackedDomain);
    } else {
      value = getValueByDataKey(entry, dataKey);
      if (!Array.isArray(value)) {
        value = [baseValue, value];
      }
    }
    var minPointSize = minPointSizeCallback(minPointSizeProp, _Bar.defaultProps.minPointSize)(value[1], index2);
    if (layout === "horizontal") {
      var _ref4;
      var _ref3 = [yAxis.scale(value[0]), yAxis.scale(value[1])], baseValueScale = _ref3[0], currentValueScale = _ref3[1];
      x2 = getCateCoordinateOfBar({
        axis: xAxis,
        ticks: xAxisTicks,
        bandSize,
        offset: pos.offset,
        entry,
        index: index2
      });
      y2 = (_ref4 = currentValueScale !== null && currentValueScale !== void 0 ? currentValueScale : baseValueScale) !== null && _ref4 !== void 0 ? _ref4 : void 0;
      width = pos.size;
      var computedHeight = baseValueScale - currentValueScale;
      height = Number.isNaN(computedHeight) ? 0 : computedHeight;
      background = {
        x: x2,
        y: yAxis.y,
        width,
        height: yAxis.height
      };
      if (Math.abs(minPointSize) > 0 && Math.abs(height) < Math.abs(minPointSize)) {
        var delta = mathSign(height || minPointSize) * (Math.abs(minPointSize) - Math.abs(height));
        y2 -= delta;
        height += delta;
      }
    } else {
      var _ref5 = [xAxis.scale(value[0]), xAxis.scale(value[1])], _baseValueScale = _ref5[0], _currentValueScale = _ref5[1];
      x2 = _baseValueScale;
      y2 = getCateCoordinateOfBar({
        axis: yAxis,
        ticks: yAxisTicks,
        bandSize,
        offset: pos.offset,
        entry,
        index: index2
      });
      width = _currentValueScale - _baseValueScale;
      height = pos.size;
      background = {
        x: xAxis.x,
        y: y2,
        width: xAxis.width,
        height
      };
      if (Math.abs(minPointSize) > 0 && Math.abs(width) < Math.abs(minPointSize)) {
        var _delta = mathSign(width || minPointSize) * (Math.abs(minPointSize) - Math.abs(width));
        width += _delta;
      }
    }
    return _objectSpread$a(_objectSpread$a(_objectSpread$a({}, entry), {}, {
      x: x2,
      y: y2,
      width,
      height,
      value: stackedData ? value : value[1],
      payload: entry,
      background
    }, cells && cells[index2] && cells[index2].props), {}, {
      tooltipPayload: [getTooltipItem(item, entry)],
      tooltipPosition: {
        x: x2 + width / 2,
        y: y2 + height / 2
      }
    });
  });
  return _objectSpread$a({
    data: rects,
    layout
  }, offset2);
});
function _typeof$b(o2) {
  "@babel/helpers - typeof";
  return _typeof$b = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$b(o2);
}
function _classCallCheck$4(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$4(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey$a(descriptor.key), descriptor);
  }
}
function _createClass$4(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$4(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$4(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function ownKeys$a(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$9(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$a(Object(t2), true).forEach(function(r3) {
      _defineProperty$b(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$a(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$b(obj, key, value) {
  key = _toPropertyKey$a(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$a(t2) {
  var i2 = _toPrimitive$a(t2, "string");
  return "symbol" == _typeof$b(i2) ? i2 : String(i2);
}
function _toPrimitive$a(t2, r2) {
  if ("object" != _typeof$b(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$b(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var formatAxisMap = function formatAxisMap2(props, axisMap, offset2, axisType, chartName) {
  var width = props.width, height = props.height, layout = props.layout, children2 = props.children;
  var ids = Object.keys(axisMap);
  var steps = {
    left: offset2.left,
    leftMirror: offset2.left,
    right: width - offset2.right,
    rightMirror: width - offset2.right,
    top: offset2.top,
    topMirror: offset2.top,
    bottom: height - offset2.bottom,
    bottomMirror: height - offset2.bottom
  };
  var hasBar = !!findChildByType(children2, Bar);
  return ids.reduce(function(result, id2) {
    var axis = axisMap[id2];
    var orientation = axis.orientation, domain = axis.domain, _axis$padding = axis.padding, padding = _axis$padding === void 0 ? {} : _axis$padding, mirror = axis.mirror, reversed = axis.reversed;
    var offsetKey = "".concat(orientation).concat(mirror ? "Mirror" : "");
    var calculatedPadding, range3, x2, y2, needSpace;
    if (axis.type === "number" && (axis.padding === "gap" || axis.padding === "no-gap")) {
      var diff = domain[1] - domain[0];
      var smallestDistanceBetweenValues = Infinity;
      var sortedValues = axis.categoricalDomain.sort();
      sortedValues.forEach(function(value, index2) {
        if (index2 > 0) {
          smallestDistanceBetweenValues = Math.min((value || 0) - (sortedValues[index2 - 1] || 0), smallestDistanceBetweenValues);
        }
      });
      if (Number.isFinite(smallestDistanceBetweenValues)) {
        var smallestDistanceInPercent = smallestDistanceBetweenValues / diff;
        var rangeWidth = axis.layout === "vertical" ? offset2.height : offset2.width;
        if (axis.padding === "gap") {
          calculatedPadding = smallestDistanceInPercent * rangeWidth / 2;
        }
        if (axis.padding === "no-gap") {
          var gap = getPercentValue(props.barCategoryGap, smallestDistanceInPercent * rangeWidth);
          var halfBand = smallestDistanceInPercent * rangeWidth / 2;
          calculatedPadding = halfBand - gap - (halfBand - gap) / rangeWidth * gap;
        }
      }
    }
    if (axisType === "xAxis") {
      range3 = [offset2.left + (padding.left || 0) + (calculatedPadding || 0), offset2.left + offset2.width - (padding.right || 0) - (calculatedPadding || 0)];
    } else if (axisType === "yAxis") {
      range3 = layout === "horizontal" ? [offset2.top + offset2.height - (padding.bottom || 0), offset2.top + (padding.top || 0)] : [offset2.top + (padding.top || 0) + (calculatedPadding || 0), offset2.top + offset2.height - (padding.bottom || 0) - (calculatedPadding || 0)];
    } else {
      range3 = axis.range;
    }
    if (reversed) {
      range3 = [range3[1], range3[0]];
    }
    var _parseScale = parseScale(axis, chartName, hasBar), scale = _parseScale.scale, realScaleType = _parseScale.realScaleType;
    scale.domain(domain).range(range3);
    checkDomainOfScale(scale);
    var ticks2 = getTicksOfScale(scale, _objectSpread$9(_objectSpread$9({}, axis), {}, {
      realScaleType
    }));
    if (axisType === "xAxis") {
      needSpace = orientation === "top" && !mirror || orientation === "bottom" && mirror;
      x2 = offset2.left;
      y2 = steps[offsetKey] - needSpace * axis.height;
    } else if (axisType === "yAxis") {
      needSpace = orientation === "left" && !mirror || orientation === "right" && mirror;
      x2 = steps[offsetKey] - needSpace * axis.width;
      y2 = offset2.top;
    }
    var finalAxis = _objectSpread$9(_objectSpread$9(_objectSpread$9({}, axis), ticks2), {}, {
      realScaleType,
      x: x2,
      y: y2,
      scale,
      width: axisType === "xAxis" ? offset2.width : axis.width,
      height: axisType === "yAxis" ? offset2.height : axis.height
    });
    finalAxis.bandSize = getBandSizeOfAxis(finalAxis, ticks2);
    if (!axis.hide && axisType === "xAxis") {
      steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.height;
    } else if (!axis.hide) {
      steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.width;
    }
    return _objectSpread$9(_objectSpread$9({}, result), {}, _defineProperty$b({}, id2, finalAxis));
  }, {});
};
var rectWithPoints = function rectWithPoints2(_ref, _ref2) {
  var x12 = _ref.x, y12 = _ref.y;
  var x2 = _ref2.x, y2 = _ref2.y;
  return {
    x: Math.min(x12, x2),
    y: Math.min(y12, y2),
    width: Math.abs(x2 - x12),
    height: Math.abs(y2 - y12)
  };
};
var rectWithCoords = function rectWithCoords2(_ref3) {
  var x12 = _ref3.x1, y12 = _ref3.y1, x2 = _ref3.x2, y2 = _ref3.y2;
  return rectWithPoints({
    x: x12,
    y: y12
  }, {
    x: x2,
    y: y2
  });
};
var ScaleHelper = /* @__PURE__ */ function() {
  function ScaleHelper2(scale) {
    _classCallCheck$4(this, ScaleHelper2);
    this.scale = scale;
  }
  _createClass$4(ScaleHelper2, [{
    key: "domain",
    get: function get3() {
      return this.scale.domain;
    }
  }, {
    key: "range",
    get: function get3() {
      return this.scale.range;
    }
  }, {
    key: "rangeMin",
    get: function get3() {
      return this.range()[0];
    }
  }, {
    key: "rangeMax",
    get: function get3() {
      return this.range()[1];
    }
  }, {
    key: "bandwidth",
    get: function get3() {
      return this.scale.bandwidth;
    }
  }, {
    key: "apply",
    value: function apply2(value) {
      var _ref4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, bandAware = _ref4.bandAware, position = _ref4.position;
      if (value === void 0) {
        return void 0;
      }
      if (position) {
        switch (position) {
          case "start": {
            return this.scale(value);
          }
          case "middle": {
            var offset2 = this.bandwidth ? this.bandwidth() / 2 : 0;
            return this.scale(value) + offset2;
          }
          case "end": {
            var _offset = this.bandwidth ? this.bandwidth() : 0;
            return this.scale(value) + _offset;
          }
          default: {
            return this.scale(value);
          }
        }
      }
      if (bandAware) {
        var _offset2 = this.bandwidth ? this.bandwidth() / 2 : 0;
        return this.scale(value) + _offset2;
      }
      return this.scale(value);
    }
  }, {
    key: "isInRange",
    value: function isInRange(value) {
      var range3 = this.range();
      var first = range3[0];
      var last2 = range3[range3.length - 1];
      return first <= last2 ? value >= first && value <= last2 : value >= last2 && value <= first;
    }
  }], [{
    key: "create",
    value: function create2(obj) {
      return new ScaleHelper2(obj);
    }
  }]);
  return ScaleHelper2;
}();
_defineProperty$b(ScaleHelper, "EPS", 1e-4);
var createLabeledScales = function createLabeledScales2(options) {
  var scales = Object.keys(options).reduce(function(res, key) {
    return _objectSpread$9(_objectSpread$9({}, res), {}, _defineProperty$b({}, key, ScaleHelper.create(options[key])));
  }, {});
  return _objectSpread$9(_objectSpread$9({}, scales), {}, {
    apply: function apply2(coord) {
      var _ref5 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, bandAware = _ref5.bandAware, position = _ref5.position;
      return mapValues$1(coord, function(value, label) {
        return scales[label].apply(value, {
          bandAware,
          position
        });
      });
    },
    isInRange: function isInRange(coord) {
      return every$1(coord, function(value, label) {
        return scales[label].isInRange(value);
      });
    }
  });
};
function normalizeAngle(angle2) {
  return (angle2 % 180 + 180) % 180;
}
var getAngledRectangleWidth = function getAngledRectangleWidth2(_ref6) {
  var width = _ref6.width, height = _ref6.height;
  var angle2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var normalizedAngle = normalizeAngle(angle2);
  var angleRadians = normalizedAngle * Math.PI / 180;
  var angleThreshold = Math.atan(height / width);
  var angledWidth = angleRadians > angleThreshold && angleRadians < Math.PI - angleThreshold ? height / Math.sin(angleRadians) : width / Math.cos(angleRadians);
  return Math.abs(angledWidth);
};
var baseIteratee$1 = _baseIteratee, isArrayLike = isArrayLike_1, keys = keys_1;
function createFind$1(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike(collection)) {
      var iteratee = baseIteratee$1(predicate);
      collection = keys(collection);
      predicate = function(key) {
        return iteratee(iterable[key], key, iterable);
      };
    }
    var index2 = findIndexFunc(collection, predicate, fromIndex);
    return index2 > -1 ? iterable[iteratee ? collection[index2] : index2] : void 0;
  };
}
var _createFind = createFind$1;
var toFinite = toFinite_1;
function toInteger$1(value) {
  var result = toFinite(value), remainder = result % 1;
  return result === result ? remainder ? result - remainder : result : 0;
}
var toInteger_1 = toInteger$1;
var baseFindIndex = _baseFindIndex, baseIteratee = _baseIteratee, toInteger = toInteger_1;
var nativeMax = Math.max;
function findIndex$1(array2, predicate, fromIndex) {
  var length2 = array2 == null ? 0 : array2.length;
  if (!length2) {
    return -1;
  }
  var index2 = fromIndex == null ? 0 : toInteger(fromIndex);
  if (index2 < 0) {
    index2 = nativeMax(length2 + index2, 0);
  }
  return baseFindIndex(array2, baseIteratee(predicate), index2);
}
var findIndex_1 = findIndex$1;
var createFind = _createFind, findIndex = findIndex_1;
var find$1 = createFind(findIndex);
var find_1 = find$1;
const find$2 = /* @__PURE__ */ getDefaultExportFromCjs(find_1);
var calculateViewBox = memoize$3(function(offset2) {
  return {
    x: offset2.left,
    y: offset2.top,
    width: offset2.width,
    height: offset2.height
  };
}, function(offset2) {
  return ["l", offset2.left, "t", offset2.top, "w", offset2.width, "h", offset2.height].join("");
});
var XAxisContext = /* @__PURE__ */ reactExports.createContext(void 0);
var YAxisContext = /* @__PURE__ */ reactExports.createContext(void 0);
var ViewBoxContext = /* @__PURE__ */ reactExports.createContext(void 0);
var OffsetContext = /* @__PURE__ */ reactExports.createContext({});
var ClipPathIdContext = /* @__PURE__ */ reactExports.createContext(void 0);
var ChartHeightContext = /* @__PURE__ */ reactExports.createContext(0);
var ChartWidthContext = /* @__PURE__ */ reactExports.createContext(0);
var ChartLayoutContextProvider = function ChartLayoutContextProvider2(props) {
  var _props$state = props.state, xAxisMap = _props$state.xAxisMap, yAxisMap = _props$state.yAxisMap, offset2 = _props$state.offset, clipPathId = props.clipPathId, children2 = props.children, width = props.width, height = props.height;
  var viewBox = calculateViewBox(offset2);
  return /* @__PURE__ */ React.createElement(XAxisContext.Provider, {
    value: xAxisMap
  }, /* @__PURE__ */ React.createElement(YAxisContext.Provider, {
    value: yAxisMap
  }, /* @__PURE__ */ React.createElement(OffsetContext.Provider, {
    value: offset2
  }, /* @__PURE__ */ React.createElement(ViewBoxContext.Provider, {
    value: viewBox
  }, /* @__PURE__ */ React.createElement(ClipPathIdContext.Provider, {
    value: clipPathId
  }, /* @__PURE__ */ React.createElement(ChartHeightContext.Provider, {
    value: height
  }, /* @__PURE__ */ React.createElement(ChartWidthContext.Provider, {
    value: width
  }, children2)))))));
};
var useClipPathId = function useClipPathId2() {
  return reactExports.useContext(ClipPathIdContext);
};
var useXAxisOrThrow = function useXAxisOrThrow2(xAxisId) {
  var xAxisMap = reactExports.useContext(XAxisContext);
  !(xAxisMap != null) ? invariant$1(false) : void 0;
  var xAxis = xAxisMap[xAxisId];
  !(xAxis != null) ? invariant$1(false) : void 0;
  return xAxis;
};
var useArbitraryXAxis = function useArbitraryXAxis2() {
  var xAxisMap = reactExports.useContext(XAxisContext);
  return getAnyElementOfObject(xAxisMap);
};
var useYAxisWithFiniteDomainOrRandom = function useYAxisWithFiniteDomainOrRandom2() {
  var yAxisMap = reactExports.useContext(YAxisContext);
  var yAxisWithFiniteDomain = find$2(yAxisMap, function(axis) {
    return every$1(axis.domain, Number.isFinite);
  });
  return yAxisWithFiniteDomain || getAnyElementOfObject(yAxisMap);
};
var useYAxisOrThrow = function useYAxisOrThrow2(yAxisId) {
  var yAxisMap = reactExports.useContext(YAxisContext);
  !(yAxisMap != null) ? invariant$1(false) : void 0;
  var yAxis = yAxisMap[yAxisId];
  !(yAxis != null) ? invariant$1(false) : void 0;
  return yAxis;
};
var useViewBox = function useViewBox2() {
  var viewBox = reactExports.useContext(ViewBoxContext);
  return viewBox;
};
var useOffset = function useOffset2() {
  return reactExports.useContext(OffsetContext);
};
var useChartWidth = function useChartWidth2() {
  return reactExports.useContext(ChartWidthContext);
};
var useChartHeight = function useChartHeight2() {
  return reactExports.useContext(ChartHeightContext);
};
function _typeof$a(o2) {
  "@babel/helpers - typeof";
  return _typeof$a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$a(o2);
}
function ownKeys$9(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$8(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$9(Object(t2), true).forEach(function(r3) {
      _defineProperty$a(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$9(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$a(obj, key, value) {
  key = _toPropertyKey$9(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$9(t2) {
  var i2 = _toPrimitive$9(t2, "string");
  return "symbol" == _typeof$a(i2) ? i2 : String(i2);
}
function _toPrimitive$9(t2, r2) {
  if ("object" != _typeof$a(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$a(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function _slicedToArray$2(arr, i2) {
  return _arrayWithHoles$2(arr) || _iterableToArrayLimit$2(arr, i2) || _unsupportedIterableToArray$4(arr, i2) || _nonIterableRest$2();
}
function _nonIterableRest$2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$4(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$4(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$4(o2, minLen);
}
function _arrayLikeToArray$4(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function _iterableToArrayLimit$2(r2, l2) {
  var t2 = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
  if (null != t2) {
    var e3, n2, i2, u2, a2 = [], f2 = true, o2 = false;
    try {
      if (i2 = (t2 = t2.call(r2)).next, 0 === l2) {
        if (Object(t2) !== t2)
          return;
        f2 = false;
      } else
        for (; !(f2 = (e3 = i2.call(t2)).done) && (a2.push(e3.value), a2.length !== l2); f2 = true)
          ;
    } catch (r3) {
      o2 = true, n2 = r3;
    } finally {
      try {
        if (!f2 && null != t2["return"] && (u2 = t2["return"](), Object(u2) !== u2))
          return;
      } finally {
        if (o2)
          throw n2;
      }
    }
    return a2;
  }
}
function _arrayWithHoles$2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _extends$e() {
  _extends$e = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$e.apply(this, arguments);
}
var renderLine = function renderLine2(option, props) {
  var line;
  if (/* @__PURE__ */ React.isValidElement(option)) {
    line = /* @__PURE__ */ React.cloneElement(option, props);
  } else if (isFunction$4(option)) {
    line = option(props);
  } else {
    line = /* @__PURE__ */ React.createElement("line", _extends$e({}, props, {
      className: "recharts-reference-line-line"
    }));
  }
  return line;
};
var getEndPoints = function getEndPoints2(scales, isFixedX, isFixedY, isSegment, viewBox, position, xAxisOrientation, yAxisOrientation, props) {
  var x2 = viewBox.x, y2 = viewBox.y, width = viewBox.width, height = viewBox.height;
  if (isFixedY) {
    var yCoord = props.y;
    var coord = scales.y.apply(yCoord, {
      position
    });
    if (ifOverflowMatches(props, "discard") && !scales.y.isInRange(coord)) {
      return null;
    }
    var points = [{
      x: x2 + width,
      y: coord
    }, {
      x: x2,
      y: coord
    }];
    return yAxisOrientation === "left" ? points.reverse() : points;
  }
  if (isFixedX) {
    var xCoord = props.x;
    var _coord = scales.x.apply(xCoord, {
      position
    });
    if (ifOverflowMatches(props, "discard") && !scales.x.isInRange(_coord)) {
      return null;
    }
    var _points = [{
      x: _coord,
      y: y2 + height
    }, {
      x: _coord,
      y: y2
    }];
    return xAxisOrientation === "top" ? _points.reverse() : _points;
  }
  if (isSegment) {
    var segment = props.segment;
    var _points2 = segment.map(function(p2) {
      return scales.apply(p2, {
        position
      });
    });
    if (ifOverflowMatches(props, "discard") && some$1(_points2, function(p2) {
      return !scales.isInRange(p2);
    })) {
      return null;
    }
    return _points2;
  }
  return null;
};
function ReferenceLine(props) {
  var fixedX = props.x, fixedY = props.y, segment = props.segment, xAxisId = props.xAxisId, yAxisId = props.yAxisId, shape = props.shape, className = props.className, alwaysShow = props.alwaysShow;
  var clipPathId = useClipPathId();
  var xAxis = useXAxisOrThrow(xAxisId);
  var yAxis = useYAxisOrThrow(yAxisId);
  var viewBox = useViewBox();
  if (!clipPathId || !viewBox) {
    return null;
  }
  warn(alwaysShow === void 0, 'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.');
  var scales = createLabeledScales({
    x: xAxis.scale,
    y: yAxis.scale
  });
  var isX = isNumOrStr(fixedX);
  var isY = isNumOrStr(fixedY);
  var isSegment = segment && segment.length === 2;
  var endPoints = getEndPoints(scales, isX, isY, isSegment, viewBox, props.position, xAxis.orientation, yAxis.orientation, props);
  if (!endPoints) {
    return null;
  }
  var _endPoints = _slicedToArray$2(endPoints, 2), _endPoints$ = _endPoints[0], x12 = _endPoints$.x, y12 = _endPoints$.y, _endPoints$2 = _endPoints[1], x2 = _endPoints$2.x, y2 = _endPoints$2.y;
  var clipPath = ifOverflowMatches(props, "hidden") ? "url(#".concat(clipPathId, ")") : void 0;
  var lineProps = _objectSpread$8(_objectSpread$8({
    clipPath
  }, filterProps(props, true)), {}, {
    x1: x12,
    y1: y12,
    x2,
    y2
  });
  return /* @__PURE__ */ React.createElement(Layer, {
    className: clsx$1("recharts-reference-line", className)
  }, renderLine(shape, lineProps), Label$1.renderCallByParent(props, rectWithCoords({
    x1: x12,
    y1: y12,
    x2,
    y2
  })));
}
ReferenceLine.displayName = "ReferenceLine";
ReferenceLine.defaultProps = {
  isFront: false,
  ifOverflow: "discard",
  xAxisId: 0,
  yAxisId: 0,
  fill: "none",
  stroke: "#ccc",
  fillOpacity: 1,
  strokeWidth: 1,
  position: "middle"
};
function _typeof$9(o2) {
  "@babel/helpers - typeof";
  return _typeof$9 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$9(o2);
}
function _extends$d() {
  _extends$d = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$d.apply(this, arguments);
}
function ownKeys$8(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$7(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$8(Object(t2), true).forEach(function(r3) {
      _defineProperty$9(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$8(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$9(obj, key, value) {
  key = _toPropertyKey$8(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$8(t2) {
  var i2 = _toPrimitive$8(t2, "string");
  return "symbol" == _typeof$9(i2) ? i2 : String(i2);
}
function _toPrimitive$8(t2, r2) {
  if ("object" != _typeof$9(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$9(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var getCoordinate = function getCoordinate2(props) {
  var x2 = props.x, y2 = props.y, xAxis = props.xAxis, yAxis = props.yAxis;
  var scales = createLabeledScales({
    x: xAxis.scale,
    y: yAxis.scale
  });
  var result = scales.apply({
    x: x2,
    y: y2
  }, {
    bandAware: true
  });
  if (ifOverflowMatches(props, "discard") && !scales.isInRange(result)) {
    return null;
  }
  return result;
};
function ReferenceDot(props) {
  var x2 = props.x, y2 = props.y, r2 = props.r, alwaysShow = props.alwaysShow, clipPathId = props.clipPathId;
  var isX = isNumOrStr(x2);
  var isY = isNumOrStr(y2);
  warn(alwaysShow === void 0, 'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.');
  if (!isX || !isY) {
    return null;
  }
  var coordinate = getCoordinate(props);
  if (!coordinate) {
    return null;
  }
  var cx2 = coordinate.x, cy = coordinate.y;
  var shape = props.shape, className = props.className;
  var clipPath = ifOverflowMatches(props, "hidden") ? "url(#".concat(clipPathId, ")") : void 0;
  var dotProps = _objectSpread$7(_objectSpread$7({
    clipPath
  }, filterProps(props, true)), {}, {
    cx: cx2,
    cy
  });
  return /* @__PURE__ */ React.createElement(Layer, {
    className: clsx$1("recharts-reference-dot", className)
  }, ReferenceDot.renderDot(shape, dotProps), Label$1.renderCallByParent(props, {
    x: cx2 - r2,
    y: cy - r2,
    width: 2 * r2,
    height: 2 * r2
  }));
}
ReferenceDot.displayName = "ReferenceDot";
ReferenceDot.defaultProps = {
  isFront: false,
  ifOverflow: "discard",
  xAxisId: 0,
  yAxisId: 0,
  r: 10,
  fill: "#fff",
  stroke: "#ccc",
  fillOpacity: 1,
  strokeWidth: 1
};
ReferenceDot.renderDot = function(option, props) {
  var dot;
  if (/* @__PURE__ */ React.isValidElement(option)) {
    dot = /* @__PURE__ */ React.cloneElement(option, props);
  } else if (isFunction$4(option)) {
    dot = option(props);
  } else {
    dot = /* @__PURE__ */ React.createElement(Dot, _extends$d({}, props, {
      cx: props.cx,
      cy: props.cy,
      className: "recharts-reference-dot-dot"
    }));
  }
  return dot;
};
function _typeof$8(o2) {
  "@babel/helpers - typeof";
  return _typeof$8 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$8(o2);
}
function _extends$c() {
  _extends$c = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$c.apply(this, arguments);
}
function ownKeys$7(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$6(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$7(Object(t2), true).forEach(function(r3) {
      _defineProperty$8(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$7(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$8(obj, key, value) {
  key = _toPropertyKey$7(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$7(t2) {
  var i2 = _toPrimitive$7(t2, "string");
  return "symbol" == _typeof$8(i2) ? i2 : String(i2);
}
function _toPrimitive$7(t2, r2) {
  if ("object" != _typeof$8(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$8(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var getRect = function getRect2(hasX1, hasX2, hasY1, hasY2, props) {
  var xValue1 = props.x1, xValue2 = props.x2, yValue1 = props.y1, yValue2 = props.y2, xAxis = props.xAxis, yAxis = props.yAxis;
  if (!xAxis || !yAxis)
    return null;
  var scales = createLabeledScales({
    x: xAxis.scale,
    y: yAxis.scale
  });
  var p1 = {
    x: hasX1 ? scales.x.apply(xValue1, {
      position: "start"
    }) : scales.x.rangeMin,
    y: hasY1 ? scales.y.apply(yValue1, {
      position: "start"
    }) : scales.y.rangeMin
  };
  var p2 = {
    x: hasX2 ? scales.x.apply(xValue2, {
      position: "end"
    }) : scales.x.rangeMax,
    y: hasY2 ? scales.y.apply(yValue2, {
      position: "end"
    }) : scales.y.rangeMax
  };
  if (ifOverflowMatches(props, "discard") && (!scales.isInRange(p1) || !scales.isInRange(p2))) {
    return null;
  }
  return rectWithPoints(p1, p2);
};
function ReferenceArea(props) {
  var x12 = props.x1, x2 = props.x2, y12 = props.y1, y2 = props.y2, className = props.className, alwaysShow = props.alwaysShow, clipPathId = props.clipPathId;
  warn(alwaysShow === void 0, 'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.');
  var hasX1 = isNumOrStr(x12);
  var hasX2 = isNumOrStr(x2);
  var hasY1 = isNumOrStr(y12);
  var hasY2 = isNumOrStr(y2);
  var shape = props.shape;
  if (!hasX1 && !hasX2 && !hasY1 && !hasY2 && !shape) {
    return null;
  }
  var rect = getRect(hasX1, hasX2, hasY1, hasY2, props);
  if (!rect && !shape) {
    return null;
  }
  var clipPath = ifOverflowMatches(props, "hidden") ? "url(#".concat(clipPathId, ")") : void 0;
  return /* @__PURE__ */ React.createElement(Layer, {
    className: clsx$1("recharts-reference-area", className)
  }, ReferenceArea.renderRect(shape, _objectSpread$6(_objectSpread$6({
    clipPath
  }, filterProps(props, true)), rect)), Label$1.renderCallByParent(props, rect));
}
ReferenceArea.displayName = "ReferenceArea";
ReferenceArea.defaultProps = {
  isFront: false,
  ifOverflow: "discard",
  xAxisId: 0,
  yAxisId: 0,
  r: 10,
  fill: "#ccc",
  fillOpacity: 0.5,
  stroke: "none",
  strokeWidth: 1
};
ReferenceArea.renderRect = function(option, props) {
  var rect;
  if (/* @__PURE__ */ React.isValidElement(option)) {
    rect = /* @__PURE__ */ React.cloneElement(option, props);
  } else if (isFunction$4(option)) {
    rect = option(props);
  } else {
    rect = /* @__PURE__ */ React.createElement(Rectangle, _extends$c({}, props, {
      className: "recharts-reference-area-rect"
    }));
  }
  return rect;
};
function getEveryNthWithCondition(array2, n2, isValid2) {
  if (n2 < 1) {
    return [];
  }
  if (n2 === 1 && isValid2 === void 0) {
    return array2;
  }
  var result = [];
  for (var i2 = 0; i2 < array2.length; i2 += n2) {
    if (isValid2 === void 0 || isValid2(array2[i2]) === true) {
      result.push(array2[i2]);
    } else {
      return void 0;
    }
  }
  return result;
}
function getAngledTickWidth(contentSize, unitSize, angle2) {
  var size2 = {
    width: contentSize.width + unitSize.width,
    height: contentSize.height + unitSize.height
  };
  return getAngledRectangleWidth(size2, angle2);
}
function getTickBoundaries(viewBox, sign2, sizeKey) {
  var isWidth = sizeKey === "width";
  var x2 = viewBox.x, y2 = viewBox.y, width = viewBox.width, height = viewBox.height;
  if (sign2 === 1) {
    return {
      start: isWidth ? x2 : y2,
      end: isWidth ? x2 + width : y2 + height
    };
  }
  return {
    start: isWidth ? x2 + width : y2 + height,
    end: isWidth ? x2 : y2
  };
}
function isVisible(sign2, tickPosition, getSize, start2, end) {
  if (sign2 * tickPosition < sign2 * start2 || sign2 * tickPosition > sign2 * end) {
    return false;
  }
  var size2 = getSize();
  return sign2 * (tickPosition - sign2 * size2 / 2 - start2) >= 0 && sign2 * (tickPosition + sign2 * size2 / 2 - end) <= 0;
}
function getNumberIntervalTicks(ticks2, interval2) {
  return getEveryNthWithCondition(ticks2, interval2 + 1);
}
function getEquidistantTicks(sign2, boundaries, getTickSize, ticks2, minTickGap) {
  var result = (ticks2 || []).slice();
  var initialStart = boundaries.start, end = boundaries.end;
  var index2 = 0;
  var stepsize = 1;
  var start2 = initialStart;
  var _loop = function _loop2() {
    var entry = ticks2 === null || ticks2 === void 0 ? void 0 : ticks2[index2];
    if (entry === void 0) {
      return {
        v: getEveryNthWithCondition(ticks2, stepsize)
      };
    }
    var i2 = index2;
    var size2;
    var getSize = function getSize2() {
      if (size2 === void 0) {
        size2 = getTickSize(entry, i2);
      }
      return size2;
    };
    var tickCoord = entry.coordinate;
    var isShow = index2 === 0 || isVisible(sign2, tickCoord, getSize, start2, end);
    if (!isShow) {
      index2 = 0;
      start2 = initialStart;
      stepsize += 1;
    }
    if (isShow) {
      start2 = tickCoord + sign2 * (getSize() / 2 + minTickGap);
      index2 += stepsize;
    }
  }, _ret;
  while (stepsize <= result.length) {
    _ret = _loop();
    if (_ret)
      return _ret.v;
  }
  return [];
}
function _typeof$7(o2) {
  "@babel/helpers - typeof";
  return _typeof$7 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$7(o2);
}
function ownKeys$6(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$5(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$6(Object(t2), true).forEach(function(r3) {
      _defineProperty$7(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$6(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$7(obj, key, value) {
  key = _toPropertyKey$6(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$6(t2) {
  var i2 = _toPrimitive$6(t2, "string");
  return "symbol" == _typeof$7(i2) ? i2 : String(i2);
}
function _toPrimitive$6(t2, r2) {
  if ("object" != _typeof$7(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$7(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function getTicksEnd(sign2, boundaries, getTickSize, ticks2, minTickGap) {
  var result = (ticks2 || []).slice();
  var len = result.length;
  var start2 = boundaries.start;
  var end = boundaries.end;
  var _loop = function _loop2(i3) {
    var entry = result[i3];
    var size2;
    var getSize = function getSize2() {
      if (size2 === void 0) {
        size2 = getTickSize(entry, i3);
      }
      return size2;
    };
    if (i3 === len - 1) {
      var gap = sign2 * (entry.coordinate + sign2 * getSize() / 2 - end);
      result[i3] = entry = _objectSpread$5(_objectSpread$5({}, entry), {}, {
        tickCoord: gap > 0 ? entry.coordinate - gap * sign2 : entry.coordinate
      });
    } else {
      result[i3] = entry = _objectSpread$5(_objectSpread$5({}, entry), {}, {
        tickCoord: entry.coordinate
      });
    }
    var isShow = isVisible(sign2, entry.tickCoord, getSize, start2, end);
    if (isShow) {
      end = entry.tickCoord - sign2 * (getSize() / 2 + minTickGap);
      result[i3] = _objectSpread$5(_objectSpread$5({}, entry), {}, {
        isShow: true
      });
    }
  };
  for (var i2 = len - 1; i2 >= 0; i2--) {
    _loop(i2);
  }
  return result;
}
function getTicksStart(sign2, boundaries, getTickSize, ticks2, minTickGap, preserveEnd) {
  var result = (ticks2 || []).slice();
  var len = result.length;
  var start2 = boundaries.start, end = boundaries.end;
  if (preserveEnd) {
    var tail = ticks2[len - 1];
    var tailSize = getTickSize(tail, len - 1);
    var tailGap = sign2 * (tail.coordinate + sign2 * tailSize / 2 - end);
    result[len - 1] = tail = _objectSpread$5(_objectSpread$5({}, tail), {}, {
      tickCoord: tailGap > 0 ? tail.coordinate - tailGap * sign2 : tail.coordinate
    });
    var isTailShow = isVisible(sign2, tail.tickCoord, function() {
      return tailSize;
    }, start2, end);
    if (isTailShow) {
      end = tail.tickCoord - sign2 * (tailSize / 2 + minTickGap);
      result[len - 1] = _objectSpread$5(_objectSpread$5({}, tail), {}, {
        isShow: true
      });
    }
  }
  var count2 = preserveEnd ? len - 1 : len;
  var _loop2 = function _loop22(i3) {
    var entry = result[i3];
    var size2;
    var getSize = function getSize2() {
      if (size2 === void 0) {
        size2 = getTickSize(entry, i3);
      }
      return size2;
    };
    if (i3 === 0) {
      var gap = sign2 * (entry.coordinate - sign2 * getSize() / 2 - start2);
      result[i3] = entry = _objectSpread$5(_objectSpread$5({}, entry), {}, {
        tickCoord: gap < 0 ? entry.coordinate - gap * sign2 : entry.coordinate
      });
    } else {
      result[i3] = entry = _objectSpread$5(_objectSpread$5({}, entry), {}, {
        tickCoord: entry.coordinate
      });
    }
    var isShow = isVisible(sign2, entry.tickCoord, getSize, start2, end);
    if (isShow) {
      start2 = entry.tickCoord + sign2 * (getSize() / 2 + minTickGap);
      result[i3] = _objectSpread$5(_objectSpread$5({}, entry), {}, {
        isShow: true
      });
    }
  };
  for (var i2 = 0; i2 < count2; i2++) {
    _loop2(i2);
  }
  return result;
}
function getTicks(props, fontSize, letterSpacing) {
  var tick = props.tick, ticks2 = props.ticks, viewBox = props.viewBox, minTickGap = props.minTickGap, orientation = props.orientation, interval2 = props.interval, tickFormatter = props.tickFormatter, unit2 = props.unit, angle2 = props.angle;
  if (!ticks2 || !ticks2.length || !tick) {
    return [];
  }
  if (isNumber(interval2) || Global.isSsr) {
    return getNumberIntervalTicks(ticks2, typeof interval2 === "number" && isNumber(interval2) ? interval2 : 0);
  }
  var candidates = [];
  var sizeKey = orientation === "top" || orientation === "bottom" ? "width" : "height";
  var unitSize = unit2 && sizeKey === "width" ? getStringSize(unit2, {
    fontSize,
    letterSpacing
  }) : {
    width: 0,
    height: 0
  };
  var getTickSize = function getTickSize2(content, index2) {
    var value = isFunction$4(tickFormatter) ? tickFormatter(content.value, index2) : content.value;
    return sizeKey === "width" ? getAngledTickWidth(getStringSize(value, {
      fontSize,
      letterSpacing
    }), unitSize, angle2) : getStringSize(value, {
      fontSize,
      letterSpacing
    })[sizeKey];
  };
  var sign2 = ticks2.length >= 2 ? mathSign(ticks2[1].coordinate - ticks2[0].coordinate) : 1;
  var boundaries = getTickBoundaries(viewBox, sign2, sizeKey);
  if (interval2 === "equidistantPreserveStart") {
    return getEquidistantTicks(sign2, boundaries, getTickSize, ticks2, minTickGap);
  }
  if (interval2 === "preserveStart" || interval2 === "preserveStartEnd") {
    candidates = getTicksStart(sign2, boundaries, getTickSize, ticks2, minTickGap, interval2 === "preserveStartEnd");
  } else {
    candidates = getTicksEnd(sign2, boundaries, getTickSize, ticks2, minTickGap);
  }
  return candidates.filter(function(entry) {
    return entry.isShow;
  });
}
var _excluded$f = ["viewBox"], _excluded2$2 = ["viewBox"], _excluded3 = ["ticks"];
function _typeof$6(o2) {
  "@babel/helpers - typeof";
  return _typeof$6 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$6(o2);
}
function _extends$b() {
  _extends$b = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$b.apply(this, arguments);
}
function ownKeys$5(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$4(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$5(Object(t2), true).forEach(function(r3) {
      _defineProperty$6(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$5(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _objectWithoutProperties$6(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$5(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$5(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _classCallCheck$3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$3(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey$5(descriptor.key), descriptor);
  }
}
function _createClass$3(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$3(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$3(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _callSuper$2(t2, o2, e3) {
  return o2 = _getPrototypeOf$2(o2), _possibleConstructorReturn$2(t2, _isNativeReflectConstruct$2() ? Reflect.construct(o2, e3 || [], _getPrototypeOf$2(t2).constructor) : o2.apply(t2, e3));
}
function _possibleConstructorReturn$2(self2, call) {
  if (call && (_typeof$6(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized$2(self2);
}
function _assertThisInitialized$2(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$2() {
  try {
    var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t3) {
  }
  return (_isNativeReflectConstruct$2 = function _isNativeReflectConstruct2() {
    return !!t2;
  })();
}
function _getPrototypeOf$2(o2) {
  _getPrototypeOf$2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o3) {
    return o3.__proto__ || Object.getPrototypeOf(o3);
  };
  return _getPrototypeOf$2(o2);
}
function _inherits$2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf$2(subClass, superClass);
}
function _setPrototypeOf$2(o2, p2) {
  _setPrototypeOf$2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o3, p3) {
    o3.__proto__ = p3;
    return o3;
  };
  return _setPrototypeOf$2(o2, p2);
}
function _defineProperty$6(obj, key, value) {
  key = _toPropertyKey$5(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$5(t2) {
  var i2 = _toPrimitive$5(t2, "string");
  return "symbol" == _typeof$6(i2) ? i2 : String(i2);
}
function _toPrimitive$5(t2, r2) {
  if ("object" != _typeof$6(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$6(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var CartesianAxis = /* @__PURE__ */ function(_Component) {
  _inherits$2(CartesianAxis2, _Component);
  function CartesianAxis2(props) {
    var _this;
    _classCallCheck$3(this, CartesianAxis2);
    _this = _callSuper$2(this, CartesianAxis2, [props]);
    _this.state = {
      fontSize: "",
      letterSpacing: ""
    };
    return _this;
  }
  _createClass$3(CartesianAxis2, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(_ref, nextState) {
      var viewBox = _ref.viewBox, restProps = _objectWithoutProperties$6(_ref, _excluded$f);
      var _this$props = this.props, viewBoxOld = _this$props.viewBox, restPropsOld = _objectWithoutProperties$6(_this$props, _excluded2$2);
      return !shallowEqual(viewBox, viewBoxOld) || !shallowEqual(restProps, restPropsOld) || !shallowEqual(nextState, this.state);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var htmlLayer = this.layerReference;
      if (!htmlLayer)
        return;
      var tick = htmlLayer.getElementsByClassName("recharts-cartesian-axis-tick-value")[0];
      if (tick) {
        this.setState({
          fontSize: window.getComputedStyle(tick).fontSize,
          letterSpacing: window.getComputedStyle(tick).letterSpacing
        });
      }
    }
    /**
     * Calculate the coordinates of endpoints in ticks
     * @param  {Object} data The data of a simple tick
     * @return {Object} (x1, y1): The coordinate of endpoint close to tick text
     *  (x2, y2): The coordinate of endpoint close to axis
     */
  }, {
    key: "getTickLineCoord",
    value: function getTickLineCoord(data2) {
      var _this$props2 = this.props, x2 = _this$props2.x, y2 = _this$props2.y, width = _this$props2.width, height = _this$props2.height, orientation = _this$props2.orientation, tickSize = _this$props2.tickSize, mirror = _this$props2.mirror, tickMargin = _this$props2.tickMargin;
      var x12, x22, y12, y22, tx, ty;
      var sign2 = mirror ? -1 : 1;
      var finalTickSize = data2.tickSize || tickSize;
      var tickCoord = isNumber(data2.tickCoord) ? data2.tickCoord : data2.coordinate;
      switch (orientation) {
        case "top":
          x12 = x22 = data2.coordinate;
          y22 = y2 + +!mirror * height;
          y12 = y22 - sign2 * finalTickSize;
          ty = y12 - sign2 * tickMargin;
          tx = tickCoord;
          break;
        case "left":
          y12 = y22 = data2.coordinate;
          x22 = x2 + +!mirror * width;
          x12 = x22 - sign2 * finalTickSize;
          tx = x12 - sign2 * tickMargin;
          ty = tickCoord;
          break;
        case "right":
          y12 = y22 = data2.coordinate;
          x22 = x2 + +mirror * width;
          x12 = x22 + sign2 * finalTickSize;
          tx = x12 + sign2 * tickMargin;
          ty = tickCoord;
          break;
        default:
          x12 = x22 = data2.coordinate;
          y22 = y2 + +mirror * height;
          y12 = y22 + sign2 * finalTickSize;
          ty = y12 + sign2 * tickMargin;
          tx = tickCoord;
          break;
      }
      return {
        line: {
          x1: x12,
          y1: y12,
          x2: x22,
          y2: y22
        },
        tick: {
          x: tx,
          y: ty
        }
      };
    }
  }, {
    key: "getTickTextAnchor",
    value: function getTickTextAnchor() {
      var _this$props3 = this.props, orientation = _this$props3.orientation, mirror = _this$props3.mirror;
      var textAnchor;
      switch (orientation) {
        case "left":
          textAnchor = mirror ? "start" : "end";
          break;
        case "right":
          textAnchor = mirror ? "end" : "start";
          break;
        default:
          textAnchor = "middle";
          break;
      }
      return textAnchor;
    }
  }, {
    key: "getTickVerticalAnchor",
    value: function getTickVerticalAnchor() {
      var _this$props4 = this.props, orientation = _this$props4.orientation, mirror = _this$props4.mirror;
      var verticalAnchor = "end";
      switch (orientation) {
        case "left":
        case "right":
          verticalAnchor = "middle";
          break;
        case "top":
          verticalAnchor = mirror ? "start" : "end";
          break;
        default:
          verticalAnchor = mirror ? "end" : "start";
          break;
      }
      return verticalAnchor;
    }
  }, {
    key: "renderAxisLine",
    value: function renderAxisLine() {
      var _this$props5 = this.props, x2 = _this$props5.x, y2 = _this$props5.y, width = _this$props5.width, height = _this$props5.height, orientation = _this$props5.orientation, mirror = _this$props5.mirror, axisLine = _this$props5.axisLine;
      var props = _objectSpread$4(_objectSpread$4(_objectSpread$4({}, filterProps(this.props, false)), filterProps(axisLine, false)), {}, {
        fill: "none"
      });
      if (orientation === "top" || orientation === "bottom") {
        var needHeight = +(orientation === "top" && !mirror || orientation === "bottom" && mirror);
        props = _objectSpread$4(_objectSpread$4({}, props), {}, {
          x1: x2,
          y1: y2 + needHeight * height,
          x2: x2 + width,
          y2: y2 + needHeight * height
        });
      } else {
        var needWidth = +(orientation === "left" && !mirror || orientation === "right" && mirror);
        props = _objectSpread$4(_objectSpread$4({}, props), {}, {
          x1: x2 + needWidth * width,
          y1: y2,
          x2: x2 + needWidth * width,
          y2: y2 + height
        });
      }
      return /* @__PURE__ */ React.createElement("line", _extends$b({}, props, {
        className: clsx$1("recharts-cartesian-axis-line", get$5(axisLine, "className"))
      }));
    }
  }, {
    key: "renderTicks",
    value: (
      /**
       * render the ticks
       * @param {Array} ticks The ticks to actually render (overrides what was passed in props)
       * @param {string} fontSize Fontsize to consider for tick spacing
       * @param {string} letterSpacing Letterspacing to consider for tick spacing
       * @return {ReactComponent} renderedTicks
       */
      function renderTicks(ticks2, fontSize, letterSpacing) {
        var _this2 = this;
        var _this$props6 = this.props, tickLine = _this$props6.tickLine, stroke = _this$props6.stroke, tick = _this$props6.tick, tickFormatter = _this$props6.tickFormatter, unit2 = _this$props6.unit;
        var finalTicks = getTicks(_objectSpread$4(_objectSpread$4({}, this.props), {}, {
          ticks: ticks2
        }), fontSize, letterSpacing);
        var textAnchor = this.getTickTextAnchor();
        var verticalAnchor = this.getTickVerticalAnchor();
        var axisProps = filterProps(this.props, false);
        var customTickProps = filterProps(tick, false);
        var tickLineProps = _objectSpread$4(_objectSpread$4({}, axisProps), {}, {
          fill: "none"
        }, filterProps(tickLine, false));
        var items2 = finalTicks.map(function(entry, i2) {
          var _this2$getTickLineCoo = _this2.getTickLineCoord(entry), lineCoord = _this2$getTickLineCoo.line, tickCoord = _this2$getTickLineCoo.tick;
          var tickProps = _objectSpread$4(_objectSpread$4(_objectSpread$4(_objectSpread$4({
            textAnchor,
            verticalAnchor
          }, axisProps), {}, {
            stroke: "none",
            fill: stroke
          }, customTickProps), tickCoord), {}, {
            index: i2,
            payload: entry,
            visibleTicksCount: finalTicks.length,
            tickFormatter
          });
          return /* @__PURE__ */ React.createElement(Layer, _extends$b({
            className: "recharts-cartesian-axis-tick",
            key: "tick-".concat(entry.value, "-").concat(entry.coordinate, "-").concat(entry.tickCoord)
          }, adaptEventsOfChild(_this2.props, entry, i2)), tickLine && /* @__PURE__ */ React.createElement("line", _extends$b({}, tickLineProps, lineCoord, {
            className: clsx$1("recharts-cartesian-axis-tick-line", get$5(tickLine, "className"))
          })), tick && CartesianAxis2.renderTickItem(tick, tickProps, "".concat(isFunction$4(tickFormatter) ? tickFormatter(entry.value, i2) : entry.value).concat(unit2 || "")));
        });
        return /* @__PURE__ */ React.createElement("g", {
          className: "recharts-cartesian-axis-ticks"
        }, items2);
      }
    )
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;
      var _this$props7 = this.props, axisLine = _this$props7.axisLine, width = _this$props7.width, height = _this$props7.height, ticksGenerator = _this$props7.ticksGenerator, className = _this$props7.className, hide2 = _this$props7.hide;
      if (hide2) {
        return null;
      }
      var _this$props8 = this.props, ticks2 = _this$props8.ticks, noTicksProps = _objectWithoutProperties$6(_this$props8, _excluded3);
      var finalTicks = ticks2;
      if (isFunction$4(ticksGenerator)) {
        finalTicks = ticks2 && ticks2.length > 0 ? ticksGenerator(this.props) : ticksGenerator(noTicksProps);
      }
      if (width <= 0 || height <= 0 || !finalTicks || !finalTicks.length) {
        return null;
      }
      return /* @__PURE__ */ React.createElement(Layer, {
        className: clsx$1("recharts-cartesian-axis", className),
        ref: function ref(_ref2) {
          _this3.layerReference = _ref2;
        }
      }, axisLine && this.renderAxisLine(), this.renderTicks(finalTicks, this.state.fontSize, this.state.letterSpacing), Label$1.renderCallByParent(this.props));
    }
  }], [{
    key: "renderTickItem",
    value: function renderTickItem(option, props, value) {
      var tickItem;
      if (/* @__PURE__ */ React.isValidElement(option)) {
        tickItem = /* @__PURE__ */ React.cloneElement(option, props);
      } else if (isFunction$4(option)) {
        tickItem = option(props);
      } else {
        tickItem = /* @__PURE__ */ React.createElement(Text, _extends$b({}, props, {
          className: "recharts-cartesian-axis-tick-value"
        }), value);
      }
      return tickItem;
    }
  }]);
  return CartesianAxis2;
}(reactExports.Component);
_defineProperty$6(CartesianAxis, "displayName", "CartesianAxis");
_defineProperty$6(CartesianAxis, "defaultProps", {
  x: 0,
  y: 0,
  width: 0,
  height: 0,
  viewBox: {
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  // The orientation of axis
  orientation: "bottom",
  // The ticks
  ticks: [],
  stroke: "#666",
  tickLine: true,
  axisLine: true,
  tick: true,
  mirror: false,
  minTickGap: 5,
  // The width or height of tick
  tickSize: 6,
  tickMargin: 2,
  interval: "preserveEnd"
});
var _excluded$e = ["x1", "y1", "x2", "y2", "key"], _excluded2$1 = ["offset"];
function _typeof$5(o2) {
  "@babel/helpers - typeof";
  return _typeof$5 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$5(o2);
}
function ownKeys$4(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$3(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$4(Object(t2), true).forEach(function(r3) {
      _defineProperty$5(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$4(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$5(obj, key, value) {
  key = _toPropertyKey$4(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$4(t2) {
  var i2 = _toPrimitive$4(t2, "string");
  return "symbol" == _typeof$5(i2) ? i2 : String(i2);
}
function _toPrimitive$4(t2, r2) {
  if ("object" != _typeof$5(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$5(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function _extends$a() {
  _extends$a = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$a.apply(this, arguments);
}
function _objectWithoutProperties$5(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$4(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$4(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Background = function Background2(props) {
  var fill = props.fill;
  if (!fill || fill === "none") {
    return null;
  }
  var fillOpacity = props.fillOpacity, x2 = props.x, y2 = props.y, width = props.width, height = props.height;
  return /* @__PURE__ */ React.createElement("rect", {
    x: x2,
    y: y2,
    width,
    height,
    stroke: "none",
    fill,
    fillOpacity,
    className: "recharts-cartesian-grid-bg"
  });
};
function renderLineItem(option, props) {
  var lineItem;
  if (/* @__PURE__ */ React.isValidElement(option)) {
    lineItem = /* @__PURE__ */ React.cloneElement(option, props);
  } else if (isFunction$4(option)) {
    lineItem = option(props);
  } else {
    var x12 = props.x1, y12 = props.y1, x2 = props.x2, y2 = props.y2, key = props.key, others = _objectWithoutProperties$5(props, _excluded$e);
    var _filterProps = filterProps(others, false);
    _filterProps.offset;
    var restOfFilteredProps = _objectWithoutProperties$5(_filterProps, _excluded2$1);
    lineItem = /* @__PURE__ */ React.createElement("line", _extends$a({}, restOfFilteredProps, {
      x1: x12,
      y1: y12,
      x2,
      y2,
      fill: "none",
      key
    }));
  }
  return lineItem;
}
function HorizontalGridLines(props) {
  var x2 = props.x, width = props.width, _props$horizontal = props.horizontal, horizontal = _props$horizontal === void 0 ? true : _props$horizontal, horizontalPoints = props.horizontalPoints;
  if (!horizontal || !horizontalPoints || !horizontalPoints.length) {
    return null;
  }
  var items2 = horizontalPoints.map(function(entry, i2) {
    var lineItemProps = _objectSpread$3(_objectSpread$3({}, props), {}, {
      x1: x2,
      y1: entry,
      x2: x2 + width,
      y2: entry,
      key: "line-".concat(i2),
      index: i2
    });
    return renderLineItem(horizontal, lineItemProps);
  });
  return /* @__PURE__ */ React.createElement("g", {
    className: "recharts-cartesian-grid-horizontal"
  }, items2);
}
function VerticalGridLines(props) {
  var y2 = props.y, height = props.height, _props$vertical = props.vertical, vertical = _props$vertical === void 0 ? true : _props$vertical, verticalPoints = props.verticalPoints;
  if (!vertical || !verticalPoints || !verticalPoints.length) {
    return null;
  }
  var items2 = verticalPoints.map(function(entry, i2) {
    var lineItemProps = _objectSpread$3(_objectSpread$3({}, props), {}, {
      x1: entry,
      y1: y2,
      x2: entry,
      y2: y2 + height,
      key: "line-".concat(i2),
      index: i2
    });
    return renderLineItem(vertical, lineItemProps);
  });
  return /* @__PURE__ */ React.createElement("g", {
    className: "recharts-cartesian-grid-vertical"
  }, items2);
}
function HorizontalStripes(props) {
  var horizontalFill = props.horizontalFill, fillOpacity = props.fillOpacity, x2 = props.x, y2 = props.y, width = props.width, height = props.height, horizontalPoints = props.horizontalPoints, _props$horizontal2 = props.horizontal, horizontal = _props$horizontal2 === void 0 ? true : _props$horizontal2;
  if (!horizontal || !horizontalFill || !horizontalFill.length) {
    return null;
  }
  var roundedSortedHorizontalPoints = horizontalPoints.map(function(e3) {
    return Math.round(e3 + y2 - y2);
  }).sort(function(a2, b2) {
    return a2 - b2;
  });
  if (y2 !== roundedSortedHorizontalPoints[0]) {
    roundedSortedHorizontalPoints.unshift(0);
  }
  var items2 = roundedSortedHorizontalPoints.map(function(entry, i2) {
    var lastStripe = !roundedSortedHorizontalPoints[i2 + 1];
    var lineHeight = lastStripe ? y2 + height - entry : roundedSortedHorizontalPoints[i2 + 1] - entry;
    if (lineHeight <= 0) {
      return null;
    }
    var colorIndex = i2 % horizontalFill.length;
    return /* @__PURE__ */ React.createElement("rect", {
      key: "react-".concat(i2),
      y: entry,
      x: x2,
      height: lineHeight,
      width,
      stroke: "none",
      fill: horizontalFill[colorIndex],
      fillOpacity,
      className: "recharts-cartesian-grid-bg"
    });
  });
  return /* @__PURE__ */ React.createElement("g", {
    className: "recharts-cartesian-gridstripes-horizontal"
  }, items2);
}
function VerticalStripes(props) {
  var _props$vertical2 = props.vertical, vertical = _props$vertical2 === void 0 ? true : _props$vertical2, verticalFill = props.verticalFill, fillOpacity = props.fillOpacity, x2 = props.x, y2 = props.y, width = props.width, height = props.height, verticalPoints = props.verticalPoints;
  if (!vertical || !verticalFill || !verticalFill.length) {
    return null;
  }
  var roundedSortedVerticalPoints = verticalPoints.map(function(e3) {
    return Math.round(e3 + x2 - x2);
  }).sort(function(a2, b2) {
    return a2 - b2;
  });
  if (x2 !== roundedSortedVerticalPoints[0]) {
    roundedSortedVerticalPoints.unshift(0);
  }
  var items2 = roundedSortedVerticalPoints.map(function(entry, i2) {
    var lastStripe = !roundedSortedVerticalPoints[i2 + 1];
    var lineWidth = lastStripe ? x2 + width - entry : roundedSortedVerticalPoints[i2 + 1] - entry;
    if (lineWidth <= 0) {
      return null;
    }
    var colorIndex = i2 % verticalFill.length;
    return /* @__PURE__ */ React.createElement("rect", {
      key: "react-".concat(i2),
      x: entry,
      y: y2,
      width: lineWidth,
      height,
      stroke: "none",
      fill: verticalFill[colorIndex],
      fillOpacity,
      className: "recharts-cartesian-grid-bg"
    });
  });
  return /* @__PURE__ */ React.createElement("g", {
    className: "recharts-cartesian-gridstripes-vertical"
  }, items2);
}
var defaultVerticalCoordinatesGenerator = function defaultVerticalCoordinatesGenerator2(_ref, syncWithTicks) {
  var xAxis = _ref.xAxis, width = _ref.width, height = _ref.height, offset2 = _ref.offset;
  return getCoordinatesOfGrid(getTicks(_objectSpread$3(_objectSpread$3(_objectSpread$3({}, CartesianAxis.defaultProps), xAxis), {}, {
    ticks: getTicksOfAxis(xAxis, true),
    viewBox: {
      x: 0,
      y: 0,
      width,
      height
    }
  })), offset2.left, offset2.left + offset2.width, syncWithTicks);
};
var defaultHorizontalCoordinatesGenerator = function defaultHorizontalCoordinatesGenerator2(_ref2, syncWithTicks) {
  var yAxis = _ref2.yAxis, width = _ref2.width, height = _ref2.height, offset2 = _ref2.offset;
  return getCoordinatesOfGrid(getTicks(_objectSpread$3(_objectSpread$3(_objectSpread$3({}, CartesianAxis.defaultProps), yAxis), {}, {
    ticks: getTicksOfAxis(yAxis, true),
    viewBox: {
      x: 0,
      y: 0,
      width,
      height
    }
  })), offset2.top, offset2.top + offset2.height, syncWithTicks);
};
var defaultProps$2 = {
  horizontal: true,
  vertical: true,
  // The ordinates of horizontal grid lines
  horizontalPoints: [],
  // The abscissas of vertical grid lines
  verticalPoints: [],
  stroke: "#ccc",
  fill: "none",
  // The fill of colors of grid lines
  verticalFill: [],
  horizontalFill: []
};
function CartesianGrid(props) {
  var _props$stroke, _props$fill, _props$horizontal3, _props$horizontalFill, _props$vertical3, _props$verticalFill;
  var chartWidth = useChartWidth();
  var chartHeight = useChartHeight();
  var offset2 = useOffset();
  var propsIncludingDefaults = _objectSpread$3(_objectSpread$3({}, props), {}, {
    stroke: (_props$stroke = props.stroke) !== null && _props$stroke !== void 0 ? _props$stroke : defaultProps$2.stroke,
    fill: (_props$fill = props.fill) !== null && _props$fill !== void 0 ? _props$fill : defaultProps$2.fill,
    horizontal: (_props$horizontal3 = props.horizontal) !== null && _props$horizontal3 !== void 0 ? _props$horizontal3 : defaultProps$2.horizontal,
    horizontalFill: (_props$horizontalFill = props.horizontalFill) !== null && _props$horizontalFill !== void 0 ? _props$horizontalFill : defaultProps$2.horizontalFill,
    vertical: (_props$vertical3 = props.vertical) !== null && _props$vertical3 !== void 0 ? _props$vertical3 : defaultProps$2.vertical,
    verticalFill: (_props$verticalFill = props.verticalFill) !== null && _props$verticalFill !== void 0 ? _props$verticalFill : defaultProps$2.verticalFill,
    x: isNumber(props.x) ? props.x : offset2.left,
    y: isNumber(props.y) ? props.y : offset2.top,
    width: isNumber(props.width) ? props.width : offset2.width,
    height: isNumber(props.height) ? props.height : offset2.height
  });
  var x2 = propsIncludingDefaults.x, y2 = propsIncludingDefaults.y, width = propsIncludingDefaults.width, height = propsIncludingDefaults.height, syncWithTicks = propsIncludingDefaults.syncWithTicks, horizontalValues = propsIncludingDefaults.horizontalValues, verticalValues = propsIncludingDefaults.verticalValues;
  var xAxis = useArbitraryXAxis();
  var yAxis = useYAxisWithFiniteDomainOrRandom();
  if (!isNumber(width) || width <= 0 || !isNumber(height) || height <= 0 || !isNumber(x2) || x2 !== +x2 || !isNumber(y2) || y2 !== +y2) {
    return null;
  }
  var verticalCoordinatesGenerator = propsIncludingDefaults.verticalCoordinatesGenerator || defaultVerticalCoordinatesGenerator;
  var horizontalCoordinatesGenerator = propsIncludingDefaults.horizontalCoordinatesGenerator || defaultHorizontalCoordinatesGenerator;
  var horizontalPoints = propsIncludingDefaults.horizontalPoints, verticalPoints = propsIncludingDefaults.verticalPoints;
  if ((!horizontalPoints || !horizontalPoints.length) && isFunction$4(horizontalCoordinatesGenerator)) {
    var isHorizontalValues = horizontalValues && horizontalValues.length;
    var generatorResult = horizontalCoordinatesGenerator({
      yAxis: yAxis ? _objectSpread$3(_objectSpread$3({}, yAxis), {}, {
        ticks: isHorizontalValues ? horizontalValues : yAxis.ticks
      }) : void 0,
      width: chartWidth,
      height: chartHeight,
      offset: offset2
    }, isHorizontalValues ? true : syncWithTicks);
    warn(Array.isArray(generatorResult), "horizontalCoordinatesGenerator should return Array but instead it returned [".concat(_typeof$5(generatorResult), "]"));
    if (Array.isArray(generatorResult)) {
      horizontalPoints = generatorResult;
    }
  }
  if ((!verticalPoints || !verticalPoints.length) && isFunction$4(verticalCoordinatesGenerator)) {
    var isVerticalValues = verticalValues && verticalValues.length;
    var _generatorResult = verticalCoordinatesGenerator({
      xAxis: xAxis ? _objectSpread$3(_objectSpread$3({}, xAxis), {}, {
        ticks: isVerticalValues ? verticalValues : xAxis.ticks
      }) : void 0,
      width: chartWidth,
      height: chartHeight,
      offset: offset2
    }, isVerticalValues ? true : syncWithTicks);
    warn(Array.isArray(_generatorResult), "verticalCoordinatesGenerator should return Array but instead it returned [".concat(_typeof$5(_generatorResult), "]"));
    if (Array.isArray(_generatorResult)) {
      verticalPoints = _generatorResult;
    }
  }
  return /* @__PURE__ */ React.createElement("g", {
    className: "recharts-cartesian-grid"
  }, /* @__PURE__ */ React.createElement(Background, {
    fill: propsIncludingDefaults.fill,
    fillOpacity: propsIncludingDefaults.fillOpacity,
    x: propsIncludingDefaults.x,
    y: propsIncludingDefaults.y,
    width: propsIncludingDefaults.width,
    height: propsIncludingDefaults.height
  }), /* @__PURE__ */ React.createElement(HorizontalGridLines, _extends$a({}, propsIncludingDefaults, {
    offset: offset2,
    horizontalPoints,
    xAxis,
    yAxis
  })), /* @__PURE__ */ React.createElement(VerticalGridLines, _extends$a({}, propsIncludingDefaults, {
    offset: offset2,
    verticalPoints,
    xAxis,
    yAxis
  })), /* @__PURE__ */ React.createElement(HorizontalStripes, _extends$a({}, propsIncludingDefaults, {
    horizontalPoints
  })), /* @__PURE__ */ React.createElement(VerticalStripes, _extends$a({}, propsIncludingDefaults, {
    verticalPoints
  })));
}
CartesianGrid.displayName = "CartesianGrid";
var _excluded$d = ["type", "layout", "connectNulls", "ref"];
function _typeof$4(o2) {
  "@babel/helpers - typeof";
  return _typeof$4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$4(o2);
}
function _objectWithoutProperties$4(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$3(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends$9() {
  _extends$9 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$9.apply(this, arguments);
}
function ownKeys$3(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$2(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$3(Object(t2), true).forEach(function(r3) {
      _defineProperty$4(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$3(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _toConsumableArray$2(arr) {
  return _arrayWithoutHoles$2(arr) || _iterableToArray$2(arr) || _unsupportedIterableToArray$3(arr) || _nonIterableSpread$2();
}
function _nonIterableSpread$2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$3(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$3(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$3(o2, minLen);
}
function _iterableToArray$2(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles$2(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$3(arr);
}
function _arrayLikeToArray$3(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function _classCallCheck$2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$2(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey$3(descriptor.key), descriptor);
  }
}
function _createClass$2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$2(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _callSuper$1(t2, o2, e3) {
  return o2 = _getPrototypeOf$1(o2), _possibleConstructorReturn$1(t2, _isNativeReflectConstruct$1() ? Reflect.construct(o2, e3 || [], _getPrototypeOf$1(t2).constructor) : o2.apply(t2, e3));
}
function _possibleConstructorReturn$1(self2, call) {
  if (call && (_typeof$4(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized$1(self2);
}
function _isNativeReflectConstruct$1() {
  try {
    var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t3) {
  }
  return (_isNativeReflectConstruct$1 = function _isNativeReflectConstruct2() {
    return !!t2;
  })();
}
function _getPrototypeOf$1(o2) {
  _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o3) {
    return o3.__proto__ || Object.getPrototypeOf(o3);
  };
  return _getPrototypeOf$1(o2);
}
function _assertThisInitialized$1(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inherits$1(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf$1(subClass, superClass);
}
function _setPrototypeOf$1(o2, p2) {
  _setPrototypeOf$1 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o3, p3) {
    o3.__proto__ = p3;
    return o3;
  };
  return _setPrototypeOf$1(o2, p2);
}
function _defineProperty$4(obj, key, value) {
  key = _toPropertyKey$3(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$3(t2) {
  var i2 = _toPrimitive$3(t2, "string");
  return "symbol" == _typeof$4(i2) ? i2 : String(i2);
}
function _toPrimitive$3(t2, r2) {
  if ("object" != _typeof$4(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$4(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var Line$1 = /* @__PURE__ */ function(_PureComponent) {
  _inherits$1(Line2, _PureComponent);
  function Line2() {
    var _this;
    _classCallCheck$2(this, Line2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper$1(this, Line2, [].concat(args));
    _defineProperty$4(_assertThisInitialized$1(_this), "state", {
      isAnimationFinished: true,
      totalLength: 0
    });
    _defineProperty$4(_assertThisInitialized$1(_this), "generateSimpleStrokeDasharray", function(totalLength, length2) {
      return "".concat(length2, "px ").concat(totalLength - length2, "px");
    });
    _defineProperty$4(_assertThisInitialized$1(_this), "getStrokeDasharray", function(length2, totalLength, lines) {
      var lineLength = lines.reduce(function(pre, next) {
        return pre + next;
      });
      if (!lineLength) {
        return _this.generateSimpleStrokeDasharray(totalLength, length2);
      }
      var count2 = Math.floor(length2 / lineLength);
      var remainLength = length2 % lineLength;
      var restLength = totalLength - length2;
      var remainLines = [];
      for (var i2 = 0, sum2 = 0; i2 < lines.length; sum2 += lines[i2], ++i2) {
        if (sum2 + lines[i2] > remainLength) {
          remainLines = [].concat(_toConsumableArray$2(lines.slice(0, i2)), [remainLength - sum2]);
          break;
        }
      }
      var emptyLines = remainLines.length % 2 === 0 ? [0, restLength] : [restLength];
      return [].concat(_toConsumableArray$2(Line2.repeat(lines, count2)), _toConsumableArray$2(remainLines), emptyLines).map(function(line) {
        return "".concat(line, "px");
      }).join(", ");
    });
    _defineProperty$4(_assertThisInitialized$1(_this), "id", uniqueId("recharts-line-"));
    _defineProperty$4(_assertThisInitialized$1(_this), "pathRef", function(node) {
      _this.mainCurve = node;
    });
    _defineProperty$4(_assertThisInitialized$1(_this), "handleAnimationEnd", function() {
      _this.setState({
        isAnimationFinished: true
      });
      if (_this.props.onAnimationEnd) {
        _this.props.onAnimationEnd();
      }
    });
    _defineProperty$4(_assertThisInitialized$1(_this), "handleAnimationStart", function() {
      _this.setState({
        isAnimationFinished: false
      });
      if (_this.props.onAnimationStart) {
        _this.props.onAnimationStart();
      }
    });
    return _this;
  }
  _createClass$2(Line2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.props.isAnimationActive) {
        return;
      }
      var totalLength = this.getTotalLength();
      this.setState({
        totalLength
      });
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (!this.props.isAnimationActive) {
        return;
      }
      var totalLength = this.getTotalLength();
      if (totalLength !== this.state.totalLength) {
        this.setState({
          totalLength
        });
      }
    }
  }, {
    key: "getTotalLength",
    value: function getTotalLength() {
      var curveDom = this.mainCurve;
      try {
        return curveDom && curveDom.getTotalLength && curveDom.getTotalLength() || 0;
      } catch (err) {
        return 0;
      }
    }
  }, {
    key: "renderErrorBar",
    value: function renderErrorBar(needClip, clipPathId) {
      if (this.props.isAnimationActive && !this.state.isAnimationFinished) {
        return null;
      }
      var _this$props = this.props, points = _this$props.points, xAxis = _this$props.xAxis, yAxis = _this$props.yAxis, layout = _this$props.layout, children2 = _this$props.children;
      var errorBarItems = findAllByType(children2, ErrorBar);
      if (!errorBarItems) {
        return null;
      }
      var dataPointFormatter = function dataPointFormatter2(dataPoint, dataKey) {
        return {
          x: dataPoint.x,
          y: dataPoint.y,
          value: dataPoint.value,
          errorVal: getValueByDataKey(dataPoint.payload, dataKey)
        };
      };
      var errorBarProps = {
        clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null
      };
      return /* @__PURE__ */ React.createElement(Layer, errorBarProps, errorBarItems.map(function(item) {
        return /* @__PURE__ */ React.cloneElement(item, {
          key: "bar-".concat(item.props.dataKey),
          data: points,
          xAxis,
          yAxis,
          layout,
          dataPointFormatter
        });
      }));
    }
  }, {
    key: "renderDots",
    value: function renderDots(needClip, clipDot, clipPathId) {
      var isAnimationActive = this.props.isAnimationActive;
      if (isAnimationActive && !this.state.isAnimationFinished) {
        return null;
      }
      var _this$props2 = this.props, dot = _this$props2.dot, points = _this$props2.points, dataKey = _this$props2.dataKey;
      var lineProps = filterProps(this.props, false);
      var customDotProps = filterProps(dot, true);
      var dots = points.map(function(entry, i2) {
        var dotProps = _objectSpread$2(_objectSpread$2(_objectSpread$2({
          key: "dot-".concat(i2),
          r: 3
        }, lineProps), customDotProps), {}, {
          value: entry.value,
          dataKey,
          cx: entry.x,
          cy: entry.y,
          index: i2,
          payload: entry.payload
        });
        return Line2.renderDotItem(dot, dotProps);
      });
      var dotsProps = {
        clipPath: needClip ? "url(#clipPath-".concat(clipDot ? "" : "dots-").concat(clipPathId, ")") : null
      };
      return /* @__PURE__ */ React.createElement(Layer, _extends$9({
        className: "recharts-line-dots",
        key: "dots"
      }, dotsProps), dots);
    }
  }, {
    key: "renderCurveStatically",
    value: function renderCurveStatically(points, needClip, clipPathId, props) {
      var _this$props3 = this.props, type2 = _this$props3.type, layout = _this$props3.layout, connectNulls = _this$props3.connectNulls;
      _this$props3.ref;
      var others = _objectWithoutProperties$4(_this$props3, _excluded$d);
      var curveProps = _objectSpread$2(_objectSpread$2(_objectSpread$2({}, filterProps(others, true)), {}, {
        fill: "none",
        className: "recharts-line-curve",
        clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null,
        points
      }, props), {}, {
        type: type2,
        layout,
        connectNulls
      });
      return /* @__PURE__ */ React.createElement(Curve, _extends$9({}, curveProps, {
        pathRef: this.pathRef
      }));
    }
  }, {
    key: "renderCurveWithAnimation",
    value: function renderCurveWithAnimation(needClip, clipPathId) {
      var _this2 = this;
      var _this$props4 = this.props, points = _this$props4.points, strokeDasharray = _this$props4.strokeDasharray, isAnimationActive = _this$props4.isAnimationActive, animationBegin = _this$props4.animationBegin, animationDuration = _this$props4.animationDuration, animationEasing = _this$props4.animationEasing, animationId = _this$props4.animationId, animateNewValues = _this$props4.animateNewValues, width = _this$props4.width, height = _this$props4.height;
      var _this$state = this.state, prevPoints = _this$state.prevPoints, totalLength = _this$state.totalLength;
      return /* @__PURE__ */ React.createElement(Animate, {
        begin: animationBegin,
        duration: animationDuration,
        isActive: isAnimationActive,
        easing: animationEasing,
        from: {
          t: 0
        },
        to: {
          t: 1
        },
        key: "line-".concat(animationId),
        onAnimationEnd: this.handleAnimationEnd,
        onAnimationStart: this.handleAnimationStart
      }, function(_ref) {
        var t2 = _ref.t;
        if (prevPoints) {
          var prevPointsDiffFactor = prevPoints.length / points.length;
          var stepData = points.map(function(entry, index2) {
            var prevPointIndex = Math.floor(index2 * prevPointsDiffFactor);
            if (prevPoints[prevPointIndex]) {
              var prev = prevPoints[prevPointIndex];
              var interpolatorX = interpolateNumber$3(prev.x, entry.x);
              var interpolatorY = interpolateNumber$3(prev.y, entry.y);
              return _objectSpread$2(_objectSpread$2({}, entry), {}, {
                x: interpolatorX(t2),
                y: interpolatorY(t2)
              });
            }
            if (animateNewValues) {
              var _interpolatorX = interpolateNumber$3(width * 2, entry.x);
              var _interpolatorY = interpolateNumber$3(height / 2, entry.y);
              return _objectSpread$2(_objectSpread$2({}, entry), {}, {
                x: _interpolatorX(t2),
                y: _interpolatorY(t2)
              });
            }
            return _objectSpread$2(_objectSpread$2({}, entry), {}, {
              x: entry.x,
              y: entry.y
            });
          });
          return _this2.renderCurveStatically(stepData, needClip, clipPathId);
        }
        var interpolator = interpolateNumber$3(0, totalLength);
        var curLength = interpolator(t2);
        var currentStrokeDasharray;
        if (strokeDasharray) {
          var lines = "".concat(strokeDasharray).split(/[,\s]+/gim).map(function(num) {
            return parseFloat(num);
          });
          currentStrokeDasharray = _this2.getStrokeDasharray(curLength, totalLength, lines);
        } else {
          currentStrokeDasharray = _this2.generateSimpleStrokeDasharray(totalLength, curLength);
        }
        return _this2.renderCurveStatically(points, needClip, clipPathId, {
          strokeDasharray: currentStrokeDasharray
        });
      });
    }
  }, {
    key: "renderCurve",
    value: function renderCurve(needClip, clipPathId) {
      var _this$props5 = this.props, points = _this$props5.points, isAnimationActive = _this$props5.isAnimationActive;
      var _this$state2 = this.state, prevPoints = _this$state2.prevPoints, totalLength = _this$state2.totalLength;
      if (isAnimationActive && points && points.length && (!prevPoints && totalLength > 0 || !isEqual$1(prevPoints, points))) {
        return this.renderCurveWithAnimation(needClip, clipPathId);
      }
      return this.renderCurveStatically(points, needClip, clipPathId);
    }
  }, {
    key: "render",
    value: function render() {
      var _filterProps;
      var _this$props6 = this.props, hide2 = _this$props6.hide, dot = _this$props6.dot, points = _this$props6.points, className = _this$props6.className, xAxis = _this$props6.xAxis, yAxis = _this$props6.yAxis, top = _this$props6.top, left = _this$props6.left, width = _this$props6.width, height = _this$props6.height, isAnimationActive = _this$props6.isAnimationActive, id2 = _this$props6.id;
      if (hide2 || !points || !points.length) {
        return null;
      }
      var isAnimationFinished = this.state.isAnimationFinished;
      var hasSinglePoint = points.length === 1;
      var layerClass = clsx$1("recharts-line", className);
      var needClipX = xAxis && xAxis.allowDataOverflow;
      var needClipY = yAxis && yAxis.allowDataOverflow;
      var needClip = needClipX || needClipY;
      var clipPathId = isNil$1(id2) ? this.id : id2;
      var _ref2 = (_filterProps = filterProps(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {
        r: 3,
        strokeWidth: 2
      }, _ref2$r = _ref2.r, r2 = _ref2$r === void 0 ? 3 : _ref2$r, _ref2$strokeWidth = _ref2.strokeWidth, strokeWidth = _ref2$strokeWidth === void 0 ? 2 : _ref2$strokeWidth;
      var _ref3 = isDotProps(dot) ? dot : {}, _ref3$clipDot = _ref3.clipDot, clipDot = _ref3$clipDot === void 0 ? true : _ref3$clipDot;
      var dotSize = r2 * 2 + strokeWidth;
      return /* @__PURE__ */ React.createElement(Layer, {
        className: layerClass
      }, needClipX || needClipY ? /* @__PURE__ */ React.createElement("defs", null, /* @__PURE__ */ React.createElement("clipPath", {
        id: "clipPath-".concat(clipPathId)
      }, /* @__PURE__ */ React.createElement("rect", {
        x: needClipX ? left : left - width / 2,
        y: needClipY ? top : top - height / 2,
        width: needClipX ? width : width * 2,
        height: needClipY ? height : height * 2
      })), !clipDot && /* @__PURE__ */ React.createElement("clipPath", {
        id: "clipPath-dots-".concat(clipPathId)
      }, /* @__PURE__ */ React.createElement("rect", {
        x: left - dotSize / 2,
        y: top - dotSize / 2,
        width: width + dotSize,
        height: height + dotSize
      }))) : null, !hasSinglePoint && this.renderCurve(needClip, clipPathId), this.renderErrorBar(needClip, clipPathId), (hasSinglePoint || dot) && this.renderDots(needClip, clipDot, clipPathId), (!isAnimationActive || isAnimationFinished) && LabelList.renderCallByParent(this.props, points));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      if (nextProps.animationId !== prevState.prevAnimationId) {
        return {
          prevAnimationId: nextProps.animationId,
          curPoints: nextProps.points,
          prevPoints: prevState.curPoints
        };
      }
      if (nextProps.points !== prevState.curPoints) {
        return {
          curPoints: nextProps.points
        };
      }
      return null;
    }
  }, {
    key: "repeat",
    value: function repeat(lines, count2) {
      var linesUnit = lines.length % 2 !== 0 ? [].concat(_toConsumableArray$2(lines), [0]) : lines;
      var result = [];
      for (var i2 = 0; i2 < count2; ++i2) {
        result = [].concat(_toConsumableArray$2(result), _toConsumableArray$2(linesUnit));
      }
      return result;
    }
  }, {
    key: "renderDotItem",
    value: function renderDotItem(option, props) {
      var dotItem;
      if (/* @__PURE__ */ React.isValidElement(option)) {
        dotItem = /* @__PURE__ */ React.cloneElement(option, props);
      } else if (isFunction$4(option)) {
        dotItem = option(props);
      } else {
        var className = clsx$1("recharts-line-dot", typeof option !== "boolean" ? option.className : "");
        dotItem = /* @__PURE__ */ React.createElement(Dot, _extends$9({}, props, {
          className
        }));
      }
      return dotItem;
    }
  }]);
  return Line2;
}(reactExports.PureComponent);
_defineProperty$4(Line$1, "displayName", "Line");
_defineProperty$4(Line$1, "defaultProps", {
  xAxisId: 0,
  yAxisId: 0,
  connectNulls: false,
  activeDot: true,
  dot: true,
  legendType: "line",
  stroke: "#3182bd",
  strokeWidth: 1,
  fill: "#fff",
  points: [],
  isAnimationActive: !Global.isSsr,
  animateNewValues: true,
  animationBegin: 0,
  animationDuration: 1500,
  animationEasing: "ease",
  hide: false,
  label: false
});
_defineProperty$4(Line$1, "getComposedData", function(_ref4) {
  var props = _ref4.props, xAxis = _ref4.xAxis, yAxis = _ref4.yAxis, xAxisTicks = _ref4.xAxisTicks, yAxisTicks = _ref4.yAxisTicks, dataKey = _ref4.dataKey, bandSize = _ref4.bandSize, displayedData = _ref4.displayedData, offset2 = _ref4.offset;
  var layout = props.layout;
  var points = displayedData.map(function(entry, index2) {
    var value = getValueByDataKey(entry, dataKey);
    if (layout === "horizontal") {
      return {
        x: getCateCoordinateOfLine({
          axis: xAxis,
          ticks: xAxisTicks,
          bandSize,
          entry,
          index: index2
        }),
        y: isNil$1(value) ? null : yAxis.scale(value),
        value,
        payload: entry
      };
    }
    return {
      x: isNil$1(value) ? null : xAxis.scale(value),
      y: getCateCoordinateOfLine({
        axis: yAxis,
        ticks: yAxisTicks,
        bandSize,
        entry,
        index: index2
      }),
      value,
      payload: entry
    };
  });
  return _objectSpread$2({
    points,
    layout
  }, offset2);
});
function _extends$8() {
  _extends$8 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$8.apply(this, arguments);
}
var XAxis = function XAxis2(_ref) {
  var xAxisId = _ref.xAxisId;
  var width = useChartWidth();
  var height = useChartHeight();
  var axisOptions = useXAxisOrThrow(xAxisId);
  if (axisOptions == null) {
    return null;
  }
  return (
    // @ts-expect-error the axisOptions type is not exactly what CartesianAxis is expecting.
    /* @__PURE__ */ React.createElement(CartesianAxis, _extends$8({}, axisOptions, {
      className: clsx$1("recharts-".concat(axisOptions.axisType, " ").concat(axisOptions.axisType), axisOptions.className),
      viewBox: {
        x: 0,
        y: 0,
        width,
        height
      },
      ticksGenerator: function ticksGenerator(axis) {
        return getTicksOfAxis(axis, true);
      }
    }))
  );
};
XAxis.displayName = "XAxis";
XAxis.defaultProps = {
  allowDecimals: true,
  hide: false,
  orientation: "bottom",
  width: 0,
  height: 30,
  mirror: false,
  xAxisId: 0,
  tickCount: 5,
  type: "category",
  padding: {
    left: 0,
    right: 0
  },
  allowDataOverflow: false,
  scale: "auto",
  reversed: false,
  allowDuplicatedCategory: true
};
function _extends$7() {
  _extends$7 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$7.apply(this, arguments);
}
var YAxis = function YAxis2(_ref) {
  var yAxisId = _ref.yAxisId;
  var width = useChartWidth();
  var height = useChartHeight();
  var axisOptions = useYAxisOrThrow(yAxisId);
  if (axisOptions == null) {
    return null;
  }
  return (
    // @ts-expect-error the axisOptions type is not exactly what CartesianAxis is expecting.
    /* @__PURE__ */ React.createElement(CartesianAxis, _extends$7({}, axisOptions, {
      className: clsx$1("recharts-".concat(axisOptions.axisType, " ").concat(axisOptions.axisType), axisOptions.className),
      viewBox: {
        x: 0,
        y: 0,
        width,
        height
      },
      ticksGenerator: function ticksGenerator(axis) {
        return getTicksOfAxis(axis, true);
      }
    }))
  );
};
YAxis.displayName = "YAxis";
YAxis.defaultProps = {
  allowDuplicatedCategory: true,
  allowDecimals: true,
  hide: false,
  orientation: "left",
  width: 60,
  height: 0,
  mirror: false,
  yAxisId: 0,
  tickCount: 5,
  type: "number",
  padding: {
    top: 0,
    bottom: 0
  },
  allowDataOverflow: false,
  scale: "auto",
  reversed: false
};
function _toConsumableArray$1(arr) {
  return _arrayWithoutHoles$1(arr) || _iterableToArray$1(arr) || _unsupportedIterableToArray$2(arr) || _nonIterableSpread$1();
}
function _nonIterableSpread$1() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$2(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$2(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$2(o2, minLen);
}
function _iterableToArray$1(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles$1(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$2(arr);
}
function _arrayLikeToArray$2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
var detectReferenceElementsDomain = function detectReferenceElementsDomain2(children2, domain, axisId, axisType, specifiedTicks) {
  var lines = findAllByType(children2, ReferenceLine);
  var dots = findAllByType(children2, ReferenceDot);
  var elements = [].concat(_toConsumableArray$1(lines), _toConsumableArray$1(dots));
  var areas = findAllByType(children2, ReferenceArea);
  var idKey = "".concat(axisType, "Id");
  var valueKey = axisType[0];
  var finalDomain = domain;
  if (elements.length) {
    finalDomain = elements.reduce(function(result, el2) {
      if (el2.props[idKey] === axisId && ifOverflowMatches(el2.props, "extendDomain") && isNumber(el2.props[valueKey])) {
        var value = el2.props[valueKey];
        return [Math.min(result[0], value), Math.max(result[1], value)];
      }
      return result;
    }, finalDomain);
  }
  if (areas.length) {
    var key1 = "".concat(valueKey, "1");
    var key2 = "".concat(valueKey, "2");
    finalDomain = areas.reduce(function(result, el2) {
      if (el2.props[idKey] === axisId && ifOverflowMatches(el2.props, "extendDomain") && isNumber(el2.props[key1]) && isNumber(el2.props[key2])) {
        var value1 = el2.props[key1];
        var value2 = el2.props[key2];
        return [Math.min(result[0], value1, value2), Math.max(result[1], value1, value2)];
      }
      return result;
    }, finalDomain);
  }
  if (specifiedTicks && specifiedTicks.length) {
    finalDomain = specifiedTicks.reduce(function(result, tick) {
      if (isNumber(tick)) {
        return [Math.min(result[0], tick), Math.max(result[1], tick)];
      }
      return result;
    }, finalDomain);
  }
  return finalDomain;
};
var eventemitter3 = { exports: {} };
(function(module) {
  var has = Object.prototype.hasOwnProperty, prefix2 = "~";
  function Events() {
  }
  if (Object.create) {
    Events.prototype = /* @__PURE__ */ Object.create(null);
    if (!new Events().__proto__)
      prefix2 = false;
  }
  function EE(fn, context, once) {
    this.fn = fn;
    this.context = context;
    this.once = once || false;
  }
  function addListener(emitter, event, fn, context, once) {
    if (typeof fn !== "function") {
      throw new TypeError("The listener must be a function");
    }
    var listener = new EE(fn, context || emitter, once), evt = prefix2 ? prefix2 + event : event;
    if (!emitter._events[evt])
      emitter._events[evt] = listener, emitter._eventsCount++;
    else if (!emitter._events[evt].fn)
      emitter._events[evt].push(listener);
    else
      emitter._events[evt] = [emitter._events[evt], listener];
    return emitter;
  }
  function clearEvent(emitter, evt) {
    if (--emitter._eventsCount === 0)
      emitter._events = new Events();
    else
      delete emitter._events[evt];
  }
  function EventEmitter2() {
    this._events = new Events();
    this._eventsCount = 0;
  }
  EventEmitter2.prototype.eventNames = function eventNames() {
    var names = [], events, name;
    if (this._eventsCount === 0)
      return names;
    for (name in events = this._events) {
      if (has.call(events, name))
        names.push(prefix2 ? name.slice(1) : name);
    }
    if (Object.getOwnPropertySymbols) {
      return names.concat(Object.getOwnPropertySymbols(events));
    }
    return names;
  };
  EventEmitter2.prototype.listeners = function listeners2(event) {
    var evt = prefix2 ? prefix2 + event : event, handlers = this._events[evt];
    if (!handlers)
      return [];
    if (handlers.fn)
      return [handlers.fn];
    for (var i2 = 0, l2 = handlers.length, ee2 = new Array(l2); i2 < l2; i2++) {
      ee2[i2] = handlers[i2].fn;
    }
    return ee2;
  };
  EventEmitter2.prototype.listenerCount = function listenerCount(event) {
    var evt = prefix2 ? prefix2 + event : event, listeners2 = this._events[evt];
    if (!listeners2)
      return 0;
    if (listeners2.fn)
      return 1;
    return listeners2.length;
  };
  EventEmitter2.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
    var evt = prefix2 ? prefix2 + event : event;
    if (!this._events[evt])
      return false;
    var listeners2 = this._events[evt], len = arguments.length, args, i2;
    if (listeners2.fn) {
      if (listeners2.once)
        this.removeListener(event, listeners2.fn, void 0, true);
      switch (len) {
        case 1:
          return listeners2.fn.call(listeners2.context), true;
        case 2:
          return listeners2.fn.call(listeners2.context, a1), true;
        case 3:
          return listeners2.fn.call(listeners2.context, a1, a2), true;
        case 4:
          return listeners2.fn.call(listeners2.context, a1, a2, a3), true;
        case 5:
          return listeners2.fn.call(listeners2.context, a1, a2, a3, a4), true;
        case 6:
          return listeners2.fn.call(listeners2.context, a1, a2, a3, a4, a5), true;
      }
      for (i2 = 1, args = new Array(len - 1); i2 < len; i2++) {
        args[i2 - 1] = arguments[i2];
      }
      listeners2.fn.apply(listeners2.context, args);
    } else {
      var length2 = listeners2.length, j;
      for (i2 = 0; i2 < length2; i2++) {
        if (listeners2[i2].once)
          this.removeListener(event, listeners2[i2].fn, void 0, true);
        switch (len) {
          case 1:
            listeners2[i2].fn.call(listeners2[i2].context);
            break;
          case 2:
            listeners2[i2].fn.call(listeners2[i2].context, a1);
            break;
          case 3:
            listeners2[i2].fn.call(listeners2[i2].context, a1, a2);
            break;
          case 4:
            listeners2[i2].fn.call(listeners2[i2].context, a1, a2, a3);
            break;
          default:
            if (!args)
              for (j = 1, args = new Array(len - 1); j < len; j++) {
                args[j - 1] = arguments[j];
              }
            listeners2[i2].fn.apply(listeners2[i2].context, args);
        }
      }
    }
    return true;
  };
  EventEmitter2.prototype.on = function on(event, fn, context) {
    return addListener(this, event, fn, context, false);
  };
  EventEmitter2.prototype.once = function once(event, fn, context) {
    return addListener(this, event, fn, context, true);
  };
  EventEmitter2.prototype.removeListener = function removeListener(event, fn, context, once) {
    var evt = prefix2 ? prefix2 + event : event;
    if (!this._events[evt])
      return this;
    if (!fn) {
      clearEvent(this, evt);
      return this;
    }
    var listeners2 = this._events[evt];
    if (listeners2.fn) {
      if (listeners2.fn === fn && (!once || listeners2.once) && (!context || listeners2.context === context)) {
        clearEvent(this, evt);
      }
    } else {
      for (var i2 = 0, events = [], length2 = listeners2.length; i2 < length2; i2++) {
        if (listeners2[i2].fn !== fn || once && !listeners2[i2].once || context && listeners2[i2].context !== context) {
          events.push(listeners2[i2]);
        }
      }
      if (events.length)
        this._events[evt] = events.length === 1 ? events[0] : events;
      else
        clearEvent(this, evt);
    }
    return this;
  };
  EventEmitter2.prototype.removeAllListeners = function removeAllListeners(event) {
    var evt;
    if (event) {
      evt = prefix2 ? prefix2 + event : event;
      if (this._events[evt])
        clearEvent(this, evt);
    } else {
      this._events = new Events();
      this._eventsCount = 0;
    }
    return this;
  };
  EventEmitter2.prototype.off = EventEmitter2.prototype.removeListener;
  EventEmitter2.prototype.addListener = EventEmitter2.prototype.on;
  EventEmitter2.prefixed = prefix2;
  EventEmitter2.EventEmitter = EventEmitter2;
  {
    module.exports = EventEmitter2;
  }
})(eventemitter3);
var eventemitter3Exports = eventemitter3.exports;
const EventEmitter = /* @__PURE__ */ getDefaultExportFromCjs(eventemitter3Exports);
var eventCenter = new EventEmitter();
var SYNC_EVENT = "recharts.syncMouseEvents";
function _typeof$3(o2) {
  "@babel/helpers - typeof";
  return _typeof$3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$3(o2);
}
function _classCallCheck$1(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$1(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey$2(descriptor.key), descriptor);
  }
}
function _createClass$1(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$1(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$1(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty$3(obj, key, value) {
  key = _toPropertyKey$2(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$2(t2) {
  var i2 = _toPrimitive$2(t2, "string");
  return "symbol" == _typeof$3(i2) ? i2 : String(i2);
}
function _toPrimitive$2(t2, r2) {
  if ("object" != _typeof$3(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$3(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var AccessibilityManager = /* @__PURE__ */ function() {
  function AccessibilityManager2() {
    _classCallCheck$1(this, AccessibilityManager2);
    _defineProperty$3(this, "activeIndex", 0);
    _defineProperty$3(this, "coordinateList", []);
    _defineProperty$3(this, "layout", "horizontal");
  }
  _createClass$1(AccessibilityManager2, [{
    key: "setDetails",
    value: function setDetails(_ref) {
      var _ref2;
      var _ref$coordinateList = _ref.coordinateList, coordinateList = _ref$coordinateList === void 0 ? null : _ref$coordinateList, _ref$container = _ref.container, container2 = _ref$container === void 0 ? null : _ref$container, _ref$layout = _ref.layout, layout = _ref$layout === void 0 ? null : _ref$layout, _ref$offset = _ref.offset, offset2 = _ref$offset === void 0 ? null : _ref$offset, _ref$mouseHandlerCall = _ref.mouseHandlerCallback, mouseHandlerCallback = _ref$mouseHandlerCall === void 0 ? null : _ref$mouseHandlerCall;
      this.coordinateList = (_ref2 = coordinateList !== null && coordinateList !== void 0 ? coordinateList : this.coordinateList) !== null && _ref2 !== void 0 ? _ref2 : [];
      this.container = container2 !== null && container2 !== void 0 ? container2 : this.container;
      this.layout = layout !== null && layout !== void 0 ? layout : this.layout;
      this.offset = offset2 !== null && offset2 !== void 0 ? offset2 : this.offset;
      this.mouseHandlerCallback = mouseHandlerCallback !== null && mouseHandlerCallback !== void 0 ? mouseHandlerCallback : this.mouseHandlerCallback;
      this.activeIndex = Math.min(Math.max(this.activeIndex, 0), this.coordinateList.length - 1);
    }
  }, {
    key: "focus",
    value: function focus() {
      this.spoofMouse();
    }
  }, {
    key: "keyboardEvent",
    value: function keyboardEvent(e3) {
      if (this.coordinateList.length === 0) {
        return;
      }
      switch (e3.key) {
        case "ArrowRight": {
          if (this.layout !== "horizontal") {
            return;
          }
          this.activeIndex = Math.min(this.activeIndex + 1, this.coordinateList.length - 1);
          this.spoofMouse();
          break;
        }
        case "ArrowLeft": {
          if (this.layout !== "horizontal") {
            return;
          }
          this.activeIndex = Math.max(this.activeIndex - 1, 0);
          this.spoofMouse();
          break;
        }
      }
    }
  }, {
    key: "setIndex",
    value: function setIndex(newIndex) {
      this.activeIndex = newIndex;
    }
  }, {
    key: "spoofMouse",
    value: function spoofMouse() {
      var _window, _window2;
      if (this.layout !== "horizontal") {
        return;
      }
      if (this.coordinateList.length === 0) {
        return;
      }
      var _this$container$getBo = this.container.getBoundingClientRect(), x2 = _this$container$getBo.x, y2 = _this$container$getBo.y, height = _this$container$getBo.height;
      var coordinate = this.coordinateList[this.activeIndex].coordinate;
      var scrollOffsetX = ((_window = window) === null || _window === void 0 ? void 0 : _window.scrollX) || 0;
      var scrollOffsetY = ((_window2 = window) === null || _window2 === void 0 ? void 0 : _window2.scrollY) || 0;
      var pageX = x2 + coordinate + scrollOffsetX;
      var pageY = y2 + this.offset.top + height / 2 + scrollOffsetY;
      this.mouseHandlerCallback({
        pageX,
        pageY
      });
    }
  }]);
  return AccessibilityManager2;
}();
function isDomainSpecifiedByUser(domain, allowDataOverflow, axisType) {
  if (axisType === "number" && allowDataOverflow === true && Array.isArray(domain)) {
    var domainStart = domain === null || domain === void 0 ? void 0 : domain[0];
    var domainEnd = domain === null || domain === void 0 ? void 0 : domain[1];
    if (!!domainStart && !!domainEnd && isNumber(domainStart) && isNumber(domainEnd)) {
      return true;
    }
  }
  return false;
}
function getCursorRectangle(layout, activeCoordinate, offset2, tooltipAxisBandSize) {
  var halfSize = tooltipAxisBandSize / 2;
  return {
    stroke: "none",
    fill: "#ccc",
    x: layout === "horizontal" ? activeCoordinate.x - halfSize : offset2.left + 0.5,
    y: layout === "horizontal" ? offset2.top + 0.5 : activeCoordinate.y - halfSize,
    width: layout === "horizontal" ? tooltipAxisBandSize : offset2.width - 1,
    height: layout === "horizontal" ? offset2.height - 1 : tooltipAxisBandSize
  };
}
function getRadialCursorPoints(activeCoordinate) {
  var cx2 = activeCoordinate.cx, cy = activeCoordinate.cy, radius = activeCoordinate.radius, startAngle = activeCoordinate.startAngle, endAngle = activeCoordinate.endAngle;
  var startPoint = polarToCartesian(cx2, cy, radius, startAngle);
  var endPoint = polarToCartesian(cx2, cy, radius, endAngle);
  return {
    points: [startPoint, endPoint],
    cx: cx2,
    cy,
    radius,
    startAngle,
    endAngle
  };
}
function getCursorPoints(layout, activeCoordinate, offset2) {
  var x12, y12, x2, y2;
  if (layout === "horizontal") {
    x12 = activeCoordinate.x;
    x2 = x12;
    y12 = offset2.top;
    y2 = offset2.top + offset2.height;
  } else if (layout === "vertical") {
    y12 = activeCoordinate.y;
    y2 = y12;
    x12 = offset2.left;
    x2 = offset2.left + offset2.width;
  } else if (activeCoordinate.cx != null && activeCoordinate.cy != null) {
    if (layout === "centric") {
      var cx2 = activeCoordinate.cx, cy = activeCoordinate.cy, innerRadius = activeCoordinate.innerRadius, outerRadius = activeCoordinate.outerRadius, angle2 = activeCoordinate.angle;
      var innerPoint = polarToCartesian(cx2, cy, innerRadius, angle2);
      var outerPoint = polarToCartesian(cx2, cy, outerRadius, angle2);
      x12 = innerPoint.x;
      y12 = innerPoint.y;
      x2 = outerPoint.x;
      y2 = outerPoint.y;
    } else {
      return getRadialCursorPoints(activeCoordinate);
    }
  }
  return [{
    x: x12,
    y: y12
  }, {
    x: x2,
    y: y2
  }];
}
function _typeof$2(o2) {
  "@babel/helpers - typeof";
  return _typeof$2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$2(o2);
}
function ownKeys$2(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e3, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread$1(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$2(Object(t2), true).forEach(function(r3) {
      _defineProperty$2(e3, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$2(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e3, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e3;
}
function _defineProperty$2(obj, key, value) {
  key = _toPropertyKey$1(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey$1(t2) {
  var i2 = _toPrimitive$1(t2, "string");
  return "symbol" == _typeof$2(i2) ? i2 : String(i2);
}
function _toPrimitive$1(t2, r2) {
  if ("object" != _typeof$2(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$2(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function Cursor(props) {
  var element = props.element, tooltipEventType = props.tooltipEventType, isActive = props.isActive, activeCoordinate = props.activeCoordinate, activePayload = props.activePayload, offset2 = props.offset, activeTooltipIndex = props.activeTooltipIndex, tooltipAxisBandSize = props.tooltipAxisBandSize, layout = props.layout, chartName = props.chartName;
  if (!element || !element.props.cursor || !isActive || !activeCoordinate || chartName !== "ScatterChart" && tooltipEventType !== "axis") {
    return null;
  }
  var restProps;
  var cursorComp = Curve;
  if (chartName === "ScatterChart") {
    restProps = activeCoordinate;
    cursorComp = Cross;
  } else if (chartName === "BarChart") {
    restProps = getCursorRectangle(layout, activeCoordinate, offset2, tooltipAxisBandSize);
    cursorComp = Rectangle;
  } else if (layout === "radial") {
    var _getRadialCursorPoint = getRadialCursorPoints(activeCoordinate), cx2 = _getRadialCursorPoint.cx, cy = _getRadialCursorPoint.cy, radius = _getRadialCursorPoint.radius, startAngle = _getRadialCursorPoint.startAngle, endAngle = _getRadialCursorPoint.endAngle;
    restProps = {
      cx: cx2,
      cy,
      startAngle,
      endAngle,
      innerRadius: radius,
      outerRadius: radius
    };
    cursorComp = Sector;
  } else {
    restProps = {
      points: getCursorPoints(layout, activeCoordinate, offset2)
    };
    cursorComp = Curve;
  }
  var cursorProps = _objectSpread$1(_objectSpread$1(_objectSpread$1(_objectSpread$1({
    stroke: "#ccc",
    pointerEvents: "none"
  }, offset2), restProps), filterProps(element.props.cursor, false)), {}, {
    payload: activePayload,
    payloadIndex: activeTooltipIndex,
    className: clsx$1("recharts-tooltip-cursor", element.props.cursor.className)
  });
  return /* @__PURE__ */ reactExports.isValidElement(element.props.cursor) ? /* @__PURE__ */ reactExports.cloneElement(element.props.cursor, cursorProps) : /* @__PURE__ */ reactExports.createElement(cursorComp, cursorProps);
}
var _excluded$c = ["item"], _excluded2 = ["children", "className", "width", "height", "style", "compact", "title", "desc"];
function _typeof$1(o2) {
  "@babel/helpers - typeof";
  return _typeof$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o22) {
    return typeof o22;
  } : function(o22) {
    return o22 && "function" == typeof Symbol && o22.constructor === Symbol && o22 !== Symbol.prototype ? "symbol" : typeof o22;
  }, _typeof$1(o2);
}
function _extends$6() {
  _extends$6 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$6.apply(this, arguments);
}
function _slicedToArray$1(arr, i2) {
  return _arrayWithHoles$1(arr) || _iterableToArrayLimit$1(arr, i2) || _unsupportedIterableToArray$1(arr, i2) || _nonIterableRest$1();
}
function _nonIterableRest$1() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit$1(r2, l2) {
  var t2 = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
  if (null != t2) {
    var e3, n2, i2, u2, a2 = [], f2 = true, o2 = false;
    try {
      if (i2 = (t2 = t2.call(r2)).next, 0 === l2) {
        if (Object(t2) !== t2)
          return;
        f2 = false;
      } else
        for (; !(f2 = (e3 = i2.call(t2)).done) && (a2.push(e3.value), a2.length !== l2); f2 = true)
          ;
    } catch (r22) {
      o2 = true, n2 = r22;
    } finally {
      try {
        if (!f2 && null != t2["return"] && (u2 = t2["return"](), Object(u2) !== u2))
          return;
      } finally {
        if (o2)
          throw n2;
      }
    }
    return a2;
  }
}
function _arrayWithHoles$1(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _objectWithoutProperties$3(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$2(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _callSuper(t2, o2, e3) {
  return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t2, _isNativeReflectConstruct() ? Reflect.construct(o2, e3 || [], _getPrototypeOf(t2).constructor) : o2.apply(t2, e3));
}
function _possibleConstructorReturn(self2, call) {
  if (call && (_typeof$1(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self2);
}
function _isNativeReflectConstruct() {
  try {
    var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t22) {
  }
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
    return !!t2;
  })();
}
function _getPrototypeOf(o2) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o22) {
    return o22.__proto__ || Object.getPrototypeOf(o22);
  };
  return _getPrototypeOf(o2);
}
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o2, p2) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o22, p22) {
    o22.__proto__ = p22;
    return o22;
  };
  return _setPrototypeOf(o2, p2);
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray$1(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$1(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$1(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$1(o2, minLen);
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$1(arr);
}
function _arrayLikeToArray$1(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function ownKeys$1(e3, r2) {
  var t2 = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e3);
    r2 && (o2 = o2.filter(function(r22) {
      return Object.getOwnPropertyDescriptor(e3, r22).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread(e3) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$1(Object(t2), true).forEach(function(r22) {
      _defineProperty$1(e3, r22, t2[r22]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t2)) : ownKeys$1(Object(t2)).forEach(function(r22) {
      Object.defineProperty(e3, r22, Object.getOwnPropertyDescriptor(t2, r22));
    });
  }
  return e3;
}
function _defineProperty$1(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey(t2) {
  var i2 = _toPrimitive(t2, "string");
  return "symbol" == _typeof$1(i2) ? i2 : String(i2);
}
function _toPrimitive(t2, r2) {
  if ("object" != _typeof$1(t2) || !t2)
    return t2;
  var e3 = t2[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t2, r2 || "default");
    if ("object" != _typeof$1(i2))
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
var ORIENT_MAP = {
  xAxis: ["bottom", "top"],
  yAxis: ["left", "right"]
};
var FULL_WIDTH_AND_HEIGHT = {
  width: "100%",
  height: "100%"
};
var originCoordinate = {
  x: 0,
  y: 0
};
function renderAsIs(element) {
  return element;
}
var calculateTooltipPos = function calculateTooltipPos2(rangeObj, layout) {
  if (layout === "horizontal") {
    return rangeObj.x;
  }
  if (layout === "vertical") {
    return rangeObj.y;
  }
  if (layout === "centric") {
    return rangeObj.angle;
  }
  return rangeObj.radius;
};
var getActiveCoordinate = function getActiveCoordinate2(layout, tooltipTicks, activeIndex, rangeObj) {
  var entry = tooltipTicks.find(function(tick) {
    return tick && tick.index === activeIndex;
  });
  if (entry) {
    if (layout === "horizontal") {
      return {
        x: entry.coordinate,
        y: rangeObj.y
      };
    }
    if (layout === "vertical") {
      return {
        x: rangeObj.x,
        y: entry.coordinate
      };
    }
    if (layout === "centric") {
      var _angle = entry.coordinate;
      var _radius = rangeObj.radius;
      return _objectSpread(_objectSpread(_objectSpread({}, rangeObj), polarToCartesian(rangeObj.cx, rangeObj.cy, _radius, _angle)), {}, {
        angle: _angle,
        radius: _radius
      });
    }
    var radius = entry.coordinate;
    var angle2 = rangeObj.angle;
    return _objectSpread(_objectSpread(_objectSpread({}, rangeObj), polarToCartesian(rangeObj.cx, rangeObj.cy, radius, angle2)), {}, {
      angle: angle2,
      radius
    });
  }
  return originCoordinate;
};
var getDisplayedData = function getDisplayedData2(data2, _ref) {
  var graphicalItems = _ref.graphicalItems, dataStartIndex = _ref.dataStartIndex, dataEndIndex = _ref.dataEndIndex;
  var itemsData = (graphicalItems !== null && graphicalItems !== void 0 ? graphicalItems : []).reduce(function(result, child) {
    var itemData = child.props.data;
    if (itemData && itemData.length) {
      return [].concat(_toConsumableArray(result), _toConsumableArray(itemData));
    }
    return result;
  }, []);
  if (itemsData.length > 0) {
    return itemsData;
  }
  if (data2 && data2.length && isNumber(dataStartIndex) && isNumber(dataEndIndex)) {
    return data2.slice(dataStartIndex, dataEndIndex + 1);
  }
  return [];
};
function getDefaultDomainByAxisType(axisType) {
  return axisType === "number" ? [0, "auto"] : void 0;
}
var getTooltipContent = function getTooltipContent2(state, chartData, activeIndex, activeLabel) {
  var graphicalItems = state.graphicalItems, tooltipAxis = state.tooltipAxis;
  var displayedData = getDisplayedData(chartData, state);
  if (activeIndex < 0 || !graphicalItems || !graphicalItems.length || activeIndex >= displayedData.length) {
    return null;
  }
  return graphicalItems.reduce(function(result, child) {
    var _child$props$data;
    var data2 = (_child$props$data = child.props.data) !== null && _child$props$data !== void 0 ? _child$props$data : chartData;
    if (data2 && state.dataStartIndex + state.dataEndIndex !== 0) {
      data2 = data2.slice(state.dataStartIndex, state.dataEndIndex + 1);
    }
    var payload;
    if (tooltipAxis.dataKey && !tooltipAxis.allowDuplicatedCategory) {
      var entries = data2 === void 0 ? displayedData : data2;
      payload = findEntryInArray(entries, tooltipAxis.dataKey, activeLabel);
    } else {
      payload = data2 && data2[activeIndex] || displayedData[activeIndex];
    }
    if (!payload) {
      return result;
    }
    return [].concat(_toConsumableArray(result), [getTooltipItem(child, payload)]);
  }, []);
};
var getTooltipData = function getTooltipData2(state, chartData, layout, rangeObj) {
  var rangeData = rangeObj || {
    x: state.chartX,
    y: state.chartY
  };
  var pos = calculateTooltipPos(rangeData, layout);
  var ticks2 = state.orderedTooltipTicks, axis = state.tooltipAxis, tooltipTicks = state.tooltipTicks;
  var activeIndex = calculateActiveTickIndex(pos, ticks2, tooltipTicks, axis);
  if (activeIndex >= 0 && tooltipTicks) {
    var activeLabel = tooltipTicks[activeIndex] && tooltipTicks[activeIndex].value;
    var activePayload = getTooltipContent(state, chartData, activeIndex, activeLabel);
    var activeCoordinate = getActiveCoordinate(layout, ticks2, activeIndex, rangeData);
    return {
      activeTooltipIndex: activeIndex,
      activeLabel,
      activePayload,
      activeCoordinate
    };
  }
  return null;
};
var getAxisMapByAxes = function getAxisMapByAxes2(props, _ref2) {
  var axes = _ref2.axes, graphicalItems = _ref2.graphicalItems, axisType = _ref2.axisType, axisIdKey = _ref2.axisIdKey, stackGroups = _ref2.stackGroups, dataStartIndex = _ref2.dataStartIndex, dataEndIndex = _ref2.dataEndIndex;
  var layout = props.layout, children2 = props.children, stackOffset = props.stackOffset;
  var isCategorical = isCategoricalAxis(layout, axisType);
  return axes.reduce(function(result, child) {
    var _child$props$domain2;
    var _child$props = child.props, type2 = _child$props.type, dataKey = _child$props.dataKey, allowDataOverflow = _child$props.allowDataOverflow, allowDuplicatedCategory = _child$props.allowDuplicatedCategory, scale = _child$props.scale, ticks2 = _child$props.ticks, includeHidden = _child$props.includeHidden;
    var axisId = child.props[axisIdKey];
    if (result[axisId]) {
      return result;
    }
    var displayedData = getDisplayedData(props.data, {
      graphicalItems: graphicalItems.filter(function(item) {
        return item.props[axisIdKey] === axisId;
      }),
      dataStartIndex,
      dataEndIndex
    });
    var len = displayedData.length;
    var domain, duplicateDomain, categoricalDomain;
    if (isDomainSpecifiedByUser(child.props.domain, allowDataOverflow, type2)) {
      domain = parseSpecifiedDomain(child.props.domain, null, allowDataOverflow);
      if (isCategorical && (type2 === "number" || scale !== "auto")) {
        categoricalDomain = getDomainOfDataByKey(displayedData, dataKey, "category");
      }
    }
    var defaultDomain = getDefaultDomainByAxisType(type2);
    if (!domain || domain.length === 0) {
      var _child$props$domain;
      var childDomain = (_child$props$domain = child.props.domain) !== null && _child$props$domain !== void 0 ? _child$props$domain : defaultDomain;
      if (dataKey) {
        domain = getDomainOfDataByKey(displayedData, dataKey, type2);
        if (type2 === "category" && isCategorical) {
          var duplicate = hasDuplicate(domain);
          if (allowDuplicatedCategory && duplicate) {
            duplicateDomain = domain;
            domain = range$3(0, len);
          } else if (!allowDuplicatedCategory) {
            domain = parseDomainOfCategoryAxis(childDomain, domain, child).reduce(function(finalDomain, entry) {
              return finalDomain.indexOf(entry) >= 0 ? finalDomain : [].concat(_toConsumableArray(finalDomain), [entry]);
            }, []);
          }
        } else if (type2 === "category") {
          if (!allowDuplicatedCategory) {
            domain = parseDomainOfCategoryAxis(childDomain, domain, child).reduce(function(finalDomain, entry) {
              return finalDomain.indexOf(entry) >= 0 || entry === "" || isNil$1(entry) ? finalDomain : [].concat(_toConsumableArray(finalDomain), [entry]);
            }, []);
          } else {
            domain = domain.filter(function(entry) {
              return entry !== "" && !isNil$1(entry);
            });
          }
        } else if (type2 === "number") {
          var errorBarsDomain = parseErrorBarsOfAxis(displayedData, graphicalItems.filter(function(item) {
            return item.props[axisIdKey] === axisId && (includeHidden || !item.props.hide);
          }), dataKey, axisType, layout);
          if (errorBarsDomain) {
            domain = errorBarsDomain;
          }
        }
        if (isCategorical && (type2 === "number" || scale !== "auto")) {
          categoricalDomain = getDomainOfDataByKey(displayedData, dataKey, "category");
        }
      } else if (isCategorical) {
        domain = range$3(0, len);
      } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack && type2 === "number") {
        domain = stackOffset === "expand" ? [0, 1] : getDomainOfStackGroups(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);
      } else {
        domain = getDomainOfItemsWithSameAxis(displayedData, graphicalItems.filter(function(item) {
          return item.props[axisIdKey] === axisId && (includeHidden || !item.props.hide);
        }), type2, layout, true);
      }
      if (type2 === "number") {
        domain = detectReferenceElementsDomain(children2, domain, axisId, axisType, ticks2);
        if (childDomain) {
          domain = parseSpecifiedDomain(childDomain, domain, allowDataOverflow);
        }
      } else if (type2 === "category" && childDomain) {
        var axisDomain = childDomain;
        var isDomainValid = domain.every(function(entry) {
          return axisDomain.indexOf(entry) >= 0;
        });
        if (isDomainValid) {
          domain = axisDomain;
        }
      }
    }
    return _objectSpread(_objectSpread({}, result), {}, _defineProperty$1({}, axisId, _objectSpread(_objectSpread({}, child.props), {}, {
      axisType,
      domain,
      categoricalDomain,
      duplicateDomain,
      originalDomain: (_child$props$domain2 = child.props.domain) !== null && _child$props$domain2 !== void 0 ? _child$props$domain2 : defaultDomain,
      isCategorical,
      layout
    })));
  }, {});
};
var getAxisMapByItems = function getAxisMapByItems2(props, _ref3) {
  var graphicalItems = _ref3.graphicalItems, Axis = _ref3.Axis, axisType = _ref3.axisType, axisIdKey = _ref3.axisIdKey, stackGroups = _ref3.stackGroups, dataStartIndex = _ref3.dataStartIndex, dataEndIndex = _ref3.dataEndIndex;
  var layout = props.layout, children2 = props.children;
  var displayedData = getDisplayedData(props.data, {
    graphicalItems,
    dataStartIndex,
    dataEndIndex
  });
  var len = displayedData.length;
  var isCategorical = isCategoricalAxis(layout, axisType);
  var index2 = -1;
  return graphicalItems.reduce(function(result, child) {
    var axisId = child.props[axisIdKey];
    var originalDomain = getDefaultDomainByAxisType("number");
    if (!result[axisId]) {
      index2++;
      var domain;
      if (isCategorical) {
        domain = range$3(0, len);
      } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack) {
        domain = getDomainOfStackGroups(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);
        domain = detectReferenceElementsDomain(children2, domain, axisId, axisType);
      } else {
        domain = parseSpecifiedDomain(originalDomain, getDomainOfItemsWithSameAxis(displayedData, graphicalItems.filter(function(item) {
          return item.props[axisIdKey] === axisId && !item.props.hide;
        }), "number", layout), Axis.defaultProps.allowDataOverflow);
        domain = detectReferenceElementsDomain(children2, domain, axisId, axisType);
      }
      return _objectSpread(_objectSpread({}, result), {}, _defineProperty$1({}, axisId, _objectSpread(_objectSpread({
        axisType
      }, Axis.defaultProps), {}, {
        hide: true,
        orientation: get$5(ORIENT_MAP, "".concat(axisType, ".").concat(index2 % 2), null),
        domain,
        originalDomain,
        isCategorical,
        layout
        // specify scale when no Axis
        // scale: isCategorical ? 'band' : 'linear',
      })));
    }
    return result;
  }, {});
};
var getAxisMap = function getAxisMap2(props, _ref4) {
  var _ref4$axisType = _ref4.axisType, axisType = _ref4$axisType === void 0 ? "xAxis" : _ref4$axisType, AxisComp = _ref4.AxisComp, graphicalItems = _ref4.graphicalItems, stackGroups = _ref4.stackGroups, dataStartIndex = _ref4.dataStartIndex, dataEndIndex = _ref4.dataEndIndex;
  var children2 = props.children;
  var axisIdKey = "".concat(axisType, "Id");
  var axes = findAllByType(children2, AxisComp);
  var axisMap = {};
  if (axes && axes.length) {
    axisMap = getAxisMapByAxes(props, {
      axes,
      graphicalItems,
      axisType,
      axisIdKey,
      stackGroups,
      dataStartIndex,
      dataEndIndex
    });
  } else if (graphicalItems && graphicalItems.length) {
    axisMap = getAxisMapByItems(props, {
      Axis: AxisComp,
      graphicalItems,
      axisType,
      axisIdKey,
      stackGroups,
      dataStartIndex,
      dataEndIndex
    });
  }
  return axisMap;
};
var tooltipTicksGenerator = function tooltipTicksGenerator2(axisMap) {
  var axis = getAnyElementOfObject(axisMap);
  var tooltipTicks = getTicksOfAxis(axis, false, true);
  return {
    tooltipTicks,
    orderedTooltipTicks: sortBy$1(tooltipTicks, function(o2) {
      return o2.coordinate;
    }),
    tooltipAxis: axis,
    tooltipAxisBandSize: getBandSizeOfAxis(axis, tooltipTicks)
  };
};
var createDefaultState = function createDefaultState2(props) {
  var children2 = props.children, defaultShowTooltip = props.defaultShowTooltip;
  var brushItem = findChildByType(children2, Brush);
  var startIndex = 0;
  var endIndex = 0;
  if (props.data && props.data.length !== 0) {
    endIndex = props.data.length - 1;
  }
  if (brushItem && brushItem.props) {
    if (brushItem.props.startIndex >= 0) {
      startIndex = brushItem.props.startIndex;
    }
    if (brushItem.props.endIndex >= 0) {
      endIndex = brushItem.props.endIndex;
    }
  }
  return {
    chartX: 0,
    chartY: 0,
    dataStartIndex: startIndex,
    dataEndIndex: endIndex,
    activeTooltipIndex: -1,
    isTooltipActive: Boolean(defaultShowTooltip)
  };
};
var hasGraphicalBarItem = function hasGraphicalBarItem2(graphicalItems) {
  if (!graphicalItems || !graphicalItems.length) {
    return false;
  }
  return graphicalItems.some(function(item) {
    var name = getDisplayName(item && item.type);
    return name && name.indexOf("Bar") >= 0;
  });
};
var getAxisNameByLayout = function getAxisNameByLayout2(layout) {
  if (layout === "horizontal") {
    return {
      numericAxisName: "yAxis",
      cateAxisName: "xAxis"
    };
  }
  if (layout === "vertical") {
    return {
      numericAxisName: "xAxis",
      cateAxisName: "yAxis"
    };
  }
  if (layout === "centric") {
    return {
      numericAxisName: "radiusAxis",
      cateAxisName: "angleAxis"
    };
  }
  return {
    numericAxisName: "angleAxis",
    cateAxisName: "radiusAxis"
  };
};
var calculateOffset = function calculateOffset2(_ref5, prevLegendBBox) {
  var props = _ref5.props, graphicalItems = _ref5.graphicalItems, _ref5$xAxisMap = _ref5.xAxisMap, xAxisMap = _ref5$xAxisMap === void 0 ? {} : _ref5$xAxisMap, _ref5$yAxisMap = _ref5.yAxisMap, yAxisMap = _ref5$yAxisMap === void 0 ? {} : _ref5$yAxisMap;
  var width = props.width, height = props.height, children2 = props.children;
  var margin = props.margin || {};
  var brushItem = findChildByType(children2, Brush);
  var legendItem = findChildByType(children2, Legend);
  var offsetH = Object.keys(yAxisMap).reduce(function(result, id2) {
    var entry = yAxisMap[id2];
    var orientation = entry.orientation;
    if (!entry.mirror && !entry.hide) {
      return _objectSpread(_objectSpread({}, result), {}, _defineProperty$1({}, orientation, result[orientation] + entry.width));
    }
    return result;
  }, {
    left: margin.left || 0,
    right: margin.right || 0
  });
  var offsetV = Object.keys(xAxisMap).reduce(function(result, id2) {
    var entry = xAxisMap[id2];
    var orientation = entry.orientation;
    if (!entry.mirror && !entry.hide) {
      return _objectSpread(_objectSpread({}, result), {}, _defineProperty$1({}, orientation, get$5(result, "".concat(orientation)) + entry.height));
    }
    return result;
  }, {
    top: margin.top || 0,
    bottom: margin.bottom || 0
  });
  var offset2 = _objectSpread(_objectSpread({}, offsetV), offsetH);
  var brushBottom = offset2.bottom;
  if (brushItem) {
    offset2.bottom += brushItem.props.height || Brush.defaultProps.height;
  }
  if (legendItem && prevLegendBBox) {
    offset2 = appendOffsetOfLegend(offset2, graphicalItems, props, prevLegendBBox);
  }
  var offsetWidth = width - offset2.left - offset2.right;
  var offsetHeight = height - offset2.top - offset2.bottom;
  return _objectSpread(_objectSpread({
    brushBottom
  }, offset2), {}, {
    // never return negative values for height and width
    width: Math.max(offsetWidth, 0),
    height: Math.max(offsetHeight, 0)
  });
};
var getCartesianAxisSize = function getCartesianAxisSize2(axisObj, axisName) {
  if (axisName === "xAxis") {
    return axisObj[axisName].width;
  }
  if (axisName === "yAxis") {
    return axisObj[axisName].height;
  }
  return void 0;
};
var generateCategoricalChart = function generateCategoricalChart2(_ref6) {
  var _CategoricalChartWrapper;
  var chartName = _ref6.chartName, GraphicalChild = _ref6.GraphicalChild, _ref6$defaultTooltipE = _ref6.defaultTooltipEventType, defaultTooltipEventType = _ref6$defaultTooltipE === void 0 ? "axis" : _ref6$defaultTooltipE, _ref6$validateTooltip = _ref6.validateTooltipEventTypes, validateTooltipEventTypes = _ref6$validateTooltip === void 0 ? ["axis"] : _ref6$validateTooltip, axisComponents = _ref6.axisComponents, legendContent = _ref6.legendContent, formatAxisMap3 = _ref6.formatAxisMap, defaultProps2 = _ref6.defaultProps;
  var getFormatItems = function getFormatItems2(props, currentState) {
    var graphicalItems = currentState.graphicalItems, stackGroups = currentState.stackGroups, offset2 = currentState.offset, updateId = currentState.updateId, dataStartIndex = currentState.dataStartIndex, dataEndIndex = currentState.dataEndIndex;
    var barSize = props.barSize, layout = props.layout, barGap = props.barGap, barCategoryGap = props.barCategoryGap, globalMaxBarSize = props.maxBarSize;
    var _getAxisNameByLayout = getAxisNameByLayout(layout), numericAxisName = _getAxisNameByLayout.numericAxisName, cateAxisName = _getAxisNameByLayout.cateAxisName;
    var hasBar = hasGraphicalBarItem(graphicalItems);
    var formattedItems = [];
    graphicalItems.forEach(function(item, index2) {
      var displayedData = getDisplayedData(props.data, {
        graphicalItems: [item],
        dataStartIndex,
        dataEndIndex
      });
      var _item$props = item.props, dataKey = _item$props.dataKey, childMaxBarSize = _item$props.maxBarSize;
      var numericAxisId = item.props["".concat(numericAxisName, "Id")];
      var cateAxisId = item.props["".concat(cateAxisName, "Id")];
      var axisObjInitialValue = {};
      var axisObj = axisComponents.reduce(function(result, entry) {
        var axisMap = currentState["".concat(entry.axisType, "Map")];
        var id2 = item.props["".concat(entry.axisType, "Id")];
        !(axisMap && axisMap[id2] || entry.axisType === "zAxis") ? invariant$1(false) : void 0;
        var axis = axisMap[id2];
        return _objectSpread(_objectSpread({}, result), {}, _defineProperty$1(_defineProperty$1({}, entry.axisType, axis), "".concat(entry.axisType, "Ticks"), getTicksOfAxis(axis)));
      }, axisObjInitialValue);
      var cateAxis = axisObj[cateAxisName];
      var cateTicks = axisObj["".concat(cateAxisName, "Ticks")];
      var stackedData = stackGroups && stackGroups[numericAxisId] && stackGroups[numericAxisId].hasStack && getStackedDataOfItem(item, stackGroups[numericAxisId].stackGroups);
      var itemIsBar = getDisplayName(item.type).indexOf("Bar") >= 0;
      var bandSize = getBandSizeOfAxis(cateAxis, cateTicks);
      var barPosition = [];
      var sizeList = hasBar && getBarSizeList({
        barSize,
        stackGroups,
        totalSize: getCartesianAxisSize(axisObj, cateAxisName)
      });
      if (itemIsBar) {
        var _ref7, _getBandSizeOfAxis;
        var maxBarSize = isNil$1(childMaxBarSize) ? globalMaxBarSize : childMaxBarSize;
        var barBandSize = (_ref7 = (_getBandSizeOfAxis = getBandSizeOfAxis(cateAxis, cateTicks, true)) !== null && _getBandSizeOfAxis !== void 0 ? _getBandSizeOfAxis : maxBarSize) !== null && _ref7 !== void 0 ? _ref7 : 0;
        barPosition = getBarPosition({
          barGap,
          barCategoryGap,
          bandSize: barBandSize !== bandSize ? barBandSize : bandSize,
          sizeList: sizeList[cateAxisId],
          maxBarSize
        });
        if (barBandSize !== bandSize) {
          barPosition = barPosition.map(function(pos) {
            return _objectSpread(_objectSpread({}, pos), {}, {
              position: _objectSpread(_objectSpread({}, pos.position), {}, {
                offset: pos.position.offset - barBandSize / 2
              })
            });
          });
        }
      }
      var composedFn = item && item.type && item.type.getComposedData;
      if (composedFn) {
        formattedItems.push({
          props: _objectSpread(_objectSpread({}, composedFn(_objectSpread(_objectSpread({}, axisObj), {}, {
            displayedData,
            props,
            dataKey,
            item,
            bandSize,
            barPosition,
            offset: offset2,
            stackedData,
            layout,
            dataStartIndex,
            dataEndIndex
          }))), {}, _defineProperty$1(_defineProperty$1(_defineProperty$1({
            key: item.key || "item-".concat(index2)
          }, numericAxisName, axisObj[numericAxisName]), cateAxisName, axisObj[cateAxisName]), "animationId", updateId)),
          childIndex: parseChildIndex(item, props.children),
          item
        });
      }
    });
    return formattedItems;
  };
  var updateStateOfAxisMapsOffsetAndStackGroups = function updateStateOfAxisMapsOffsetAndStackGroups2(_ref8, prevState) {
    var props = _ref8.props, dataStartIndex = _ref8.dataStartIndex, dataEndIndex = _ref8.dataEndIndex, updateId = _ref8.updateId;
    if (!validateWidthHeight({
      props
    })) {
      return null;
    }
    var children2 = props.children, layout = props.layout, stackOffset = props.stackOffset, data2 = props.data, reverseStackOrder = props.reverseStackOrder;
    var _getAxisNameByLayout2 = getAxisNameByLayout(layout), numericAxisName = _getAxisNameByLayout2.numericAxisName, cateAxisName = _getAxisNameByLayout2.cateAxisName;
    var graphicalItems = findAllByType(children2, GraphicalChild);
    var stackGroups = getStackGroupsByAxisId(data2, graphicalItems, "".concat(numericAxisName, "Id"), "".concat(cateAxisName, "Id"), stackOffset, reverseStackOrder);
    var axisObj = axisComponents.reduce(function(result, entry) {
      var name = "".concat(entry.axisType, "Map");
      return _objectSpread(_objectSpread({}, result), {}, _defineProperty$1({}, name, getAxisMap(props, _objectSpread(_objectSpread({}, entry), {}, {
        graphicalItems,
        stackGroups: entry.axisType === numericAxisName && stackGroups,
        dataStartIndex,
        dataEndIndex
      }))));
    }, {});
    var offset2 = calculateOffset(_objectSpread(_objectSpread({}, axisObj), {}, {
      props,
      graphicalItems
    }), prevState === null || prevState === void 0 ? void 0 : prevState.legendBBox);
    Object.keys(axisObj).forEach(function(key) {
      axisObj[key] = formatAxisMap3(props, axisObj[key], offset2, key.replace("Map", ""), chartName);
    });
    var cateAxisMap = axisObj["".concat(cateAxisName, "Map")];
    var ticksObj = tooltipTicksGenerator(cateAxisMap);
    var formattedGraphicalItems = getFormatItems(props, _objectSpread(_objectSpread({}, axisObj), {}, {
      dataStartIndex,
      dataEndIndex,
      updateId,
      graphicalItems,
      stackGroups,
      offset: offset2
    }));
    return _objectSpread(_objectSpread({
      formattedGraphicalItems,
      graphicalItems,
      offset: offset2,
      stackGroups
    }, ticksObj), axisObj);
  };
  return _CategoricalChartWrapper = /* @__PURE__ */ function(_Component) {
    _inherits(CategoricalChartWrapper, _Component);
    function CategoricalChartWrapper(_props) {
      var _props$id, _props$throttleDelay;
      var _this;
      _classCallCheck(this, CategoricalChartWrapper);
      _this = _callSuper(this, CategoricalChartWrapper, [_props]);
      _defineProperty$1(_assertThisInitialized(_this), "eventEmitterSymbol", Symbol("rechartsEventEmitter"));
      _defineProperty$1(_assertThisInitialized(_this), "accessibilityManager", new AccessibilityManager());
      _defineProperty$1(_assertThisInitialized(_this), "handleLegendBBoxUpdate", function(box) {
        if (box) {
          var _this$state = _this.state, dataStartIndex = _this$state.dataStartIndex, dataEndIndex = _this$state.dataEndIndex, updateId = _this$state.updateId;
          _this.setState(_objectSpread({
            legendBBox: box
          }, updateStateOfAxisMapsOffsetAndStackGroups({
            props: _this.props,
            dataStartIndex,
            dataEndIndex,
            updateId
          }, _objectSpread(_objectSpread({}, _this.state), {}, {
            legendBBox: box
          }))));
        }
      });
      _defineProperty$1(_assertThisInitialized(_this), "handleReceiveSyncEvent", function(cId, data2, emitter) {
        if (_this.props.syncId === cId) {
          if (emitter === _this.eventEmitterSymbol && typeof _this.props.syncMethod !== "function") {
            return;
          }
          _this.applySyncEvent(data2);
        }
      });
      _defineProperty$1(_assertThisInitialized(_this), "handleBrushChange", function(_ref9) {
        var startIndex = _ref9.startIndex, endIndex = _ref9.endIndex;
        if (startIndex !== _this.state.dataStartIndex || endIndex !== _this.state.dataEndIndex) {
          var updateId = _this.state.updateId;
          _this.setState(function() {
            return _objectSpread({
              dataStartIndex: startIndex,
              dataEndIndex: endIndex
            }, updateStateOfAxisMapsOffsetAndStackGroups({
              props: _this.props,
              dataStartIndex: startIndex,
              dataEndIndex: endIndex,
              updateId
            }, _this.state));
          });
          _this.triggerSyncEvent({
            dataStartIndex: startIndex,
            dataEndIndex: endIndex
          });
        }
      });
      _defineProperty$1(_assertThisInitialized(_this), "handleMouseEnter", function(e3) {
        var mouse = _this.getMouseInfo(e3);
        if (mouse) {
          var _nextState = _objectSpread(_objectSpread({}, mouse), {}, {
            isTooltipActive: true
          });
          _this.setState(_nextState);
          _this.triggerSyncEvent(_nextState);
          var onMouseEnter = _this.props.onMouseEnter;
          if (isFunction$4(onMouseEnter)) {
            onMouseEnter(_nextState, e3);
          }
        }
      });
      _defineProperty$1(_assertThisInitialized(_this), "triggeredAfterMouseMove", function(e3) {
        var mouse = _this.getMouseInfo(e3);
        var nextState = mouse ? _objectSpread(_objectSpread({}, mouse), {}, {
          isTooltipActive: true
        }) : {
          isTooltipActive: false
        };
        _this.setState(nextState);
        _this.triggerSyncEvent(nextState);
        var onMouseMove = _this.props.onMouseMove;
        if (isFunction$4(onMouseMove)) {
          onMouseMove(nextState, e3);
        }
      });
      _defineProperty$1(_assertThisInitialized(_this), "handleItemMouseEnter", function(el2) {
        _this.setState(function() {
          return {
            isTooltipActive: true,
            activeItem: el2,
            activePayload: el2.tooltipPayload,
            activeCoordinate: el2.tooltipPosition || {
              x: el2.cx,
              y: el2.cy
            }
          };
        });
      });
      _defineProperty$1(_assertThisInitialized(_this), "handleItemMouseLeave", function() {
        _this.setState(function() {
          return {
            isTooltipActive: false
          };
        });
      });
      _defineProperty$1(_assertThisInitialized(_this), "handleMouseMove", function(e3) {
        e3.persist();
        _this.throttleTriggeredAfterMouseMove(e3);
      });
      _defineProperty$1(_assertThisInitialized(_this), "handleMouseLeave", function(e3) {
        _this.throttleTriggeredAfterMouseMove.cancel();
        var nextState = {
          isTooltipActive: false
        };
        _this.setState(nextState);
        _this.triggerSyncEvent(nextState);
        var onMouseLeave = _this.props.onMouseLeave;
        if (isFunction$4(onMouseLeave)) {
          onMouseLeave(nextState, e3);
        }
      });
      _defineProperty$1(_assertThisInitialized(_this), "handleOuterEvent", function(e3) {
        var eventName = getReactEventByType(e3);
        var event = get$5(_this.props, "".concat(eventName));
        if (eventName && isFunction$4(event)) {
          var _mouse;
          var mouse;
          if (/.*touch.*/i.test(eventName)) {
            mouse = _this.getMouseInfo(e3.changedTouches[0]);
          } else {
            mouse = _this.getMouseInfo(e3);
          }
          event((_mouse = mouse) !== null && _mouse !== void 0 ? _mouse : {}, e3);
        }
      });
      _defineProperty$1(_assertThisInitialized(_this), "handleClick", function(e3) {
        var mouse = _this.getMouseInfo(e3);
        if (mouse) {
          var _nextState2 = _objectSpread(_objectSpread({}, mouse), {}, {
            isTooltipActive: true
          });
          _this.setState(_nextState2);
          _this.triggerSyncEvent(_nextState2);
          var onClick = _this.props.onClick;
          if (isFunction$4(onClick)) {
            onClick(_nextState2, e3);
          }
        }
      });
      _defineProperty$1(_assertThisInitialized(_this), "handleMouseDown", function(e3) {
        var onMouseDown = _this.props.onMouseDown;
        if (isFunction$4(onMouseDown)) {
          var _nextState3 = _this.getMouseInfo(e3);
          onMouseDown(_nextState3, e3);
        }
      });
      _defineProperty$1(_assertThisInitialized(_this), "handleMouseUp", function(e3) {
        var onMouseUp = _this.props.onMouseUp;
        if (isFunction$4(onMouseUp)) {
          var _nextState4 = _this.getMouseInfo(e3);
          onMouseUp(_nextState4, e3);
        }
      });
      _defineProperty$1(_assertThisInitialized(_this), "handleTouchMove", function(e3) {
        if (e3.changedTouches != null && e3.changedTouches.length > 0) {
          _this.throttleTriggeredAfterMouseMove(e3.changedTouches[0]);
        }
      });
      _defineProperty$1(_assertThisInitialized(_this), "handleTouchStart", function(e3) {
        if (e3.changedTouches != null && e3.changedTouches.length > 0) {
          _this.handleMouseDown(e3.changedTouches[0]);
        }
      });
      _defineProperty$1(_assertThisInitialized(_this), "handleTouchEnd", function(e3) {
        if (e3.changedTouches != null && e3.changedTouches.length > 0) {
          _this.handleMouseUp(e3.changedTouches[0]);
        }
      });
      _defineProperty$1(_assertThisInitialized(_this), "triggerSyncEvent", function(data2) {
        if (_this.props.syncId !== void 0) {
          eventCenter.emit(SYNC_EVENT, _this.props.syncId, data2, _this.eventEmitterSymbol);
        }
      });
      _defineProperty$1(_assertThisInitialized(_this), "applySyncEvent", function(data2) {
        var _this$props = _this.props, layout = _this$props.layout, syncMethod = _this$props.syncMethod;
        var updateId = _this.state.updateId;
        var dataStartIndex = data2.dataStartIndex, dataEndIndex = data2.dataEndIndex;
        if (data2.dataStartIndex !== void 0 || data2.dataEndIndex !== void 0) {
          _this.setState(_objectSpread({
            dataStartIndex,
            dataEndIndex
          }, updateStateOfAxisMapsOffsetAndStackGroups({
            props: _this.props,
            dataStartIndex,
            dataEndIndex,
            updateId
          }, _this.state)));
        } else if (data2.activeTooltipIndex !== void 0) {
          var chartX = data2.chartX, chartY = data2.chartY;
          var activeTooltipIndex = data2.activeTooltipIndex;
          var _this$state2 = _this.state, offset2 = _this$state2.offset, tooltipTicks = _this$state2.tooltipTicks;
          if (!offset2) {
            return;
          }
          if (typeof syncMethod === "function") {
            activeTooltipIndex = syncMethod(tooltipTicks, data2);
          } else if (syncMethod === "value") {
            activeTooltipIndex = -1;
            for (var i2 = 0; i2 < tooltipTicks.length; i2++) {
              if (tooltipTicks[i2].value === data2.activeLabel) {
                activeTooltipIndex = i2;
                break;
              }
            }
          }
          var viewBox = _objectSpread(_objectSpread({}, offset2), {}, {
            x: offset2.left,
            y: offset2.top
          });
          var validateChartX = Math.min(chartX, viewBox.x + viewBox.width);
          var validateChartY = Math.min(chartY, viewBox.y + viewBox.height);
          var activeLabel = tooltipTicks[activeTooltipIndex] && tooltipTicks[activeTooltipIndex].value;
          var activePayload = getTooltipContent(_this.state, _this.props.data, activeTooltipIndex);
          var activeCoordinate = tooltipTicks[activeTooltipIndex] ? {
            x: layout === "horizontal" ? tooltipTicks[activeTooltipIndex].coordinate : validateChartX,
            y: layout === "horizontal" ? validateChartY : tooltipTicks[activeTooltipIndex].coordinate
          } : originCoordinate;
          _this.setState(_objectSpread(_objectSpread({}, data2), {}, {
            activeLabel,
            activeCoordinate,
            activePayload,
            activeTooltipIndex
          }));
        } else {
          _this.setState(data2);
        }
      });
      _defineProperty$1(_assertThisInitialized(_this), "renderCursor", function(element) {
        var _element$props$active;
        var _this$state3 = _this.state, isTooltipActive = _this$state3.isTooltipActive, activeCoordinate = _this$state3.activeCoordinate, activePayload = _this$state3.activePayload, offset2 = _this$state3.offset, activeTooltipIndex = _this$state3.activeTooltipIndex, tooltipAxisBandSize = _this$state3.tooltipAxisBandSize;
        var tooltipEventType = _this.getTooltipEventType();
        var isActive = (_element$props$active = element.props.active) !== null && _element$props$active !== void 0 ? _element$props$active : isTooltipActive;
        var layout = _this.props.layout;
        var key = element.key || "_recharts-cursor";
        return /* @__PURE__ */ React.createElement(Cursor, {
          key,
          activeCoordinate,
          activePayload,
          activeTooltipIndex,
          chartName,
          element,
          isActive,
          layout,
          offset: offset2,
          tooltipAxisBandSize,
          tooltipEventType
        });
      });
      _defineProperty$1(_assertThisInitialized(_this), "renderPolarAxis", function(element, displayName, index2) {
        var axisType = get$5(element, "type.axisType");
        var axisMap = get$5(_this.state, "".concat(axisType, "Map"));
        var axisOption = axisMap && axisMap[element.props["".concat(axisType, "Id")]];
        return /* @__PURE__ */ reactExports.cloneElement(element, _objectSpread(_objectSpread({}, axisOption), {}, {
          className: clsx$1(axisType, axisOption.className),
          key: element.key || "".concat(displayName, "-").concat(index2),
          ticks: getTicksOfAxis(axisOption, true)
        }));
      });
      _defineProperty$1(_assertThisInitialized(_this), "renderPolarGrid", function(element) {
        var _element$props = element.props, radialLines = _element$props.radialLines, polarAngles = _element$props.polarAngles, polarRadius = _element$props.polarRadius;
        var _this$state4 = _this.state, radiusAxisMap = _this$state4.radiusAxisMap, angleAxisMap = _this$state4.angleAxisMap;
        var radiusAxis = getAnyElementOfObject(radiusAxisMap);
        var angleAxis = getAnyElementOfObject(angleAxisMap);
        var cx2 = angleAxis.cx, cy = angleAxis.cy, innerRadius = angleAxis.innerRadius, outerRadius = angleAxis.outerRadius;
        return /* @__PURE__ */ reactExports.cloneElement(element, {
          polarAngles: Array.isArray(polarAngles) ? polarAngles : getTicksOfAxis(angleAxis, true).map(function(entry) {
            return entry.coordinate;
          }),
          polarRadius: Array.isArray(polarRadius) ? polarRadius : getTicksOfAxis(radiusAxis, true).map(function(entry) {
            return entry.coordinate;
          }),
          cx: cx2,
          cy,
          innerRadius,
          outerRadius,
          key: element.key || "polar-grid",
          radialLines
        });
      });
      _defineProperty$1(_assertThisInitialized(_this), "renderLegend", function() {
        var formattedGraphicalItems = _this.state.formattedGraphicalItems;
        var _this$props2 = _this.props, children2 = _this$props2.children, width = _this$props2.width, height = _this$props2.height;
        var margin = _this.props.margin || {};
        var legendWidth = width - (margin.left || 0) - (margin.right || 0);
        var props = getLegendProps({
          children: children2,
          formattedGraphicalItems,
          legendWidth,
          legendContent
        });
        if (!props) {
          return null;
        }
        var item = props.item, otherProps = _objectWithoutProperties$3(props, _excluded$c);
        return /* @__PURE__ */ reactExports.cloneElement(item, _objectSpread(_objectSpread({}, otherProps), {}, {
          chartWidth: width,
          chartHeight: height,
          margin,
          onBBoxUpdate: _this.handleLegendBBoxUpdate
        }));
      });
      _defineProperty$1(_assertThisInitialized(_this), "renderTooltip", function() {
        var _tooltipItem$props$ac;
        var _this$props3 = _this.props, children2 = _this$props3.children, accessibilityLayer = _this$props3.accessibilityLayer;
        var tooltipItem = findChildByType(children2, Tooltip);
        if (!tooltipItem) {
          return null;
        }
        var _this$state5 = _this.state, isTooltipActive = _this$state5.isTooltipActive, activeCoordinate = _this$state5.activeCoordinate, activePayload = _this$state5.activePayload, activeLabel = _this$state5.activeLabel, offset2 = _this$state5.offset;
        var isActive = (_tooltipItem$props$ac = tooltipItem.props.active) !== null && _tooltipItem$props$ac !== void 0 ? _tooltipItem$props$ac : isTooltipActive;
        return /* @__PURE__ */ reactExports.cloneElement(tooltipItem, {
          viewBox: _objectSpread(_objectSpread({}, offset2), {}, {
            x: offset2.left,
            y: offset2.top
          }),
          active: isActive,
          label: activeLabel,
          payload: isActive ? activePayload : [],
          coordinate: activeCoordinate,
          accessibilityLayer
        });
      });
      _defineProperty$1(_assertThisInitialized(_this), "renderBrush", function(element) {
        var _this$props4 = _this.props, margin = _this$props4.margin, data2 = _this$props4.data;
        var _this$state6 = _this.state, offset2 = _this$state6.offset, dataStartIndex = _this$state6.dataStartIndex, dataEndIndex = _this$state6.dataEndIndex, updateId = _this$state6.updateId;
        return /* @__PURE__ */ reactExports.cloneElement(element, {
          key: element.key || "_recharts-brush",
          onChange: combineEventHandlers(_this.handleBrushChange, element.props.onChange),
          data: data2,
          x: isNumber(element.props.x) ? element.props.x : offset2.left,
          y: isNumber(element.props.y) ? element.props.y : offset2.top + offset2.height + offset2.brushBottom - (margin.bottom || 0),
          width: isNumber(element.props.width) ? element.props.width : offset2.width,
          startIndex: dataStartIndex,
          endIndex: dataEndIndex,
          updateId: "brush-".concat(updateId)
        });
      });
      _defineProperty$1(_assertThisInitialized(_this), "renderReferenceElement", function(element, displayName, index2) {
        if (!element) {
          return null;
        }
        var _assertThisInitialize = _assertThisInitialized(_this), clipPathId = _assertThisInitialize.clipPathId;
        var _this$state7 = _this.state, xAxisMap = _this$state7.xAxisMap, yAxisMap = _this$state7.yAxisMap, offset2 = _this$state7.offset;
        var _element$props2 = element.props, xAxisId = _element$props2.xAxisId, yAxisId = _element$props2.yAxisId;
        return /* @__PURE__ */ reactExports.cloneElement(element, {
          key: element.key || "".concat(displayName, "-").concat(index2),
          xAxis: xAxisMap[xAxisId],
          yAxis: yAxisMap[yAxisId],
          viewBox: {
            x: offset2.left,
            y: offset2.top,
            width: offset2.width,
            height: offset2.height
          },
          clipPathId
        });
      });
      _defineProperty$1(_assertThisInitialized(_this), "renderActivePoints", function(_ref10) {
        var item = _ref10.item, activePoint = _ref10.activePoint, basePoint = _ref10.basePoint, childIndex = _ref10.childIndex, isRange = _ref10.isRange;
        var result = [];
        var key = item.props.key;
        var _item$item$props = item.item.props, activeDot = _item$item$props.activeDot, dataKey = _item$item$props.dataKey;
        var dotProps = _objectSpread(_objectSpread({
          index: childIndex,
          dataKey,
          cx: activePoint.x,
          cy: activePoint.y,
          r: 4,
          fill: getMainColorOfGraphicItem(item.item),
          strokeWidth: 2,
          stroke: "#fff",
          payload: activePoint.payload,
          value: activePoint.value,
          key: "".concat(key, "-activePoint-").concat(childIndex)
        }, filterProps(activeDot, false)), adaptEventHandlers(activeDot));
        result.push(CategoricalChartWrapper.renderActiveDot(activeDot, dotProps));
        if (basePoint) {
          result.push(CategoricalChartWrapper.renderActiveDot(activeDot, _objectSpread(_objectSpread({}, dotProps), {}, {
            cx: basePoint.x,
            cy: basePoint.y,
            key: "".concat(key, "-basePoint-").concat(childIndex)
          })));
        } else if (isRange) {
          result.push(null);
        }
        return result;
      });
      _defineProperty$1(_assertThisInitialized(_this), "renderGraphicChild", function(element, displayName, index2) {
        var item = _this.filterFormatItem(element, displayName, index2);
        if (!item) {
          return null;
        }
        var tooltipEventType = _this.getTooltipEventType();
        var _this$state8 = _this.state, isTooltipActive = _this$state8.isTooltipActive, tooltipAxis = _this$state8.tooltipAxis, activeTooltipIndex = _this$state8.activeTooltipIndex, activeLabel = _this$state8.activeLabel;
        var children2 = _this.props.children;
        var tooltipItem = findChildByType(children2, Tooltip);
        var _item$props2 = item.props, points = _item$props2.points, isRange = _item$props2.isRange, baseLine = _item$props2.baseLine;
        var _item$item$props2 = item.item.props, activeDot = _item$item$props2.activeDot, hide2 = _item$item$props2.hide, activeBar = _item$item$props2.activeBar, activeShape = _item$item$props2.activeShape;
        var hasActive = Boolean(!hide2 && isTooltipActive && tooltipItem && (activeDot || activeBar || activeShape));
        var itemEvents = {};
        if (tooltipEventType !== "axis" && tooltipItem && tooltipItem.props.trigger === "click") {
          itemEvents = {
            onClick: combineEventHandlers(_this.handleItemMouseEnter, element.props.onClick)
          };
        } else if (tooltipEventType !== "axis") {
          itemEvents = {
            onMouseLeave: combineEventHandlers(_this.handleItemMouseLeave, element.props.onMouseLeave),
            onMouseEnter: combineEventHandlers(_this.handleItemMouseEnter, element.props.onMouseEnter)
          };
        }
        var graphicalItem = /* @__PURE__ */ reactExports.cloneElement(element, _objectSpread(_objectSpread({}, item.props), itemEvents));
        function findWithPayload(entry) {
          return typeof tooltipAxis.dataKey === "function" ? tooltipAxis.dataKey(entry.payload) : null;
        }
        if (hasActive) {
          if (activeTooltipIndex >= 0) {
            var activePoint, basePoint;
            if (tooltipAxis.dataKey && !tooltipAxis.allowDuplicatedCategory) {
              var specifiedKey = typeof tooltipAxis.dataKey === "function" ? findWithPayload : "payload.".concat(tooltipAxis.dataKey.toString());
              activePoint = findEntryInArray(points, specifiedKey, activeLabel);
              basePoint = isRange && baseLine && findEntryInArray(baseLine, specifiedKey, activeLabel);
            } else {
              activePoint = points === null || points === void 0 ? void 0 : points[activeTooltipIndex];
              basePoint = isRange && baseLine && baseLine[activeTooltipIndex];
            }
            if (activeShape || activeBar) {
              var activeIndex = element.props.activeIndex !== void 0 ? element.props.activeIndex : activeTooltipIndex;
              return [/* @__PURE__ */ reactExports.cloneElement(element, _objectSpread(_objectSpread(_objectSpread({}, item.props), itemEvents), {}, {
                activeIndex
              })), null, null];
            }
            if (!isNil$1(activePoint)) {
              return [graphicalItem].concat(_toConsumableArray(_this.renderActivePoints({
                item,
                activePoint,
                basePoint,
                childIndex: activeTooltipIndex,
                isRange
              })));
            }
          } else {
            var _this$getItemByXY;
            var _ref11 = (_this$getItemByXY = _this.getItemByXY(_this.state.activeCoordinate)) !== null && _this$getItemByXY !== void 0 ? _this$getItemByXY : {
              graphicalItem
            }, _ref11$graphicalItem = _ref11.graphicalItem, _ref11$graphicalItem$ = _ref11$graphicalItem.item, xyItem = _ref11$graphicalItem$ === void 0 ? element : _ref11$graphicalItem$, childIndex = _ref11$graphicalItem.childIndex;
            var elementProps = _objectSpread(_objectSpread(_objectSpread({}, item.props), itemEvents), {}, {
              activeIndex: childIndex
            });
            return [/* @__PURE__ */ reactExports.cloneElement(xyItem, elementProps), null, null];
          }
        }
        if (isRange) {
          return [graphicalItem, null, null];
        }
        return [graphicalItem, null];
      });
      _defineProperty$1(_assertThisInitialized(_this), "renderCustomized", function(element, displayName, index2) {
        return /* @__PURE__ */ reactExports.cloneElement(element, _objectSpread(_objectSpread({
          key: "recharts-customized-".concat(index2)
        }, _this.props), _this.state));
      });
      _defineProperty$1(_assertThisInitialized(_this), "renderMap", {
        CartesianGrid: {
          handler: renderAsIs,
          once: true
        },
        ReferenceArea: {
          handler: _this.renderReferenceElement
        },
        ReferenceLine: {
          handler: renderAsIs
        },
        ReferenceDot: {
          handler: _this.renderReferenceElement
        },
        XAxis: {
          handler: renderAsIs
        },
        YAxis: {
          handler: renderAsIs
        },
        Brush: {
          handler: _this.renderBrush,
          once: true
        },
        Bar: {
          handler: _this.renderGraphicChild
        },
        Line: {
          handler: _this.renderGraphicChild
        },
        Area: {
          handler: _this.renderGraphicChild
        },
        Radar: {
          handler: _this.renderGraphicChild
        },
        RadialBar: {
          handler: _this.renderGraphicChild
        },
        Scatter: {
          handler: _this.renderGraphicChild
        },
        Pie: {
          handler: _this.renderGraphicChild
        },
        Funnel: {
          handler: _this.renderGraphicChild
        },
        Tooltip: {
          handler: _this.renderCursor,
          once: true
        },
        PolarGrid: {
          handler: _this.renderPolarGrid,
          once: true
        },
        PolarAngleAxis: {
          handler: _this.renderPolarAxis
        },
        PolarRadiusAxis: {
          handler: _this.renderPolarAxis
        },
        Customized: {
          handler: _this.renderCustomized
        }
      });
      _this.clipPathId = "".concat((_props$id = _props.id) !== null && _props$id !== void 0 ? _props$id : uniqueId("recharts"), "-clip");
      _this.throttleTriggeredAfterMouseMove = throttle$1(_this.triggeredAfterMouseMove, (_props$throttleDelay = _props.throttleDelay) !== null && _props$throttleDelay !== void 0 ? _props$throttleDelay : 1e3 / 60);
      _this.state = {};
      return _this;
    }
    _createClass(CategoricalChartWrapper, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this$props$margin$le, _this$props$margin$to;
        this.addListener();
        this.accessibilityManager.setDetails({
          container: this.container,
          offset: {
            left: (_this$props$margin$le = this.props.margin.left) !== null && _this$props$margin$le !== void 0 ? _this$props$margin$le : 0,
            top: (_this$props$margin$to = this.props.margin.top) !== null && _this$props$margin$to !== void 0 ? _this$props$margin$to : 0
          },
          coordinateList: this.state.tooltipTicks,
          mouseHandlerCallback: this.triggeredAfterMouseMove,
          layout: this.props.layout
        });
        this.displayDefaultTooltip();
      }
    }, {
      key: "displayDefaultTooltip",
      value: function displayDefaultTooltip() {
        var _this$props5 = this.props, children2 = _this$props5.children, data2 = _this$props5.data, height = _this$props5.height, layout = _this$props5.layout;
        var tooltipElem = findChildByType(children2, Tooltip);
        if (!tooltipElem) {
          return;
        }
        var defaultIndex = tooltipElem.props.defaultIndex;
        if (typeof defaultIndex !== "number" || defaultIndex < 0 || defaultIndex > this.state.tooltipTicks.length) {
          return;
        }
        var activeLabel = this.state.tooltipTicks[defaultIndex] && this.state.tooltipTicks[defaultIndex].value;
        var activePayload = getTooltipContent(this.state, data2, defaultIndex, activeLabel);
        var independentAxisCoord = this.state.tooltipTicks[defaultIndex].coordinate;
        var dependentAxisCoord = (this.state.offset.top + height) / 2;
        var isHorizontal = layout === "horizontal";
        var activeCoordinate = isHorizontal ? {
          x: independentAxisCoord,
          y: dependentAxisCoord
        } : {
          y: independentAxisCoord,
          x: dependentAxisCoord
        };
        var scatterPlotElement = this.state.formattedGraphicalItems.find(function(_ref12) {
          var item = _ref12.item;
          return item.type.name === "Scatter";
        });
        if (scatterPlotElement) {
          activeCoordinate = _objectSpread(_objectSpread({}, activeCoordinate), scatterPlotElement.props.points[defaultIndex].tooltipPosition);
          activePayload = scatterPlotElement.props.points[defaultIndex].tooltipPayload;
        }
        var nextState = {
          activeTooltipIndex: defaultIndex,
          isTooltipActive: true,
          activeLabel,
          activePayload,
          activeCoordinate
        };
        this.setState(nextState);
        this.renderCursor(tooltipElem);
        this.accessibilityManager.setIndex(defaultIndex);
      }
    }, {
      key: "getSnapshotBeforeUpdate",
      value: function getSnapshotBeforeUpdate(prevProps, prevState) {
        if (!this.props.accessibilityLayer) {
          return null;
        }
        if (this.state.tooltipTicks !== prevState.tooltipTicks) {
          this.accessibilityManager.setDetails({
            coordinateList: this.state.tooltipTicks
          });
        }
        if (this.props.layout !== prevProps.layout) {
          this.accessibilityManager.setDetails({
            layout: this.props.layout
          });
        }
        if (this.props.margin !== prevProps.margin) {
          var _this$props$margin$le2, _this$props$margin$to2;
          this.accessibilityManager.setDetails({
            offset: {
              left: (_this$props$margin$le2 = this.props.margin.left) !== null && _this$props$margin$le2 !== void 0 ? _this$props$margin$le2 : 0,
              top: (_this$props$margin$to2 = this.props.margin.top) !== null && _this$props$margin$to2 !== void 0 ? _this$props$margin$to2 : 0
            }
          });
        }
        return null;
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (!isChildrenEqual([findChildByType(prevProps.children, Tooltip)], [findChildByType(this.props.children, Tooltip)])) {
          this.displayDefaultTooltip();
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.removeListener();
        this.throttleTriggeredAfterMouseMove.cancel();
      }
    }, {
      key: "getTooltipEventType",
      value: function getTooltipEventType() {
        var tooltipItem = findChildByType(this.props.children, Tooltip);
        if (tooltipItem && typeof tooltipItem.props.shared === "boolean") {
          var eventType = tooltipItem.props.shared ? "axis" : "item";
          return validateTooltipEventTypes.indexOf(eventType) >= 0 ? eventType : defaultTooltipEventType;
        }
        return defaultTooltipEventType;
      }
      /**
       * Get the information of mouse in chart, return null when the mouse is not in the chart
       * @param  {MousePointer} event    The event object
       * @return {Object}          Mouse data
       */
    }, {
      key: "getMouseInfo",
      value: function getMouseInfo(event) {
        if (!this.container) {
          return null;
        }
        var element = this.container;
        var boundingRect = element.getBoundingClientRect();
        var containerOffset = getOffset(boundingRect);
        var e3 = {
          chartX: Math.round(event.pageX - containerOffset.left),
          chartY: Math.round(event.pageY - containerOffset.top)
        };
        var scale = boundingRect.width / element.offsetWidth || 1;
        var rangeObj = this.inRange(e3.chartX, e3.chartY, scale);
        if (!rangeObj) {
          return null;
        }
        var _this$state9 = this.state, xAxisMap = _this$state9.xAxisMap, yAxisMap = _this$state9.yAxisMap;
        var tooltipEventType = this.getTooltipEventType();
        if (tooltipEventType !== "axis" && xAxisMap && yAxisMap) {
          var xScale = getAnyElementOfObject(xAxisMap).scale;
          var yScale = getAnyElementOfObject(yAxisMap).scale;
          var xValue = xScale && xScale.invert ? xScale.invert(e3.chartX) : null;
          var yValue = yScale && yScale.invert ? yScale.invert(e3.chartY) : null;
          return _objectSpread(_objectSpread({}, e3), {}, {
            xValue,
            yValue
          });
        }
        var toolTipData = getTooltipData(this.state, this.props.data, this.props.layout, rangeObj);
        if (toolTipData) {
          return _objectSpread(_objectSpread({}, e3), toolTipData);
        }
        return null;
      }
    }, {
      key: "inRange",
      value: function inRange(x2, y2) {
        var scale = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
        var layout = this.props.layout;
        var scaledX = x2 / scale, scaledY = y2 / scale;
        if (layout === "horizontal" || layout === "vertical") {
          var offset2 = this.state.offset;
          var isInRange = scaledX >= offset2.left && scaledX <= offset2.left + offset2.width && scaledY >= offset2.top && scaledY <= offset2.top + offset2.height;
          return isInRange ? {
            x: scaledX,
            y: scaledY
          } : null;
        }
        var _this$state10 = this.state, angleAxisMap = _this$state10.angleAxisMap, radiusAxisMap = _this$state10.radiusAxisMap;
        if (angleAxisMap && radiusAxisMap) {
          var angleAxis = getAnyElementOfObject(angleAxisMap);
          return inRangeOfSector({
            x: scaledX,
            y: scaledY
          }, angleAxis);
        }
        return null;
      }
    }, {
      key: "parseEventsOfWrapper",
      value: function parseEventsOfWrapper() {
        var children2 = this.props.children;
        var tooltipEventType = this.getTooltipEventType();
        var tooltipItem = findChildByType(children2, Tooltip);
        var tooltipEvents = {};
        if (tooltipItem && tooltipEventType === "axis") {
          if (tooltipItem.props.trigger === "click") {
            tooltipEvents = {
              onClick: this.handleClick
            };
          } else {
            tooltipEvents = {
              onMouseEnter: this.handleMouseEnter,
              onMouseMove: this.handleMouseMove,
              onMouseLeave: this.handleMouseLeave,
              onTouchMove: this.handleTouchMove,
              onTouchStart: this.handleTouchStart,
              onTouchEnd: this.handleTouchEnd
            };
          }
        }
        var outerEvents = adaptEventHandlers(this.props, this.handleOuterEvent);
        return _objectSpread(_objectSpread({}, outerEvents), tooltipEvents);
      }
    }, {
      key: "addListener",
      value: function addListener() {
        eventCenter.on(SYNC_EVENT, this.handleReceiveSyncEvent);
      }
    }, {
      key: "removeListener",
      value: function removeListener() {
        eventCenter.removeListener(SYNC_EVENT, this.handleReceiveSyncEvent);
      }
    }, {
      key: "filterFormatItem",
      value: function filterFormatItem(item, displayName, childIndex) {
        var formattedGraphicalItems = this.state.formattedGraphicalItems;
        for (var i2 = 0, len = formattedGraphicalItems.length; i2 < len; i2++) {
          var entry = formattedGraphicalItems[i2];
          if (entry.item === item || entry.props.key === item.key || displayName === getDisplayName(entry.item.type) && childIndex === entry.childIndex) {
            return entry;
          }
        }
        return null;
      }
    }, {
      key: "renderClipPath",
      value: function renderClipPath() {
        var clipPathId = this.clipPathId;
        var _this$state$offset = this.state.offset, left = _this$state$offset.left, top = _this$state$offset.top, height = _this$state$offset.height, width = _this$state$offset.width;
        return /* @__PURE__ */ React.createElement("defs", null, /* @__PURE__ */ React.createElement("clipPath", {
          id: clipPathId
        }, /* @__PURE__ */ React.createElement("rect", {
          x: left,
          y: top,
          height,
          width
        })));
      }
    }, {
      key: "getXScales",
      value: function getXScales() {
        var xAxisMap = this.state.xAxisMap;
        return xAxisMap ? Object.entries(xAxisMap).reduce(function(res, _ref13) {
          var _ref14 = _slicedToArray$1(_ref13, 2), axisId = _ref14[0], axisProps = _ref14[1];
          return _objectSpread(_objectSpread({}, res), {}, _defineProperty$1({}, axisId, axisProps.scale));
        }, {}) : null;
      }
    }, {
      key: "getYScales",
      value: function getYScales() {
        var yAxisMap = this.state.yAxisMap;
        return yAxisMap ? Object.entries(yAxisMap).reduce(function(res, _ref15) {
          var _ref16 = _slicedToArray$1(_ref15, 2), axisId = _ref16[0], axisProps = _ref16[1];
          return _objectSpread(_objectSpread({}, res), {}, _defineProperty$1({}, axisId, axisProps.scale));
        }, {}) : null;
      }
    }, {
      key: "getXScaleByAxisId",
      value: function getXScaleByAxisId(axisId) {
        var _this$state$xAxisMap;
        return (_this$state$xAxisMap = this.state.xAxisMap) === null || _this$state$xAxisMap === void 0 || (_this$state$xAxisMap = _this$state$xAxisMap[axisId]) === null || _this$state$xAxisMap === void 0 ? void 0 : _this$state$xAxisMap.scale;
      }
    }, {
      key: "getYScaleByAxisId",
      value: function getYScaleByAxisId(axisId) {
        var _this$state$yAxisMap;
        return (_this$state$yAxisMap = this.state.yAxisMap) === null || _this$state$yAxisMap === void 0 || (_this$state$yAxisMap = _this$state$yAxisMap[axisId]) === null || _this$state$yAxisMap === void 0 ? void 0 : _this$state$yAxisMap.scale;
      }
    }, {
      key: "getItemByXY",
      value: function getItemByXY(chartXY) {
        var _this$state11 = this.state, formattedGraphicalItems = _this$state11.formattedGraphicalItems, activeItem = _this$state11.activeItem;
        if (formattedGraphicalItems && formattedGraphicalItems.length) {
          for (var i2 = 0, len = formattedGraphicalItems.length; i2 < len; i2++) {
            var graphicalItem = formattedGraphicalItems[i2];
            var props = graphicalItem.props, item = graphicalItem.item;
            var itemDisplayName = getDisplayName(item.type);
            if (itemDisplayName === "Bar") {
              var activeBarItem = (props.data || []).find(function(entry) {
                return isInRectangle(chartXY, entry);
              });
              if (activeBarItem) {
                return {
                  graphicalItem,
                  payload: activeBarItem
                };
              }
            } else if (itemDisplayName === "RadialBar") {
              var _activeBarItem = (props.data || []).find(function(entry) {
                return inRangeOfSector(chartXY, entry);
              });
              if (_activeBarItem) {
                return {
                  graphicalItem,
                  payload: _activeBarItem
                };
              }
            } else if (isFunnel(graphicalItem, activeItem) || isPie(graphicalItem, activeItem) || isScatter(graphicalItem, activeItem)) {
              var activeIndex = getActiveShapeIndexForTooltip({
                graphicalItem,
                activeTooltipItem: activeItem,
                itemData: item.props.data
              });
              var childIndex = item.props.activeIndex === void 0 ? activeIndex : item.props.activeIndex;
              return {
                graphicalItem: _objectSpread(_objectSpread({}, graphicalItem), {}, {
                  childIndex
                }),
                payload: isScatter(graphicalItem, activeItem) ? item.props.data[activeIndex] : graphicalItem.props.data[activeIndex]
              };
            }
          }
        }
        return null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;
        if (!validateWidthHeight(this)) {
          return null;
        }
        var _this$props6 = this.props, children2 = _this$props6.children, className = _this$props6.className, width = _this$props6.width, height = _this$props6.height, style = _this$props6.style, compact2 = _this$props6.compact, title = _this$props6.title, desc = _this$props6.desc, others = _objectWithoutProperties$3(_this$props6, _excluded2);
        var attrs = filterProps(others, false);
        if (compact2) {
          return /* @__PURE__ */ React.createElement(ChartLayoutContextProvider, {
            state: this.state,
            width: this.props.width,
            height: this.props.height,
            clipPathId: this.clipPathId
          }, /* @__PURE__ */ React.createElement(Surface, _extends$6({}, attrs, {
            width,
            height,
            title,
            desc
          }), this.renderClipPath(), renderByOrder(children2, this.renderMap)));
        }
        if (this.props.accessibilityLayer) {
          var _this$props$tabIndex, _this$props$role;
          attrs.tabIndex = (_this$props$tabIndex = this.props.tabIndex) !== null && _this$props$tabIndex !== void 0 ? _this$props$tabIndex : 0;
          attrs.role = (_this$props$role = this.props.role) !== null && _this$props$role !== void 0 ? _this$props$role : "application";
          attrs.onKeyDown = function(e3) {
            _this2.accessibilityManager.keyboardEvent(e3);
          };
          attrs.onFocus = function() {
            _this2.accessibilityManager.focus();
          };
        }
        var events = this.parseEventsOfWrapper();
        return /* @__PURE__ */ React.createElement(ChartLayoutContextProvider, {
          state: this.state,
          width: this.props.width,
          height: this.props.height,
          clipPathId: this.clipPathId
        }, /* @__PURE__ */ React.createElement("div", _extends$6({
          className: clsx$1("recharts-wrapper", className),
          style: _objectSpread({
            position: "relative",
            cursor: "default",
            width,
            height
          }, style)
        }, events, {
          ref: function ref(node) {
            _this2.container = node;
          }
        }), /* @__PURE__ */ React.createElement(Surface, _extends$6({}, attrs, {
          width,
          height,
          title,
          desc,
          style: FULL_WIDTH_AND_HEIGHT
        }), this.renderClipPath(), renderByOrder(children2, this.renderMap)), this.renderLegend(), this.renderTooltip()));
      }
    }]);
    return CategoricalChartWrapper;
  }(reactExports.Component), _defineProperty$1(_CategoricalChartWrapper, "displayName", chartName), _defineProperty$1(_CategoricalChartWrapper, "defaultProps", _objectSpread({
    layout: "horizontal",
    stackOffset: "none",
    barCategoryGap: "10%",
    barGap: 4,
    margin: {
      top: 5,
      right: 5,
      bottom: 5,
      left: 5
    },
    reverseStackOrder: false,
    syncMethod: "index"
  }, defaultProps2)), _defineProperty$1(_CategoricalChartWrapper, "getDerivedStateFromProps", function(nextProps, prevState) {
    var dataKey = nextProps.dataKey, data2 = nextProps.data, children2 = nextProps.children, width = nextProps.width, height = nextProps.height, layout = nextProps.layout, stackOffset = nextProps.stackOffset, margin = nextProps.margin;
    var dataStartIndex = prevState.dataStartIndex, dataEndIndex = prevState.dataEndIndex;
    if (prevState.updateId === void 0) {
      var defaultState = createDefaultState(nextProps);
      return _objectSpread(_objectSpread(_objectSpread({}, defaultState), {}, {
        updateId: 0
      }, updateStateOfAxisMapsOffsetAndStackGroups(_objectSpread(_objectSpread({
        props: nextProps
      }, defaultState), {}, {
        updateId: 0
      }), prevState)), {}, {
        prevDataKey: dataKey,
        prevData: data2,
        prevWidth: width,
        prevHeight: height,
        prevLayout: layout,
        prevStackOffset: stackOffset,
        prevMargin: margin,
        prevChildren: children2
      });
    }
    if (dataKey !== prevState.prevDataKey || data2 !== prevState.prevData || width !== prevState.prevWidth || height !== prevState.prevHeight || layout !== prevState.prevLayout || stackOffset !== prevState.prevStackOffset || !shallowEqual(margin, prevState.prevMargin)) {
      var _defaultState = createDefaultState(nextProps);
      var keepFromPrevState = {
        // (chartX, chartY) are (0,0) in default state, but we want to keep the last mouse position to avoid
        // any flickering
        chartX: prevState.chartX,
        chartY: prevState.chartY,
        // The tooltip should stay active when it was active in the previous render. If this is not
        // the case, the tooltip disappears and immediately re-appears, causing a flickering effect
        isTooltipActive: prevState.isTooltipActive
      };
      var updatesToState = _objectSpread(_objectSpread({}, getTooltipData(prevState, data2, layout)), {}, {
        updateId: prevState.updateId + 1
      });
      var newState = _objectSpread(_objectSpread(_objectSpread({}, _defaultState), keepFromPrevState), updatesToState);
      return _objectSpread(_objectSpread(_objectSpread({}, newState), updateStateOfAxisMapsOffsetAndStackGroups(_objectSpread({
        props: nextProps
      }, newState), prevState)), {}, {
        prevDataKey: dataKey,
        prevData: data2,
        prevWidth: width,
        prevHeight: height,
        prevLayout: layout,
        prevStackOffset: stackOffset,
        prevMargin: margin,
        prevChildren: children2
      });
    }
    if (!isChildrenEqual(children2, prevState.prevChildren)) {
      var _brush$props$startInd, _brush$props, _brush$props$endIndex, _brush$props2;
      var brush = findChildByType(children2, Brush);
      var startIndex = brush ? (_brush$props$startInd = (_brush$props = brush.props) === null || _brush$props === void 0 ? void 0 : _brush$props.startIndex) !== null && _brush$props$startInd !== void 0 ? _brush$props$startInd : dataStartIndex : dataStartIndex;
      var endIndex = brush ? (_brush$props$endIndex = (_brush$props2 = brush.props) === null || _brush$props2 === void 0 ? void 0 : _brush$props2.endIndex) !== null && _brush$props$endIndex !== void 0 ? _brush$props$endIndex : dataEndIndex : dataEndIndex;
      var hasDifferentStartOrEndIndex = startIndex !== dataStartIndex || endIndex !== dataEndIndex;
      var hasGlobalData = !isNil$1(data2);
      var newUpdateId = hasGlobalData && !hasDifferentStartOrEndIndex ? prevState.updateId : prevState.updateId + 1;
      return _objectSpread(_objectSpread({
        updateId: newUpdateId
      }, updateStateOfAxisMapsOffsetAndStackGroups(_objectSpread(_objectSpread({
        props: nextProps
      }, prevState), {}, {
        updateId: newUpdateId,
        dataStartIndex: startIndex,
        dataEndIndex: endIndex
      }), prevState)), {}, {
        prevChildren: children2,
        dataStartIndex: startIndex,
        dataEndIndex: endIndex
      });
    }
    return null;
  }), _defineProperty$1(_CategoricalChartWrapper, "renderActiveDot", function(option, props) {
    var dot;
    if (/* @__PURE__ */ reactExports.isValidElement(option)) {
      dot = /* @__PURE__ */ reactExports.cloneElement(option, props);
    } else if (isFunction$4(option)) {
      dot = option(props);
    } else {
      dot = /* @__PURE__ */ React.createElement(Dot, props);
    }
    return /* @__PURE__ */ React.createElement(Layer, {
      className: "recharts-active-dot",
      key: props.key
    }, dot);
  }), _CategoricalChartWrapper;
};
var LineChart = generateCategoricalChart({
  chartName: "LineChart",
  GraphicalChild: Line$1,
  axisComponents: [{
    axisType: "xAxis",
    AxisComp: XAxis
  }, {
    axisType: "yAxis",
    AxisComp: YAxis
  }],
  formatAxisMap
});
const fakeSeeds$1 = [
  {
    ipAddress: "219.165.20.253",
    region: "Russian Federation",
    fileName: "xxx",
    price: 946.78
  },
  {
    ipAddress: "122.45.183.16",
    region: "Indonesia",
    fileName: "xxx",
    price: 223.38
  },
  {
    ipAddress: "172.132.248.195",
    region: "Italy",
    fileName: "xxx",
    price: 703.89
  },
  {
    ipAddress: "99.55.6.17",
    region: "Albania",
    fileName: "xxx",
    price: 803.3
  },
  {
    ipAddress: "32.71.66.149",
    region: "Greece",
    fileName: "xxx",
    price: 737.39
  },
  {
    ipAddress: "251.63.165.212",
    region: "Trinidad and Tobago",
    fileName: "xxx",
    price: 707.6
  },
  {
    ipAddress: "174.30.8.151",
    region: "Cayman Islands",
    fileName: "xxx",
    price: 590.29
  },
  {
    ipAddress: "84.251.216.121",
    region: "Greenland",
    fileName: "xxx",
    price: 78.49
  },
  {
    ipAddress: "149.65.151.65",
    region: "South Georgia and the South Sandwich Islands",
    fileName: "xxx",
    price: 121.61
  },
  {
    ipAddress: "134.58.79.54",
    region: "Syrian Arab Republic",
    fileName: "xxx",
    price: 97.25
  },
  {
    ipAddress: "53.214.35.2",
    region: "South Georgia and the South Sandwich Islands",
    fileName: "xxx",
    price: 602.46
  },
  {
    ipAddress: "64.250.67.133",
    region: "Libyan Arab Jamahiriya",
    fileName: "xxx",
    price: 732.16
  },
  {
    ipAddress: "238.142.10.135",
    region: "Guadeloupe",
    fileName: "xxx",
    price: 403.1
  },
  {
    ipAddress: "9.71.212.58",
    region: "Italy",
    fileName: "xxx",
    price: 456.97
  },
  {
    ipAddress: "227.206.231.69",
    region: "Mauritania",
    fileName: "xxx",
    price: 698.3
  },
  {
    ipAddress: "200.100.155.137",
    region: "Dominican Republic",
    fileName: "xxx",
    price: 662.53
  },
  {
    ipAddress: "115.192.173.18",
    region: "Saudi Arabia",
    fileName: "xxx",
    price: 157.59
  },
  {
    ipAddress: "89.173.148.199",
    region: "Bhutan",
    fileName: "xxx",
    price: 303.92
  },
  {
    ipAddress: "194.155.107.141",
    region: "Uganda",
    fileName: "xxx",
    price: 919.85
  },
  {
    ipAddress: "83.147.252.20",
    region: "Eritrea",
    fileName: "xxx",
    price: 849.76
  },
  {
    ipAddress: "64.136.173.233",
    region: "Puerto Rico",
    fileName: "xxx",
    price: 800.21
  },
  {
    ipAddress: "23.179.127.246",
    region: "United Kingdom",
    fileName: "xxx",
    price: 640.2
  }
];
const Card = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  "div",
  {
    ref,
    className: cn(
      "rounded-lg border bg-card text-card-foreground shadow-sm",
      className
    ),
    ...props
  }
));
Card.displayName = "Card";
const CardHeader = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  "div",
  {
    ref,
    className: cn("flex flex-col space-y-1.5 p-6", className),
    ...props
  }
));
CardHeader.displayName = "CardHeader";
const CardTitle = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  "h3",
  {
    ref,
    className: cn(
      "text-2xl font-semibold leading-none tracking-tight",
      className
    ),
    ...props
  }
));
CardTitle.displayName = "CardTitle";
const CardDescription = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  "p",
  {
    ref,
    className: cn("text-sm text-muted-foreground", className),
    ...props
  }
));
CardDescription.displayName = "CardDescription";
const CardContent = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ref, className: cn("p-6 pt-0", className), ...props }));
CardContent.displayName = "CardContent";
const CardFooter = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  "div",
  {
    ref,
    className: cn("flex items-center p-6 pt-0", className),
    ...props
  }
));
CardFooter.displayName = "CardFooter";
const GeneralInfoPanel = (props) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Card, { className: "", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex justify-between rounded-t-lg bg-gray-300 text-gray-800", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "ml-2", children: props.jobInfo.hash }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Copy,
        {
          onClick: async () => {
            try {
              await navigator.clipboard.writeText(props.jobInfo.hash);
              alert("Text copied to clipboard!");
            } catch (err) {
              alert("Failed to copy text");
            }
          },
          className: "mr-2"
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "p-3 text-lg", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "mb-1", children: props.jobInfo.fileName }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-blue-600", children: props.jobInfo.accumulatedData }),
        " ",
        "/ ",
        props.jobInfo.fileSize
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        "Running Cost:",
        " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-blue-600", children: props.jobInfo.runningCost })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        "Projected Cost: ",
        props.jobInfo.projectedCost
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        "ETA: ",
        props.jobInfo.remainingTime
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "text-right text-sm rounded-b-lg bg-gray-500 text-gray-100", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "mr-2", children: props.jobInfo.timeQueued }) })
  ] });
};
const Details = (props) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "grid grid-cols-[minmax(0,_1fr)_minmax(0,_2fr)] gap-4", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(GeneralInfoPanel, { jobInfo: props.jobInfo }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(PeerPanel, {})
  ] });
};
const PeerPanel = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(Tabs, { defaultValue: "selected_peers", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(TabsList, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(TabsTrigger, { value: "selected_peers", children: "Selected Peers" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(TabsTrigger, { value: "more_peers", children: "More Peers" })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(TabsContent, { value: "selected_peers", children: /* @__PURE__ */ jsxRuntimeExports.jsx(SelectedPeers, {}) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(TabsContent, { value: "more_peers", children: /* @__PURE__ */ jsxRuntimeExports.jsx(MorePeers, {}) })
  ] }) });
};
const SelectedPeers = () => {
  const selectedPeersInfoList = [
    {
      id: "1",
      ipAddress: "127.0.0.1",
      region: "North America",
      price: "0.1 USD/MiB",
      amountDownloaded: "2 MiB",
      status: "active",
      speed: "10 KiB/s",
      speedGraph: [
        { time: 0, speed: 0 },
        { time: 1, speed: 4 },
        { time: 2, speed: 6 },
        { time: 3, speed: 7 },
        { time: 4, speed: 7 },
        { time: 5, speed: 7 }
      ]
    },
    {
      id: "2",
      ipAddress: "127.0.0.1",
      region: "North America",
      price: "0.1 USD/MiB",
      amountDownloaded: "2 MiB",
      status: "active",
      speed: "10 KiB/s",
      speedGraph: [
        { time: 0, speed: 0 },
        { time: 1, speed: 4 },
        { time: 2, speed: 6 },
        { time: 3, speed: 7 },
        { time: 4, speed: 7 },
        { time: 5, speed: 7 }
      ]
    }
  ];
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex justify-between", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: "Status" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: "IP Address" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: "Price" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: "Total Storage" }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex invisible", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Play, {}),
        " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(Pause, {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Trash2, {})
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("ul", { children: selectedPeersInfoList.map((e3) => /* @__PURE__ */ jsxRuntimeExports.jsx(SelectedPeer, { ...e3 }, e3.id)) })
  ] });
};
const SelectedPeer = (props) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Accordion, { type: "single", collapsible: true, children: /* @__PURE__ */ jsxRuntimeExports.jsxs(AccordionItem, { value: "item-1", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(AccordionTrigger, { className: "bg-card", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "w-full flex justify-between", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: props.status }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: props.ipAddress }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: props.price }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: props.amountDownloaded }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Play, { className: "hover:text-accent" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Pause, { className: "hover:text-accent" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Trash2, { className: "hover:text-destructive" })
      ] })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(AccordionContent, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(LineChart, { width: 300, height: 100, data: props.speedGraph, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Line$1, { type: "monotone", dataKey: "speed", stroke: "var(--primary)" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(CartesianGrid, { stroke: "#ccc" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(XAxis, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(YAxis, {})
    ] }) })
  ] }) });
};
const MorePeers = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(DataTable$3, { columns: columns$3, data: fakeSeeds$1 });
};
const jobInfoList = [
  {
    id: "1",
    fileName: "dqepo_ir.rs",
    fileSize: "390 KiB",
    status: "error",
    remainingTime: "15 s",
    timeQueued: "2016-08-03 05:10:00",
    hash: "5a931f8a19675914",
    accumulatedData: "43",
    runningCost: "17 USD",
    projectedCost: "21 USD"
  },
  {
    id: "2",
    fileName: "t_inf.pdf",
    fileSize: "867 MiB",
    status: "paused",
    remainingTime: "19 s",
    timeQueued: "2022-01-18 11:55:30",
    hash: "31cb226cbd5aca20",
    accumulatedData: "602",
    runningCost: "9 USD",
    projectedCost: "20 USD"
  },
  {
    id: "3",
    fileName: "evoaupilambtd.pptx",
    fileSize: "647 MiB",
    status: "downloading",
    remainingTime: "3 min",
    timeQueued: "2013-01-26 04:12:22",
    hash: "bcd80a7d0e7bbd5a",
    accumulatedData: "441",
    runningCost: "2 USD",
    projectedCost: "13 USD"
  },
  {
    id: "4",
    fileName: "lhucdstrpfkie.docx",
    fileSize: "925 TiB",
    status: "downloading",
    remainingTime: "20 d",
    timeQueued: "1980-11-28 00:50:56",
    hash: "a23b1afe9363f3bc",
    accumulatedData: "668",
    runningCost: "3 USD",
    projectedCost: "26 USD"
  },
  {
    id: "5",
    fileName: "sicnjulrotvpigd.pdf",
    fileSize: "1012 MiB",
    status: "completed",
    remainingTime: "12 h",
    timeQueued: "2012-06-07 05:06:23",
    hash: "91d9fdde5b353cc5",
    accumulatedData: "78",
    runningCost: "5 USD",
    projectedCost: "26 USD"
  },
  {
    id: "6",
    fileName: "hogpbkrsc.mp3",
    fileSize: "696 MiB",
    status: "error",
    remainingTime: "4 min",
    timeQueued: "1995-11-16 12:13:30",
    hash: "bdbf87349d41094b",
    accumulatedData: "112",
    runningCost: "2 USD",
    projectedCost: "15 USD"
  },
  {
    id: "7",
    fileName: "irlsoioq_d.mp3",
    fileSize: "314 KiB",
    status: "paused",
    remainingTime: "13 d",
    timeQueued: "1984-03-27 19:29:47",
    hash: "e69c335c9ce3534b",
    accumulatedData: "279",
    runningCost: "9 USD",
    projectedCost: "25 USD"
  },
  {
    id: "8",
    fileName: "euaektic_qomjis.pdf",
    fileSize: "842 MiB",
    status: "error",
    remainingTime: "19 s",
    timeQueued: "1989-06-18 00:42:52",
    hash: "1164730640a13ab2",
    accumulatedData: "784",
    runningCost: "3 USD",
    projectedCost: "12 USD"
  },
  {
    id: "9",
    fileName: "reqp.rs",
    fileSize: "322 MiB",
    status: "paused",
    remainingTime: "4 d",
    timeQueued: "1996-05-09 10:43:57",
    hash: "f35783467bd824e6",
    accumulatedData: "311",
    runningCost: "1 USD",
    projectedCost: "11 USD"
  },
  {
    id: "10",
    fileName: "kuctiaephq_fodl.pptx",
    fileSize: "347 TiB",
    status: "downloading",
    remainingTime: "15 d",
    timeQueued: "2005-06-17 19:59:12",
    hash: "42df4fb591dc007f",
    accumulatedData: "204",
    runningCost: "10 USD",
    projectedCost: "15 USD"
  },
  {
    id: "11",
    fileName: "liamothjrdf.xlsx",
    fileSize: "939 TiB",
    status: "completed",
    remainingTime: "21 s",
    timeQueued: "2023-10-16 14:35:28",
    hash: "f7d71fd6bb1dc85b",
    accumulatedData: "344",
    runningCost: "4 USD",
    projectedCost: "11 USD"
  },
  {
    id: "12",
    fileName: "jrnu_eb.docx",
    fileSize: "301 MiB",
    status: "paused",
    remainingTime: "6 d",
    timeQueued: "2006-02-10 17:00:04",
    hash: "fbfa89d4178e9d7e",
    accumulatedData: "47",
    runningCost: "19 USD",
    projectedCost: "28 USD"
  },
  {
    id: "13",
    fileName: "gsfojkuq.py",
    fileSize: "898 KiB",
    status: "completed",
    remainingTime: "4 min",
    timeQueued: "1995-11-16 15:01:27",
    hash: "a154c17e69e7d525",
    accumulatedData: "112",
    runningCost: "8 USD",
    projectedCost: "14 USD"
  },
  {
    id: "14",
    fileName: "gnaolhju.mp3",
    fileSize: "768 GiB",
    status: "downloading",
    remainingTime: "15 s",
    timeQueued: "1982-06-27 18:22:48",
    hash: "352b3883ad61077c",
    accumulatedData: "38",
    runningCost: "4 USD",
    projectedCost: "16 USD"
  },
  {
    id: "15",
    fileName: "bvnulmeujhq.mp3",
    fileSize: "806 MiB",
    status: "error",
    remainingTime: "4 h",
    timeQueued: "1983-07-01 22:00:25",
    hash: "0b6eb36422de53d4",
    accumulatedData: "206",
    runningCost: "10 USD",
    projectedCost: "22 USD"
  },
  {
    id: "16",
    fileName: "aus.pdf",
    fileSize: "245 GiB",
    status: "downloading",
    remainingTime: "4 s",
    timeQueued: "2020-09-06 01:58:00",
    hash: "506c2b15ad983e6f",
    accumulatedData: "5",
    runningCost: "18 USD",
    projectedCost: "18 USD"
  },
  {
    id: "17",
    fileName: "du_qjubof.pdf",
    fileSize: "648 GiB",
    status: "downloading",
    remainingTime: "4 min",
    timeQueued: "2013-07-26 17:27:30",
    hash: "59aad77f3b4d09fc",
    accumulatedData: "528",
    runningCost: "0 USD",
    projectedCost: "10 USD"
  },
  {
    id: "18",
    fileName: "etikuqobjd.pptx",
    fileSize: "51 TiB",
    status: "downloading",
    remainingTime: "20 d",
    timeQueued: "1980-05-03 22:43:13",
    hash: "4e8017bd301efc8f",
    accumulatedData: "14",
    runningCost: "9 USD",
    projectedCost: "20 USD"
  },
  {
    id: "19",
    fileName: "plq_e.mp4",
    fileSize: "794 TiB",
    status: "downloading",
    remainingTime: "8 s",
    timeQueued: "1998-05-11 05:43:47",
    hash: "1330f61f59e445f3",
    accumulatedData: "342",
    runningCost: "6 USD",
    projectedCost: "17 USD"
  },
  {
    id: "20",
    fileName: "rjsbv_ni.mp3",
    fileSize: "132 KiB",
    status: "downloading",
    remainingTime: "8 s",
    timeQueued: "2011-12-09 14:46:12",
    hash: "8d4c7d4723411deb",
    accumulatedData: "75",
    runningCost: "0 USD",
    projectedCost: "5 USD"
  },
  {
    id: "21",
    fileName: "avohegis.xlsx",
    fileSize: "601 MiB",
    status: "error",
    remainingTime: "9 h",
    timeQueued: "1991-01-17 03:23:32",
    hash: "f50349d513be0415",
    accumulatedData: "425",
    runningCost: "1 USD",
    projectedCost: "4 USD"
  },
  {
    id: "22",
    fileName: "ifajvloqmki.pdf",
    fileSize: "954 TiB",
    status: "error",
    remainingTime: "1 min",
    timeQueued: "2022-03-06 09:48:46",
    hash: "5a03e07a10da845a",
    accumulatedData: "819",
    runningCost: "3 USD",
    projectedCost: "5 USD"
  },
  {
    id: "23",
    fileName: "eja_gmhibudto.py",
    fileSize: "599 TiB",
    status: "error",
    remainingTime: "10 min",
    timeQueued: "1995-08-27 07:10:12",
    hash: "4c064bfc81964df4",
    accumulatedData: "470",
    runningCost: "13 USD",
    projectedCost: "23 USD"
  },
  {
    id: "24",
    fileName: "r_utonoj.pdf",
    fileSize: "46 KiB",
    status: "downloading",
    remainingTime: "1 d",
    timeQueued: "2018-04-12 08:40:45",
    hash: "9bc5b4f5a9b792ae",
    accumulatedData: "30",
    runningCost: "4 USD",
    projectedCost: "15 USD"
  },
  {
    id: "25",
    fileName: "ijti_auoshek.xlsx",
    fileSize: "979 KiB",
    status: "downloading",
    remainingTime: "22 min",
    timeQueued: "2011-03-19 10:54:33",
    hash: "9b8ae86c260a4444",
    accumulatedData: "872",
    runningCost: "5 USD",
    projectedCost: "7 USD"
  },
  {
    id: "26",
    fileName: "kguqb.xlsx",
    fileSize: "316 MiB",
    status: "paused",
    remainingTime: "23 min",
    timeQueued: "1999-07-09 02:54:17",
    hash: "6d601baf0d058493",
    accumulatedData: "266",
    runningCost: "9 USD",
    projectedCost: "17 USD"
  },
  {
    id: "27",
    fileName: "teuhqu.rs",
    fileSize: "557 KiB",
    status: "downloading",
    remainingTime: "17 h",
    timeQueued: "1999-11-21 10:05:34",
    hash: "352a93ae1a05200a",
    accumulatedData: "42",
    runningCost: "9 USD",
    projectedCost: "14 USD"
  },
  {
    id: "28",
    fileName: "fiaoojuqrestem.py",
    fileSize: "596 KiB",
    status: "error",
    remainingTime: "14 h",
    timeQueued: "2006-04-07 22:21:06",
    hash: "c25b2d1579d60bc1",
    accumulatedData: "457",
    runningCost: "5 USD",
    projectedCost: "28 USD"
  },
  {
    id: "29",
    fileName: "_rgaupociomfsq.mp3",
    fileSize: "595 GiB",
    status: "error",
    remainingTime: "10 h",
    timeQueued: "1987-09-20 20:46:40",
    hash: "cfdebbb1df7cc136",
    accumulatedData: "274",
    runningCost: "4 USD",
    projectedCost: "14 USD"
  },
  {
    id: "30",
    fileName: "bev.pdf",
    fileSize: "903 KiB",
    status: "paused",
    remainingTime: "14 min",
    timeQueued: "2017-03-02 02:37:05",
    hash: "69c868f36fe1bec8",
    accumulatedData: "483",
    runningCost: "12 USD",
    projectedCost: "27 USD"
  },
  {
    id: "31",
    fileName: "eu_se.mp4",
    fileSize: "471 GiB",
    status: "downloading",
    remainingTime: "17 h",
    timeQueued: "2003-07-23 06:51:41",
    hash: "200eaa0438b72653",
    accumulatedData: "136",
    runningCost: "2 USD",
    projectedCost: "3 USD"
  },
  {
    id: "32",
    fileName: "ufjmpvi_g.pptx",
    fileSize: "982 KiB",
    status: "completed",
    remainingTime: "2 d",
    timeQueued: "1986-04-04 21:41:40",
    hash: "b64244203adec0e2",
    accumulatedData: "943",
    runningCost: "11 USD",
    projectedCost: "18 USD"
  },
  {
    id: "33",
    fileName: "prnuioq.py",
    fileSize: "157 MiB",
    status: "error",
    remainingTime: "4 h",
    timeQueued: "2011-05-03 01:48:46",
    hash: "800cc708df52caf8",
    accumulatedData: "50",
    runningCost: "2 USD",
    projectedCost: "23 USD"
  },
  {
    id: "34",
    fileName: "jasa.docx",
    fileSize: "786 MiB",
    status: "error",
    remainingTime: "6 d",
    timeQueued: "1988-08-20 00:07:04",
    hash: "ad6a764b0947bf33",
    accumulatedData: "265",
    runningCost: "7 USD",
    projectedCost: "29 USD"
  },
  {
    id: "35",
    fileName: "_gsfbrpcjkvhudn.pptx",
    fileSize: "643 TiB",
    status: "completed",
    remainingTime: "7 h",
    timeQueued: "1984-10-09 14:31:35",
    hash: "afab29773a4396a4",
    accumulatedData: "181",
    runningCost: "15 USD",
    projectedCost: "20 USD"
  },
  {
    id: "36",
    fileName: "kidupvj.py",
    fileSize: "998 MiB",
    status: "downloading",
    remainingTime: "20 h",
    timeQueued: "2014-10-27 21:17:42",
    hash: "404fd1b68d44323a",
    accumulatedData: "836",
    runningCost: "13 USD",
    projectedCost: "22 USD"
  },
  {
    id: "37",
    fileName: "fqonbimdaeovigh.pptx",
    fileSize: "172 GiB",
    status: "completed",
    remainingTime: "12 s",
    timeQueued: "1993-09-01 02:48:47",
    hash: "2b593f7760e6afba",
    accumulatedData: "96",
    runningCost: "11 USD",
    projectedCost: "26 USD"
  },
  {
    id: "38",
    fileName: "eajcaoliu.mp4",
    fileSize: "703 GiB",
    status: "downloading",
    remainingTime: "17 h",
    timeQueued: "1988-11-27 15:48:33",
    hash: "18d0da04d6051998",
    accumulatedData: "198",
    runningCost: "6 USD",
    projectedCost: "8 USD"
  },
  {
    id: "39",
    fileName: "orecafogvhmk.mp3",
    fileSize: "143 MiB",
    status: "paused",
    remainingTime: "15 h",
    timeQueued: "2018-07-21 18:51:06",
    hash: "e3c314f2c23d14dc",
    accumulatedData: "9",
    runningCost: "22 USD",
    projectedCost: "28 USD"
  },
  {
    id: "40",
    fileName: "fcqusdjug.pptx",
    fileSize: "738 TiB",
    status: "downloading",
    remainingTime: "22 min",
    timeQueued: "1987-12-25 10:49:09",
    hash: "4c5e65a26d450c3d",
    accumulatedData: "167",
    runningCost: "2 USD",
    projectedCost: "10 USD"
  },
  {
    id: "41",
    fileName: "uinhmgiju.xlsx",
    fileSize: "28 TiB",
    status: "error",
    remainingTime: "15 d",
    timeQueued: "2009-11-12 12:00:30",
    hash: "41f45112208fb37f",
    accumulatedData: "19",
    runningCost: "10 USD",
    projectedCost: "20 USD"
  },
  {
    id: "42",
    fileName: "airftu_jcp.xlsx",
    fileSize: "466 KiB",
    status: "completed",
    remainingTime: "13 s",
    timeQueued: "2015-01-24 18:40:10",
    hash: "0cc6dcc97b3b4137",
    accumulatedData: "349",
    runningCost: "2 USD",
    projectedCost: "5 USD"
  },
  {
    id: "43",
    fileName: "vmgals.mp4",
    fileSize: "760 GiB",
    status: "completed",
    remainingTime: "6 min",
    timeQueued: "2015-07-12 19:28:02",
    hash: "ad96d990cb6c171e",
    accumulatedData: "488",
    runningCost: "8 USD",
    projectedCost: "25 USD"
  },
  {
    id: "44",
    fileName: "jimdhkar.xlsx",
    fileSize: "571 TiB",
    status: "downloading",
    remainingTime: "9 s",
    timeQueued: "2002-09-02 10:34:52",
    hash: "1a0cf7c9424327dc",
    accumulatedData: "568",
    runningCost: "11 USD",
    projectedCost: "23 USD"
  },
  {
    id: "45",
    fileName: "boqpoaf.mp4",
    fileSize: "338 KiB",
    status: "completed",
    remainingTime: "1 h",
    timeQueued: "2010-04-10 13:30:57",
    hash: "c3d574c2c30192f2",
    accumulatedData: "111",
    runningCost: "9 USD",
    projectedCost: "12 USD"
  },
  {
    id: "46",
    fileName: "njulchetai.xlsx",
    fileSize: "699 KiB",
    status: "paused",
    remainingTime: "14 h",
    timeQueued: "2001-06-05 16:47:26",
    hash: "99dfa1fa37875728",
    accumulatedData: "261",
    runningCost: "2 USD",
    projectedCost: "20 USD"
  },
  {
    id: "47",
    fileName: "u_lmihqescv.docx",
    fileSize: "172 GiB",
    status: "completed",
    remainingTime: "20 min",
    timeQueued: "2017-09-21 15:59:27",
    hash: "fa54fb6470926bfb",
    accumulatedData: "151",
    runningCost: "25 USD",
    projectedCost: "26 USD"
  },
  {
    id: "48",
    fileName: "ihktqcs.pptx",
    fileSize: "279 MiB",
    status: "error",
    remainingTime: "14 min",
    timeQueued: "2015-05-20 06:09:46",
    hash: "0f8b9a591b133ef0",
    accumulatedData: "129",
    runningCost: "7 USD",
    projectedCost: "15 USD"
  },
  {
    id: "49",
    fileName: "mkpiv.docx",
    fileSize: "546 GiB",
    status: "downloading",
    remainingTime: "16 h",
    timeQueued: "2003-07-28 08:36:27",
    hash: "ab0f90bd199cc88d",
    accumulatedData: "356",
    runningCost: "15 USD",
    projectedCost: "24 USD"
  },
  {
    id: "50",
    fileName: "murosivnkfd.pdf",
    fileSize: "686 TiB",
    status: "downloading",
    remainingTime: "5 min",
    timeQueued: "2021-01-28 10:15:12",
    hash: "c458831d2448b2f4",
    accumulatedData: "636",
    runningCost: "1 USD",
    projectedCost: "27 USD"
  },
  {
    id: "51",
    fileName: "itrneiae_.py",
    fileSize: "419 GiB",
    status: "completed",
    remainingTime: "19 min",
    timeQueued: "1998-02-15 04:23:51",
    hash: "274f56ccb647d69e",
    accumulatedData: "256",
    runningCost: "1 USD",
    projectedCost: "9 USD"
  },
  {
    id: "52",
    fileName: "entjk.rs",
    fileSize: "591 GiB",
    status: "downloading",
    remainingTime: "8 d",
    timeQueued: "1994-12-04 11:32:50",
    hash: "6d64eae46ffd755a",
    accumulatedData: "276",
    runningCost: "2 USD",
    projectedCost: "7 USD"
  },
  {
    id: "53",
    fileName: "rlsbkutim_gae.mp3",
    fileSize: "263 TiB",
    status: "error",
    remainingTime: "15 h",
    timeQueued: "2000-04-14 09:30:25",
    hash: "70f56e67a4bfe7d9",
    accumulatedData: "187",
    runningCost: "0 USD",
    projectedCost: "19 USD"
  },
  {
    id: "54",
    fileName: "daq.mp4",
    fileSize: "861 TiB",
    status: "error",
    remainingTime: "7 s",
    timeQueued: "2023-10-17 23:54:52",
    hash: "0fd24525e7152283",
    accumulatedData: "72",
    runningCost: "3 USD",
    projectedCost: "16 USD"
  },
  {
    id: "55",
    fileName: "quuopihvomkl.py",
    fileSize: "585 GiB",
    status: "completed",
    remainingTime: "4 s",
    timeQueued: "2016-03-26 20:48:44",
    hash: "81b428c357eb4e9b",
    accumulatedData: "170",
    runningCost: "9 USD",
    projectedCost: "21 USD"
  },
  {
    id: "56",
    fileName: "lnmei.docx",
    fileSize: "613 KiB",
    status: "paused",
    remainingTime: "10 h",
    timeQueued: "1981-12-19 16:21:42",
    hash: "306a58470d8f1f71",
    accumulatedData: "54",
    runningCost: "15 USD",
    projectedCost: "27 USD"
  },
  {
    id: "57",
    fileName: "vsr_qu.pptx",
    fileSize: "497 GiB",
    status: "completed",
    remainingTime: "23 min",
    timeQueued: "2003-12-28 11:29:25",
    hash: "5a0a3a143f1886a0",
    accumulatedData: "435",
    runningCost: "2 USD",
    projectedCost: "3 USD"
  },
  {
    id: "58",
    fileName: "mneilrghecafikb.rs",
    fileSize: "932 TiB",
    status: "error",
    remainingTime: "4 min",
    timeQueued: "2003-12-06 18:10:32",
    hash: "7cb83e2eb552e341",
    accumulatedData: "399",
    runningCost: "1 USD",
    projectedCost: "14 USD"
  },
  {
    id: "59",
    fileName: "ndub.pptx",
    fileSize: "63 TiB",
    status: "paused",
    remainingTime: "4 min",
    timeQueued: "1993-07-15 14:17:41",
    hash: "0b705ca177278dda",
    accumulatedData: "57",
    runningCost: "3 USD",
    projectedCost: "4 USD"
  },
  {
    id: "60",
    fileName: "_qvasg.pptx",
    fileSize: "975 TiB",
    status: "downloading",
    remainingTime: "14 s",
    timeQueued: "1982-05-06 21:14:09",
    hash: "a07973e8dafee03e",
    accumulatedData: "91",
    runningCost: "11 USD",
    projectedCost: "29 USD"
  },
  {
    id: "61",
    fileName: "ouomepaeni.mp3",
    fileSize: "649 GiB",
    status: "downloading",
    remainingTime: "19 h",
    timeQueued: "1984-12-24 05:49:59",
    hash: "e0ee13ec06bfdb17",
    accumulatedData: "603",
    runningCost: "1 USD",
    projectedCost: "6 USD"
  },
  {
    id: "62",
    fileName: "rlgctfkj.mp4",
    fileSize: "654 KiB",
    status: "error",
    remainingTime: "4 d",
    timeQueued: "1988-10-18 17:06:15",
    hash: "d60943a161c50765",
    accumulatedData: "463",
    runningCost: "22 USD",
    projectedCost: "22 USD"
  },
  {
    id: "63",
    fileName: "egp_qrivfktoub.py",
    fileSize: "445 KiB",
    status: "completed",
    remainingTime: "16 d",
    timeQueued: "1993-10-02 20:19:42",
    hash: "6fd83e5c79d9e827",
    accumulatedData: "282",
    runningCost: "4 USD",
    projectedCost: "6 USD"
  },
  {
    id: "64",
    fileName: "oeqtvmeiguohja_.pdf",
    fileSize: "673 GiB",
    status: "error",
    remainingTime: "19 s",
    timeQueued: "1986-01-11 13:41:34",
    hash: "aa0cf745b033d6f9",
    accumulatedData: "62",
    runningCost: "3 USD",
    projectedCost: "4 USD"
  }
];
const MarketPageContext = reactExports.createContext(
  {}
);
const MarketPage = () => {
  const [selectedJobs, setSelectedJobs] = reactExports.useState([]);
  const [jobInfoList$1, setJobInfoList] = reactExports.useState(jobInfoList);
  const updateJobStatuses = (newStatus) => {
    setJobInfoList((prevJobInfoList) => {
      return prevJobInfoList.map((job) => {
        if (selectedJobs.includes(job.id)) {
          return { ...job, status: newStatus };
        }
        return job;
      });
    });
  };
  const removeJobs = () => {
    setJobInfoList(
      (prevJobInfoList) => prevJobInfoList.filter((job) => !selectedJobs.includes(job.id))
    );
  };
  const addJob = (hash) => {
    setJobInfoList((prev) => {
      const newList = [...prev];
      const date2 = /* @__PURE__ */ new Date();
      newList.push({
        id: (parseInt(prev[prev.length - 1].id) + 1).toString(),
        fileName: `new_job${parseInt(prev[prev.length - 1].id) + 1}.json`,
        fileSize: 10 + Math.floor(Math.random() * 10) + 1 + " KiB",
        status: "downloading",
        remainingTime: Math.floor(Math.random() * 10) + 1 + " s",
        timeQueued: `${("0000" + date2.getFullYear()).slice(-4)}-${("00" + date2.getMonth()).slice(-2)}-${("00" + date2.getDay()).slice(-2)} ${("00" + date2.getHours()).slice(-2)}:${("00" + date2.getMinutes()).slice(-2)}:${("00" + date2.getSeconds()).slice(-2)}`,
        hash: `NeW_jOB${parseInt(prev[prev.length - 1].id) + 1}.jSoN`,
        accumulatedData: Math.floor(Math.random() * 10) + 1 + " KiB",
        runningCost: Math.floor(Math.random() * 10) + 1 + " USD",
        projectedCost: 10 + Math.floor(Math.random() * 10) + 1 + " USD"
      });
      return newList;
    });
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    MarketPageContext.Provider,
    {
      value: { selectedJobs, setSelectedJobs },
      children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { id: "market-page", className: "relative grow bg-background p-6", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          Overview,
          {
            jobInfoList: jobInfoList$1,
            updateJobStatuses,
            removeJobs,
            addJob
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          Details,
          {
            jobInfo: selectedJobs.length > 0 ? jobInfoList$1.filter((e3) => e3.id === selectedJobs[0])[0] : {
              id: "-1",
              fileName: "MissingNo",
              fileSize: "-1 KiB",
              status: "completed",
              remainingTime: "-1 s",
              timeQueued: "9999-99-99 99:99:99",
              hash: "OnGnIsSiM",
              accumulatedData: "-1",
              runningCost: "-1 USD",
              projectedCost: "-1 USD"
            }
          }
        )
      ] })
    }
  );
};
function WalletInfoCards() {
  async function copyIDToClipboard(e3) {
    await navigator.clipboard.writeText(e3.currentTarget.innerText);
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "grid grid-cols-4 gap-7 mb-7", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex justify-between bg-stone-900 text-white rounded-lg p-5 border", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: "text-lg mb-3 font-bold", children: "Balance" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "font-semibold", children: "100.00 ORC" })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex items-center h-full", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "p-3 bg-stone-800 rounded-lg size-fit", children: /* @__PURE__ */ jsxRuntimeExports.jsx(CircleDollarSign, {}) }) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex justify-between bg-white rounded-lg p-5 border", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "w-9/12", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: "text-lg mb-3 font-bold", children: "Wallet ID" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "p",
          {
            onClick: (e3) => copyIDToClipboard(e3),
            className: "w-full break-words font-semibold underline hover:cursor-pointer hover:text-indigo-500",
            children: "13hgriwdGXvPyWFABDX6QByyxvN8cWCgDp"
          }
        )
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex items-center h-full", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "p-3 bg-indigo-300 rounded-lg size-fit text-stone-900 border", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Info, {}) }) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex justify-between bg-white rounded-lg p-5 border", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "w-9/12", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: "text-lg mb-3 font-bold", children: "Monthly Earning" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "w-full break-words font-semibold", children: "100.00 ORC" })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex items-center h-full", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "p-3 bg-teal-200 rounded-lg size-fit text-stone-900 mr-3 border", children: /* @__PURE__ */ jsxRuntimeExports.jsx(TrendingUp, {}) }) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex justify-between bg-white rounded-lg p-5 border", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "w-9/12", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: "text-lg mb-3 font-bold", children: "Monthly Spent" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "w-full break-words font-semibold", children: "0 ORC" })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex items-center h-full", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "p-3 bg-rose-200 rounded-lg size-fit text-stone-900", children: /* @__PURE__ */ jsxRuntimeExports.jsx(TrendingDown, {}) }) })
    ] })
  ] });
}
var lib = {};
var mode$1 = {
  MODE_NUMBER: 1 << 0,
  MODE_ALPHA_NUM: 1 << 1,
  MODE_8BIT_BYTE: 1 << 2,
  MODE_KANJI: 1 << 3
};
var mode = mode$1;
function QR8bitByte(data2) {
  this.mode = mode.MODE_8BIT_BYTE;
  this.data = data2;
}
QR8bitByte.prototype = {
  getLength: function(buffer) {
    return this.data.length;
  },
  write: function(buffer) {
    for (var i2 = 0; i2 < this.data.length; i2++) {
      buffer.put(this.data.charCodeAt(i2), 8);
    }
  }
};
var _8BitByte = QR8bitByte;
var ErrorCorrectLevel = {
  L: 1,
  M: 0,
  Q: 3,
  H: 2
};
var ECL = ErrorCorrectLevel;
function QRRSBlock(totalCount, dataCount) {
  this.totalCount = totalCount;
  this.dataCount = dataCount;
}
QRRSBlock.RS_BLOCK_TABLE = [
  // L
  // M
  // Q
  // H
  // 1
  [1, 26, 19],
  [1, 26, 16],
  [1, 26, 13],
  [1, 26, 9],
  // 2
  [1, 44, 34],
  [1, 44, 28],
  [1, 44, 22],
  [1, 44, 16],
  // 3
  [1, 70, 55],
  [1, 70, 44],
  [2, 35, 17],
  [2, 35, 13],
  // 4		
  [1, 100, 80],
  [2, 50, 32],
  [2, 50, 24],
  [4, 25, 9],
  // 5
  [1, 134, 108],
  [2, 67, 43],
  [2, 33, 15, 2, 34, 16],
  [2, 33, 11, 2, 34, 12],
  // 6
  [2, 86, 68],
  [4, 43, 27],
  [4, 43, 19],
  [4, 43, 15],
  // 7		
  [2, 98, 78],
  [4, 49, 31],
  [2, 32, 14, 4, 33, 15],
  [4, 39, 13, 1, 40, 14],
  // 8
  [2, 121, 97],
  [2, 60, 38, 2, 61, 39],
  [4, 40, 18, 2, 41, 19],
  [4, 40, 14, 2, 41, 15],
  // 9
  [2, 146, 116],
  [3, 58, 36, 2, 59, 37],
  [4, 36, 16, 4, 37, 17],
  [4, 36, 12, 4, 37, 13],
  // 10		
  [2, 86, 68, 2, 87, 69],
  [4, 69, 43, 1, 70, 44],
  [6, 43, 19, 2, 44, 20],
  [6, 43, 15, 2, 44, 16],
  // 11
  [4, 101, 81],
  [1, 80, 50, 4, 81, 51],
  [4, 50, 22, 4, 51, 23],
  [3, 36, 12, 8, 37, 13],
  // 12
  [2, 116, 92, 2, 117, 93],
  [6, 58, 36, 2, 59, 37],
  [4, 46, 20, 6, 47, 21],
  [7, 42, 14, 4, 43, 15],
  // 13
  [4, 133, 107],
  [8, 59, 37, 1, 60, 38],
  [8, 44, 20, 4, 45, 21],
  [12, 33, 11, 4, 34, 12],
  // 14
  [3, 145, 115, 1, 146, 116],
  [4, 64, 40, 5, 65, 41],
  [11, 36, 16, 5, 37, 17],
  [11, 36, 12, 5, 37, 13],
  // 15
  [5, 109, 87, 1, 110, 88],
  [5, 65, 41, 5, 66, 42],
  [5, 54, 24, 7, 55, 25],
  [11, 36, 12],
  // 16
  [5, 122, 98, 1, 123, 99],
  [7, 73, 45, 3, 74, 46],
  [15, 43, 19, 2, 44, 20],
  [3, 45, 15, 13, 46, 16],
  // 17
  [1, 135, 107, 5, 136, 108],
  [10, 74, 46, 1, 75, 47],
  [1, 50, 22, 15, 51, 23],
  [2, 42, 14, 17, 43, 15],
  // 18
  [5, 150, 120, 1, 151, 121],
  [9, 69, 43, 4, 70, 44],
  [17, 50, 22, 1, 51, 23],
  [2, 42, 14, 19, 43, 15],
  // 19
  [3, 141, 113, 4, 142, 114],
  [3, 70, 44, 11, 71, 45],
  [17, 47, 21, 4, 48, 22],
  [9, 39, 13, 16, 40, 14],
  // 20
  [3, 135, 107, 5, 136, 108],
  [3, 67, 41, 13, 68, 42],
  [15, 54, 24, 5, 55, 25],
  [15, 43, 15, 10, 44, 16],
  // 21
  [4, 144, 116, 4, 145, 117],
  [17, 68, 42],
  [17, 50, 22, 6, 51, 23],
  [19, 46, 16, 6, 47, 17],
  // 22
  [2, 139, 111, 7, 140, 112],
  [17, 74, 46],
  [7, 54, 24, 16, 55, 25],
  [34, 37, 13],
  // 23
  [4, 151, 121, 5, 152, 122],
  [4, 75, 47, 14, 76, 48],
  [11, 54, 24, 14, 55, 25],
  [16, 45, 15, 14, 46, 16],
  // 24
  [6, 147, 117, 4, 148, 118],
  [6, 73, 45, 14, 74, 46],
  [11, 54, 24, 16, 55, 25],
  [30, 46, 16, 2, 47, 17],
  // 25
  [8, 132, 106, 4, 133, 107],
  [8, 75, 47, 13, 76, 48],
  [7, 54, 24, 22, 55, 25],
  [22, 45, 15, 13, 46, 16],
  // 26
  [10, 142, 114, 2, 143, 115],
  [19, 74, 46, 4, 75, 47],
  [28, 50, 22, 6, 51, 23],
  [33, 46, 16, 4, 47, 17],
  // 27
  [8, 152, 122, 4, 153, 123],
  [22, 73, 45, 3, 74, 46],
  [8, 53, 23, 26, 54, 24],
  [12, 45, 15, 28, 46, 16],
  // 28
  [3, 147, 117, 10, 148, 118],
  [3, 73, 45, 23, 74, 46],
  [4, 54, 24, 31, 55, 25],
  [11, 45, 15, 31, 46, 16],
  // 29
  [7, 146, 116, 7, 147, 117],
  [21, 73, 45, 7, 74, 46],
  [1, 53, 23, 37, 54, 24],
  [19, 45, 15, 26, 46, 16],
  // 30
  [5, 145, 115, 10, 146, 116],
  [19, 75, 47, 10, 76, 48],
  [15, 54, 24, 25, 55, 25],
  [23, 45, 15, 25, 46, 16],
  // 31
  [13, 145, 115, 3, 146, 116],
  [2, 74, 46, 29, 75, 47],
  [42, 54, 24, 1, 55, 25],
  [23, 45, 15, 28, 46, 16],
  // 32
  [17, 145, 115],
  [10, 74, 46, 23, 75, 47],
  [10, 54, 24, 35, 55, 25],
  [19, 45, 15, 35, 46, 16],
  // 33
  [17, 145, 115, 1, 146, 116],
  [14, 74, 46, 21, 75, 47],
  [29, 54, 24, 19, 55, 25],
  [11, 45, 15, 46, 46, 16],
  // 34
  [13, 145, 115, 6, 146, 116],
  [14, 74, 46, 23, 75, 47],
  [44, 54, 24, 7, 55, 25],
  [59, 46, 16, 1, 47, 17],
  // 35
  [12, 151, 121, 7, 152, 122],
  [12, 75, 47, 26, 76, 48],
  [39, 54, 24, 14, 55, 25],
  [22, 45, 15, 41, 46, 16],
  // 36
  [6, 151, 121, 14, 152, 122],
  [6, 75, 47, 34, 76, 48],
  [46, 54, 24, 10, 55, 25],
  [2, 45, 15, 64, 46, 16],
  // 37
  [17, 152, 122, 4, 153, 123],
  [29, 74, 46, 14, 75, 47],
  [49, 54, 24, 10, 55, 25],
  [24, 45, 15, 46, 46, 16],
  // 38
  [4, 152, 122, 18, 153, 123],
  [13, 74, 46, 32, 75, 47],
  [48, 54, 24, 14, 55, 25],
  [42, 45, 15, 32, 46, 16],
  // 39
  [20, 147, 117, 4, 148, 118],
  [40, 75, 47, 7, 76, 48],
  [43, 54, 24, 22, 55, 25],
  [10, 45, 15, 67, 46, 16],
  // 40
  [19, 148, 118, 6, 149, 119],
  [18, 75, 47, 31, 76, 48],
  [34, 54, 24, 34, 55, 25],
  [20, 45, 15, 61, 46, 16]
];
QRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {
  var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);
  if (rsBlock == void 0) {
    throw new Error("bad rs block @ typeNumber:" + typeNumber + "/errorCorrectLevel:" + errorCorrectLevel);
  }
  var length2 = rsBlock.length / 3;
  var list = new Array();
  for (var i2 = 0; i2 < length2; i2++) {
    var count2 = rsBlock[i2 * 3 + 0];
    var totalCount = rsBlock[i2 * 3 + 1];
    var dataCount = rsBlock[i2 * 3 + 2];
    for (var j = 0; j < count2; j++) {
      list.push(new QRRSBlock(totalCount, dataCount));
    }
  }
  return list;
};
QRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {
  switch (errorCorrectLevel) {
    case ECL.L:
      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];
    case ECL.M:
      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];
    case ECL.Q:
      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];
    case ECL.H:
      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];
    default:
      return void 0;
  }
};
var RSBlock$1 = QRRSBlock;
function QRBitBuffer() {
  this.buffer = new Array();
  this.length = 0;
}
QRBitBuffer.prototype = {
  get: function(index2) {
    var bufIndex = Math.floor(index2 / 8);
    return (this.buffer[bufIndex] >>> 7 - index2 % 8 & 1) == 1;
  },
  put: function(num, length2) {
    for (var i2 = 0; i2 < length2; i2++) {
      this.putBit((num >>> length2 - i2 - 1 & 1) == 1);
    }
  },
  getLengthInBits: function() {
    return this.length;
  },
  putBit: function(bit) {
    var bufIndex = Math.floor(this.length / 8);
    if (this.buffer.length <= bufIndex) {
      this.buffer.push(0);
    }
    if (bit) {
      this.buffer[bufIndex] |= 128 >>> this.length % 8;
    }
    this.length++;
  }
};
var BitBuffer$1 = QRBitBuffer;
var QRMath = {
  glog: function(n2) {
    if (n2 < 1) {
      throw new Error("glog(" + n2 + ")");
    }
    return QRMath.LOG_TABLE[n2];
  },
  gexp: function(n2) {
    while (n2 < 0) {
      n2 += 255;
    }
    while (n2 >= 256) {
      n2 -= 255;
    }
    return QRMath.EXP_TABLE[n2];
  },
  EXP_TABLE: new Array(256),
  LOG_TABLE: new Array(256)
};
for (var i$1 = 0; i$1 < 8; i$1++) {
  QRMath.EXP_TABLE[i$1] = 1 << i$1;
}
for (var i$1 = 8; i$1 < 256; i$1++) {
  QRMath.EXP_TABLE[i$1] = QRMath.EXP_TABLE[i$1 - 4] ^ QRMath.EXP_TABLE[i$1 - 5] ^ QRMath.EXP_TABLE[i$1 - 6] ^ QRMath.EXP_TABLE[i$1 - 8];
}
for (var i$1 = 0; i$1 < 255; i$1++) {
  QRMath.LOG_TABLE[QRMath.EXP_TABLE[i$1]] = i$1;
}
var math$2 = QRMath;
var math$1 = math$2;
function QRPolynomial(num, shift2) {
  if (num.length == void 0) {
    throw new Error(num.length + "/" + shift2);
  }
  var offset2 = 0;
  while (offset2 < num.length && num[offset2] == 0) {
    offset2++;
  }
  this.num = new Array(num.length - offset2 + shift2);
  for (var i2 = 0; i2 < num.length - offset2; i2++) {
    this.num[i2] = num[i2 + offset2];
  }
}
QRPolynomial.prototype = {
  get: function(index2) {
    return this.num[index2];
  },
  getLength: function() {
    return this.num.length;
  },
  multiply: function(e3) {
    var num = new Array(this.getLength() + e3.getLength() - 1);
    for (var i2 = 0; i2 < this.getLength(); i2++) {
      for (var j = 0; j < e3.getLength(); j++) {
        num[i2 + j] ^= math$1.gexp(math$1.glog(this.get(i2)) + math$1.glog(e3.get(j)));
      }
    }
    return new QRPolynomial(num, 0);
  },
  mod: function(e3) {
    if (this.getLength() - e3.getLength() < 0) {
      return this;
    }
    var ratio = math$1.glog(this.get(0)) - math$1.glog(e3.get(0));
    var num = new Array(this.getLength());
    for (var i2 = 0; i2 < this.getLength(); i2++) {
      num[i2] = this.get(i2);
    }
    for (var i2 = 0; i2 < e3.getLength(); i2++) {
      num[i2] ^= math$1.gexp(math$1.glog(e3.get(i2)) + ratio);
    }
    return new QRPolynomial(num, 0).mod(e3);
  }
};
var Polynomial$2 = QRPolynomial;
var Mode = mode$1;
var Polynomial$1 = Polynomial$2;
var math = math$2;
var QRMaskPattern = {
  PATTERN000: 0,
  PATTERN001: 1,
  PATTERN010: 2,
  PATTERN011: 3,
  PATTERN100: 4,
  PATTERN101: 5,
  PATTERN110: 6,
  PATTERN111: 7
};
var QRUtil = {
  PATTERN_POSITION_TABLE: [
    [],
    [6, 18],
    [6, 22],
    [6, 26],
    [6, 30],
    [6, 34],
    [6, 22, 38],
    [6, 24, 42],
    [6, 26, 46],
    [6, 28, 50],
    [6, 30, 54],
    [6, 32, 58],
    [6, 34, 62],
    [6, 26, 46, 66],
    [6, 26, 48, 70],
    [6, 26, 50, 74],
    [6, 30, 54, 78],
    [6, 30, 56, 82],
    [6, 30, 58, 86],
    [6, 34, 62, 90],
    [6, 28, 50, 72, 94],
    [6, 26, 50, 74, 98],
    [6, 30, 54, 78, 102],
    [6, 28, 54, 80, 106],
    [6, 32, 58, 84, 110],
    [6, 30, 58, 86, 114],
    [6, 34, 62, 90, 118],
    [6, 26, 50, 74, 98, 122],
    [6, 30, 54, 78, 102, 126],
    [6, 26, 52, 78, 104, 130],
    [6, 30, 56, 82, 108, 134],
    [6, 34, 60, 86, 112, 138],
    [6, 30, 58, 86, 114, 142],
    [6, 34, 62, 90, 118, 146],
    [6, 30, 54, 78, 102, 126, 150],
    [6, 24, 50, 76, 102, 128, 154],
    [6, 28, 54, 80, 106, 132, 158],
    [6, 32, 58, 84, 110, 136, 162],
    [6, 26, 54, 82, 110, 138, 166],
    [6, 30, 58, 86, 114, 142, 170]
  ],
  G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,
  G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,
  G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,
  getBCHTypeInfo: function(data2) {
    var d2 = data2 << 10;
    while (QRUtil.getBCHDigit(d2) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {
      d2 ^= QRUtil.G15 << QRUtil.getBCHDigit(d2) - QRUtil.getBCHDigit(QRUtil.G15);
    }
    return (data2 << 10 | d2) ^ QRUtil.G15_MASK;
  },
  getBCHTypeNumber: function(data2) {
    var d2 = data2 << 12;
    while (QRUtil.getBCHDigit(d2) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {
      d2 ^= QRUtil.G18 << QRUtil.getBCHDigit(d2) - QRUtil.getBCHDigit(QRUtil.G18);
    }
    return data2 << 12 | d2;
  },
  getBCHDigit: function(data2) {
    var digit = 0;
    while (data2 != 0) {
      digit++;
      data2 >>>= 1;
    }
    return digit;
  },
  getPatternPosition: function(typeNumber) {
    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];
  },
  getMask: function(maskPattern, i2, j) {
    switch (maskPattern) {
      case QRMaskPattern.PATTERN000:
        return (i2 + j) % 2 == 0;
      case QRMaskPattern.PATTERN001:
        return i2 % 2 == 0;
      case QRMaskPattern.PATTERN010:
        return j % 3 == 0;
      case QRMaskPattern.PATTERN011:
        return (i2 + j) % 3 == 0;
      case QRMaskPattern.PATTERN100:
        return (Math.floor(i2 / 2) + Math.floor(j / 3)) % 2 == 0;
      case QRMaskPattern.PATTERN101:
        return i2 * j % 2 + i2 * j % 3 == 0;
      case QRMaskPattern.PATTERN110:
        return (i2 * j % 2 + i2 * j % 3) % 2 == 0;
      case QRMaskPattern.PATTERN111:
        return (i2 * j % 3 + (i2 + j) % 2) % 2 == 0;
      default:
        throw new Error("bad maskPattern:" + maskPattern);
    }
  },
  getErrorCorrectPolynomial: function(errorCorrectLength) {
    var a2 = new Polynomial$1([1], 0);
    for (var i2 = 0; i2 < errorCorrectLength; i2++) {
      a2 = a2.multiply(new Polynomial$1([1, math.gexp(i2)], 0));
    }
    return a2;
  },
  getLengthInBits: function(mode2, type2) {
    if (1 <= type2 && type2 < 10) {
      switch (mode2) {
        case Mode.MODE_NUMBER:
          return 10;
        case Mode.MODE_ALPHA_NUM:
          return 9;
        case Mode.MODE_8BIT_BYTE:
          return 8;
        case Mode.MODE_KANJI:
          return 8;
        default:
          throw new Error("mode:" + mode2);
      }
    } else if (type2 < 27) {
      switch (mode2) {
        case Mode.MODE_NUMBER:
          return 12;
        case Mode.MODE_ALPHA_NUM:
          return 11;
        case Mode.MODE_8BIT_BYTE:
          return 16;
        case Mode.MODE_KANJI:
          return 10;
        default:
          throw new Error("mode:" + mode2);
      }
    } else if (type2 < 41) {
      switch (mode2) {
        case Mode.MODE_NUMBER:
          return 14;
        case Mode.MODE_ALPHA_NUM:
          return 13;
        case Mode.MODE_8BIT_BYTE:
          return 16;
        case Mode.MODE_KANJI:
          return 12;
        default:
          throw new Error("mode:" + mode2);
      }
    } else {
      throw new Error("type:" + type2);
    }
  },
  getLostPoint: function(qrCode) {
    var moduleCount = qrCode.getModuleCount();
    var lostPoint = 0;
    for (var row = 0; row < moduleCount; row++) {
      for (var col = 0; col < moduleCount; col++) {
        var sameCount = 0;
        var dark = qrCode.isDark(row, col);
        for (var r2 = -1; r2 <= 1; r2++) {
          if (row + r2 < 0 || moduleCount <= row + r2) {
            continue;
          }
          for (var c2 = -1; c2 <= 1; c2++) {
            if (col + c2 < 0 || moduleCount <= col + c2) {
              continue;
            }
            if (r2 == 0 && c2 == 0) {
              continue;
            }
            if (dark == qrCode.isDark(row + r2, col + c2)) {
              sameCount++;
            }
          }
        }
        if (sameCount > 5) {
          lostPoint += 3 + sameCount - 5;
        }
      }
    }
    for (var row = 0; row < moduleCount - 1; row++) {
      for (var col = 0; col < moduleCount - 1; col++) {
        var count2 = 0;
        if (qrCode.isDark(row, col))
          count2++;
        if (qrCode.isDark(row + 1, col))
          count2++;
        if (qrCode.isDark(row, col + 1))
          count2++;
        if (qrCode.isDark(row + 1, col + 1))
          count2++;
        if (count2 == 0 || count2 == 4) {
          lostPoint += 3;
        }
      }
    }
    for (var row = 0; row < moduleCount; row++) {
      for (var col = 0; col < moduleCount - 6; col++) {
        if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {
          lostPoint += 40;
        }
      }
    }
    for (var col = 0; col < moduleCount; col++) {
      for (var row = 0; row < moduleCount - 6; row++) {
        if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {
          lostPoint += 40;
        }
      }
    }
    var darkCount = 0;
    for (var col = 0; col < moduleCount; col++) {
      for (var row = 0; row < moduleCount; row++) {
        if (qrCode.isDark(row, col)) {
          darkCount++;
        }
      }
    }
    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;
    lostPoint += ratio * 10;
    return lostPoint;
  }
};
var util$2 = QRUtil;
var BitByte = _8BitByte;
var RSBlock = RSBlock$1;
var BitBuffer = BitBuffer$1;
var util$1 = util$2;
var Polynomial = Polynomial$2;
function QRCode$1(typeNumber, errorCorrectLevel) {
  this.typeNumber = typeNumber;
  this.errorCorrectLevel = errorCorrectLevel;
  this.modules = null;
  this.moduleCount = 0;
  this.dataCache = null;
  this.dataList = [];
}
var proto = QRCode$1.prototype;
proto.addData = function(data2) {
  var newData = new BitByte(data2);
  this.dataList.push(newData);
  this.dataCache = null;
};
proto.isDark = function(row, col) {
  if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {
    throw new Error(row + "," + col);
  }
  return this.modules[row][col];
};
proto.getModuleCount = function() {
  return this.moduleCount;
};
proto.make = function() {
  if (this.typeNumber < 1) {
    var typeNumber = 1;
    for (typeNumber = 1; typeNumber < 40; typeNumber++) {
      var rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);
      var buffer = new BitBuffer();
      var totalDataCount = 0;
      for (var i2 = 0; i2 < rsBlocks.length; i2++) {
        totalDataCount += rsBlocks[i2].dataCount;
      }
      for (var i2 = 0; i2 < this.dataList.length; i2++) {
        var data2 = this.dataList[i2];
        buffer.put(data2.mode, 4);
        buffer.put(data2.getLength(), util$1.getLengthInBits(data2.mode, typeNumber));
        data2.write(buffer);
      }
      if (buffer.getLengthInBits() <= totalDataCount * 8)
        break;
    }
    this.typeNumber = typeNumber;
  }
  this.makeImpl(false, this.getBestMaskPattern());
};
proto.makeImpl = function(test, maskPattern) {
  this.moduleCount = this.typeNumber * 4 + 17;
  this.modules = new Array(this.moduleCount);
  for (var row = 0; row < this.moduleCount; row++) {
    this.modules[row] = new Array(this.moduleCount);
    for (var col = 0; col < this.moduleCount; col++) {
      this.modules[row][col] = null;
    }
  }
  this.setupPositionProbePattern(0, 0);
  this.setupPositionProbePattern(this.moduleCount - 7, 0);
  this.setupPositionProbePattern(0, this.moduleCount - 7);
  this.setupPositionAdjustPattern();
  this.setupTimingPattern();
  this.setupTypeInfo(test, maskPattern);
  if (this.typeNumber >= 7) {
    this.setupTypeNumber(test);
  }
  if (this.dataCache == null) {
    this.dataCache = QRCode$1.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);
  }
  this.mapData(this.dataCache, maskPattern);
};
proto.setupPositionProbePattern = function(row, col) {
  for (var r2 = -1; r2 <= 7; r2++) {
    if (row + r2 <= -1 || this.moduleCount <= row + r2)
      continue;
    for (var c2 = -1; c2 <= 7; c2++) {
      if (col + c2 <= -1 || this.moduleCount <= col + c2)
        continue;
      if (0 <= r2 && r2 <= 6 && (c2 == 0 || c2 == 6) || 0 <= c2 && c2 <= 6 && (r2 == 0 || r2 == 6) || 2 <= r2 && r2 <= 4 && 2 <= c2 && c2 <= 4) {
        this.modules[row + r2][col + c2] = true;
      } else {
        this.modules[row + r2][col + c2] = false;
      }
    }
  }
};
proto.getBestMaskPattern = function() {
  var minLostPoint = 0;
  var pattern = 0;
  for (var i2 = 0; i2 < 8; i2++) {
    this.makeImpl(true, i2);
    var lostPoint = util$1.getLostPoint(this);
    if (i2 == 0 || minLostPoint > lostPoint) {
      minLostPoint = lostPoint;
      pattern = i2;
    }
  }
  return pattern;
};
proto.createMovieClip = function(target_mc, instance_name, depth) {
  var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);
  var cs = 1;
  this.make();
  for (var row = 0; row < this.modules.length; row++) {
    var y2 = row * cs;
    for (var col = 0; col < this.modules[row].length; col++) {
      var x2 = col * cs;
      var dark = this.modules[row][col];
      if (dark) {
        qr_mc.beginFill(0, 100);
        qr_mc.moveTo(x2, y2);
        qr_mc.lineTo(x2 + cs, y2);
        qr_mc.lineTo(x2 + cs, y2 + cs);
        qr_mc.lineTo(x2, y2 + cs);
        qr_mc.endFill();
      }
    }
  }
  return qr_mc;
};
proto.setupTimingPattern = function() {
  for (var r2 = 8; r2 < this.moduleCount - 8; r2++) {
    if (this.modules[r2][6] != null) {
      continue;
    }
    this.modules[r2][6] = r2 % 2 == 0;
  }
  for (var c2 = 8; c2 < this.moduleCount - 8; c2++) {
    if (this.modules[6][c2] != null) {
      continue;
    }
    this.modules[6][c2] = c2 % 2 == 0;
  }
};
proto.setupPositionAdjustPattern = function() {
  var pos = util$1.getPatternPosition(this.typeNumber);
  for (var i2 = 0; i2 < pos.length; i2++) {
    for (var j = 0; j < pos.length; j++) {
      var row = pos[i2];
      var col = pos[j];
      if (this.modules[row][col] != null) {
        continue;
      }
      for (var r2 = -2; r2 <= 2; r2++) {
        for (var c2 = -2; c2 <= 2; c2++) {
          if (r2 == -2 || r2 == 2 || c2 == -2 || c2 == 2 || r2 == 0 && c2 == 0) {
            this.modules[row + r2][col + c2] = true;
          } else {
            this.modules[row + r2][col + c2] = false;
          }
        }
      }
    }
  }
};
proto.setupTypeNumber = function(test) {
  var bits = util$1.getBCHTypeNumber(this.typeNumber);
  for (var i2 = 0; i2 < 18; i2++) {
    var mod = !test && (bits >> i2 & 1) == 1;
    this.modules[Math.floor(i2 / 3)][i2 % 3 + this.moduleCount - 8 - 3] = mod;
  }
  for (var i2 = 0; i2 < 18; i2++) {
    var mod = !test && (bits >> i2 & 1) == 1;
    this.modules[i2 % 3 + this.moduleCount - 8 - 3][Math.floor(i2 / 3)] = mod;
  }
};
proto.setupTypeInfo = function(test, maskPattern) {
  var data2 = this.errorCorrectLevel << 3 | maskPattern;
  var bits = util$1.getBCHTypeInfo(data2);
  for (var i2 = 0; i2 < 15; i2++) {
    var mod = !test && (bits >> i2 & 1) == 1;
    if (i2 < 6) {
      this.modules[i2][8] = mod;
    } else if (i2 < 8) {
      this.modules[i2 + 1][8] = mod;
    } else {
      this.modules[this.moduleCount - 15 + i2][8] = mod;
    }
  }
  for (var i2 = 0; i2 < 15; i2++) {
    var mod = !test && (bits >> i2 & 1) == 1;
    if (i2 < 8) {
      this.modules[8][this.moduleCount - i2 - 1] = mod;
    } else if (i2 < 9) {
      this.modules[8][15 - i2 - 1 + 1] = mod;
    } else {
      this.modules[8][15 - i2 - 1] = mod;
    }
  }
  this.modules[this.moduleCount - 8][8] = !test;
};
proto.mapData = function(data2, maskPattern) {
  var inc = -1;
  var row = this.moduleCount - 1;
  var bitIndex = 7;
  var byteIndex = 0;
  for (var col = this.moduleCount - 1; col > 0; col -= 2) {
    if (col == 6)
      col--;
    while (true) {
      for (var c2 = 0; c2 < 2; c2++) {
        if (this.modules[row][col - c2] == null) {
          var dark = false;
          if (byteIndex < data2.length) {
            dark = (data2[byteIndex] >>> bitIndex & 1) == 1;
          }
          var mask = util$1.getMask(maskPattern, row, col - c2);
          if (mask) {
            dark = !dark;
          }
          this.modules[row][col - c2] = dark;
          bitIndex--;
          if (bitIndex == -1) {
            byteIndex++;
            bitIndex = 7;
          }
        }
      }
      row += inc;
      if (row < 0 || this.moduleCount <= row) {
        row -= inc;
        inc = -inc;
        break;
      }
    }
  }
};
QRCode$1.PAD0 = 236;
QRCode$1.PAD1 = 17;
QRCode$1.createData = function(typeNumber, errorCorrectLevel, dataList) {
  var rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);
  var buffer = new BitBuffer();
  for (var i2 = 0; i2 < dataList.length; i2++) {
    var data2 = dataList[i2];
    buffer.put(data2.mode, 4);
    buffer.put(data2.getLength(), util$1.getLengthInBits(data2.mode, typeNumber));
    data2.write(buffer);
  }
  var totalDataCount = 0;
  for (var i2 = 0; i2 < rsBlocks.length; i2++) {
    totalDataCount += rsBlocks[i2].dataCount;
  }
  if (buffer.getLengthInBits() > totalDataCount * 8) {
    throw new Error("code length overflow. (" + buffer.getLengthInBits() + ">" + totalDataCount * 8 + ")");
  }
  if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {
    buffer.put(0, 4);
  }
  while (buffer.getLengthInBits() % 8 != 0) {
    buffer.putBit(false);
  }
  while (true) {
    if (buffer.getLengthInBits() >= totalDataCount * 8) {
      break;
    }
    buffer.put(QRCode$1.PAD0, 8);
    if (buffer.getLengthInBits() >= totalDataCount * 8) {
      break;
    }
    buffer.put(QRCode$1.PAD1, 8);
  }
  return QRCode$1.createBytes(buffer, rsBlocks);
};
QRCode$1.createBytes = function(buffer, rsBlocks) {
  var offset2 = 0;
  var maxDcCount = 0;
  var maxEcCount = 0;
  var dcdata = new Array(rsBlocks.length);
  var ecdata = new Array(rsBlocks.length);
  for (var r2 = 0; r2 < rsBlocks.length; r2++) {
    var dcCount = rsBlocks[r2].dataCount;
    var ecCount = rsBlocks[r2].totalCount - dcCount;
    maxDcCount = Math.max(maxDcCount, dcCount);
    maxEcCount = Math.max(maxEcCount, ecCount);
    dcdata[r2] = new Array(dcCount);
    for (var i2 = 0; i2 < dcdata[r2].length; i2++) {
      dcdata[r2][i2] = 255 & buffer.buffer[i2 + offset2];
    }
    offset2 += dcCount;
    var rsPoly = util$1.getErrorCorrectPolynomial(ecCount);
    var rawPoly = new Polynomial(dcdata[r2], rsPoly.getLength() - 1);
    var modPoly = rawPoly.mod(rsPoly);
    ecdata[r2] = new Array(rsPoly.getLength() - 1);
    for (var i2 = 0; i2 < ecdata[r2].length; i2++) {
      var modIndex = i2 + modPoly.getLength() - ecdata[r2].length;
      ecdata[r2][i2] = modIndex >= 0 ? modPoly.get(modIndex) : 0;
    }
  }
  var totalCodeCount = 0;
  for (var i2 = 0; i2 < rsBlocks.length; i2++) {
    totalCodeCount += rsBlocks[i2].totalCount;
  }
  var data2 = new Array(totalCodeCount);
  var index2 = 0;
  for (var i2 = 0; i2 < maxDcCount; i2++) {
    for (var r2 = 0; r2 < rsBlocks.length; r2++) {
      if (i2 < dcdata[r2].length) {
        data2[index2++] = dcdata[r2][i2];
      }
    }
  }
  for (var i2 = 0; i2 < maxEcCount; i2++) {
    for (var r2 = 0; r2 < rsBlocks.length; r2++) {
      if (i2 < ecdata[r2].length) {
        data2[index2++] = ecdata[r2][i2];
      }
    }
  }
  return data2;
};
var QRCode_1 = QRCode$1;
var QRCodeSvg$1 = {};
Object.defineProperty(QRCodeSvg$1, "__esModule", {
  value: true
});
var _extends$5 = Object.assign || function(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _propTypes$1 = propTypesExports;
var _propTypes2$1 = _interopRequireDefault$1(_propTypes$1);
var _react$1 = reactExports;
var _react2$1 = _interopRequireDefault$1(_react$1);
function _interopRequireDefault$1(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
function _objectWithoutProperties$2(obj, keys2) {
  var target = {};
  for (var i2 in obj) {
    if (keys2.indexOf(i2) >= 0)
      continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i2))
      continue;
    target[i2] = obj[i2];
  }
  return target;
}
var propTypes$1 = {
  bgColor: _propTypes2$1.default.oneOfType([_propTypes2$1.default.object, _propTypes2$1.default.string]).isRequired,
  bgD: _propTypes2$1.default.string.isRequired,
  fgColor: _propTypes2$1.default.oneOfType([_propTypes2$1.default.object, _propTypes2$1.default.string]).isRequired,
  fgD: _propTypes2$1.default.string.isRequired,
  size: _propTypes2$1.default.number.isRequired,
  title: _propTypes2$1.default.string,
  viewBoxSize: _propTypes2$1.default.number.isRequired,
  xmlns: _propTypes2$1.default.string
};
var defaultProps$1 = {
  title: void 0,
  xmlns: "http://www.w3.org/2000/svg"
};
var QRCodeSvg = (0, _react$1.forwardRef)(function(_ref, ref) {
  var bgColor = _ref.bgColor, bgD = _ref.bgD, fgD = _ref.fgD, fgColor = _ref.fgColor, size2 = _ref.size, title = _ref.title, viewBoxSize = _ref.viewBoxSize, props = _objectWithoutProperties$2(_ref, ["bgColor", "bgD", "fgD", "fgColor", "size", "title", "viewBoxSize"]);
  return _react2$1.default.createElement(
    "svg",
    _extends$5({}, props, { height: size2, ref, viewBox: "0 0 " + viewBoxSize + " " + viewBoxSize, width: size2 }),
    title ? _react2$1.default.createElement(
      "title",
      null,
      title
    ) : null,
    _react2$1.default.createElement("path", { d: bgD, fill: bgColor }),
    _react2$1.default.createElement("path", { d: fgD, fill: fgColor })
  );
});
QRCodeSvg.displayName = "QRCodeSvg";
QRCodeSvg.propTypes = propTypes$1;
QRCodeSvg.defaultProps = defaultProps$1;
QRCodeSvg$1.default = QRCodeSvg;
Object.defineProperty(lib, "__esModule", {
  value: true
});
lib.QRCode = void 0;
var _extends$4 = Object.assign || function(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _QRCode = QRCode_1;
var _QRCode2 = _interopRequireDefault(_QRCode);
var _ErrorCorrectLevel = ErrorCorrectLevel;
var _ErrorCorrectLevel2 = _interopRequireDefault(_ErrorCorrectLevel);
var _propTypes = propTypesExports;
var _propTypes2 = _interopRequireDefault(_propTypes);
var _react = reactExports;
var _react2 = _interopRequireDefault(_react);
var _QRCodeSvg = QRCodeSvg$1;
var _QRCodeSvg2 = _interopRequireDefault(_QRCodeSvg);
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
function _objectWithoutProperties$1(obj, keys2) {
  var target = {};
  for (var i2 in obj) {
    if (keys2.indexOf(i2) >= 0)
      continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i2))
      continue;
    target[i2] = obj[i2];
  }
  return target;
}
var propTypes = {
  bgColor: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),
  fgColor: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),
  level: _propTypes2.default.string,
  size: _propTypes2.default.number,
  value: _propTypes2.default.string.isRequired
};
var defaultProps = {
  bgColor: "#FFFFFF",
  fgColor: "#000000",
  level: "L",
  size: 256
};
var QRCode = (0, _react.forwardRef)(function(_ref, ref) {
  var bgColor = _ref.bgColor, fgColor = _ref.fgColor, level = _ref.level, size2 = _ref.size, value = _ref.value, props = _objectWithoutProperties$1(_ref, ["bgColor", "fgColor", "level", "size", "value"]);
  var qrcode = new _QRCode2.default(-1, _ErrorCorrectLevel2.default[level]);
  qrcode.addData(value);
  qrcode.make();
  var cells = qrcode.modules;
  return _react2.default.createElement(_QRCodeSvg2.default, _extends$4({}, props, {
    bgColor,
    bgD: cells.map(function(row, rowIndex) {
      return row.map(function(cell, cellIndex) {
        return !cell ? "M " + cellIndex + " " + rowIndex + " l 1 0 0 1 -1 0 Z" : "";
      }).join(" ");
    }).join(" "),
    fgColor,
    fgD: cells.map(function(row, rowIndex) {
      return row.map(function(cell, cellIndex) {
        return cell ? "M " + cellIndex + " " + rowIndex + " l 1 0 0 1 -1 0 Z" : "";
      }).join(" ");
    }).join(" "),
    ref,
    size: size2,
    viewBoxSize: cells.length
  }));
});
lib.QRCode = QRCode;
QRCode.displayName = "QRCode";
QRCode.propTypes = propTypes;
QRCode.defaultProps = defaultProps;
var _default = lib.default = QRCode;
function MonthlyIncomeChart() {
  const series = [
    {
      name: "Revenue",
      data: [76, 85, 101, 98, 87, 105, 91, 114, 100]
    },
    {
      name: "Spending",
      data: [35, 41, 36, 26, 45, 48, 52, 53, 41]
    }
  ];
  const options = {
    chart: {
      id: "basic-bar"
    },
    xaxis: {
      categories: [
        "Jun",
        "Jul",
        "Aug",
        "Sept",
        "Oct",
        "Nov",
        "Dec",
        "Jan",
        "Feb"
      ]
    },
    yaxis: {
      title: {
        text: "OrcaCoins (ORC)"
      }
    }
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "bg-white p-5 rounded-lg border", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-stone-900 text-xl font-bold", children: "Revenue" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      _default$1,
      {
        options,
        series,
        type: "bar",
        height: 300
      }
    ) })
  ] });
}
function SendPanel() {
  function send() {
    const amount = document.getElementById("amount").value;
    const receiverId = document.getElementById("receiver-id").value;
    const reason = document.getElementById("reason").value;
    alert(`Sending ${amount} ORC to ${receiverId} with reason: ${reason}`);
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "px-5 mt-11", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "grid grid-cols-2 gap-7", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-stone-900 text-md font-semibold", children: "Amount" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            id: "amount",
            type: "number",
            className: "border border-stone-900 rounded-lg px-3 py-2 w-full mt-2"
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-stone-900 text-md font-semibold", children: "Reason" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            id: "reason",
            type: "text",
            className: "border border-stone-900 rounded-lg px-3 py-2 w-full mt-2"
          }
        )
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h-full flex justify-center items-center", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "w-full", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-stone-900 text-md font-semibold", children: "Receiver ID" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            id: "receiver-id",
            type: "text",
            className: "border border-stone-900 rounded-lg px-3 py-2 w-full mt-2"
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "w-full text-center text-sm text-gray-500", children: "Please enter the Wallet ID of the Receiver" })
      ] }) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { className: "mt-7 bg-indigo-500 text-white px-7", onClick: send, children: "Send" })
  ] });
}
function QRCodeContainer() {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex justify-center mt-5", children: /* @__PURE__ */ jsxRuntimeExports.jsx(_default, { value: "https://www.google.com" }) });
}
function TransferPanel() {
  const [displayQR, setDisplayQR] = reactExports.useState(false);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "bg-white p-5 rounded-lg text-stone-900 border", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex justify-between", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-stone-900 text-xl font-bold", children: "Transfer" }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex font-semibold gap-5 ", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "div",
          {
            className: `h-fit ${!displayQR ? "border-b-2 border-b-indigo-500" : ""}`,
            onClick: () => setDisplayQR(false),
            children: "Send"
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "div",
          {
            className: `h-fit ${displayQR ? "border-b-2 border-b-indigo-500" : ""}`,
            onClick: () => setDisplayQR(true),
            children: "Code"
          }
        )
      ] })
    ] }),
    displayQR ? /* @__PURE__ */ jsxRuntimeExports.jsx(QRCodeContainer, {}) : /* @__PURE__ */ jsxRuntimeExports.jsx(SendPanel, {})
  ] });
}
function WalletMiddleContainer() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "grid grid-cols-2 gap-7 mb-7", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(TransferPanel, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(MonthlyIncomeChart, {})
  ] });
}
/**
 * @remix-run/router v1.15.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$3() {
  _extends$3 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$3.apply(this, arguments);
}
var Action;
(function(Action2) {
  Action2["Pop"] = "POP";
  Action2["Push"] = "PUSH";
  Action2["Replace"] = "REPLACE";
})(Action || (Action = {}));
const PopStateEventType = "popstate";
function createBrowserHistory(options) {
  if (options === void 0) {
    options = {};
  }
  function createBrowserLocation(window2, globalHistory) {
    let {
      pathname,
      search,
      hash
    } = window2.location;
    return createLocation(
      "",
      {
        pathname,
        search,
        hash
      },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createBrowserHref(window2, to) {
    return typeof to === "string" ? to : createPath(to);
  }
  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
}
function invariant(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message);
  }
}
function warning(cond, message) {
  if (!cond) {
    if (typeof console !== "undefined")
      console.warn(message);
    try {
      throw new Error(message);
    } catch (e3) {
    }
  }
}
function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
function getHistoryState(location, index2) {
  return {
    usr: location.state,
    key: location.key,
    idx: index2
  };
}
function createLocation(current, to, state, key) {
  if (state === void 0) {
    state = null;
  }
  let location = _extends$3({
    pathname: typeof current === "string" ? current : current.pathname,
    search: "",
    hash: ""
  }, typeof to === "string" ? parsePath(to) : to, {
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey()
  });
  return location;
}
function createPath(_ref) {
  let {
    pathname = "/",
    search = "",
    hash = ""
  } = _ref;
  if (search && search !== "?")
    pathname += search.charAt(0) === "?" ? search : "?" + search;
  if (hash && hash !== "#")
    pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
  return pathname;
}
function parsePath(path) {
  let parsedPath = {};
  if (path) {
    let hashIndex = path.indexOf("#");
    if (hashIndex >= 0) {
      parsedPath.hash = path.substr(hashIndex);
      path = path.substr(0, hashIndex);
    }
    let searchIndex = path.indexOf("?");
    if (searchIndex >= 0) {
      parsedPath.search = path.substr(searchIndex);
      path = path.substr(0, searchIndex);
    }
    if (path) {
      parsedPath.pathname = path;
    }
  }
  return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref, validateLocation, options) {
  if (options === void 0) {
    options = {};
  }
  let {
    window: window2 = document.defaultView,
    v5Compat = false
  } = options;
  let globalHistory = window2.history;
  let action = Action.Pop;
  let listener = null;
  let index2 = getIndex();
  if (index2 == null) {
    index2 = 0;
    globalHistory.replaceState(_extends$3({}, globalHistory.state, {
      idx: index2
    }), "");
  }
  function getIndex() {
    let state = globalHistory.state || {
      idx: null
    };
    return state.idx;
  }
  function handlePop() {
    action = Action.Pop;
    let nextIndex = getIndex();
    let delta = nextIndex == null ? null : nextIndex - index2;
    index2 = nextIndex;
    if (listener) {
      listener({
        action,
        location: history.location,
        delta
      });
    }
  }
  function push(to, state) {
    action = Action.Push;
    let location = createLocation(history.location, to, state);
    if (validateLocation)
      validateLocation(location, to);
    index2 = getIndex() + 1;
    let historyState = getHistoryState(location, index2);
    let url = history.createHref(location);
    try {
      globalHistory.pushState(historyState, "", url);
    } catch (error) {
      if (error instanceof DOMException && error.name === "DataCloneError") {
        throw error;
      }
      window2.location.assign(url);
    }
    if (v5Compat && listener) {
      listener({
        action,
        location: history.location,
        delta: 1
      });
    }
  }
  function replace(to, state) {
    action = Action.Replace;
    let location = createLocation(history.location, to, state);
    if (validateLocation)
      validateLocation(location, to);
    index2 = getIndex();
    let historyState = getHistoryState(location, index2);
    let url = history.createHref(location);
    globalHistory.replaceState(historyState, "", url);
    if (v5Compat && listener) {
      listener({
        action,
        location: history.location,
        delta: 0
      });
    }
  }
  function createURL(to) {
    let base = window2.location.origin !== "null" ? window2.location.origin : window2.location.href;
    let href = typeof to === "string" ? to : createPath(to);
    href = href.replace(/ $/, "%20");
    invariant(base, "No window.location.(origin|href) available to create URL for href: " + href);
    return new URL(href, base);
  }
  let history = {
    get action() {
      return action;
    },
    get location() {
      return getLocation(window2, globalHistory);
    },
    listen(fn) {
      if (listener) {
        throw new Error("A history only accepts one active listener");
      }
      window2.addEventListener(PopStateEventType, handlePop);
      listener = fn;
      return () => {
        window2.removeEventListener(PopStateEventType, handlePop);
        listener = null;
      };
    },
    createHref(to) {
      return createHref(window2, to);
    },
    createURL,
    encodeLocation(to) {
      let url = createURL(to);
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash
      };
    },
    push,
    replace,
    go(n2) {
      return globalHistory.go(n2);
    }
  };
  return history;
}
var ResultType;
(function(ResultType2) {
  ResultType2["data"] = "data";
  ResultType2["deferred"] = "deferred";
  ResultType2["redirect"] = "redirect";
  ResultType2["error"] = "error";
})(ResultType || (ResultType = {}));
function matchRoutes(routes, locationArg, basename) {
  if (basename === void 0) {
    basename = "/";
  }
  let location = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
  let pathname = stripBasename(location.pathname || "/", basename);
  if (pathname == null) {
    return null;
  }
  let branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  let matches = null;
  for (let i2 = 0; matches == null && i2 < branches.length; ++i2) {
    let decoded = decodePath(pathname);
    matches = matchRouteBranch(branches[i2], decoded);
  }
  return matches;
}
function flattenRoutes(routes, branches, parentsMeta, parentPath) {
  if (branches === void 0) {
    branches = [];
  }
  if (parentsMeta === void 0) {
    parentsMeta = [];
  }
  if (parentPath === void 0) {
    parentPath = "";
  }
  let flattenRoute = (route, index2, relativePath) => {
    let meta = {
      relativePath: relativePath === void 0 ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index2,
      route
    };
    if (meta.relativePath.startsWith("/")) {
      invariant(meta.relativePath.startsWith(parentPath), 'Absolute route path "' + meta.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes.");
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }
    let path = joinPaths([parentPath, meta.relativePath]);
    let routesMeta = parentsMeta.concat(meta);
    if (route.children && route.children.length > 0) {
      invariant(
        // Our types know better, but runtime JS may not!
        // @ts-expect-error
        route.index !== true,
        "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".')
      );
      flattenRoutes(route.children, branches, routesMeta, path);
    }
    if (route.path == null && !route.index) {
      return;
    }
    branches.push({
      path,
      score: computeScore(path, route.index),
      routesMeta
    });
  };
  routes.forEach((route, index2) => {
    var _route$path;
    if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?"))) {
      flattenRoute(route, index2);
    } else {
      for (let exploded of explodeOptionalSegments(route.path)) {
        flattenRoute(route, index2, exploded);
      }
    }
  });
  return branches;
}
function explodeOptionalSegments(path) {
  let segments = path.split("/");
  if (segments.length === 0)
    return [];
  let [first, ...rest] = segments;
  let isOptional = first.endsWith("?");
  let required = first.replace(/\?$/, "");
  if (rest.length === 0) {
    return isOptional ? [required, ""] : [required];
  }
  let restExploded = explodeOptionalSegments(rest.join("/"));
  let result = [];
  result.push(...restExploded.map((subpath) => subpath === "" ? required : [required, subpath].join("/")));
  if (isOptional) {
    result.push(...restExploded);
  }
  return result.map((exploded) => path.startsWith("/") && exploded === "" ? "/" : exploded);
}
function rankRouteBranches(branches) {
  branches.sort((a2, b2) => a2.score !== b2.score ? b2.score - a2.score : compareIndexes(a2.routesMeta.map((meta) => meta.childrenIndex), b2.routesMeta.map((meta) => meta.childrenIndex)));
}
const paramRe = /^:[\w-]+$/;
const dynamicSegmentValue = 3;
const indexRouteValue = 2;
const emptySegmentValue = 1;
const staticSegmentValue = 10;
const splatPenalty = -2;
const isSplat = (s2) => s2 === "*";
function computeScore(path, index2) {
  let segments = path.split("/");
  let initialScore = segments.length;
  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }
  if (index2) {
    initialScore += indexRouteValue;
  }
  return segments.filter((s2) => !isSplat(s2)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
}
function compareIndexes(a2, b2) {
  let siblings = a2.length === b2.length && a2.slice(0, -1).every((n2, i2) => n2 === b2[i2]);
  return siblings ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a2[a2.length - 1] - b2[b2.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function matchRouteBranch(branch, pathname) {
  let {
    routesMeta
  } = branch;
  let matchedParams = {};
  let matchedPathname = "/";
  let matches = [];
  for (let i2 = 0; i2 < routesMeta.length; ++i2) {
    let meta = routesMeta[i2];
    let end = i2 === routesMeta.length - 1;
    let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    let match = matchPath({
      path: meta.relativePath,
      caseSensitive: meta.caseSensitive,
      end
    }, remainingPathname);
    if (!match)
      return null;
    Object.assign(matchedParams, match.params);
    let route = meta.route;
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),
      route
    });
    if (match.pathnameBase !== "/") {
      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);
    }
  }
  return matches;
}
function matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = {
      path: pattern,
      caseSensitive: false,
      end: true
    };
  }
  let [matcher2, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);
  let match = pathname.match(matcher2);
  if (!match)
    return null;
  let matchedPathname = match[0];
  let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  let captureGroups = match.slice(1);
  let params = compiledParams.reduce((memo2, _ref, index2) => {
    let {
      paramName,
      isOptional
    } = _ref;
    if (paramName === "*") {
      let splatValue = captureGroups[index2] || "";
      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
    }
    const value = captureGroups[index2];
    if (isOptional && !value) {
      memo2[paramName] = void 0;
    } else {
      memo2[paramName] = (value || "").replace(/%2F/g, "/");
    }
    return memo2;
  }, {});
  return {
    params,
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}
function compilePath(path, caseSensitive, end) {
  if (caseSensitive === void 0) {
    caseSensitive = false;
  }
  if (end === void 0) {
    end = true;
  }
  warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
  let params = [];
  let regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:([\w-]+)(\?)?/g, (_, paramName, isOptional) => {
    params.push({
      paramName,
      isOptional: isOptional != null
    });
    return isOptional ? "/?([^\\/]+)?" : "/([^\\/]+)";
  });
  if (path.endsWith("*")) {
    params.push({
      paramName: "*"
    });
    regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$";
  } else if (end) {
    regexpSource += "\\/*$";
  } else if (path !== "" && path !== "/") {
    regexpSource += "(?:(?=\\/|$))";
  } else
    ;
  let matcher2 = new RegExp(regexpSource, caseSensitive ? void 0 : "i");
  return [matcher2, params];
}
function decodePath(value) {
  try {
    return value.split("/").map((v2) => decodeURIComponent(v2).replace(/\//g, "%2F")).join("/");
  } catch (error) {
    warning(false, 'The URL path "' + value + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + error + ")."));
    return value;
  }
}
function stripBasename(pathname, basename) {
  if (basename === "/")
    return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  }
  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
  let nextChar = pathname.charAt(startIndex);
  if (nextChar && nextChar !== "/") {
    return null;
  }
  return pathname.slice(startIndex) || "/";
}
function resolvePath(to, fromPathname) {
  if (fromPathname === void 0) {
    fromPathname = "/";
  }
  let {
    pathname: toPathname,
    search = "",
    hash = ""
  } = typeof to === "string" ? parsePath(to) : to;
  let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}
function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  let relativeSegments = relativePath.split("/");
  relativeSegments.forEach((segment) => {
    if (segment === "..") {
      if (segments.length > 1)
        segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
  return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function getPathContributingMatches(matches) {
  return matches.filter((match, index2) => index2 === 0 || match.route.path && match.route.path.length > 0);
}
function getResolveToMatches(matches, v7_relativeSplatPath) {
  let pathMatches = getPathContributingMatches(matches);
  if (v7_relativeSplatPath) {
    return pathMatches.map((match, idx) => idx === matches.length - 1 ? match.pathname : match.pathnameBase);
  }
  return pathMatches.map((match) => match.pathnameBase);
}
function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
  if (isPathRelative === void 0) {
    isPathRelative = false;
  }
  let to;
  if (typeof toArg === "string") {
    to = parsePath(toArg);
  } else {
    to = _extends$3({}, toArg);
    invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to));
    invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to));
    invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to));
  }
  let isEmptyPath = toArg === "" || to.pathname === "";
  let toPathname = isEmptyPath ? "/" : to.pathname;
  let from;
  if (toPathname == null) {
    from = locationPathname;
  } else {
    let routePathnameIndex = routePathnames.length - 1;
    if (!isPathRelative && toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");
      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }
      to.pathname = toSegments.join("/");
    }
    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  let path = resolvePath(to, from);
  let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/");
  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {
    path.pathname += "/";
  }
  return path;
}
const joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/");
const normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
const normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
const normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
function isRouteErrorResponse(error) {
  return error != null && typeof error.status === "number" && typeof error.statusText === "string" && typeof error.internal === "boolean" && "data" in error;
}
const validMutationMethodsArr = ["post", "put", "patch", "delete"];
new Set(validMutationMethodsArr);
const validRequestMethodsArr = ["get", ...validMutationMethodsArr];
new Set(validRequestMethodsArr);
/**
 * React Router v6.22.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$2() {
  _extends$2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$2.apply(this, arguments);
}
const DataRouterContext = /* @__PURE__ */ reactExports.createContext(null);
const DataRouterStateContext = /* @__PURE__ */ reactExports.createContext(null);
const NavigationContext = /* @__PURE__ */ reactExports.createContext(null);
const LocationContext = /* @__PURE__ */ reactExports.createContext(null);
const RouteContext = /* @__PURE__ */ reactExports.createContext({
  outlet: null,
  matches: [],
  isDataRoute: false
});
const RouteErrorContext = /* @__PURE__ */ reactExports.createContext(null);
function useHref(to, _temp) {
  let {
    relative
  } = _temp === void 0 ? {} : _temp;
  !useInRouterContext() ? invariant(false) : void 0;
  let {
    basename,
    navigator: navigator2
  } = reactExports.useContext(NavigationContext);
  let {
    hash,
    pathname,
    search
  } = useResolvedPath(to, {
    relative
  });
  let joinedPathname = pathname;
  if (basename !== "/") {
    joinedPathname = pathname === "/" ? basename : joinPaths([basename, pathname]);
  }
  return navigator2.createHref({
    pathname: joinedPathname,
    search,
    hash
  });
}
function useInRouterContext() {
  return reactExports.useContext(LocationContext) != null;
}
function useLocation() {
  !useInRouterContext() ? invariant(false) : void 0;
  return reactExports.useContext(LocationContext).location;
}
function useIsomorphicLayoutEffect(cb2) {
  let isStatic = reactExports.useContext(NavigationContext).static;
  if (!isStatic) {
    reactExports.useLayoutEffect(cb2);
  }
}
function useNavigate() {
  let {
    isDataRoute
  } = reactExports.useContext(RouteContext);
  return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
  !useInRouterContext() ? invariant(false) : void 0;
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  let {
    basename,
    future,
    navigator: navigator2
  } = reactExports.useContext(NavigationContext);
  let {
    matches
  } = reactExports.useContext(RouteContext);
  let {
    pathname: locationPathname
  } = useLocation();
  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches, future.v7_relativeSplatPath));
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(function(to, options) {
    if (options === void 0) {
      options = {};
    }
    if (!activeRef.current)
      return;
    if (typeof to === "number") {
      navigator2.go(to);
      return;
    }
    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path");
    if (dataRouterContext == null && basename !== "/") {
      path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
    }
    (!!options.replace ? navigator2.replace : navigator2.push)(path, options.state, options);
  }, [basename, navigator2, routePathnamesJson, locationPathname, dataRouterContext]);
  return navigate;
}
const OutletContext = /* @__PURE__ */ reactExports.createContext(null);
function useOutlet(context) {
  let outlet = reactExports.useContext(RouteContext).outlet;
  if (outlet) {
    return /* @__PURE__ */ reactExports.createElement(OutletContext.Provider, {
      value: context
    }, outlet);
  }
  return outlet;
}
function useParams() {
  let {
    matches
  } = reactExports.useContext(RouteContext);
  let routeMatch = matches[matches.length - 1];
  return routeMatch ? routeMatch.params : {};
}
function useResolvedPath(to, _temp2) {
  let {
    relative
  } = _temp2 === void 0 ? {} : _temp2;
  let {
    future
  } = reactExports.useContext(NavigationContext);
  let {
    matches
  } = reactExports.useContext(RouteContext);
  let {
    pathname: locationPathname
  } = useLocation();
  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches, future.v7_relativeSplatPath));
  return reactExports.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === "path"), [to, routePathnamesJson, locationPathname, relative]);
}
function useRoutes(routes, locationArg) {
  return useRoutesImpl(routes, locationArg);
}
function useRoutesImpl(routes, locationArg, dataRouterState, future) {
  !useInRouterContext() ? invariant(false) : void 0;
  let {
    navigator: navigator2
  } = reactExports.useContext(NavigationContext);
  let {
    matches: parentMatches
  } = reactExports.useContext(RouteContext);
  let routeMatch = parentMatches[parentMatches.length - 1];
  let parentParams = routeMatch ? routeMatch.params : {};
  routeMatch ? routeMatch.pathname : "/";
  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  routeMatch && routeMatch.route;
  let locationFromContext = useLocation();
  let location;
  if (locationArg) {
    var _parsedLocationArg$pa;
    let parsedLocationArg = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
    !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? invariant(false) : void 0;
    location = parsedLocationArg;
  } else {
    location = locationFromContext;
  }
  let pathname = location.pathname || "/";
  let remainingPathname = pathname;
  if (parentPathnameBase !== "/") {
    let parentSegments = parentPathnameBase.replace(/^\//, "").split("/");
    let segments = pathname.replace(/^\//, "").split("/");
    remainingPathname = "/" + segments.slice(parentSegments.length).join("/");
  }
  let matches = matchRoutes(routes, {
    pathname: remainingPathname
  });
  let renderedMatches = _renderMatches(matches && matches.map((match) => Object.assign({}, match, {
    params: Object.assign({}, parentParams, match.params),
    pathname: joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname
    ]),
    pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase
    ])
  })), parentMatches, dataRouterState, future);
  if (locationArg && renderedMatches) {
    return /* @__PURE__ */ reactExports.createElement(LocationContext.Provider, {
      value: {
        location: _extends$2({
          pathname: "/",
          search: "",
          hash: "",
          state: null,
          key: "default"
        }, location),
        navigationType: Action.Pop
      }
    }, renderedMatches);
  }
  return renderedMatches;
}
function DefaultErrorComponent() {
  let error = useRouteError();
  let message = isRouteErrorResponse(error) ? error.status + " " + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);
  let stack = error instanceof Error ? error.stack : null;
  let lightgrey = "rgba(200,200,200, 0.5)";
  let preStyles = {
    padding: "0.5rem",
    backgroundColor: lightgrey
  };
  let devInfo = null;
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ reactExports.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, message), stack ? /* @__PURE__ */ reactExports.createElement("pre", {
    style: preStyles
  }, stack) : null, devInfo);
}
const defaultErrorElement = /* @__PURE__ */ reactExports.createElement(DefaultErrorComponent, null);
class RenderErrorBoundary extends reactExports.Component {
  constructor(props) {
    super(props);
    this.state = {
      location: props.location,
      revalidation: props.revalidation,
      error: props.error
    };
  }
  static getDerivedStateFromError(error) {
    return {
      error
    };
  }
  static getDerivedStateFromProps(props, state) {
    if (state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle") {
      return {
        error: props.error,
        location: props.location,
        revalidation: props.revalidation
      };
    }
    return {
      error: props.error !== void 0 ? props.error : state.error,
      location: state.location,
      revalidation: props.revalidation || state.revalidation
    };
  }
  componentDidCatch(error, errorInfo) {
    console.error("React Router caught the following error during render", error, errorInfo);
  }
  render() {
    return this.state.error !== void 0 ? /* @__PURE__ */ reactExports.createElement(RouteContext.Provider, {
      value: this.props.routeContext
    }, /* @__PURE__ */ reactExports.createElement(RouteErrorContext.Provider, {
      value: this.state.error,
      children: this.props.component
    })) : this.props.children;
  }
}
function RenderedRoute(_ref) {
  let {
    routeContext,
    match,
    children: children2
  } = _ref;
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {
    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;
  }
  return /* @__PURE__ */ reactExports.createElement(RouteContext.Provider, {
    value: routeContext
  }, children2);
}
function _renderMatches(matches, parentMatches, dataRouterState, future) {
  var _dataRouterState2;
  if (parentMatches === void 0) {
    parentMatches = [];
  }
  if (dataRouterState === void 0) {
    dataRouterState = null;
  }
  if (future === void 0) {
    future = null;
  }
  if (matches == null) {
    var _dataRouterState;
    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {
      matches = dataRouterState.matches;
    } else {
      return null;
    }
  }
  let renderedMatches = matches;
  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;
  if (errors != null) {
    let errorIndex = renderedMatches.findIndex((m2) => m2.route.id && (errors == null ? void 0 : errors[m2.route.id]));
    !(errorIndex >= 0) ? invariant(false) : void 0;
    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
  }
  let renderFallback = false;
  let fallbackIndex = -1;
  if (dataRouterState && future && future.v7_partialHydration) {
    for (let i2 = 0; i2 < renderedMatches.length; i2++) {
      let match = renderedMatches[i2];
      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {
        fallbackIndex = i2;
      }
      if (match.route.id) {
        let {
          loaderData,
          errors: errors2
        } = dataRouterState;
        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === void 0 && (!errors2 || errors2[match.route.id] === void 0);
        if (match.route.lazy || needsToRunLoader) {
          renderFallback = true;
          if (fallbackIndex >= 0) {
            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);
          } else {
            renderedMatches = [renderedMatches[0]];
          }
          break;
        }
      }
    }
  }
  return renderedMatches.reduceRight((outlet, match, index2) => {
    let error;
    let shouldRenderHydrateFallback = false;
    let errorElement = null;
    let hydrateFallbackElement = null;
    if (dataRouterState) {
      error = errors && match.route.id ? errors[match.route.id] : void 0;
      errorElement = match.route.errorElement || defaultErrorElement;
      if (renderFallback) {
        if (fallbackIndex < 0 && index2 === 0) {
          warningOnce("route-fallback", false);
          shouldRenderHydrateFallback = true;
          hydrateFallbackElement = null;
        } else if (fallbackIndex === index2) {
          shouldRenderHydrateFallback = true;
          hydrateFallbackElement = match.route.hydrateFallbackElement || null;
        }
      }
    }
    let matches2 = parentMatches.concat(renderedMatches.slice(0, index2 + 1));
    let getChildren = () => {
      let children2;
      if (error) {
        children2 = errorElement;
      } else if (shouldRenderHydrateFallback) {
        children2 = hydrateFallbackElement;
      } else if (match.route.Component) {
        children2 = /* @__PURE__ */ reactExports.createElement(match.route.Component, null);
      } else if (match.route.element) {
        children2 = match.route.element;
      } else {
        children2 = outlet;
      }
      return /* @__PURE__ */ reactExports.createElement(RenderedRoute, {
        match,
        routeContext: {
          outlet,
          matches: matches2,
          isDataRoute: dataRouterState != null
        },
        children: children2
      });
    };
    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index2 === 0) ? /* @__PURE__ */ reactExports.createElement(RenderErrorBoundary, {
      location: dataRouterState.location,
      revalidation: dataRouterState.revalidation,
      component: errorElement,
      error,
      children: getChildren(),
      routeContext: {
        outlet: null,
        matches: matches2,
        isDataRoute: true
      }
    }) : getChildren();
  }, null);
}
var DataRouterHook$1 = /* @__PURE__ */ function(DataRouterHook2) {
  DataRouterHook2["UseBlocker"] = "useBlocker";
  DataRouterHook2["UseRevalidator"] = "useRevalidator";
  DataRouterHook2["UseNavigateStable"] = "useNavigate";
  return DataRouterHook2;
}(DataRouterHook$1 || {});
var DataRouterStateHook$1 = /* @__PURE__ */ function(DataRouterStateHook2) {
  DataRouterStateHook2["UseBlocker"] = "useBlocker";
  DataRouterStateHook2["UseLoaderData"] = "useLoaderData";
  DataRouterStateHook2["UseActionData"] = "useActionData";
  DataRouterStateHook2["UseRouteError"] = "useRouteError";
  DataRouterStateHook2["UseNavigation"] = "useNavigation";
  DataRouterStateHook2["UseRouteLoaderData"] = "useRouteLoaderData";
  DataRouterStateHook2["UseMatches"] = "useMatches";
  DataRouterStateHook2["UseRevalidator"] = "useRevalidator";
  DataRouterStateHook2["UseNavigateStable"] = "useNavigate";
  DataRouterStateHook2["UseRouteId"] = "useRouteId";
  return DataRouterStateHook2;
}(DataRouterStateHook$1 || {});
function useDataRouterContext(hookName) {
  let ctx = reactExports.useContext(DataRouterContext);
  !ctx ? invariant(false) : void 0;
  return ctx;
}
function useDataRouterState(hookName) {
  let state = reactExports.useContext(DataRouterStateContext);
  !state ? invariant(false) : void 0;
  return state;
}
function useRouteContext(hookName) {
  let route = reactExports.useContext(RouteContext);
  !route ? invariant(false) : void 0;
  return route;
}
function useCurrentRouteId(hookName) {
  let route = useRouteContext();
  let thisRoute = route.matches[route.matches.length - 1];
  !thisRoute.route.id ? invariant(false) : void 0;
  return thisRoute.route.id;
}
function useRouteError() {
  var _state$errors;
  let error = reactExports.useContext(RouteErrorContext);
  let state = useDataRouterState(DataRouterStateHook$1.UseRouteError);
  let routeId = useCurrentRouteId(DataRouterStateHook$1.UseRouteError);
  if (error !== void 0) {
    return error;
  }
  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];
}
function useNavigateStable() {
  let {
    router
  } = useDataRouterContext(DataRouterHook$1.UseNavigateStable);
  let id2 = useCurrentRouteId(DataRouterStateHook$1.UseNavigateStable);
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(function(to, options) {
    if (options === void 0) {
      options = {};
    }
    if (!activeRef.current)
      return;
    if (typeof to === "number") {
      router.navigate(to);
    } else {
      router.navigate(to, _extends$2({
        fromRouteId: id2
      }, options));
    }
  }, [router, id2]);
  return navigate;
}
const alreadyWarned = {};
function warningOnce(key, cond, message) {
  if (!cond && !alreadyWarned[key]) {
    alreadyWarned[key] = true;
  }
}
function Outlet(props) {
  return useOutlet(props.context);
}
function Route(_props) {
  invariant(false);
}
function Router(_ref5) {
  let {
    basename: basenameProp = "/",
    children: children2 = null,
    location: locationProp,
    navigationType = Action.Pop,
    navigator: navigator2,
    static: staticProp = false,
    future
  } = _ref5;
  !!useInRouterContext() ? invariant(false) : void 0;
  let basename = basenameProp.replace(/^\/*/, "/");
  let navigationContext = reactExports.useMemo(() => ({
    basename,
    navigator: navigator2,
    static: staticProp,
    future: _extends$2({
      v7_relativeSplatPath: false
    }, future)
  }), [basename, future, navigator2, staticProp]);
  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }
  let {
    pathname = "/",
    search = "",
    hash = "",
    state = null,
    key = "default"
  } = locationProp;
  let locationContext = reactExports.useMemo(() => {
    let trailingPathname = stripBasename(pathname, basename);
    if (trailingPathname == null) {
      return null;
    }
    return {
      location: {
        pathname: trailingPathname,
        search,
        hash,
        state,
        key
      },
      navigationType
    };
  }, [basename, pathname, search, hash, state, key, navigationType]);
  if (locationContext == null) {
    return null;
  }
  return /* @__PURE__ */ reactExports.createElement(NavigationContext.Provider, {
    value: navigationContext
  }, /* @__PURE__ */ reactExports.createElement(LocationContext.Provider, {
    children: children2,
    value: locationContext
  }));
}
function Routes(_ref6) {
  let {
    children: children2,
    location
  } = _ref6;
  return useRoutes(createRoutesFromChildren(children2), location);
}
new Promise(() => {
});
function createRoutesFromChildren(children2, parentPath) {
  if (parentPath === void 0) {
    parentPath = [];
  }
  let routes = [];
  reactExports.Children.forEach(children2, (element, index2) => {
    if (!/* @__PURE__ */ reactExports.isValidElement(element)) {
      return;
    }
    let treePath = [...parentPath, index2];
    if (element.type === reactExports.Fragment) {
      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));
      return;
    }
    !(element.type === Route) ? invariant(false) : void 0;
    !(!element.props.index || !element.props.children) ? invariant(false) : void 0;
    let route = {
      id: element.props.id || treePath.join("-"),
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      Component: element.props.Component,
      index: element.props.index,
      path: element.props.path,
      loader: element.props.loader,
      action: element.props.action,
      errorElement: element.props.errorElement,
      ErrorBoundary: element.props.ErrorBoundary,
      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,
      shouldRevalidate: element.props.shouldRevalidate,
      handle: element.props.handle,
      lazy: element.props.lazy
    };
    if (element.props.children) {
      route.children = createRoutesFromChildren(element.props.children, treePath);
    }
    routes.push(route);
  });
  return routes;
}
/**
 * React Router DOM v6.22.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$1() {
  _extends$1 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$1.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
  return event.button === 0 && // Ignore everything but left clicks
  (!target || target === "_self") && // Let browser handle "target=_blank" etc.
  !isModifiedEvent(event);
}
const _excluded$b = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset", "unstable_viewTransition"];
const REACT_ROUTER_VERSION = "6";
try {
  window.__reactRouterVersion = REACT_ROUTER_VERSION;
} catch (e3) {
}
const START_TRANSITION = "startTransition";
const startTransitionImpl = React$1[START_TRANSITION];
function BrowserRouter(_ref4) {
  let {
    basename,
    children: children2,
    future,
    window: window2
  } = _ref4;
  let historyRef = reactExports.useRef();
  if (historyRef.current == null) {
    historyRef.current = createBrowserHistory({
      window: window2,
      v5Compat: true
    });
  }
  let history = historyRef.current;
  let [state, setStateImpl] = reactExports.useState({
    action: history.action,
    location: history.location
  });
  let {
    v7_startTransition
  } = future || {};
  let setState = reactExports.useCallback((newState) => {
    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  reactExports.useLayoutEffect(() => history.listen(setState), [history, setState]);
  return /* @__PURE__ */ reactExports.createElement(Router, {
    basename,
    children: children2,
    location: state.location,
    navigationType: state.action,
    navigator: history,
    future
  });
}
const isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
const ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
const Link = /* @__PURE__ */ reactExports.forwardRef(function LinkWithRef(_ref7, ref) {
  let {
    onClick,
    relative,
    reloadDocument,
    replace,
    state,
    target,
    to,
    preventScrollReset,
    unstable_viewTransition
  } = _ref7, rest = _objectWithoutPropertiesLoose$1(_ref7, _excluded$b);
  let {
    basename
  } = reactExports.useContext(NavigationContext);
  let absoluteHref;
  let isExternal = false;
  if (typeof to === "string" && ABSOLUTE_URL_REGEX.test(to)) {
    absoluteHref = to;
    if (isBrowser) {
      try {
        let currentUrl = new URL(window.location.href);
        let targetUrl = to.startsWith("//") ? new URL(currentUrl.protocol + to) : new URL(to);
        let path = stripBasename(targetUrl.pathname, basename);
        if (targetUrl.origin === currentUrl.origin && path != null) {
          to = path + targetUrl.search + targetUrl.hash;
        } else {
          isExternal = true;
        }
      } catch (e3) {
      }
    }
  }
  let href = useHref(to, {
    relative
  });
  let internalOnClick = useLinkClickHandler(to, {
    replace,
    state,
    target,
    preventScrollReset,
    relative,
    unstable_viewTransition
  });
  function handleClick(event) {
    if (onClick)
      onClick(event);
    if (!event.defaultPrevented) {
      internalOnClick(event);
    }
  }
  return (
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    /* @__PURE__ */ reactExports.createElement("a", _extends$1({}, rest, {
      href: absoluteHref || href,
      onClick: isExternal || reloadDocument ? onClick : handleClick,
      ref,
      target
    }))
  );
});
var DataRouterHook;
(function(DataRouterHook2) {
  DataRouterHook2["UseScrollRestoration"] = "useScrollRestoration";
  DataRouterHook2["UseSubmit"] = "useSubmit";
  DataRouterHook2["UseSubmitFetcher"] = "useSubmitFetcher";
  DataRouterHook2["UseFetcher"] = "useFetcher";
  DataRouterHook2["useViewTransitionState"] = "useViewTransitionState";
})(DataRouterHook || (DataRouterHook = {}));
var DataRouterStateHook;
(function(DataRouterStateHook2) {
  DataRouterStateHook2["UseFetcher"] = "useFetcher";
  DataRouterStateHook2["UseFetchers"] = "useFetchers";
  DataRouterStateHook2["UseScrollRestoration"] = "useScrollRestoration";
})(DataRouterStateHook || (DataRouterStateHook = {}));
function useLinkClickHandler(to, _temp) {
  let {
    target,
    replace: replaceProp,
    state,
    preventScrollReset,
    relative,
    unstable_viewTransition
  } = _temp === void 0 ? {} : _temp;
  let navigate = useNavigate();
  let location = useLocation();
  let path = useResolvedPath(to, {
    relative
  });
  return reactExports.useCallback((event) => {
    if (shouldProcessLinkClick(event, target)) {
      event.preventDefault();
      let replace = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);
      navigate(to, {
        replace,
        state,
        preventScrollReset,
        relative,
        unstable_viewTransition
      });
    }
  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);
}
const WalletData = [
  {
    id: "59a53ee428a643e940546c5ccfc5663e",
    amount: -0.5523342,
    status: "pending",
    reason: "BananaHub.mp4",
    date: /* @__PURE__ */ new Date("2021-10-10")
  },
  {
    id: "f0623b42ea2d521b945a80b014f5694b",
    amount: 12323e-9,
    status: "failed",
    reason: "Dota2_OnePunchGodModeMenu.exe",
    date: /* @__PURE__ */ new Date("2021-10-10")
  },
  {
    id: "061b96f36e163ef82de2feefe7d7aaba",
    amount: -0.8311008,
    status: "processing",
    reason: "PayPaiBalanceInjector.bin",
    date: /* @__PURE__ */ new Date("2021-10-10")
  },
  {
    id: "b8ae1f8845ee9cbe64174ae089973b56",
    amount: 0.663450023,
    status: "processing",
    reason: "",
    date: /* @__PURE__ */ new Date("2021-10-10")
  },
  {
    id: "bcaeff20734041e27098eb5138b3003a",
    amount: 432e-5,
    status: "success",
    reason: "きかんしゃトーマス.avi",
    date: /* @__PURE__ */ new Date("2021-10-10")
  }
];
function DataTable$2({
  columns: columns22,
  data: data2
}) {
  const table = useReactTable({
    data: data2,
    columns: columns22,
    getCoreRowModel: getCoreRowModel()
  });
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "rounded-md bg-white border", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(Table, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(TableHeader, { children: table.getHeaderGroups().map((headerGroup) => /* @__PURE__ */ jsxRuntimeExports.jsx(TableRow, { children: headerGroup.headers.map((header) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsx(
        TableHead,
        {
          className: "font-semibold text-stone-900",
          children: header.isPlaceholder ? null : flexRender(
            header.column.columnDef.header,
            header.getContext()
          )
        },
        header.id
      );
    }) }, headerGroup.id)) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(TableBody, { children: table.getRowModel().rows?.length ? table.getRowModel().rows.map((row) => /* @__PURE__ */ jsxRuntimeExports.jsx(
      TableRow,
      {
        "data-state": row.getIsSelected() && "selected",
        children: row.getVisibleCells().map((cell) => /* @__PURE__ */ jsxRuntimeExports.jsx(TableCell, { children: flexRender(cell.column.columnDef.cell, cell.getContext()) }, cell.id))
      },
      row.id
    )) : /* @__PURE__ */ jsxRuntimeExports.jsx(TableRow, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(TableCell, { colSpan: columns22.length, className: "h-24 text-center", children: "No results." }) }) })
  ] }) });
}
const columns$2 = [
  {
    accessorKey: "status",
    header: "Status",
    cell: ({ row }) => {
      const status = row.getValue("status");
      const color2 = status === "pending" ? "text-yellow-500" : status === "processing" ? "text-blue-500" : status === "success" ? "text-green-500" : "text-red-500";
      return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: `font-medium ${color2}`, children: status }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "text-gray-500", children: "2021-10-10" })
      ] });
    }
  },
  {
    accessorKey: "id",
    header: "Transaction ID",
    cell: ({ row }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "font-md", children: row.getValue("id") }),
        row.original.reason && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "text-gray-500", children: [
          "Reason: ",
          row.original.reason
        ] })
      ] });
    }
  },
  {
    accessorKey: "amount",
    header: () => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "text-right", children: "Amount" }),
    cell: ({ row }) => {
      const amount = parseFloat(row.getValue("amount"));
      const color2 = amount > 0 ? "text-green-500" : "text-red-500";
      return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: `text-right font-medium ${color2}`, children: amount }) });
    }
  }
];
function TransactionTable() {
  const { page } = useParams();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "rounded-md bg-white p-5 border", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex justify-between font-bold mb-2", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-stone-900 text-xl", children: "Transactions" }),
      page !== "transactions" && /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: "/wallet/transactions", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "text-indigo-500 flex gap-2 text-sm items-center hover:cursor-pointer", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { children: "View All" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(ChevronsRight, {})
      ] }) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(DataTable$2, { columns: columns$2, data: WalletData })
  ] });
}
function WalletContainer() {
  const { page } = useParams();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "size-full px-10 py-7 overflow-y-auto", children: [
    !page ? /* @__PURE__ */ jsxRuntimeExports.jsx(WalletInfoCards, {}) : null,
    !page ? /* @__PURE__ */ jsxRuntimeExports.jsx(WalletMiddleContainer, {}) : null,
    /* @__PURE__ */ jsxRuntimeExports.jsx(TransactionTable, {})
  ] });
}
function WallerPageHeader() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "bg-white w-full py-5 px-7 flex justify-between items-center drop-shadow-md", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center gap-2", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(AlignRight, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: "font-bold text-xl", children: "Wallet" })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center relative", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "input",
        {
          type: "text",
          className: "block m-0 border border-stone-900 rounded-xl pl-3 pr-10 py-1",
          placeholder: "Search"
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Search, { className: "absolute right-2" })
    ] })
  ] });
}
const WalletPage = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { id: "wallet-page", className: "flex flex-col grow size-full text-black", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(WallerPageHeader, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(WalletContainer, {})
  ] });
};
const SidebarItem = ({
  icon,
  text: text2,
  active,
  alert: alert2
}) => {
  const { expanded } = reactExports.useContext(SidebarContext);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "li",
    {
      className: `
          relative flex items-center py-2 px-3 my-1
          font-medium rounded-md cursor-pointer
          transition-colors group
          ${active ? "bg-gradient-to-tr from-secondary to-secondary text-secondary-foreground" : "hover:bg-accent hover:text-accent-foreground text-muted-foreground"}
      `,
      children: [
        icon,
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "span",
          {
            className: `overflow-hidden transition-all ${expanded ? "w-30 ml-3" : "w-0"}`,
            children: text2
          }
        ),
        alert2 && /* @__PURE__ */ jsxRuntimeExports.jsx(
          "div",
          {
            className: `absolute right-2 w-2 h-2 rounded bg-indigo-400 ${expanded ? "" : "top-2"}`
          }
        ),
        !expanded && /* @__PURE__ */ jsxRuntimeExports.jsx(
          "div",
          {
            className: `
            absolute left-full z-10 rounded-md px-2 py-1 ml-6
            bg-indigo-100 text-indigo-800 text-sm
            invisible opacity-20 -translate-x-3 transition-all
            group-hover:visible group-hover:opacity-100 group-hover:translate-x-0
        `,
            children: text2
          }
        )
      ]
    }
  );
};
const SidebarContext = reactExports.createContext({ expanded: true });
const Sidebar = () => {
  const [expanded, setExpanded] = reactExports.useState(true);
  const location = useLocation();
  const isActive = (path) => location.pathname === path;
  const isSettingsActive = () => {
    const paths = [
      "/settings",
      "/settings/profile",
      "/settings/account",
      "/settings/appearance",
      "/settings/notifications",
      "/settings/display",
      "/settings/transfer"
    ];
    return paths.some((path) => isActive(path));
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx("aside", { className: "h-screen", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("nav", { className: "h-full flex flex-col bg-card border-r shadow-sm text-lg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "p-4 pb-2 flex justify-between items-center mt-4", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "div",
        {
          className: `font-bold text-3xl overflow-hidden transition-all ${expanded ? "w-32" : "w-0"}`,
          children: "OrcaNet"
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "button",
        {
          onClick: () => setExpanded((curr) => !curr),
          className: "p-1.5 rounded-lg  hover:bg-gray-300 bg-gray-200 dark:bg-gray-600 text-foreground",
          children: expanded ? /* @__PURE__ */ jsxRuntimeExports.jsx(ChevronFirst, {}) : /* @__PURE__ */ jsxRuntimeExports.jsx(ChevronLast, {})
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(SidebarContext.Provider, { value: { expanded }, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { className: "flex-1 px-3 text-nowrap", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: "/", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        SidebarItem,
        {
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(LayoutDashboard, {}),
          text: "Home",
          active: isActive("/"),
          alert: false
        }
      ) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: "/peers", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        SidebarItem,
        {
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Network, {}),
          text: "Peers",
          active: isActive("/peers"),
          alert: false
        }
      ) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: "/stats", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        SidebarItem,
        {
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Network, {}),
          text: "Stats",
          active: isActive("/stats"),
          alert: false
        }
      ) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: "/market", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        SidebarItem,
        {
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(BarChart2, {}),
          text: "Market",
          active: isActive("/market"),
          alert: false
        }
      ) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: "/wallet", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        SidebarItem,
        {
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Receipt, {}),
          text: "Wallet",
          active: isActive("/wallet"),
          alert: false
        }
      ) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: "/mining", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        SidebarItem,
        {
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Network, {}),
          text: "Mining",
          active: isActive("/mining"),
          alert: false
        }
      ) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: "/settings/profile", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        SidebarItem,
        {
          icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Settings, {}),
          text: "Settings",
          active: isSettingsActive(),
          alert: false
        }
      ) })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "border-t flex p-3", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "img",
        {
          src: "https://ui-avatars.com/api/?background=CBC3E3&name=Bubble+Guppies",
          alt: "",
          className: "w-10 h-10 rounded-md"
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "div",
        {
          className: `
              flex justify-between items-center
              overflow-hidden transition-all ${expanded ? "w-32 ml-3" : "w-0"}
          `,
          children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "leading-4", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("h4", { className: "font-semibold", children: "Bubble Guppies" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-xs text-gray-600" })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(MoreVertical, { size: 20 })
          ]
        }
      )
    ] })
  ] }) });
};
class Adder {
  constructor() {
    this._partials = new Float64Array(32);
    this._n = 0;
  }
  add(x2) {
    const p2 = this._partials;
    let i2 = 0;
    for (let j = 0; j < this._n && j < 32; j++) {
      const y2 = p2[j], hi2 = x2 + y2, lo = Math.abs(x2) < Math.abs(y2) ? x2 - (hi2 - y2) : y2 - (hi2 - x2);
      if (lo)
        p2[i2++] = lo;
      x2 = hi2;
    }
    p2[i2] = x2;
    this._n = i2 + 1;
    return this;
  }
  valueOf() {
    const p2 = this._partials;
    let n2 = this._n, x2, y2, lo, hi2 = 0;
    if (n2 > 0) {
      hi2 = p2[--n2];
      while (n2 > 0) {
        x2 = hi2;
        y2 = p2[--n2];
        hi2 = x2 + y2;
        lo = y2 - (hi2 - x2);
        if (lo)
          break;
      }
      if (n2 > 0 && (lo < 0 && p2[n2 - 1] < 0 || lo > 0 && p2[n2 - 1] > 0)) {
        y2 = lo * 2;
        x2 = hi2 + y2;
        if (y2 == x2 - hi2)
          hi2 = x2;
      }
    }
    return hi2;
  }
}
function* flatten(arrays) {
  for (const array2 of arrays) {
    yield* array2;
  }
}
function merge(arrays) {
  return Array.from(flatten(arrays));
}
function range$1(start2, stop, step) {
  start2 = +start2, stop = +stop, step = (n2 = arguments.length) < 2 ? (stop = start2, start2 = 0, 1) : n2 < 3 ? 1 : +step;
  var i2 = -1, n2 = Math.max(0, Math.ceil((stop - start2) / step)) | 0, range3 = new Array(n2);
  while (++i2 < n2) {
    range3[i2] = start2 + i2 * step;
  }
  return range3;
}
var epsilon = 1e-6;
var epsilon2$1 = 1e-12;
var pi = Math.PI;
var halfPi = pi / 2;
var quarterPi = pi / 4;
var tau = pi * 2;
var degrees$1 = 180 / pi;
var radians = pi / 180;
var abs = Math.abs;
var atan = Math.atan;
var atan2 = Math.atan2;
var cos = Math.cos;
var ceil = Math.ceil;
var exp = Math.exp;
var hypot = Math.hypot;
var log = Math.log;
var pow = Math.pow;
var sin = Math.sin;
var sign = Math.sign || function(x2) {
  return x2 > 0 ? 1 : x2 < 0 ? -1 : 0;
};
var sqrt = Math.sqrt;
var tan = Math.tan;
function acos(x2) {
  return x2 > 1 ? 0 : x2 < -1 ? pi : Math.acos(x2);
}
function asin(x2) {
  return x2 > 1 ? halfPi : x2 < -1 ? -halfPi : Math.asin(x2);
}
function haversin(x2) {
  return (x2 = sin(x2 / 2)) * x2;
}
function noop$1() {
}
function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}
var streamObjectType = {
  Feature: function(object2, stream) {
    streamGeometry(object2.geometry, stream);
  },
  FeatureCollection: function(object2, stream) {
    var features = object2.features, i2 = -1, n2 = features.length;
    while (++i2 < n2)
      streamGeometry(features[i2].geometry, stream);
  }
};
var streamGeometryType = {
  Sphere: function(object2, stream) {
    stream.sphere();
  },
  Point: function(object2, stream) {
    object2 = object2.coordinates;
    stream.point(object2[0], object2[1], object2[2]);
  },
  MultiPoint: function(object2, stream) {
    var coordinates2 = object2.coordinates, i2 = -1, n2 = coordinates2.length;
    while (++i2 < n2)
      object2 = coordinates2[i2], stream.point(object2[0], object2[1], object2[2]);
  },
  LineString: function(object2, stream) {
    streamLine(object2.coordinates, stream, 0);
  },
  MultiLineString: function(object2, stream) {
    var coordinates2 = object2.coordinates, i2 = -1, n2 = coordinates2.length;
    while (++i2 < n2)
      streamLine(coordinates2[i2], stream, 0);
  },
  Polygon: function(object2, stream) {
    streamPolygon(object2.coordinates, stream);
  },
  MultiPolygon: function(object2, stream) {
    var coordinates2 = object2.coordinates, i2 = -1, n2 = coordinates2.length;
    while (++i2 < n2)
      streamPolygon(coordinates2[i2], stream);
  },
  GeometryCollection: function(object2, stream) {
    var geometries = object2.geometries, i2 = -1, n2 = geometries.length;
    while (++i2 < n2)
      streamGeometry(geometries[i2], stream);
  }
};
function streamLine(coordinates2, stream, closed) {
  var i2 = -1, n2 = coordinates2.length - closed, coordinate;
  stream.lineStart();
  while (++i2 < n2)
    coordinate = coordinates2[i2], stream.point(coordinate[0], coordinate[1], coordinate[2]);
  stream.lineEnd();
}
function streamPolygon(coordinates2, stream) {
  var i2 = -1, n2 = coordinates2.length;
  stream.polygonStart();
  while (++i2 < n2)
    streamLine(coordinates2[i2], stream, 1);
  stream.polygonEnd();
}
function geoStream(object2, stream) {
  if (object2 && streamObjectType.hasOwnProperty(object2.type)) {
    streamObjectType[object2.type](object2, stream);
  } else {
    streamGeometry(object2, stream);
  }
}
var areaRingSum$1 = new Adder();
var areaSum$1 = new Adder(), lambda00$2, phi00$2, lambda0$2, cosPhi0$1, sinPhi0$1;
var areaStream$1 = {
  point: noop$1,
  lineStart: noop$1,
  lineEnd: noop$1,
  polygonStart: function() {
    areaRingSum$1 = new Adder();
    areaStream$1.lineStart = areaRingStart$1;
    areaStream$1.lineEnd = areaRingEnd$1;
  },
  polygonEnd: function() {
    var areaRing = +areaRingSum$1;
    areaSum$1.add(areaRing < 0 ? tau + areaRing : areaRing);
    this.lineStart = this.lineEnd = this.point = noop$1;
  },
  sphere: function() {
    areaSum$1.add(tau);
  }
};
function areaRingStart$1() {
  areaStream$1.point = areaPointFirst$1;
}
function areaRingEnd$1() {
  areaPoint$1(lambda00$2, phi00$2);
}
function areaPointFirst$1(lambda, phi) {
  areaStream$1.point = areaPoint$1;
  lambda00$2 = lambda, phi00$2 = phi;
  lambda *= radians, phi *= radians;
  lambda0$2 = lambda, cosPhi0$1 = cos(phi = phi / 2 + quarterPi), sinPhi0$1 = sin(phi);
}
function areaPoint$1(lambda, phi) {
  lambda *= radians, phi *= radians;
  phi = phi / 2 + quarterPi;
  var dLambda = lambda - lambda0$2, sdLambda = dLambda >= 0 ? 1 : -1, adLambda = sdLambda * dLambda, cosPhi = cos(phi), sinPhi = sin(phi), k2 = sinPhi0$1 * sinPhi, u2 = cosPhi0$1 * cosPhi + k2 * cos(adLambda), v2 = k2 * sdLambda * sin(adLambda);
  areaRingSum$1.add(atan2(v2, u2));
  lambda0$2 = lambda, cosPhi0$1 = cosPhi, sinPhi0$1 = sinPhi;
}
function area(object2) {
  areaSum$1 = new Adder();
  geoStream(object2, areaStream$1);
  return areaSum$1 * 2;
}
function spherical(cartesian2) {
  return [atan2(cartesian2[1], cartesian2[0]), asin(cartesian2[2])];
}
function cartesian(spherical2) {
  var lambda = spherical2[0], phi = spherical2[1], cosPhi = cos(phi);
  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];
}
function cartesianDot(a2, b2) {
  return a2[0] * b2[0] + a2[1] * b2[1] + a2[2] * b2[2];
}
function cartesianCross(a2, b2) {
  return [a2[1] * b2[2] - a2[2] * b2[1], a2[2] * b2[0] - a2[0] * b2[2], a2[0] * b2[1] - a2[1] * b2[0]];
}
function cartesianAddInPlace(a2, b2) {
  a2[0] += b2[0], a2[1] += b2[1], a2[2] += b2[2];
}
function cartesianScale(vector, k2) {
  return [vector[0] * k2, vector[1] * k2, vector[2] * k2];
}
function cartesianNormalizeInPlace(d2) {
  var l2 = sqrt(d2[0] * d2[0] + d2[1] * d2[1] + d2[2] * d2[2]);
  d2[0] /= l2, d2[1] /= l2, d2[2] /= l2;
}
var lambda0$1, phi0, lambda1, phi1, lambda2, lambda00$1, phi00$1, p0, deltaSum, ranges, range2;
var boundsStream$1 = {
  point: boundsPoint$1,
  lineStart: boundsLineStart,
  lineEnd: boundsLineEnd,
  polygonStart: function() {
    boundsStream$1.point = boundsRingPoint;
    boundsStream$1.lineStart = boundsRingStart;
    boundsStream$1.lineEnd = boundsRingEnd;
    deltaSum = new Adder();
    areaStream$1.polygonStart();
  },
  polygonEnd: function() {
    areaStream$1.polygonEnd();
    boundsStream$1.point = boundsPoint$1;
    boundsStream$1.lineStart = boundsLineStart;
    boundsStream$1.lineEnd = boundsLineEnd;
    if (areaRingSum$1 < 0)
      lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);
    else if (deltaSum > epsilon)
      phi1 = 90;
    else if (deltaSum < -epsilon)
      phi0 = -90;
    range2[0] = lambda0$1, range2[1] = lambda1;
  },
  sphere: function() {
    lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);
  }
};
function boundsPoint$1(lambda, phi) {
  ranges.push(range2 = [lambda0$1 = lambda, lambda1 = lambda]);
  if (phi < phi0)
    phi0 = phi;
  if (phi > phi1)
    phi1 = phi;
}
function linePoint(lambda, phi) {
  var p2 = cartesian([lambda * radians, phi * radians]);
  if (p0) {
    var normal = cartesianCross(p0, p2), equatorial = [normal[1], -normal[0], 0], inflection = cartesianCross(equatorial, normal);
    cartesianNormalizeInPlace(inflection);
    inflection = spherical(inflection);
    var delta = lambda - lambda2, sign2 = delta > 0 ? 1 : -1, lambdai = inflection[0] * degrees$1 * sign2, phii, antimeridian = abs(delta) > 180;
    if (antimeridian ^ (sign2 * lambda2 < lambdai && lambdai < sign2 * lambda)) {
      phii = inflection[1] * degrees$1;
      if (phii > phi1)
        phi1 = phii;
    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign2 * lambda2 < lambdai && lambdai < sign2 * lambda)) {
      phii = -inflection[1] * degrees$1;
      if (phii < phi0)
        phi0 = phii;
    } else {
      if (phi < phi0)
        phi0 = phi;
      if (phi > phi1)
        phi1 = phi;
    }
    if (antimeridian) {
      if (lambda < lambda2) {
        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1))
          lambda1 = lambda;
      } else {
        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1))
          lambda0$1 = lambda;
      }
    } else {
      if (lambda1 >= lambda0$1) {
        if (lambda < lambda0$1)
          lambda0$1 = lambda;
        if (lambda > lambda1)
          lambda1 = lambda;
      } else {
        if (lambda > lambda2) {
          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1))
            lambda1 = lambda;
        } else {
          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1))
            lambda0$1 = lambda;
        }
      }
    }
  } else {
    ranges.push(range2 = [lambda0$1 = lambda, lambda1 = lambda]);
  }
  if (phi < phi0)
    phi0 = phi;
  if (phi > phi1)
    phi1 = phi;
  p0 = p2, lambda2 = lambda;
}
function boundsLineStart() {
  boundsStream$1.point = linePoint;
}
function boundsLineEnd() {
  range2[0] = lambda0$1, range2[1] = lambda1;
  boundsStream$1.point = boundsPoint$1;
  p0 = null;
}
function boundsRingPoint(lambda, phi) {
  if (p0) {
    var delta = lambda - lambda2;
    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
  } else {
    lambda00$1 = lambda, phi00$1 = phi;
  }
  areaStream$1.point(lambda, phi);
  linePoint(lambda, phi);
}
function boundsRingStart() {
  areaStream$1.lineStart();
}
function boundsRingEnd() {
  boundsRingPoint(lambda00$1, phi00$1);
  areaStream$1.lineEnd();
  if (abs(deltaSum) > epsilon)
    lambda0$1 = -(lambda1 = 180);
  range2[0] = lambda0$1, range2[1] = lambda1;
  p0 = null;
}
function angle(lambda02, lambda12) {
  return (lambda12 -= lambda02) < 0 ? lambda12 + 360 : lambda12;
}
function rangeCompare(a2, b2) {
  return a2[0] - b2[0];
}
function rangeContains(range3, x2) {
  return range3[0] <= range3[1] ? range3[0] <= x2 && x2 <= range3[1] : x2 < range3[0] || range3[1] < x2;
}
function bounds(feature2) {
  var i2, n2, a2, b2, merged, deltaMax, delta;
  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);
  ranges = [];
  geoStream(feature2, boundsStream$1);
  if (n2 = ranges.length) {
    ranges.sort(rangeCompare);
    for (i2 = 1, a2 = ranges[0], merged = [a2]; i2 < n2; ++i2) {
      b2 = ranges[i2];
      if (rangeContains(a2, b2[0]) || rangeContains(a2, b2[1])) {
        if (angle(a2[0], b2[1]) > angle(a2[0], a2[1]))
          a2[1] = b2[1];
        if (angle(b2[0], a2[1]) > angle(a2[0], a2[1]))
          a2[0] = b2[0];
      } else {
        merged.push(a2 = b2);
      }
    }
    for (deltaMax = -Infinity, n2 = merged.length - 1, i2 = 0, a2 = merged[n2]; i2 <= n2; a2 = b2, ++i2) {
      b2 = merged[i2];
      if ((delta = angle(a2[1], b2[0])) > deltaMax)
        deltaMax = delta, lambda0$1 = b2[0], lambda1 = a2[1];
    }
  }
  ranges = range2 = null;
  return lambda0$1 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0$1, phi0], [lambda1, phi1]];
}
var W0, W1, X0$1, Y0$1, Z0$1, X1$1, Y1$1, Z1$1, X2$1, Y2$1, Z2$1, lambda00, phi00, x0$4, y0$4, z0;
var centroidStream$1 = {
  sphere: noop$1,
  point: centroidPoint$1,
  lineStart: centroidLineStart$1,
  lineEnd: centroidLineEnd$1,
  polygonStart: function() {
    centroidStream$1.lineStart = centroidRingStart$1;
    centroidStream$1.lineEnd = centroidRingEnd$1;
  },
  polygonEnd: function() {
    centroidStream$1.lineStart = centroidLineStart$1;
    centroidStream$1.lineEnd = centroidLineEnd$1;
  }
};
function centroidPoint$1(lambda, phi) {
  lambda *= radians, phi *= radians;
  var cosPhi = cos(phi);
  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));
}
function centroidPointCartesian(x2, y2, z2) {
  ++W0;
  X0$1 += (x2 - X0$1) / W0;
  Y0$1 += (y2 - Y0$1) / W0;
  Z0$1 += (z2 - Z0$1) / W0;
}
function centroidLineStart$1() {
  centroidStream$1.point = centroidLinePointFirst;
}
function centroidLinePointFirst(lambda, phi) {
  lambda *= radians, phi *= radians;
  var cosPhi = cos(phi);
  x0$4 = cosPhi * cos(lambda);
  y0$4 = cosPhi * sin(lambda);
  z0 = sin(phi);
  centroidStream$1.point = centroidLinePoint;
  centroidPointCartesian(x0$4, y0$4, z0);
}
function centroidLinePoint(lambda, phi) {
  lambda *= radians, phi *= radians;
  var cosPhi = cos(phi), x2 = cosPhi * cos(lambda), y2 = cosPhi * sin(lambda), z2 = sin(phi), w2 = atan2(sqrt((w2 = y0$4 * z2 - z0 * y2) * w2 + (w2 = z0 * x2 - x0$4 * z2) * w2 + (w2 = x0$4 * y2 - y0$4 * x2) * w2), x0$4 * x2 + y0$4 * y2 + z0 * z2);
  W1 += w2;
  X1$1 += w2 * (x0$4 + (x0$4 = x2));
  Y1$1 += w2 * (y0$4 + (y0$4 = y2));
  Z1$1 += w2 * (z0 + (z0 = z2));
  centroidPointCartesian(x0$4, y0$4, z0);
}
function centroidLineEnd$1() {
  centroidStream$1.point = centroidPoint$1;
}
function centroidRingStart$1() {
  centroidStream$1.point = centroidRingPointFirst;
}
function centroidRingEnd$1() {
  centroidRingPoint(lambda00, phi00);
  centroidStream$1.point = centroidPoint$1;
}
function centroidRingPointFirst(lambda, phi) {
  lambda00 = lambda, phi00 = phi;
  lambda *= radians, phi *= radians;
  centroidStream$1.point = centroidRingPoint;
  var cosPhi = cos(phi);
  x0$4 = cosPhi * cos(lambda);
  y0$4 = cosPhi * sin(lambda);
  z0 = sin(phi);
  centroidPointCartesian(x0$4, y0$4, z0);
}
function centroidRingPoint(lambda, phi) {
  lambda *= radians, phi *= radians;
  var cosPhi = cos(phi), x2 = cosPhi * cos(lambda), y2 = cosPhi * sin(lambda), z2 = sin(phi), cx2 = y0$4 * z2 - z0 * y2, cy = z0 * x2 - x0$4 * z2, cz = x0$4 * y2 - y0$4 * x2, m2 = hypot(cx2, cy, cz), w2 = asin(m2), v2 = m2 && -w2 / m2;
  X2$1.add(v2 * cx2);
  Y2$1.add(v2 * cy);
  Z2$1.add(v2 * cz);
  W1 += w2;
  X1$1 += w2 * (x0$4 + (x0$4 = x2));
  Y1$1 += w2 * (y0$4 + (y0$4 = y2));
  Z1$1 += w2 * (z0 + (z0 = z2));
  centroidPointCartesian(x0$4, y0$4, z0);
}
function centroid(object2) {
  W0 = W1 = X0$1 = Y0$1 = Z0$1 = X1$1 = Y1$1 = Z1$1 = 0;
  X2$1 = new Adder();
  Y2$1 = new Adder();
  Z2$1 = new Adder();
  geoStream(object2, centroidStream$1);
  var x2 = +X2$1, y2 = +Y2$1, z2 = +Z2$1, m2 = hypot(x2, y2, z2);
  if (m2 < epsilon2$1) {
    x2 = X1$1, y2 = Y1$1, z2 = Z1$1;
    if (W1 < epsilon)
      x2 = X0$1, y2 = Y0$1, z2 = Z0$1;
    m2 = hypot(x2, y2, z2);
    if (m2 < epsilon2$1)
      return [NaN, NaN];
  }
  return [atan2(y2, x2) * degrees$1, asin(z2 / m2) * degrees$1];
}
function constant$3(x2) {
  return function() {
    return x2;
  };
}
function compose2(a2, b2) {
  function compose3(x2, y2) {
    return x2 = a2(x2, y2), b2(x2[0], x2[1]);
  }
  if (a2.invert && b2.invert)
    compose3.invert = function(x2, y2) {
      return x2 = b2.invert(x2, y2), x2 && a2.invert(x2[0], x2[1]);
    };
  return compose3;
}
function rotationIdentity(lambda, phi) {
  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];
}
rotationIdentity.invert = rotationIdentity;
function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose2(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;
}
function forwardRotationLambda(deltaLambda) {
  return function(lambda, phi) {
    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];
  };
}
function rotationLambda(deltaLambda) {
  var rotation2 = forwardRotationLambda(deltaLambda);
  rotation2.invert = forwardRotationLambda(-deltaLambda);
  return rotation2;
}
function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = cos(deltaPhi), sinDeltaPhi = sin(deltaPhi), cosDeltaGamma = cos(deltaGamma), sinDeltaGamma = sin(deltaGamma);
  function rotation2(lambda, phi) {
    var cosPhi = cos(phi), x2 = cos(lambda) * cosPhi, y2 = sin(lambda) * cosPhi, z2 = sin(phi), k2 = z2 * cosDeltaPhi + x2 * sinDeltaPhi;
    return [
      atan2(y2 * cosDeltaGamma - k2 * sinDeltaGamma, x2 * cosDeltaPhi - z2 * sinDeltaPhi),
      asin(k2 * cosDeltaGamma + y2 * sinDeltaGamma)
    ];
  }
  rotation2.invert = function(lambda, phi) {
    var cosPhi = cos(phi), x2 = cos(lambda) * cosPhi, y2 = sin(lambda) * cosPhi, z2 = sin(phi), k2 = z2 * cosDeltaGamma - y2 * sinDeltaGamma;
    return [
      atan2(y2 * cosDeltaGamma + z2 * sinDeltaGamma, x2 * cosDeltaPhi + k2 * sinDeltaPhi),
      asin(k2 * cosDeltaPhi - x2 * sinDeltaPhi)
    ];
  };
  return rotation2;
}
function rotation(rotate) {
  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);
  function forward(coordinates2) {
    coordinates2 = rotate(coordinates2[0] * radians, coordinates2[1] * radians);
    return coordinates2[0] *= degrees$1, coordinates2[1] *= degrees$1, coordinates2;
  }
  forward.invert = function(coordinates2) {
    coordinates2 = rotate.invert(coordinates2[0] * radians, coordinates2[1] * radians);
    return coordinates2[0] *= degrees$1, coordinates2[1] *= degrees$1, coordinates2;
  };
  return forward;
}
function circleStream(stream, radius, delta, direction, t02, t12) {
  if (!delta)
    return;
  var cosRadius = cos(radius), sinRadius = sin(radius), step = direction * delta;
  if (t02 == null) {
    t02 = radius + direction * tau;
    t12 = radius - step / 2;
  } else {
    t02 = circleRadius(cosRadius, t02);
    t12 = circleRadius(cosRadius, t12);
    if (direction > 0 ? t02 < t12 : t02 > t12)
      t02 += direction * tau;
  }
  for (var point2, t2 = t02; direction > 0 ? t2 > t12 : t2 < t12; t2 -= step) {
    point2 = spherical([cosRadius, -sinRadius * cos(t2), -sinRadius * sin(t2)]);
    stream.point(point2[0], point2[1]);
  }
}
function circleRadius(cosRadius, point2) {
  point2 = cartesian(point2), point2[0] -= cosRadius;
  cartesianNormalizeInPlace(point2);
  var radius = acos(-point2[1]);
  return ((-point2[2] < 0 ? -radius : radius) + tau - epsilon) % tau;
}
function circle$1() {
  var center = constant$3([0, 0]), radius = constant$3(90), precision = constant$3(6), ring, rotate, stream = { point: point2 };
  function point2(x2, y2) {
    ring.push(x2 = rotate(x2, y2));
    x2[0] *= degrees$1, x2[1] *= degrees$1;
  }
  function circle2() {
    var c2 = center.apply(this, arguments), r2 = radius.apply(this, arguments) * radians, p2 = precision.apply(this, arguments) * radians;
    ring = [];
    rotate = rotateRadians(-c2[0] * radians, -c2[1] * radians, 0).invert;
    circleStream(stream, r2, p2, 1);
    c2 = { type: "Polygon", coordinates: [ring] };
    ring = rotate = null;
    return c2;
  }
  circle2.center = function(_) {
    return arguments.length ? (center = typeof _ === "function" ? _ : constant$3([+_[0], +_[1]]), circle2) : center;
  };
  circle2.radius = function(_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : constant$3(+_), circle2) : radius;
  };
  circle2.precision = function(_) {
    return arguments.length ? (precision = typeof _ === "function" ? _ : constant$3(+_), circle2) : precision;
  };
  return circle2;
}
function clipBuffer() {
  var lines = [], line;
  return {
    point: function(x2, y2, m2) {
      line.push([x2, y2, m2]);
    },
    lineStart: function() {
      lines.push(line = []);
    },
    lineEnd: noop$1,
    rejoin: function() {
      if (lines.length > 1)
        lines.push(lines.pop().concat(lines.shift()));
    },
    result: function() {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
}
function pointEqual(a2, b2) {
  return abs(a2[0] - b2[0]) < epsilon && abs(a2[1] - b2[1]) < epsilon;
}
function Intersection(point2, points, other, entry) {
  this.x = point2;
  this.z = points;
  this.o = other;
  this.e = entry;
  this.v = false;
  this.n = this.p = null;
}
function clipRejoin(segments, compareIntersection2, startInside, interpolate2, stream) {
  var subject = [], clip2 = [], i2, n2;
  segments.forEach(function(segment) {
    if ((n3 = segment.length - 1) <= 0)
      return;
    var n3, p02 = segment[0], p1 = segment[n3], x2;
    if (pointEqual(p02, p1)) {
      if (!p02[2] && !p1[2]) {
        stream.lineStart();
        for (i2 = 0; i2 < n3; ++i2)
          stream.point((p02 = segment[i2])[0], p02[1]);
        stream.lineEnd();
        return;
      }
      p1[0] += 2 * epsilon;
    }
    subject.push(x2 = new Intersection(p02, segment, null, true));
    clip2.push(x2.o = new Intersection(p02, null, x2, false));
    subject.push(x2 = new Intersection(p1, segment, null, false));
    clip2.push(x2.o = new Intersection(p1, null, x2, true));
  });
  if (!subject.length)
    return;
  clip2.sort(compareIntersection2);
  link(subject);
  link(clip2);
  for (i2 = 0, n2 = clip2.length; i2 < n2; ++i2) {
    clip2[i2].e = startInside = !startInside;
  }
  var start2 = subject[0], points, point2;
  while (1) {
    var current = start2, isSubject = true;
    while (current.v)
      if ((current = current.n) === start2)
        return;
    points = current.z;
    stream.lineStart();
    do {
      current.v = current.o.v = true;
      if (current.e) {
        if (isSubject) {
          for (i2 = 0, n2 = points.length; i2 < n2; ++i2)
            stream.point((point2 = points[i2])[0], point2[1]);
        } else {
          interpolate2(current.x, current.n.x, 1, stream);
        }
        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;
          for (i2 = points.length - 1; i2 >= 0; --i2)
            stream.point((point2 = points[i2])[0], point2[1]);
        } else {
          interpolate2(current.x, current.p.x, -1, stream);
        }
        current = current.p;
      }
      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);
    stream.lineEnd();
  }
}
function link(array2) {
  if (!(n2 = array2.length))
    return;
  var n2, i2 = 0, a2 = array2[0], b2;
  while (++i2 < n2) {
    a2.n = b2 = array2[i2];
    b2.p = a2;
    a2 = b2;
  }
  a2.n = b2 = array2[0];
  b2.p = a2;
}
function longitude(point2) {
  if (abs(point2[0]) <= pi)
    return point2[0];
  else
    return sign(point2[0]) * ((abs(point2[0]) + pi) % tau - pi);
}
function polygonContains(polygon, point2) {
  var lambda = longitude(point2), phi = point2[1], sinPhi = sin(phi), normal = [sin(lambda), -cos(lambda), 0], angle2 = 0, winding = 0;
  var sum2 = new Adder();
  if (sinPhi === 1)
    phi = halfPi + epsilon;
  else if (sinPhi === -1)
    phi = -halfPi - epsilon;
  for (var i2 = 0, n2 = polygon.length; i2 < n2; ++i2) {
    if (!(m2 = (ring = polygon[i2]).length))
      continue;
    var ring, m2, point0 = ring[m2 - 1], lambda02 = longitude(point0), phi02 = point0[1] / 2 + quarterPi, sinPhi02 = sin(phi02), cosPhi02 = cos(phi02);
    for (var j = 0; j < m2; ++j, lambda02 = lambda12, sinPhi02 = sinPhi1, cosPhi02 = cosPhi1, point0 = point1) {
      var point1 = ring[j], lambda12 = longitude(point1), phi12 = point1[1] / 2 + quarterPi, sinPhi1 = sin(phi12), cosPhi1 = cos(phi12), delta = lambda12 - lambda02, sign2 = delta >= 0 ? 1 : -1, absDelta = sign2 * delta, antimeridian = absDelta > pi, k2 = sinPhi02 * sinPhi1;
      sum2.add(atan2(k2 * sign2 * sin(absDelta), cosPhi02 * cosPhi1 + k2 * cos(absDelta)));
      angle2 += antimeridian ? delta + sign2 * tau : delta;
      if (antimeridian ^ lambda02 >= lambda ^ lambda12 >= lambda) {
        var arc = cartesianCross(cartesian(point0), cartesian(point1));
        cartesianNormalizeInPlace(arc);
        var intersection = cartesianCross(normal, arc);
        cartesianNormalizeInPlace(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);
        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  }
  return (angle2 < -epsilon || angle2 < epsilon && sum2 < -epsilon2$1) ^ winding & 1;
}
function clip(pointVisible, clipLine2, interpolate2, start2) {
  return function(sink) {
    var line = clipLine2(sink), ringBuffer = clipBuffer(), ringSink = clipLine2(ringBuffer), polygonStarted = false, polygon, segments, ring;
    var clip2 = {
      point: point2,
      lineStart,
      lineEnd,
      polygonStart: function() {
        clip2.point = pointRing;
        clip2.lineStart = ringStart;
        clip2.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function() {
        clip2.point = point2;
        clip2.lineStart = lineStart;
        clip2.lineEnd = lineEnd;
        segments = merge(segments);
        var startInside = polygonContains(polygon, start2);
        if (segments.length) {
          if (!polygonStarted)
            sink.polygonStart(), polygonStarted = true;
          clipRejoin(segments, compareIntersection, startInside, interpolate2, sink);
        } else if (startInside) {
          if (!polygonStarted)
            sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate2(null, null, 1, sink);
          sink.lineEnd();
        }
        if (polygonStarted)
          sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function() {
        sink.polygonStart();
        sink.lineStart();
        interpolate2(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };
    function point2(lambda, phi) {
      if (pointVisible(lambda, phi))
        sink.point(lambda, phi);
    }
    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }
    function lineStart() {
      clip2.point = pointLine;
      line.lineStart();
    }
    function lineEnd() {
      clip2.point = point2;
      line.lineEnd();
    }
    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }
    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }
    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();
      var clean = ringSink.clean(), ringSegments = ringBuffer.result(), i2, n2 = ringSegments.length, m2, segment, point3;
      ring.pop();
      polygon.push(ring);
      ring = null;
      if (!n2)
        return;
      if (clean & 1) {
        segment = ringSegments[0];
        if ((m2 = segment.length - 1) > 0) {
          if (!polygonStarted)
            sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          for (i2 = 0; i2 < m2; ++i2)
            sink.point((point3 = segment[i2])[0], point3[1]);
          sink.lineEnd();
        }
        return;
      }
      if (n2 > 1 && clean & 2)
        ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
      segments.push(ringSegments.filter(validSegment));
    }
    return clip2;
  };
}
function validSegment(segment) {
  return segment.length > 1;
}
function compareIntersection(a2, b2) {
  return ((a2 = a2.x)[0] < 0 ? a2[1] - halfPi - epsilon : halfPi - a2[1]) - ((b2 = b2.x)[0] < 0 ? b2[1] - halfPi - epsilon : halfPi - b2[1]);
}
const clipAntimeridian = clip(
  function() {
    return true;
  },
  clipAntimeridianLine,
  clipAntimeridianInterpolate,
  [-pi, -halfPi]
);
function clipAntimeridianLine(stream) {
  var lambda02 = NaN, phi02 = NaN, sign0 = NaN, clean;
  return {
    lineStart: function() {
      stream.lineStart();
      clean = 1;
    },
    point: function(lambda12, phi12) {
      var sign1 = lambda12 > 0 ? pi : -pi, delta = abs(lambda12 - lambda02);
      if (abs(delta - pi) < epsilon) {
        stream.point(lambda02, phi02 = (phi02 + phi12) / 2 > 0 ? halfPi : -halfPi);
        stream.point(sign0, phi02);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi02);
        stream.point(lambda12, phi02);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= pi) {
        if (abs(lambda02 - sign0) < epsilon)
          lambda02 -= sign0 * epsilon;
        if (abs(lambda12 - sign1) < epsilon)
          lambda12 -= sign1 * epsilon;
        phi02 = clipAntimeridianIntersect(lambda02, phi02, lambda12, phi12);
        stream.point(sign0, phi02);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi02);
        clean = 0;
      }
      stream.point(lambda02 = lambda12, phi02 = phi12);
      sign0 = sign1;
    },
    lineEnd: function() {
      stream.lineEnd();
      lambda02 = phi02 = NaN;
    },
    clean: function() {
      return 2 - clean;
    }
  };
}
function clipAntimeridianIntersect(lambda02, phi02, lambda12, phi12) {
  var cosPhi02, cosPhi1, sinLambda0Lambda1 = sin(lambda02 - lambda12);
  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi02) * (cosPhi1 = cos(phi12)) * sin(lambda12) - sin(phi12) * (cosPhi02 = cos(phi02)) * sin(lambda02)) / (cosPhi02 * cosPhi1 * sinLambda0Lambda1)) : (phi02 + phi12) / 2;
}
function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;
  if (from == null) {
    phi = direction * halfPi;
    stream.point(-pi, phi);
    stream.point(0, phi);
    stream.point(pi, phi);
    stream.point(pi, 0);
    stream.point(pi, -phi);
    stream.point(0, -phi);
    stream.point(-pi, -phi);
    stream.point(-pi, 0);
    stream.point(-pi, phi);
  } else if (abs(from[0] - to[0]) > epsilon) {
    var lambda = from[0] < to[0] ? pi : -pi;
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}
function clipCircle(radius) {
  var cr = cos(radius), delta = 6 * radians, smallRadius = cr > 0, notHemisphere = abs(cr) > epsilon;
  function interpolate2(from, to, direction, stream) {
    circleStream(stream, radius, delta, direction, from, to);
  }
  function visible(lambda, phi) {
    return cos(lambda) * cos(phi) > cr;
  }
  function clipLine2(stream) {
    var point0, c0, v0, v00, clean;
    return {
      lineStart: function() {
        v00 = v0 = false;
        clean = 1;
      },
      point: function(lambda, phi) {
        var point1 = [lambda, phi], point2, v2 = visible(lambda, phi), c2 = smallRadius ? v2 ? 0 : code(lambda, phi) : v2 ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;
        if (!point0 && (v00 = v0 = v2))
          stream.lineStart();
        if (v2 !== v0) {
          point2 = intersect(point0, point1);
          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))
            point1[2] = 1;
        }
        if (v2 !== v0) {
          clean = 0;
          if (v2) {
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1], 2);
            stream.lineEnd();
          }
          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v2) {
          var t2;
          if (!(c2 & c0) && (t2 = intersect(point1, point0, true))) {
            clean = 0;
            if (smallRadius) {
              stream.lineStart();
              stream.point(t2[0][0], t2[0][1]);
              stream.point(t2[1][0], t2[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t2[1][0], t2[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t2[0][0], t2[0][1], 3);
            }
          }
        }
        if (v2 && (!point0 || !pointEqual(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }
        point0 = point1, v0 = v2, c0 = c2;
      },
      lineEnd: function() {
        if (v0)
          stream.lineEnd();
        point0 = null;
      },
      // Rejoin first and last segments if there were intersections and the first
      // and last points were visible.
      clean: function() {
        return clean | (v00 && v0) << 1;
      }
    };
  }
  function intersect(a2, b2, two) {
    var pa2 = cartesian(a2), pb2 = cartesian(b2);
    var n1 = [1, 0, 0], n2 = cartesianCross(pa2, pb2), n2n2 = cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
    if (!determinant)
      return !two && a2;
    var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = cartesianCross(n1, n2), A5 = cartesianScale(n1, c1), B2 = cartesianScale(n2, c2);
    cartesianAddInPlace(A5, B2);
    var u2 = n1xn2, w2 = cartesianDot(A5, u2), uu = cartesianDot(u2, u2), t2 = w2 * w2 - uu * (cartesianDot(A5, A5) - 1);
    if (t2 < 0)
      return;
    var t3 = sqrt(t2), q2 = cartesianScale(u2, (-w2 - t3) / uu);
    cartesianAddInPlace(q2, A5);
    q2 = spherical(q2);
    if (!two)
      return q2;
    var lambda02 = a2[0], lambda12 = b2[0], phi02 = a2[1], phi12 = b2[1], z2;
    if (lambda12 < lambda02)
      z2 = lambda02, lambda02 = lambda12, lambda12 = z2;
    var delta2 = lambda12 - lambda02, polar = abs(delta2 - pi) < epsilon, meridian = polar || delta2 < epsilon;
    if (!polar && phi12 < phi02)
      z2 = phi02, phi02 = phi12, phi12 = z2;
    if (meridian ? polar ? phi02 + phi12 > 0 ^ q2[1] < (abs(q2[0] - lambda02) < epsilon ? phi02 : phi12) : phi02 <= q2[1] && q2[1] <= phi12 : delta2 > pi ^ (lambda02 <= q2[0] && q2[0] <= lambda12)) {
      var q1 = cartesianScale(u2, (-w2 + t3) / uu);
      cartesianAddInPlace(q1, A5);
      return [q2, spherical(q1)];
    }
  }
  function code(lambda, phi) {
    var r2 = smallRadius ? radius : pi - radius, code2 = 0;
    if (lambda < -r2)
      code2 |= 1;
    else if (lambda > r2)
      code2 |= 2;
    if (phi < -r2)
      code2 |= 4;
    else if (phi > r2)
      code2 |= 8;
    return code2;
  }
  return clip(visible, clipLine2, interpolate2, smallRadius ? [0, -radius] : [-pi, radius - pi]);
}
function clipLine(a2, b2, x02, y02, x12, y12) {
  var ax = a2[0], ay = a2[1], bx = b2[0], by = b2[1], t02 = 0, t12 = 1, dx = bx - ax, dy = by - ay, r2;
  r2 = x02 - ax;
  if (!dx && r2 > 0)
    return;
  r2 /= dx;
  if (dx < 0) {
    if (r2 < t02)
      return;
    if (r2 < t12)
      t12 = r2;
  } else if (dx > 0) {
    if (r2 > t12)
      return;
    if (r2 > t02)
      t02 = r2;
  }
  r2 = x12 - ax;
  if (!dx && r2 < 0)
    return;
  r2 /= dx;
  if (dx < 0) {
    if (r2 > t12)
      return;
    if (r2 > t02)
      t02 = r2;
  } else if (dx > 0) {
    if (r2 < t02)
      return;
    if (r2 < t12)
      t12 = r2;
  }
  r2 = y02 - ay;
  if (!dy && r2 > 0)
    return;
  r2 /= dy;
  if (dy < 0) {
    if (r2 < t02)
      return;
    if (r2 < t12)
      t12 = r2;
  } else if (dy > 0) {
    if (r2 > t12)
      return;
    if (r2 > t02)
      t02 = r2;
  }
  r2 = y12 - ay;
  if (!dy && r2 < 0)
    return;
  r2 /= dy;
  if (dy < 0) {
    if (r2 > t12)
      return;
    if (r2 > t02)
      t02 = r2;
  } else if (dy > 0) {
    if (r2 < t02)
      return;
    if (r2 < t12)
      t12 = r2;
  }
  if (t02 > 0)
    a2[0] = ax + t02 * dx, a2[1] = ay + t02 * dy;
  if (t12 < 1)
    b2[0] = ax + t12 * dx, b2[1] = ay + t12 * dy;
  return true;
}
var clipMax = 1e9, clipMin = -clipMax;
function clipRectangle(x02, y02, x12, y12) {
  function visible(x2, y2) {
    return x02 <= x2 && x2 <= x12 && y02 <= y2 && y2 <= y12;
  }
  function interpolate2(from, to, direction, stream) {
    var a2 = 0, a1 = 0;
    if (from == null || (a2 = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {
      do
        stream.point(a2 === 0 || a2 === 3 ? x02 : x12, a2 > 1 ? y12 : y02);
      while ((a2 = (a2 + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }
  function corner(p2, direction) {
    return abs(p2[0] - x02) < epsilon ? direction > 0 ? 0 : 3 : abs(p2[0] - x12) < epsilon ? direction > 0 ? 2 : 1 : abs(p2[1] - y02) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
  }
  function compareIntersection2(a2, b2) {
    return comparePoint(a2.x, b2.x);
  }
  function comparePoint(a2, b2) {
    var ca2 = corner(a2, 1), cb2 = corner(b2, 1);
    return ca2 !== cb2 ? ca2 - cb2 : ca2 === 0 ? b2[1] - a2[1] : ca2 === 1 ? a2[0] - b2[0] : ca2 === 2 ? a2[1] - b2[1] : b2[0] - a2[0];
  }
  return function(stream) {
    var activeStream = stream, bufferStream = clipBuffer(), segments, polygon, ring, x__, y__, v__, x_, y_, v_, first, clean;
    var clipStream = {
      point: point2,
      lineStart,
      lineEnd,
      polygonStart,
      polygonEnd
    };
    function point2(x2, y2) {
      if (visible(x2, y2))
        activeStream.point(x2, y2);
    }
    function polygonInside() {
      var winding = 0;
      for (var i2 = 0, n2 = polygon.length; i2 < n2; ++i2) {
        for (var ring2 = polygon[i2], j = 1, m2 = ring2.length, point3 = ring2[0], a0, a1, b0 = point3[0], b1 = point3[1]; j < m2; ++j) {
          a0 = b0, a1 = b1, point3 = ring2[j], b0 = point3[0], b1 = point3[1];
          if (a1 <= y12) {
            if (b1 > y12 && (b0 - a0) * (y12 - a1) > (b1 - a1) * (x02 - a0))
              ++winding;
          } else {
            if (b1 <= y12 && (b0 - a0) * (y12 - a1) < (b1 - a1) * (x02 - a0))
              --winding;
          }
        }
      }
      return winding;
    }
    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }
    function polygonEnd() {
      var startInside = polygonInside(), cleanInside = clean && startInside, visible2 = (segments = merge(segments)).length;
      if (cleanInside || visible2) {
        stream.polygonStart();
        if (cleanInside) {
          stream.lineStart();
          interpolate2(null, null, 1, stream);
          stream.lineEnd();
        }
        if (visible2) {
          clipRejoin(segments, compareIntersection2, startInside, interpolate2, stream);
        }
        stream.polygonEnd();
      }
      activeStream = stream, segments = polygon = ring = null;
    }
    function lineStart() {
      clipStream.point = linePoint2;
      if (polygon)
        polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    }
    function lineEnd() {
      if (segments) {
        linePoint2(x__, y__);
        if (v__ && v_)
          bufferStream.rejoin();
        segments.push(bufferStream.result());
      }
      clipStream.point = point2;
      if (v_)
        activeStream.lineEnd();
    }
    function linePoint2(x2, y2) {
      var v2 = visible(x2, y2);
      if (polygon)
        ring.push([x2, y2]);
      if (first) {
        x__ = x2, y__ = y2, v__ = v2;
        first = false;
        if (v2) {
          activeStream.lineStart();
          activeStream.point(x2, y2);
        }
      } else {
        if (v2 && v_)
          activeStream.point(x2, y2);
        else {
          var a2 = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))], b2 = [x2 = Math.max(clipMin, Math.min(clipMax, x2)), y2 = Math.max(clipMin, Math.min(clipMax, y2))];
          if (clipLine(a2, b2, x02, y02, x12, y12)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a2[0], a2[1]);
            }
            activeStream.point(b2[0], b2[1]);
            if (!v2)
              activeStream.lineEnd();
            clean = false;
          } else if (v2) {
            activeStream.lineStart();
            activeStream.point(x2, y2);
            clean = false;
          }
        }
      }
      x_ = x2, y_ = y2, v_ = v2;
    }
    return clipStream;
  };
}
function extent() {
  var x02 = 0, y02 = 0, x12 = 960, y12 = 500, cache, cacheStream, clip2;
  return clip2 = {
    stream: function(stream) {
      return cache && cacheStream === stream ? cache : cache = clipRectangle(x02, y02, x12, y12)(cacheStream = stream);
    },
    extent: function(_) {
      return arguments.length ? (x02 = +_[0][0], y02 = +_[0][1], x12 = +_[1][0], y12 = +_[1][1], cache = cacheStream = null, clip2) : [[x02, y02], [x12, y12]];
    }
  };
}
var lengthSum$1, lambda0, sinPhi0, cosPhi0;
var lengthStream$1 = {
  sphere: noop$1,
  point: noop$1,
  lineStart: lengthLineStart,
  lineEnd: noop$1,
  polygonStart: noop$1,
  polygonEnd: noop$1
};
function lengthLineStart() {
  lengthStream$1.point = lengthPointFirst$1;
  lengthStream$1.lineEnd = lengthLineEnd;
}
function lengthLineEnd() {
  lengthStream$1.point = lengthStream$1.lineEnd = noop$1;
}
function lengthPointFirst$1(lambda, phi) {
  lambda *= radians, phi *= radians;
  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);
  lengthStream$1.point = lengthPoint$1;
}
function lengthPoint$1(lambda, phi) {
  lambda *= radians, phi *= radians;
  var sinPhi = sin(phi), cosPhi = cos(phi), delta = abs(lambda - lambda0), cosDelta = cos(delta), sinDelta = sin(delta), x2 = cosPhi * sinDelta, y2 = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta, z2 = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
  lengthSum$1.add(atan2(sqrt(x2 * x2 + y2 * y2), z2));
  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
}
function length(object2) {
  lengthSum$1 = new Adder();
  geoStream(object2, lengthStream$1);
  return +lengthSum$1;
}
var coordinates = [null, null], object$1 = { type: "LineString", coordinates };
function distance(a2, b2) {
  coordinates[0] = a2;
  coordinates[1] = b2;
  return length(object$1);
}
var containsObjectType = {
  Feature: function(object2, point2) {
    return containsGeometry(object2.geometry, point2);
  },
  FeatureCollection: function(object2, point2) {
    var features = object2.features, i2 = -1, n2 = features.length;
    while (++i2 < n2)
      if (containsGeometry(features[i2].geometry, point2))
        return true;
    return false;
  }
};
var containsGeometryType = {
  Sphere: function() {
    return true;
  },
  Point: function(object2, point2) {
    return containsPoint(object2.coordinates, point2);
  },
  MultiPoint: function(object2, point2) {
    var coordinates2 = object2.coordinates, i2 = -1, n2 = coordinates2.length;
    while (++i2 < n2)
      if (containsPoint(coordinates2[i2], point2))
        return true;
    return false;
  },
  LineString: function(object2, point2) {
    return containsLine(object2.coordinates, point2);
  },
  MultiLineString: function(object2, point2) {
    var coordinates2 = object2.coordinates, i2 = -1, n2 = coordinates2.length;
    while (++i2 < n2)
      if (containsLine(coordinates2[i2], point2))
        return true;
    return false;
  },
  Polygon: function(object2, point2) {
    return containsPolygon(object2.coordinates, point2);
  },
  MultiPolygon: function(object2, point2) {
    var coordinates2 = object2.coordinates, i2 = -1, n2 = coordinates2.length;
    while (++i2 < n2)
      if (containsPolygon(coordinates2[i2], point2))
        return true;
    return false;
  },
  GeometryCollection: function(object2, point2) {
    var geometries = object2.geometries, i2 = -1, n2 = geometries.length;
    while (++i2 < n2)
      if (containsGeometry(geometries[i2], point2))
        return true;
    return false;
  }
};
function containsGeometry(geometry, point2) {
  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point2) : false;
}
function containsPoint(coordinates2, point2) {
  return distance(coordinates2, point2) === 0;
}
function containsLine(coordinates2, point2) {
  var ao, bo, ab2;
  for (var i2 = 0, n2 = coordinates2.length; i2 < n2; i2++) {
    bo = distance(coordinates2[i2], point2);
    if (bo === 0)
      return true;
    if (i2 > 0) {
      ab2 = distance(coordinates2[i2], coordinates2[i2 - 1]);
      if (ab2 > 0 && ao <= ab2 && bo <= ab2 && (ao + bo - ab2) * (1 - Math.pow((ao - bo) / ab2, 2)) < epsilon2$1 * ab2)
        return true;
    }
    ao = bo;
  }
  return false;
}
function containsPolygon(coordinates2, point2) {
  return !!polygonContains(coordinates2.map(ringRadians), pointRadians(point2));
}
function ringRadians(ring) {
  return ring = ring.map(pointRadians), ring.pop(), ring;
}
function pointRadians(point2) {
  return [point2[0] * radians, point2[1] * radians];
}
function contains(object2, point2) {
  return (object2 && containsObjectType.hasOwnProperty(object2.type) ? containsObjectType[object2.type] : containsGeometry)(object2, point2);
}
function graticuleX(y02, y12, dy) {
  var y2 = range$1(y02, y12 - epsilon, dy).concat(y12);
  return function(x2) {
    return y2.map(function(y3) {
      return [x2, y3];
    });
  };
}
function graticuleY(x02, x12, dx) {
  var x2 = range$1(x02, x12 - epsilon, dx).concat(x12);
  return function(y2) {
    return x2.map(function(x3) {
      return [x3, y2];
    });
  };
}
function graticule() {
  var x12, x02, X12, X02, y12, y02, Y12, Y02, dx = 10, dy = dx, DX = 90, DY = 360, x2, y2, X3, Y3, precision = 2.5;
  function graticule2() {
    return { type: "MultiLineString", coordinates: lines() };
  }
  function lines() {
    return range$1(ceil(X02 / DX) * DX, X12, DX).map(X3).concat(range$1(ceil(Y02 / DY) * DY, Y12, DY).map(Y3)).concat(range$1(ceil(x02 / dx) * dx, x12, dx).filter(function(x3) {
      return abs(x3 % DX) > epsilon;
    }).map(x2)).concat(range$1(ceil(y02 / dy) * dy, y12, dy).filter(function(y3) {
      return abs(y3 % DY) > epsilon;
    }).map(y2));
  }
  graticule2.lines = function() {
    return lines().map(function(coordinates2) {
      return { type: "LineString", coordinates: coordinates2 };
    });
  };
  graticule2.outline = function() {
    return {
      type: "Polygon",
      coordinates: [
        X3(X02).concat(
          Y3(Y12).slice(1),
          X3(X12).reverse().slice(1),
          Y3(Y02).reverse().slice(1)
        )
      ]
    };
  };
  graticule2.extent = function(_) {
    if (!arguments.length)
      return graticule2.extentMinor();
    return graticule2.extentMajor(_).extentMinor(_);
  };
  graticule2.extentMajor = function(_) {
    if (!arguments.length)
      return [[X02, Y02], [X12, Y12]];
    X02 = +_[0][0], X12 = +_[1][0];
    Y02 = +_[0][1], Y12 = +_[1][1];
    if (X02 > X12)
      _ = X02, X02 = X12, X12 = _;
    if (Y02 > Y12)
      _ = Y02, Y02 = Y12, Y12 = _;
    return graticule2.precision(precision);
  };
  graticule2.extentMinor = function(_) {
    if (!arguments.length)
      return [[x02, y02], [x12, y12]];
    x02 = +_[0][0], x12 = +_[1][0];
    y02 = +_[0][1], y12 = +_[1][1];
    if (x02 > x12)
      _ = x02, x02 = x12, x12 = _;
    if (y02 > y12)
      _ = y02, y02 = y12, y12 = _;
    return graticule2.precision(precision);
  };
  graticule2.step = function(_) {
    if (!arguments.length)
      return graticule2.stepMinor();
    return graticule2.stepMajor(_).stepMinor(_);
  };
  graticule2.stepMajor = function(_) {
    if (!arguments.length)
      return [DX, DY];
    DX = +_[0], DY = +_[1];
    return graticule2;
  };
  graticule2.stepMinor = function(_) {
    if (!arguments.length)
      return [dx, dy];
    dx = +_[0], dy = +_[1];
    return graticule2;
  };
  graticule2.precision = function(_) {
    if (!arguments.length)
      return precision;
    precision = +_;
    x2 = graticuleX(y02, y12, 90);
    y2 = graticuleY(x02, x12, precision);
    X3 = graticuleX(Y02, Y12, 90);
    Y3 = graticuleY(X02, X12, precision);
    return graticule2;
  };
  return graticule2.extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]]).extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);
}
function graticule10() {
  return graticule()();
}
function interpolate$1(a2, b2) {
  var x02 = a2[0] * radians, y02 = a2[1] * radians, x12 = b2[0] * radians, y12 = b2[1] * radians, cy0 = cos(y02), sy0 = sin(y02), cy1 = cos(y12), sy1 = sin(y12), kx0 = cy0 * cos(x02), ky0 = cy0 * sin(x02), kx1 = cy1 * cos(x12), ky1 = cy1 * sin(x12), d2 = 2 * asin(sqrt(haversin(y12 - y02) + cy0 * cy1 * haversin(x12 - x02))), k2 = sin(d2);
  var interpolate2 = d2 ? function(t2) {
    var B2 = sin(t2 *= d2) / k2, A5 = sin(d2 - t2) / k2, x2 = A5 * kx0 + B2 * kx1, y2 = A5 * ky0 + B2 * ky1, z2 = A5 * sy0 + B2 * sy1;
    return [
      atan2(y2, x2) * degrees$1,
      atan2(z2, sqrt(x2 * x2 + y2 * y2)) * degrees$1
    ];
  } : function() {
    return [x02 * degrees$1, y02 * degrees$1];
  };
  interpolate2.distance = d2;
  return interpolate2;
}
const identity$4 = (x2) => x2;
var areaSum = new Adder(), areaRingSum = new Adder(), x00$2, y00$2, x0$3, y0$3;
var areaStream = {
  point: noop$1,
  lineStart: noop$1,
  lineEnd: noop$1,
  polygonStart: function() {
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function() {
    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop$1;
    areaSum.add(abs(areaRingSum));
    areaRingSum = new Adder();
  },
  result: function() {
    var area2 = areaSum / 2;
    areaSum = new Adder();
    return area2;
  }
};
function areaRingStart() {
  areaStream.point = areaPointFirst;
}
function areaPointFirst(x2, y2) {
  areaStream.point = areaPoint;
  x00$2 = x0$3 = x2, y00$2 = y0$3 = y2;
}
function areaPoint(x2, y2) {
  areaRingSum.add(y0$3 * x2 - x0$3 * y2);
  x0$3 = x2, y0$3 = y2;
}
function areaRingEnd() {
  areaPoint(x00$2, y00$2);
}
var x0$2 = Infinity, y0$2 = x0$2, x1 = -x0$2, y1 = x1;
var boundsStream = {
  point: boundsPoint,
  lineStart: noop$1,
  lineEnd: noop$1,
  polygonStart: noop$1,
  polygonEnd: noop$1,
  result: function() {
    var bounds2 = [[x0$2, y0$2], [x1, y1]];
    x1 = y1 = -(y0$2 = x0$2 = Infinity);
    return bounds2;
  }
};
function boundsPoint(x2, y2) {
  if (x2 < x0$2)
    x0$2 = x2;
  if (x2 > x1)
    x1 = x2;
  if (y2 < y0$2)
    y0$2 = y2;
  if (y2 > y1)
    y1 = y2;
}
var X0 = 0, Y0 = 0, Z0 = 0, X1 = 0, Y1 = 0, Z1 = 0, X2 = 0, Y2 = 0, Z2 = 0, x00$1, y00$1, x0$1, y0$1;
var centroidStream = {
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function() {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function() {
    centroidStream.point = centroidPoint;
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  },
  result: function() {
    var centroid2 = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];
    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
    return centroid2;
  }
};
function centroidPoint(x2, y2) {
  X0 += x2;
  Y0 += y2;
  ++Z0;
}
function centroidLineStart() {
  centroidStream.point = centroidPointFirstLine;
}
function centroidPointFirstLine(x2, y2) {
  centroidStream.point = centroidPointLine;
  centroidPoint(x0$1 = x2, y0$1 = y2);
}
function centroidPointLine(x2, y2) {
  var dx = x2 - x0$1, dy = y2 - y0$1, z2 = sqrt(dx * dx + dy * dy);
  X1 += z2 * (x0$1 + x2) / 2;
  Y1 += z2 * (y0$1 + y2) / 2;
  Z1 += z2;
  centroidPoint(x0$1 = x2, y0$1 = y2);
}
function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}
function centroidRingStart() {
  centroidStream.point = centroidPointFirstRing;
}
function centroidRingEnd() {
  centroidPointRing(x00$1, y00$1);
}
function centroidPointFirstRing(x2, y2) {
  centroidStream.point = centroidPointRing;
  centroidPoint(x00$1 = x0$1 = x2, y00$1 = y0$1 = y2);
}
function centroidPointRing(x2, y2) {
  var dx = x2 - x0$1, dy = y2 - y0$1, z2 = sqrt(dx * dx + dy * dy);
  X1 += z2 * (x0$1 + x2) / 2;
  Y1 += z2 * (y0$1 + y2) / 2;
  Z1 += z2;
  z2 = y0$1 * x2 - x0$1 * y2;
  X2 += z2 * (x0$1 + x2);
  Y2 += z2 * (y0$1 + y2);
  Z2 += z2 * 3;
  centroidPoint(x0$1 = x2, y0$1 = y2);
}
function PathContext(context) {
  this._context = context;
}
PathContext.prototype = {
  _radius: 4.5,
  pointRadius: function(_) {
    return this._radius = _, this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0)
      this._context.closePath();
    this._point = NaN;
  },
  point: function(x2, y2) {
    switch (this._point) {
      case 0: {
        this._context.moveTo(x2, y2);
        this._point = 1;
        break;
      }
      case 1: {
        this._context.lineTo(x2, y2);
        break;
      }
      default: {
        this._context.moveTo(x2 + this._radius, y2);
        this._context.arc(x2, y2, this._radius, 0, tau);
        break;
      }
    }
  },
  result: noop$1
};
var lengthSum = new Adder(), lengthRing, x00, y00, x0, y0;
var lengthStream = {
  point: noop$1,
  lineStart: function() {
    lengthStream.point = lengthPointFirst;
  },
  lineEnd: function() {
    if (lengthRing)
      lengthPoint(x00, y00);
    lengthStream.point = noop$1;
  },
  polygonStart: function() {
    lengthRing = true;
  },
  polygonEnd: function() {
    lengthRing = null;
  },
  result: function() {
    var length2 = +lengthSum;
    lengthSum = new Adder();
    return length2;
  }
};
function lengthPointFirst(x2, y2) {
  lengthStream.point = lengthPoint;
  x00 = x0 = x2, y00 = y0 = y2;
}
function lengthPoint(x2, y2) {
  x0 -= x2, y0 -= y2;
  lengthSum.add(sqrt(x0 * x0 + y0 * y0));
  x0 = x2, y0 = y2;
}
function PathString() {
  this._string = [];
}
PathString.prototype = {
  _radius: 4.5,
  _circle: circle(4.5),
  pointRadius: function(_) {
    if ((_ = +_) !== this._radius)
      this._radius = _, this._circle = null;
    return this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0)
      this._string.push("Z");
    this._point = NaN;
  },
  point: function(x2, y2) {
    switch (this._point) {
      case 0: {
        this._string.push("M", x2, ",", y2);
        this._point = 1;
        break;
      }
      case 1: {
        this._string.push("L", x2, ",", y2);
        break;
      }
      default: {
        if (this._circle == null)
          this._circle = circle(this._radius);
        this._string.push("M", x2, ",", y2, this._circle);
        break;
      }
    }
  },
  result: function() {
    if (this._string.length) {
      var result = this._string.join("");
      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};
function circle(radius) {
  return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
}
function index(projection2, context) {
  var pointRadius = 4.5, projectionStream, contextStream;
  function path(object2) {
    if (object2) {
      if (typeof pointRadius === "function")
        contextStream.pointRadius(+pointRadius.apply(this, arguments));
      geoStream(object2, projectionStream(contextStream));
    }
    return contextStream.result();
  }
  path.area = function(object2) {
    geoStream(object2, projectionStream(areaStream));
    return areaStream.result();
  };
  path.measure = function(object2) {
    geoStream(object2, projectionStream(lengthStream));
    return lengthStream.result();
  };
  path.bounds = function(object2) {
    geoStream(object2, projectionStream(boundsStream));
    return boundsStream.result();
  };
  path.centroid = function(object2) {
    geoStream(object2, projectionStream(centroidStream));
    return centroidStream.result();
  };
  path.projection = function(_) {
    return arguments.length ? (projectionStream = _ == null ? (projection2 = null, identity$4) : (projection2 = _).stream, path) : projection2;
  };
  path.context = function(_) {
    if (!arguments.length)
      return context;
    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);
    if (typeof pointRadius !== "function")
      contextStream.pointRadius(pointRadius);
    return path;
  };
  path.pointRadius = function(_) {
    if (!arguments.length)
      return pointRadius;
    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
    return path;
  };
  return path.projection(projection2).context(context);
}
function transform$1(methods) {
  return {
    stream: transformer(methods)
  };
}
function transformer(methods) {
  return function(stream) {
    var s2 = new TransformStream();
    for (var key in methods)
      s2[key] = methods[key];
    s2.stream = stream;
    return s2;
  };
}
function TransformStream() {
}
TransformStream.prototype = {
  constructor: TransformStream,
  point: function(x2, y2) {
    this.stream.point(x2, y2);
  },
  sphere: function() {
    this.stream.sphere();
  },
  lineStart: function() {
    this.stream.lineStart();
  },
  lineEnd: function() {
    this.stream.lineEnd();
  },
  polygonStart: function() {
    this.stream.polygonStart();
  },
  polygonEnd: function() {
    this.stream.polygonEnd();
  }
};
function fit(projection2, fitBounds, object2) {
  var clip2 = projection2.clipExtent && projection2.clipExtent();
  projection2.scale(150).translate([0, 0]);
  if (clip2 != null)
    projection2.clipExtent(null);
  geoStream(object2, projection2.stream(boundsStream));
  fitBounds(boundsStream.result());
  if (clip2 != null)
    projection2.clipExtent(clip2);
  return projection2;
}
function fitExtent(projection2, extent2, object2) {
  return fit(projection2, function(b2) {
    var w2 = extent2[1][0] - extent2[0][0], h2 = extent2[1][1] - extent2[0][1], k2 = Math.min(w2 / (b2[1][0] - b2[0][0]), h2 / (b2[1][1] - b2[0][1])), x2 = +extent2[0][0] + (w2 - k2 * (b2[1][0] + b2[0][0])) / 2, y2 = +extent2[0][1] + (h2 - k2 * (b2[1][1] + b2[0][1])) / 2;
    projection2.scale(150 * k2).translate([x2, y2]);
  }, object2);
}
function fitSize(projection2, size2, object2) {
  return fitExtent(projection2, [[0, 0], size2], object2);
}
function fitWidth(projection2, width, object2) {
  return fit(projection2, function(b2) {
    var w2 = +width, k2 = w2 / (b2[1][0] - b2[0][0]), x2 = (w2 - k2 * (b2[1][0] + b2[0][0])) / 2, y2 = -k2 * b2[0][1];
    projection2.scale(150 * k2).translate([x2, y2]);
  }, object2);
}
function fitHeight(projection2, height, object2) {
  return fit(projection2, function(b2) {
    var h2 = +height, k2 = h2 / (b2[1][1] - b2[0][1]), x2 = -k2 * b2[0][0], y2 = (h2 - k2 * (b2[1][1] + b2[0][1])) / 2;
    projection2.scale(150 * k2).translate([x2, y2]);
  }, object2);
}
var maxDepth = 16, cosMinDistance = cos(30 * radians);
function resample(project, delta2) {
  return +delta2 ? resample$1(project, delta2) : resampleNone(project);
}
function resampleNone(project) {
  return transformer({
    point: function(x2, y2) {
      x2 = project(x2, y2);
      this.stream.point(x2[0], x2[1]);
    }
  });
}
function resample$1(project, delta2) {
  function resampleLineTo(x02, y02, lambda02, a0, b0, c0, x12, y12, lambda12, a1, b1, c1, depth, stream) {
    var dx = x12 - x02, dy = y12 - y02, d2 = dx * dx + dy * dy;
    if (d2 > 4 * delta2 && depth--) {
      var a2 = a0 + a1, b2 = b0 + b1, c2 = c0 + c1, m2 = sqrt(a2 * a2 + b2 * b2 + c2 * c2), phi2 = asin(c2 /= m2), lambda22 = abs(abs(c2) - 1) < epsilon || abs(lambda02 - lambda12) < epsilon ? (lambda02 + lambda12) / 2 : atan2(b2, a2), p2 = project(lambda22, phi2), x2 = p2[0], y2 = p2[1], dx2 = x2 - x02, dy2 = y2 - y02, dz = dy * dx2 - dx * dy2;
      if (dz * dz / d2 > delta2 || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
        resampleLineTo(x02, y02, lambda02, a0, b0, c0, x2, y2, lambda22, a2 /= m2, b2 /= m2, c2, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda22, a2, b2, c2, x12, y12, lambda12, a1, b1, c1, depth, stream);
      }
    }
  }
  return function(stream) {
    var lambda002, x002, y002, a00, b00, c00, lambda02, x02, y02, a0, b0, c0;
    var resampleStream = {
      point: point2,
      lineStart,
      lineEnd,
      polygonStart: function() {
        stream.polygonStart();
        resampleStream.lineStart = ringStart;
      },
      polygonEnd: function() {
        stream.polygonEnd();
        resampleStream.lineStart = lineStart;
      }
    };
    function point2(x2, y2) {
      x2 = project(x2, y2);
      stream.point(x2[0], x2[1]);
    }
    function lineStart() {
      x02 = NaN;
      resampleStream.point = linePoint2;
      stream.lineStart();
    }
    function linePoint2(lambda, phi) {
      var c2 = cartesian([lambda, phi]), p2 = project(lambda, phi);
      resampleLineTo(x02, y02, lambda02, a0, b0, c0, x02 = p2[0], y02 = p2[1], lambda02 = lambda, a0 = c2[0], b0 = c2[1], c0 = c2[2], maxDepth, stream);
      stream.point(x02, y02);
    }
    function lineEnd() {
      resampleStream.point = point2;
      stream.lineEnd();
    }
    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }
    function ringPoint(lambda, phi) {
      linePoint2(lambda002 = lambda, phi), x002 = x02, y002 = y02, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint2;
    }
    function ringEnd() {
      resampleLineTo(x02, y02, lambda02, a0, b0, c0, x002, y002, lambda002, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }
    return resampleStream;
  };
}
var transformRadians = transformer({
  point: function(x2, y2) {
    this.stream.point(x2 * radians, y2 * radians);
  }
});
function transformRotate(rotate) {
  return transformer({
    point: function(x2, y2) {
      var r2 = rotate(x2, y2);
      return this.stream.point(r2[0], r2[1]);
    }
  });
}
function scaleTranslate(k2, dx, dy, sx, sy) {
  function transform2(x2, y2) {
    x2 *= sx;
    y2 *= sy;
    return [dx + k2 * x2, dy - k2 * y2];
  }
  transform2.invert = function(x2, y2) {
    return [(x2 - dx) / k2 * sx, (dy - y2) / k2 * sy];
  };
  return transform2;
}
function scaleTranslateRotate(k2, dx, dy, sx, sy, alpha3) {
  if (!alpha3)
    return scaleTranslate(k2, dx, dy, sx, sy);
  var cosAlpha = cos(alpha3), sinAlpha = sin(alpha3), a2 = cosAlpha * k2, b2 = sinAlpha * k2, ai2 = cosAlpha / k2, bi2 = sinAlpha / k2, ci2 = (sinAlpha * dy - cosAlpha * dx) / k2, fi2 = (sinAlpha * dx + cosAlpha * dy) / k2;
  function transform2(x2, y2) {
    x2 *= sx;
    y2 *= sy;
    return [a2 * x2 - b2 * y2 + dx, dy - b2 * x2 - a2 * y2];
  }
  transform2.invert = function(x2, y2) {
    return [sx * (ai2 * x2 - bi2 * y2 + ci2), sy * (fi2 - bi2 * x2 - ai2 * y2)];
  };
  return transform2;
}
function projection(project) {
  return projectionMutator(function() {
    return project;
  })();
}
function projectionMutator(projectAt) {
  var project, k2 = 150, x2 = 480, y2 = 250, lambda = 0, phi = 0, deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, alpha3 = 0, sx = 1, sy = 1, theta = null, preclip = clipAntimeridian, x02 = null, y02, x12, y12, postclip = identity$4, delta2 = 0.5, projectResample, projectTransform, projectRotateTransform, cache, cacheStream;
  function projection2(point2) {
    return projectRotateTransform(point2[0] * radians, point2[1] * radians);
  }
  function invert(point2) {
    point2 = projectRotateTransform.invert(point2[0], point2[1]);
    return point2 && [point2[0] * degrees$1, point2[1] * degrees$1];
  }
  projection2.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };
  projection2.preclip = function(_) {
    return arguments.length ? (preclip = _, theta = void 0, reset()) : preclip;
  };
  projection2.postclip = function(_) {
    return arguments.length ? (postclip = _, x02 = y02 = x12 = y12 = null, reset()) : postclip;
  };
  projection2.clipAngle = function(_) {
    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;
  };
  projection2.clipExtent = function(_) {
    return arguments.length ? (postclip = _ == null ? (x02 = y02 = x12 = y12 = null, identity$4) : clipRectangle(x02 = +_[0][0], y02 = +_[0][1], x12 = +_[1][0], y12 = +_[1][1]), reset()) : x02 == null ? null : [[x02, y02], [x12, y12]];
  };
  projection2.scale = function(_) {
    return arguments.length ? (k2 = +_, recenter()) : k2;
  };
  projection2.translate = function(_) {
    return arguments.length ? (x2 = +_[0], y2 = +_[1], recenter()) : [x2, y2];
  };
  projection2.center = function(_) {
    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];
  };
  projection2.rotate = function(_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];
  };
  projection2.angle = function(_) {
    return arguments.length ? (alpha3 = _ % 360 * radians, recenter()) : alpha3 * degrees$1;
  };
  projection2.reflectX = function(_) {
    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;
  };
  projection2.reflectY = function(_) {
    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;
  };
  projection2.precision = function(_) {
    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);
  };
  projection2.fitExtent = function(extent2, object2) {
    return fitExtent(projection2, extent2, object2);
  };
  projection2.fitSize = function(size2, object2) {
    return fitSize(projection2, size2, object2);
  };
  projection2.fitWidth = function(width, object2) {
    return fitWidth(projection2, width, object2);
  };
  projection2.fitHeight = function(height, object2) {
    return fitHeight(projection2, height, object2);
  };
  function recenter() {
    var center = scaleTranslateRotate(k2, 0, 0, sx, sy, alpha3).apply(null, project(lambda, phi)), transform2 = scaleTranslateRotate(k2, x2 - center[0], y2 - center[1], sx, sy, alpha3);
    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = compose2(project, transform2);
    projectRotateTransform = compose2(rotate, projectTransform);
    projectResample = resample(projectTransform, delta2);
    return reset();
  }
  function reset() {
    cache = cacheStream = null;
    return projection2;
  }
  return function() {
    project = projectAt.apply(this, arguments);
    projection2.invert = project.invert && invert;
    return recenter();
  };
}
function conicProjection(projectAt) {
  var phi02 = 0, phi12 = pi / 3, m2 = projectionMutator(projectAt), p2 = m2(phi02, phi12);
  p2.parallels = function(_) {
    return arguments.length ? m2(phi02 = _[0] * radians, phi12 = _[1] * radians) : [phi02 * degrees$1, phi12 * degrees$1];
  };
  return p2;
}
function cylindricalEqualAreaRaw(phi02) {
  var cosPhi02 = cos(phi02);
  function forward(lambda, phi) {
    return [lambda * cosPhi02, sin(phi) / cosPhi02];
  }
  forward.invert = function(x2, y2) {
    return [x2 / cosPhi02, asin(y2 * cosPhi02)];
  };
  return forward;
}
function conicEqualAreaRaw(y02, y12) {
  var sy0 = sin(y02), n2 = (sy0 + sin(y12)) / 2;
  if (abs(n2) < epsilon)
    return cylindricalEqualAreaRaw(y02);
  var c2 = 1 + sy0 * (2 * n2 - sy0), r0 = sqrt(c2) / n2;
  function project(x2, y2) {
    var r2 = sqrt(c2 - 2 * n2 * sin(y2)) / n2;
    return [r2 * sin(x2 *= n2), r0 - r2 * cos(x2)];
  }
  project.invert = function(x2, y2) {
    var r0y = r0 - y2, l2 = atan2(x2, abs(r0y)) * sign(r0y);
    if (r0y * n2 < 0)
      l2 -= pi * sign(x2) * sign(r0y);
    return [l2 / n2, asin((c2 - (x2 * x2 + r0y * r0y) * n2 * n2) / (2 * n2))];
  };
  return project;
}
function conicEqualArea() {
  return conicProjection(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);
}
function albers() {
  return conicEqualArea().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);
}
function multiplex(streams) {
  var n2 = streams.length;
  return {
    point: function(x2, y2) {
      var i2 = -1;
      while (++i2 < n2)
        streams[i2].point(x2, y2);
    },
    sphere: function() {
      var i2 = -1;
      while (++i2 < n2)
        streams[i2].sphere();
    },
    lineStart: function() {
      var i2 = -1;
      while (++i2 < n2)
        streams[i2].lineStart();
    },
    lineEnd: function() {
      var i2 = -1;
      while (++i2 < n2)
        streams[i2].lineEnd();
    },
    polygonStart: function() {
      var i2 = -1;
      while (++i2 < n2)
        streams[i2].polygonStart();
    },
    polygonEnd: function() {
      var i2 = -1;
      while (++i2 < n2)
        streams[i2].polygonEnd();
    }
  };
}
function albersUsa() {
  var cache, cacheStream, lower48 = albers(), lower48Point, alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, point2, pointStream = { point: function(x2, y2) {
    point2 = [x2, y2];
  } };
  function albersUsa2(coordinates2) {
    var x2 = coordinates2[0], y2 = coordinates2[1];
    return point2 = null, (lower48Point.point(x2, y2), point2) || (alaskaPoint.point(x2, y2), point2) || (hawaiiPoint.point(x2, y2), point2);
  }
  albersUsa2.invert = function(coordinates2) {
    var k2 = lower48.scale(), t2 = lower48.translate(), x2 = (coordinates2[0] - t2[0]) / k2, y2 = (coordinates2[1] - t2[1]) / k2;
    return (y2 >= 0.12 && y2 < 0.234 && x2 >= -0.425 && x2 < -0.214 ? alaska : y2 >= 0.166 && y2 < 0.234 && x2 >= -0.214 && x2 < -0.115 ? hawaii : lower48).invert(coordinates2);
  };
  albersUsa2.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
  };
  albersUsa2.precision = function(_) {
    if (!arguments.length)
      return lower48.precision();
    lower48.precision(_), alaska.precision(_), hawaii.precision(_);
    return reset();
  };
  albersUsa2.scale = function(_) {
    if (!arguments.length)
      return lower48.scale();
    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
    return albersUsa2.translate(lower48.translate());
  };
  albersUsa2.translate = function(_) {
    if (!arguments.length)
      return lower48.translate();
    var k2 = lower48.scale(), x2 = +_[0], y2 = +_[1];
    lower48Point = lower48.translate(_).clipExtent([[x2 - 0.455 * k2, y2 - 0.238 * k2], [x2 + 0.455 * k2, y2 + 0.238 * k2]]).stream(pointStream);
    alaskaPoint = alaska.translate([x2 - 0.307 * k2, y2 + 0.201 * k2]).clipExtent([[x2 - 0.425 * k2 + epsilon, y2 + 0.12 * k2 + epsilon], [x2 - 0.214 * k2 - epsilon, y2 + 0.234 * k2 - epsilon]]).stream(pointStream);
    hawaiiPoint = hawaii.translate([x2 - 0.205 * k2, y2 + 0.212 * k2]).clipExtent([[x2 - 0.214 * k2 + epsilon, y2 + 0.166 * k2 + epsilon], [x2 - 0.115 * k2 - epsilon, y2 + 0.234 * k2 - epsilon]]).stream(pointStream);
    return reset();
  };
  albersUsa2.fitExtent = function(extent2, object2) {
    return fitExtent(albersUsa2, extent2, object2);
  };
  albersUsa2.fitSize = function(size2, object2) {
    return fitSize(albersUsa2, size2, object2);
  };
  albersUsa2.fitWidth = function(width, object2) {
    return fitWidth(albersUsa2, width, object2);
  };
  albersUsa2.fitHeight = function(height, object2) {
    return fitHeight(albersUsa2, height, object2);
  };
  function reset() {
    cache = cacheStream = null;
    return albersUsa2;
  }
  return albersUsa2.scale(1070);
}
function azimuthalRaw(scale) {
  return function(x2, y2) {
    var cx2 = cos(x2), cy = cos(y2), k2 = scale(cx2 * cy);
    if (k2 === Infinity)
      return [2, 0];
    return [
      k2 * cy * sin(x2),
      k2 * sin(y2)
    ];
  };
}
function azimuthalInvert(angle2) {
  return function(x2, y2) {
    var z2 = sqrt(x2 * x2 + y2 * y2), c2 = angle2(z2), sc2 = sin(c2), cc2 = cos(c2);
    return [
      atan2(x2 * sc2, z2 * cc2),
      asin(z2 && y2 * sc2 / z2)
    ];
  };
}
var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {
  return sqrt(2 / (1 + cxcy));
});
azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z2) {
  return 2 * asin(z2 / 2);
});
function azimuthalEqualArea() {
  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);
}
var azimuthalEquidistantRaw = azimuthalRaw(function(c2) {
  return (c2 = acos(c2)) && c2 / sin(c2);
});
azimuthalEquidistantRaw.invert = azimuthalInvert(function(z2) {
  return z2;
});
function azimuthalEquidistant() {
  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);
}
function mercatorRaw(lambda, phi) {
  return [lambda, log(tan((halfPi + phi) / 2))];
}
mercatorRaw.invert = function(x2, y2) {
  return [x2, 2 * atan(exp(y2)) - halfPi];
};
function mercator() {
  return mercatorProjection(mercatorRaw).scale(961 / tau);
}
function mercatorProjection(project) {
  var m2 = projection(project), center = m2.center, scale = m2.scale, translate = m2.translate, clipExtent = m2.clipExtent, x02 = null, y02, x12, y12;
  m2.scale = function(_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };
  m2.translate = function(_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };
  m2.center = function(_) {
    return arguments.length ? (center(_), reclip()) : center();
  };
  m2.clipExtent = function(_) {
    return arguments.length ? (_ == null ? x02 = y02 = x12 = y12 = null : (x02 = +_[0][0], y02 = +_[0][1], x12 = +_[1][0], y12 = +_[1][1]), reclip()) : x02 == null ? null : [[x02, y02], [x12, y12]];
  };
  function reclip() {
    var k2 = pi * scale(), t2 = m2(rotation(m2.rotate()).invert([0, 0]));
    return clipExtent(x02 == null ? [[t2[0] - k2, t2[1] - k2], [t2[0] + k2, t2[1] + k2]] : project === mercatorRaw ? [[Math.max(t2[0] - k2, x02), y02], [Math.min(t2[0] + k2, x12), y12]] : [[x02, Math.max(t2[1] - k2, y02)], [x12, Math.min(t2[1] + k2, y12)]]);
  }
  return reclip();
}
function tany(y2) {
  return tan((halfPi + y2) / 2);
}
function conicConformalRaw(y02, y12) {
  var cy0 = cos(y02), n2 = y02 === y12 ? sin(y02) : log(cy0 / cos(y12)) / log(tany(y12) / tany(y02)), f2 = cy0 * pow(tany(y02), n2) / n2;
  if (!n2)
    return mercatorRaw;
  function project(x2, y2) {
    if (f2 > 0) {
      if (y2 < -halfPi + epsilon)
        y2 = -halfPi + epsilon;
    } else {
      if (y2 > halfPi - epsilon)
        y2 = halfPi - epsilon;
    }
    var r2 = f2 / pow(tany(y2), n2);
    return [r2 * sin(n2 * x2), f2 - r2 * cos(n2 * x2)];
  }
  project.invert = function(x2, y2) {
    var fy = f2 - y2, r2 = sign(n2) * sqrt(x2 * x2 + fy * fy), l2 = atan2(x2, abs(fy)) * sign(fy);
    if (fy * n2 < 0)
      l2 -= pi * sign(x2) * sign(fy);
    return [l2 / n2, 2 * atan(pow(f2 / r2, 1 / n2)) - halfPi];
  };
  return project;
}
function conicConformal() {
  return conicProjection(conicConformalRaw).scale(109.5).parallels([30, 30]);
}
function equirectangularRaw(lambda, phi) {
  return [lambda, phi];
}
equirectangularRaw.invert = equirectangularRaw;
function equirectangular() {
  return projection(equirectangularRaw).scale(152.63);
}
function conicEquidistantRaw(y02, y12) {
  var cy0 = cos(y02), n2 = y02 === y12 ? sin(y02) : (cy0 - cos(y12)) / (y12 - y02), g2 = cy0 / n2 + y02;
  if (abs(n2) < epsilon)
    return equirectangularRaw;
  function project(x2, y2) {
    var gy = g2 - y2, nx = n2 * x2;
    return [gy * sin(nx), g2 - gy * cos(nx)];
  }
  project.invert = function(x2, y2) {
    var gy = g2 - y2, l2 = atan2(x2, abs(gy)) * sign(gy);
    if (gy * n2 < 0)
      l2 -= pi * sign(x2) * sign(gy);
    return [l2 / n2, g2 - sign(n2) * sqrt(x2 * x2 + gy * gy)];
  };
  return project;
}
function conicEquidistant() {
  return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);
}
var A1 = 1.340264, A2 = -0.081106, A3 = 893e-6, A4 = 3796e-6, M = sqrt(3) / 2, iterations = 12;
function equalEarthRaw(lambda, phi) {
  var l2 = asin(M * sin(phi)), l22 = l2 * l2, l6 = l22 * l22 * l22;
  return [
    lambda * cos(l2) / (M * (A1 + 3 * A2 * l22 + l6 * (7 * A3 + 9 * A4 * l22))),
    l2 * (A1 + A2 * l22 + l6 * (A3 + A4 * l22))
  ];
}
equalEarthRaw.invert = function(x2, y2) {
  var l2 = y2, l22 = l2 * l2, l6 = l22 * l22 * l22;
  for (var i2 = 0, delta, fy, fpy; i2 < iterations; ++i2) {
    fy = l2 * (A1 + A2 * l22 + l6 * (A3 + A4 * l22)) - y2;
    fpy = A1 + 3 * A2 * l22 + l6 * (7 * A3 + 9 * A4 * l22);
    l2 -= delta = fy / fpy, l22 = l2 * l2, l6 = l22 * l22 * l22;
    if (abs(delta) < epsilon2$1)
      break;
  }
  return [
    M * x2 * (A1 + 3 * A2 * l22 + l6 * (7 * A3 + 9 * A4 * l22)) / cos(l2),
    asin(sin(l2) / M)
  ];
};
function equalEarth() {
  return projection(equalEarthRaw).scale(177.158);
}
function gnomonicRaw(x2, y2) {
  var cy = cos(y2), k2 = cos(x2) * cy;
  return [cy * sin(x2) / k2, sin(y2) / k2];
}
gnomonicRaw.invert = azimuthalInvert(atan);
function gnomonic() {
  return projection(gnomonicRaw).scale(144.049).clipAngle(60);
}
function identity$3() {
  var k2 = 1, tx = 0, ty = 0, sx = 1, sy = 1, alpha3 = 0, ca2, sa2, x02 = null, y02, x12, y12, kx2 = 1, ky2 = 1, transform2 = transformer({
    point: function(x2, y2) {
      var p2 = projection2([x2, y2]);
      this.stream.point(p2[0], p2[1]);
    }
  }), postclip = identity$4, cache, cacheStream;
  function reset() {
    kx2 = k2 * sx;
    ky2 = k2 * sy;
    cache = cacheStream = null;
    return projection2;
  }
  function projection2(p2) {
    var x2 = p2[0] * kx2, y2 = p2[1] * ky2;
    if (alpha3) {
      var t2 = y2 * ca2 - x2 * sa2;
      x2 = x2 * ca2 + y2 * sa2;
      y2 = t2;
    }
    return [x2 + tx, y2 + ty];
  }
  projection2.invert = function(p2) {
    var x2 = p2[0] - tx, y2 = p2[1] - ty;
    if (alpha3) {
      var t2 = y2 * ca2 + x2 * sa2;
      x2 = x2 * ca2 - y2 * sa2;
      y2 = t2;
    }
    return [x2 / kx2, y2 / ky2];
  };
  projection2.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = transform2(postclip(cacheStream = stream));
  };
  projection2.postclip = function(_) {
    return arguments.length ? (postclip = _, x02 = y02 = x12 = y12 = null, reset()) : postclip;
  };
  projection2.clipExtent = function(_) {
    return arguments.length ? (postclip = _ == null ? (x02 = y02 = x12 = y12 = null, identity$4) : clipRectangle(x02 = +_[0][0], y02 = +_[0][1], x12 = +_[1][0], y12 = +_[1][1]), reset()) : x02 == null ? null : [[x02, y02], [x12, y12]];
  };
  projection2.scale = function(_) {
    return arguments.length ? (k2 = +_, reset()) : k2;
  };
  projection2.translate = function(_) {
    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];
  };
  projection2.angle = function(_) {
    return arguments.length ? (alpha3 = _ % 360 * radians, sa2 = sin(alpha3), ca2 = cos(alpha3), reset()) : alpha3 * degrees$1;
  };
  projection2.reflectX = function(_) {
    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;
  };
  projection2.reflectY = function(_) {
    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;
  };
  projection2.fitExtent = function(extent2, object2) {
    return fitExtent(projection2, extent2, object2);
  };
  projection2.fitSize = function(size2, object2) {
    return fitSize(projection2, size2, object2);
  };
  projection2.fitWidth = function(width, object2) {
    return fitWidth(projection2, width, object2);
  };
  projection2.fitHeight = function(height, object2) {
    return fitHeight(projection2, height, object2);
  };
  return projection2;
}
function naturalEarth1Raw(lambda, phi) {
  var phi2 = phi * phi, phi4 = phi2 * phi2;
  return [
    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (3971e-6 * phi2 - 1529e-6 * phi4))),
    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 5916e-6 * phi4)))
  ];
}
naturalEarth1Raw.invert = function(x2, y2) {
  var phi = y2, i2 = 25, delta;
  do {
    var phi2 = phi * phi, phi4 = phi2 * phi2;
    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 5916e-6 * phi4))) - y2) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 5916e-6 * 11 * phi4)));
  } while (abs(delta) > epsilon && --i2 > 0);
  return [
    x2 / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (3971e-6 - 1529e-6 * phi2)))),
    phi
  ];
};
function naturalEarth1() {
  return projection(naturalEarth1Raw).scale(175.295);
}
function orthographicRaw(x2, y2) {
  return [cos(y2) * sin(x2), sin(y2)];
}
orthographicRaw.invert = azimuthalInvert(asin);
function orthographic() {
  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);
}
function stereographicRaw(x2, y2) {
  var cy = cos(y2), k2 = 1 + cos(x2) * cy;
  return [cy * sin(x2) / k2, sin(y2) / k2];
}
stereographicRaw.invert = azimuthalInvert(function(z2) {
  return 2 * atan(z2);
});
function stereographic() {
  return projection(stereographicRaw).scale(250).clipAngle(142);
}
function transverseMercatorRaw(lambda, phi) {
  return [log(tan((halfPi + phi) / 2)), -lambda];
}
transverseMercatorRaw.invert = function(x2, y2) {
  return [-y2, 2 * atan(exp(x2)) - halfPi];
};
function transverseMercator() {
  var m2 = mercatorProjection(transverseMercatorRaw), center = m2.center, rotate = m2.rotate;
  m2.center = function(_) {
    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
  };
  m2.rotate = function(_) {
    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
  };
  return rotate([0, 0, 90]).scale(159.155);
}
const d3Geo = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  geoAlbers: albers,
  geoAlbersUsa: albersUsa,
  geoArea: area,
  geoAzimuthalEqualArea: azimuthalEqualArea,
  geoAzimuthalEqualAreaRaw: azimuthalEqualAreaRaw,
  geoAzimuthalEquidistant: azimuthalEquidistant,
  geoAzimuthalEquidistantRaw: azimuthalEquidistantRaw,
  geoBounds: bounds,
  geoCentroid: centroid,
  geoCircle: circle$1,
  geoClipAntimeridian: clipAntimeridian,
  geoClipCircle: clipCircle,
  geoClipExtent: extent,
  geoClipRectangle: clipRectangle,
  geoConicConformal: conicConformal,
  geoConicConformalRaw: conicConformalRaw,
  geoConicEqualArea: conicEqualArea,
  geoConicEqualAreaRaw: conicEqualAreaRaw,
  geoConicEquidistant: conicEquidistant,
  geoConicEquidistantRaw: conicEquidistantRaw,
  geoContains: contains,
  geoDistance: distance,
  geoEqualEarth: equalEarth,
  geoEqualEarthRaw: equalEarthRaw,
  geoEquirectangular: equirectangular,
  geoEquirectangularRaw: equirectangularRaw,
  geoGnomonic: gnomonic,
  geoGnomonicRaw: gnomonicRaw,
  geoGraticule: graticule,
  geoGraticule10: graticule10,
  geoIdentity: identity$3,
  geoInterpolate: interpolate$1,
  geoLength: length,
  geoMercator: mercator,
  geoMercatorRaw: mercatorRaw,
  geoNaturalEarth1: naturalEarth1,
  geoNaturalEarth1Raw: naturalEarth1Raw,
  geoOrthographic: orthographic,
  geoOrthographicRaw: orthographicRaw,
  geoPath: index,
  geoProjection: projection,
  geoProjectionMutator: projectionMutator,
  geoRotation: rotation,
  geoStereographic: stereographic,
  geoStereographicRaw: stereographicRaw,
  geoStream,
  geoTransform: transform$1,
  geoTransverseMercator: transverseMercator,
  geoTransverseMercatorRaw: transverseMercatorRaw
}, Symbol.toStringTag, { value: "Module" }));
function identity$2(x2) {
  return x2;
}
function transform(transform2) {
  if (transform2 == null)
    return identity$2;
  var x02, y02, kx2 = transform2.scale[0], ky2 = transform2.scale[1], dx = transform2.translate[0], dy = transform2.translate[1];
  return function(input, i2) {
    if (!i2)
      x02 = y02 = 0;
    var j = 2, n2 = input.length, output = new Array(n2);
    output[0] = (x02 += input[0]) * kx2 + dx;
    output[1] = (y02 += input[1]) * ky2 + dy;
    while (j < n2)
      output[j] = input[j], ++j;
    return output;
  };
}
function reverse2(array2, n2) {
  var t2, j = array2.length, i2 = j - n2;
  while (i2 < --j)
    t2 = array2[i2], array2[i2++] = array2[j], array2[j] = t2;
}
function feature(topology, o2) {
  if (typeof o2 === "string")
    o2 = topology.objects[o2];
  return o2.type === "GeometryCollection" ? { type: "FeatureCollection", features: o2.geometries.map(function(o3) {
    return feature$1(topology, o3);
  }) } : feature$1(topology, o2);
}
function feature$1(topology, o2) {
  var id2 = o2.id, bbox2 = o2.bbox, properties = o2.properties == null ? {} : o2.properties, geometry = object(topology, o2);
  return id2 == null && bbox2 == null ? { type: "Feature", properties, geometry } : bbox2 == null ? { type: "Feature", id: id2, properties, geometry } : { type: "Feature", id: id2, bbox: bbox2, properties, geometry };
}
function object(topology, o2) {
  var transformPoint = transform(topology.transform), arcs2 = topology.arcs;
  function arc(i2, points) {
    if (points.length)
      points.pop();
    for (var a2 = arcs2[i2 < 0 ? ~i2 : i2], k2 = 0, n2 = a2.length; k2 < n2; ++k2) {
      points.push(transformPoint(a2[k2], k2));
    }
    if (i2 < 0)
      reverse2(points, n2);
  }
  function point2(p2) {
    return transformPoint(p2);
  }
  function line(arcs3) {
    var points = [];
    for (var i2 = 0, n2 = arcs3.length; i2 < n2; ++i2)
      arc(arcs3[i2], points);
    if (points.length < 2)
      points.push(points[0]);
    return points;
  }
  function ring(arcs3) {
    var points = line(arcs3);
    while (points.length < 4)
      points.push(points[0]);
    return points;
  }
  function polygon(arcs3) {
    return arcs3.map(ring);
  }
  function geometry(o3) {
    var type2 = o3.type, coordinates2;
    switch (type2) {
      case "GeometryCollection":
        return { type: type2, geometries: o3.geometries.map(geometry) };
      case "Point":
        coordinates2 = point2(o3.coordinates);
        break;
      case "MultiPoint":
        coordinates2 = o3.coordinates.map(point2);
        break;
      case "LineString":
        coordinates2 = line(o3.arcs);
        break;
      case "MultiLineString":
        coordinates2 = o3.arcs.map(line);
        break;
      case "Polygon":
        coordinates2 = polygon(o3.arcs);
        break;
      case "MultiPolygon":
        coordinates2 = o3.arcs.map(polygon);
        break;
      default:
        return null;
    }
    return { type: type2, coordinates: coordinates2 };
  }
  return geometry(o2);
}
function stitch(topology, arcs2) {
  var stitchedArcs = {}, fragmentByStart = {}, fragmentByEnd = {}, fragments = [], emptyIndex = -1;
  arcs2.forEach(function(i2, j) {
    var arc = topology.arcs[i2 < 0 ? ~i2 : i2], t2;
    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {
      t2 = arcs2[++emptyIndex], arcs2[emptyIndex] = i2, arcs2[j] = t2;
    }
  });
  arcs2.forEach(function(i2) {
    var e3 = ends(i2), start2 = e3[0], end = e3[1], f2, g2;
    if (f2 = fragmentByEnd[start2]) {
      delete fragmentByEnd[f2.end];
      f2.push(i2);
      f2.end = end;
      if (g2 = fragmentByStart[end]) {
        delete fragmentByStart[g2.start];
        var fg2 = g2 === f2 ? f2 : f2.concat(g2);
        fragmentByStart[fg2.start = f2.start] = fragmentByEnd[fg2.end = g2.end] = fg2;
      } else {
        fragmentByStart[f2.start] = fragmentByEnd[f2.end] = f2;
      }
    } else if (f2 = fragmentByStart[end]) {
      delete fragmentByStart[f2.start];
      f2.unshift(i2);
      f2.start = start2;
      if (g2 = fragmentByEnd[start2]) {
        delete fragmentByEnd[g2.end];
        var gf = g2 === f2 ? f2 : g2.concat(f2);
        fragmentByStart[gf.start = g2.start] = fragmentByEnd[gf.end = f2.end] = gf;
      } else {
        fragmentByStart[f2.start] = fragmentByEnd[f2.end] = f2;
      }
    } else {
      f2 = [i2];
      fragmentByStart[f2.start = start2] = fragmentByEnd[f2.end = end] = f2;
    }
  });
  function ends(i2) {
    var arc = topology.arcs[i2 < 0 ? ~i2 : i2], p02 = arc[0], p1;
    if (topology.transform)
      p1 = [0, 0], arc.forEach(function(dp) {
        p1[0] += dp[0], p1[1] += dp[1];
      });
    else
      p1 = arc[arc.length - 1];
    return i2 < 0 ? [p1, p02] : [p02, p1];
  }
  function flush(fragmentByEnd2, fragmentByStart2) {
    for (var k2 in fragmentByEnd2) {
      var f2 = fragmentByEnd2[k2];
      delete fragmentByStart2[f2.start];
      delete f2.start;
      delete f2.end;
      f2.forEach(function(i2) {
        stitchedArcs[i2 < 0 ? ~i2 : i2] = 1;
      });
      fragments.push(f2);
    }
  }
  flush(fragmentByEnd, fragmentByStart);
  flush(fragmentByStart, fragmentByEnd);
  arcs2.forEach(function(i2) {
    if (!stitchedArcs[i2 < 0 ? ~i2 : i2])
      fragments.push([i2]);
  });
  return fragments;
}
function mesh(topology) {
  return object(topology, meshArcs.apply(this, arguments));
}
function meshArcs(topology, object2, filter2) {
  var arcs2, i2, n2;
  if (arguments.length > 1)
    arcs2 = extractArcs(topology, object2, filter2);
  else
    for (i2 = 0, arcs2 = new Array(n2 = topology.arcs.length); i2 < n2; ++i2)
      arcs2[i2] = i2;
  return { type: "MultiLineString", arcs: stitch(topology, arcs2) };
}
function extractArcs(topology, object2, filter2) {
  var arcs2 = [], geomsByArc = [], geom;
  function extract0(i2) {
    var j = i2 < 0 ? ~i2 : i2;
    (geomsByArc[j] || (geomsByArc[j] = [])).push({ i: i2, g: geom });
  }
  function extract1(arcs3) {
    arcs3.forEach(extract0);
  }
  function extract2(arcs3) {
    arcs3.forEach(extract1);
  }
  function extract3(arcs3) {
    arcs3.forEach(extract2);
  }
  function geometry(o2) {
    switch (geom = o2, o2.type) {
      case "GeometryCollection":
        o2.geometries.forEach(geometry);
        break;
      case "LineString":
        extract1(o2.arcs);
        break;
      case "MultiLineString":
      case "Polygon":
        extract2(o2.arcs);
        break;
      case "MultiPolygon":
        extract3(o2.arcs);
        break;
    }
  }
  geometry(object2);
  geomsByArc.forEach(filter2 == null ? function(geoms) {
    arcs2.push(geoms[0].i);
  } : function(geoms) {
    if (filter2(geoms[0].g, geoms[geoms.length - 1].g))
      arcs2.push(geoms[0].i);
  });
  return arcs2;
}
var noop = { value: () => {
} };
function dispatch() {
  for (var i2 = 0, n2 = arguments.length, _ = {}, t2; i2 < n2; ++i2) {
    if (!(t2 = arguments[i2] + "") || t2 in _ || /[\s.]/.test(t2))
      throw new Error("illegal type: " + t2);
    _[t2] = [];
  }
  return new Dispatch(_);
}
function Dispatch(_) {
  this._ = _;
}
function parseTypenames$1(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function(t2) {
    var name = "", i2 = t2.indexOf(".");
    if (i2 >= 0)
      name = t2.slice(i2 + 1), t2 = t2.slice(0, i2);
    if (t2 && !types.hasOwnProperty(t2))
      throw new Error("unknown type: " + t2);
    return { type: t2, name };
  });
}
Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function(typename, callback) {
    var _ = this._, T2 = parseTypenames$1(typename + "", _), t2, i2 = -1, n2 = T2.length;
    if (arguments.length < 2) {
      while (++i2 < n2)
        if ((t2 = (typename = T2[i2]).type) && (t2 = get$2(_[t2], typename.name)))
          return t2;
      return;
    }
    if (callback != null && typeof callback !== "function")
      throw new Error("invalid callback: " + callback);
    while (++i2 < n2) {
      if (t2 = (typename = T2[i2]).type)
        _[t2] = set$2(_[t2], typename.name, callback);
      else if (callback == null)
        for (t2 in _)
          _[t2] = set$2(_[t2], typename.name, null);
    }
    return this;
  },
  copy: function() {
    var copy2 = {}, _ = this._;
    for (var t2 in _)
      copy2[t2] = _[t2].slice();
    return new Dispatch(copy2);
  },
  call: function(type2, that) {
    if ((n2 = arguments.length - 2) > 0)
      for (var args = new Array(n2), i2 = 0, n2, t2; i2 < n2; ++i2)
        args[i2] = arguments[i2 + 2];
    if (!this._.hasOwnProperty(type2))
      throw new Error("unknown type: " + type2);
    for (t2 = this._[type2], i2 = 0, n2 = t2.length; i2 < n2; ++i2)
      t2[i2].value.apply(that, args);
  },
  apply: function(type2, that, args) {
    if (!this._.hasOwnProperty(type2))
      throw new Error("unknown type: " + type2);
    for (var t2 = this._[type2], i2 = 0, n2 = t2.length; i2 < n2; ++i2)
      t2[i2].value.apply(that, args);
  }
};
function get$2(type2, name) {
  for (var i2 = 0, n2 = type2.length, c2; i2 < n2; ++i2) {
    if ((c2 = type2[i2]).name === name) {
      return c2.value;
    }
  }
}
function set$2(type2, name, callback) {
  for (var i2 = 0, n2 = type2.length; i2 < n2; ++i2) {
    if (type2[i2].name === name) {
      type2[i2] = noop, type2 = type2.slice(0, i2).concat(type2.slice(i2 + 1));
      break;
    }
  }
  if (callback != null)
    type2.push({ name, value: callback });
  return type2;
}
var xhtml = "http://www.w3.org/1999/xhtml";
const namespaces = {
  svg: "http://www.w3.org/2000/svg",
  xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};
function namespace(name) {
  var prefix2 = name += "", i2 = prefix2.indexOf(":");
  if (i2 >= 0 && (prefix2 = name.slice(0, i2)) !== "xmlns")
    name = name.slice(i2 + 1);
  return namespaces.hasOwnProperty(prefix2) ? { space: namespaces[prefix2], local: name } : name;
}
function creatorInherit(name) {
  return function() {
    var document2 = this.ownerDocument, uri = this.namespaceURI;
    return uri === xhtml && document2.documentElement.namespaceURI === xhtml ? document2.createElement(name) : document2.createElementNS(uri, name);
  };
}
function creatorFixed(fullname) {
  return function() {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}
function creator(name) {
  var fullname = namespace(name);
  return (fullname.local ? creatorFixed : creatorInherit)(fullname);
}
function none() {
}
function selector(selector2) {
  return selector2 == null ? none : function() {
    return this.querySelector(selector2);
  };
}
function selection_select(select2) {
  if (typeof select2 !== "function")
    select2 = selector(select2);
  for (var groups = this._groups, m2 = groups.length, subgroups = new Array(m2), j = 0; j < m2; ++j) {
    for (var group = groups[j], n2 = group.length, subgroup = subgroups[j] = new Array(n2), node, subnode, i2 = 0; i2 < n2; ++i2) {
      if ((node = group[i2]) && (subnode = select2.call(node, node.__data__, i2, group))) {
        if ("__data__" in node)
          subnode.__data__ = node.__data__;
        subgroup[i2] = subnode;
      }
    }
  }
  return new Selection$1(subgroups, this._parents);
}
function array(x2) {
  return typeof x2 === "object" && "length" in x2 ? x2 : Array.from(x2);
}
function empty() {
  return [];
}
function selectorAll(selector2) {
  return selector2 == null ? empty : function() {
    return this.querySelectorAll(selector2);
  };
}
function arrayAll(select2) {
  return function() {
    var group = select2.apply(this, arguments);
    return group == null ? [] : array(group);
  };
}
function selection_selectAll(select2) {
  if (typeof select2 === "function")
    select2 = arrayAll(select2);
  else
    select2 = selectorAll(select2);
  for (var groups = this._groups, m2 = groups.length, subgroups = [], parents = [], j = 0; j < m2; ++j) {
    for (var group = groups[j], n2 = group.length, node, i2 = 0; i2 < n2; ++i2) {
      if (node = group[i2]) {
        subgroups.push(select2.call(node, node.__data__, i2, group));
        parents.push(node);
      }
    }
  }
  return new Selection$1(subgroups, parents);
}
function matcher(selector2) {
  return function() {
    return this.matches(selector2);
  };
}
function childMatcher(selector2) {
  return function(node) {
    return node.matches(selector2);
  };
}
var find = Array.prototype.find;
function childFind(match) {
  return function() {
    return find.call(this.children, match);
  };
}
function childFirst() {
  return this.firstElementChild;
}
function selection_selectChild(match) {
  return this.select(match == null ? childFirst : childFind(typeof match === "function" ? match : childMatcher(match)));
}
var filter = Array.prototype.filter;
function children() {
  return this.children;
}
function childrenFilter(match) {
  return function() {
    return filter.call(this.children, match);
  };
}
function selection_selectChildren(match) {
  return this.selectAll(match == null ? children : childrenFilter(typeof match === "function" ? match : childMatcher(match)));
}
function selection_filter(match) {
  if (typeof match !== "function")
    match = matcher(match);
  for (var groups = this._groups, m2 = groups.length, subgroups = new Array(m2), j = 0; j < m2; ++j) {
    for (var group = groups[j], n2 = group.length, subgroup = subgroups[j] = [], node, i2 = 0; i2 < n2; ++i2) {
      if ((node = group[i2]) && match.call(node, node.__data__, i2, group)) {
        subgroup.push(node);
      }
    }
  }
  return new Selection$1(subgroups, this._parents);
}
function sparse(update) {
  return new Array(update.length);
}
function selection_enter() {
  return new Selection$1(this._enter || this._groups.map(sparse), this._parents);
}
function EnterNode(parent, datum2) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum2;
}
EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function(child) {
    return this._parent.insertBefore(child, this._next);
  },
  insertBefore: function(child, next) {
    return this._parent.insertBefore(child, next);
  },
  querySelector: function(selector2) {
    return this._parent.querySelector(selector2);
  },
  querySelectorAll: function(selector2) {
    return this._parent.querySelectorAll(selector2);
  }
};
function constant$2(x2) {
  return function() {
    return x2;
  };
}
function bindIndex(parent, group, enter, update, exit, data2) {
  var i2 = 0, node, groupLength = group.length, dataLength = data2.length;
  for (; i2 < dataLength; ++i2) {
    if (node = group[i2]) {
      node.__data__ = data2[i2];
      update[i2] = node;
    } else {
      enter[i2] = new EnterNode(parent, data2[i2]);
    }
  }
  for (; i2 < groupLength; ++i2) {
    if (node = group[i2]) {
      exit[i2] = node;
    }
  }
}
function bindKey(parent, group, enter, update, exit, data2, key) {
  var i2, node, nodeByKeyValue = /* @__PURE__ */ new Map(), groupLength = group.length, dataLength = data2.length, keyValues = new Array(groupLength), keyValue;
  for (i2 = 0; i2 < groupLength; ++i2) {
    if (node = group[i2]) {
      keyValues[i2] = keyValue = key.call(node, node.__data__, i2, group) + "";
      if (nodeByKeyValue.has(keyValue)) {
        exit[i2] = node;
      } else {
        nodeByKeyValue.set(keyValue, node);
      }
    }
  }
  for (i2 = 0; i2 < dataLength; ++i2) {
    keyValue = key.call(parent, data2[i2], i2, data2) + "";
    if (node = nodeByKeyValue.get(keyValue)) {
      update[i2] = node;
      node.__data__ = data2[i2];
      nodeByKeyValue.delete(keyValue);
    } else {
      enter[i2] = new EnterNode(parent, data2[i2]);
    }
  }
  for (i2 = 0; i2 < groupLength; ++i2) {
    if ((node = group[i2]) && nodeByKeyValue.get(keyValues[i2]) === node) {
      exit[i2] = node;
    }
  }
}
function datum(node) {
  return node.__data__;
}
function selection_data(value, key) {
  if (!arguments.length)
    return Array.from(this, datum);
  var bind = key ? bindKey : bindIndex, parents = this._parents, groups = this._groups;
  if (typeof value !== "function")
    value = constant$2(value);
  for (var m2 = groups.length, update = new Array(m2), enter = new Array(m2), exit = new Array(m2), j = 0; j < m2; ++j) {
    var parent = parents[j], group = groups[j], groupLength = group.length, data2 = array(value.call(parent, parent && parent.__data__, j, parents)), dataLength = data2.length, enterGroup = enter[j] = new Array(dataLength), updateGroup = update[j] = new Array(dataLength), exitGroup = exit[j] = new Array(groupLength);
    bind(parent, group, enterGroup, updateGroup, exitGroup, data2, key);
    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1)
          i1 = i0 + 1;
        while (!(next = updateGroup[i1]) && ++i1 < dataLength)
          ;
        previous._next = next || null;
      }
    }
  }
  update = new Selection$1(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}
function selection_exit() {
  return new Selection$1(this._exit || this._groups.map(sparse), this._parents);
}
function selection_join(onenter, onupdate, onexit) {
  var enter = this.enter(), update = this, exit = this.exit();
  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
  if (onupdate != null)
    update = onupdate(update);
  if (onexit == null)
    exit.remove();
  else
    onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
}
function selection_merge(selection2) {
  if (!(selection2 instanceof Selection$1))
    throw new Error("invalid merge");
  for (var groups0 = this._groups, groups1 = selection2._groups, m0 = groups0.length, m1 = groups1.length, m2 = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m2; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n2 = group0.length, merge2 = merges[j] = new Array(n2), node, i2 = 0; i2 < n2; ++i2) {
      if (node = group0[i2] || group1[i2]) {
        merge2[i2] = node;
      }
    }
  }
  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }
  return new Selection$1(merges, this._parents);
}
function selection_order() {
  for (var groups = this._groups, j = -1, m2 = groups.length; ++j < m2; ) {
    for (var group = groups[j], i2 = group.length - 1, next = group[i2], node; --i2 >= 0; ) {
      if (node = group[i2]) {
        if (next && node.compareDocumentPosition(next) ^ 4)
          next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }
  return this;
}
function selection_sort(compare) {
  if (!compare)
    compare = ascending;
  function compareNode(a2, b2) {
    return a2 && b2 ? compare(a2.__data__, b2.__data__) : !a2 - !b2;
  }
  for (var groups = this._groups, m2 = groups.length, sortgroups = new Array(m2), j = 0; j < m2; ++j) {
    for (var group = groups[j], n2 = group.length, sortgroup = sortgroups[j] = new Array(n2), node, i2 = 0; i2 < n2; ++i2) {
      if (node = group[i2]) {
        sortgroup[i2] = node;
      }
    }
    sortgroup.sort(compareNode);
  }
  return new Selection$1(sortgroups, this._parents).order();
}
function ascending(a2, b2) {
  return a2 < b2 ? -1 : a2 > b2 ? 1 : a2 >= b2 ? 0 : NaN;
}
function selection_call() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}
function selection_nodes() {
  return Array.from(this);
}
function selection_node() {
  for (var groups = this._groups, j = 0, m2 = groups.length; j < m2; ++j) {
    for (var group = groups[j], i2 = 0, n2 = group.length; i2 < n2; ++i2) {
      var node = group[i2];
      if (node)
        return node;
    }
  }
  return null;
}
function selection_size() {
  let size2 = 0;
  for (const node of this)
    ++size2;
  return size2;
}
function selection_empty() {
  return !this.node();
}
function selection_each(callback) {
  for (var groups = this._groups, j = 0, m2 = groups.length; j < m2; ++j) {
    for (var group = groups[j], i2 = 0, n2 = group.length, node; i2 < n2; ++i2) {
      if (node = group[i2])
        callback.call(node, node.__data__, i2, group);
    }
  }
  return this;
}
function attrRemove$1(name) {
  return function() {
    this.removeAttribute(name);
  };
}
function attrRemoveNS$1(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}
function attrConstant$1(name, value) {
  return function() {
    this.setAttribute(name, value);
  };
}
function attrConstantNS$1(fullname, value) {
  return function() {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}
function attrFunction$1(name, value) {
  return function() {
    var v2 = value.apply(this, arguments);
    if (v2 == null)
      this.removeAttribute(name);
    else
      this.setAttribute(name, v2);
  };
}
function attrFunctionNS$1(fullname, value) {
  return function() {
    var v2 = value.apply(this, arguments);
    if (v2 == null)
      this.removeAttributeNS(fullname.space, fullname.local);
    else
      this.setAttributeNS(fullname.space, fullname.local, v2);
  };
}
function selection_attr(name, value) {
  var fullname = namespace(name);
  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
  }
  return this.each((value == null ? fullname.local ? attrRemoveNS$1 : attrRemove$1 : typeof value === "function" ? fullname.local ? attrFunctionNS$1 : attrFunction$1 : fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, value));
}
function defaultView(node) {
  return node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView;
}
function styleRemove$1(name) {
  return function() {
    this.style.removeProperty(name);
  };
}
function styleConstant$1(name, value, priority) {
  return function() {
    this.style.setProperty(name, value, priority);
  };
}
function styleFunction$1(name, value, priority) {
  return function() {
    var v2 = value.apply(this, arguments);
    if (v2 == null)
      this.style.removeProperty(name);
    else
      this.style.setProperty(name, v2, priority);
  };
}
function selection_style(name, value, priority) {
  return arguments.length > 1 ? this.each((value == null ? styleRemove$1 : typeof value === "function" ? styleFunction$1 : styleConstant$1)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);
}
function styleValue(node, name) {
  return node.style.getPropertyValue(name) || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);
}
function propertyRemove(name) {
  return function() {
    delete this[name];
  };
}
function propertyConstant(name, value) {
  return function() {
    this[name] = value;
  };
}
function propertyFunction(name, value) {
  return function() {
    var v2 = value.apply(this, arguments);
    if (v2 == null)
      delete this[name];
    else
      this[name] = v2;
  };
}
function selection_property(name, value) {
  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
}
function classArray(string2) {
  return string2.trim().split(/^|\s+/);
}
function classList(node) {
  return node.classList || new ClassList(node);
}
function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}
ClassList.prototype = {
  add: function(name) {
    var i2 = this._names.indexOf(name);
    if (i2 < 0) {
      this._names.push(name);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function(name) {
    var i2 = this._names.indexOf(name);
    if (i2 >= 0) {
      this._names.splice(i2, 1);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function(name) {
    return this._names.indexOf(name) >= 0;
  }
};
function classedAdd(node, names) {
  var list = classList(node), i2 = -1, n2 = names.length;
  while (++i2 < n2)
    list.add(names[i2]);
}
function classedRemove(node, names) {
  var list = classList(node), i2 = -1, n2 = names.length;
  while (++i2 < n2)
    list.remove(names[i2]);
}
function classedTrue(names) {
  return function() {
    classedAdd(this, names);
  };
}
function classedFalse(names) {
  return function() {
    classedRemove(this, names);
  };
}
function classedFunction(names, value) {
  return function() {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}
function selection_classed(name, value) {
  var names = classArray(name + "");
  if (arguments.length < 2) {
    var list = classList(this.node()), i2 = -1, n2 = names.length;
    while (++i2 < n2)
      if (!list.contains(names[i2]))
        return false;
    return true;
  }
  return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
}
function textRemove() {
  this.textContent = "";
}
function textConstant$1(value) {
  return function() {
    this.textContent = value;
  };
}
function textFunction$1(value) {
  return function() {
    var v2 = value.apply(this, arguments);
    this.textContent = v2 == null ? "" : v2;
  };
}
function selection_text(value) {
  return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction$1 : textConstant$1)(value)) : this.node().textContent;
}
function htmlRemove() {
  this.innerHTML = "";
}
function htmlConstant(value) {
  return function() {
    this.innerHTML = value;
  };
}
function htmlFunction(value) {
  return function() {
    var v2 = value.apply(this, arguments);
    this.innerHTML = v2 == null ? "" : v2;
  };
}
function selection_html(value) {
  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
}
function raise() {
  if (this.nextSibling)
    this.parentNode.appendChild(this);
}
function selection_raise() {
  return this.each(raise);
}
function lower() {
  if (this.previousSibling)
    this.parentNode.insertBefore(this, this.parentNode.firstChild);
}
function selection_lower() {
  return this.each(lower);
}
function selection_append(name) {
  var create2 = typeof name === "function" ? name : creator(name);
  return this.select(function() {
    return this.appendChild(create2.apply(this, arguments));
  });
}
function constantNull() {
  return null;
}
function selection_insert(name, before) {
  var create2 = typeof name === "function" ? name : creator(name), select2 = before == null ? constantNull : typeof before === "function" ? before : selector(before);
  return this.select(function() {
    return this.insertBefore(create2.apply(this, arguments), select2.apply(this, arguments) || null);
  });
}
function remove() {
  var parent = this.parentNode;
  if (parent)
    parent.removeChild(this);
}
function selection_remove() {
  return this.each(remove);
}
function selection_cloneShallow() {
  var clone2 = this.cloneNode(false), parent = this.parentNode;
  return parent ? parent.insertBefore(clone2, this.nextSibling) : clone2;
}
function selection_cloneDeep() {
  var clone2 = this.cloneNode(true), parent = this.parentNode;
  return parent ? parent.insertBefore(clone2, this.nextSibling) : clone2;
}
function selection_clone(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}
function selection_datum(value) {
  return arguments.length ? this.property("__data__", value) : this.node().__data__;
}
function contextListener(listener) {
  return function(event) {
    listener.call(this, event, this.__data__);
  };
}
function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function(t2) {
    var name = "", i2 = t2.indexOf(".");
    if (i2 >= 0)
      name = t2.slice(i2 + 1), t2 = t2.slice(0, i2);
    return { type: t2, name };
  });
}
function onRemove(typename) {
  return function() {
    var on = this.__on;
    if (!on)
      return;
    for (var j = 0, i2 = -1, m2 = on.length, o2; j < m2; ++j) {
      if (o2 = on[j], (!typename.type || o2.type === typename.type) && o2.name === typename.name) {
        this.removeEventListener(o2.type, o2.listener, o2.options);
      } else {
        on[++i2] = o2;
      }
    }
    if (++i2)
      on.length = i2;
    else
      delete this.__on;
  };
}
function onAdd(typename, value, options) {
  return function() {
    var on = this.__on, o2, listener = contextListener(value);
    if (on)
      for (var j = 0, m2 = on.length; j < m2; ++j) {
        if ((o2 = on[j]).type === typename.type && o2.name === typename.name) {
          this.removeEventListener(o2.type, o2.listener, o2.options);
          this.addEventListener(o2.type, o2.listener = listener, o2.options = options);
          o2.value = value;
          return;
        }
      }
    this.addEventListener(typename.type, listener, options);
    o2 = { type: typename.type, name: typename.name, value, listener, options };
    if (!on)
      this.__on = [o2];
    else
      on.push(o2);
  };
}
function selection_on(typename, value, options) {
  var typenames = parseTypenames(typename + ""), i2, n2 = typenames.length, t2;
  if (arguments.length < 2) {
    var on = this.node().__on;
    if (on)
      for (var j = 0, m2 = on.length, o2; j < m2; ++j) {
        for (i2 = 0, o2 = on[j]; i2 < n2; ++i2) {
          if ((t2 = typenames[i2]).type === o2.type && t2.name === o2.name) {
            return o2.value;
          }
        }
      }
    return;
  }
  on = value ? onAdd : onRemove;
  for (i2 = 0; i2 < n2; ++i2)
    this.each(on(typenames[i2], value, options));
  return this;
}
function dispatchEvent(node, type2, params) {
  var window2 = defaultView(node), event = window2.CustomEvent;
  if (typeof event === "function") {
    event = new event(type2, params);
  } else {
    event = window2.document.createEvent("Event");
    if (params)
      event.initEvent(type2, params.bubbles, params.cancelable), event.detail = params.detail;
    else
      event.initEvent(type2, false, false);
  }
  node.dispatchEvent(event);
}
function dispatchConstant(type2, params) {
  return function() {
    return dispatchEvent(this, type2, params);
  };
}
function dispatchFunction(type2, params) {
  return function() {
    return dispatchEvent(this, type2, params.apply(this, arguments));
  };
}
function selection_dispatch(type2, params) {
  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type2, params));
}
function* selection_iterator() {
  for (var groups = this._groups, j = 0, m2 = groups.length; j < m2; ++j) {
    for (var group = groups[j], i2 = 0, n2 = group.length, node; i2 < n2; ++i2) {
      if (node = group[i2])
        yield node;
    }
  }
}
var root$1 = [null];
function Selection$1(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}
function selection() {
  return new Selection$1([[document.documentElement]], root$1);
}
function selection_selection() {
  return this;
}
Selection$1.prototype = selection.prototype = {
  constructor: Selection$1,
  select: selection_select,
  selectAll: selection_selectAll,
  selectChild: selection_selectChild,
  selectChildren: selection_selectChildren,
  filter: selection_filter,
  data: selection_data,
  enter: selection_enter,
  exit: selection_exit,
  join: selection_join,
  merge: selection_merge,
  selection: selection_selection,
  order: selection_order,
  sort: selection_sort,
  call: selection_call,
  nodes: selection_nodes,
  node: selection_node,
  size: selection_size,
  empty: selection_empty,
  each: selection_each,
  attr: selection_attr,
  style: selection_style,
  property: selection_property,
  classed: selection_classed,
  text: selection_text,
  html: selection_html,
  raise: selection_raise,
  lower: selection_lower,
  append: selection_append,
  insert: selection_insert,
  remove: selection_remove,
  clone: selection_clone,
  datum: selection_datum,
  on: selection_on,
  dispatch: selection_dispatch,
  [Symbol.iterator]: selection_iterator
};
function select(selector2) {
  return typeof selector2 === "string" ? new Selection$1([[document.querySelector(selector2)]], [document.documentElement]) : new Selection$1([[selector2]], root$1);
}
function sourceEvent(event) {
  let sourceEvent2;
  while (sourceEvent2 = event.sourceEvent)
    event = sourceEvent2;
  return event;
}
function pointer(event, node) {
  event = sourceEvent(event);
  if (node === void 0)
    node = event.currentTarget;
  if (node) {
    var svg = node.ownerSVGElement || node;
    if (svg.createSVGPoint) {
      var point2 = svg.createSVGPoint();
      point2.x = event.clientX, point2.y = event.clientY;
      point2 = point2.matrixTransform(node.getScreenCTM().inverse());
      return [point2.x, point2.y];
    }
    if (node.getBoundingClientRect) {
      var rect = node.getBoundingClientRect();
      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
    }
  }
  return [event.pageX, event.pageY];
}
function noevent$1(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}
function dragDisable(view) {
  var root2 = view.document.documentElement, selection2 = select(view).on("dragstart.drag", noevent$1, true);
  if ("onselectstart" in root2) {
    selection2.on("selectstart.drag", noevent$1, true);
  } else {
    root2.__noselect = root2.style.MozUserSelect;
    root2.style.MozUserSelect = "none";
  }
}
function yesdrag(view, noclick) {
  var root2 = view.document.documentElement, selection2 = select(view).on("dragstart.drag", null);
  if (noclick) {
    selection2.on("click.drag", noevent$1, true);
    setTimeout(function() {
      selection2.on("click.drag", null);
    }, 0);
  }
  if ("onselectstart" in root2) {
    selection2.on("selectstart.drag", null);
  } else {
    root2.style.MozUserSelect = root2.__noselect;
    delete root2.__noselect;
  }
}
function define(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}
function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition)
    prototype[key] = definition[key];
  return prototype;
}
function Color() {
}
var darker = 0.7;
var brighter = 1 / darker;
var reI = "\\s*([+-]?\\d+)\\s*", reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*", reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*", reHex = /^#([0-9a-f]{3,8})$/, reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"), reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"), reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"), reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"), reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"), reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
var named = {
  aliceblue: 15792383,
  antiquewhite: 16444375,
  aqua: 65535,
  aquamarine: 8388564,
  azure: 15794175,
  beige: 16119260,
  bisque: 16770244,
  black: 0,
  blanchedalmond: 16772045,
  blue: 255,
  blueviolet: 9055202,
  brown: 10824234,
  burlywood: 14596231,
  cadetblue: 6266528,
  chartreuse: 8388352,
  chocolate: 13789470,
  coral: 16744272,
  cornflowerblue: 6591981,
  cornsilk: 16775388,
  crimson: 14423100,
  cyan: 65535,
  darkblue: 139,
  darkcyan: 35723,
  darkgoldenrod: 12092939,
  darkgray: 11119017,
  darkgreen: 25600,
  darkgrey: 11119017,
  darkkhaki: 12433259,
  darkmagenta: 9109643,
  darkolivegreen: 5597999,
  darkorange: 16747520,
  darkorchid: 10040012,
  darkred: 9109504,
  darksalmon: 15308410,
  darkseagreen: 9419919,
  darkslateblue: 4734347,
  darkslategray: 3100495,
  darkslategrey: 3100495,
  darkturquoise: 52945,
  darkviolet: 9699539,
  deeppink: 16716947,
  deepskyblue: 49151,
  dimgray: 6908265,
  dimgrey: 6908265,
  dodgerblue: 2003199,
  firebrick: 11674146,
  floralwhite: 16775920,
  forestgreen: 2263842,
  fuchsia: 16711935,
  gainsboro: 14474460,
  ghostwhite: 16316671,
  gold: 16766720,
  goldenrod: 14329120,
  gray: 8421504,
  green: 32768,
  greenyellow: 11403055,
  grey: 8421504,
  honeydew: 15794160,
  hotpink: 16738740,
  indianred: 13458524,
  indigo: 4915330,
  ivory: 16777200,
  khaki: 15787660,
  lavender: 15132410,
  lavenderblush: 16773365,
  lawngreen: 8190976,
  lemonchiffon: 16775885,
  lightblue: 11393254,
  lightcoral: 15761536,
  lightcyan: 14745599,
  lightgoldenrodyellow: 16448210,
  lightgray: 13882323,
  lightgreen: 9498256,
  lightgrey: 13882323,
  lightpink: 16758465,
  lightsalmon: 16752762,
  lightseagreen: 2142890,
  lightskyblue: 8900346,
  lightslategray: 7833753,
  lightslategrey: 7833753,
  lightsteelblue: 11584734,
  lightyellow: 16777184,
  lime: 65280,
  limegreen: 3329330,
  linen: 16445670,
  magenta: 16711935,
  maroon: 8388608,
  mediumaquamarine: 6737322,
  mediumblue: 205,
  mediumorchid: 12211667,
  mediumpurple: 9662683,
  mediumseagreen: 3978097,
  mediumslateblue: 8087790,
  mediumspringgreen: 64154,
  mediumturquoise: 4772300,
  mediumvioletred: 13047173,
  midnightblue: 1644912,
  mintcream: 16121850,
  mistyrose: 16770273,
  moccasin: 16770229,
  navajowhite: 16768685,
  navy: 128,
  oldlace: 16643558,
  olive: 8421376,
  olivedrab: 7048739,
  orange: 16753920,
  orangered: 16729344,
  orchid: 14315734,
  palegoldenrod: 15657130,
  palegreen: 10025880,
  paleturquoise: 11529966,
  palevioletred: 14381203,
  papayawhip: 16773077,
  peachpuff: 16767673,
  peru: 13468991,
  pink: 16761035,
  plum: 14524637,
  powderblue: 11591910,
  purple: 8388736,
  rebeccapurple: 6697881,
  red: 16711680,
  rosybrown: 12357519,
  royalblue: 4286945,
  saddlebrown: 9127187,
  salmon: 16416882,
  sandybrown: 16032864,
  seagreen: 3050327,
  seashell: 16774638,
  sienna: 10506797,
  silver: 12632256,
  skyblue: 8900331,
  slateblue: 6970061,
  slategray: 7372944,
  slategrey: 7372944,
  snow: 16775930,
  springgreen: 65407,
  steelblue: 4620980,
  tan: 13808780,
  teal: 32896,
  thistle: 14204888,
  tomato: 16737095,
  turquoise: 4251856,
  violet: 15631086,
  wheat: 16113331,
  white: 16777215,
  whitesmoke: 16119285,
  yellow: 16776960,
  yellowgreen: 10145074
};
define(Color, color, {
  copy: function(channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable: function() {
    return this.rgb().displayable();
  },
  hex: color_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});
function color_formatHex() {
  return this.rgb().formatHex();
}
function color_formatHsl() {
  return hslConvert(this).formatHsl();
}
function color_formatRgb() {
  return this.rgb().formatRgb();
}
function color(format2) {
  var m2, l2;
  format2 = (format2 + "").trim().toLowerCase();
  return (m2 = reHex.exec(format2)) ? (l2 = m2[1].length, m2 = parseInt(m2[1], 16), l2 === 6 ? rgbn(m2) : l2 === 3 ? new Rgb(m2 >> 8 & 15 | m2 >> 4 & 240, m2 >> 4 & 15 | m2 & 240, (m2 & 15) << 4 | m2 & 15, 1) : l2 === 8 ? rgba(m2 >> 24 & 255, m2 >> 16 & 255, m2 >> 8 & 255, (m2 & 255) / 255) : l2 === 4 ? rgba(m2 >> 12 & 15 | m2 >> 8 & 240, m2 >> 8 & 15 | m2 >> 4 & 240, m2 >> 4 & 15 | m2 & 240, ((m2 & 15) << 4 | m2 & 15) / 255) : null) : (m2 = reRgbInteger.exec(format2)) ? new Rgb(m2[1], m2[2], m2[3], 1) : (m2 = reRgbPercent.exec(format2)) ? new Rgb(m2[1] * 255 / 100, m2[2] * 255 / 100, m2[3] * 255 / 100, 1) : (m2 = reRgbaInteger.exec(format2)) ? rgba(m2[1], m2[2], m2[3], m2[4]) : (m2 = reRgbaPercent.exec(format2)) ? rgba(m2[1] * 255 / 100, m2[2] * 255 / 100, m2[3] * 255 / 100, m2[4]) : (m2 = reHslPercent.exec(format2)) ? hsla(m2[1], m2[2] / 100, m2[3] / 100, 1) : (m2 = reHslaPercent.exec(format2)) ? hsla(m2[1], m2[2] / 100, m2[3] / 100, m2[4]) : named.hasOwnProperty(format2) ? rgbn(named[format2]) : format2 === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}
function rgbn(n2) {
  return new Rgb(n2 >> 16 & 255, n2 >> 8 & 255, n2 & 255, 1);
}
function rgba(r2, g2, b2, a2) {
  if (a2 <= 0)
    r2 = g2 = b2 = NaN;
  return new Rgb(r2, g2, b2, a2);
}
function rgbConvert(o2) {
  if (!(o2 instanceof Color))
    o2 = color(o2);
  if (!o2)
    return new Rgb();
  o2 = o2.rgb();
  return new Rgb(o2.r, o2.g, o2.b, o2.opacity);
}
function rgb(r2, g2, b2, opacity) {
  return arguments.length === 1 ? rgbConvert(r2) : new Rgb(r2, g2, b2, opacity == null ? 1 : opacity);
}
function Rgb(r2, g2, b2, opacity) {
  this.r = +r2;
  this.g = +g2;
  this.b = +b2;
  this.opacity = +opacity;
}
define(Rgb, rgb, extend(Color, {
  brighter: function(k2) {
    k2 = k2 == null ? brighter : Math.pow(brighter, k2);
    return new Rgb(this.r * k2, this.g * k2, this.b * k2, this.opacity);
  },
  darker: function(k2) {
    k2 = k2 == null ? darker : Math.pow(darker, k2);
    return new Rgb(this.r * k2, this.g * k2, this.b * k2, this.opacity);
  },
  rgb: function() {
    return this;
  },
  displayable: function() {
    return -0.5 <= this.r && this.r < 255.5 && (-0.5 <= this.g && this.g < 255.5) && (-0.5 <= this.b && this.b < 255.5) && (0 <= this.opacity && this.opacity <= 1);
  },
  hex: rgb_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));
function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}
function rgb_formatRgb() {
  var a2 = this.opacity;
  a2 = isNaN(a2) ? 1 : Math.max(0, Math.min(1, a2));
  return (a2 === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a2 === 1 ? ")" : ", " + a2 + ")");
}
function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}
function hsla(h2, s2, l2, a2) {
  if (a2 <= 0)
    h2 = s2 = l2 = NaN;
  else if (l2 <= 0 || l2 >= 1)
    h2 = s2 = NaN;
  else if (s2 <= 0)
    h2 = NaN;
  return new Hsl(h2, s2, l2, a2);
}
function hslConvert(o2) {
  if (o2 instanceof Hsl)
    return new Hsl(o2.h, o2.s, o2.l, o2.opacity);
  if (!(o2 instanceof Color))
    o2 = color(o2);
  if (!o2)
    return new Hsl();
  if (o2 instanceof Hsl)
    return o2;
  o2 = o2.rgb();
  var r2 = o2.r / 255, g2 = o2.g / 255, b2 = o2.b / 255, min2 = Math.min(r2, g2, b2), max2 = Math.max(r2, g2, b2), h2 = NaN, s2 = max2 - min2, l2 = (max2 + min2) / 2;
  if (s2) {
    if (r2 === max2)
      h2 = (g2 - b2) / s2 + (g2 < b2) * 6;
    else if (g2 === max2)
      h2 = (b2 - r2) / s2 + 2;
    else
      h2 = (r2 - g2) / s2 + 4;
    s2 /= l2 < 0.5 ? max2 + min2 : 2 - max2 - min2;
    h2 *= 60;
  } else {
    s2 = l2 > 0 && l2 < 1 ? 0 : h2;
  }
  return new Hsl(h2, s2, l2, o2.opacity);
}
function hsl(h2, s2, l2, opacity) {
  return arguments.length === 1 ? hslConvert(h2) : new Hsl(h2, s2, l2, opacity == null ? 1 : opacity);
}
function Hsl(h2, s2, l2, opacity) {
  this.h = +h2;
  this.s = +s2;
  this.l = +l2;
  this.opacity = +opacity;
}
define(Hsl, hsl, extend(Color, {
  brighter: function(k2) {
    k2 = k2 == null ? brighter : Math.pow(brighter, k2);
    return new Hsl(this.h, this.s, this.l * k2, this.opacity);
  },
  darker: function(k2) {
    k2 = k2 == null ? darker : Math.pow(darker, k2);
    return new Hsl(this.h, this.s, this.l * k2, this.opacity);
  },
  rgb: function() {
    var h2 = this.h % 360 + (this.h < 0) * 360, s2 = isNaN(h2) || isNaN(this.s) ? 0 : this.s, l2 = this.l, m2 = l2 + (l2 < 0.5 ? l2 : 1 - l2) * s2, m1 = 2 * l2 - m2;
    return new Rgb(
      hsl2rgb(h2 >= 240 ? h2 - 240 : h2 + 120, m1, m2),
      hsl2rgb(h2, m1, m2),
      hsl2rgb(h2 < 120 ? h2 + 240 : h2 - 120, m1, m2),
      this.opacity
    );
  },
  displayable: function() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && (0 <= this.l && this.l <= 1) && (0 <= this.opacity && this.opacity <= 1);
  },
  formatHsl: function() {
    var a2 = this.opacity;
    a2 = isNaN(a2) ? 1 : Math.max(0, Math.min(1, a2));
    return (a2 === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a2 === 1 ? ")" : ", " + a2 + ")");
  }
}));
function hsl2rgb(h2, m1, m2) {
  return (h2 < 60 ? m1 + (m2 - m1) * h2 / 60 : h2 < 180 ? m2 : h2 < 240 ? m1 + (m2 - m1) * (240 - h2) / 60 : m1) * 255;
}
const constant$1 = (x2) => () => x2;
function linear(a2, d2) {
  return function(t2) {
    return a2 + t2 * d2;
  };
}
function exponential(a2, b2, y2) {
  return a2 = Math.pow(a2, y2), b2 = Math.pow(b2, y2) - a2, y2 = 1 / y2, function(t2) {
    return Math.pow(a2 + t2 * b2, y2);
  };
}
function gamma(y2) {
  return (y2 = +y2) === 1 ? nogamma : function(a2, b2) {
    return b2 - a2 ? exponential(a2, b2, y2) : constant$1(isNaN(a2) ? b2 : a2);
  };
}
function nogamma(a2, b2) {
  var d2 = b2 - a2;
  return d2 ? linear(a2, d2) : constant$1(isNaN(a2) ? b2 : a2);
}
const interpolateRgb = function rgbGamma2(y2) {
  var color2 = gamma(y2);
  function rgb$12(start2, end) {
    var r2 = color2((start2 = rgb(start2)).r, (end = rgb(end)).r), g2 = color2(start2.g, end.g), b2 = color2(start2.b, end.b), opacity = nogamma(start2.opacity, end.opacity);
    return function(t2) {
      start2.r = r2(t2);
      start2.g = g2(t2);
      start2.b = b2(t2);
      start2.opacity = opacity(t2);
      return start2 + "";
    };
  }
  rgb$12.gamma = rgbGamma2;
  return rgb$12;
}(1);
function interpolateNumber2(a2, b2) {
  return a2 = +a2, b2 = +b2, function(t2) {
    return a2 * (1 - t2) + b2 * t2;
  };
}
var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, reB = new RegExp(reA.source, "g");
function zero(b2) {
  return function() {
    return b2;
  };
}
function one(b2) {
  return function(t2) {
    return b2(t2) + "";
  };
}
function interpolateString(a2, b2) {
  var bi2 = reA.lastIndex = reB.lastIndex = 0, am, bm, bs, i2 = -1, s2 = [], q2 = [];
  a2 = a2 + "", b2 = b2 + "";
  while ((am = reA.exec(a2)) && (bm = reB.exec(b2))) {
    if ((bs = bm.index) > bi2) {
      bs = b2.slice(bi2, bs);
      if (s2[i2])
        s2[i2] += bs;
      else
        s2[++i2] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) {
      if (s2[i2])
        s2[i2] += bm;
      else
        s2[++i2] = bm;
    } else {
      s2[++i2] = null;
      q2.push({ i: i2, x: interpolateNumber2(am, bm) });
    }
    bi2 = reB.lastIndex;
  }
  if (bi2 < b2.length) {
    bs = b2.slice(bi2);
    if (s2[i2])
      s2[i2] += bs;
    else
      s2[++i2] = bs;
  }
  return s2.length < 2 ? q2[0] ? one(q2[0].x) : zero(b2) : (b2 = q2.length, function(t2) {
    for (var i3 = 0, o2; i3 < b2; ++i3)
      s2[(o2 = q2[i3]).i] = o2.x(t2);
    return s2.join("");
  });
}
var degrees = 180 / Math.PI;
var identity$1 = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
function decompose(a2, b2, c2, d2, e3, f2) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a2 * a2 + b2 * b2))
    a2 /= scaleX, b2 /= scaleX;
  if (skewX = a2 * c2 + b2 * d2)
    c2 -= a2 * skewX, d2 -= b2 * skewX;
  if (scaleY = Math.sqrt(c2 * c2 + d2 * d2))
    c2 /= scaleY, d2 /= scaleY, skewX /= scaleY;
  if (a2 * d2 < b2 * c2)
    a2 = -a2, b2 = -b2, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e3,
    translateY: f2,
    rotate: Math.atan2(b2, a2) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX,
    scaleY
  };
}
var svgNode;
function parseCss(value) {
  const m2 = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
  return m2.isIdentity ? identity$1 : decompose(m2.a, m2.b, m2.c, m2.d, m2.e, m2.f);
}
function parseSvg(value) {
  if (value == null)
    return identity$1;
  if (!svgNode)
    svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate()))
    return identity$1;
  value = value.matrix;
  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);
}
function interpolateTransform(parse2, pxComma, pxParen, degParen) {
  function pop(s2) {
    return s2.length ? s2.pop() + " " : "";
  }
  function translate(xa, ya2, xb2, yb2, s2, q2) {
    if (xa !== xb2 || ya2 !== yb2) {
      var i2 = s2.push("translate(", null, pxComma, null, pxParen);
      q2.push({ i: i2 - 4, x: interpolateNumber2(xa, xb2) }, { i: i2 - 2, x: interpolateNumber2(ya2, yb2) });
    } else if (xb2 || yb2) {
      s2.push("translate(" + xb2 + pxComma + yb2 + pxParen);
    }
  }
  function rotate(a2, b2, s2, q2) {
    if (a2 !== b2) {
      if (a2 - b2 > 180)
        b2 += 360;
      else if (b2 - a2 > 180)
        a2 += 360;
      q2.push({ i: s2.push(pop(s2) + "rotate(", null, degParen) - 2, x: interpolateNumber2(a2, b2) });
    } else if (b2) {
      s2.push(pop(s2) + "rotate(" + b2 + degParen);
    }
  }
  function skewX(a2, b2, s2, q2) {
    if (a2 !== b2) {
      q2.push({ i: s2.push(pop(s2) + "skewX(", null, degParen) - 2, x: interpolateNumber2(a2, b2) });
    } else if (b2) {
      s2.push(pop(s2) + "skewX(" + b2 + degParen);
    }
  }
  function scale(xa, ya2, xb2, yb2, s2, q2) {
    if (xa !== xb2 || ya2 !== yb2) {
      var i2 = s2.push(pop(s2) + "scale(", null, ",", null, ")");
      q2.push({ i: i2 - 4, x: interpolateNumber2(xa, xb2) }, { i: i2 - 2, x: interpolateNumber2(ya2, yb2) });
    } else if (xb2 !== 1 || yb2 !== 1) {
      s2.push(pop(s2) + "scale(" + xb2 + "," + yb2 + ")");
    }
  }
  return function(a2, b2) {
    var s2 = [], q2 = [];
    a2 = parse2(a2), b2 = parse2(b2);
    translate(a2.translateX, a2.translateY, b2.translateX, b2.translateY, s2, q2);
    rotate(a2.rotate, b2.rotate, s2, q2);
    skewX(a2.skewX, b2.skewX, s2, q2);
    scale(a2.scaleX, a2.scaleY, b2.scaleX, b2.scaleY, s2, q2);
    a2 = b2 = null;
    return function(t2) {
      var i2 = -1, n2 = q2.length, o2;
      while (++i2 < n2)
        s2[(o2 = q2[i2]).i] = o2.x(t2);
      return s2.join("");
    };
  };
}
var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");
var epsilon2 = 1e-12;
function cosh(x2) {
  return ((x2 = Math.exp(x2)) + 1 / x2) / 2;
}
function sinh(x2) {
  return ((x2 = Math.exp(x2)) - 1 / x2) / 2;
}
function tanh(x2) {
  return ((x2 = Math.exp(2 * x2)) - 1) / (x2 + 1);
}
const interpolateZoom = function zoomRho(rho, rho2, rho4) {
  function zoom2(p02, p1) {
    var ux0 = p02[0], uy0 = p02[1], w0 = p02[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i2, S2;
    if (d2 < epsilon2) {
      S2 = Math.log(w1 / w0) / rho;
      i2 = function(t2) {
        return [
          ux0 + t2 * dx,
          uy0 + t2 * dy,
          w0 * Math.exp(rho * t2 * S2)
        ];
      };
    } else {
      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1), b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S2 = (r1 - r0) / rho;
      i2 = function(t2) {
        var s2 = t2 * S2, coshr0 = cosh(r0), u2 = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s2 + r0) - sinh(r0));
        return [
          ux0 + u2 * dx,
          uy0 + u2 * dy,
          w0 * coshr0 / cosh(rho * s2 + r0)
        ];
      };
    }
    i2.duration = S2 * 1e3 * rho / Math.SQRT2;
    return i2;
  }
  zoom2.rho = function(_) {
    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;
    return zoomRho(_1, _2, _4);
  };
  return zoom2;
}(Math.SQRT2, 2, 4);
var frame = 0, timeout$1 = 0, interval = 0, pokeDelay = 1e3, taskHead, taskTail, clockLast = 0, clockNow = 0, clockSkew = 0, clock = typeof performance === "object" && performance.now ? performance : Date, setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f2) {
  setTimeout(f2, 17);
};
function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}
function clearNow() {
  clockNow = 0;
}
function Timer() {
  this._call = this._time = this._next = null;
}
Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function(callback, delay, time2) {
    if (typeof callback !== "function")
      throw new TypeError("callback is not a function");
    time2 = (time2 == null ? now() : +time2) + (delay == null ? 0 : +delay);
    if (!this._next && taskTail !== this) {
      if (taskTail)
        taskTail._next = this;
      else
        taskHead = this;
      taskTail = this;
    }
    this._call = callback;
    this._time = time2;
    sleep();
  },
  stop: function() {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};
function timer(callback, delay, time2) {
  var t2 = new Timer();
  t2.restart(callback, delay, time2);
  return t2;
}
function timerFlush() {
  now();
  ++frame;
  var t2 = taskHead, e3;
  while (t2) {
    if ((e3 = clockNow - t2._time) >= 0)
      t2._call.call(null, e3);
    t2 = t2._next;
  }
  --frame;
}
function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout$1 = 0;
  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}
function poke() {
  var now2 = clock.now(), delay = now2 - clockLast;
  if (delay > pokeDelay)
    clockSkew -= delay, clockLast = now2;
}
function nap() {
  var t02, t12 = taskHead, t2, time2 = Infinity;
  while (t12) {
    if (t12._call) {
      if (time2 > t12._time)
        time2 = t12._time;
      t02 = t12, t12 = t12._next;
    } else {
      t2 = t12._next, t12._next = null;
      t12 = t02 ? t02._next = t2 : taskHead = t2;
    }
  }
  taskTail = t02;
  sleep(time2);
}
function sleep(time2) {
  if (frame)
    return;
  if (timeout$1)
    timeout$1 = clearTimeout(timeout$1);
  var delay = time2 - clockNow;
  if (delay > 24) {
    if (time2 < Infinity)
      timeout$1 = setTimeout(wake, time2 - clock.now() - clockSkew);
    if (interval)
      interval = clearInterval(interval);
  } else {
    if (!interval)
      clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}
function timeout(callback, delay, time2) {
  var t2 = new Timer();
  delay = delay == null ? 0 : +delay;
  t2.restart((elapsed) => {
    t2.stop();
    callback(elapsed + delay);
  }, delay, time2);
  return t2;
}
var emptyOn = dispatch("start", "end", "cancel", "interrupt");
var emptyTween = [];
var CREATED = 0;
var SCHEDULED = 1;
var STARTING = 2;
var STARTED = 3;
var RUNNING = 4;
var ENDING = 5;
var ENDED = 6;
function schedule(node, name, id2, index2, group, timing) {
  var schedules = node.__transition;
  if (!schedules)
    node.__transition = {};
  else if (id2 in schedules)
    return;
  create(node, id2, {
    name,
    index: index2,
    // For context during callback.
    group,
    // For context during callback.
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
}
function init(node, id2) {
  var schedule2 = get$1(node, id2);
  if (schedule2.state > CREATED)
    throw new Error("too late; already scheduled");
  return schedule2;
}
function set$1(node, id2) {
  var schedule2 = get$1(node, id2);
  if (schedule2.state > STARTED)
    throw new Error("too late; already running");
  return schedule2;
}
function get$1(node, id2) {
  var schedule2 = node.__transition;
  if (!schedule2 || !(schedule2 = schedule2[id2]))
    throw new Error("transition not found");
  return schedule2;
}
function create(node, id2, self2) {
  var schedules = node.__transition, tween;
  schedules[id2] = self2;
  self2.timer = timer(schedule2, 0, self2.time);
  function schedule2(elapsed) {
    self2.state = SCHEDULED;
    self2.timer.restart(start2, self2.delay, self2.time);
    if (self2.delay <= elapsed)
      start2(elapsed - self2.delay);
  }
  function start2(elapsed) {
    var i2, j, n2, o2;
    if (self2.state !== SCHEDULED)
      return stop();
    for (i2 in schedules) {
      o2 = schedules[i2];
      if (o2.name !== self2.name)
        continue;
      if (o2.state === STARTED)
        return timeout(start2);
      if (o2.state === RUNNING) {
        o2.state = ENDED;
        o2.timer.stop();
        o2.on.call("interrupt", node, node.__data__, o2.index, o2.group);
        delete schedules[i2];
      } else if (+i2 < id2) {
        o2.state = ENDED;
        o2.timer.stop();
        o2.on.call("cancel", node, node.__data__, o2.index, o2.group);
        delete schedules[i2];
      }
    }
    timeout(function() {
      if (self2.state === STARTED) {
        self2.state = RUNNING;
        self2.timer.restart(tick, self2.delay, self2.time);
        tick(elapsed);
      }
    });
    self2.state = STARTING;
    self2.on.call("start", node, node.__data__, self2.index, self2.group);
    if (self2.state !== STARTING)
      return;
    self2.state = STARTED;
    tween = new Array(n2 = self2.tween.length);
    for (i2 = 0, j = -1; i2 < n2; ++i2) {
      if (o2 = self2.tween[i2].value.call(node, node.__data__, self2.index, self2.group)) {
        tween[++j] = o2;
      }
    }
    tween.length = j + 1;
  }
  function tick(elapsed) {
    var t2 = elapsed < self2.duration ? self2.ease.call(null, elapsed / self2.duration) : (self2.timer.restart(stop), self2.state = ENDING, 1), i2 = -1, n2 = tween.length;
    while (++i2 < n2) {
      tween[i2].call(node, t2);
    }
    if (self2.state === ENDING) {
      self2.on.call("end", node, node.__data__, self2.index, self2.group);
      stop();
    }
  }
  function stop() {
    self2.state = ENDED;
    self2.timer.stop();
    delete schedules[id2];
    for (var i2 in schedules)
      return;
    delete node.__transition;
  }
}
function interrupt(node, name) {
  var schedules = node.__transition, schedule2, active, empty2 = true, i2;
  if (!schedules)
    return;
  name = name == null ? null : name + "";
  for (i2 in schedules) {
    if ((schedule2 = schedules[i2]).name !== name) {
      empty2 = false;
      continue;
    }
    active = schedule2.state > STARTING && schedule2.state < ENDING;
    schedule2.state = ENDED;
    schedule2.timer.stop();
    schedule2.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule2.index, schedule2.group);
    delete schedules[i2];
  }
  if (empty2)
    delete node.__transition;
}
function selection_interrupt(name) {
  return this.each(function() {
    interrupt(this, name);
  });
}
function tweenRemove(id2, name) {
  var tween0, tween1;
  return function() {
    var schedule2 = set$1(this, id2), tween = schedule2.tween;
    if (tween !== tween0) {
      tween1 = tween0 = tween;
      for (var i2 = 0, n2 = tween1.length; i2 < n2; ++i2) {
        if (tween1[i2].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i2, 1);
          break;
        }
      }
    }
    schedule2.tween = tween1;
  };
}
function tweenFunction(id2, name, value) {
  var tween0, tween1;
  if (typeof value !== "function")
    throw new Error();
  return function() {
    var schedule2 = set$1(this, id2), tween = schedule2.tween;
    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();
      for (var t2 = { name, value }, i2 = 0, n2 = tween1.length; i2 < n2; ++i2) {
        if (tween1[i2].name === name) {
          tween1[i2] = t2;
          break;
        }
      }
      if (i2 === n2)
        tween1.push(t2);
    }
    schedule2.tween = tween1;
  };
}
function transition_tween(name, value) {
  var id2 = this._id;
  name += "";
  if (arguments.length < 2) {
    var tween = get$1(this.node(), id2).tween;
    for (var i2 = 0, n2 = tween.length, t2; i2 < n2; ++i2) {
      if ((t2 = tween[i2]).name === name) {
        return t2.value;
      }
    }
    return null;
  }
  return this.each((value == null ? tweenRemove : tweenFunction)(id2, name, value));
}
function tweenValue(transition, name, value) {
  var id2 = transition._id;
  transition.each(function() {
    var schedule2 = set$1(this, id2);
    (schedule2.value || (schedule2.value = {}))[name] = value.apply(this, arguments);
  });
  return function(node) {
    return get$1(node, id2).value[name];
  };
}
function interpolate(a2, b2) {
  var c2;
  return (typeof b2 === "number" ? interpolateNumber2 : b2 instanceof color ? interpolateRgb : (c2 = color(b2)) ? (b2 = c2, interpolateRgb) : interpolateString)(a2, b2);
}
function attrRemove(name) {
  return function() {
    this.removeAttribute(name);
  };
}
function attrRemoveNS(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}
function attrConstant(name, interpolate2, value1) {
  var string00, string1 = value1 + "", interpolate0;
  return function() {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate2(string00 = string0, value1);
  };
}
function attrConstantNS(fullname, interpolate2, value1) {
  var string00, string1 = value1 + "", interpolate0;
  return function() {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate2(string00 = string0, value1);
  };
}
function attrFunction(name, interpolate2, value) {
  var string00, string10, interpolate0;
  return function() {
    var string0, value1 = value(this), string1;
    if (value1 == null)
      return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate2(string00 = string0, value1));
  };
}
function attrFunctionNS(fullname, interpolate2, value) {
  var string00, string10, interpolate0;
  return function() {
    var string0, value1 = value(this), string1;
    if (value1 == null)
      return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate2(string00 = string0, value1));
  };
}
function transition_attr(name, value) {
  var fullname = namespace(name), i2 = fullname === "transform" ? interpolateTransformSvg : interpolate;
  return this.attrTween(name, typeof value === "function" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i2, tweenValue(this, "attr." + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i2, value));
}
function attrInterpolate(name, i2) {
  return function(t2) {
    this.setAttribute(name, i2.call(this, t2));
  };
}
function attrInterpolateNS(fullname, i2) {
  return function(t2) {
    this.setAttributeNS(fullname.space, fullname.local, i2.call(this, t2));
  };
}
function attrTweenNS(fullname, value) {
  var t02, i0;
  function tween() {
    var i2 = value.apply(this, arguments);
    if (i2 !== i0)
      t02 = (i0 = i2) && attrInterpolateNS(fullname, i2);
    return t02;
  }
  tween._value = value;
  return tween;
}
function attrTween(name, value) {
  var t02, i0;
  function tween() {
    var i2 = value.apply(this, arguments);
    if (i2 !== i0)
      t02 = (i0 = i2) && attrInterpolate(name, i2);
    return t02;
  }
  tween._value = value;
  return tween;
}
function transition_attrTween(name, value) {
  var key = "attr." + name;
  if (arguments.length < 2)
    return (key = this.tween(key)) && key._value;
  if (value == null)
    return this.tween(key, null);
  if (typeof value !== "function")
    throw new Error();
  var fullname = namespace(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
}
function delayFunction(id2, value) {
  return function() {
    init(this, id2).delay = +value.apply(this, arguments);
  };
}
function delayConstant(id2, value) {
  return value = +value, function() {
    init(this, id2).delay = value;
  };
}
function transition_delay(value) {
  var id2 = this._id;
  return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id2, value)) : get$1(this.node(), id2).delay;
}
function durationFunction(id2, value) {
  return function() {
    set$1(this, id2).duration = +value.apply(this, arguments);
  };
}
function durationConstant(id2, value) {
  return value = +value, function() {
    set$1(this, id2).duration = value;
  };
}
function transition_duration(value) {
  var id2 = this._id;
  return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id2, value)) : get$1(this.node(), id2).duration;
}
function easeConstant(id2, value) {
  if (typeof value !== "function")
    throw new Error();
  return function() {
    set$1(this, id2).ease = value;
  };
}
function transition_ease(value) {
  var id2 = this._id;
  return arguments.length ? this.each(easeConstant(id2, value)) : get$1(this.node(), id2).ease;
}
function easeVarying(id2, value) {
  return function() {
    var v2 = value.apply(this, arguments);
    if (typeof v2 !== "function")
      throw new Error();
    set$1(this, id2).ease = v2;
  };
}
function transition_easeVarying(value) {
  if (typeof value !== "function")
    throw new Error();
  return this.each(easeVarying(this._id, value));
}
function transition_filter(match) {
  if (typeof match !== "function")
    match = matcher(match);
  for (var groups = this._groups, m2 = groups.length, subgroups = new Array(m2), j = 0; j < m2; ++j) {
    for (var group = groups[j], n2 = group.length, subgroup = subgroups[j] = [], node, i2 = 0; i2 < n2; ++i2) {
      if ((node = group[i2]) && match.call(node, node.__data__, i2, group)) {
        subgroup.push(node);
      }
    }
  }
  return new Transition(subgroups, this._parents, this._name, this._id);
}
function transition_merge(transition) {
  if (transition._id !== this._id)
    throw new Error();
  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m2 = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m2; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n2 = group0.length, merge2 = merges[j] = new Array(n2), node, i2 = 0; i2 < n2; ++i2) {
      if (node = group0[i2] || group1[i2]) {
        merge2[i2] = node;
      }
    }
  }
  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }
  return new Transition(merges, this._parents, this._name, this._id);
}
function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function(t2) {
    var i2 = t2.indexOf(".");
    if (i2 >= 0)
      t2 = t2.slice(0, i2);
    return !t2 || t2 === "start";
  });
}
function onFunction(id2, name, listener) {
  var on0, on1, sit = start(name) ? init : set$1;
  return function() {
    var schedule2 = sit(this, id2), on = schedule2.on;
    if (on !== on0)
      (on1 = (on0 = on).copy()).on(name, listener);
    schedule2.on = on1;
  };
}
function transition_on(name, listener) {
  var id2 = this._id;
  return arguments.length < 2 ? get$1(this.node(), id2).on.on(name) : this.each(onFunction(id2, name, listener));
}
function removeFunction(id2) {
  return function() {
    var parent = this.parentNode;
    for (var i2 in this.__transition)
      if (+i2 !== id2)
        return;
    if (parent)
      parent.removeChild(this);
  };
}
function transition_remove() {
  return this.on("end.remove", removeFunction(this._id));
}
function transition_select(select2) {
  var name = this._name, id2 = this._id;
  if (typeof select2 !== "function")
    select2 = selector(select2);
  for (var groups = this._groups, m2 = groups.length, subgroups = new Array(m2), j = 0; j < m2; ++j) {
    for (var group = groups[j], n2 = group.length, subgroup = subgroups[j] = new Array(n2), node, subnode, i2 = 0; i2 < n2; ++i2) {
      if ((node = group[i2]) && (subnode = select2.call(node, node.__data__, i2, group))) {
        if ("__data__" in node)
          subnode.__data__ = node.__data__;
        subgroup[i2] = subnode;
        schedule(subgroup[i2], name, id2, i2, subgroup, get$1(node, id2));
      }
    }
  }
  return new Transition(subgroups, this._parents, name, id2);
}
function transition_selectAll(select2) {
  var name = this._name, id2 = this._id;
  if (typeof select2 !== "function")
    select2 = selectorAll(select2);
  for (var groups = this._groups, m2 = groups.length, subgroups = [], parents = [], j = 0; j < m2; ++j) {
    for (var group = groups[j], n2 = group.length, node, i2 = 0; i2 < n2; ++i2) {
      if (node = group[i2]) {
        for (var children2 = select2.call(node, node.__data__, i2, group), child, inherit2 = get$1(node, id2), k2 = 0, l2 = children2.length; k2 < l2; ++k2) {
          if (child = children2[k2]) {
            schedule(child, name, id2, k2, children2, inherit2);
          }
        }
        subgroups.push(children2);
        parents.push(node);
      }
    }
  }
  return new Transition(subgroups, parents, name, id2);
}
var Selection = selection.prototype.constructor;
function transition_selection() {
  return new Selection(this._groups, this._parents);
}
function styleNull(name, interpolate2) {
  var string00, string10, interpolate0;
  return function() {
    var string0 = styleValue(this, name), string1 = (this.style.removeProperty(name), styleValue(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate2(string00 = string0, string10 = string1);
  };
}
function styleRemove(name) {
  return function() {
    this.style.removeProperty(name);
  };
}
function styleConstant(name, interpolate2, value1) {
  var string00, string1 = value1 + "", interpolate0;
  return function() {
    var string0 = styleValue(this, name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate2(string00 = string0, value1);
  };
}
function styleFunction(name, interpolate2, value) {
  var string00, string10, interpolate0;
  return function() {
    var string0 = styleValue(this, name), value1 = value(this), string1 = value1 + "";
    if (value1 == null)
      string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate2(string00 = string0, value1));
  };
}
function styleMaybeRemove(id2, name) {
  var on0, on1, listener0, key = "style." + name, event = "end." + key, remove2;
  return function() {
    var schedule2 = set$1(this, id2), on = schedule2.on, listener = schedule2.value[key] == null ? remove2 || (remove2 = styleRemove(name)) : void 0;
    if (on !== on0 || listener0 !== listener)
      (on1 = (on0 = on).copy()).on(event, listener0 = listener);
    schedule2.on = on1;
  };
}
function transition_style(name, value, priority) {
  var i2 = (name += "") === "transform" ? interpolateTransformCss : interpolate;
  return value == null ? this.styleTween(name, styleNull(name, i2)).on("end.style." + name, styleRemove(name)) : typeof value === "function" ? this.styleTween(name, styleFunction(name, i2, tweenValue(this, "style." + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant(name, i2, value), priority).on("end.style." + name, null);
}
function styleInterpolate(name, i2, priority) {
  return function(t2) {
    this.style.setProperty(name, i2.call(this, t2), priority);
  };
}
function styleTween(name, value, priority) {
  var t2, i0;
  function tween() {
    var i2 = value.apply(this, arguments);
    if (i2 !== i0)
      t2 = (i0 = i2) && styleInterpolate(name, i2, priority);
    return t2;
  }
  tween._value = value;
  return tween;
}
function transition_styleTween(name, value, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2)
    return (key = this.tween(key)) && key._value;
  if (value == null)
    return this.tween(key, null);
  if (typeof value !== "function")
    throw new Error();
  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
}
function textConstant(value) {
  return function() {
    this.textContent = value;
  };
}
function textFunction(value) {
  return function() {
    var value1 = value(this);
    this.textContent = value1 == null ? "" : value1;
  };
}
function transition_text(value) {
  return this.tween("text", typeof value === "function" ? textFunction(tweenValue(this, "text", value)) : textConstant(value == null ? "" : value + ""));
}
function textInterpolate(i2) {
  return function(t2) {
    this.textContent = i2.call(this, t2);
  };
}
function textTween(value) {
  var t02, i0;
  function tween() {
    var i2 = value.apply(this, arguments);
    if (i2 !== i0)
      t02 = (i0 = i2) && textInterpolate(i2);
    return t02;
  }
  tween._value = value;
  return tween;
}
function transition_textTween(value) {
  var key = "text";
  if (arguments.length < 1)
    return (key = this.tween(key)) && key._value;
  if (value == null)
    return this.tween(key, null);
  if (typeof value !== "function")
    throw new Error();
  return this.tween(key, textTween(value));
}
function transition_transition() {
  var name = this._name, id0 = this._id, id1 = newId();
  for (var groups = this._groups, m2 = groups.length, j = 0; j < m2; ++j) {
    for (var group = groups[j], n2 = group.length, node, i2 = 0; i2 < n2; ++i2) {
      if (node = group[i2]) {
        var inherit2 = get$1(node, id0);
        schedule(node, name, id1, i2, group, {
          time: inherit2.time + inherit2.delay + inherit2.duration,
          delay: 0,
          duration: inherit2.duration,
          ease: inherit2.ease
        });
      }
    }
  }
  return new Transition(groups, this._parents, name, id1);
}
function transition_end() {
  var on0, on1, that = this, id2 = that._id, size2 = that.size();
  return new Promise(function(resolve, reject) {
    var cancel = { value: reject }, end = { value: function() {
      if (--size2 === 0)
        resolve();
    } };
    that.each(function() {
      var schedule2 = set$1(this, id2), on = schedule2.on;
      if (on !== on0) {
        on1 = (on0 = on).copy();
        on1._.cancel.push(cancel);
        on1._.interrupt.push(cancel);
        on1._.end.push(end);
      }
      schedule2.on = on1;
    });
    if (size2 === 0)
      resolve();
  });
}
var id = 0;
function Transition(groups, parents, name, id2) {
  this._groups = groups;
  this._parents = parents;
  this._name = name;
  this._id = id2;
}
function newId() {
  return ++id;
}
var selection_prototype = selection.prototype;
Transition.prototype = {
  constructor: Transition,
  select: transition_select,
  selectAll: transition_selectAll,
  filter: transition_filter,
  merge: transition_merge,
  selection: transition_selection,
  transition: transition_transition,
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: transition_on,
  attr: transition_attr,
  attrTween: transition_attrTween,
  style: transition_style,
  styleTween: transition_styleTween,
  text: transition_text,
  textTween: transition_textTween,
  remove: transition_remove,
  tween: transition_tween,
  delay: transition_delay,
  duration: transition_duration,
  ease: transition_ease,
  easeVarying: transition_easeVarying,
  end: transition_end,
  [Symbol.iterator]: selection_prototype[Symbol.iterator]
};
function cubicInOut(t2) {
  return ((t2 *= 2) <= 1 ? t2 * t2 * t2 : (t2 -= 2) * t2 * t2 + 2) / 2;
}
var defaultTiming = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: cubicInOut
};
function inherit(node, id2) {
  var timing;
  while (!(timing = node.__transition) || !(timing = timing[id2])) {
    if (!(node = node.parentNode)) {
      throw new Error(`transition ${id2} not found`);
    }
  }
  return timing;
}
function selection_transition(name) {
  var id2, timing;
  if (name instanceof Transition) {
    id2 = name._id, name = name._name;
  } else {
    id2 = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + "";
  }
  for (var groups = this._groups, m2 = groups.length, j = 0; j < m2; ++j) {
    for (var group = groups[j], n2 = group.length, node, i2 = 0; i2 < n2; ++i2) {
      if (node = group[i2]) {
        schedule(node, name, id2, i2, group, timing || inherit(node, id2));
      }
    }
  }
  return new Transition(groups, this._parents, name, id2);
}
selection.prototype.interrupt = selection_interrupt;
selection.prototype.transition = selection_transition;
const constant = (x2) => () => x2;
function ZoomEvent(type2, {
  sourceEvent: sourceEvent2,
  target,
  transform: transform2,
  dispatch: dispatch2
}) {
  Object.defineProperties(this, {
    type: { value: type2, enumerable: true, configurable: true },
    sourceEvent: { value: sourceEvent2, enumerable: true, configurable: true },
    target: { value: target, enumerable: true, configurable: true },
    transform: { value: transform2, enumerable: true, configurable: true },
    _: { value: dispatch2 }
  });
}
function Transform(k2, x2, y2) {
  this.k = k2;
  this.x = x2;
  this.y = y2;
}
Transform.prototype = {
  constructor: Transform,
  scale: function(k2) {
    return k2 === 1 ? this : new Transform(this.k * k2, this.x, this.y);
  },
  translate: function(x2, y2) {
    return x2 === 0 & y2 === 0 ? this : new Transform(this.k, this.x + this.k * x2, this.y + this.k * y2);
  },
  apply: function(point2) {
    return [point2[0] * this.k + this.x, point2[1] * this.k + this.y];
  },
  applyX: function(x2) {
    return x2 * this.k + this.x;
  },
  applyY: function(y2) {
    return y2 * this.k + this.y;
  },
  invert: function(location) {
    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
  },
  invertX: function(x2) {
    return (x2 - this.x) / this.k;
  },
  invertY: function(y2) {
    return (y2 - this.y) / this.k;
  },
  rescaleX: function(x2) {
    return x2.copy().domain(x2.range().map(this.invertX, this).map(x2.invert, x2));
  },
  rescaleY: function(y2) {
    return y2.copy().domain(y2.range().map(this.invertY, this).map(y2.invert, y2));
  },
  toString: function() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
var identity3 = new Transform(1, 0, 0);
Transform.prototype;
function nopropagation(event) {
  event.stopImmediatePropagation();
}
function noevent(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}
function defaultFilter(event) {
  return (!event.ctrlKey || event.type === "wheel") && !event.button;
}
function defaultExtent() {
  var e3 = this;
  if (e3 instanceof SVGElement) {
    e3 = e3.ownerSVGElement || e3;
    if (e3.hasAttribute("viewBox")) {
      e3 = e3.viewBox.baseVal;
      return [[e3.x, e3.y], [e3.x + e3.width, e3.y + e3.height]];
    }
    return [[0, 0], [e3.width.baseVal.value, e3.height.baseVal.value]];
  }
  return [[0, 0], [e3.clientWidth, e3.clientHeight]];
}
function defaultTransform() {
  return this.__zoom || identity3;
}
function defaultWheelDelta(event) {
  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 2e-3) * (event.ctrlKey ? 10 : 1);
}
function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}
function defaultConstrain(transform2, extent2, translateExtent) {
  var dx0 = transform2.invertX(extent2[0][0]) - translateExtent[0][0], dx1 = transform2.invertX(extent2[1][0]) - translateExtent[1][0], dy0 = transform2.invertY(extent2[0][1]) - translateExtent[0][1], dy1 = transform2.invertY(extent2[1][1]) - translateExtent[1][1];
  return transform2.translate(
    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),
    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)
  );
}
function zoom() {
  var filter2 = defaultFilter, extent2 = defaultExtent, constrain = defaultConstrain, wheelDelta = defaultWheelDelta, touchable = defaultTouchable, scaleExtent = [0, Infinity], translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]], duration = 250, interpolate2 = interpolateZoom, listeners2 = dispatch("start", "zoom", "end"), touchstarting, touchfirst, touchending, touchDelay = 500, wheelDelay = 150, clickDistance2 = 0, tapDistance = 10;
  function zoom2(selection2) {
    selection2.property("__zoom", defaultTransform).on("wheel.zoom", wheeled).on("mousedown.zoom", mousedowned).on("dblclick.zoom", dblclicked).filter(touchable).on("touchstart.zoom", touchstarted).on("touchmove.zoom", touchmoved).on("touchend.zoom touchcancel.zoom", touchended).style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }
  zoom2.transform = function(collection, transform2, point2, event) {
    var selection2 = collection.selection ? collection.selection() : collection;
    selection2.property("__zoom", defaultTransform);
    if (collection !== selection2) {
      schedule2(collection, transform2, point2, event);
    } else {
      selection2.interrupt().each(function() {
        gesture(this, arguments).event(event).start().zoom(null, typeof transform2 === "function" ? transform2.apply(this, arguments) : transform2).end();
      });
    }
  };
  zoom2.scaleBy = function(selection2, k2, p2, event) {
    zoom2.scaleTo(selection2, function() {
      var k0 = this.__zoom.k, k1 = typeof k2 === "function" ? k2.apply(this, arguments) : k2;
      return k0 * k1;
    }, p2, event);
  };
  zoom2.scaleTo = function(selection2, k2, p2, event) {
    zoom2.transform(selection2, function() {
      var e3 = extent2.apply(this, arguments), t02 = this.__zoom, p02 = p2 == null ? centroid2(e3) : typeof p2 === "function" ? p2.apply(this, arguments) : p2, p1 = t02.invert(p02), k1 = typeof k2 === "function" ? k2.apply(this, arguments) : k2;
      return constrain(translate(scale(t02, k1), p02, p1), e3, translateExtent);
    }, p2, event);
  };
  zoom2.translateBy = function(selection2, x2, y2, event) {
    zoom2.transform(selection2, function() {
      return constrain(this.__zoom.translate(
        typeof x2 === "function" ? x2.apply(this, arguments) : x2,
        typeof y2 === "function" ? y2.apply(this, arguments) : y2
      ), extent2.apply(this, arguments), translateExtent);
    }, null, event);
  };
  zoom2.translateTo = function(selection2, x2, y2, p2, event) {
    zoom2.transform(selection2, function() {
      var e3 = extent2.apply(this, arguments), t2 = this.__zoom, p02 = p2 == null ? centroid2(e3) : typeof p2 === "function" ? p2.apply(this, arguments) : p2;
      return constrain(identity3.translate(p02[0], p02[1]).scale(t2.k).translate(
        typeof x2 === "function" ? -x2.apply(this, arguments) : -x2,
        typeof y2 === "function" ? -y2.apply(this, arguments) : -y2
      ), e3, translateExtent);
    }, p2, event);
  };
  function scale(transform2, k2) {
    k2 = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k2));
    return k2 === transform2.k ? transform2 : new Transform(k2, transform2.x, transform2.y);
  }
  function translate(transform2, p02, p1) {
    var x2 = p02[0] - p1[0] * transform2.k, y2 = p02[1] - p1[1] * transform2.k;
    return x2 === transform2.x && y2 === transform2.y ? transform2 : new Transform(transform2.k, x2, y2);
  }
  function centroid2(extent3) {
    return [(+extent3[0][0] + +extent3[1][0]) / 2, (+extent3[0][1] + +extent3[1][1]) / 2];
  }
  function schedule2(transition, transform2, point2, event) {
    transition.on("start.zoom", function() {
      gesture(this, arguments).event(event).start();
    }).on("interrupt.zoom end.zoom", function() {
      gesture(this, arguments).event(event).end();
    }).tween("zoom", function() {
      var that = this, args = arguments, g2 = gesture(that, args).event(event), e3 = extent2.apply(that, args), p2 = point2 == null ? centroid2(e3) : typeof point2 === "function" ? point2.apply(that, args) : point2, w2 = Math.max(e3[1][0] - e3[0][0], e3[1][1] - e3[0][1]), a2 = that.__zoom, b2 = typeof transform2 === "function" ? transform2.apply(that, args) : transform2, i2 = interpolate2(a2.invert(p2).concat(w2 / a2.k), b2.invert(p2).concat(w2 / b2.k));
      return function(t2) {
        if (t2 === 1)
          t2 = b2;
        else {
          var l2 = i2(t2), k2 = w2 / l2[2];
          t2 = new Transform(k2, p2[0] - l2[0] * k2, p2[1] - l2[1] * k2);
        }
        g2.zoom(null, t2);
      };
    });
  }
  function gesture(that, args, clean) {
    return !clean && that.__zooming || new Gesture(that, args);
  }
  function Gesture(that, args) {
    this.that = that;
    this.args = args;
    this.active = 0;
    this.sourceEvent = null;
    this.extent = extent2.apply(that, args);
    this.taps = 0;
  }
  Gesture.prototype = {
    event: function(event) {
      if (event)
        this.sourceEvent = event;
      return this;
    },
    start: function() {
      if (++this.active === 1) {
        this.that.__zooming = this;
        this.emit("start");
      }
      return this;
    },
    zoom: function(key, transform2) {
      if (this.mouse && key !== "mouse")
        this.mouse[1] = transform2.invert(this.mouse[0]);
      if (this.touch0 && key !== "touch")
        this.touch0[1] = transform2.invert(this.touch0[0]);
      if (this.touch1 && key !== "touch")
        this.touch1[1] = transform2.invert(this.touch1[0]);
      this.that.__zoom = transform2;
      this.emit("zoom");
      return this;
    },
    end: function() {
      if (--this.active === 0) {
        delete this.that.__zooming;
        this.emit("end");
      }
      return this;
    },
    emit: function(type2) {
      var d2 = select(this.that).datum();
      listeners2.call(
        type2,
        this.that,
        new ZoomEvent(type2, {
          sourceEvent: this.sourceEvent,
          target: zoom2,
          type: type2,
          transform: this.that.__zoom,
          dispatch: listeners2
        }),
        d2
      );
    }
  };
  function wheeled(event, ...args) {
    if (!filter2.apply(this, arguments))
      return;
    var g2 = gesture(this, args).event(event), t2 = this.__zoom, k2 = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t2.k * Math.pow(2, wheelDelta.apply(this, arguments)))), p2 = pointer(event);
    if (g2.wheel) {
      if (g2.mouse[0][0] !== p2[0] || g2.mouse[0][1] !== p2[1]) {
        g2.mouse[1] = t2.invert(g2.mouse[0] = p2);
      }
      clearTimeout(g2.wheel);
    } else if (t2.k === k2)
      return;
    else {
      g2.mouse = [p2, t2.invert(p2)];
      interrupt(this);
      g2.start();
    }
    noevent(event);
    g2.wheel = setTimeout(wheelidled, wheelDelay);
    g2.zoom("mouse", constrain(translate(scale(t2, k2), g2.mouse[0], g2.mouse[1]), g2.extent, translateExtent));
    function wheelidled() {
      g2.wheel = null;
      g2.end();
    }
  }
  function mousedowned(event, ...args) {
    if (touchending || !filter2.apply(this, arguments))
      return;
    var g2 = gesture(this, args, true).event(event), v2 = select(event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true), p2 = pointer(event, currentTarget), currentTarget = event.currentTarget, x02 = event.clientX, y02 = event.clientY;
    dragDisable(event.view);
    nopropagation(event);
    g2.mouse = [p2, this.__zoom.invert(p2)];
    interrupt(this);
    g2.start();
    function mousemoved(event2) {
      noevent(event2);
      if (!g2.moved) {
        var dx = event2.clientX - x02, dy = event2.clientY - y02;
        g2.moved = dx * dx + dy * dy > clickDistance2;
      }
      g2.event(event2).zoom("mouse", constrain(translate(g2.that.__zoom, g2.mouse[0] = pointer(event2, currentTarget), g2.mouse[1]), g2.extent, translateExtent));
    }
    function mouseupped(event2) {
      v2.on("mousemove.zoom mouseup.zoom", null);
      yesdrag(event2.view, g2.moved);
      noevent(event2);
      g2.event(event2).end();
    }
  }
  function dblclicked(event, ...args) {
    if (!filter2.apply(this, arguments))
      return;
    var t02 = this.__zoom, p02 = pointer(event.changedTouches ? event.changedTouches[0] : event, this), p1 = t02.invert(p02), k1 = t02.k * (event.shiftKey ? 0.5 : 2), t12 = constrain(translate(scale(t02, k1), p02, p1), extent2.apply(this, args), translateExtent);
    noevent(event);
    if (duration > 0)
      select(this).transition().duration(duration).call(schedule2, t12, p02, event);
    else
      select(this).call(zoom2.transform, t12, p02, event);
  }
  function touchstarted(event, ...args) {
    if (!filter2.apply(this, arguments))
      return;
    var touches = event.touches, n2 = touches.length, g2 = gesture(this, args, event.changedTouches.length === n2).event(event), started, i2, t2, p2;
    nopropagation(event);
    for (i2 = 0; i2 < n2; ++i2) {
      t2 = touches[i2], p2 = pointer(t2, this);
      p2 = [p2, this.__zoom.invert(p2), t2.identifier];
      if (!g2.touch0)
        g2.touch0 = p2, started = true, g2.taps = 1 + !!touchstarting;
      else if (!g2.touch1 && g2.touch0[2] !== p2[2])
        g2.touch1 = p2, g2.taps = 0;
    }
    if (touchstarting)
      touchstarting = clearTimeout(touchstarting);
    if (started) {
      if (g2.taps < 2)
        touchfirst = p2[0], touchstarting = setTimeout(function() {
          touchstarting = null;
        }, touchDelay);
      interrupt(this);
      g2.start();
    }
  }
  function touchmoved(event, ...args) {
    if (!this.__zooming)
      return;
    var g2 = gesture(this, args).event(event), touches = event.changedTouches, n2 = touches.length, i2, t2, p2, l2;
    noevent(event);
    for (i2 = 0; i2 < n2; ++i2) {
      t2 = touches[i2], p2 = pointer(t2, this);
      if (g2.touch0 && g2.touch0[2] === t2.identifier)
        g2.touch0[0] = p2;
      else if (g2.touch1 && g2.touch1[2] === t2.identifier)
        g2.touch1[0] = p2;
    }
    t2 = g2.that.__zoom;
    if (g2.touch1) {
      var p02 = g2.touch0[0], l0 = g2.touch0[1], p1 = g2.touch1[0], l1 = g2.touch1[1], dp = (dp = p1[0] - p02[0]) * dp + (dp = p1[1] - p02[1]) * dp, dl2 = (dl2 = l1[0] - l0[0]) * dl2 + (dl2 = l1[1] - l0[1]) * dl2;
      t2 = scale(t2, Math.sqrt(dp / dl2));
      p2 = [(p02[0] + p1[0]) / 2, (p02[1] + p1[1]) / 2];
      l2 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
    } else if (g2.touch0)
      p2 = g2.touch0[0], l2 = g2.touch0[1];
    else
      return;
    g2.zoom("touch", constrain(translate(t2, p2, l2), g2.extent, translateExtent));
  }
  function touchended(event, ...args) {
    if (!this.__zooming)
      return;
    var g2 = gesture(this, args).event(event), touches = event.changedTouches, n2 = touches.length, i2, t2;
    nopropagation(event);
    if (touchending)
      clearTimeout(touchending);
    touchending = setTimeout(function() {
      touchending = null;
    }, touchDelay);
    for (i2 = 0; i2 < n2; ++i2) {
      t2 = touches[i2];
      if (g2.touch0 && g2.touch0[2] === t2.identifier)
        delete g2.touch0;
      else if (g2.touch1 && g2.touch1[2] === t2.identifier)
        delete g2.touch1;
    }
    if (g2.touch1 && !g2.touch0)
      g2.touch0 = g2.touch1, delete g2.touch1;
    if (g2.touch0)
      g2.touch0[1] = this.__zoom.invert(g2.touch0[0]);
    else {
      g2.end();
      if (g2.taps === 2) {
        t2 = pointer(t2, this);
        if (Math.hypot(touchfirst[0] - t2[0], touchfirst[1] - t2[1]) < tapDistance) {
          var p2 = select(this).on("dblclick.zoom");
          if (p2)
            p2.apply(this, arguments);
        }
      }
    }
  }
  zoom2.wheelDelta = function(_) {
    return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : constant(+_), zoom2) : wheelDelta;
  };
  zoom2.filter = function(_) {
    return arguments.length ? (filter2 = typeof _ === "function" ? _ : constant(!!_), zoom2) : filter2;
  };
  zoom2.touchable = function(_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : constant(!!_), zoom2) : touchable;
  };
  zoom2.extent = function(_) {
    return arguments.length ? (extent2 = typeof _ === "function" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom2) : extent2;
  };
  zoom2.scaleExtent = function(_) {
    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom2) : [scaleExtent[0], scaleExtent[1]];
  };
  zoom2.translateExtent = function(_) {
    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom2) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
  };
  zoom2.constrain = function(_) {
    return arguments.length ? (constrain = _, zoom2) : constrain;
  };
  zoom2.duration = function(_) {
    return arguments.length ? (duration = +_, zoom2) : duration;
  };
  zoom2.interpolate = function(_) {
    return arguments.length ? (interpolate2 = _, zoom2) : interpolate2;
  };
  zoom2.on = function() {
    var value = listeners2.on.apply(listeners2, arguments);
    return value === listeners2 ? zoom2 : value;
  };
  zoom2.clickDistance = function(_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom2) : Math.sqrt(clickDistance2);
  };
  zoom2.tapDistance = function(_) {
    return arguments.length ? (tapDistance = +_, zoom2) : tapDistance;
  };
  return zoom2;
}
function ownKeys(object2, enumerableOnly) {
  var keys2 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object2);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
    })), keys2.push.apply(keys2, symbols);
  }
  return keys2;
}
function _objectSpread2(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = null != arguments[i2] ? arguments[i2] : {};
    i2 % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _slicedToArray(arr, i2) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i2) || _unsupportedIterableToArray(arr, i2) || _nonIterableRest();
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _iterableToArrayLimit(arr, i2) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i2 && _arr.length === i2)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _unsupportedIterableToArray(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray(o2, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var _excluded$a = ["width", "height", "projection", "projectionConfig"];
var geoPath = index, projections = _objectWithoutProperties(d3Geo, ["geoPath"]);
var MapContext = reactExports.createContext();
var makeProjection = function makeProjection2(_ref) {
  var _ref$projectionConfig = _ref.projectionConfig, projectionConfig = _ref$projectionConfig === void 0 ? {} : _ref$projectionConfig, _ref$projection = _ref.projection, projection2 = _ref$projection === void 0 ? "geoEqualEarth" : _ref$projection, _ref$width = _ref.width, width = _ref$width === void 0 ? 800 : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? 600 : _ref$height;
  var isFunc = typeof projection2 === "function";
  if (isFunc)
    return projection2;
  var proj = projections[projection2]().translate([width / 2, height / 2]);
  var supported = [proj.center ? "center" : null, proj.rotate ? "rotate" : null, proj.scale ? "scale" : null, proj.parallels ? "parallels" : null];
  supported.forEach(function(d2) {
    if (!d2)
      return;
    proj = proj[d2](projectionConfig[d2] || proj[d2]());
  });
  return proj;
};
var MapProvider = function MapProvider2(_ref2) {
  var width = _ref2.width, height = _ref2.height, projection2 = _ref2.projection, projectionConfig = _ref2.projectionConfig, restProps = _objectWithoutProperties(_ref2, _excluded$a);
  var _ref3 = projectionConfig.center || [], _ref4 = _slicedToArray(_ref3, 2), cx2 = _ref4[0], cy = _ref4[1];
  var _ref5 = projectionConfig.rotate || [], _ref6 = _slicedToArray(_ref5, 3), rx = _ref6[0], ry = _ref6[1], rz = _ref6[2];
  var _ref7 = projectionConfig.parallels || [], _ref8 = _slicedToArray(_ref7, 2), p1 = _ref8[0], p2 = _ref8[1];
  var s2 = projectionConfig.scale || null;
  var projMemo = reactExports.useMemo(function() {
    return makeProjection({
      projectionConfig: {
        center: cx2 || cx2 === 0 || cy || cy === 0 ? [cx2, cy] : null,
        rotate: rx || rx === 0 || ry || ry === 0 ? [rx, ry, rz] : null,
        parallels: p1 || p1 === 0 || p2 || p2 === 0 ? [p1, p2] : null,
        scale: s2
      },
      projection: projection2,
      width,
      height
    });
  }, [width, height, projection2, cx2, cy, rx, ry, rz, p1, p2, s2]);
  var proj = reactExports.useCallback(projMemo, [projMemo]);
  var value = reactExports.useMemo(function() {
    return {
      width,
      height,
      projection: proj,
      path: geoPath().projection(proj)
    };
  }, [width, height, proj]);
  return /* @__PURE__ */ React.createElement(MapContext.Provider, _extends({
    value
  }, restProps));
};
MapProvider.propTypes = {
  width: PropTypes.number,
  height: PropTypes.number,
  projection: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  projectionConfig: PropTypes.object
};
var _excluded$9 = ["width", "height", "projection", "projectionConfig", "className"];
var ComposableMap = reactExports.forwardRef(function(_ref, ref) {
  var _ref$width = _ref.width, width = _ref$width === void 0 ? 800 : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? 600 : _ref$height, _ref$projection = _ref.projection, projection2 = _ref$projection === void 0 ? "geoEqualEarth" : _ref$projection, _ref$projectionConfig = _ref.projectionConfig, projectionConfig = _ref$projectionConfig === void 0 ? {} : _ref$projectionConfig, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className, restProps = _objectWithoutProperties(_ref, _excluded$9);
  return /* @__PURE__ */ React.createElement(MapProvider, {
    width,
    height,
    projection: projection2,
    projectionConfig
  }, /* @__PURE__ */ React.createElement("svg", _extends({
    ref,
    viewBox: "0 0 ".concat(width, " ").concat(height),
    className: "rsm-svg ".concat(className)
  }, restProps)));
});
ComposableMap.displayName = "ComposableMap";
ComposableMap.propTypes = {
  width: PropTypes.number,
  height: PropTypes.number,
  projection: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  projectionConfig: PropTypes.object,
  className: PropTypes.string
};
function getCoords(w2, h2, t2) {
  var xOffset = (w2 * t2.k - w2) / 2;
  var yOffset = (h2 * t2.k - h2) / 2;
  return [w2 / 2 - (xOffset + t2.x) / t2.k, h2 / 2 - (yOffset + t2.y) / t2.k];
}
function fetchGeographies(url) {
  return fetch(url).then(function(res) {
    if (!res.ok) {
      throw Error(res.statusText);
    }
    return res.json();
  })["catch"](function(error) {
    console.log("There was a problem when fetching the data: ", error);
  });
}
function getFeatures(geographies, parseGeographies) {
  var isTopojson = geographies.type === "Topology";
  if (!isTopojson) {
    return parseGeographies ? parseGeographies(geographies.features || geographies) : geographies.features || geographies;
  }
  var feats = feature(geographies, geographies.objects[Object.keys(geographies.objects)[0]]).features;
  return parseGeographies ? parseGeographies(feats) : feats;
}
function getMesh(geographies) {
  var isTopojson = geographies.type === "Topology";
  if (!isTopojson)
    return null;
  var outline = mesh(geographies, geographies.objects[Object.keys(geographies.objects)[0]], function(a2, b2) {
    return a2 === b2;
  });
  var borders = mesh(geographies, geographies.objects[Object.keys(geographies.objects)[0]], function(a2, b2) {
    return a2 !== b2;
  });
  return {
    outline,
    borders
  };
}
function prepareMesh(outline, borders, path) {
  return outline && borders ? {
    outline: _objectSpread2(_objectSpread2({}, outline), {}, {
      rsmKey: "outline",
      svgPath: path(outline)
    }),
    borders: _objectSpread2(_objectSpread2({}, borders), {}, {
      rsmKey: "borders",
      svgPath: path(borders)
    })
  } : {};
}
function prepareFeatures(geographies, path) {
  return geographies ? geographies.map(function(d2, i2) {
    return _objectSpread2(_objectSpread2({}, d2), {}, {
      rsmKey: "geo-".concat(i2),
      svgPath: path(d2)
    });
  }) : [];
}
function createConnectorPath() {
  var dx = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 30;
  var dy = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 30;
  var curve = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0.5;
  var curvature = Array.isArray(curve) ? curve : [curve, curve];
  var curveX = dx / 2 * curvature[0];
  var curveY = dy / 2 * curvature[1];
  return "M".concat(0, ",", 0, " Q", -dx / 2 - curveX, ",").concat(-dy / 2 + curveY, " ").concat(-dx, ",").concat(-dy);
}
function isString$1(geo) {
  return typeof geo === "string";
}
function useGeographies(_ref) {
  var geography = _ref.geography, parseGeographies = _ref.parseGeographies;
  var _useContext = reactExports.useContext(MapContext), path = _useContext.path;
  var _useState = reactExports.useState({}), _useState2 = _slicedToArray(_useState, 2), output = _useState2[0], setOutput = _useState2[1];
  reactExports.useEffect(function() {
    if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === "undefined")
      return;
    if (!geography)
      return;
    if (isString$1(geography)) {
      fetchGeographies(geography).then(function(geos) {
        if (geos) {
          setOutput({
            geographies: getFeatures(geos, parseGeographies),
            mesh: getMesh(geos)
          });
        }
      });
    } else {
      setOutput({
        geographies: getFeatures(geography, parseGeographies),
        mesh: getMesh(geography)
      });
    }
  }, [geography, parseGeographies]);
  var _useMemo = reactExports.useMemo(function() {
    var mesh2 = output.mesh || {};
    var preparedMesh = prepareMesh(mesh2.outline, mesh2.borders, path);
    return {
      geographies: prepareFeatures(output.geographies, path),
      outline: preparedMesh.outline,
      borders: preparedMesh.borders
    };
  }, [output, path]), geographies = _useMemo.geographies, outline = _useMemo.outline, borders = _useMemo.borders;
  return {
    geographies,
    outline,
    borders
  };
}
var _excluded$8 = ["geography", "children", "parseGeographies", "className"];
var Geographies = reactExports.forwardRef(function(_ref, ref) {
  var geography = _ref.geography, children2 = _ref.children, parseGeographies = _ref.parseGeographies, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className, restProps = _objectWithoutProperties(_ref, _excluded$8);
  var _useContext = reactExports.useContext(MapContext), path = _useContext.path, projection2 = _useContext.projection;
  var _useGeographies = useGeographies({
    geography,
    parseGeographies
  }), geographies = _useGeographies.geographies, outline = _useGeographies.outline, borders = _useGeographies.borders;
  return /* @__PURE__ */ React.createElement("g", _extends({
    ref,
    className: "rsm-geographies ".concat(className)
  }, restProps), geographies && geographies.length > 0 && children2({
    geographies,
    outline,
    borders,
    path,
    projection: projection2
  }));
});
Geographies.displayName = "Geographies";
Geographies.propTypes = {
  geography: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]),
  children: PropTypes.func,
  parseGeographies: PropTypes.func,
  className: PropTypes.string
};
var _excluded$7 = ["geography", "onMouseEnter", "onMouseLeave", "onMouseDown", "onMouseUp", "onFocus", "onBlur", "style", "className"];
var Geography = reactExports.forwardRef(function(_ref, ref) {
  var geography = _ref.geography, onMouseEnter = _ref.onMouseEnter, onMouseLeave = _ref.onMouseLeave, onMouseDown = _ref.onMouseDown, onMouseUp = _ref.onMouseUp, onFocus = _ref.onFocus, onBlur = _ref.onBlur, _ref$style = _ref.style, style = _ref$style === void 0 ? {} : _ref$style, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className, restProps = _objectWithoutProperties(_ref, _excluded$7);
  var _useState = reactExports.useState(false), _useState2 = _slicedToArray(_useState, 2), isPressed = _useState2[0], setPressed = _useState2[1];
  var _useState3 = reactExports.useState(false), _useState4 = _slicedToArray(_useState3, 2), isFocused = _useState4[0], setFocus = _useState4[1];
  function handleMouseEnter(evt) {
    setFocus(true);
    if (onMouseEnter)
      onMouseEnter(evt);
  }
  function handleMouseLeave(evt) {
    setFocus(false);
    if (isPressed)
      setPressed(false);
    if (onMouseLeave)
      onMouseLeave(evt);
  }
  function handleFocus(evt) {
    setFocus(true);
    if (onFocus)
      onFocus(evt);
  }
  function handleBlur(evt) {
    setFocus(false);
    if (isPressed)
      setPressed(false);
    if (onBlur)
      onBlur(evt);
  }
  function handleMouseDown(evt) {
    setPressed(true);
    if (onMouseDown)
      onMouseDown(evt);
  }
  function handleMouseUp(evt) {
    setPressed(false);
    if (onMouseUp)
      onMouseUp(evt);
  }
  return /* @__PURE__ */ React.createElement("path", _extends({
    ref,
    tabIndex: "0",
    className: "rsm-geography ".concat(className),
    d: geography.svgPath,
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    onFocus: handleFocus,
    onBlur: handleBlur,
    onMouseDown: handleMouseDown,
    onMouseUp: handleMouseUp,
    style: style[isPressed || isFocused ? isPressed ? "pressed" : "hover" : "default"]
  }, restProps));
});
Geography.displayName = "Geography";
Geography.propTypes = {
  geography: PropTypes.object,
  onMouseEnter: PropTypes.func,
  onMouseLeave: PropTypes.func,
  onMouseDown: PropTypes.func,
  onMouseUp: PropTypes.func,
  onFocus: PropTypes.func,
  onBlur: PropTypes.func,
  style: PropTypes.object,
  className: PropTypes.string
};
var Geography$1 = reactExports.memo(Geography);
var _excluded$6 = ["fill", "stroke", "step", "className"];
var Graticule = reactExports.forwardRef(function(_ref, ref) {
  var _ref$fill = _ref.fill, fill = _ref$fill === void 0 ? "transparent" : _ref$fill, _ref$stroke = _ref.stroke, stroke = _ref$stroke === void 0 ? "currentcolor" : _ref$stroke, _ref$step = _ref.step, step = _ref$step === void 0 ? [10, 10] : _ref$step, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className, restProps = _objectWithoutProperties(_ref, _excluded$6);
  var _useContext = reactExports.useContext(MapContext), path = _useContext.path;
  return /* @__PURE__ */ React.createElement("path", _extends({
    ref,
    d: path(graticule().step(step)()),
    fill,
    stroke,
    className: "rsm-graticule ".concat(className)
  }, restProps));
});
Graticule.displayName = "Graticule";
Graticule.propTypes = {
  fill: PropTypes.string,
  stroke: PropTypes.string,
  step: PropTypes.array,
  className: PropTypes.string
};
var Graticule$1 = reactExports.memo(Graticule);
var _excluded$5 = ["value"];
var ZoomPanContext = reactExports.createContext();
var defaultValue = {
  x: 0,
  y: 0,
  k: 1,
  transformString: "translate(0 0) scale(1)"
};
var ZoomPanProvider = function ZoomPanProvider2(_ref) {
  var _ref$value = _ref.value, value = _ref$value === void 0 ? defaultValue : _ref$value, restProps = _objectWithoutProperties(_ref, _excluded$5);
  return /* @__PURE__ */ React.createElement(ZoomPanContext.Provider, _extends({
    value
  }, restProps));
};
ZoomPanProvider.propTypes = {
  x: PropTypes.number,
  y: PropTypes.number,
  k: PropTypes.number,
  transformString: PropTypes.string
};
function useZoomPan(_ref) {
  var center = _ref.center, filterZoomEvent = _ref.filterZoomEvent, onMoveStart = _ref.onMoveStart, onMoveEnd = _ref.onMoveEnd, onMove = _ref.onMove, _ref$translateExtent = _ref.translateExtent, translateExtent = _ref$translateExtent === void 0 ? [[-Infinity, -Infinity], [Infinity, Infinity]] : _ref$translateExtent, _ref$scaleExtent = _ref.scaleExtent, scaleExtent = _ref$scaleExtent === void 0 ? [1, 8] : _ref$scaleExtent, _ref$zoom = _ref.zoom, zoom$1 = _ref$zoom === void 0 ? 1 : _ref$zoom;
  var _useContext = reactExports.useContext(MapContext), width = _useContext.width, height = _useContext.height, projection2 = _useContext.projection;
  var _center = _slicedToArray(center, 2), lon = _center[0], lat = _center[1];
  var _useState = reactExports.useState({
    x: 0,
    y: 0,
    k: 1
  }), _useState2 = _slicedToArray(_useState, 2), position = _useState2[0], setPosition = _useState2[1];
  var lastPosition = reactExports.useRef({
    x: 0,
    y: 0,
    k: 1
  });
  var mapRef = reactExports.useRef();
  var zoomRef = reactExports.useRef();
  var bypassEvents = reactExports.useRef(false);
  var _translateExtent = _slicedToArray(translateExtent, 2), a2 = _translateExtent[0], b2 = _translateExtent[1];
  var _a = _slicedToArray(a2, 2), a1 = _a[0], a22 = _a[1];
  var _b = _slicedToArray(b2, 2), b1 = _b[0], b22 = _b[1];
  var _scaleExtent = _slicedToArray(scaleExtent, 2), minZoom = _scaleExtent[0], maxZoom = _scaleExtent[1];
  reactExports.useEffect(function() {
    var svg = select(mapRef.current);
    function handleZoomStart(d3Event) {
      if (!onMoveStart || bypassEvents.current)
        return;
      onMoveStart({
        coordinates: projection2.invert(getCoords(width, height, d3Event.transform)),
        zoom: d3Event.transform.k
      }, d3Event);
    }
    function handleZoom(d3Event) {
      if (bypassEvents.current)
        return;
      var transform2 = d3Event.transform, sourceEvent2 = d3Event.sourceEvent;
      setPosition({
        x: transform2.x,
        y: transform2.y,
        k: transform2.k,
        dragging: sourceEvent2
      });
      if (!onMove)
        return;
      onMove({
        x: transform2.x,
        y: transform2.y,
        zoom: transform2.k,
        dragging: sourceEvent2
      }, d3Event);
    }
    function handleZoomEnd(d3Event) {
      if (bypassEvents.current) {
        bypassEvents.current = false;
        return;
      }
      var _projection$invert = projection2.invert(getCoords(width, height, d3Event.transform)), _projection$invert2 = _slicedToArray(_projection$invert, 2), x2 = _projection$invert2[0], y2 = _projection$invert2[1];
      lastPosition.current = {
        x: x2,
        y: y2,
        k: d3Event.transform.k
      };
      if (!onMoveEnd)
        return;
      onMoveEnd({
        coordinates: [x2, y2],
        zoom: d3Event.transform.k
      }, d3Event);
    }
    function filterFunc(d3Event) {
      if (filterZoomEvent) {
        return filterZoomEvent(d3Event);
      }
      return d3Event ? !d3Event.ctrlKey && !d3Event.button : false;
    }
    var zoom$12 = zoom().filter(filterFunc).scaleExtent([minZoom, maxZoom]).translateExtent([[a1, a22], [b1, b22]]).on("start", handleZoomStart).on("zoom", handleZoom).on("end", handleZoomEnd);
    zoomRef.current = zoom$12;
    svg.call(zoom$12);
  }, [width, height, a1, a22, b1, b22, minZoom, maxZoom, projection2, onMoveStart, onMove, onMoveEnd, filterZoomEvent]);
  reactExports.useEffect(function() {
    if (lon === lastPosition.current.x && lat === lastPosition.current.y && zoom$1 === lastPosition.current.k)
      return;
    var coords = projection2([lon, lat]);
    var x2 = coords[0] * zoom$1;
    var y2 = coords[1] * zoom$1;
    var svg = select(mapRef.current);
    bypassEvents.current = true;
    svg.call(zoomRef.current.transform, identity3.translate(width / 2 - x2, height / 2 - y2).scale(zoom$1));
    setPosition({
      x: width / 2 - x2,
      y: height / 2 - y2,
      k: zoom$1
    });
    lastPosition.current = {
      x: lon,
      y: lat,
      k: zoom$1
    };
  }, [lon, lat, zoom$1, width, height, projection2]);
  return {
    mapRef,
    position,
    transformString: "translate(".concat(position.x, " ").concat(position.y, ") scale(").concat(position.k, ")")
  };
}
var _excluded$4 = ["center", "zoom", "minZoom", "maxZoom", "translateExtent", "filterZoomEvent", "onMoveStart", "onMove", "onMoveEnd", "className"];
var ZoomableGroup = reactExports.forwardRef(function(_ref, ref) {
  var _ref$center = _ref.center, center = _ref$center === void 0 ? [0, 0] : _ref$center, _ref$zoom = _ref.zoom, zoom2 = _ref$zoom === void 0 ? 1 : _ref$zoom, _ref$minZoom = _ref.minZoom, minZoom = _ref$minZoom === void 0 ? 1 : _ref$minZoom, _ref$maxZoom = _ref.maxZoom, maxZoom = _ref$maxZoom === void 0 ? 8 : _ref$maxZoom, translateExtent = _ref.translateExtent, filterZoomEvent = _ref.filterZoomEvent, onMoveStart = _ref.onMoveStart, onMove = _ref.onMove, onMoveEnd = _ref.onMoveEnd, className = _ref.className, restProps = _objectWithoutProperties(_ref, _excluded$4);
  var _useContext = reactExports.useContext(MapContext), width = _useContext.width, height = _useContext.height;
  var _useZoomPan = useZoomPan({
    center,
    filterZoomEvent,
    onMoveStart,
    onMove,
    onMoveEnd,
    scaleExtent: [minZoom, maxZoom],
    translateExtent,
    zoom: zoom2
  }), mapRef = _useZoomPan.mapRef, transformString = _useZoomPan.transformString, position = _useZoomPan.position;
  return /* @__PURE__ */ React.createElement(ZoomPanProvider, {
    value: {
      x: position.x,
      y: position.y,
      k: position.k,
      transformString
    }
  }, /* @__PURE__ */ React.createElement("g", {
    ref: mapRef
  }, /* @__PURE__ */ React.createElement("rect", {
    width,
    height,
    fill: "transparent"
  }), /* @__PURE__ */ React.createElement("g", _extends({
    ref,
    transform: transformString,
    className: "rsm-zoomable-group ".concat(className)
  }, restProps))));
});
ZoomableGroup.displayName = "ZoomableGroup";
ZoomableGroup.propTypes = {
  center: PropTypes.array,
  zoom: PropTypes.number,
  minZoom: PropTypes.number,
  maxZoom: PropTypes.number,
  translateExtent: PropTypes.arrayOf(PropTypes.array),
  onMoveStart: PropTypes.func,
  onMove: PropTypes.func,
  onMoveEnd: PropTypes.func,
  className: PropTypes.string
};
var _excluded$3 = ["id", "fill", "stroke", "strokeWidth", "className"];
var Sphere = reactExports.forwardRef(function(_ref, ref) {
  var _ref$id = _ref.id, id2 = _ref$id === void 0 ? "rsm-sphere" : _ref$id, _ref$fill = _ref.fill, fill = _ref$fill === void 0 ? "transparent" : _ref$fill, _ref$stroke = _ref.stroke, stroke = _ref$stroke === void 0 ? "currentcolor" : _ref$stroke, _ref$strokeWidth = _ref.strokeWidth, strokeWidth = _ref$strokeWidth === void 0 ? 0.5 : _ref$strokeWidth, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className, restProps = _objectWithoutProperties(_ref, _excluded$3);
  var _useContext = reactExports.useContext(MapContext), path = _useContext.path;
  var spherePath = reactExports.useMemo(function() {
    return path({
      type: "Sphere"
    });
  }, [path]);
  return /* @__PURE__ */ React.createElement(reactExports.Fragment, null, /* @__PURE__ */ React.createElement("defs", null, /* @__PURE__ */ React.createElement("clipPath", {
    id: id2
  }, /* @__PURE__ */ React.createElement("path", {
    d: spherePath
  }))), /* @__PURE__ */ React.createElement("path", _extends({
    ref,
    d: spherePath,
    fill,
    stroke,
    strokeWidth,
    style: {
      pointerEvents: "none"
    },
    className: "rsm-sphere ".concat(className)
  }, restProps)));
});
Sphere.displayName = "Sphere";
Sphere.propTypes = {
  id: PropTypes.string,
  fill: PropTypes.string,
  stroke: PropTypes.string,
  strokeWidth: PropTypes.number,
  className: PropTypes.string
};
var Sphere$1 = reactExports.memo(Sphere);
var _excluded$2 = ["coordinates", "children", "onMouseEnter", "onMouseLeave", "onMouseDown", "onMouseUp", "onFocus", "onBlur", "style", "className"];
var Marker = reactExports.forwardRef(function(_ref, ref) {
  var coordinates2 = _ref.coordinates, children2 = _ref.children, onMouseEnter = _ref.onMouseEnter, onMouseLeave = _ref.onMouseLeave, onMouseDown = _ref.onMouseDown, onMouseUp = _ref.onMouseUp, onFocus = _ref.onFocus, onBlur = _ref.onBlur, _ref$style = _ref.style, style = _ref$style === void 0 ? {} : _ref$style, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className, restProps = _objectWithoutProperties(_ref, _excluded$2);
  var _useContext = reactExports.useContext(MapContext), projection2 = _useContext.projection;
  var _useState = reactExports.useState(false), _useState2 = _slicedToArray(_useState, 2), isPressed = _useState2[0], setPressed = _useState2[1];
  var _useState3 = reactExports.useState(false), _useState4 = _slicedToArray(_useState3, 2), isFocused = _useState4[0], setFocus = _useState4[1];
  var _projection = projection2(coordinates2), _projection2 = _slicedToArray(_projection, 2), x2 = _projection2[0], y2 = _projection2[1];
  function handleMouseEnter(evt) {
    setFocus(true);
    if (onMouseEnter)
      onMouseEnter(evt);
  }
  function handleMouseLeave(evt) {
    setFocus(false);
    if (isPressed)
      setPressed(false);
    if (onMouseLeave)
      onMouseLeave(evt);
  }
  function handleFocus(evt) {
    setFocus(true);
    if (onFocus)
      onFocus(evt);
  }
  function handleBlur(evt) {
    setFocus(false);
    if (isPressed)
      setPressed(false);
    if (onBlur)
      onBlur(evt);
  }
  function handleMouseDown(evt) {
    setPressed(true);
    if (onMouseDown)
      onMouseDown(evt);
  }
  function handleMouseUp(evt) {
    setPressed(false);
    if (onMouseUp)
      onMouseUp(evt);
  }
  return /* @__PURE__ */ React.createElement("g", _extends({
    ref,
    transform: "translate(".concat(x2, ", ").concat(y2, ")"),
    className: "rsm-marker ".concat(className),
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    onFocus: handleFocus,
    onBlur: handleBlur,
    onMouseDown: handleMouseDown,
    onMouseUp: handleMouseUp,
    style: style[isPressed || isFocused ? isPressed ? "pressed" : "hover" : "default"]
  }, restProps), children2);
});
Marker.displayName = "Marker";
Marker.propTypes = {
  coordinates: PropTypes.array,
  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),
  onMouseEnter: PropTypes.func,
  onMouseLeave: PropTypes.func,
  onMouseDown: PropTypes.func,
  onMouseUp: PropTypes.func,
  onFocus: PropTypes.func,
  onBlur: PropTypes.func,
  style: PropTypes.object,
  className: PropTypes.string
};
var _excluded$1 = ["from", "to", "coordinates", "stroke", "strokeWidth", "fill", "className"];
var Line = reactExports.forwardRef(function(_ref, ref) {
  var _ref$from = _ref.from, from = _ref$from === void 0 ? [0, 0] : _ref$from, _ref$to = _ref.to, to = _ref$to === void 0 ? [0, 0] : _ref$to, coordinates2 = _ref.coordinates, _ref$stroke = _ref.stroke, stroke = _ref$stroke === void 0 ? "currentcolor" : _ref$stroke, _ref$strokeWidth = _ref.strokeWidth, strokeWidth = _ref$strokeWidth === void 0 ? 3 : _ref$strokeWidth, _ref$fill = _ref.fill, fill = _ref$fill === void 0 ? "transparent" : _ref$fill, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className, restProps = _objectWithoutProperties(_ref, _excluded$1);
  var _useContext = reactExports.useContext(MapContext), path = _useContext.path;
  var lineData = {
    type: "LineString",
    coordinates: coordinates2 || [from, to]
  };
  return /* @__PURE__ */ React.createElement("path", _extends({
    ref,
    d: path(lineData),
    className: "rsm-line ".concat(className),
    stroke,
    strokeWidth,
    fill
  }, restProps));
});
Line.displayName = "Line";
Line.propTypes = {
  from: PropTypes.array,
  to: PropTypes.array,
  coordinates: PropTypes.array,
  stroke: PropTypes.string,
  strokeWidth: PropTypes.number,
  fill: PropTypes.string,
  className: PropTypes.string
};
var _excluded = ["subject", "children", "connectorProps", "dx", "dy", "curve", "className"];
var Annotation = reactExports.forwardRef(function(_ref, ref) {
  var subject = _ref.subject, children2 = _ref.children, connectorProps = _ref.connectorProps, _ref$dx = _ref.dx, dx = _ref$dx === void 0 ? 30 : _ref$dx, _ref$dy = _ref.dy, dy = _ref$dy === void 0 ? 30 : _ref$dy, _ref$curve = _ref.curve, curve = _ref$curve === void 0 ? 0 : _ref$curve, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className, restProps = _objectWithoutProperties(_ref, _excluded);
  var _useContext = reactExports.useContext(MapContext), projection2 = _useContext.projection;
  var _projection = projection2(subject), _projection2 = _slicedToArray(_projection, 2), x2 = _projection2[0], y2 = _projection2[1];
  var connectorPath = createConnectorPath(dx, dy, curve);
  return /* @__PURE__ */ React.createElement("g", _extends({
    ref,
    transform: "translate(".concat(x2 + dx, ", ").concat(y2 + dy, ")"),
    className: "rsm-annotation ".concat(className)
  }, restProps), /* @__PURE__ */ React.createElement("path", _extends({
    d: connectorPath,
    fill: "transparent",
    stroke: "#000"
  }, connectorProps)), children2);
});
Annotation.displayName = "Annotation";
Annotation.propTypes = {
  subject: PropTypes.array,
  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),
  dx: PropTypes.number,
  dy: PropTypes.number,
  curve: PropTypes.number,
  connectorProps: PropTypes.object,
  className: PropTypes.string
};
const MarkerDialog = ({ city_code, lng, lat, popScale, population }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Dialog, { modal: false, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(DialogTrigger, { asChild: true, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Marker, { coordinates: [lng, lat], className: "cursor-pointer", children: /* @__PURE__ */ jsxRuntimeExports.jsx("circle", { fill: "#3b82f6", stroke: "#FFF", r: popScale(population) }) }, city_code) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(DialogContent, { className: "sm:max-w-md felx justify-center", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { className: "flex-col text-[12px] leading-9", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { className: "flex", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "svg",
            {
              xmlns: "http://www.w3.org/2000/svg",
              width: "20",
              height: "20",
              viewBox: "0 0 32 32",
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { x: "1", y: "4", width: "30", height: "24", rx: "4", ry: "4", fill: "#fff" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M1.638,5.846H30.362c-.711-1.108-1.947-1.846-3.362-1.846H5c-1.414,0-2.65,.738-3.362,1.846Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M2.03,7.692c-.008,.103-.03,.202-.03,.308v1.539H31v-1.539c0-.105-.022-.204-.03-.308H2.03Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#a62842", d: "M2 11.385H31V13.231H2z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#a62842", d: "M2 15.077H31V16.923000000000002H2z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#a62842", d: "M1 18.769H31V20.615H1z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M1,24c0,.105,.023,.204,.031,.308H30.969c.008-.103,.031-.202,.031-.308v-1.539H1v1.539Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M30.362,26.154H1.638c.711,1.108,1.947,1.846,3.362,1.846H27c1.414,0,2.65-.738,3.362-1.846Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M5,4h11v12.923H1V8c0-2.208,1.792-4,4-4Z", fill: "#102d5e" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z", opacity: ".15" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z", fill: "#fff", opacity: ".2" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M4.601 7.463L5.193 7.033 4.462 7.033 4.236 6.338 4.01 7.033 3.279 7.033 3.87 7.463 3.644 8.158 4.236 7.729 4.827 8.158 4.601 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M7.58 7.463L8.172 7.033 7.441 7.033 7.215 6.338 6.989 7.033 6.258 7.033 6.849 7.463 6.623 8.158 7.215 7.729 7.806 8.158 7.58 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M10.56 7.463L11.151 7.033 10.42 7.033 10.194 6.338 9.968 7.033 9.237 7.033 9.828 7.463 9.603 8.158 10.194 7.729 10.785 8.158 10.56 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M6.066 9.283L6.658 8.854 5.927 8.854 5.701 8.158 5.475 8.854 4.744 8.854 5.335 9.283 5.109 9.979 5.701 9.549 6.292 9.979 6.066 9.283z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M9.046 9.283L9.637 8.854 8.906 8.854 8.68 8.158 8.454 8.854 7.723 8.854 8.314 9.283 8.089 9.979 8.68 9.549 9.271 9.979 9.046 9.283z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M12.025 9.283L12.616 8.854 11.885 8.854 11.659 8.158 11.433 8.854 10.702 8.854 11.294 9.283 11.068 9.979 11.659 9.549 12.251 9.979 12.025 9.283z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M6.066 12.924L6.658 12.494 5.927 12.494 5.701 11.799 5.475 12.494 4.744 12.494 5.335 12.924 5.109 13.619 5.701 13.19 6.292 13.619 6.066 12.924z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M9.046 12.924L9.637 12.494 8.906 12.494 8.68 11.799 8.454 12.494 7.723 12.494 8.314 12.924 8.089 13.619 8.68 13.19 9.271 13.619 9.046 12.924z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M12.025 12.924L12.616 12.494 11.885 12.494 11.659 11.799 11.433 12.494 10.702 12.494 11.294 12.924 11.068 13.619 11.659 13.19 12.251 13.619 12.025 12.924z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M13.539 7.463L14.13 7.033 13.399 7.033 13.173 6.338 12.947 7.033 12.216 7.033 12.808 7.463 12.582 8.158 13.173 7.729 13.765 8.158 13.539 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M4.601 11.104L5.193 10.674 4.462 10.674 4.236 9.979 4.01 10.674 3.279 10.674 3.87 11.104 3.644 11.799 4.236 11.369 4.827 11.799 4.601 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M7.58 11.104L8.172 10.674 7.441 10.674 7.215 9.979 6.989 10.674 6.258 10.674 6.849 11.104 6.623 11.799 7.215 11.369 7.806 11.799 7.58 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M10.56 11.104L11.151 10.674 10.42 10.674 10.194 9.979 9.968 10.674 9.237 10.674 9.828 11.104 9.603 11.799 10.194 11.369 10.785 11.799 10.56 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M13.539 11.104L14.13 10.674 13.399 10.674 13.173 9.979 12.947 10.674 12.216 10.674 12.808 11.104 12.582 11.799 13.173 11.369 13.765 11.799 13.539 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M4.601 14.744L5.193 14.315 4.462 14.315 4.236 13.619 4.01 14.315 3.279 14.315 3.87 14.744 3.644 15.44 4.236 15.01 4.827 15.44 4.601 14.744z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M7.58 14.744L8.172 14.315 7.441 14.315 7.215 13.619 6.989 14.315 6.258 14.315 6.849 14.744 6.623 15.44 7.215 15.01 7.806 15.44 7.58 14.744z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M10.56 14.744L11.151 14.315 10.42 14.315 10.194 13.619 9.968 14.315 9.237 14.315 9.828 14.744 9.603 15.44 10.194 15.01 10.785 15.44 10.56 14.744z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M13.539 14.744L14.13 14.315 13.399 14.315 13.173 13.619 12.947 14.315 12.216 14.315 12.808 14.744 12.582 15.44 13.173 15.01 13.765 15.44 13.539 14.744z" })
              ]
            }
          ),
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "ml-3", children: "/ipv4/345.45.67.87/up/4007/quic-v1/p2p/12D3..JBPc (227ms)" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { className: "flex", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "svg",
            {
              xmlns: "http://www.w3.org/2000/svg",
              width: "20",
              height: "20",
              viewBox: "0 0 32 32",
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { x: "1", y: "4", width: "30", height: "24", rx: "4", ry: "4", fill: "#fff" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M1.638,5.846H30.362c-.711-1.108-1.947-1.846-3.362-1.846H5c-1.414,0-2.65,.738-3.362,1.846Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M2.03,7.692c-.008,.103-.03,.202-.03,.308v1.539H31v-1.539c0-.105-.022-.204-.03-.308H2.03Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#a62842", d: "M2 11.385H31V13.231H2z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#a62842", d: "M2 15.077H31V16.923000000000002H2z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#a62842", d: "M1 18.769H31V20.615H1z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M1,24c0,.105,.023,.204,.031,.308H30.969c.008-.103,.031-.202,.031-.308v-1.539H1v1.539Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M30.362,26.154H1.638c.711,1.108,1.947,1.846,3.362,1.846H27c1.414,0,2.65-.738,3.362-1.846Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M5,4h11v12.923H1V8c0-2.208,1.792-4,4-4Z", fill: "#102d5e" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z", opacity: ".15" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z", fill: "#fff", opacity: ".2" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M4.601 7.463L5.193 7.033 4.462 7.033 4.236 6.338 4.01 7.033 3.279 7.033 3.87 7.463 3.644 8.158 4.236 7.729 4.827 8.158 4.601 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M7.58 7.463L8.172 7.033 7.441 7.033 7.215 6.338 6.989 7.033 6.258 7.033 6.849 7.463 6.623 8.158 7.215 7.729 7.806 8.158 7.58 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M10.56 7.463L11.151 7.033 10.42 7.033 10.194 6.338 9.968 7.033 9.237 7.033 9.828 7.463 9.603 8.158 10.194 7.729 10.785 8.158 10.56 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M6.066 9.283L6.658 8.854 5.927 8.854 5.701 8.158 5.475 8.854 4.744 8.854 5.335 9.283 5.109 9.979 5.701 9.549 6.292 9.979 6.066 9.283z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M9.046 9.283L9.637 8.854 8.906 8.854 8.68 8.158 8.454 8.854 7.723 8.854 8.314 9.283 8.089 9.979 8.68 9.549 9.271 9.979 9.046 9.283z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M12.025 9.283L12.616 8.854 11.885 8.854 11.659 8.158 11.433 8.854 10.702 8.854 11.294 9.283 11.068 9.979 11.659 9.549 12.251 9.979 12.025 9.283z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M6.066 12.924L6.658 12.494 5.927 12.494 5.701 11.799 5.475 12.494 4.744 12.494 5.335 12.924 5.109 13.619 5.701 13.19 6.292 13.619 6.066 12.924z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M9.046 12.924L9.637 12.494 8.906 12.494 8.68 11.799 8.454 12.494 7.723 12.494 8.314 12.924 8.089 13.619 8.68 13.19 9.271 13.619 9.046 12.924z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M12.025 12.924L12.616 12.494 11.885 12.494 11.659 11.799 11.433 12.494 10.702 12.494 11.294 12.924 11.068 13.619 11.659 13.19 12.251 13.619 12.025 12.924z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M13.539 7.463L14.13 7.033 13.399 7.033 13.173 6.338 12.947 7.033 12.216 7.033 12.808 7.463 12.582 8.158 13.173 7.729 13.765 8.158 13.539 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M4.601 11.104L5.193 10.674 4.462 10.674 4.236 9.979 4.01 10.674 3.279 10.674 3.87 11.104 3.644 11.799 4.236 11.369 4.827 11.799 4.601 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M7.58 11.104L8.172 10.674 7.441 10.674 7.215 9.979 6.989 10.674 6.258 10.674 6.849 11.104 6.623 11.799 7.215 11.369 7.806 11.799 7.58 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M10.56 11.104L11.151 10.674 10.42 10.674 10.194 9.979 9.968 10.674 9.237 10.674 9.828 11.104 9.603 11.799 10.194 11.369 10.785 11.799 10.56 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M13.539 11.104L14.13 10.674 13.399 10.674 13.173 9.979 12.947 10.674 12.216 10.674 12.808 11.104 12.582 11.799 13.173 11.369 13.765 11.799 13.539 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M4.601 14.744L5.193 14.315 4.462 14.315 4.236 13.619 4.01 14.315 3.279 14.315 3.87 14.744 3.644 15.44 4.236 15.01 4.827 15.44 4.601 14.744z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M7.58 14.744L8.172 14.315 7.441 14.315 7.215 13.619 6.989 14.315 6.258 14.315 6.849 14.744 6.623 15.44 7.215 15.01 7.806 15.44 7.58 14.744z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M10.56 14.744L11.151 14.315 10.42 14.315 10.194 13.619 9.968 14.315 9.237 14.315 9.828 14.744 9.603 15.44 10.194 15.01 10.785 15.44 10.56 14.744z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M13.539 14.744L14.13 14.315 13.399 14.315 13.173 13.619 12.947 14.315 12.216 14.315 12.808 14.744 12.582 15.44 13.173 15.01 13.765 15.44 13.539 14.744z" })
              ]
            }
          ),
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "ml-3", children: "/ipv4/345.45.67.87/up/4007/quic-v1/p2p/12D3..JBPc (227ms)" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { className: "flex", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "svg",
            {
              xmlns: "http://www.w3.org/2000/svg",
              width: "20",
              height: "20",
              viewBox: "0 0 32 32",
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { x: "1", y: "4", width: "30", height: "24", rx: "4", ry: "4", fill: "#fff" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M1.638,5.846H30.362c-.711-1.108-1.947-1.846-3.362-1.846H5c-1.414,0-2.65,.738-3.362,1.846Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M2.03,7.692c-.008,.103-.03,.202-.03,.308v1.539H31v-1.539c0-.105-.022-.204-.03-.308H2.03Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#a62842", d: "M2 11.385H31V13.231H2z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#a62842", d: "M2 15.077H31V16.923000000000002H2z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#a62842", d: "M1 18.769H31V20.615H1z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M1,24c0,.105,.023,.204,.031,.308H30.969c.008-.103,.031-.202,.031-.308v-1.539H1v1.539Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M30.362,26.154H1.638c.711,1.108,1.947,1.846,3.362,1.846H27c1.414,0,2.65-.738,3.362-1.846Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M5,4h11v12.923H1V8c0-2.208,1.792-4,4-4Z", fill: "#102d5e" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z", opacity: ".15" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z", fill: "#fff", opacity: ".2" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M4.601 7.463L5.193 7.033 4.462 7.033 4.236 6.338 4.01 7.033 3.279 7.033 3.87 7.463 3.644 8.158 4.236 7.729 4.827 8.158 4.601 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M7.58 7.463L8.172 7.033 7.441 7.033 7.215 6.338 6.989 7.033 6.258 7.033 6.849 7.463 6.623 8.158 7.215 7.729 7.806 8.158 7.58 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M10.56 7.463L11.151 7.033 10.42 7.033 10.194 6.338 9.968 7.033 9.237 7.033 9.828 7.463 9.603 8.158 10.194 7.729 10.785 8.158 10.56 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M6.066 9.283L6.658 8.854 5.927 8.854 5.701 8.158 5.475 8.854 4.744 8.854 5.335 9.283 5.109 9.979 5.701 9.549 6.292 9.979 6.066 9.283z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M9.046 9.283L9.637 8.854 8.906 8.854 8.68 8.158 8.454 8.854 7.723 8.854 8.314 9.283 8.089 9.979 8.68 9.549 9.271 9.979 9.046 9.283z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M12.025 9.283L12.616 8.854 11.885 8.854 11.659 8.158 11.433 8.854 10.702 8.854 11.294 9.283 11.068 9.979 11.659 9.549 12.251 9.979 12.025 9.283z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M6.066 12.924L6.658 12.494 5.927 12.494 5.701 11.799 5.475 12.494 4.744 12.494 5.335 12.924 5.109 13.619 5.701 13.19 6.292 13.619 6.066 12.924z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M9.046 12.924L9.637 12.494 8.906 12.494 8.68 11.799 8.454 12.494 7.723 12.494 8.314 12.924 8.089 13.619 8.68 13.19 9.271 13.619 9.046 12.924z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M12.025 12.924L12.616 12.494 11.885 12.494 11.659 11.799 11.433 12.494 10.702 12.494 11.294 12.924 11.068 13.619 11.659 13.19 12.251 13.619 12.025 12.924z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M13.539 7.463L14.13 7.033 13.399 7.033 13.173 6.338 12.947 7.033 12.216 7.033 12.808 7.463 12.582 8.158 13.173 7.729 13.765 8.158 13.539 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M4.601 11.104L5.193 10.674 4.462 10.674 4.236 9.979 4.01 10.674 3.279 10.674 3.87 11.104 3.644 11.799 4.236 11.369 4.827 11.799 4.601 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M7.58 11.104L8.172 10.674 7.441 10.674 7.215 9.979 6.989 10.674 6.258 10.674 6.849 11.104 6.623 11.799 7.215 11.369 7.806 11.799 7.58 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M10.56 11.104L11.151 10.674 10.42 10.674 10.194 9.979 9.968 10.674 9.237 10.674 9.828 11.104 9.603 11.799 10.194 11.369 10.785 11.799 10.56 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M13.539 11.104L14.13 10.674 13.399 10.674 13.173 9.979 12.947 10.674 12.216 10.674 12.808 11.104 12.582 11.799 13.173 11.369 13.765 11.799 13.539 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M4.601 14.744L5.193 14.315 4.462 14.315 4.236 13.619 4.01 14.315 3.279 14.315 3.87 14.744 3.644 15.44 4.236 15.01 4.827 15.44 4.601 14.744z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M7.58 14.744L8.172 14.315 7.441 14.315 7.215 13.619 6.989 14.315 6.258 14.315 6.849 14.744 6.623 15.44 7.215 15.01 7.806 15.44 7.58 14.744z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M10.56 14.744L11.151 14.315 10.42 14.315 10.194 13.619 9.968 14.315 9.237 14.315 9.828 14.744 9.603 15.44 10.194 15.01 10.785 15.44 10.56 14.744z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M13.539 14.744L14.13 14.315 13.399 14.315 13.173 13.619 12.947 14.315 12.216 14.315 12.808 14.744 12.582 15.44 13.173 15.01 13.765 15.44 13.539 14.744z" })
              ]
            }
          ),
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "ml-3", children: "/ipv4/345.45.67.87/up/4007/quic-v1/p2p/12D3..JBPc (227ms)" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { className: "flex", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "svg",
            {
              xmlns: "http://www.w3.org/2000/svg",
              width: "20",
              height: "20",
              viewBox: "0 0 32 32",
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { x: "1", y: "4", width: "30", height: "24", rx: "4", ry: "4", fill: "#fff" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M1.638,5.846H30.362c-.711-1.108-1.947-1.846-3.362-1.846H5c-1.414,0-2.65,.738-3.362,1.846Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M2.03,7.692c-.008,.103-.03,.202-.03,.308v1.539H31v-1.539c0-.105-.022-.204-.03-.308H2.03Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#a62842", d: "M2 11.385H31V13.231H2z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#a62842", d: "M2 15.077H31V16.923000000000002H2z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#a62842", d: "M1 18.769H31V20.615H1z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M1,24c0,.105,.023,.204,.031,.308H30.969c.008-.103,.031-.202,.031-.308v-1.539H1v1.539Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M30.362,26.154H1.638c.711,1.108,1.947,1.846,3.362,1.846H27c1.414,0,2.65-.738,3.362-1.846Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M5,4h11v12.923H1V8c0-2.208,1.792-4,4-4Z", fill: "#102d5e" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z", opacity: ".15" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z", fill: "#fff", opacity: ".2" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M4.601 7.463L5.193 7.033 4.462 7.033 4.236 6.338 4.01 7.033 3.279 7.033 3.87 7.463 3.644 8.158 4.236 7.729 4.827 8.158 4.601 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M7.58 7.463L8.172 7.033 7.441 7.033 7.215 6.338 6.989 7.033 6.258 7.033 6.849 7.463 6.623 8.158 7.215 7.729 7.806 8.158 7.58 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M10.56 7.463L11.151 7.033 10.42 7.033 10.194 6.338 9.968 7.033 9.237 7.033 9.828 7.463 9.603 8.158 10.194 7.729 10.785 8.158 10.56 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M6.066 9.283L6.658 8.854 5.927 8.854 5.701 8.158 5.475 8.854 4.744 8.854 5.335 9.283 5.109 9.979 5.701 9.549 6.292 9.979 6.066 9.283z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M9.046 9.283L9.637 8.854 8.906 8.854 8.68 8.158 8.454 8.854 7.723 8.854 8.314 9.283 8.089 9.979 8.68 9.549 9.271 9.979 9.046 9.283z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M12.025 9.283L12.616 8.854 11.885 8.854 11.659 8.158 11.433 8.854 10.702 8.854 11.294 9.283 11.068 9.979 11.659 9.549 12.251 9.979 12.025 9.283z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M6.066 12.924L6.658 12.494 5.927 12.494 5.701 11.799 5.475 12.494 4.744 12.494 5.335 12.924 5.109 13.619 5.701 13.19 6.292 13.619 6.066 12.924z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M9.046 12.924L9.637 12.494 8.906 12.494 8.68 11.799 8.454 12.494 7.723 12.494 8.314 12.924 8.089 13.619 8.68 13.19 9.271 13.619 9.046 12.924z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M12.025 12.924L12.616 12.494 11.885 12.494 11.659 11.799 11.433 12.494 10.702 12.494 11.294 12.924 11.068 13.619 11.659 13.19 12.251 13.619 12.025 12.924z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M13.539 7.463L14.13 7.033 13.399 7.033 13.173 6.338 12.947 7.033 12.216 7.033 12.808 7.463 12.582 8.158 13.173 7.729 13.765 8.158 13.539 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M4.601 11.104L5.193 10.674 4.462 10.674 4.236 9.979 4.01 10.674 3.279 10.674 3.87 11.104 3.644 11.799 4.236 11.369 4.827 11.799 4.601 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M7.58 11.104L8.172 10.674 7.441 10.674 7.215 9.979 6.989 10.674 6.258 10.674 6.849 11.104 6.623 11.799 7.215 11.369 7.806 11.799 7.58 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M10.56 11.104L11.151 10.674 10.42 10.674 10.194 9.979 9.968 10.674 9.237 10.674 9.828 11.104 9.603 11.799 10.194 11.369 10.785 11.799 10.56 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M13.539 11.104L14.13 10.674 13.399 10.674 13.173 9.979 12.947 10.674 12.216 10.674 12.808 11.104 12.582 11.799 13.173 11.369 13.765 11.799 13.539 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M4.601 14.744L5.193 14.315 4.462 14.315 4.236 13.619 4.01 14.315 3.279 14.315 3.87 14.744 3.644 15.44 4.236 15.01 4.827 15.44 4.601 14.744z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M7.58 14.744L8.172 14.315 7.441 14.315 7.215 13.619 6.989 14.315 6.258 14.315 6.849 14.744 6.623 15.44 7.215 15.01 7.806 15.44 7.58 14.744z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M10.56 14.744L11.151 14.315 10.42 14.315 10.194 13.619 9.968 14.315 9.237 14.315 9.828 14.744 9.603 15.44 10.194 15.01 10.785 15.44 10.56 14.744z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M13.539 14.744L14.13 14.315 13.399 14.315 13.173 13.619 12.947 14.315 12.216 14.315 12.808 14.744 12.582 15.44 13.173 15.01 13.765 15.44 13.539 14.744z" })
              ]
            }
          ),
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "ml-3", children: "/ipv4/345.45.67.87/up/4007/quic-v1/p2p/12D3..JBPc (227ms)" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { className: "flex", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "svg",
            {
              xmlns: "http://www.w3.org/2000/svg",
              width: "20",
              height: "20",
              viewBox: "0 0 32 32",
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("rect", { x: "1", y: "4", width: "30", height: "24", rx: "4", ry: "4", fill: "#fff" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M1.638,5.846H30.362c-.711-1.108-1.947-1.846-3.362-1.846H5c-1.414,0-2.65,.738-3.362,1.846Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M2.03,7.692c-.008,.103-.03,.202-.03,.308v1.539H31v-1.539c0-.105-.022-.204-.03-.308H2.03Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#a62842", d: "M2 11.385H31V13.231H2z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#a62842", d: "M2 15.077H31V16.923000000000002H2z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#a62842", d: "M1 18.769H31V20.615H1z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M1,24c0,.105,.023,.204,.031,.308H30.969c.008-.103,.031-.202,.031-.308v-1.539H1v1.539Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M30.362,26.154H1.638c.711,1.108,1.947,1.846,3.362,1.846H27c1.414,0,2.65-.738,3.362-1.846Z", fill: "#a62842" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M5,4h11v12.923H1V8c0-2.208,1.792-4,4-4Z", fill: "#102d5e" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z", opacity: ".15" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z", fill: "#fff", opacity: ".2" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M4.601 7.463L5.193 7.033 4.462 7.033 4.236 6.338 4.01 7.033 3.279 7.033 3.87 7.463 3.644 8.158 4.236 7.729 4.827 8.158 4.601 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M7.58 7.463L8.172 7.033 7.441 7.033 7.215 6.338 6.989 7.033 6.258 7.033 6.849 7.463 6.623 8.158 7.215 7.729 7.806 8.158 7.58 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M10.56 7.463L11.151 7.033 10.42 7.033 10.194 6.338 9.968 7.033 9.237 7.033 9.828 7.463 9.603 8.158 10.194 7.729 10.785 8.158 10.56 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M6.066 9.283L6.658 8.854 5.927 8.854 5.701 8.158 5.475 8.854 4.744 8.854 5.335 9.283 5.109 9.979 5.701 9.549 6.292 9.979 6.066 9.283z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M9.046 9.283L9.637 8.854 8.906 8.854 8.68 8.158 8.454 8.854 7.723 8.854 8.314 9.283 8.089 9.979 8.68 9.549 9.271 9.979 9.046 9.283z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M12.025 9.283L12.616 8.854 11.885 8.854 11.659 8.158 11.433 8.854 10.702 8.854 11.294 9.283 11.068 9.979 11.659 9.549 12.251 9.979 12.025 9.283z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M6.066 12.924L6.658 12.494 5.927 12.494 5.701 11.799 5.475 12.494 4.744 12.494 5.335 12.924 5.109 13.619 5.701 13.19 6.292 13.619 6.066 12.924z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M9.046 12.924L9.637 12.494 8.906 12.494 8.68 11.799 8.454 12.494 7.723 12.494 8.314 12.924 8.089 13.619 8.68 13.19 9.271 13.619 9.046 12.924z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M12.025 12.924L12.616 12.494 11.885 12.494 11.659 11.799 11.433 12.494 10.702 12.494 11.294 12.924 11.068 13.619 11.659 13.19 12.251 13.619 12.025 12.924z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M13.539 7.463L14.13 7.033 13.399 7.033 13.173 6.338 12.947 7.033 12.216 7.033 12.808 7.463 12.582 8.158 13.173 7.729 13.765 8.158 13.539 7.463z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M4.601 11.104L5.193 10.674 4.462 10.674 4.236 9.979 4.01 10.674 3.279 10.674 3.87 11.104 3.644 11.799 4.236 11.369 4.827 11.799 4.601 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M7.58 11.104L8.172 10.674 7.441 10.674 7.215 9.979 6.989 10.674 6.258 10.674 6.849 11.104 6.623 11.799 7.215 11.369 7.806 11.799 7.58 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M10.56 11.104L11.151 10.674 10.42 10.674 10.194 9.979 9.968 10.674 9.237 10.674 9.828 11.104 9.603 11.799 10.194 11.369 10.785 11.799 10.56 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M13.539 11.104L14.13 10.674 13.399 10.674 13.173 9.979 12.947 10.674 12.216 10.674 12.808 11.104 12.582 11.799 13.173 11.369 13.765 11.799 13.539 11.104z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M4.601 14.744L5.193 14.315 4.462 14.315 4.236 13.619 4.01 14.315 3.279 14.315 3.87 14.744 3.644 15.44 4.236 15.01 4.827 15.44 4.601 14.744z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M7.58 14.744L8.172 14.315 7.441 14.315 7.215 13.619 6.989 14.315 6.258 14.315 6.849 14.744 6.623 15.44 7.215 15.01 7.806 15.44 7.58 14.744z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M10.56 14.744L11.151 14.315 10.42 14.315 10.194 13.619 9.968 14.315 9.237 14.315 9.828 14.744 9.603 15.44 10.194 15.01 10.785 15.44 10.56 14.744z" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fill: "#fff", d: "M13.539 14.744L14.13 14.315 13.399 14.315 13.173 13.619 12.947 14.315 12.216 14.315 12.808 14.744 12.582 15.44 13.173 15.01 13.765 15.44 13.539 14.744z" })
              ]
            }
          ),
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "ml-3", children: "/ipv4/345.45.67.87/up/4007/quic-v1/p2p/12D3..JBPc (227ms)" })
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(DialogFooter, { className: "flex justify-between", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { className: "bg-transparent border-none text-gray-800", children: "+ 8 more peers" }) })
    ] })
  ] });
};
const type = "Topology";
const objects = {
  world: {
    type: "GeometryCollection",
    geometries: [
      {
        type: "Polygon",
        arcs: [
          [
            0,
            1,
            2,
            3,
            4,
            5
          ]
        ],
        id: "AFG",
        properties: {
          name: "Afghanistan"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              6,
              7,
              8,
              9
            ]
          ],
          [
            [
              10,
              11,
              12
            ]
          ]
        ],
        id: "AGO",
        properties: {
          name: "Angola"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            13,
            14,
            15,
            16,
            17
          ]
        ],
        id: "ALB",
        properties: {
          name: "Albania"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            18,
            19,
            20,
            21,
            22
          ]
        ],
        id: "ARE",
        properties: {
          name: "United Arab Emirates"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              23,
              24
            ]
          ],
          [
            [
              25,
              26,
              27,
              28,
              29,
              30
            ]
          ]
        ],
        id: "ARG",
        properties: {
          name: "Argentina"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            31,
            32,
            33,
            34,
            35
          ]
        ],
        id: "ARM",
        properties: {
          name: "Armenia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            36
          ]
        ],
        id: "ATF",
        properties: {
          name: "French Southern Territories"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              37
            ]
          ],
          [
            [
              38
            ]
          ]
        ],
        id: "AUS",
        properties: {
          name: "Australia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49
          ]
        ],
        id: "AUT",
        properties: {
          name: "Austria"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              50,
              -35
            ]
          ],
          [
            [
              51,
              52,
              -33,
              53,
              54
            ]
          ]
        ],
        id: "AZE",
        properties: {
          name: "Azerbaijan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            55,
            56,
            57,
            58
          ]
        ],
        id: "BDI",
        properties: {
          name: "Burundi"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            59,
            60,
            61,
            62,
            63
          ]
        ],
        id: "BEL",
        properties: {
          name: "Belgium"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            64,
            65,
            66,
            67,
            68
          ]
        ],
        id: "BEN",
        properties: {
          name: "Benin"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            69,
            70,
            71,
            -67,
            72,
            73
          ]
        ],
        id: "BFA",
        properties: {
          name: "Burkina Faso"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            74,
            75,
            76
          ]
        ],
        id: "BGD",
        properties: {
          name: "Bangladesh"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            77,
            78,
            79,
            80,
            81,
            82
          ]
        ],
        id: "BGR",
        properties: {
          name: "Bulgaria"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              83
            ]
          ],
          [
            [
              84
            ]
          ],
          [
            [
              85
            ]
          ]
        ],
        id: "BHS",
        properties: {
          name: "Bahamas"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            86,
            87,
            88,
            89
          ]
        ],
        id: "BIH",
        properties: {
          name: "Bosnia and Herzegovina"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97
          ]
        ],
        id: "BLR",
        properties: {
          name: "Belarus"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            98,
            99,
            100
          ]
        ],
        id: "BLZ",
        properties: {
          name: "Belize"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            101,
            102,
            103,
            104,
            -31
          ]
        ],
        id: "BOL",
        properties: {
          name: "Bolivia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -27,
            105,
            -104,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113
          ]
        ],
        id: "BRA",
        properties: {
          name: "Brazil"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            114,
            115
          ]
        ],
        id: "BRN",
        properties: {
          name: "Brunei"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            116,
            117
          ]
        ],
        id: "BTN",
        properties: {
          name: "Bhutan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            118,
            119,
            120,
            121
          ]
        ],
        id: "BWA",
        properties: {
          name: "Botswana"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            122,
            123,
            124,
            125,
            126,
            127,
            128
          ]
        ],
        id: "CAF",
        properties: {
          name: "Central African Republic"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              129
            ]
          ],
          [
            [
              130
            ]
          ],
          [
            [
              131
            ]
          ],
          [
            [
              132
            ]
          ],
          [
            [
              133
            ]
          ],
          [
            [
              134
            ]
          ],
          [
            [
              135
            ]
          ],
          [
            [
              136
            ]
          ],
          [
            [
              137
            ]
          ],
          [
            [
              138
            ]
          ],
          [
            [
              139,
              140,
              141,
              142,
              143,
              144
            ]
          ],
          [
            [
              145
            ]
          ],
          [
            [
              146
            ]
          ],
          [
            [
              147
            ]
          ],
          [
            [
              148
            ]
          ],
          [
            [
              149
            ]
          ],
          [
            [
              150
            ]
          ],
          [
            [
              151
            ]
          ],
          [
            [
              152
            ]
          ],
          [
            [
              153
            ]
          ],
          [
            [
              154
            ]
          ],
          [
            [
              155
            ]
          ],
          [
            [
              156
            ]
          ],
          [
            [
              157
            ]
          ],
          [
            [
              158
            ]
          ],
          [
            [
              159
            ]
          ],
          [
            [
              160
            ]
          ],
          [
            [
              161
            ]
          ],
          [
            [
              162
            ]
          ],
          [
            [
              163
            ]
          ]
        ],
        id: "CAN",
        properties: {
          name: "Canada"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -47,
            164,
            165,
            166,
            -43,
            167,
            168,
            169
          ]
        ],
        id: "CHE",
        properties: {
          name: "Switzerland"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              -24,
              170
            ]
          ],
          [
            [
              -30,
              171,
              172,
              -102
            ]
          ]
        ],
        id: "CHL",
        properties: {
          name: "Chile"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              173
            ]
          ],
          [
            [
              174,
              175,
              176,
              177,
              178,
              179,
              180,
              181,
              182,
              183,
              184,
              185,
              186,
              187,
              -118,
              188,
              189,
              190,
              191,
              -4,
              192,
              193,
              194,
              195,
              196,
              197,
              198,
              199,
              200,
              201,
              202
            ]
          ]
        ],
        id: "CHN",
        properties: {
          name: "China"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            203,
            204,
            205,
            206,
            -70,
            207
          ]
        ],
        id: "CIV",
        properties: {
          name: "Cote d'Ivoire"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            208,
            209,
            210,
            211,
            212,
            213,
            214,
            -129,
            215
          ]
        ],
        id: "CMR",
        properties: {
          name: "Cameroon"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            216,
            217,
            218,
            219,
            -56,
            220,
            221,
            222,
            -10,
            223,
            -13,
            224,
            -127,
            225,
            226
          ]
        ],
        id: "COD",
        properties: {
          name: "Democratic Republic of Congo"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -12,
            227,
            228,
            -216,
            -128,
            -225
          ]
        ],
        id: "COG",
        properties: {
          name: "Congo"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            229,
            230,
            231,
            232,
            233,
            -108,
            234
          ]
        ],
        id: "COL",
        properties: {
          name: "Colombia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            235,
            236,
            237,
            238
          ]
        ],
        id: "CRI",
        properties: {
          name: "Costa Rica"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            239
          ]
        ],
        id: "CUB",
        properties: {
          name: "Cuba"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            240
          ]
        ],
        id: "CYP",
        properties: {
          name: "Cyprus"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -49,
            241,
            242,
            243
          ]
        ],
        id: "CZE",
        properties: {
          name: "Czechia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            244,
            245,
            -242,
            -48,
            -170,
            246,
            247,
            -61,
            248,
            249,
            250
          ]
        ],
        id: "DEU",
        properties: {
          name: "Germany"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            251,
            252,
            253,
            254
          ]
        ],
        id: "DJI",
        properties: {
          name: "Djibouti"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              255
            ]
          ],
          [
            [
              -251,
              256
            ]
          ]
        ],
        id: "DNK",
        properties: {
          name: "Denmark"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              257
            ]
          ]
        ],
        id: "GRL",
        properties: {
          name: "Greenland"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            258,
            259
          ]
        ],
        id: "DOM",
        properties: {
          name: "Dominican Republic"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            260,
            261,
            262,
            263,
            264,
            265,
            266,
            267
          ]
        ],
        id: "DZA",
        properties: {
          name: "Algeria"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            268,
            -230,
            269
          ]
        ],
        id: "ECU",
        properties: {
          name: "Ecuador"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            270,
            271,
            272
          ]
        ],
        id: "EGY",
        properties: {
          name: "Egypt"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            273,
            274,
            275,
            276,
            277,
            278,
            279,
            -255
          ]
        ],
        id: "ERI",
        properties: {
          name: "Eritrea"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            280,
            281,
            282,
            283
          ]
        ],
        id: "ESP",
        properties: {
          name: "Spain"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            284,
            285,
            286,
            287
          ]
        ],
        id: "EST",
        properties: {
          name: "Estonia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            288,
            289,
            -274,
            -254,
            290,
            291,
            292,
            293,
            294,
            295,
            296,
            297,
            -277
          ]
        ],
        id: "ETH",
        properties: {
          name: "Ethiopia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            298,
            299,
            300,
            301
          ]
        ],
        id: "FIN",
        properties: {
          name: "Finland"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              302
            ]
          ],
          [
            [
              303
            ]
          ],
          [
            [
              304
            ]
          ]
        ],
        id: "FJI",
        properties: {
          name: "Fiji"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              305
            ]
          ],
          [
            [
              306,
              -247,
              -169,
              307,
              308,
              -282,
              309,
              -63
            ]
          ]
        ],
        id: "FRA",
        properties: {
          name: "France"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            310,
            311,
            312,
            -112
          ]
        ],
        id: "GUF",
        properties: {
          name: "French Guiana"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            313,
            314,
            -209,
            -229
          ]
        ],
        id: "GAB",
        properties: {
          name: "Gabon"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              315,
              316
            ]
          ],
          [
            [
              317
            ]
          ]
        ],
        id: "GBR",
        properties: {
          name: "United Kingdom"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            318,
            319,
            320,
            321,
            322,
            -54,
            -32,
            323
          ]
        ],
        id: "GEO",
        properties: {
          name: "Georgia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            324,
            -208,
            -74,
            325
          ]
        ],
        id: "GHA",
        properties: {
          name: "Ghana"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            326,
            327,
            328,
            329,
            330,
            331,
            -206
          ]
        ],
        id: "GIN",
        properties: {
          name: "Guinea"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            332,
            333
          ]
        ],
        id: "GMB",
        properties: {
          name: "Gambia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            334,
            335,
            -330
          ]
        ],
        id: "GNB",
        properties: {
          name: "Guinea-Bissau"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            336,
            -210,
            -315
          ]
        ],
        id: "GNQ",
        properties: {
          name: "Equatorial Guinea"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              337
            ]
          ],
          [
            [
              338,
              -14,
              339,
              -81,
              340
            ]
          ]
        ],
        id: "GRC",
        properties: {
          name: "Greece"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            341,
            342,
            -101,
            343,
            344,
            345
          ]
        ],
        id: "GTM",
        properties: {
          name: "Guatemala"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            346,
            347,
            -110,
            348
          ]
        ],
        id: "GUY",
        properties: {
          name: "Guyana"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            349,
            350,
            -345,
            351,
            352
          ]
        ],
        id: "HND",
        properties: {
          name: "Honduras"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            353,
            354,
            355,
            -90,
            356,
            357,
            358
          ]
        ],
        id: "HRV",
        properties: {
          name: "Croatia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -260,
            359
          ]
        ],
        id: "HTI",
        properties: {
          name: "Haiti"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -40,
            360,
            361,
            362,
            363,
            364,
            -359,
            365
          ]
        ],
        id: "HUN",
        properties: {
          name: "Hungary"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              366
            ]
          ],
          [
            [
              367,
              368
            ]
          ],
          [
            [
              369
            ]
          ],
          [
            [
              370
            ]
          ],
          [
            [
              371
            ]
          ],
          [
            [
              372
            ]
          ],
          [
            [
              373
            ]
          ],
          [
            [
              374
            ]
          ],
          [
            [
              375,
              376
            ]
          ],
          [
            [
              377
            ]
          ],
          [
            [
              378
            ]
          ],
          [
            [
              379,
              380
            ]
          ],
          [
            [
              381
            ]
          ]
        ],
        id: "IDN",
        properties: {
          name: "Indonesia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -191,
            382,
            -189,
            -117,
            -188,
            383,
            -77,
            384,
            385
          ]
        ],
        id: "IND",
        properties: {
          name: "India"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            386,
            -316
          ]
        ],
        id: "IRL",
        properties: {
          name: "Ireland"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            387,
            -6,
            388,
            389,
            390,
            391,
            392,
            -51,
            -34,
            -53,
            393
          ]
        ],
        id: "IRN",
        properties: {
          name: "Iran"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -391,
            394,
            395,
            396,
            397,
            398,
            399,
            400
          ]
        ],
        id: "IRQ",
        properties: {
          name: "Iraq"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            401
          ]
        ],
        id: "ISL",
        properties: {
          name: "Iceland"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            402,
            403,
            404,
            405,
            406,
            407
          ]
        ],
        id: "ISR",
        properties: {
          name: "Israel"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              408
            ]
          ],
          [
            [
              409
            ]
          ],
          [
            [
              410,
              411,
              -308,
              -168,
              -42
            ]
          ]
        ],
        id: "ITA",
        properties: {
          name: "Italy"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            412
          ]
        ],
        id: "JAM",
        properties: {
          name: "Jamaica"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -403,
            413,
            -398,
            414,
            415,
            -405,
            416
          ]
        ],
        id: "JOR",
        properties: {
          name: "Jordan"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              417
            ]
          ],
          [
            [
              418
            ]
          ],
          [
            [
              419
            ]
          ]
        ],
        id: "JPN",
        properties: {
          name: "Japan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            420,
            421,
            422,
            423,
            424,
            425,
            426,
            427,
            428,
            429,
            430,
            431,
            432,
            -195,
            433
          ]
        ],
        id: "KAZ",
        properties: {
          name: "Kazakhstan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            434,
            435,
            436,
            437,
            -295,
            438
          ]
        ],
        id: "KEN",
        properties: {
          name: "Kenya"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -434,
            -194,
            439,
            440
          ]
        ],
        id: "KGZ",
        properties: {
          name: "Kyrgyzstan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            441,
            442,
            443,
            444
          ]
        ],
        id: "KHM",
        properties: {
          name: "Cambodia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            445,
            446
          ]
        ],
        id: "KOR",
        properties: {
          name: "South Korea"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            447,
            448,
            449,
            450,
            451
          ]
        ],
        id: "XXK",
        properties: {
          name: "Kosovo"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            452,
            453,
            -396
          ]
        ],
        id: "KWT",
        properties: {
          name: "Kuwait"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            454,
            455,
            -186,
            456,
            -443
          ]
        ],
        id: "LAO",
        properties: {
          name: "Laos"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -407,
            457,
            458
          ]
        ],
        id: "LBN",
        properties: {
          name: "Lebanon"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            459,
            460,
            -327,
            -205
          ]
        ],
        id: "LBR",
        properties: {
          name: "Liberia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            461,
            -268,
            462,
            463,
            -272,
            464,
            465
          ]
        ],
        id: "LBY",
        properties: {
          name: "Libya"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            466
          ]
        ],
        id: "LKA",
        properties: {
          name: "Sri Lanka"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            467
          ]
        ],
        id: "LSO",
        properties: {
          name: "Lesotho"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            468,
            469,
            470,
            -91,
            471
          ]
        ],
        id: "LTU",
        properties: {
          name: "Lithuania"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -248,
            -307,
            -62
          ]
        ],
        id: "LUX",
        properties: {
          name: "Luxembourg"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            472,
            -288,
            473,
            -92,
            -471
          ]
        ],
        id: "LVA",
        properties: {
          name: "Latvia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -265,
            474,
            475
          ]
        ],
        id: "MAR",
        properties: {
          name: "Morocco"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            476,
            477
          ]
        ],
        id: "MDA",
        properties: {
          name: "Moldova"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            478
          ]
        ],
        id: "MDG",
        properties: {
          name: "Madagascar"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -99,
            -343,
            479,
            480,
            481
          ]
        ],
        id: "MEX",
        properties: {
          name: "Mexico"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -452,
            482,
            -82,
            -340,
            483
          ]
        ],
        id: "MKD",
        properties: {
          name: "North Macedonia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            484,
            -262,
            485,
            -71,
            -207,
            -332,
            486
          ]
        ],
        id: "MLI",
        properties: {
          name: "Mali"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            487,
            -75,
            -384,
            -187,
            -456,
            488
          ]
        ],
        id: "MMR",
        properties: {
          name: "Myanmar"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            489,
            -89,
            490,
            -450,
            -16
          ]
        ],
        id: "MNE",
        properties: {
          name: "Montenegro"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            491,
            492,
            493,
            494,
            495,
            496,
            497,
            498,
            -197
          ]
        ],
        id: "MNG",
        properties: {
          name: "Mongolia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            499,
            500,
            501,
            502,
            503,
            504,
            505,
            506,
            507
          ]
        ],
        id: "MOZ",
        properties: {
          name: "Mozambique"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            508,
            509,
            510,
            -263,
            -485
          ]
        ],
        id: "MRT",
        properties: {
          name: "Mauritania"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -508,
            511,
            512,
            513
          ]
        ],
        id: "MWI",
        properties: {
          name: "Malawi"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              514,
              515,
              516,
              517
            ]
          ],
          [
            [
              -380,
              518,
              -116,
              519
            ]
          ]
        ],
        id: "MYS",
        properties: {
          name: "Malaysia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            520,
            -8,
            521,
            -120,
            522
          ]
        ],
        id: "NAM",
        properties: {
          name: "Namibia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            523
          ]
        ],
        id: "NCL",
        properties: {
          name: "New Caledonia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -72,
            -486,
            -261,
            -462,
            524,
            525,
            526,
            527,
            528,
            -213,
            529,
            -68
          ]
        ],
        id: "NER",
        properties: {
          name: "Niger"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            530,
            -69,
            -530,
            -212
          ]
        ],
        id: "NGA",
        properties: {
          name: "Nigeria"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            531,
            -353,
            532,
            -237
          ]
        ],
        id: "NIC",
        properties: {
          name: "Nicaragua"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -249,
            -60,
            533
          ]
        ],
        id: "NLD",
        properties: {
          name: "Netherlands"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              -302,
              534,
              535
            ]
          ],
          [
            [
              536
            ]
          ],
          [
            [
              537
            ]
          ],
          [
            [
              538
            ]
          ]
        ],
        id: "NOR",
        properties: {
          name: "Norway"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -383,
            -190
          ]
        ],
        id: "NPL",
        properties: {
          name: "Nepal"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              539
            ]
          ],
          [
            [
              540
            ]
          ]
        ],
        id: "NZL",
        properties: {
          name: "New Zealand"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              541,
              542,
              -22,
              543
            ]
          ],
          [
            [
              -20,
              544
            ]
          ]
        ],
        id: "OMN",
        properties: {
          name: "Oman"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -192,
            -386,
            545,
            -389,
            -5
          ]
        ],
        id: "PAK",
        properties: {
          name: "Pakistan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            546,
            -239,
            547,
            -232
          ]
        ],
        id: "PAN",
        properties: {
          name: "Panama"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -173,
            548,
            -270,
            -235,
            -107,
            -103
          ]
        ],
        id: "PER",
        properties: {
          name: "Peru"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              549
            ]
          ],
          [
            [
              550
            ]
          ],
          [
            [
              551
            ]
          ],
          [
            [
              552
            ]
          ],
          [
            [
              553
            ]
          ],
          [
            [
              554
            ]
          ],
          [
            [
              555
            ]
          ]
        ],
        id: "PHL",
        properties: {
          name: "Philippines"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              556
            ]
          ],
          [
            [
              557
            ]
          ],
          [
            [
              -376,
              558
            ]
          ],
          [
            [
              559
            ]
          ]
        ],
        id: "PNG",
        properties: {
          name: "Papua New Guinea"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -246,
            560,
            561,
            -472,
            -98,
            562,
            563,
            -243
          ]
        ],
        id: "POL",
        properties: {
          name: "Poland"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            564
          ]
        ],
        id: "PRI",
        properties: {
          name: "Puerto Rico"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            565,
            -447,
            566,
            -183
          ]
        ],
        id: "PRK",
        properties: {
          name: "North Korea"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -284,
            567
          ]
        ],
        id: "PRT",
        properties: {
          name: "Portugal"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -105,
            -106,
            -26
          ]
        ],
        id: "PRY",
        properties: {
          name: "Paraguay"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            568,
            569
          ]
        ],
        id: "QAT",
        properties: {
          name: "Qatar"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            570,
            -478,
            571,
            572,
            -78,
            573,
            -363
          ]
        ],
        id: "ROU",
        properties: {
          name: "Romania"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              574
            ]
          ],
          [
            [
              -562,
              575,
              -469
            ]
          ],
          [
            [
              576
            ]
          ],
          [
            [
              577
            ]
          ],
          [
            [
              578
            ]
          ],
          [
            [
              579
            ]
          ],
          [
            [
              580
            ]
          ],
          [
            [
              581
            ]
          ],
          [
            [
              582
            ]
          ],
          [
            [
              -181,
              583,
              584,
              585,
              -177,
              586,
              -175,
              587,
              -202,
              588,
              -200,
              589,
              -198,
              -499,
              590,
              591,
              -496,
              592,
              -494,
              593,
              -492,
              -196,
              -433,
              594,
              -431,
              595,
              596,
              -428,
              597,
              -426,
              598,
              599,
              600,
              -55,
              601,
              -322,
              602,
              -320,
              603,
              604,
              605,
              606,
              607,
              608,
              609,
              610,
              611,
              -95,
              612,
              -93,
              -474,
              -287,
              613,
              614,
              -299,
              615
            ]
          ],
          [
            [
              616
            ]
          ],
          [
            [
              617
            ]
          ],
          [
            [
              618
            ]
          ]
        ],
        id: "RUS",
        properties: {
          name: "Russia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            619,
            620,
            -57,
            -220,
            621
          ]
        ],
        id: "RWA",
        properties: {
          name: "Rwanda"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -475,
            -264,
            -511,
            622
          ]
        ],
        id: "ESH",
        properties: {
          name: "Western Sahara"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            623,
            -415,
            -397,
            -454,
            624,
            -570,
            625,
            -23,
            -543,
            626
          ]
        ],
        id: "SAU",
        properties: {
          name: "Saudi Arabia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            627,
            628,
            -124,
            629,
            -465,
            -271,
            630,
            -279,
            631,
            -298,
            632
          ]
        ],
        id: "SDN",
        properties: {
          name: "Sudan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            633,
            -296,
            -438,
            634,
            635,
            -226,
            -126,
            636,
            -628
          ]
        ],
        id: "SSD",
        properties: {
          name: "South Sudan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            637,
            -509,
            -487,
            -331,
            -336,
            638,
            -334
          ]
        ],
        id: "SEN",
        properties: {
          name: "Senegal"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              639
            ]
          ],
          [
            [
              640
            ]
          ],
          [
            [
              641
            ]
          ],
          [
            [
              642
            ]
          ],
          [
            [
              643
            ]
          ]
        ],
        id: "SLB",
        properties: {
          name: "Solomon Islands"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            644,
            -328,
            -461
          ]
        ],
        id: "SLE",
        properties: {
          name: "Sierra Leone"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            645,
            -346,
            -351
          ]
        ],
        id: "SLV",
        properties: {
          name: "El Salvador"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            646,
            647,
            -291,
            -253,
            648,
            -439,
            -294
          ]
        ],
        id: "SOM",
        properties: {
          name: "Somalia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -83,
            -483,
            -451,
            -491,
            -88,
            649,
            -355,
            650,
            -364,
            -574
          ]
        ],
        id: "SRB",
        properties: {
          name: "Serbia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            651,
            -312,
            652,
            -111,
            -348
          ]
        ],
        id: "SUR",
        properties: {
          name: "Suriname"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -564,
            653,
            -361,
            -50,
            -244
          ]
        ],
        id: "SVK",
        properties: {
          name: "Slovakia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -41,
            -366,
            -358,
            654,
            -411
          ]
        ],
        id: "SVN",
        properties: {
          name: "Slovenia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -535,
            -301,
            655
          ]
        ],
        id: "SWE",
        properties: {
          name: "Sweden"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            656,
            -504
          ]
        ],
        id: "SWZ",
        properties: {
          name: "Eswatini"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -414,
            -408,
            -459,
            657,
            658,
            -399
          ]
        ],
        id: "SYR",
        properties: {
          name: "Syria"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -529,
            659,
            -527,
            660,
            -525,
            -466,
            -630,
            -123,
            -215,
            661
          ]
        ],
        id: "TCD",
        properties: {
          name: "Chad"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            662,
            -326,
            -73,
            -66
          ]
        ],
        id: "TGO",
        properties: {
          name: "Togo"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            663,
            -518,
            664,
            -489,
            -455,
            -442
          ]
        ],
        id: "THA",
        properties: {
          name: "Thailand"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -440,
            -193,
            -3,
            665
          ]
        ],
        id: "TJK",
        properties: {
          name: "Tajikistan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -388,
            666,
            -422,
            667,
            -1
          ]
        ],
        id: "TKM",
        properties: {
          name: "Turkmenistan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            668,
            -368
          ]
        ],
        id: "TLS",
        properties: {
          name: "Timor"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            669
          ]
        ],
        id: "TTO",
        properties: {
          name: "Trinidad and Tobago"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -267,
            670,
            -463
          ]
        ],
        id: "TUN",
        properties: {
          name: "Tunisia"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              -324,
              -36,
              -393,
              671,
              -400,
              -659,
              672
            ]
          ],
          [
            [
              -341,
              -80,
              673
            ]
          ]
        ],
        id: "TUR",
        properties: {
          name: "Turkey"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            674
          ]
        ],
        id: "TWN",
        properties: {
          name: "Taiwan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -436,
            675,
            676,
            -500,
            677,
            678,
            679,
            680,
            -221,
            -59,
            681,
            -620,
            682
          ]
        ],
        id: "TZA",
        properties: {
          name: "Tanzania"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -622,
            -219,
            683,
            -217,
            684,
            -635,
            -437,
            -683
          ]
        ],
        id: "UGA",
        properties: {
          name: "Uganda"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            685,
            -611,
            686,
            -609,
            687,
            688,
            689,
            -605,
            690,
            -572,
            -477,
            -571,
            -362,
            -654,
            -563,
            -97
          ]
        ],
        id: "UKR",
        properties: {
          name: "Ukraine"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -114,
            691,
            -28
          ]
        ],
        id: "URY",
        properties: {
          name: "Uruguay"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              692
            ]
          ],
          [
            [
              693
            ]
          ],
          [
            [
              694
            ]
          ],
          [
            [
              695
            ]
          ],
          [
            [
              696
            ]
          ],
          [
            [
              697,
              -481,
              698,
              -140
            ]
          ],
          [
            [
              699
            ]
          ],
          [
            [
              700
            ]
          ],
          [
            [
              701
            ]
          ],
          [
            [
              -144,
              702,
              -142,
              703
            ]
          ]
        ],
        id: "USA",
        properties: {
          name: "United States"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -668,
            -421,
            -441,
            -666,
            -2
          ]
        ],
        id: "UZB",
        properties: {
          name: "Uzbekistan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            704,
            -349,
            -109,
            -234
          ]
        ],
        id: "VEN",
        properties: {
          name: "Venezuela"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            705,
            -444,
            -457,
            -185
          ]
        ],
        id: "VNM",
        properties: {
          name: "Vietnam"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              706
            ]
          ],
          [
            [
              707
            ]
          ]
        ],
        id: "VUT",
        properties: {
          name: "Vanuatu"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -417,
            -404
          ]
        ],
        id: "PSX",
        properties: {
          name: "West Bank"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            708,
            -627,
            -542
          ]
        ],
        id: "YEM",
        properties: {
          name: "Yemen"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -523,
            -119,
            709,
            -505,
            -657,
            -503,
            710
          ],
          [
            -468
          ]
        ],
        id: "ZAF",
        properties: {
          name: "South Africa"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -512,
            -507,
            711,
            -121,
            -522,
            -7,
            -223,
            712,
            -680
          ]
        ],
        id: "ZMB",
        properties: {
          name: "Zambia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -710,
            -122,
            -712,
            -506
          ]
        ],
        id: "ZWE",
        properties: {
          name: "Zimbabwe"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              713
            ]
          ],
          [
            [
              714
            ]
          ],
          [
            [
              715
            ]
          ],
          [
            [
              716
            ]
          ],
          [
            [
              717
            ]
          ],
          [
            [
              718
            ]
          ],
          [
            [
              719
            ]
          ],
          [
            [
              720
            ]
          ]
        ],
        id: "CPV",
        properties: {
          name: "Cape Verde"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              721
            ]
          ],
          [
            [
              722
            ]
          ],
          [
            [
              723
            ]
          ]
        ],
        id: "COM",
        properties: {
          name: "Comoros"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            724
          ]
        ],
        id: "MUS",
        properties: {
          name: "Mauritius"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            725
          ]
        ],
        id: "SYC",
        properties: {
          name: "Seychelles"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            726
          ]
        ],
        id: "BHR",
        properties: {
          name: "Bahrain"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              727
            ]
          ],
          [
            [
              728
            ]
          ]
        ],
        id: "MDV",
        properties: {
          name: "Maldives"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              729
            ]
          ],
          [
            [
              730
            ]
          ]
        ],
        id: "MHL",
        properties: {
          name: "Marshall Islands"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              731
            ]
          ],
          [
            [
              732
            ]
          ],
          [
            [
              733
            ]
          ],
          [
            [
              734
            ]
          ],
          [
            [
              735
            ]
          ]
        ],
        id: "FSM",
        properties: {
          name: "Micronesia (country)"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            736
          ]
        ],
        id: "NRU",
        properties: {
          name: "Nauru"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            737
          ]
        ],
        id: "PLW",
        properties: {
          name: "Palau"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              738
            ]
          ],
          [
            [
              739
            ]
          ]
        ],
        id: "WSM",
        properties: {
          name: "Samoa"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            515,
            740
          ]
        ],
        id: "SGP",
        properties: {
          name: "Singapore"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              741
            ]
          ],
          [
            [
              742
            ]
          ],
          [
            [
              743
            ]
          ]
        ],
        id: "TON",
        properties: {
          name: "Tonga"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              744
            ]
          ],
          [
            [
              745
            ]
          ],
          [
            [
              746
            ]
          ],
          [
            [
              747
            ]
          ],
          [
            [
              748
            ]
          ],
          [
            [
              749
            ]
          ],
          [
            [
              750
            ]
          ]
        ],
        id: "TUV",
        properties: {
          name: "Tuvalu"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              751
            ]
          ],
          [
            [
              752
            ]
          ]
        ],
        id: "ATG",
        properties: {
          name: "Antigua and Barbuda"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            753
          ]
        ],
        id: "BRB",
        properties: {
          name: "Barbados"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            754
          ]
        ],
        id: "DMA",
        properties: {
          name: "Dominica"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            755
          ]
        ],
        id: "GRD",
        properties: {
          name: "Grenada"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              756
            ]
          ],
          [
            [
              757
            ]
          ]
        ],
        id: "KNA",
        properties: {
          name: "Saint Kitts and Nevis"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            758
          ]
        ],
        id: "LCA",
        properties: {
          name: "Saint Lucia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            759
          ]
        ],
        id: "VCT",
        properties: {
          name: "Saint Vincent and the Grenadines"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            760
          ]
        ],
        id: "AND",
        properties: {
          name: "Andorra"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -45,
            761,
            -166,
            762
          ]
        ],
        id: "LIE",
        properties: {
          name: "Liechtenstein"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            763
          ]
        ],
        id: "MLT",
        properties: {
          name: "Malta"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            764
          ]
        ],
        id: "MCO",
        properties: {
          name: "Monaco"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            765
          ]
        ],
        id: "SMR",
        properties: {
          name: "San Marino"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            766
          ]
        ],
        id: "KIR",
        properties: {
          name: "Kiribati"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            767
          ]
        ],
        id: "STP",
        properties: {
          name: "Sao Tome and Principe"
        }
      }
    ]
  }
};
const arcs = [
  [
    [
      61.21,
      35.65
    ],
    [
      62.23,
      35.27
    ],
    [
      62.98,
      35.4
    ],
    [
      63.19,
      35.86
    ],
    [
      63.98,
      36.01
    ],
    [
      64.55,
      36.31
    ],
    [
      64.75,
      37.11
    ],
    [
      65.59,
      37.31
    ],
    [
      65.75,
      37.66
    ],
    [
      66.22,
      37.39
    ],
    [
      66.52,
      37.36
    ]
  ],
  [
    [
      66.52,
      37.36
    ],
    [
      67.08,
      37.36
    ],
    [
      67.83,
      37.14
    ]
  ],
  [
    [
      67.83,
      37.14
    ],
    [
      68.14,
      37.02
    ],
    [
      68.86,
      37.34
    ],
    [
      69.2,
      37.15
    ],
    [
      69.52,
      37.61
    ],
    [
      70.12,
      37.59
    ],
    [
      70.27,
      37.74
    ],
    [
      70.38,
      38.14
    ],
    [
      70.81,
      38.49
    ],
    [
      71.35,
      38.26
    ],
    [
      71.24,
      37.95
    ],
    [
      71.54,
      37.91
    ],
    [
      71.45,
      37.07
    ],
    [
      71.84,
      36.74
    ],
    [
      72.19,
      36.95
    ],
    [
      72.64,
      37.05
    ],
    [
      73.26,
      37.5
    ],
    [
      73.95,
      37.42
    ],
    [
      74.98,
      37.42
    ]
  ],
  [
    [
      74.98,
      37.42
    ],
    [
      75.16,
      37.13
    ]
  ],
  [
    [
      75.16,
      37.13
    ],
    [
      74.58,
      37.02
    ],
    [
      74.07,
      36.84
    ],
    [
      72.92,
      36.72
    ],
    [
      71.85,
      36.51
    ],
    [
      71.26,
      36.07
    ],
    [
      71.5,
      35.65
    ],
    [
      71.61,
      35.15
    ],
    [
      71.12,
      34.73
    ],
    [
      71.16,
      34.35
    ],
    [
      70.88,
      33.99
    ],
    [
      69.93,
      34.02
    ],
    [
      70.32,
      33.36
    ],
    [
      69.69,
      33.11
    ],
    [
      69.26,
      32.5
    ],
    [
      69.32,
      31.9
    ],
    [
      68.93,
      31.62
    ],
    [
      68.56,
      31.71
    ],
    [
      67.79,
      31.58
    ],
    [
      67.68,
      31.3
    ],
    [
      66.94,
      31.3
    ],
    [
      66.38,
      30.74
    ],
    [
      66.35,
      29.89
    ],
    [
      65.05,
      29.47
    ],
    [
      64.35,
      29.56
    ],
    [
      64.15,
      29.34
    ],
    [
      63.55,
      29.47
    ],
    [
      62.55,
      29.32
    ],
    [
      60.87,
      29.83
    ]
  ],
  [
    [
      60.87,
      29.83
    ],
    [
      61.78,
      30.74
    ],
    [
      61.7,
      31.38
    ],
    [
      60.94,
      31.55
    ],
    [
      60.86,
      32.18
    ],
    [
      60.54,
      32.98
    ],
    [
      60.96,
      33.53
    ],
    [
      60.53,
      33.68
    ],
    [
      60.8,
      34.4
    ],
    [
      61.21,
      35.65
    ]
  ],
  [
    [
      23.91,
      -10.93
    ],
    [
      24.02,
      -11.24
    ],
    [
      23.9,
      -11.72
    ],
    [
      24.08,
      -12.19
    ],
    [
      23.93,
      -12.57
    ],
    [
      24.02,
      -12.91
    ],
    [
      21.93,
      -12.9
    ],
    [
      21.89,
      -16.08
    ],
    [
      22.56,
      -16.9
    ],
    [
      23.22,
      -17.52
    ]
  ],
  [
    [
      23.22,
      -17.52
    ],
    [
      21.38,
      -17.93
    ],
    [
      18.96,
      -17.79
    ],
    [
      18.26,
      -17.31
    ],
    [
      14.21,
      -17.35
    ],
    [
      14.06,
      -17.42
    ],
    [
      13.46,
      -16.97
    ],
    [
      12.81,
      -16.94
    ],
    [
      12.22,
      -17.11
    ],
    [
      11.73,
      -17.3
    ]
  ],
  [
    [
      11.73,
      -17.3
    ],
    [
      11.64,
      -16.67
    ],
    [
      11.78,
      -15.79
    ],
    [
      12.12,
      -14.88
    ],
    [
      12.18,
      -14.45
    ],
    [
      12.5,
      -13.55
    ],
    [
      12.74,
      -13.14
    ],
    [
      13.31,
      -12.48
    ],
    [
      13.63,
      -12.04
    ],
    [
      13.74,
      -11.3
    ],
    [
      13.69,
      -10.73
    ],
    [
      13.39,
      -10.37
    ],
    [
      13.12,
      -9.77
    ],
    [
      12.88,
      -9.17
    ],
    [
      12.93,
      -8.96
    ],
    [
      13.24,
      -8.56
    ],
    [
      12.93,
      -7.6
    ],
    [
      12.73,
      -6.93
    ],
    [
      12.23,
      -6.29
    ],
    [
      12.32,
      -6.1
    ]
  ],
  [
    [
      12.32,
      -6.1
    ],
    [
      12.74,
      -5.97
    ],
    [
      13.02,
      -5.98
    ],
    [
      13.38,
      -5.86
    ],
    [
      16.33,
      -5.88
    ],
    [
      16.57,
      -6.62
    ],
    [
      16.86,
      -7.22
    ],
    [
      17.09,
      -7.55
    ],
    [
      17.47,
      -8.07
    ],
    [
      18.13,
      -7.99
    ],
    [
      18.46,
      -7.85
    ],
    [
      19.02,
      -7.99
    ],
    [
      19.17,
      -7.74
    ],
    [
      19.42,
      -7.16
    ],
    [
      20.04,
      -7.12
    ],
    [
      20.09,
      -6.94
    ],
    [
      20.6,
      -6.94
    ],
    [
      20.51,
      -7.3
    ],
    [
      21.73,
      -7.29
    ],
    [
      21.75,
      -7.92
    ],
    [
      21.95,
      -8.31
    ],
    [
      21.8,
      -8.91
    ],
    [
      21.88,
      -9.52
    ],
    [
      22.21,
      -9.89
    ],
    [
      22.16,
      -11.08
    ],
    [
      22.4,
      -10.99
    ],
    [
      22.84,
      -11.02
    ],
    [
      23.46,
      -10.87
    ],
    [
      23.91,
      -10.93
    ]
  ],
  [
    [
      12.18,
      -5.79
    ],
    [
      11.91,
      -5.04
    ]
  ],
  [
    [
      11.91,
      -5.04
    ],
    [
      12.32,
      -4.61
    ],
    [
      12.62,
      -4.44
    ],
    [
      13,
      -4.78
    ]
  ],
  [
    [
      13,
      -4.78
    ],
    [
      12.63,
      -4.99
    ],
    [
      12.47,
      -5.25
    ],
    [
      12.44,
      -5.68
    ],
    [
      12.18,
      -5.79
    ]
  ],
  [
    [
      21.02,
      40.84
    ],
    [
      21,
      40.58
    ],
    [
      20.67,
      40.44
    ],
    [
      20.62,
      40.11
    ],
    [
      20.15,
      39.62
    ]
  ],
  [
    [
      20.15,
      39.62
    ],
    [
      19.98,
      39.69
    ],
    [
      19.96,
      39.92
    ],
    [
      19.41,
      40.25
    ],
    [
      19.32,
      40.73
    ],
    [
      19.4,
      41.41
    ],
    [
      19.54,
      41.72
    ],
    [
      19.37,
      41.88
    ],
    [
      19.3,
      42.2
    ],
    [
      19.74,
      42.69
    ]
  ],
  [
    [
      19.74,
      42.69
    ],
    [
      19.8,
      42.5
    ],
    [
      20.07,
      42.59
    ]
  ],
  [
    [
      20.07,
      42.59
    ],
    [
      20.28,
      42.32
    ],
    [
      20.52,
      42.22
    ]
  ],
  [
    [
      20.52,
      42.22
    ],
    [
      20.59,
      41.86
    ],
    [
      20.46,
      41.52
    ],
    [
      20.61,
      41.09
    ],
    [
      21.02,
      40.84
    ]
  ],
  [
    [
      51.58,
      24.25
    ],
    [
      51.76,
      24.29
    ],
    [
      51.79,
      24.02
    ],
    [
      52.58,
      24.18
    ],
    [
      53.4,
      24.15
    ],
    [
      54.01,
      24.12
    ],
    [
      54.69,
      24.8
    ],
    [
      55.44,
      25.44
    ],
    [
      56.07,
      26.06
    ]
  ],
  [
    [
      56.07,
      26.06
    ],
    [
      56.26,
      25.71
    ]
  ],
  [
    [
      56.26,
      25.71
    ],
    [
      56.4,
      24.92
    ]
  ],
  [
    [
      56.4,
      24.92
    ],
    [
      55.89,
      24.92
    ],
    [
      55.8,
      24.27
    ],
    [
      55.98,
      24.13
    ],
    [
      55.53,
      23.93
    ],
    [
      55.53,
      23.52
    ],
    [
      55.23,
      23.11
    ],
    [
      55.21,
      22.71
    ]
  ],
  [
    [
      55.21,
      22.71
    ],
    [
      55.01,
      22.5
    ],
    [
      52,
      23
    ],
    [
      51.62,
      24.01
    ],
    [
      51.58,
      24.25
    ]
  ],
  [
    [
      -66.96,
      -54.9
    ],
    [
      -67.56,
      -54.87
    ],
    [
      -68.63,
      -54.87
    ],
    [
      -68.63,
      -52.64
    ]
  ],
  [
    [
      -68.63,
      -52.64
    ],
    [
      -68.25,
      -53.1
    ],
    [
      -67.75,
      -53.85
    ],
    [
      -66.45,
      -54.45
    ],
    [
      -65.05,
      -54.7
    ],
    [
      -65.5,
      -55.2
    ],
    [
      -66.45,
      -55.25
    ],
    [
      -66.96,
      -54.9
    ]
  ],
  [
    [
      -62.69,
      -22.25
    ],
    [
      -60.85,
      -23.88
    ],
    [
      -60.03,
      -24.03
    ],
    [
      -58.81,
      -24.77
    ],
    [
      -57.78,
      -25.16
    ],
    [
      -57.63,
      -25.6
    ],
    [
      -58.62,
      -27.12
    ],
    [
      -57.61,
      -27.4
    ],
    [
      -56.49,
      -27.55
    ],
    [
      -55.7,
      -27.39
    ],
    [
      -54.79,
      -26.62
    ],
    [
      -54.63,
      -25.74
    ]
  ],
  [
    [
      -54.63,
      -25.74
    ],
    [
      -54.13,
      -25.55
    ],
    [
      -53.63,
      -26.12
    ],
    [
      -53.65,
      -26.92
    ],
    [
      -54.49,
      -27.47
    ],
    [
      -55.16,
      -27.88
    ],
    [
      -56.29,
      -28.85
    ],
    [
      -57.63,
      -30.22
    ]
  ],
  [
    [
      -57.63,
      -30.22
    ],
    [
      -57.87,
      -31.02
    ],
    [
      -58.14,
      -32.04
    ],
    [
      -58.13,
      -33.04
    ],
    [
      -58.35,
      -33.26
    ],
    [
      -58.43,
      -33.91
    ]
  ],
  [
    [
      -58.43,
      -33.91
    ],
    [
      -58.5,
      -34.43
    ],
    [
      -57.23,
      -35.29
    ],
    [
      -57.36,
      -35.98
    ],
    [
      -56.74,
      -36.41
    ],
    [
      -56.79,
      -36.9
    ],
    [
      -57.75,
      -38.18
    ],
    [
      -59.23,
      -38.72
    ],
    [
      -61.24,
      -38.93
    ],
    [
      -62.34,
      -38.83
    ],
    [
      -62.13,
      -39.42
    ],
    [
      -62.33,
      -40.17
    ],
    [
      -62.15,
      -40.68
    ],
    [
      -62.75,
      -41.03
    ],
    [
      -63.77,
      -41.17
    ],
    [
      -64.73,
      -40.8
    ],
    [
      -65.12,
      -41.06
    ],
    [
      -64.98,
      -42.06
    ],
    [
      -64.3,
      -42.36
    ],
    [
      -63.76,
      -42.04
    ],
    [
      -63.46,
      -42.56
    ],
    [
      -64.38,
      -42.87
    ],
    [
      -65.18,
      -43.5
    ],
    [
      -65.33,
      -44.5
    ],
    [
      -65.57,
      -45.04
    ],
    [
      -66.51,
      -45.04
    ],
    [
      -67.29,
      -45.55
    ],
    [
      -67.58,
      -46.3
    ],
    [
      -66.6,
      -47.03
    ],
    [
      -65.64,
      -47.24
    ],
    [
      -65.99,
      -48.13
    ],
    [
      -67.17,
      -48.7
    ],
    [
      -67.82,
      -49.87
    ],
    [
      -68.73,
      -50.26
    ],
    [
      -69.14,
      -50.73
    ],
    [
      -68.82,
      -51.77
    ],
    [
      -68.15,
      -52.35
    ],
    [
      -68.57,
      -52.3
    ]
  ],
  [
    [
      -68.57,
      -52.3
    ],
    [
      -69.5,
      -52.14
    ],
    [
      -71.91,
      -52.01
    ],
    [
      -72.33,
      -51.43
    ],
    [
      -72.31,
      -50.68
    ],
    [
      -72.98,
      -50.74
    ],
    [
      -73.33,
      -50.38
    ],
    [
      -73.42,
      -49.32
    ],
    [
      -72.65,
      -48.88
    ],
    [
      -72.33,
      -48.24
    ],
    [
      -72.45,
      -47.74
    ],
    [
      -71.92,
      -46.88
    ],
    [
      -71.55,
      -45.56
    ],
    [
      -71.66,
      -44.97
    ],
    [
      -71.22,
      -44.78
    ],
    [
      -71.33,
      -44.41
    ],
    [
      -71.79,
      -44.21
    ],
    [
      -71.46,
      -43.79
    ],
    [
      -71.92,
      -43.41
    ],
    [
      -72.15,
      -42.25
    ],
    [
      -71.75,
      -42.05
    ],
    [
      -71.92,
      -40.83
    ],
    [
      -71.68,
      -39.81
    ],
    [
      -71.41,
      -38.92
    ],
    [
      -70.81,
      -38.55
    ],
    [
      -71.12,
      -37.58
    ],
    [
      -71.12,
      -36.66
    ],
    [
      -70.36,
      -36.01
    ],
    [
      -70.39,
      -35.17
    ],
    [
      -69.82,
      -34.19
    ],
    [
      -69.81,
      -33.27
    ],
    [
      -70.07,
      -33.09
    ],
    [
      -70.54,
      -31.37
    ],
    [
      -69.92,
      -30.34
    ],
    [
      -70.01,
      -29.37
    ],
    [
      -69.66,
      -28.46
    ],
    [
      -69,
      -27.52
    ],
    [
      -68.3,
      -26.9
    ],
    [
      -68.59,
      -26.51
    ],
    [
      -68.39,
      -26.19
    ],
    [
      -68.42,
      -24.52
    ],
    [
      -67.33,
      -24.03
    ],
    [
      -66.99,
      -22.99
    ],
    [
      -67.11,
      -22.74
    ]
  ],
  [
    [
      -67.11,
      -22.74
    ],
    [
      -66.27,
      -21.83
    ],
    [
      -64.96,
      -22.08
    ],
    [
      -64.38,
      -22.8
    ],
    [
      -63.99,
      -21.99
    ],
    [
      -62.85,
      -22.03
    ],
    [
      -62.69,
      -22.25
    ]
  ],
  [
    [
      43.58,
      41.09
    ],
    [
      44.97,
      41.25
    ]
  ],
  [
    [
      44.97,
      41.25
    ],
    [
      45.18,
      40.99
    ],
    [
      45.56,
      40.81
    ],
    [
      45.36,
      40.56
    ],
    [
      45.89,
      40.22
    ],
    [
      45.61,
      39.9
    ],
    [
      46.03,
      39.63
    ],
    [
      46.48,
      39.46
    ],
    [
      46.51,
      38.77
    ]
  ],
  [
    [
      46.51,
      38.77
    ],
    [
      46.14,
      38.74
    ]
  ],
  [
    [
      46.14,
      38.74
    ],
    [
      45.74,
      39.32
    ],
    [
      45.74,
      39.47
    ],
    [
      45.3,
      39.47
    ],
    [
      45,
      39.74
    ],
    [
      44.79,
      39.71
    ]
  ],
  [
    [
      44.79,
      39.71
    ],
    [
      44.4,
      40.01
    ],
    [
      43.66,
      40.25
    ],
    [
      43.75,
      40.74
    ],
    [
      43.58,
      41.09
    ]
  ],
  [
    [
      68.94,
      -48.62
    ],
    [
      69.58,
      -48.94
    ],
    [
      70.53,
      -49.06
    ],
    [
      70.56,
      -49.25
    ],
    [
      70.28,
      -49.71
    ],
    [
      68.75,
      -49.77
    ],
    [
      68.72,
      -49.24
    ],
    [
      68.87,
      -48.83
    ],
    [
      68.94,
      -48.62
    ]
  ],
  [
    [
      145.4,
      -40.79
    ],
    [
      146.36,
      -41.14
    ],
    [
      146.91,
      -41
    ],
    [
      147.69,
      -40.81
    ],
    [
      148.29,
      -40.88
    ],
    [
      148.36,
      -42.06
    ],
    [
      148.02,
      -42.41
    ],
    [
      147.91,
      -43.21
    ],
    [
      147.56,
      -42.94
    ],
    [
      146.87,
      -43.63
    ],
    [
      146.66,
      -43.58
    ],
    [
      146.05,
      -43.55
    ],
    [
      145.43,
      -42.69
    ],
    [
      145.3,
      -42.03
    ],
    [
      144.72,
      -41.16
    ],
    [
      144.74,
      -40.7
    ],
    [
      145.4,
      -40.79
    ]
  ],
  [
    [
      143.56,
      -13.76
    ],
    [
      143.92,
      -14.55
    ],
    [
      144.56,
      -14.17
    ],
    [
      144.89,
      -14.59
    ],
    [
      145.37,
      -14.98
    ],
    [
      145.27,
      -15.43
    ],
    [
      145.49,
      -16.29
    ],
    [
      145.64,
      -16.78
    ],
    [
      145.89,
      -16.91
    ],
    [
      146.16,
      -17.76
    ],
    [
      146.06,
      -18.28
    ],
    [
      146.39,
      -18.96
    ],
    [
      147.47,
      -19.48
    ],
    [
      148.18,
      -19.96
    ],
    [
      148.85,
      -20.39
    ],
    [
      148.72,
      -20.63
    ],
    [
      149.29,
      -21.26
    ],
    [
      149.68,
      -22.34
    ],
    [
      150.08,
      -22.12
    ],
    [
      150.48,
      -22.56
    ],
    [
      150.73,
      -22.4
    ],
    [
      150.9,
      -23.46
    ],
    [
      151.61,
      -24.08
    ],
    [
      152.07,
      -24.46
    ],
    [
      152.86,
      -25.27
    ],
    [
      153.14,
      -26.07
    ],
    [
      153.16,
      -26.64
    ],
    [
      153.09,
      -27.26
    ],
    [
      153.57,
      -28.11
    ],
    [
      153.51,
      -29
    ],
    [
      153.34,
      -29.46
    ],
    [
      153.07,
      -30.35
    ],
    [
      153.09,
      -30.92
    ],
    [
      152.89,
      -31.64
    ],
    [
      152.45,
      -32.55
    ],
    [
      151.71,
      -33.04
    ],
    [
      151.34,
      -33.82
    ],
    [
      151.01,
      -34.31
    ],
    [
      150.71,
      -35.17
    ],
    [
      150.33,
      -35.67
    ],
    [
      150.08,
      -36.42
    ],
    [
      149.95,
      -37.11
    ],
    [
      150,
      -37.43
    ],
    [
      149.42,
      -37.77
    ],
    [
      148.3,
      -37.81
    ],
    [
      147.38,
      -38.22
    ],
    [
      146.92,
      -38.61
    ],
    [
      146.32,
      -39.04
    ],
    [
      145.49,
      -38.59
    ],
    [
      144.88,
      -38.42
    ],
    [
      145.03,
      -37.9
    ],
    [
      144.49,
      -38.09
    ],
    [
      143.61,
      -38.81
    ],
    [
      142.75,
      -38.54
    ],
    [
      142.18,
      -38.38
    ],
    [
      141.61,
      -38.31
    ],
    [
      140.64,
      -38.02
    ],
    [
      139.99,
      -37.4
    ],
    [
      139.81,
      -36.64
    ],
    [
      139.57,
      -36.14
    ],
    [
      139.08,
      -35.73
    ],
    [
      138.12,
      -35.61
    ],
    [
      138.45,
      -35.13
    ],
    [
      138.21,
      -34.38
    ],
    [
      137.72,
      -35.08
    ],
    [
      136.83,
      -35.26
    ],
    [
      137.35,
      -34.71
    ],
    [
      137.5,
      -34.13
    ],
    [
      137.89,
      -33.64
    ],
    [
      137.81,
      -32.9
    ],
    [
      137,
      -33.75
    ],
    [
      136.37,
      -34.09
    ],
    [
      135.99,
      -34.89
    ],
    [
      135.21,
      -34.48
    ],
    [
      135.24,
      -33.95
    ],
    [
      134.61,
      -33.22
    ],
    [
      134.09,
      -32.85
    ],
    [
      134.27,
      -32.62
    ],
    [
      132.99,
      -32.01
    ],
    [
      132.29,
      -31.98
    ],
    [
      131.33,
      -31.5
    ],
    [
      129.54,
      -31.59
    ],
    [
      128.24,
      -31.95
    ],
    [
      127.1,
      -32.28
    ],
    [
      126.15,
      -32.22
    ],
    [
      125.09,
      -32.73
    ],
    [
      124.22,
      -32.96
    ],
    [
      124.03,
      -33.48
    ],
    [
      123.66,
      -33.89
    ],
    [
      122.81,
      -33.91
    ],
    [
      122.18,
      -34
    ],
    [
      121.3,
      -33.82
    ],
    [
      120.58,
      -33.93
    ],
    [
      119.89,
      -33.98
    ],
    [
      119.3,
      -34.51
    ],
    [
      119.01,
      -34.46
    ],
    [
      118.51,
      -34.75
    ],
    [
      118.02,
      -35.06
    ],
    [
      117.3,
      -35.03
    ],
    [
      116.63,
      -35.03
    ],
    [
      115.56,
      -34.39
    ],
    [
      115.03,
      -34.2
    ],
    [
      115.05,
      -33.62
    ],
    [
      115.55,
      -33.49
    ],
    [
      115.71,
      -33.26
    ],
    [
      115.68,
      -32.9
    ],
    [
      115.8,
      -32.21
    ],
    [
      115.69,
      -31.61
    ],
    [
      115.16,
      -30.6
    ],
    [
      115,
      -30.03
    ],
    [
      115.04,
      -29.46
    ],
    [
      114.64,
      -28.81
    ],
    [
      114.62,
      -28.52
    ],
    [
      114.17,
      -28.12
    ],
    [
      114.05,
      -27.33
    ],
    [
      113.48,
      -26.54
    ],
    [
      113.34,
      -26.12
    ],
    [
      113.78,
      -26.55
    ],
    [
      113.44,
      -25.62
    ],
    [
      113.94,
      -25.91
    ],
    [
      114.23,
      -26.3
    ],
    [
      114.22,
      -25.79
    ],
    [
      113.72,
      -25
    ],
    [
      113.63,
      -24.68
    ],
    [
      113.39,
      -24.38
    ],
    [
      113.5,
      -23.81
    ],
    [
      113.71,
      -23.56
    ],
    [
      113.84,
      -23.06
    ],
    [
      113.74,
      -22.48
    ],
    [
      114.15,
      -21.76
    ],
    [
      114.23,
      -22.52
    ],
    [
      114.65,
      -21.83
    ],
    [
      115.46,
      -21.5
    ],
    [
      115.95,
      -21.07
    ],
    [
      116.71,
      -20.7
    ],
    [
      117.17,
      -20.62
    ],
    [
      117.44,
      -20.75
    ],
    [
      118.23,
      -20.37
    ],
    [
      118.84,
      -20.26
    ],
    [
      118.99,
      -20.04
    ],
    [
      119.25,
      -19.95
    ],
    [
      119.81,
      -19.98
    ],
    [
      120.86,
      -19.68
    ],
    [
      121.4,
      -19.24
    ],
    [
      121.66,
      -18.71
    ],
    [
      122.24,
      -18.2
    ],
    [
      122.29,
      -17.8
    ],
    [
      122.31,
      -17.25
    ],
    [
      123.01,
      -16.41
    ],
    [
      123.43,
      -17.27
    ],
    [
      123.86,
      -17.07
    ],
    [
      123.5,
      -16.6
    ],
    [
      123.82,
      -16.11
    ],
    [
      124.26,
      -16.33
    ],
    [
      124.38,
      -15.57
    ],
    [
      124.93,
      -15.08
    ],
    [
      125.17,
      -14.68
    ],
    [
      125.67,
      -14.51
    ],
    [
      125.69,
      -14.23
    ],
    [
      126.13,
      -14.35
    ],
    [
      126.14,
      -14.1
    ],
    [
      126.58,
      -13.95
    ],
    [
      127.07,
      -13.82
    ],
    [
      127.8,
      -14.28
    ],
    [
      128.36,
      -14.87
    ],
    [
      128.99,
      -14.88
    ],
    [
      129.62,
      -14.97
    ],
    [
      129.41,
      -14.42
    ],
    [
      129.89,
      -13.62
    ],
    [
      130.34,
      -13.36
    ],
    [
      130.18,
      -13.11
    ],
    [
      130.62,
      -12.54
    ],
    [
      131.22,
      -12.18
    ],
    [
      131.74,
      -12.3
    ],
    [
      132.58,
      -12.11
    ],
    [
      132.56,
      -11.6
    ],
    [
      131.82,
      -11.27
    ],
    [
      132.36,
      -11.13
    ],
    [
      133.02,
      -11.38
    ],
    [
      133.55,
      -11.79
    ],
    [
      134.39,
      -12.04
    ],
    [
      134.68,
      -11.94
    ],
    [
      135.3,
      -12.25
    ],
    [
      135.88,
      -11.96
    ],
    [
      136.26,
      -12.05
    ],
    [
      136.49,
      -11.86
    ],
    [
      136.95,
      -12.35
    ],
    [
      136.69,
      -12.89
    ],
    [
      136.31,
      -13.29
    ],
    [
      135.96,
      -13.32
    ],
    [
      136.08,
      -13.72
    ],
    [
      135.78,
      -14.22
    ],
    [
      135.43,
      -14.72
    ],
    [
      135.5,
      -15
    ],
    [
      136.3,
      -15.55
    ],
    [
      137.07,
      -15.87
    ],
    [
      137.58,
      -16.22
    ],
    [
      138.3,
      -16.81
    ],
    [
      138.59,
      -16.81
    ],
    [
      139.11,
      -17.06
    ],
    [
      139.26,
      -17.37
    ],
    [
      140.22,
      -17.71
    ],
    [
      140.88,
      -17.37
    ],
    [
      141.07,
      -16.83
    ],
    [
      141.27,
      -16.39
    ],
    [
      141.4,
      -15.84
    ],
    [
      141.7,
      -15.04
    ],
    [
      141.56,
      -14.56
    ],
    [
      141.64,
      -14.27
    ],
    [
      141.52,
      -13.7
    ],
    [
      141.65,
      -12.94
    ],
    [
      141.84,
      -12.74
    ],
    [
      141.69,
      -12.41
    ],
    [
      141.93,
      -11.88
    ],
    [
      142.12,
      -11.33
    ],
    [
      142.14,
      -11.04
    ],
    [
      142.52,
      -10.67
    ],
    [
      142.8,
      -11.16
    ],
    [
      142.87,
      -11.78
    ],
    [
      143.12,
      -11.91
    ],
    [
      143.16,
      -12.33
    ],
    [
      143.52,
      -12.83
    ],
    [
      143.6,
      -13.4
    ],
    [
      143.56,
      -13.76
    ]
  ],
  [
    [
      16.98,
      48.12
    ],
    [
      16.9,
      47.71
    ],
    [
      16.34,
      47.71
    ],
    [
      16.53,
      47.5
    ],
    [
      16.2,
      46.85
    ]
  ],
  [
    [
      16.2,
      46.85
    ],
    [
      16.01,
      46.68
    ],
    [
      15.14,
      46.66
    ],
    [
      14.63,
      46.43
    ],
    [
      13.81,
      46.51
    ]
  ],
  [
    [
      13.81,
      46.51
    ],
    [
      12.38,
      46.77
    ],
    [
      12.15,
      47.12
    ],
    [
      11.16,
      46.94
    ],
    [
      11.05,
      46.75
    ],
    [
      10.44,
      46.89
    ]
  ],
  [
    [
      10.44,
      46.89
    ],
    [
      9.88,
      46.93
    ],
    [
      9.87,
      47.02
    ]
  ],
  [
    [
      9.87,
      47.02
    ],
    [
      9.61,
      47.06
    ]
  ],
  [
    [
      9.61,
      47.06
    ],
    [
      9.64,
      47.1
    ],
    [
      9.62,
      47.15
    ],
    [
      9.56,
      47.17
    ],
    [
      9.58,
      47.21
    ]
  ],
  [
    [
      9.58,
      47.21
    ],
    [
      9.53,
      47.27
    ],
    [
      9.63,
      47.36
    ]
  ],
  [
    [
      9.63,
      47.36
    ],
    [
      9.59,
      47.53
    ]
  ],
  [
    [
      9.59,
      47.53
    ],
    [
      9.9,
      47.58
    ],
    [
      10.4,
      47.3
    ],
    [
      10.54,
      47.57
    ],
    [
      11.43,
      47.52
    ],
    [
      12.14,
      47.7
    ],
    [
      12.62,
      47.67
    ],
    [
      12.93,
      47.47
    ],
    [
      13.03,
      47.64
    ],
    [
      12.88,
      48.29
    ],
    [
      13.24,
      48.42
    ],
    [
      13.6,
      48.88
    ]
  ],
  [
    [
      13.6,
      48.88
    ],
    [
      14.34,
      48.56
    ],
    [
      14.9,
      48.96
    ],
    [
      15.25,
      49.04
    ],
    [
      16.03,
      48.73
    ],
    [
      16.5,
      48.79
    ],
    [
      16.96,
      48.6
    ]
  ],
  [
    [
      16.96,
      48.6
    ],
    [
      16.88,
      48.47
    ],
    [
      16.98,
      48.12
    ]
  ],
  [
    [
      46.14,
      38.74
    ],
    [
      45.46,
      38.87
    ],
    [
      44.95,
      39.34
    ],
    [
      44.79,
      39.71
    ]
  ],
  [
    [
      47.99,
      41.41
    ],
    [
      48.58,
      41.81
    ],
    [
      49.11,
      41.28
    ],
    [
      49.62,
      40.57
    ],
    [
      50.08,
      40.53
    ],
    [
      50.39,
      40.26
    ],
    [
      49.57,
      40.18
    ],
    [
      49.4,
      39.4
    ],
    [
      49.22,
      39.05
    ],
    [
      48.86,
      38.82
    ],
    [
      48.88,
      38.32
    ]
  ],
  [
    [
      48.88,
      38.32
    ],
    [
      48.63,
      38.27
    ],
    [
      48.01,
      38.79
    ],
    [
      48.36,
      39.29
    ],
    [
      48.06,
      39.58
    ],
    [
      47.69,
      39.51
    ],
    [
      46.51,
      38.77
    ]
  ],
  [
    [
      44.97,
      41.25
    ],
    [
      45.22,
      41.41
    ],
    [
      45.96,
      41.12
    ],
    [
      46.5,
      41.06
    ],
    [
      46.64,
      41.18
    ],
    [
      46.15,
      41.72
    ],
    [
      46.4,
      41.86
    ]
  ],
  [
    [
      46.4,
      41.86
    ],
    [
      46.69,
      41.83
    ],
    [
      47.37,
      41.22
    ],
    [
      47.82,
      41.15
    ],
    [
      47.99,
      41.41
    ]
  ],
  [
    [
      29.34,
      -4.5
    ],
    [
      29.28,
      -3.29
    ],
    [
      29.02,
      -2.84
    ]
  ],
  [
    [
      29.02,
      -2.84
    ],
    [
      29.63,
      -2.92
    ],
    [
      29.94,
      -2.35
    ],
    [
      30.47,
      -2.41
    ]
  ],
  [
    [
      30.47,
      -2.41
    ],
    [
      30.53,
      -2.81
    ],
    [
      30.74,
      -3.03
    ],
    [
      30.75,
      -3.36
    ],
    [
      30.51,
      -3.57
    ],
    [
      30.12,
      -4.09
    ],
    [
      29.75,
      -4.45
    ]
  ],
  [
    [
      29.75,
      -4.45
    ],
    [
      29.34,
      -4.5
    ]
  ],
  [
    [
      4.05,
      51.27
    ],
    [
      4.97,
      51.48
    ],
    [
      5.61,
      51.04
    ],
    [
      6.16,
      50.8
    ]
  ],
  [
    [
      6.16,
      50.8
    ],
    [
      6.04,
      50.13
    ]
  ],
  [
    [
      6.04,
      50.13
    ],
    [
      5.78,
      50.09
    ],
    [
      5.67,
      49.53
    ]
  ],
  [
    [
      5.67,
      49.53
    ],
    [
      4.8,
      49.99
    ],
    [
      4.29,
      49.91
    ],
    [
      3.59,
      50.38
    ],
    [
      3.12,
      50.78
    ],
    [
      2.66,
      50.8
    ],
    [
      2.51,
      51.15
    ]
  ],
  [
    [
      2.51,
      51.15
    ],
    [
      3.31,
      51.35
    ],
    [
      4.05,
      51.27
    ]
  ],
  [
    [
      2.69,
      6.26
    ],
    [
      1.87,
      6.14
    ]
  ],
  [
    [
      1.87,
      6.14
    ],
    [
      1.62,
      6.83
    ],
    [
      1.66,
      9.13
    ],
    [
      1.46,
      9.33
    ],
    [
      1.43,
      9.83
    ],
    [
      1.08,
      10.18
    ],
    [
      0.77,
      10.47
    ],
    [
      0.9,
      11
    ]
  ],
  [
    [
      0.9,
      11
    ],
    [
      1.24,
      11.11
    ],
    [
      1.45,
      11.55
    ],
    [
      1.94,
      11.64
    ],
    [
      2.15,
      11.94
    ]
  ],
  [
    [
      2.15,
      11.94
    ],
    [
      2.49,
      12.23
    ],
    [
      2.85,
      12.24
    ],
    [
      3.61,
      11.66
    ]
  ],
  [
    [
      3.61,
      11.66
    ],
    [
      3.57,
      11.33
    ],
    [
      3.8,
      10.73
    ],
    [
      3.6,
      10.33
    ],
    [
      3.71,
      10.06
    ],
    [
      3.22,
      9.44
    ],
    [
      2.91,
      9.14
    ],
    [
      2.72,
      8.51
    ],
    [
      2.75,
      7.87
    ],
    [
      2.69,
      6.26
    ]
  ],
  [
    [
      -2.83,
      9.64
    ],
    [
      -3.51,
      9.9
    ],
    [
      -3.98,
      9.86
    ],
    [
      -4.33,
      9.61
    ],
    [
      -4.78,
      9.82
    ],
    [
      -4.95,
      10.15
    ],
    [
      -5.4,
      10.37
    ]
  ],
  [
    [
      -5.4,
      10.37
    ],
    [
      -5.47,
      10.95
    ],
    [
      -5.2,
      11.38
    ],
    [
      -5.22,
      11.71
    ],
    [
      -4.43,
      12.54
    ],
    [
      -4.28,
      13.23
    ],
    [
      -4.01,
      13.47
    ],
    [
      -3.52,
      13.34
    ],
    [
      -3.1,
      13.54
    ],
    [
      -2.97,
      13.8
    ],
    [
      -2.19,
      14.25
    ],
    [
      -2,
      14.56
    ],
    [
      -1.07,
      14.97
    ],
    [
      -0.52,
      15.12
    ],
    [
      -0.27,
      14.92
    ],
    [
      0.37,
      14.93
    ]
  ],
  [
    [
      0.37,
      14.93
    ],
    [
      0.3,
      14.44
    ],
    [
      0.43,
      13.99
    ],
    [
      0.99,
      13.34
    ],
    [
      1.02,
      12.85
    ],
    [
      2.18,
      12.63
    ],
    [
      2.15,
      11.94
    ]
  ],
  [
    [
      0.9,
      11
    ],
    [
      0.02,
      11.02
    ]
  ],
  [
    [
      0.02,
      11.02
    ],
    [
      -0.44,
      11.1
    ],
    [
      -0.76,
      10.94
    ],
    [
      -1.2,
      11.01
    ],
    [
      -2.94,
      10.96
    ],
    [
      -2.96,
      10.4
    ],
    [
      -2.83,
      9.64
    ]
  ],
  [
    [
      92.67,
      22.04
    ],
    [
      92.65,
      21.32
    ],
    [
      92.3,
      21.48
    ],
    [
      92.37,
      20.67
    ]
  ],
  [
    [
      92.37,
      20.67
    ],
    [
      92.08,
      21.19
    ],
    [
      92.03,
      21.7
    ],
    [
      91.83,
      22.18
    ],
    [
      91.42,
      22.77
    ],
    [
      90.5,
      22.81
    ],
    [
      90.59,
      22.39
    ],
    [
      90.27,
      21.84
    ],
    [
      89.85,
      22.04
    ],
    [
      89.7,
      21.86
    ],
    [
      89.42,
      21.97
    ],
    [
      89.03,
      22.06
    ]
  ],
  [
    [
      89.03,
      22.06
    ],
    [
      88.88,
      22.88
    ],
    [
      88.53,
      23.63
    ],
    [
      88.7,
      24.23
    ],
    [
      88.08,
      24.5
    ],
    [
      88.31,
      24.87
    ],
    [
      88.93,
      25.24
    ],
    [
      88.21,
      25.77
    ],
    [
      88.56,
      26.45
    ],
    [
      89.36,
      26.01
    ],
    [
      89.83,
      25.97
    ],
    [
      89.92,
      25.27
    ],
    [
      90.87,
      25.13
    ],
    [
      91.8,
      25.15
    ],
    [
      92.38,
      24.98
    ],
    [
      91.92,
      24.13
    ],
    [
      91.47,
      24.07
    ],
    [
      91.16,
      23.5
    ],
    [
      91.71,
      22.99
    ],
    [
      91.87,
      23.62
    ],
    [
      92.15,
      23.63
    ],
    [
      92.67,
      22.04
    ]
  ],
  [
    [
      22.66,
      44.23
    ],
    [
      22.94,
      43.82
    ],
    [
      23.33,
      43.9
    ],
    [
      24.1,
      43.74
    ],
    [
      25.57,
      43.69
    ],
    [
      26.07,
      43.94
    ],
    [
      27.24,
      44.18
    ],
    [
      27.97,
      43.81
    ],
    [
      28.56,
      43.71
    ]
  ],
  [
    [
      28.56,
      43.71
    ],
    [
      28.04,
      43.29
    ],
    [
      27.67,
      42.58
    ],
    [
      28,
      42.01
    ]
  ],
  [
    [
      28,
      42.01
    ],
    [
      27.14,
      42.14
    ],
    [
      26.12,
      41.83
    ]
  ],
  [
    [
      26.12,
      41.83
    ],
    [
      26.11,
      41.33
    ],
    [
      25.2,
      41.23
    ],
    [
      24.49,
      41.58
    ],
    [
      23.69,
      41.31
    ],
    [
      22.95,
      41.34
    ]
  ],
  [
    [
      22.95,
      41.34
    ],
    [
      22.88,
      42
    ],
    [
      22.38,
      42.32
    ]
  ],
  [
    [
      22.38,
      42.32
    ],
    [
      22.55,
      42.46
    ],
    [
      22.44,
      42.58
    ],
    [
      22.6,
      42.9
    ],
    [
      22.99,
      43.21
    ],
    [
      22.5,
      43.64
    ],
    [
      22.41,
      44.01
    ],
    [
      22.66,
      44.23
    ]
  ],
  [
    [
      -77.53,
      23.76
    ],
    [
      -77.78,
      23.71
    ],
    [
      -78.03,
      24.29
    ],
    [
      -78.41,
      24.58
    ],
    [
      -78.19,
      25.21
    ],
    [
      -77.89,
      25.17
    ],
    [
      -77.54,
      24.34
    ],
    [
      -77.53,
      23.76
    ]
  ],
  [
    [
      -77.82,
      26.58
    ],
    [
      -78.91,
      26.42
    ],
    [
      -78.98,
      26.79
    ],
    [
      -78.51,
      26.87
    ],
    [
      -77.85,
      26.84
    ],
    [
      -77.82,
      26.58
    ]
  ],
  [
    [
      -77,
      26.59
    ],
    [
      -77.17,
      25.88
    ],
    [
      -77.36,
      26.01
    ],
    [
      -77.34,
      26.53
    ],
    [
      -77.79,
      26.93
    ],
    [
      -77.79,
      27.04
    ],
    [
      -77,
      26.59
    ]
  ],
  [
    [
      19.01,
      44.86
    ],
    [
      19.37,
      44.86
    ]
  ],
  [
    [
      19.37,
      44.86
    ],
    [
      19.12,
      44.42
    ],
    [
      19.6,
      44.04
    ],
    [
      19.45,
      43.57
    ],
    [
      19.22,
      43.52
    ]
  ],
  [
    [
      19.22,
      43.52
    ],
    [
      19.03,
      43.43
    ],
    [
      18.71,
      43.2
    ],
    [
      18.56,
      42.65
    ]
  ],
  [
    [
      18.56,
      42.65
    ],
    [
      17.67,
      43.03
    ],
    [
      17.3,
      43.45
    ],
    [
      16.92,
      43.67
    ],
    [
      16.46,
      44.04
    ],
    [
      16.24,
      44.35
    ],
    [
      15.75,
      44.82
    ],
    [
      15.96,
      45.23
    ],
    [
      16.32,
      45
    ],
    [
      16.53,
      45.21
    ],
    [
      17,
      45.23
    ],
    [
      17.86,
      45.07
    ],
    [
      18.55,
      45.08
    ],
    [
      19.01,
      44.86
    ]
  ],
  [
    [
      23.48,
      53.91
    ],
    [
      24.45,
      53.91
    ],
    [
      25.54,
      54.28
    ],
    [
      25.77,
      54.85
    ],
    [
      26.59,
      55.17
    ],
    [
      26.49,
      55.62
    ]
  ],
  [
    [
      26.49,
      55.62
    ],
    [
      27.1,
      55.78
    ],
    [
      28.18,
      56.17
    ]
  ],
  [
    [
      28.18,
      56.17
    ],
    [
      29.23,
      55.92
    ],
    [
      29.37,
      55.67
    ],
    [
      29.9,
      55.79
    ],
    [
      30.87,
      55.55
    ],
    [
      30.97,
      55.08
    ],
    [
      30.76,
      54.81
    ],
    [
      31.38,
      54.16
    ],
    [
      31.79,
      53.97
    ],
    [
      31.73,
      53.79
    ],
    [
      32.41,
      53.62
    ],
    [
      32.69,
      53.35
    ],
    [
      32.3,
      53.13
    ]
  ],
  [
    [
      32.3,
      53.13
    ],
    [
      31.5,
      53.17
    ],
    [
      31.31,
      53.07
    ]
  ],
  [
    [
      31.31,
      53.07
    ],
    [
      31.54,
      52.74
    ]
  ],
  [
    [
      31.54,
      52.74
    ],
    [
      31.79,
      52.1
    ]
  ],
  [
    [
      31.79,
      52.1
    ],
    [
      30.93,
      52.04
    ],
    [
      30.62,
      51.82
    ],
    [
      30.56,
      51.32
    ],
    [
      30.16,
      51.42
    ],
    [
      29.25,
      51.37
    ],
    [
      28.99,
      51.6
    ],
    [
      28.62,
      51.43
    ],
    [
      28.24,
      51.57
    ],
    [
      27.45,
      51.59
    ],
    [
      26.34,
      51.83
    ],
    [
      25.33,
      51.91
    ],
    [
      24.55,
      51.89
    ],
    [
      24.01,
      51.62
    ],
    [
      23.53,
      51.58
    ]
  ],
  [
    [
      23.53,
      51.58
    ],
    [
      23.51,
      52.02
    ],
    [
      23.2,
      52.49
    ],
    [
      23.8,
      52.69
    ],
    [
      23.8,
      53.09
    ],
    [
      23.53,
      53.47
    ],
    [
      23.48,
      53.91
    ]
  ],
  [
    [
      -89.14,
      17.81
    ],
    [
      -89.15,
      17.96
    ],
    [
      -89.03,
      18
    ],
    [
      -88.85,
      17.88
    ],
    [
      -88.49,
      18.49
    ],
    [
      -88.3,
      18.5
    ]
  ],
  [
    [
      -88.3,
      18.5
    ],
    [
      -88.3,
      18.35
    ],
    [
      -88.11,
      18.35
    ],
    [
      -88.12,
      18.08
    ],
    [
      -88.29,
      17.64
    ],
    [
      -88.2,
      17.49
    ],
    [
      -88.3,
      17.13
    ],
    [
      -88.24,
      17.04
    ],
    [
      -88.36,
      16.53
    ],
    [
      -88.55,
      16.27
    ],
    [
      -88.73,
      16.23
    ],
    [
      -88.93,
      15.89
    ]
  ],
  [
    [
      -88.93,
      15.89
    ],
    [
      -89.23,
      15.89
    ],
    [
      -89.15,
      17.02
    ],
    [
      -89.14,
      17.81
    ]
  ],
  [
    [
      -67.11,
      -22.74
    ],
    [
      -67.83,
      -22.87
    ],
    [
      -68.22,
      -21.49
    ],
    [
      -68.76,
      -20.37
    ],
    [
      -68.44,
      -19.41
    ],
    [
      -68.97,
      -18.98
    ],
    [
      -69.1,
      -18.26
    ],
    [
      -69.59,
      -17.58
    ]
  ],
  [
    [
      -69.59,
      -17.58
    ],
    [
      -68.96,
      -16.5
    ],
    [
      -69.39,
      -15.66
    ],
    [
      -69.16,
      -15.32
    ],
    [
      -69.34,
      -14.95
    ],
    [
      -68.95,
      -14.45
    ],
    [
      -68.93,
      -13.6
    ],
    [
      -68.88,
      -12.9
    ],
    [
      -68.67,
      -12.56
    ],
    [
      -69.53,
      -10.95
    ]
  ],
  [
    [
      -69.53,
      -10.95
    ],
    [
      -68.79,
      -11.04
    ],
    [
      -68.27,
      -11.01
    ],
    [
      -68.05,
      -10.71
    ],
    [
      -67.17,
      -10.31
    ],
    [
      -66.65,
      -9.93
    ],
    [
      -65.34,
      -9.76
    ],
    [
      -65.44,
      -10.51
    ],
    [
      -65.32,
      -10.9
    ],
    [
      -65.4,
      -11.57
    ],
    [
      -64.32,
      -12.46
    ],
    [
      -63.2,
      -12.63
    ],
    [
      -62.8,
      -13
    ],
    [
      -62.13,
      -13.2
    ],
    [
      -61.71,
      -13.49
    ],
    [
      -61.08,
      -13.48
    ],
    [
      -60.5,
      -13.78
    ],
    [
      -60.46,
      -14.35
    ],
    [
      -60.26,
      -14.65
    ],
    [
      -60.25,
      -15.08
    ],
    [
      -60.54,
      -15.09
    ],
    [
      -60.16,
      -16.26
    ],
    [
      -58.24,
      -16.3
    ],
    [
      -58.39,
      -16.88
    ],
    [
      -58.28,
      -17.27
    ],
    [
      -57.73,
      -17.55
    ],
    [
      -57.5,
      -18.17
    ],
    [
      -57.68,
      -18.96
    ],
    [
      -57.95,
      -19.4
    ],
    [
      -57.85,
      -19.97
    ],
    [
      -58.17,
      -20.18
    ]
  ],
  [
    [
      -58.17,
      -20.18
    ],
    [
      -58.18,
      -19.87
    ],
    [
      -59.12,
      -19.36
    ],
    [
      -60.04,
      -19.34
    ],
    [
      -61.79,
      -19.63
    ],
    [
      -62.27,
      -20.51
    ],
    [
      -62.29,
      -21.05
    ],
    [
      -62.69,
      -22.25
    ]
  ],
  [
    [
      -54.63,
      -25.74
    ],
    [
      -54.43,
      -25.16
    ],
    [
      -54.29,
      -24.57
    ],
    [
      -54.29,
      -24.02
    ],
    [
      -54.65,
      -23.84
    ],
    [
      -55.03,
      -24
    ],
    [
      -55.4,
      -23.96
    ],
    [
      -55.52,
      -23.57
    ],
    [
      -55.61,
      -22.66
    ],
    [
      -55.8,
      -22.36
    ],
    [
      -56.47,
      -22.09
    ],
    [
      -56.88,
      -22.28
    ],
    [
      -57.94,
      -22.09
    ],
    [
      -57.87,
      -20.73
    ],
    [
      -58.17,
      -20.18
    ]
  ],
  [
    [
      -69.53,
      -10.95
    ],
    [
      -70.09,
      -11.12
    ],
    [
      -70.55,
      -11.01
    ],
    [
      -70.48,
      -9.49
    ],
    [
      -71.3,
      -10.08
    ],
    [
      -72.18,
      -10.05
    ],
    [
      -72.56,
      -9.52
    ],
    [
      -73.23,
      -9.46
    ],
    [
      -73.02,
      -9.03
    ],
    [
      -73.57,
      -8.42
    ],
    [
      -73.99,
      -7.52
    ],
    [
      -73.72,
      -7.34
    ],
    [
      -73.72,
      -6.92
    ],
    [
      -73.12,
      -6.63
    ],
    [
      -73.22,
      -6.09
    ],
    [
      -72.96,
      -5.74
    ],
    [
      -72.89,
      -5.27
    ],
    [
      -71.75,
      -4.59
    ],
    [
      -70.93,
      -4.4
    ],
    [
      -70.79,
      -4.25
    ],
    [
      -69.89,
      -4.3
    ]
  ],
  [
    [
      -69.89,
      -4.3
    ],
    [
      -69.44,
      -1.56
    ],
    [
      -69.42,
      -1.12
    ],
    [
      -69.58,
      -0.55
    ],
    [
      -70.02,
      -0.19
    ],
    [
      -70.02,
      0.54
    ],
    [
      -69.45,
      0.71
    ],
    [
      -69.25,
      0.6
    ],
    [
      -69.22,
      0.99
    ],
    [
      -69.8,
      1.09
    ],
    [
      -69.82,
      1.71
    ],
    [
      -67.87,
      1.69
    ],
    [
      -67.54,
      2.04
    ],
    [
      -67.26,
      1.72
    ],
    [
      -67.07,
      1.13
    ],
    [
      -66.88,
      1.25
    ]
  ],
  [
    [
      -66.88,
      1.25
    ],
    [
      -66.33,
      0.72
    ],
    [
      -65.55,
      0.79
    ],
    [
      -65.35,
      1.1
    ],
    [
      -64.61,
      1.33
    ],
    [
      -64.2,
      1.49
    ],
    [
      -64.08,
      1.92
    ],
    [
      -63.37,
      2.2
    ],
    [
      -63.42,
      2.41
    ],
    [
      -64.27,
      2.5
    ],
    [
      -64.41,
      3.13
    ],
    [
      -64.37,
      3.8
    ],
    [
      -64.82,
      4.06
    ],
    [
      -64.63,
      4.15
    ],
    [
      -63.89,
      4.02
    ],
    [
      -63.09,
      3.77
    ],
    [
      -62.8,
      4.01
    ],
    [
      -62.09,
      4.16
    ],
    [
      -60.97,
      4.54
    ],
    [
      -60.6,
      4.92
    ],
    [
      -60.73,
      5.2
    ]
  ],
  [
    [
      -60.73,
      5.2
    ],
    [
      -60.21,
      5.24
    ],
    [
      -59.98,
      5.01
    ],
    [
      -60.11,
      4.57
    ],
    [
      -59.77,
      4.42
    ],
    [
      -59.54,
      3.96
    ],
    [
      -59.82,
      3.61
    ],
    [
      -59.97,
      2.76
    ],
    [
      -59.72,
      2.25
    ],
    [
      -59.65,
      1.79
    ],
    [
      -59.03,
      1.32
    ],
    [
      -58.54,
      1.27
    ],
    [
      -58.43,
      1.46
    ],
    [
      -58.11,
      1.51
    ],
    [
      -57.66,
      1.68
    ],
    [
      -57.34,
      1.95
    ],
    [
      -56.78,
      1.86
    ],
    [
      -56.54,
      1.9
    ]
  ],
  [
    [
      -56.54,
      1.9
    ],
    [
      -56,
      1.82
    ],
    [
      -55.91,
      2.02
    ],
    [
      -56.07,
      2.22
    ],
    [
      -55.97,
      2.51
    ],
    [
      -55.57,
      2.42
    ],
    [
      -55.1,
      2.52
    ],
    [
      -54.52,
      2.31
    ]
  ],
  [
    [
      -54.52,
      2.31
    ],
    [
      -54.09,
      2.11
    ],
    [
      -53.78,
      2.38
    ],
    [
      -53.55,
      2.33
    ],
    [
      -53.42,
      2.05
    ],
    [
      -52.94,
      2.12
    ],
    [
      -52.56,
      2.5
    ],
    [
      -52.25,
      3.24
    ],
    [
      -51.66,
      4.16
    ]
  ],
  [
    [
      -51.66,
      4.16
    ],
    [
      -51.32,
      4.2
    ],
    [
      -51.07,
      3.65
    ],
    [
      -50.51,
      1.9
    ],
    [
      -49.97,
      1.74
    ],
    [
      -49.95,
      1.05
    ],
    [
      -50.7,
      0.22
    ],
    [
      -50.39,
      -0.08
    ],
    [
      -48.62,
      -0.24
    ],
    [
      -48.58,
      -1.24
    ],
    [
      -47.82,
      -0.58
    ],
    [
      -46.57,
      -0.94
    ],
    [
      -44.91,
      -1.55
    ],
    [
      -44.42,
      -2.14
    ],
    [
      -44.58,
      -2.69
    ],
    [
      -43.42,
      -2.38
    ],
    [
      -41.47,
      -2.91
    ],
    [
      -39.98,
      -2.87
    ],
    [
      -38.5,
      -3.7
    ],
    [
      -37.22,
      -4.82
    ],
    [
      -36.45,
      -5.11
    ],
    [
      -35.6,
      -5.15
    ],
    [
      -35.24,
      -5.46
    ],
    [
      -34.9,
      -6.74
    ],
    [
      -34.73,
      -7.34
    ],
    [
      -35.13,
      -9
    ],
    [
      -35.64,
      -9.65
    ],
    [
      -37.05,
      -11.04
    ],
    [
      -37.68,
      -12.17
    ],
    [
      -38.42,
      -13.04
    ],
    [
      -38.67,
      -13.06
    ],
    [
      -38.95,
      -13.79
    ],
    [
      -38.88,
      -15.67
    ],
    [
      -39.16,
      -17.21
    ],
    [
      -39.27,
      -17.87
    ],
    [
      -39.58,
      -18.26
    ],
    [
      -39.76,
      -19.6
    ],
    [
      -40.77,
      -20.9
    ],
    [
      -40.94,
      -21.94
    ],
    [
      -41.75,
      -22.37
    ],
    [
      -41.99,
      -22.97
    ],
    [
      -43.07,
      -22.97
    ],
    [
      -44.65,
      -23.35
    ],
    [
      -45.35,
      -23.8
    ],
    [
      -46.47,
      -24.09
    ],
    [
      -47.65,
      -24.89
    ],
    [
      -48.5,
      -25.88
    ],
    [
      -48.64,
      -26.62
    ],
    [
      -48.47,
      -27.18
    ],
    [
      -48.66,
      -28.19
    ],
    [
      -48.89,
      -28.67
    ],
    [
      -49.59,
      -29.22
    ],
    [
      -50.7,
      -30.98
    ],
    [
      -51.58,
      -31.78
    ],
    [
      -52.26,
      -32.25
    ],
    [
      -52.71,
      -33.2
    ],
    [
      -53.37,
      -33.77
    ]
  ],
  [
    [
      -53.37,
      -33.77
    ],
    [
      -53.65,
      -33.2
    ],
    [
      -53.21,
      -32.73
    ],
    [
      -53.79,
      -32.05
    ],
    [
      -54.57,
      -31.49
    ],
    [
      -55.6,
      -30.85
    ],
    [
      -55.97,
      -30.88
    ],
    [
      -56.98,
      -30.11
    ],
    [
      -57.63,
      -30.22
    ]
  ],
  [
    [
      114.2,
      4.53
    ],
    [
      114.6,
      4.9
    ],
    [
      115.45,
      5.45
    ]
  ],
  [
    [
      115.45,
      5.45
    ],
    [
      115.41,
      4.96
    ],
    [
      115.35,
      4.32
    ],
    [
      114.87,
      4.35
    ],
    [
      114.66,
      4.01
    ],
    [
      114.2,
      4.53
    ]
  ],
  [
    [
      91.7,
      27.77
    ],
    [
      92.1,
      27.45
    ],
    [
      92.03,
      26.84
    ],
    [
      91.22,
      26.81
    ],
    [
      90.37,
      26.88
    ],
    [
      89.74,
      26.72
    ],
    [
      88.84,
      27.1
    ],
    [
      88.81,
      27.3
    ]
  ],
  [
    [
      88.81,
      27.3
    ],
    [
      89.48,
      28.04
    ],
    [
      90.02,
      28.3
    ],
    [
      90.73,
      28.06
    ],
    [
      91.26,
      28.04
    ],
    [
      91.7,
      27.77
    ]
  ],
  [
    [
      29.43,
      -22.09
    ],
    [
      28.02,
      -22.83
    ],
    [
      27.12,
      -23.57
    ],
    [
      26.79,
      -24.24
    ],
    [
      26.49,
      -24.62
    ],
    [
      25.94,
      -24.7
    ],
    [
      25.77,
      -25.17
    ],
    [
      25.66,
      -25.49
    ],
    [
      25.03,
      -25.72
    ],
    [
      24.21,
      -25.67
    ],
    [
      23.73,
      -25.39
    ],
    [
      23.31,
      -25.27
    ],
    [
      22.82,
      -25.5
    ],
    [
      22.58,
      -25.98
    ],
    [
      22.11,
      -26.28
    ],
    [
      21.61,
      -26.73
    ],
    [
      20.89,
      -26.83
    ],
    [
      20.67,
      -26.48
    ],
    [
      20.76,
      -25.87
    ],
    [
      20.17,
      -24.92
    ],
    [
      19.9,
      -24.77
    ]
  ],
  [
    [
      19.9,
      -24.77
    ],
    [
      19.9,
      -21.85
    ],
    [
      20.88,
      -21.81
    ],
    [
      20.91,
      -18.25
    ],
    [
      21.66,
      -18.22
    ],
    [
      23.2,
      -17.87
    ],
    [
      23.58,
      -18.28
    ],
    [
      24.22,
      -17.89
    ],
    [
      24.52,
      -17.89
    ],
    [
      25.08,
      -17.66
    ]
  ],
  [
    [
      25.08,
      -17.66
    ],
    [
      25.26,
      -17.74
    ]
  ],
  [
    [
      25.26,
      -17.74
    ],
    [
      25.65,
      -18.54
    ],
    [
      25.85,
      -18.71
    ],
    [
      26.16,
      -19.29
    ],
    [
      27.3,
      -20.39
    ],
    [
      27.72,
      -20.5
    ],
    [
      27.73,
      -20.85
    ],
    [
      28.02,
      -21.49
    ],
    [
      28.79,
      -21.64
    ],
    [
      29.43,
      -22.09
    ]
  ],
  [
    [
      15.28,
      7.42
    ],
    [
      16.11,
      7.5
    ],
    [
      16.29,
      7.75
    ],
    [
      16.46,
      7.73
    ],
    [
      16.71,
      7.51
    ],
    [
      17.96,
      7.89
    ],
    [
      18.39,
      8.28
    ],
    [
      18.91,
      8.63
    ],
    [
      18.81,
      8.98
    ],
    [
      19.09,
      9.07
    ],
    [
      20.06,
      9.01
    ],
    [
      21,
      9.48
    ],
    [
      21.72,
      10.57
    ],
    [
      22.23,
      10.97
    ],
    [
      22.86,
      11.14
    ]
  ],
  [
    [
      22.86,
      11.14
    ],
    [
      22.98,
      10.71
    ],
    [
      23.55,
      10.09
    ],
    [
      23.56,
      9.68
    ],
    [
      23.39,
      9.27
    ],
    [
      23.46,
      8.95
    ],
    [
      23.81,
      8.67
    ]
  ],
  [
    [
      23.81,
      8.67
    ],
    [
      24.57,
      8.23
    ]
  ],
  [
    [
      24.57,
      8.23
    ],
    [
      25.11,
      7.83
    ],
    [
      25.12,
      7.5
    ],
    [
      25.8,
      6.98
    ],
    [
      26.21,
      6.55
    ],
    [
      26.47,
      5.95
    ],
    [
      27.21,
      5.55
    ],
    [
      27.37,
      5.23
    ]
  ],
  [
    [
      27.37,
      5.23
    ],
    [
      27.04,
      5.13
    ],
    [
      26.4,
      5.15
    ],
    [
      25.65,
      5.26
    ],
    [
      25.28,
      5.17
    ],
    [
      25.13,
      4.93
    ],
    [
      24.81,
      4.9
    ],
    [
      24.41,
      5.11
    ],
    [
      23.3,
      4.61
    ],
    [
      22.84,
      4.71
    ],
    [
      22.7,
      4.63
    ],
    [
      22.41,
      4.03
    ],
    [
      21.66,
      4.22
    ],
    [
      20.93,
      4.32
    ],
    [
      20.29,
      4.69
    ],
    [
      19.47,
      5.03
    ],
    [
      18.93,
      4.71
    ],
    [
      18.54,
      4.2
    ],
    [
      18.45,
      3.5
    ]
  ],
  [
    [
      18.45,
      3.5
    ],
    [
      17.81,
      3.56
    ],
    [
      17.13,
      3.73
    ],
    [
      16.54,
      3.2
    ],
    [
      16.01,
      2.27
    ]
  ],
  [
    [
      16.01,
      2.27
    ],
    [
      15.91,
      2.56
    ],
    [
      15.86,
      3.01
    ],
    [
      15.41,
      3.34
    ],
    [
      15.04,
      3.85
    ],
    [
      14.95,
      4.21
    ],
    [
      14.48,
      4.73
    ],
    [
      14.56,
      5.03
    ],
    [
      14.46,
      5.45
    ],
    [
      14.54,
      6.23
    ],
    [
      14.78,
      6.41
    ],
    [
      15.28,
      7.42
    ]
  ],
  [
    [
      -63.66,
      46.55
    ],
    [
      -62.94,
      46.42
    ],
    [
      -62.01,
      46.44
    ],
    [
      -62.5,
      46.03
    ],
    [
      -62.87,
      45.97
    ],
    [
      -64.14,
      46.39
    ],
    [
      -64.39,
      46.73
    ],
    [
      -64.01,
      47.04
    ],
    [
      -63.66,
      46.55
    ]
  ],
  [
    [
      -61.81,
      49.11
    ],
    [
      -62.29,
      49.09
    ],
    [
      -63.59,
      49.4
    ],
    [
      -64.52,
      49.87
    ],
    [
      -64.17,
      49.96
    ],
    [
      -62.86,
      49.71
    ],
    [
      -61.84,
      49.29
    ],
    [
      -61.81,
      49.11
    ]
  ],
  [
    [
      -123.51,
      48.51
    ],
    [
      -124.01,
      48.37
    ],
    [
      -125.66,
      48.83
    ],
    [
      -125.95,
      49.18
    ],
    [
      -126.85,
      49.53
    ],
    [
      -127.03,
      49.81
    ],
    [
      -128.06,
      49.99
    ],
    [
      -128.44,
      50.54
    ],
    [
      -128.36,
      50.77
    ],
    [
      -127.31,
      50.55
    ],
    [
      -126.7,
      50.4
    ],
    [
      -125.76,
      50.3
    ],
    [
      -125.42,
      49.95
    ],
    [
      -124.92,
      49.48
    ],
    [
      -123.92,
      49.06
    ],
    [
      -123.51,
      48.51
    ]
  ],
  [
    [
      -56.13,
      50.69
    ],
    [
      -56.8,
      49.81
    ],
    [
      -56.14,
      50.15
    ],
    [
      -55.47,
      49.94
    ],
    [
      -55.82,
      49.59
    ],
    [
      -54.94,
      49.31
    ],
    [
      -54.47,
      49.56
    ],
    [
      -53.48,
      49.25
    ],
    [
      -53.79,
      48.52
    ],
    [
      -53.09,
      48.69
    ],
    [
      -52.96,
      48.16
    ],
    [
      -52.65,
      47.54
    ],
    [
      -53.07,
      46.66
    ],
    [
      -53.52,
      46.62
    ],
    [
      -54.18,
      46.81
    ],
    [
      -53.96,
      47.63
    ],
    [
      -54.24,
      47.75
    ],
    [
      -55.4,
      46.88
    ],
    [
      -56,
      46.92
    ],
    [
      -55.29,
      47.39
    ],
    [
      -56.25,
      47.63
    ],
    [
      -57.33,
      47.57
    ],
    [
      -59.27,
      47.6
    ],
    [
      -59.42,
      47.9
    ],
    [
      -58.8,
      48.25
    ],
    [
      -59.23,
      48.52
    ],
    [
      -58.39,
      49.13
    ],
    [
      -57.36,
      50.72
    ],
    [
      -56.74,
      51.29
    ],
    [
      -55.87,
      51.63
    ],
    [
      -55.41,
      51.59
    ],
    [
      -55.6,
      51.32
    ],
    [
      -56.13,
      50.69
    ]
  ],
  [
    [
      -132.71,
      54.04
    ],
    [
      -132.71,
      54.04
    ],
    [
      -132.71,
      54.04
    ],
    [
      -132.71,
      54.04
    ],
    [
      -131.75,
      54.12
    ],
    [
      -132.05,
      52.98
    ],
    [
      -131.18,
      52.18
    ],
    [
      -131.58,
      52.18
    ],
    [
      -132.18,
      52.64
    ],
    [
      -132.55,
      53.1
    ],
    [
      -133.05,
      53.41
    ],
    [
      -133.24,
      53.85
    ],
    [
      -133.18,
      54.17
    ],
    [
      -132.71,
      54.04
    ]
  ],
  [
    [
      -79.27,
      62.16
    ],
    [
      -79.66,
      61.63
    ],
    [
      -80.1,
      61.72
    ],
    [
      -80.36,
      62.02
    ],
    [
      -80.32,
      62.09
    ],
    [
      -79.93,
      62.39
    ],
    [
      -79.52,
      62.36
    ],
    [
      -79.27,
      62.16
    ]
  ],
  [
    [
      -81.9,
      62.71
    ],
    [
      -83.07,
      62.16
    ],
    [
      -83.77,
      62.18
    ],
    [
      -83.99,
      62.45
    ],
    [
      -83.25,
      62.91
    ],
    [
      -81.88,
      62.9
    ],
    [
      -81.9,
      62.71
    ]
  ],
  [
    [
      -85.16,
      65.66
    ],
    [
      -84.98,
      65.22
    ],
    [
      -84.46,
      65.37
    ],
    [
      -83.88,
      65.11
    ],
    [
      -82.79,
      64.77
    ],
    [
      -81.64,
      64.46
    ],
    [
      -81.55,
      63.98
    ],
    [
      -80.82,
      64.06
    ],
    [
      -80.1,
      63.73
    ],
    [
      -80.99,
      63.41
    ],
    [
      -82.55,
      63.65
    ],
    [
      -83.11,
      64.1
    ],
    [
      -84.1,
      63.57
    ],
    [
      -85.52,
      63.05
    ],
    [
      -85.87,
      63.64
    ],
    [
      -87.22,
      63.54
    ],
    [
      -86.35,
      64.04
    ],
    [
      -86.22,
      64.82
    ],
    [
      -85.88,
      65.74
    ],
    [
      -85.16,
      65.66
    ]
  ],
  [
    [
      -75.87,
      67.15
    ],
    [
      -76.99,
      67.1
    ],
    [
      -77.24,
      67.59
    ],
    [
      -76.81,
      68.15
    ],
    [
      -75.9,
      68.29
    ],
    [
      -75.11,
      68.01
    ],
    [
      -75.1,
      67.58
    ],
    [
      -75.22,
      67.44
    ],
    [
      -75.87,
      67.15
    ]
  ],
  [
    [
      -95.65,
      69.11
    ],
    [
      -96.27,
      68.76
    ],
    [
      -97.62,
      69.06
    ],
    [
      -98.43,
      68.95
    ],
    [
      -99.8,
      69.4
    ],
    [
      -98.92,
      69.71
    ],
    [
      -98.22,
      70.14
    ],
    [
      -97.16,
      69.86
    ],
    [
      -96.56,
      69.68
    ],
    [
      -96.26,
      69.49
    ],
    [
      -95.65,
      69.11
    ]
  ],
  [
    [
      -67.14,
      45.14
    ],
    [
      -67.79,
      45.7
    ],
    [
      -67.79,
      47.07
    ],
    [
      -68.23,
      47.35
    ],
    [
      -68.9,
      47.19
    ],
    [
      -69.24,
      47.45
    ],
    [
      -70,
      46.69
    ],
    [
      -70.31,
      45.92
    ],
    [
      -70.66,
      45.46
    ],
    [
      -71.08,
      45.31
    ],
    [
      -71.4,
      45.26
    ],
    [
      -71.51,
      45.01
    ],
    [
      -73.35,
      45.01
    ],
    [
      -74.87,
      45
    ],
    [
      -75.32,
      44.82
    ],
    [
      -76.37,
      44.1
    ],
    [
      -76.5,
      44.02
    ],
    [
      -76.82,
      43.63
    ],
    [
      -77.74,
      43.63
    ],
    [
      -78.72,
      43.63
    ],
    [
      -79.17,
      43.47
    ],
    [
      -79.01,
      43.27
    ],
    [
      -78.92,
      42.97
    ],
    [
      -78.94,
      42.86
    ],
    [
      -80.25,
      42.37
    ],
    [
      -81.28,
      42.21
    ],
    [
      -82.44,
      41.68
    ],
    [
      -82.69,
      41.68
    ],
    [
      -83.03,
      41.83
    ],
    [
      -83.14,
      41.98
    ],
    [
      -83.12,
      42.08
    ],
    [
      -82.9,
      42.43
    ],
    [
      -82.43,
      42.98
    ],
    [
      -82.14,
      43.57
    ],
    [
      -82.34,
      44.44
    ],
    [
      -82.55,
      45.35
    ],
    [
      -83.59,
      45.82
    ],
    [
      -83.47,
      45.99
    ],
    [
      -83.62,
      46.12
    ],
    [
      -83.89,
      46.12
    ],
    [
      -84.09,
      46.28
    ],
    [
      -84.14,
      46.51
    ],
    [
      -84.34,
      46.41
    ],
    [
      -84.6,
      46.44
    ],
    [
      -84.54,
      46.54
    ],
    [
      -84.78,
      46.64
    ],
    [
      -84.88,
      46.9
    ],
    [
      -85.65,
      47.22
    ],
    [
      -86.46,
      47.55
    ],
    [
      -87.44,
      47.94
    ],
    [
      -88.38,
      48.3
    ],
    [
      -89.27,
      48.02
    ],
    [
      -89.6,
      48.01
    ],
    [
      -90.83,
      48.27
    ],
    [
      -91.64,
      48.14
    ],
    [
      -92.61,
      48.45
    ],
    [
      -93.63,
      48.61
    ],
    [
      -94.33,
      48.67
    ],
    [
      -94.64,
      48.84
    ],
    [
      -94.82,
      49.39
    ],
    [
      -95.16,
      49.38
    ],
    [
      -95.16,
      49
    ],
    [
      -97.23,
      49
    ],
    [
      -100.65,
      49
    ],
    [
      -104.05,
      49
    ],
    [
      -107.05,
      49
    ],
    [
      -110.05,
      49
    ],
    [
      -113,
      49
    ],
    [
      -116.05,
      49
    ],
    [
      -117.03,
      49
    ],
    [
      -120,
      49
    ],
    [
      -122.84,
      49
    ]
  ],
  [
    [
      -122.84,
      49
    ],
    [
      -122.97,
      49
    ],
    [
      -124.91,
      49.98
    ],
    [
      -125.62,
      50.42
    ],
    [
      -127.44,
      50.83
    ],
    [
      -127.99,
      51.72
    ],
    [
      -127.85,
      52.33
    ],
    [
      -129.13,
      52.76
    ],
    [
      -129.31,
      53.56
    ],
    [
      -130.51,
      54.29
    ],
    [
      -130.54,
      54.8
    ],
    [
      -129.98,
      55.29
    ],
    [
      -130.01,
      55.92
    ]
  ],
  [
    [
      -130.01,
      55.92
    ],
    [
      -131.71,
      56.55
    ],
    [
      -132.73,
      57.69
    ]
  ],
  [
    [
      -132.73,
      57.69
    ],
    [
      -133.36,
      58.41
    ],
    [
      -134.27,
      58.86
    ]
  ],
  [
    [
      -134.27,
      58.86
    ],
    [
      -134.94,
      59.27
    ],
    [
      -135.48,
      59.79
    ],
    [
      -136.48,
      59.46
    ],
    [
      -137.45,
      58.91
    ],
    [
      -138.34,
      59.56
    ]
  ],
  [
    [
      -138.34,
      59.56
    ],
    [
      -139.04,
      60
    ],
    [
      -140.01,
      60.28
    ],
    [
      -141,
      60.31
    ],
    [
      -140.99,
      66
    ],
    [
      -140.99,
      69.71
    ],
    [
      -139.12,
      69.47
    ],
    [
      -137.55,
      68.99
    ],
    [
      -136.5,
      68.9
    ],
    [
      -135.63,
      69.32
    ],
    [
      -134.41,
      69.63
    ],
    [
      -132.93,
      69.51
    ],
    [
      -131.43,
      69.94
    ],
    [
      -129.79,
      70.19
    ],
    [
      -129.11,
      69.78
    ],
    [
      -128.36,
      70.01
    ],
    [
      -128.14,
      70.48
    ],
    [
      -127.45,
      70.38
    ],
    [
      -125.76,
      69.48
    ],
    [
      -124.42,
      70.16
    ],
    [
      -124.29,
      69.4
    ],
    [
      -123.06,
      69.56
    ],
    [
      -122.68,
      69.86
    ],
    [
      -121.47,
      69.8
    ],
    [
      -119.94,
      69.38
    ],
    [
      -117.6,
      69.01
    ],
    [
      -116.23,
      68.84
    ],
    [
      -115.25,
      68.91
    ],
    [
      -113.9,
      68.4
    ],
    [
      -115.3,
      67.9
    ],
    [
      -113.5,
      67.69
    ],
    [
      -110.8,
      67.81
    ],
    [
      -109.95,
      67.98
    ],
    [
      -108.88,
      67.38
    ],
    [
      -107.79,
      67.89
    ],
    [
      -108.81,
      68.31
    ],
    [
      -108.17,
      68.65
    ],
    [
      -106.95,
      68.7
    ],
    [
      -106.15,
      68.8
    ],
    [
      -105.34,
      68.56
    ],
    [
      -104.34,
      68.02
    ],
    [
      -103.22,
      68.1
    ],
    [
      -101.45,
      67.65
    ],
    [
      -99.9,
      67.81
    ],
    [
      -98.44,
      67.78
    ],
    [
      -98.56,
      68.4
    ],
    [
      -97.67,
      68.58
    ],
    [
      -96.12,
      68.24
    ],
    [
      -96.13,
      67.29
    ],
    [
      -95.49,
      68.09
    ],
    [
      -94.68,
      68.06
    ],
    [
      -94.23,
      69.07
    ],
    [
      -95.3,
      69.69
    ],
    [
      -96.47,
      70.09
    ],
    [
      -96.39,
      71.19
    ],
    [
      -95.21,
      71.92
    ],
    [
      -93.89,
      71.76
    ],
    [
      -92.88,
      71.32
    ],
    [
      -91.52,
      70.19
    ],
    [
      -92.41,
      69.7
    ],
    [
      -90.55,
      69.5
    ],
    [
      -90.55,
      68.47
    ],
    [
      -89.22,
      69.26
    ],
    [
      -88.02,
      68.62
    ],
    [
      -88.32,
      67.87
    ],
    [
      -87.35,
      67.2
    ],
    [
      -86.31,
      67.92
    ],
    [
      -85.58,
      68.78
    ],
    [
      -85.52,
      69.88
    ],
    [
      -84.1,
      69.81
    ],
    [
      -82.62,
      69.66
    ],
    [
      -81.28,
      69.16
    ],
    [
      -81.22,
      68.67
    ],
    [
      -81.96,
      68.13
    ],
    [
      -81.26,
      67.6
    ],
    [
      -81.39,
      67.11
    ],
    [
      -83.34,
      66.41
    ],
    [
      -84.74,
      66.26
    ],
    [
      -85.77,
      66.56
    ],
    [
      -86.07,
      66.06
    ],
    [
      -87.03,
      65.21
    ],
    [
      -87.32,
      64.78
    ],
    [
      -88.48,
      64.1
    ],
    [
      -89.91,
      64.03
    ],
    [
      -90.7,
      63.61
    ],
    [
      -90.77,
      62.96
    ],
    [
      -91.93,
      62.84
    ],
    [
      -93.16,
      62.02
    ],
    [
      -94.24,
      60.9
    ],
    [
      -94.63,
      60.11
    ],
    [
      -94.68,
      58.95
    ],
    [
      -93.22,
      58.78
    ],
    [
      -92.76,
      57.85
    ],
    [
      -92.3,
      57.09
    ],
    [
      -90.9,
      57.28
    ],
    [
      -89.04,
      56.85
    ],
    [
      -88.04,
      56.47
    ],
    [
      -87.32,
      56
    ],
    [
      -86.07,
      55.72
    ],
    [
      -85.01,
      55.3
    ],
    [
      -83.36,
      55.24
    ],
    [
      -82.27,
      55.15
    ],
    [
      -82.44,
      54.28
    ],
    [
      -82.13,
      53.28
    ],
    [
      -81.4,
      52.16
    ],
    [
      -79.91,
      51.21
    ],
    [
      -79.14,
      51.53
    ],
    [
      -78.6,
      52.56
    ],
    [
      -79.12,
      54.14
    ],
    [
      -79.83,
      54.67
    ],
    [
      -78.23,
      55.14
    ],
    [
      -77.1,
      55.84
    ],
    [
      -76.54,
      56.53
    ],
    [
      -76.62,
      57.2
    ],
    [
      -77.3,
      58.05
    ],
    [
      -78.52,
      58.8
    ],
    [
      -77.34,
      59.85
    ],
    [
      -77.77,
      60.76
    ],
    [
      -78.11,
      62.32
    ],
    [
      -77.41,
      62.55
    ],
    [
      -75.7,
      62.28
    ],
    [
      -74.67,
      62.18
    ],
    [
      -73.84,
      62.44
    ],
    [
      -72.91,
      62.11
    ],
    [
      -71.68,
      61.53
    ],
    [
      -71.37,
      61.14
    ],
    [
      -69.59,
      61.06
    ],
    [
      -69.62,
      60.22
    ],
    [
      -69.29,
      58.96
    ],
    [
      -68.37,
      58.8
    ],
    [
      -67.65,
      58.21
    ],
    [
      -66.2,
      58.77
    ],
    [
      -65.25,
      59.87
    ],
    [
      -64.58,
      60.34
    ],
    [
      -63.8,
      59.44
    ],
    [
      -62.5,
      58.17
    ],
    [
      -61.4,
      56.97
    ],
    [
      -61.8,
      56.34
    ],
    [
      -60.47,
      55.78
    ],
    [
      -59.57,
      55.2
    ],
    [
      -57.98,
      54.95
    ],
    [
      -57.33,
      54.63
    ],
    [
      -56.94,
      53.78
    ],
    [
      -56.16,
      53.65
    ],
    [
      -55.76,
      53.27
    ],
    [
      -55.68,
      52.15
    ],
    [
      -56.41,
      51.77
    ],
    [
      -57.13,
      51.42
    ],
    [
      -58.77,
      51.06
    ],
    [
      -60.03,
      50.24
    ],
    [
      -61.72,
      50.08
    ],
    [
      -63.86,
      50.29
    ],
    [
      -65.36,
      50.3
    ],
    [
      -66.4,
      50.23
    ],
    [
      -67.24,
      49.51
    ],
    [
      -68.51,
      49.07
    ],
    [
      -69.95,
      47.74
    ],
    [
      -71.1,
      46.82
    ],
    [
      -70.26,
      46.99
    ],
    [
      -68.65,
      48.3
    ],
    [
      -66.55,
      49.13
    ],
    [
      -65.06,
      49.23
    ],
    [
      -64.17,
      48.74
    ],
    [
      -65.12,
      48.07
    ],
    [
      -64.8,
      46.99
    ],
    [
      -64.47,
      46.24
    ],
    [
      -63.17,
      45.74
    ],
    [
      -61.52,
      45.88
    ],
    [
      -60.52,
      47.01
    ],
    [
      -60.45,
      46.28
    ],
    [
      -59.8,
      45.92
    ],
    [
      -61.04,
      45.27
    ],
    [
      -63.25,
      44.67
    ],
    [
      -64.25,
      44.27
    ],
    [
      -65.36,
      43.55
    ],
    [
      -66.12,
      43.62
    ],
    [
      -66.16,
      44.47
    ],
    [
      -64.43,
      45.29
    ],
    [
      -66.03,
      45.26
    ],
    [
      -67.14,
      45.14
    ]
  ],
  [
    [
      -114.17,
      73.12
    ],
    [
      -114.67,
      72.65
    ],
    [
      -112.44,
      72.96
    ],
    [
      -111.05,
      72.45
    ],
    [
      -109.92,
      72.96
    ],
    [
      -109.01,
      72.63
    ],
    [
      -108.19,
      71.65
    ],
    [
      -107.69,
      72.07
    ],
    [
      -108.4,
      73.09
    ],
    [
      -107.52,
      73.24
    ],
    [
      -106.52,
      73.08
    ],
    [
      -105.4,
      72.67
    ],
    [
      -104.77,
      71.7
    ],
    [
      -104.46,
      70.99
    ],
    [
      -102.79,
      70.5
    ],
    [
      -100.98,
      70.02
    ],
    [
      -101.09,
      69.58
    ],
    [
      -102.73,
      69.5
    ],
    [
      -102.09,
      69.12
    ],
    [
      -102.43,
      68.75
    ],
    [
      -104.24,
      68.91
    ],
    [
      -105.96,
      69.18
    ],
    [
      -107.12,
      69.12
    ],
    [
      -109,
      68.78
    ],
    [
      -111.53,
      68.63
    ],
    [
      -113.31,
      68.54
    ],
    [
      -113.85,
      69.01
    ],
    [
      -115.22,
      69.28
    ],
    [
      -116.11,
      69.17
    ],
    [
      -117.34,
      69.96
    ],
    [
      -116.67,
      70.07
    ],
    [
      -115.13,
      70.24
    ],
    [
      -113.72,
      70.19
    ],
    [
      -112.42,
      70.37
    ],
    [
      -114.35,
      70.6
    ],
    [
      -116.49,
      70.52
    ],
    [
      -117.9,
      70.54
    ],
    [
      -118.43,
      70.91
    ],
    [
      -116.11,
      71.31
    ],
    [
      -117.66,
      71.3
    ],
    [
      -119.4,
      71.56
    ],
    [
      -118.56,
      72.31
    ],
    [
      -117.87,
      72.71
    ],
    [
      -115.19,
      73.31
    ],
    [
      -114.17,
      73.12
    ]
  ],
  [
    [
      -104.5,
      73.42
    ],
    [
      -105.38,
      72.76
    ],
    [
      -106.94,
      73.46
    ],
    [
      -106.6,
      73.6
    ],
    [
      -105.26,
      73.64
    ],
    [
      -104.5,
      73.42
    ]
  ],
  [
    [
      -76.34,
      73.1
    ],
    [
      -76.25,
      72.83
    ],
    [
      -77.31,
      72.86
    ],
    [
      -78.39,
      72.88
    ],
    [
      -79.49,
      72.74
    ],
    [
      -79.78,
      72.8
    ],
    [
      -80.88,
      73.33
    ],
    [
      -80.83,
      73.69
    ],
    [
      -80.35,
      73.76
    ],
    [
      -78.06,
      73.65
    ],
    [
      -76.34,
      73.1
    ]
  ],
  [
    [
      -86.56,
      73.16
    ],
    [
      -85.77,
      72.53
    ],
    [
      -84.85,
      73.34
    ],
    [
      -82.32,
      73.75
    ],
    [
      -80.6,
      72.72
    ],
    [
      -80.75,
      72.06
    ],
    [
      -78.77,
      72.35
    ],
    [
      -77.82,
      72.75
    ],
    [
      -75.61,
      72.24
    ],
    [
      -74.23,
      71.77
    ],
    [
      -74.1,
      71.33
    ],
    [
      -72.24,
      71.56
    ],
    [
      -71.2,
      70.92
    ],
    [
      -68.79,
      70.53
    ],
    [
      -67.91,
      70.12
    ],
    [
      -66.97,
      69.19
    ],
    [
      -68.81,
      68.72
    ],
    [
      -66.45,
      68.07
    ],
    [
      -64.86,
      67.85
    ],
    [
      -63.42,
      66.93
    ],
    [
      -61.85,
      66.86
    ],
    [
      -62.16,
      66.16
    ],
    [
      -63.92,
      65
    ],
    [
      -65.15,
      65.43
    ],
    [
      -66.72,
      66.39
    ],
    [
      -68.02,
      66.26
    ],
    [
      -68.14,
      65.69
    ],
    [
      -67.09,
      65.11
    ],
    [
      -65.73,
      64.65
    ],
    [
      -65.32,
      64.38
    ],
    [
      -64.67,
      63.39
    ],
    [
      -65.01,
      62.67
    ],
    [
      -66.28,
      62.95
    ],
    [
      -68.78,
      63.75
    ],
    [
      -67.37,
      62.88
    ],
    [
      -66.33,
      62.28
    ],
    [
      -66.17,
      61.93
    ],
    [
      -68.88,
      62.33
    ],
    [
      -71.02,
      62.91
    ],
    [
      -72.24,
      63.4
    ],
    [
      -71.89,
      63.68
    ],
    [
      -73.38,
      64.19
    ],
    [
      -74.83,
      64.68
    ],
    [
      -74.82,
      64.39
    ],
    [
      -77.71,
      64.23
    ],
    [
      -78.56,
      64.57
    ],
    [
      -77.9,
      65.31
    ],
    [
      -76.02,
      65.33
    ],
    [
      -73.96,
      65.45
    ],
    [
      -74.29,
      65.81
    ],
    [
      -73.94,
      66.31
    ],
    [
      -72.65,
      67.28
    ],
    [
      -72.93,
      67.73
    ],
    [
      -73.31,
      68.07
    ],
    [
      -74.84,
      68.55
    ],
    [
      -76.87,
      68.89
    ],
    [
      -76.23,
      69.15
    ],
    [
      -77.29,
      69.77
    ],
    [
      -78.17,
      69.83
    ],
    [
      -78.96,
      70.17
    ],
    [
      -79.49,
      69.87
    ],
    [
      -81.31,
      69.74
    ],
    [
      -84.94,
      69.97
    ],
    [
      -87.06,
      70.26
    ],
    [
      -88.68,
      70.41
    ],
    [
      -89.51,
      70.76
    ],
    [
      -88.47,
      71.22
    ],
    [
      -89.89,
      71.22
    ],
    [
      -90.21,
      72.24
    ],
    [
      -89.44,
      73.13
    ],
    [
      -88.41,
      73.54
    ],
    [
      -85.83,
      73.8
    ],
    [
      -86.56,
      73.16
    ]
  ],
  [
    [
      -100.36,
      73.84
    ],
    [
      -99.16,
      73.63
    ],
    [
      -97.38,
      73.76
    ],
    [
      -97.12,
      73.47
    ],
    [
      -98.05,
      72.99
    ],
    [
      -96.54,
      72.56
    ],
    [
      -96.72,
      71.66
    ],
    [
      -98.36,
      71.27
    ],
    [
      -99.32,
      71.36
    ],
    [
      -100.01,
      71.74
    ],
    [
      -102.5,
      72.51
    ],
    [
      -102.48,
      72.83
    ],
    [
      -100.44,
      72.71
    ],
    [
      -101.54,
      73.36
    ],
    [
      -100.36,
      73.84
    ]
  ],
  [
    [
      -93.2,
      72.77
    ],
    [
      -94.27,
      72.02
    ],
    [
      -95.41,
      72.06
    ],
    [
      -96.03,
      72.94
    ],
    [
      -96.02,
      73.44
    ],
    [
      -95.5,
      73.86
    ],
    [
      -94.5,
      74.13
    ],
    [
      -92.42,
      74.1
    ],
    [
      -90.51,
      73.86
    ],
    [
      -92,
      72.97
    ],
    [
      -93.2,
      72.77
    ]
  ],
  [
    [
      -120.46,
      71.38
    ],
    [
      -123.09,
      70.9
    ],
    [
      -123.62,
      71.34
    ],
    [
      -125.93,
      71.87
    ],
    [
      -125.5,
      72.29
    ],
    [
      -124.81,
      73.02
    ],
    [
      -123.94,
      73.68
    ],
    [
      -124.92,
      74.29
    ],
    [
      -121.54,
      74.45
    ],
    [
      -120.11,
      74.24
    ],
    [
      -117.56,
      74.19
    ],
    [
      -116.58,
      73.9
    ],
    [
      -115.51,
      73.48
    ],
    [
      -116.77,
      73.22
    ],
    [
      -119.22,
      72.52
    ],
    [
      -120.46,
      71.82
    ],
    [
      -120.46,
      71.38
    ]
  ],
  [
    [
      -93.61,
      74.98
    ],
    [
      -94.16,
      74.59
    ],
    [
      -95.61,
      74.67
    ],
    [
      -96.82,
      74.93
    ],
    [
      -96.29,
      75.38
    ],
    [
      -94.85,
      75.65
    ],
    [
      -93.98,
      75.3
    ],
    [
      -93.61,
      74.98
    ]
  ],
  [
    [
      -98.5,
      76.72
    ],
    [
      -97.74,
      76.26
    ],
    [
      -97.7,
      75.74
    ],
    [
      -98.16,
      75
    ],
    [
      -99.81,
      74.9
    ],
    [
      -100.88,
      75.06
    ],
    [
      -100.86,
      75.64
    ],
    [
      -102.5,
      75.56
    ],
    [
      -102.57,
      76.34
    ],
    [
      -101.49,
      76.31
    ],
    [
      -99.98,
      76.65
    ],
    [
      -98.58,
      76.59
    ],
    [
      -98.5,
      76.72
    ]
  ],
  [
    [
      -108.21,
      76.2
    ],
    [
      -107.82,
      75.85
    ],
    [
      -106.93,
      76.01
    ],
    [
      -105.88,
      75.97
    ],
    [
      -105.7,
      75.48
    ],
    [
      -106.31,
      75.01
    ],
    [
      -109.7,
      74.85
    ],
    [
      -112.22,
      74.42
    ],
    [
      -113.74,
      74.39
    ],
    [
      -113.87,
      74.72
    ],
    [
      -111.79,
      75.16
    ],
    [
      -116.31,
      75.04
    ],
    [
      -117.71,
      75.22
    ],
    [
      -116.35,
      76.2
    ],
    [
      -115.4,
      76.48
    ],
    [
      -112.59,
      76.14
    ],
    [
      -110.81,
      75.55
    ],
    [
      -109.07,
      75.47
    ],
    [
      -110.5,
      76.43
    ],
    [
      -109.58,
      76.79
    ],
    [
      -108.55,
      76.68
    ],
    [
      -108.21,
      76.2
    ]
  ],
  [
    [
      -94.68,
      77.1
    ],
    [
      -93.57,
      76.78
    ],
    [
      -91.61,
      76.78
    ],
    [
      -90.74,
      76.45
    ],
    [
      -90.97,
      76.07
    ],
    [
      -89.82,
      75.85
    ],
    [
      -89.19,
      75.61
    ],
    [
      -87.84,
      75.57
    ],
    [
      -86.38,
      75.48
    ],
    [
      -84.79,
      75.7
    ],
    [
      -82.75,
      75.78
    ],
    [
      -81.13,
      75.71
    ],
    [
      -80.06,
      75.34
    ],
    [
      -79.83,
      74.92
    ],
    [
      -80.46,
      74.66
    ],
    [
      -81.95,
      74.44
    ],
    [
      -83.23,
      74.56
    ],
    [
      -86.1,
      74.41
    ],
    [
      -88.15,
      74.39
    ],
    [
      -89.76,
      74.52
    ],
    [
      -92.42,
      74.84
    ],
    [
      -92.77,
      75.39
    ],
    [
      -92.89,
      75.88
    ],
    [
      -93.89,
      76.32
    ],
    [
      -95.96,
      76.44
    ],
    [
      -97.12,
      76.75
    ],
    [
      -96.75,
      77.16
    ],
    [
      -94.68,
      77.1
    ]
  ],
  [
    [
      -116.2,
      77.65
    ],
    [
      -116.34,
      76.88
    ],
    [
      -117.11,
      76.53
    ],
    [
      -118.04,
      76.48
    ],
    [
      -119.9,
      76.05
    ],
    [
      -121.5,
      75.9
    ],
    [
      -122.85,
      76.12
    ],
    [
      -122.85,
      76.12
    ],
    [
      -121.16,
      76.86
    ],
    [
      -119.1,
      77.51
    ],
    [
      -117.57,
      77.5
    ],
    [
      -116.2,
      77.65
    ]
  ],
  [
    [
      -93.84,
      77.52
    ],
    [
      -94.3,
      77.49
    ],
    [
      -96.17,
      77.56
    ],
    [
      -96.44,
      77.83
    ],
    [
      -94.42,
      77.82
    ],
    [
      -93.72,
      77.63
    ],
    [
      -93.84,
      77.52
    ]
  ],
  [
    [
      -110.19,
      77.7
    ],
    [
      -112.05,
      77.41
    ],
    [
      -113.53,
      77.73
    ],
    [
      -112.72,
      78.05
    ],
    [
      -111.26,
      78.15
    ],
    [
      -109.85,
      78
    ],
    [
      -110.19,
      77.7
    ]
  ],
  [
    [
      -109.66,
      78.6
    ],
    [
      -110.88,
      78.41
    ],
    [
      -112.54,
      78.41
    ],
    [
      -112.53,
      78.55
    ],
    [
      -111.5,
      78.85
    ],
    [
      -110.96,
      78.8
    ],
    [
      -109.66,
      78.6
    ]
  ],
  [
    [
      -95.83,
      78.06
    ],
    [
      -97.31,
      77.85
    ],
    [
      -98.12,
      78.08
    ],
    [
      -98.55,
      78.46
    ],
    [
      -98.63,
      78.87
    ],
    [
      -97.34,
      78.83
    ],
    [
      -96.75,
      78.77
    ],
    [
      -95.56,
      78.42
    ],
    [
      -95.83,
      78.06
    ]
  ],
  [
    [
      -100.06,
      78.32
    ],
    [
      -99.67,
      77.91
    ],
    [
      -101.3,
      78.02
    ],
    [
      -102.95,
      78.34
    ],
    [
      -105.18,
      78.38
    ],
    [
      -104.21,
      78.68
    ],
    [
      -105.42,
      78.92
    ],
    [
      -105.49,
      79.3
    ],
    [
      -103.53,
      79.17
    ],
    [
      -100.83,
      78.8
    ],
    [
      -100.06,
      78.32
    ]
  ],
  [
    [
      -87.02,
      79.66
    ],
    [
      -85.81,
      79.34
    ],
    [
      -87.19,
      79.04
    ],
    [
      -89.04,
      78.29
    ],
    [
      -90.8,
      78.22
    ],
    [
      -92.88,
      78.34
    ],
    [
      -93.95,
      78.75
    ],
    [
      -93.94,
      79.11
    ],
    [
      -93.15,
      79.38
    ],
    [
      -94.97,
      79.37
    ],
    [
      -96.08,
      79.71
    ],
    [
      -96.71,
      80.16
    ],
    [
      -96.02,
      80.6
    ],
    [
      -95.32,
      80.91
    ],
    [
      -94.3,
      80.98
    ],
    [
      -94.74,
      81.21
    ],
    [
      -92.41,
      81.26
    ],
    [
      -91.13,
      80.72
    ],
    [
      -89.45,
      80.51
    ],
    [
      -87.81,
      80.32
    ],
    [
      -87.02,
      79.66
    ]
  ],
  [
    [
      -68.5,
      83.11
    ],
    [
      -65.83,
      83.03
    ],
    [
      -63.68,
      82.9
    ],
    [
      -61.85,
      82.63
    ],
    [
      -61.89,
      82.36
    ],
    [
      -64.33,
      81.93
    ],
    [
      -66.75,
      81.73
    ],
    [
      -67.66,
      81.5
    ],
    [
      -65.48,
      81.51
    ],
    [
      -67.84,
      80.9
    ],
    [
      -69.47,
      80.62
    ],
    [
      -71.18,
      79.8
    ],
    [
      -73.24,
      79.63
    ],
    [
      -73.88,
      79.43
    ],
    [
      -76.91,
      79.32
    ],
    [
      -75.53,
      79.2
    ],
    [
      -76.22,
      79.02
    ],
    [
      -75.39,
      78.53
    ],
    [
      -76.34,
      78.18
    ],
    [
      -77.89,
      77.9
    ],
    [
      -78.36,
      77.51
    ],
    [
      -79.76,
      77.21
    ],
    [
      -79.62,
      76.98
    ],
    [
      -77.91,
      77.02
    ],
    [
      -77.89,
      76.78
    ],
    [
      -80.56,
      76.18
    ],
    [
      -83.17,
      76.45
    ],
    [
      -86.11,
      76.3
    ],
    [
      -87.6,
      76.42
    ],
    [
      -89.49,
      76.47
    ],
    [
      -89.62,
      76.95
    ],
    [
      -87.77,
      77.18
    ],
    [
      -88.26,
      77.9
    ],
    [
      -87.65,
      77.97
    ],
    [
      -84.98,
      77.54
    ],
    [
      -86.34,
      78.18
    ],
    [
      -87.96,
      78.37
    ],
    [
      -87.15,
      78.76
    ],
    [
      -85.38,
      79
    ],
    [
      -85.09,
      79.35
    ],
    [
      -86.51,
      79.74
    ],
    [
      -86.93,
      80.25
    ],
    [
      -84.2,
      80.21
    ],
    [
      -83.41,
      80.1
    ],
    [
      -81.85,
      80.46
    ],
    [
      -84.1,
      80.58
    ],
    [
      -87.6,
      80.52
    ],
    [
      -89.37,
      80.86
    ],
    [
      -90.2,
      81.26
    ],
    [
      -91.37,
      81.55
    ],
    [
      -91.59,
      81.89
    ],
    [
      -90.1,
      82.09
    ],
    [
      -88.93,
      82.12
    ],
    [
      -86.97,
      82.28
    ],
    [
      -85.5,
      82.65
    ],
    [
      -84.26,
      82.6
    ],
    [
      -83.18,
      82.32
    ],
    [
      -82.42,
      82.86
    ],
    [
      -81.1,
      83.02
    ],
    [
      -79.31,
      83.13
    ],
    [
      -76.25,
      83.17
    ],
    [
      -75.72,
      83.06
    ],
    [
      -72.83,
      83.23
    ],
    [
      -70.67,
      83.17
    ],
    [
      -68.5,
      83.11
    ]
  ],
  [
    [
      9.63,
      47.36
    ],
    [
      9.53,
      47.27
    ],
    [
      9.49,
      47.18
    ]
  ],
  [
    [
      9.49,
      47.18
    ],
    [
      9.51,
      47.09
    ],
    [
      9.47,
      47.06
    ],
    [
      9.56,
      47.05
    ]
  ],
  [
    [
      9.56,
      47.05
    ],
    [
      9.61,
      47.06
    ],
    [
      9.87,
      47.02
    ]
  ],
  [
    [
      10.44,
      46.89
    ],
    [
      10.36,
      46.48
    ],
    [
      9.92,
      46.31
    ],
    [
      9.18,
      46.44
    ],
    [
      8.97,
      46.04
    ],
    [
      8.49,
      46.01
    ],
    [
      8.32,
      46.16
    ],
    [
      7.76,
      45.82
    ],
    [
      7.27,
      45.78
    ],
    [
      6.84,
      45.99
    ]
  ],
  [
    [
      6.84,
      45.99
    ],
    [
      6.5,
      46.43
    ],
    [
      6.02,
      46.27
    ],
    [
      6.04,
      46.73
    ],
    [
      6.77,
      47.29
    ],
    [
      6.74,
      47.54
    ],
    [
      7.19,
      47.45
    ],
    [
      7.47,
      47.62
    ]
  ],
  [
    [
      7.47,
      47.62
    ],
    [
      8.32,
      47.61
    ],
    [
      8.52,
      47.83
    ],
    [
      9.59,
      47.53
    ]
  ],
  [
    [
      -66.96,
      -54.9
    ],
    [
      -67.29,
      -55.3
    ],
    [
      -68.15,
      -55.61
    ],
    [
      -68.64,
      -55.58
    ],
    [
      -69.23,
      -55.5
    ],
    [
      -69.96,
      -55.2
    ],
    [
      -71.01,
      -55.05
    ],
    [
      -72.26,
      -54.5
    ],
    [
      -73.29,
      -53.96
    ],
    [
      -74.66,
      -52.84
    ],
    [
      -73.84,
      -53.05
    ],
    [
      -72.43,
      -53.72
    ],
    [
      -71.11,
      -54.07
    ],
    [
      -70.59,
      -53.62
    ],
    [
      -70.27,
      -52.93
    ],
    [
      -69.35,
      -52.52
    ],
    [
      -68.63,
      -52.64
    ]
  ],
  [
    [
      -68.57,
      -52.3
    ],
    [
      -69.46,
      -52.29
    ],
    [
      -69.94,
      -52.54
    ],
    [
      -70.85,
      -52.9
    ],
    [
      -71.01,
      -53.83
    ],
    [
      -71.43,
      -53.86
    ],
    [
      -72.56,
      -53.53
    ],
    [
      -73.7,
      -52.84
    ],
    [
      -73.7,
      -52.84
    ],
    [
      -74.95,
      -52.26
    ],
    [
      -75.26,
      -51.63
    ],
    [
      -74.98,
      -51.04
    ],
    [
      -75.48,
      -50.38
    ],
    [
      -75.61,
      -48.67
    ],
    [
      -75.18,
      -47.71
    ],
    [
      -74.13,
      -46.94
    ],
    [
      -75.64,
      -46.65
    ],
    [
      -74.69,
      -45.76
    ],
    [
      -74.35,
      -44.1
    ],
    [
      -73.24,
      -44.45
    ],
    [
      -72.72,
      -42.38
    ],
    [
      -73.39,
      -42.12
    ],
    [
      -73.7,
      -43.37
    ],
    [
      -74.33,
      -43.22
    ],
    [
      -74.02,
      -41.79
    ],
    [
      -73.68,
      -39.94
    ],
    [
      -73.22,
      -39.26
    ],
    [
      -73.51,
      -38.28
    ],
    [
      -73.59,
      -37.16
    ],
    [
      -73.17,
      -37.12
    ],
    [
      -72.55,
      -35.51
    ],
    [
      -71.86,
      -33.91
    ],
    [
      -71.44,
      -32.42
    ],
    [
      -71.67,
      -30.92
    ],
    [
      -71.37,
      -30.1
    ],
    [
      -71.49,
      -28.86
    ],
    [
      -70.91,
      -27.64
    ],
    [
      -70.72,
      -25.71
    ],
    [
      -70.4,
      -23.63
    ],
    [
      -70.09,
      -21.39
    ],
    [
      -70.16,
      -19.76
    ],
    [
      -70.37,
      -18.35
    ]
  ],
  [
    [
      -70.37,
      -18.35
    ],
    [
      -69.86,
      -18.09
    ],
    [
      -69.59,
      -17.58
    ]
  ],
  [
    [
      110.34,
      18.68
    ],
    [
      109.48,
      18.2
    ],
    [
      108.66,
      18.51
    ],
    [
      108.63,
      19.37
    ],
    [
      109.12,
      19.82
    ],
    [
      110.21,
      20.1
    ],
    [
      110.79,
      20.08
    ],
    [
      111.01,
      19.7
    ],
    [
      110.57,
      19.26
    ],
    [
      110.34,
      18.68
    ]
  ],
  [
    [
      129.4,
      49.44
    ],
    [
      130.58,
      48.73
    ]
  ],
  [
    [
      130.58,
      48.73
    ],
    [
      130.99,
      47.79
    ],
    [
      132.51,
      47.79
    ],
    [
      133.37,
      48.18
    ]
  ],
  [
    [
      133.37,
      48.18
    ],
    [
      135.03,
      48.48
    ]
  ],
  [
    [
      135.03,
      48.48
    ],
    [
      134.5,
      47.58
    ],
    [
      134.11,
      47.21
    ],
    [
      133.77,
      46.12
    ]
  ],
  [
    [
      133.77,
      46.12
    ],
    [
      133.1,
      45.14
    ],
    [
      131.88,
      45.32
    ]
  ],
  [
    [
      131.88,
      45.32
    ],
    [
      131.03,
      44.97
    ],
    [
      131.29,
      44.11
    ]
  ],
  [
    [
      131.29,
      44.11
    ],
    [
      131.14,
      42.93
    ],
    [
      130.63,
      42.9
    ]
  ],
  [
    [
      130.63,
      42.9
    ],
    [
      130.64,
      42.4
    ]
  ],
  [
    [
      130.64,
      42.4
    ],
    [
      129.99,
      42.99
    ],
    [
      129.6,
      42.42
    ],
    [
      128.05,
      41.99
    ],
    [
      128.21,
      41.47
    ],
    [
      127.34,
      41.5
    ],
    [
      126.87,
      41.82
    ],
    [
      126.18,
      41.11
    ],
    [
      125.08,
      40.57
    ],
    [
      124.27,
      39.93
    ]
  ],
  [
    [
      124.27,
      39.93
    ],
    [
      122.87,
      39.64
    ],
    [
      122.13,
      39.17
    ],
    [
      121.05,
      38.9
    ],
    [
      121.59,
      39.36
    ],
    [
      121.38,
      39.75
    ],
    [
      122.17,
      40.42
    ],
    [
      121.64,
      40.95
    ],
    [
      120.77,
      40.59
    ],
    [
      119.64,
      39.9
    ],
    [
      119.02,
      39.25
    ],
    [
      118.04,
      39.2
    ],
    [
      117.53,
      38.74
    ],
    [
      118.06,
      38.06
    ],
    [
      118.88,
      37.9
    ],
    [
      118.91,
      37.45
    ],
    [
      119.7,
      37.16
    ],
    [
      120.82,
      37.87
    ],
    [
      121.71,
      37.48
    ],
    [
      122.36,
      37.45
    ],
    [
      122.52,
      36.93
    ],
    [
      121.1,
      36.65
    ],
    [
      120.64,
      36.11
    ],
    [
      119.66,
      35.61
    ],
    [
      119.15,
      34.91
    ],
    [
      120.23,
      34.36
    ],
    [
      120.62,
      33.38
    ],
    [
      121.23,
      32.46
    ],
    [
      121.91,
      31.69
    ],
    [
      121.89,
      30.95
    ],
    [
      121.26,
      30.68
    ],
    [
      121.5,
      30.14
    ],
    [
      122.09,
      29.83
    ],
    [
      121.94,
      29.02
    ],
    [
      121.68,
      28.23
    ],
    [
      121.13,
      28.14
    ],
    [
      120.4,
      27.05
    ],
    [
      119.59,
      25.74
    ],
    [
      118.66,
      24.55
    ],
    [
      117.28,
      23.62
    ],
    [
      115.89,
      22.78
    ],
    [
      114.76,
      22.67
    ],
    [
      114.15,
      22.22
    ],
    [
      113.81,
      22.55
    ],
    [
      113.24,
      22.05
    ],
    [
      111.84,
      21.55
    ],
    [
      110.79,
      21.4
    ],
    [
      110.44,
      20.34
    ],
    [
      109.89,
      20.28
    ],
    [
      109.63,
      21.01
    ],
    [
      109.86,
      21.4
    ],
    [
      108.52,
      21.72
    ],
    [
      108.05,
      21.55
    ]
  ],
  [
    [
      108.05,
      21.55
    ],
    [
      107.04,
      21.81
    ],
    [
      106.57,
      22.22
    ],
    [
      106.73,
      22.79
    ],
    [
      105.81,
      22.98
    ],
    [
      105.33,
      23.35
    ],
    [
      104.48,
      22.82
    ],
    [
      103.5,
      22.7
    ],
    [
      102.71,
      22.71
    ],
    [
      102.17,
      22.46
    ]
  ],
  [
    [
      102.17,
      22.46
    ],
    [
      101.65,
      22.32
    ],
    [
      101.8,
      21.17
    ],
    [
      101.27,
      21.2
    ],
    [
      101.18,
      21.44
    ]
  ],
  [
    [
      101.18,
      21.44
    ],
    [
      101.15,
      21.85
    ],
    [
      100.42,
      21.56
    ],
    [
      99.98,
      21.74
    ],
    [
      99.24,
      22.12
    ],
    [
      99.53,
      22.95
    ],
    [
      98.9,
      23.14
    ],
    [
      98.66,
      24.06
    ],
    [
      97.6,
      23.9
    ],
    [
      97.72,
      25.08
    ],
    [
      98.67,
      25.92
    ],
    [
      98.71,
      26.74
    ],
    [
      98.68,
      27.51
    ],
    [
      98.25,
      27.75
    ],
    [
      97.91,
      28.34
    ],
    [
      97.33,
      28.26
    ]
  ],
  [
    [
      97.33,
      28.26
    ],
    [
      96.25,
      28.41
    ],
    [
      96.59,
      28.83
    ],
    [
      96.12,
      29.45
    ],
    [
      95.4,
      29.03
    ],
    [
      94.57,
      29.28
    ],
    [
      93.41,
      28.64
    ],
    [
      92.5,
      27.9
    ],
    [
      91.7,
      27.77
    ]
  ],
  [
    [
      88.81,
      27.3
    ],
    [
      88.73,
      28.09
    ],
    [
      88.12,
      27.88
    ]
  ],
  [
    [
      88.12,
      27.88
    ],
    [
      86.95,
      27.97
    ],
    [
      85.82,
      28.2
    ],
    [
      85.01,
      28.64
    ],
    [
      84.23,
      28.84
    ],
    [
      83.9,
      29.32
    ],
    [
      83.34,
      29.46
    ],
    [
      82.33,
      30.12
    ],
    [
      81.53,
      30.42
    ],
    [
      81.11,
      30.18
    ]
  ],
  [
    [
      81.11,
      30.18
    ],
    [
      79.72,
      30.88
    ],
    [
      78.74,
      31.52
    ],
    [
      78.46,
      32.62
    ],
    [
      79.18,
      32.48
    ],
    [
      79.21,
      32.99
    ],
    [
      78.81,
      33.51
    ],
    [
      78.91,
      34.32
    ],
    [
      77.84,
      35.49
    ]
  ],
  [
    [
      77.84,
      35.49
    ],
    [
      76.19,
      35.9
    ],
    [
      75.9,
      36.67
    ],
    [
      75.16,
      37.13
    ]
  ],
  [
    [
      74.98,
      37.42
    ],
    [
      74.83,
      37.99
    ],
    [
      74.86,
      38.38
    ],
    [
      74.26,
      38.61
    ],
    [
      73.93,
      38.51
    ],
    [
      73.68,
      39.43
    ]
  ],
  [
    [
      73.68,
      39.43
    ],
    [
      73.96,
      39.66
    ],
    [
      73.82,
      39.89
    ],
    [
      74.78,
      40.37
    ],
    [
      75.47,
      40.56
    ],
    [
      76.53,
      40.43
    ],
    [
      76.9,
      41.07
    ],
    [
      78.19,
      41.19
    ],
    [
      78.54,
      41.58
    ],
    [
      80.12,
      42.12
    ],
    [
      80.26,
      42.35
    ]
  ],
  [
    [
      80.26,
      42.35
    ],
    [
      80.18,
      42.92
    ],
    [
      80.87,
      43.18
    ],
    [
      79.97,
      44.92
    ],
    [
      81.95,
      45.32
    ],
    [
      82.46,
      45.54
    ],
    [
      83.18,
      47.33
    ],
    [
      85.16,
      47
    ],
    [
      85.72,
      47.45
    ],
    [
      85.77,
      48.46
    ],
    [
      86.6,
      48.55
    ],
    [
      87.36,
      49.21
    ]
  ],
  [
    [
      87.36,
      49.21
    ],
    [
      87.75,
      49.3
    ]
  ],
  [
    [
      87.75,
      49.3
    ],
    [
      88.01,
      48.6
    ],
    [
      88.85,
      48.07
    ],
    [
      90.28,
      47.69
    ],
    [
      90.97,
      46.89
    ],
    [
      90.59,
      45.72
    ],
    [
      90.95,
      45.29
    ],
    [
      92.13,
      45.12
    ],
    [
      93.48,
      44.98
    ],
    [
      94.69,
      44.35
    ],
    [
      95.31,
      44.24
    ],
    [
      95.76,
      43.32
    ],
    [
      96.35,
      42.73
    ],
    [
      97.45,
      42.75
    ],
    [
      99.52,
      42.52
    ],
    [
      100.85,
      42.66
    ],
    [
      101.83,
      42.51
    ],
    [
      103.31,
      41.91
    ],
    [
      104.52,
      41.91
    ],
    [
      104.96,
      41.6
    ],
    [
      106.13,
      42.13
    ],
    [
      107.74,
      42.48
    ],
    [
      109.24,
      42.52
    ],
    [
      110.41,
      42.87
    ],
    [
      111.13,
      43.41
    ],
    [
      111.83,
      43.74
    ],
    [
      111.67,
      44.07
    ],
    [
      111.35,
      44.46
    ],
    [
      111.87,
      45.1
    ],
    [
      112.44,
      45.01
    ],
    [
      113.46,
      44.81
    ],
    [
      114.46,
      45.34
    ],
    [
      115.99,
      45.73
    ],
    [
      116.72,
      46.39
    ],
    [
      117.42,
      46.67
    ],
    [
      118.87,
      46.81
    ],
    [
      119.66,
      46.69
    ],
    [
      119.77,
      47.05
    ],
    [
      118.87,
      47.75
    ],
    [
      118.06,
      48.07
    ],
    [
      117.3,
      47.7
    ],
    [
      116.31,
      47.85
    ],
    [
      115.74,
      47.73
    ],
    [
      115.49,
      48.14
    ],
    [
      116.19,
      49.13
    ],
    [
      116.68,
      49.89
    ]
  ],
  [
    [
      116.68,
      49.89
    ],
    [
      117.88,
      49.51
    ],
    [
      119.29,
      50.14
    ]
  ],
  [
    [
      119.29,
      50.14
    ],
    [
      119.28,
      50.58
    ],
    [
      120.18,
      51.64
    ],
    [
      120.74,
      51.96
    ],
    [
      120.73,
      52.52
    ]
  ],
  [
    [
      120.73,
      52.52
    ],
    [
      120.18,
      52.75
    ],
    [
      121,
      53.25
    ],
    [
      122.25,
      53.43
    ]
  ],
  [
    [
      122.25,
      53.43
    ],
    [
      123.57,
      53.46
    ],
    [
      125.07,
      53.16
    ]
  ],
  [
    [
      125.07,
      53.16
    ],
    [
      125.95,
      52.79
    ],
    [
      126.56,
      51.78
    ],
    [
      126.94,
      51.35
    ],
    [
      127.29,
      50.74
    ]
  ],
  [
    [
      127.29,
      50.74
    ],
    [
      127.66,
      49.76
    ],
    [
      129.4,
      49.44
    ]
  ],
  [
    [
      -2.86,
      4.99
    ],
    [
      -3.31,
      4.98
    ],
    [
      -4.01,
      5.18
    ],
    [
      -4.65,
      5.17
    ],
    [
      -5.83,
      4.99
    ],
    [
      -6.53,
      4.71
    ],
    [
      -7.52,
      4.34
    ],
    [
      -7.71,
      4.36
    ]
  ],
  [
    [
      -7.71,
      4.36
    ],
    [
      -7.64,
      5.19
    ],
    [
      -7.54,
      5.31
    ],
    [
      -7.57,
      5.71
    ],
    [
      -7.99,
      6.13
    ],
    [
      -8.31,
      6.19
    ],
    [
      -8.6,
      6.47
    ],
    [
      -8.39,
      6.91
    ],
    [
      -8.49,
      7.4
    ],
    [
      -8.44,
      7.69
    ]
  ],
  [
    [
      -8.44,
      7.69
    ],
    [
      -8.28,
      7.69
    ],
    [
      -8.22,
      8.12
    ],
    [
      -8.3,
      8.32
    ],
    [
      -8.2,
      8.46
    ],
    [
      -7.83,
      8.58
    ],
    [
      -8.08,
      9.38
    ],
    [
      -8.31,
      9.79
    ],
    [
      -8.23,
      10.13
    ],
    [
      -8.03,
      10.21
    ]
  ],
  [
    [
      -8.03,
      10.21
    ],
    [
      -7.9,
      10.3
    ],
    [
      -7.62,
      10.15
    ],
    [
      -6.85,
      10.14
    ],
    [
      -6.67,
      10.43
    ],
    [
      -6.49,
      10.41
    ],
    [
      -6.21,
      10.52
    ],
    [
      -6.05,
      10.1
    ],
    [
      -5.82,
      10.22
    ],
    [
      -5.4,
      10.37
    ]
  ],
  [
    [
      -2.83,
      9.64
    ],
    [
      -2.56,
      8.22
    ],
    [
      -2.98,
      7.38
    ],
    [
      -3.24,
      6.25
    ],
    [
      -2.81,
      5.39
    ],
    [
      -2.86,
      4.99
    ]
  ],
  [
    [
      13.08,
      2.27
    ],
    [
      12.95,
      2.32
    ],
    [
      12.36,
      2.19
    ],
    [
      11.75,
      2.33
    ],
    [
      11.28,
      2.26
    ]
  ],
  [
    [
      11.28,
      2.26
    ],
    [
      9.65,
      2.28
    ]
  ],
  [
    [
      9.65,
      2.28
    ],
    [
      9.8,
      3.07
    ],
    [
      9.4,
      3.73
    ],
    [
      8.95,
      3.9
    ],
    [
      8.74,
      4.35
    ],
    [
      8.49,
      4.5
    ],
    [
      8.5,
      4.77
    ]
  ],
  [
    [
      8.5,
      4.77
    ],
    [
      8.76,
      5.48
    ],
    [
      9.23,
      6.44
    ],
    [
      9.52,
      6.45
    ],
    [
      10.12,
      7.04
    ],
    [
      10.5,
      7.06
    ],
    [
      11.06,
      6.64
    ],
    [
      11.75,
      6.98
    ],
    [
      11.84,
      7.4
    ],
    [
      12.06,
      7.8
    ],
    [
      12.22,
      8.31
    ],
    [
      12.75,
      8.72
    ],
    [
      12.96,
      9.42
    ],
    [
      13.17,
      9.64
    ],
    [
      13.31,
      10.16
    ],
    [
      13.57,
      10.8
    ],
    [
      14.42,
      11.57
    ],
    [
      14.47,
      11.9
    ],
    [
      14.58,
      12.09
    ],
    [
      14.18,
      12.48
    ]
  ],
  [
    [
      14.18,
      12.48
    ],
    [
      14.21,
      12.8
    ],
    [
      14.5,
      12.86
    ]
  ],
  [
    [
      14.5,
      12.86
    ],
    [
      14.89,
      12.22
    ],
    [
      14.96,
      11.56
    ]
  ],
  [
    [
      14.96,
      11.56
    ],
    [
      14.92,
      10.89
    ],
    [
      15.47,
      9.98
    ],
    [
      14.91,
      9.99
    ],
    [
      14.63,
      9.92
    ],
    [
      14.17,
      10.02
    ],
    [
      13.95,
      9.55
    ],
    [
      14.54,
      8.97
    ],
    [
      14.98,
      8.8
    ],
    [
      15.12,
      8.38
    ],
    [
      15.44,
      7.69
    ],
    [
      15.28,
      7.42
    ]
  ],
  [
    [
      16.01,
      2.27
    ],
    [
      15.94,
      1.73
    ],
    [
      15.15,
      1.96
    ],
    [
      14.34,
      2.23
    ],
    [
      13.08,
      2.27
    ]
  ],
  [
    [
      31.17,
      2.2
    ],
    [
      30.85,
      1.85
    ],
    [
      30.47,
      1.58
    ],
    [
      30.09,
      1.06
    ],
    [
      29.88,
      0.6
    ]
  ],
  [
    [
      29.88,
      0.6
    ],
    [
      29.82,
      -0.21
    ],
    [
      29.59,
      -0.59
    ]
  ],
  [
    [
      29.59,
      -0.59
    ],
    [
      29.58,
      -1.34
    ]
  ],
  [
    [
      29.58,
      -1.34
    ],
    [
      29.29,
      -1.62
    ],
    [
      29.25,
      -2.22
    ],
    [
      29.12,
      -2.29
    ],
    [
      29.02,
      -2.84
    ]
  ],
  [
    [
      29.34,
      -4.5
    ],
    [
      29.52,
      -5.42
    ],
    [
      29.42,
      -5.94
    ]
  ],
  [
    [
      29.42,
      -5.94
    ],
    [
      29.62,
      -6.52
    ],
    [
      30.2,
      -7.08
    ],
    [
      30.74,
      -8.34
    ]
  ],
  [
    [
      30.74,
      -8.34
    ],
    [
      30.35,
      -8.24
    ],
    [
      29,
      -8.41
    ],
    [
      28.73,
      -8.53
    ],
    [
      28.45,
      -9.16
    ],
    [
      28.67,
      -9.61
    ],
    [
      28.5,
      -10.79
    ],
    [
      28.37,
      -11.79
    ],
    [
      28.64,
      -11.97
    ],
    [
      29.34,
      -12.36
    ],
    [
      29.62,
      -12.18
    ],
    [
      29.7,
      -13.26
    ],
    [
      28.93,
      -13.25
    ],
    [
      28.52,
      -12.7
    ],
    [
      28.16,
      -12.27
    ],
    [
      27.39,
      -12.13
    ],
    [
      27.16,
      -11.61
    ],
    [
      26.55,
      -11.92
    ],
    [
      25.75,
      -11.78
    ],
    [
      25.42,
      -11.33
    ],
    [
      24.78,
      -11.24
    ],
    [
      24.31,
      -11.26
    ],
    [
      24.26,
      -10.95
    ],
    [
      23.91,
      -10.93
    ]
  ],
  [
    [
      12.32,
      -6.1
    ],
    [
      12.18,
      -5.79
    ]
  ],
  [
    [
      13,
      -4.78
    ],
    [
      13.26,
      -4.88
    ],
    [
      13.6,
      -4.5
    ],
    [
      14.14,
      -4.51
    ],
    [
      14.21,
      -4.79
    ],
    [
      14.58,
      -4.97
    ],
    [
      15.17,
      -4.34
    ],
    [
      15.75,
      -3.86
    ],
    [
      16.01,
      -3.54
    ],
    [
      15.97,
      -2.71
    ],
    [
      16.41,
      -1.74
    ],
    [
      16.87,
      -1.23
    ],
    [
      17.52,
      -0.74
    ],
    [
      17.64,
      -0.42
    ],
    [
      17.66,
      -0.06
    ],
    [
      17.83,
      0.29
    ],
    [
      17.77,
      0.86
    ],
    [
      17.9,
      1.74
    ],
    [
      18.09,
      2.37
    ],
    [
      18.39,
      2.9
    ],
    [
      18.45,
      3.5
    ]
  ],
  [
    [
      27.37,
      5.23
    ],
    [
      27.98,
      4.41
    ],
    [
      28.43,
      4.29
    ],
    [
      28.7,
      4.46
    ],
    [
      29.16,
      4.39
    ],
    [
      29.72,
      4.6
    ]
  ],
  [
    [
      29.72,
      4.6
    ],
    [
      29.95,
      4.17
    ],
    [
      30.83,
      3.51
    ],
    [
      30.77,
      2.34
    ],
    [
      31.17,
      2.2
    ]
  ],
  [
    [
      11.91,
      -5.04
    ],
    [
      11.09,
      -3.98
    ]
  ],
  [
    [
      11.09,
      -3.98
    ],
    [
      11.86,
      -3.43
    ],
    [
      11.48,
      -2.77
    ],
    [
      11.82,
      -2.51
    ],
    [
      12.5,
      -2.39
    ],
    [
      12.58,
      -1.95
    ],
    [
      13.11,
      -2.43
    ],
    [
      13.99,
      -2.47
    ],
    [
      14.3,
      -2
    ],
    [
      14.43,
      -1.33
    ],
    [
      14.32,
      -0.55
    ],
    [
      13.84,
      0.04
    ],
    [
      14.28,
      1.2
    ],
    [
      14.03,
      1.4
    ],
    [
      13.28,
      1.31
    ],
    [
      13,
      1.83
    ],
    [
      13.08,
      2.27
    ]
  ],
  [
    [
      -75.37,
      -0.15
    ],
    [
      -75.8,
      0.08
    ],
    [
      -76.29,
      0.42
    ],
    [
      -76.58,
      0.26
    ],
    [
      -77.42,
      0.4
    ],
    [
      -77.67,
      0.83
    ],
    [
      -77.86,
      0.81
    ],
    [
      -78.86,
      1.38
    ]
  ],
  [
    [
      -78.86,
      1.38
    ],
    [
      -78.99,
      1.69
    ],
    [
      -78.62,
      1.77
    ],
    [
      -78.66,
      2.27
    ],
    [
      -78.43,
      2.63
    ],
    [
      -77.93,
      2.7
    ],
    [
      -77.51,
      3.33
    ],
    [
      -77.13,
      3.85
    ],
    [
      -77.5,
      4.09
    ],
    [
      -77.31,
      4.67
    ],
    [
      -77.53,
      5.58
    ],
    [
      -77.32,
      5.85
    ],
    [
      -77.48,
      6.69
    ],
    [
      -77.88,
      7.22
    ]
  ],
  [
    [
      -77.88,
      7.22
    ],
    [
      -77.75,
      7.71
    ],
    [
      -77.43,
      7.64
    ],
    [
      -77.24,
      7.94
    ],
    [
      -77.47,
      8.52
    ],
    [
      -77.35,
      8.67
    ]
  ],
  [
    [
      -77.35,
      8.67
    ],
    [
      -76.84,
      8.64
    ],
    [
      -76.09,
      9.34
    ],
    [
      -75.67,
      9.44
    ],
    [
      -75.66,
      9.77
    ],
    [
      -75.48,
      10.62
    ],
    [
      -74.91,
      11.08
    ],
    [
      -74.28,
      11.1
    ],
    [
      -74.2,
      11.31
    ],
    [
      -73.41,
      11.23
    ],
    [
      -72.63,
      11.73
    ],
    [
      -72.24,
      11.96
    ],
    [
      -71.75,
      12.44
    ],
    [
      -71.4,
      12.38
    ],
    [
      -71.14,
      12.11
    ],
    [
      -71.33,
      11.78
    ]
  ],
  [
    [
      -71.33,
      11.78
    ],
    [
      -71.97,
      11.61
    ],
    [
      -72.23,
      11.11
    ],
    [
      -72.61,
      10.82
    ],
    [
      -72.91,
      10.45
    ],
    [
      -73.03,
      9.74
    ],
    [
      -73.3,
      9.15
    ],
    [
      -72.79,
      9.09
    ],
    [
      -72.66,
      8.63
    ],
    [
      -72.44,
      8.41
    ],
    [
      -72.36,
      8
    ],
    [
      -72.48,
      7.63
    ],
    [
      -72.44,
      7.42
    ],
    [
      -72.2,
      7.34
    ],
    [
      -71.96,
      6.99
    ],
    [
      -70.67,
      7.09
    ],
    [
      -70.09,
      6.96
    ],
    [
      -69.39,
      6.1
    ],
    [
      -68.99,
      6.21
    ],
    [
      -68.27,
      6.15
    ],
    [
      -67.7,
      6.27
    ],
    [
      -67.34,
      6.1
    ],
    [
      -67.52,
      5.56
    ],
    [
      -67.74,
      5.22
    ],
    [
      -67.82,
      4.5
    ],
    [
      -67.62,
      3.84
    ],
    [
      -67.34,
      3.54
    ],
    [
      -67.3,
      3.32
    ],
    [
      -67.81,
      2.82
    ],
    [
      -67.45,
      2.6
    ],
    [
      -67.18,
      2.25
    ],
    [
      -66.88,
      1.25
    ]
  ],
  [
    [
      -69.89,
      -4.3
    ],
    [
      -70.39,
      -3.77
    ],
    [
      -70.69,
      -3.74
    ],
    [
      -70.05,
      -2.73
    ],
    [
      -70.81,
      -2.26
    ],
    [
      -71.41,
      -2.34
    ],
    [
      -71.77,
      -2.17
    ],
    [
      -72.33,
      -2.43
    ],
    [
      -73.07,
      -2.31
    ],
    [
      -73.66,
      -1.26
    ],
    [
      -74.12,
      -1
    ],
    [
      -74.44,
      -0.53
    ],
    [
      -75.11,
      -0.06
    ],
    [
      -75.37,
      -0.15
    ]
  ],
  [
    [
      -82.97,
      8.23
    ],
    [
      -83.51,
      8.45
    ],
    [
      -83.71,
      8.66
    ],
    [
      -83.6,
      8.83
    ],
    [
      -83.63,
      9.05
    ],
    [
      -83.91,
      9.29
    ],
    [
      -84.3,
      9.49
    ],
    [
      -84.65,
      9.62
    ],
    [
      -84.71,
      9.91
    ],
    [
      -84.98,
      10.09
    ],
    [
      -84.91,
      9.8
    ],
    [
      -85.11,
      9.56
    ],
    [
      -85.34,
      9.83
    ],
    [
      -85.66,
      9.93
    ],
    [
      -85.8,
      10.13
    ],
    [
      -85.79,
      10.44
    ],
    [
      -85.66,
      10.75
    ],
    [
      -85.94,
      10.9
    ],
    [
      -85.71,
      11.09
    ]
  ],
  [
    [
      -85.71,
      11.09
    ],
    [
      -85.56,
      11.22
    ],
    [
      -84.9,
      10.95
    ],
    [
      -84.67,
      11.08
    ],
    [
      -84.36,
      11
    ],
    [
      -84.19,
      10.79
    ],
    [
      -83.9,
      10.73
    ],
    [
      -83.66,
      10.94
    ]
  ],
  [
    [
      -83.66,
      10.94
    ],
    [
      -83.4,
      10.4
    ],
    [
      -83.02,
      9.99
    ],
    [
      -82.55,
      9.57
    ]
  ],
  [
    [
      -82.55,
      9.57
    ],
    [
      -82.93,
      9.48
    ],
    [
      -82.93,
      9.07
    ],
    [
      -82.72,
      8.93
    ],
    [
      -82.87,
      8.81
    ],
    [
      -82.83,
      8.63
    ],
    [
      -82.91,
      8.42
    ],
    [
      -82.97,
      8.23
    ]
  ],
  [
    [
      -82.27,
      23.19
    ],
    [
      -81.4,
      23.12
    ],
    [
      -80.62,
      23.11
    ],
    [
      -79.68,
      22.77
    ],
    [
      -79.28,
      22.4
    ],
    [
      -78.35,
      22.51
    ],
    [
      -77.99,
      22.28
    ],
    [
      -77.15,
      21.66
    ],
    [
      -76.52,
      21.21
    ],
    [
      -76.19,
      21.22
    ],
    [
      -75.6,
      21.02
    ],
    [
      -75.67,
      20.74
    ],
    [
      -74.93,
      20.69
    ],
    [
      -74.18,
      20.28
    ],
    [
      -74.3,
      20.05
    ],
    [
      -74.96,
      19.92
    ],
    [
      -75.63,
      19.87
    ],
    [
      -76.32,
      19.95
    ],
    [
      -77.76,
      19.86
    ],
    [
      -77.09,
      20.41
    ],
    [
      -77.49,
      20.67
    ],
    [
      -78.14,
      20.74
    ],
    [
      -78.48,
      21.03
    ],
    [
      -78.72,
      21.6
    ],
    [
      -79.28,
      21.56
    ],
    [
      -80.22,
      21.83
    ],
    [
      -80.52,
      22.04
    ],
    [
      -81.82,
      22.19
    ],
    [
      -82.17,
      22.39
    ],
    [
      -81.8,
      22.64
    ],
    [
      -82.78,
      22.69
    ],
    [
      -83.49,
      22.17
    ],
    [
      -83.91,
      22.15
    ],
    [
      -84.05,
      21.91
    ],
    [
      -84.55,
      21.8
    ],
    [
      -84.97,
      21.9
    ],
    [
      -84.45,
      22.2
    ],
    [
      -84.23,
      22.57
    ],
    [
      -83.78,
      22.79
    ],
    [
      -83.27,
      22.98
    ],
    [
      -82.51,
      23.08
    ],
    [
      -82.27,
      23.19
    ]
  ],
  [
    [
      32.73,
      35.14
    ],
    [
      32.8,
      35.15
    ],
    [
      32.95,
      35.39
    ],
    [
      33.67,
      35.37
    ],
    [
      34.58,
      35.67
    ],
    [
      33.9,
      35.25
    ],
    [
      33.97,
      35.06
    ],
    [
      34,
      34.98
    ],
    [
      32.98,
      34.57
    ],
    [
      32.49,
      34.7
    ],
    [
      32.26,
      35.1
    ],
    [
      32.73,
      35.14
    ]
  ],
  [
    [
      13.6,
      48.88
    ],
    [
      13.03,
      49.31
    ],
    [
      12.52,
      49.55
    ],
    [
      12.42,
      49.97
    ],
    [
      12.24,
      50.27
    ],
    [
      12.97,
      50.48
    ],
    [
      13.34,
      50.73
    ],
    [
      14.06,
      50.93
    ],
    [
      14.31,
      51.12
    ],
    [
      14.57,
      51
    ],
    [
      15.02,
      51.11
    ]
  ],
  [
    [
      15.02,
      51.11
    ],
    [
      15.49,
      50.78
    ],
    [
      16.24,
      50.7
    ],
    [
      16.18,
      50.42
    ],
    [
      16.72,
      50.22
    ],
    [
      16.87,
      50.47
    ],
    [
      17.55,
      50.36
    ],
    [
      17.65,
      50.05
    ],
    [
      18.39,
      49.99
    ],
    [
      18.85,
      49.5
    ]
  ],
  [
    [
      18.85,
      49.5
    ],
    [
      18.55,
      49.5
    ],
    [
      18.4,
      49.32
    ],
    [
      18.17,
      49.27
    ],
    [
      18.1,
      49.04
    ],
    [
      17.91,
      49
    ],
    [
      17.89,
      48.9
    ],
    [
      17.55,
      48.8
    ],
    [
      17.1,
      48.82
    ],
    [
      16.96,
      48.6
    ]
  ],
  [
    [
      9.92,
      54.98
    ],
    [
      9.94,
      54.6
    ],
    [
      10.95,
      54.36
    ],
    [
      10.94,
      54.01
    ],
    [
      11.96,
      54.2
    ],
    [
      12.52,
      54.47
    ],
    [
      13.65,
      54.08
    ],
    [
      14.12,
      53.76
    ]
  ],
  [
    [
      14.12,
      53.76
    ],
    [
      14.35,
      53.25
    ],
    [
      14.07,
      52.98
    ],
    [
      14.44,
      52.62
    ],
    [
      14.69,
      52.09
    ],
    [
      14.61,
      51.75
    ],
    [
      15.02,
      51.11
    ]
  ],
  [
    [
      7.47,
      47.62
    ],
    [
      7.59,
      48.33
    ],
    [
      8.1,
      49.02
    ],
    [
      6.66,
      49.2
    ],
    [
      6.19,
      49.46
    ]
  ],
  [
    [
      6.19,
      49.46
    ],
    [
      6.24,
      49.9
    ],
    [
      6.04,
      50.13
    ]
  ],
  [
    [
      6.16,
      50.8
    ],
    [
      5.99,
      51.85
    ],
    [
      6.59,
      51.85
    ],
    [
      6.84,
      52.23
    ],
    [
      7.09,
      53.14
    ],
    [
      6.91,
      53.48
    ]
  ],
  [
    [
      6.91,
      53.48
    ],
    [
      7.1,
      53.69
    ],
    [
      7.94,
      53.75
    ],
    [
      8.12,
      53.53
    ],
    [
      8.8,
      54.02
    ],
    [
      8.57,
      54.4
    ],
    [
      8.53,
      54.96
    ]
  ],
  [
    [
      8.53,
      54.96
    ],
    [
      9.28,
      54.83
    ],
    [
      9.92,
      54.98
    ]
  ],
  [
    [
      43.08,
      12.7
    ],
    [
      43.32,
      12.39
    ],
    [
      43.29,
      11.97
    ],
    [
      42.72,
      11.74
    ],
    [
      43.15,
      11.46
    ]
  ],
  [
    [
      43.15,
      11.46
    ],
    [
      42.78,
      10.93
    ]
  ],
  [
    [
      42.78,
      10.93
    ],
    [
      42.55,
      11.11
    ],
    [
      42.31,
      11.03
    ],
    [
      41.76,
      11.05
    ],
    [
      41.74,
      11.36
    ],
    [
      41.66,
      11.63
    ],
    [
      42,
      12.1
    ],
    [
      42.35,
      12.54
    ]
  ],
  [
    [
      42.35,
      12.54
    ],
    [
      42.78,
      12.46
    ],
    [
      43.08,
      12.7
    ]
  ],
  [
    [
      12.69,
      55.61
    ],
    [
      12.09,
      54.8
    ],
    [
      11.04,
      55.36
    ],
    [
      10.9,
      55.78
    ],
    [
      12.37,
      56.11
    ],
    [
      12.69,
      55.61
    ]
  ],
  [
    [
      8.53,
      54.96
    ],
    [
      8.12,
      55.52
    ],
    [
      8.09,
      56.54
    ],
    [
      8.26,
      56.81
    ],
    [
      8.54,
      57.11
    ],
    [
      9.42,
      57.17
    ],
    [
      9.78,
      57.45
    ],
    [
      10.58,
      57.73
    ],
    [
      10.55,
      57.22
    ],
    [
      10.25,
      56.89
    ],
    [
      10.37,
      56.61
    ],
    [
      10.91,
      56.46
    ],
    [
      10.67,
      56.08
    ],
    [
      10.37,
      56.19
    ],
    [
      9.65,
      55.47
    ],
    [
      9.92,
      54.98
    ]
  ],
  [
    [
      -46.76,
      82.63
    ],
    [
      -43.41,
      83.23
    ],
    [
      -39.9,
      83.18
    ],
    [
      -38.62,
      83.55
    ],
    [
      -35.09,
      83.65
    ],
    [
      -27.1,
      83.52
    ],
    [
      -20.85,
      82.73
    ],
    [
      -22.69,
      82.34
    ],
    [
      -26.52,
      82.3
    ],
    [
      -31.9,
      82.2
    ],
    [
      -31.4,
      82.02
    ],
    [
      -27.86,
      82.13
    ],
    [
      -24.84,
      81.79
    ],
    [
      -22.9,
      82.09
    ],
    [
      -22.07,
      81.73
    ],
    [
      -23.17,
      81.15
    ],
    [
      -20.62,
      81.52
    ],
    [
      -15.77,
      81.91
    ],
    [
      -12.77,
      81.72
    ],
    [
      -12.21,
      81.29
    ],
    [
      -16.29,
      80.58
    ],
    [
      -16.85,
      80.35
    ],
    [
      -20.05,
      80.18
    ],
    [
      -17.73,
      80.13
    ],
    [
      -18.9,
      79.4
    ],
    [
      -19.7,
      78.75
    ],
    [
      -19.67,
      77.64
    ],
    [
      -18.47,
      76.99
    ],
    [
      -20.04,
      76.94
    ],
    [
      -21.68,
      76.63
    ],
    [
      -19.83,
      76.1
    ],
    [
      -19.6,
      75.25
    ],
    [
      -20.67,
      75.16
    ],
    [
      -19.37,
      74.3
    ],
    [
      -21.59,
      74.22
    ],
    [
      -20.43,
      73.82
    ],
    [
      -20.76,
      73.46
    ],
    [
      -22.17,
      73.31
    ],
    [
      -23.57,
      73.31
    ],
    [
      -22.31,
      72.63
    ],
    [
      -22.3,
      72.18
    ],
    [
      -24.28,
      72.6
    ],
    [
      -24.79,
      72.33
    ],
    [
      -23.44,
      72.08
    ],
    [
      -22.13,
      71.47
    ],
    [
      -21.75,
      70.66
    ],
    [
      -23.54,
      70.47
    ],
    [
      -24.31,
      70.86
    ],
    [
      -25.54,
      71.43
    ],
    [
      -25.2,
      70.75
    ],
    [
      -26.36,
      70.23
    ],
    [
      -23.73,
      70.18
    ],
    [
      -22.35,
      70.13
    ],
    [
      -25.03,
      69.26
    ],
    [
      -27.75,
      68.47
    ],
    [
      -30.67,
      68.13
    ],
    [
      -31.78,
      68.12
    ],
    [
      -32.81,
      67.74
    ],
    [
      -34.2,
      66.68
    ],
    [
      -36.35,
      65.98
    ],
    [
      -37.04,
      65.94
    ],
    [
      -38.38,
      65.69
    ],
    [
      -39.81,
      65.46
    ],
    [
      -40.67,
      64.84
    ],
    [
      -40.68,
      64.14
    ],
    [
      -41.19,
      63.48
    ],
    [
      -42.82,
      62.68
    ],
    [
      -42.42,
      61.9
    ],
    [
      -42.87,
      61.07
    ],
    [
      -43.38,
      60.1
    ],
    [
      -44.79,
      60.04
    ],
    [
      -46.26,
      60.85
    ],
    [
      -48.26,
      60.86
    ],
    [
      -49.23,
      61.41
    ],
    [
      -49.9,
      62.38
    ],
    [
      -51.63,
      63.63
    ],
    [
      -52.14,
      64.28
    ],
    [
      -52.28,
      65.18
    ],
    [
      -53.66,
      66.1
    ],
    [
      -53.3,
      66.84
    ],
    [
      -53.97,
      67.19
    ],
    [
      -52.98,
      68.36
    ],
    [
      -51.48,
      68.73
    ],
    [
      -51.08,
      69.15
    ],
    [
      -50.87,
      69.93
    ],
    [
      -52.01,
      69.57
    ],
    [
      -52.56,
      69.43
    ],
    [
      -53.46,
      69.28
    ],
    [
      -54.68,
      69.61
    ],
    [
      -54.75,
      70.29
    ],
    [
      -54.36,
      70.82
    ],
    [
      -53.43,
      70.84
    ],
    [
      -51.39,
      70.57
    ],
    [
      -53.11,
      71.2
    ],
    [
      -54,
      71.55
    ],
    [
      -55,
      71.41
    ],
    [
      -55.83,
      71.65
    ],
    [
      -54.72,
      72.59
    ],
    [
      -55.33,
      72.96
    ],
    [
      -56.12,
      73.65
    ],
    [
      -57.32,
      74.71
    ],
    [
      -58.6,
      75.1
    ],
    [
      -58.59,
      75.52
    ],
    [
      -61.27,
      76.1
    ],
    [
      -63.39,
      76.18
    ],
    [
      -66.06,
      76.13
    ],
    [
      -68.5,
      76.06
    ],
    [
      -69.66,
      76.38
    ],
    [
      -71.4,
      77.01
    ],
    [
      -68.78,
      77.32
    ],
    [
      -66.76,
      77.38
    ],
    [
      -71.04,
      77.64
    ],
    [
      -73.3,
      78.04
    ],
    [
      -73.16,
      78.43
    ],
    [
      -69.37,
      78.91
    ],
    [
      -65.71,
      79.39
    ],
    [
      -65.32,
      79.76
    ],
    [
      -68.02,
      80.12
    ],
    [
      -67.15,
      80.52
    ],
    [
      -63.69,
      81.21
    ],
    [
      -62.23,
      81.32
    ],
    [
      -62.65,
      81.77
    ],
    [
      -60.28,
      82.03
    ],
    [
      -57.21,
      82.19
    ],
    [
      -54.13,
      82.2
    ],
    [
      -53.04,
      81.89
    ],
    [
      -50.39,
      82.44
    ],
    [
      -48,
      82.06
    ],
    [
      -46.6,
      81.99
    ],
    [
      -44.52,
      81.66
    ],
    [
      -46.9,
      82.2
    ],
    [
      -46.76,
      82.63
    ]
  ],
  [
    [
      -71.71,
      19.71
    ],
    [
      -71.59,
      19.88
    ],
    [
      -70.81,
      19.88
    ],
    [
      -70.21,
      19.62
    ],
    [
      -69.95,
      19.65
    ],
    [
      -69.77,
      19.29
    ],
    [
      -69.22,
      19.31
    ],
    [
      -69.25,
      19.02
    ],
    [
      -68.81,
      18.98
    ],
    [
      -68.32,
      18.61
    ],
    [
      -68.69,
      18.21
    ],
    [
      -69.16,
      18.42
    ],
    [
      -69.62,
      18.38
    ],
    [
      -69.95,
      18.43
    ],
    [
      -70.13,
      18.25
    ],
    [
      -70.52,
      18.18
    ],
    [
      -70.67,
      18.43
    ],
    [
      -71,
      18.28
    ],
    [
      -71.4,
      17.6
    ],
    [
      -71.66,
      17.76
    ],
    [
      -71.71,
      18.04
    ]
  ],
  [
    [
      -71.71,
      18.04
    ],
    [
      -71.69,
      18.32
    ],
    [
      -71.95,
      18.62
    ],
    [
      -71.7,
      18.79
    ],
    [
      -71.62,
      19.17
    ],
    [
      -71.71,
      19.71
    ]
  ],
  [
    [
      12,
      23.47
    ],
    [
      8.57,
      21.57
    ],
    [
      5.68,
      19.6
    ],
    [
      4.27,
      19.16
    ]
  ],
  [
    [
      4.27,
      19.16
    ],
    [
      3.16,
      19.06
    ],
    [
      3.15,
      19.69
    ],
    [
      2.68,
      19.86
    ],
    [
      2.06,
      20.14
    ],
    [
      1.82,
      20.61
    ],
    [
      -1.55,
      22.79
    ],
    [
      -4.92,
      24.97
    ]
  ],
  [
    [
      -4.92,
      24.97
    ],
    [
      -8.68,
      27.4
    ]
  ],
  [
    [
      -8.68,
      27.4
    ],
    [
      -8.67,
      27.59
    ],
    [
      -8.67,
      27.6
    ]
  ],
  [
    [
      -8.67,
      27.6
    ],
    [
      -8.67,
      28.84
    ],
    [
      -7.06,
      29.58
    ],
    [
      -6.06,
      29.73
    ],
    [
      -5.24,
      30
    ],
    [
      -4.86,
      30.5
    ],
    [
      -3.69,
      30.9
    ],
    [
      -3.65,
      31.64
    ],
    [
      -3.07,
      31.72
    ],
    [
      -2.62,
      32.09
    ],
    [
      -1.31,
      32.26
    ],
    [
      -1.12,
      32.65
    ],
    [
      -1.39,
      32.86
    ],
    [
      -1.73,
      33.92
    ],
    [
      -1.79,
      34.53
    ],
    [
      -2.17,
      35.17
    ]
  ],
  [
    [
      -2.17,
      35.17
    ],
    [
      -1.21,
      35.71
    ],
    [
      -0.13,
      35.89
    ],
    [
      0.5,
      36.3
    ],
    [
      1.47,
      36.61
    ],
    [
      3.16,
      36.78
    ],
    [
      4.82,
      36.87
    ],
    [
      5.32,
      36.72
    ],
    [
      6.26,
      37.11
    ],
    [
      7.33,
      37.12
    ],
    [
      7.74,
      36.89
    ],
    [
      8.42,
      36.95
    ]
  ],
  [
    [
      8.42,
      36.95
    ],
    [
      8.22,
      36.43
    ],
    [
      8.38,
      35.48
    ],
    [
      8.14,
      34.66
    ],
    [
      7.52,
      34.1
    ],
    [
      7.61,
      33.34
    ],
    [
      8.43,
      32.75
    ],
    [
      8.44,
      32.51
    ],
    [
      9.06,
      32.1
    ],
    [
      9.48,
      30.31
    ]
  ],
  [
    [
      9.48,
      30.31
    ],
    [
      9.81,
      29.42
    ],
    [
      9.86,
      28.96
    ],
    [
      9.68,
      28.14
    ],
    [
      9.76,
      27.69
    ],
    [
      9.63,
      27.14
    ],
    [
      9.72,
      26.51
    ],
    [
      9.32,
      26.09
    ],
    [
      9.91,
      25.37
    ],
    [
      9.95,
      24.94
    ],
    [
      10.3,
      24.38
    ],
    [
      10.77,
      24.56
    ],
    [
      11.56,
      24.1
    ],
    [
      12,
      23.47
    ]
  ],
  [
    [
      -80.3,
      -3.4
    ],
    [
      -79.77,
      -2.66
    ],
    [
      -79.99,
      -2.22
    ],
    [
      -80.37,
      -2.69
    ],
    [
      -80.97,
      -2.25
    ],
    [
      -80.76,
      -1.97
    ],
    [
      -80.93,
      -1.06
    ],
    [
      -80.58,
      -0.91
    ],
    [
      -80.4,
      -0.28
    ],
    [
      -80.02,
      0.36
    ],
    [
      -80.09,
      0.77
    ],
    [
      -79.54,
      0.98
    ],
    [
      -78.86,
      1.38
    ]
  ],
  [
    [
      -75.37,
      -0.15
    ],
    [
      -75.23,
      -0.91
    ],
    [
      -75.54,
      -1.56
    ],
    [
      -76.64,
      -2.61
    ],
    [
      -77.84,
      -3
    ],
    [
      -78.45,
      -3.87
    ],
    [
      -78.64,
      -4.55
    ],
    [
      -79.21,
      -4.96
    ],
    [
      -79.62,
      -4.45
    ],
    [
      -80.03,
      -4.35
    ],
    [
      -80.44,
      -4.43
    ],
    [
      -80.47,
      -4.06
    ],
    [
      -80.18,
      -3.82
    ],
    [
      -80.3,
      -3.4
    ]
  ],
  [
    [
      36.87,
      22
    ],
    [
      32.9,
      22
    ],
    [
      29.02,
      22
    ],
    [
      25,
      22
    ]
  ],
  [
    [
      25,
      22
    ],
    [
      25,
      25.68
    ],
    [
      25,
      29.24
    ],
    [
      24.7,
      30.04
    ],
    [
      24.96,
      30.66
    ],
    [
      24.8,
      31.09
    ],
    [
      25.16,
      31.57
    ]
  ],
  [
    [
      25.16,
      31.57
    ],
    [
      26.5,
      31.59
    ],
    [
      27.46,
      31.32
    ],
    [
      28.45,
      31.03
    ],
    [
      28.91,
      30.87
    ],
    [
      29.68,
      31.19
    ],
    [
      30.1,
      31.47
    ],
    [
      30.98,
      31.56
    ],
    [
      31.69,
      31.43
    ],
    [
      31.96,
      30.93
    ],
    [
      32.19,
      31.26
    ],
    [
      32.99,
      31.02
    ],
    [
      33.77,
      30.97
    ],
    [
      34.27,
      31.22
    ],
    [
      34.92,
      29.5
    ],
    [
      34.64,
      29.1
    ],
    [
      34.43,
      28.34
    ],
    [
      34.15,
      27.82
    ],
    [
      33.92,
      27.65
    ],
    [
      33.59,
      27.97
    ],
    [
      33.14,
      28.42
    ],
    [
      32.42,
      29.85
    ],
    [
      32.32,
      29.76
    ],
    [
      32.73,
      28.71
    ],
    [
      33.35,
      27.7
    ],
    [
      34.1,
      26.14
    ],
    [
      34.47,
      25.6
    ],
    [
      34.8,
      25.03
    ],
    [
      35.69,
      23.93
    ],
    [
      35.49,
      23.75
    ],
    [
      35.53,
      23.1
    ],
    [
      36.69,
      22.2
    ],
    [
      36.87,
      22
    ]
  ],
  [
    [
      42.35,
      12.54
    ],
    [
      42.01,
      12.87
    ],
    [
      41.6,
      13.45
    ]
  ],
  [
    [
      41.6,
      13.45
    ],
    [
      41.16,
      13.77
    ],
    [
      40.9,
      14.12
    ]
  ],
  [
    [
      40.9,
      14.12
    ],
    [
      40.03,
      14.52
    ],
    [
      39.34,
      14.53
    ]
  ],
  [
    [
      39.34,
      14.53
    ],
    [
      39.1,
      14.74
    ],
    [
      38.51,
      14.51
    ],
    [
      37.91,
      14.96
    ],
    [
      37.59,
      14.21
    ],
    [
      36.43,
      14.42
    ]
  ],
  [
    [
      36.43,
      14.42
    ],
    [
      36.32,
      14.82
    ],
    [
      36.75,
      16.29
    ],
    [
      36.85,
      16.96
    ]
  ],
  [
    [
      36.85,
      16.96
    ],
    [
      37.17,
      17.26
    ],
    [
      37.9,
      17.43
    ],
    [
      38.41,
      18
    ]
  ],
  [
    [
      38.41,
      18
    ],
    [
      38.99,
      16.84
    ],
    [
      39.27,
      15.92
    ],
    [
      39.81,
      15.44
    ],
    [
      41.18,
      14.49
    ],
    [
      41.73,
      13.92
    ],
    [
      42.28,
      13.34
    ],
    [
      42.59,
      13
    ],
    [
      43.08,
      12.7
    ]
  ],
  [
    [
      -9.03,
      41.88
    ],
    [
      -8.98,
      42.59
    ],
    [
      -9.39,
      43.03
    ],
    [
      -7.98,
      43.75
    ],
    [
      -6.75,
      43.57
    ],
    [
      -5.41,
      43.57
    ],
    [
      -4.35,
      43.4
    ],
    [
      -3.52,
      43.46
    ],
    [
      -1.9,
      43.42
    ]
  ],
  [
    [
      -1.9,
      43.42
    ],
    [
      -1.5,
      43.03
    ],
    [
      0.34,
      42.58
    ],
    [
      0.7,
      42.8
    ],
    [
      1.83,
      42.34
    ],
    [
      2.99,
      42.47
    ]
  ],
  [
    [
      2.99,
      42.47
    ],
    [
      3.04,
      41.89
    ],
    [
      2.09,
      41.23
    ],
    [
      0.81,
      41.01
    ],
    [
      0.72,
      40.68
    ],
    [
      0.11,
      40.12
    ],
    [
      -0.28,
      39.31
    ],
    [
      0.11,
      38.74
    ],
    [
      -0.47,
      38.29
    ],
    [
      -0.68,
      37.64
    ],
    [
      -1.44,
      37.44
    ],
    [
      -2.15,
      36.67
    ],
    [
      -3.42,
      36.66
    ],
    [
      -4.37,
      36.68
    ],
    [
      -5,
      36.32
    ],
    [
      -5.38,
      35.95
    ],
    [
      -5.87,
      36.03
    ],
    [
      -6.24,
      36.37
    ],
    [
      -6.52,
      36.94
    ],
    [
      -7.45,
      37.1
    ]
  ],
  [
    [
      -7.45,
      37.1
    ],
    [
      -7.54,
      37.43
    ],
    [
      -7.17,
      37.8
    ],
    [
      -7.03,
      38.08
    ],
    [
      -7.37,
      38.37
    ],
    [
      -7.1,
      39.03
    ],
    [
      -7.5,
      39.63
    ],
    [
      -7.07,
      39.71
    ],
    [
      -7.03,
      40.18
    ],
    [
      -6.86,
      40.33
    ],
    [
      -6.85,
      41.11
    ],
    [
      -6.39,
      41.38
    ],
    [
      -6.67,
      41.88
    ],
    [
      -7.25,
      41.92
    ],
    [
      -7.42,
      41.79
    ],
    [
      -8.01,
      41.79
    ],
    [
      -8.26,
      42.28
    ],
    [
      -8.67,
      42.13
    ],
    [
      -9.03,
      41.88
    ]
  ],
  [
    [
      24.31,
      57.79
    ],
    [
      24.43,
      58.38
    ],
    [
      24.06,
      58.26
    ],
    [
      23.43,
      58.61
    ],
    [
      23.34,
      59.19
    ],
    [
      24.6,
      59.47
    ],
    [
      25.86,
      59.61
    ],
    [
      26.95,
      59.45
    ],
    [
      27.98,
      59.48
    ],
    [
      28.13,
      59.3
    ]
  ],
  [
    [
      28.13,
      59.3
    ],
    [
      27.42,
      58.72
    ],
    [
      27.72,
      57.79
    ]
  ],
  [
    [
      27.72,
      57.79
    ],
    [
      27.29,
      57.47
    ]
  ],
  [
    [
      27.29,
      57.47
    ],
    [
      26.46,
      57.48
    ],
    [
      25.6,
      57.85
    ],
    [
      25.16,
      57.97
    ],
    [
      24.31,
      57.79
    ]
  ],
  [
    [
      39.34,
      14.53
    ],
    [
      40.03,
      14.52
    ],
    [
      40.9,
      14.12
    ]
  ],
  [
    [
      40.9,
      14.12
    ],
    [
      41.16,
      13.77
    ],
    [
      41.6,
      13.45
    ]
  ],
  [
    [
      42.78,
      10.93
    ],
    [
      42.56,
      10.57
    ],
    [
      42.93,
      10.02
    ]
  ],
  [
    [
      42.93,
      10.02
    ],
    [
      43.3,
      9.54
    ],
    [
      43.68,
      9.18
    ]
  ],
  [
    [
      43.68,
      9.18
    ],
    [
      46.95,
      8
    ],
    [
      47.79,
      8
    ]
  ],
  [
    [
      47.79,
      8
    ],
    [
      44.96,
      5
    ],
    [
      43.66,
      4.96
    ],
    [
      42.77,
      4.25
    ],
    [
      42.13,
      4.23
    ],
    [
      41.86,
      3.92
    ]
  ],
  [
    [
      41.86,
      3.92
    ],
    [
      41.17,
      3.92
    ],
    [
      40.77,
      4.26
    ],
    [
      39.85,
      3.84
    ],
    [
      39.56,
      3.42
    ],
    [
      38.89,
      3.5
    ],
    [
      38.67,
      3.62
    ],
    [
      38.44,
      3.59
    ],
    [
      38.12,
      3.6
    ],
    [
      36.86,
      4.45
    ],
    [
      36.16,
      4.45
    ],
    [
      35.82,
      4.78
    ],
    [
      35.82,
      5.34
    ],
    [
      35.3,
      5.51
    ]
  ],
  [
    [
      35.3,
      5.51
    ],
    [
      34.71,
      6.59
    ],
    [
      34.25,
      6.83
    ],
    [
      34.08,
      7.23
    ],
    [
      33.57,
      7.71
    ],
    [
      32.95,
      7.78
    ],
    [
      33.29,
      8.35
    ],
    [
      33.83,
      8.38
    ],
    [
      33.97,
      8.68
    ]
  ],
  [
    [
      33.97,
      8.68
    ],
    [
      33.96,
      9.58
    ]
  ],
  [
    [
      33.96,
      9.58
    ],
    [
      34.26,
      10.63
    ],
    [
      34.73,
      10.91
    ],
    [
      34.83,
      11.32
    ],
    [
      35.26,
      12.08
    ],
    [
      35.86,
      12.58
    ],
    [
      36.27,
      13.56
    ],
    [
      36.43,
      14.42
    ]
  ],
  [
    [
      28.59,
      69.06
    ],
    [
      28.45,
      68.36
    ],
    [
      29.98,
      67.7
    ],
    [
      29.05,
      66.94
    ],
    [
      30.22,
      65.81
    ],
    [
      29.54,
      64.95
    ],
    [
      30.44,
      64.2
    ],
    [
      30.04,
      63.55
    ],
    [
      31.52,
      62.87
    ],
    [
      31.14,
      62.36
    ],
    [
      30.21,
      61.78
    ]
  ],
  [
    [
      30.21,
      61.78
    ],
    [
      28.07,
      60.5
    ],
    [
      26.26,
      60.42
    ],
    [
      24.5,
      60.06
    ],
    [
      22.87,
      59.85
    ],
    [
      22.29,
      60.39
    ],
    [
      21.32,
      60.72
    ],
    [
      21.54,
      61.71
    ],
    [
      21.06,
      62.61
    ],
    [
      21.54,
      63.19
    ],
    [
      22.44,
      63.82
    ],
    [
      24.73,
      64.9
    ],
    [
      25.4,
      65.11
    ],
    [
      25.29,
      65.53
    ],
    [
      23.9,
      66.01
    ]
  ],
  [
    [
      23.9,
      66.01
    ],
    [
      23.57,
      66.4
    ],
    [
      23.54,
      67.94
    ],
    [
      21.98,
      68.62
    ],
    [
      20.65,
      69.11
    ]
  ],
  [
    [
      20.65,
      69.11
    ],
    [
      21.24,
      69.37
    ],
    [
      22.36,
      68.84
    ],
    [
      23.66,
      68.89
    ],
    [
      24.74,
      68.65
    ],
    [
      25.69,
      69.09
    ],
    [
      26.18,
      69.83
    ],
    [
      27.73,
      70.16
    ],
    [
      29.02,
      69.77
    ],
    [
      28.59,
      69.06
    ]
  ],
  [
    [
      178.37,
      -17.34
    ],
    [
      178.72,
      -17.63
    ],
    [
      178.55,
      -18.15
    ],
    [
      177.93,
      -18.29
    ],
    [
      177.38,
      -18.16
    ],
    [
      177.29,
      -17.72
    ],
    [
      177.67,
      -17.38
    ],
    [
      178.13,
      -17.5
    ],
    [
      178.37,
      -17.34
    ]
  ],
  [
    [
      179.36,
      -16.8
    ],
    [
      178.73,
      -17.01
    ],
    [
      178.6,
      -16.64
    ],
    [
      179.1,
      -16.43
    ],
    [
      179.41,
      -16.38
    ],
    [
      180,
      -16.07
    ],
    [
      180,
      -16.56
    ],
    [
      179.36,
      -16.8
    ]
  ],
  [
    [
      -179.92,
      -16.5
    ],
    [
      -180,
      -16.56
    ],
    [
      -180,
      -16.07
    ],
    [
      -179.79,
      -16.02
    ],
    [
      -179.92,
      -16.5
    ]
  ],
  [
    [
      9.56,
      42.15
    ],
    [
      9.23,
      41.38
    ],
    [
      8.78,
      41.58
    ],
    [
      8.54,
      42.26
    ],
    [
      8.75,
      42.63
    ],
    [
      9.39,
      43.01
    ],
    [
      9.56,
      42.15
    ]
  ],
  [
    [
      5.67,
      49.53
    ],
    [
      5.9,
      49.44
    ],
    [
      6.19,
      49.46
    ]
  ],
  [
    [
      6.84,
      45.99
    ],
    [
      6.8,
      45.71
    ],
    [
      7.1,
      45.33
    ],
    [
      6.75,
      45.03
    ],
    [
      7.01,
      44.25
    ],
    [
      7.55,
      44.13
    ],
    [
      7.44,
      43.69
    ]
  ],
  [
    [
      7.44,
      43.69
    ],
    [
      6.53,
      43.13
    ],
    [
      4.56,
      43.4
    ],
    [
      3.1,
      43.08
    ],
    [
      2.99,
      42.47
    ]
  ],
  [
    [
      -1.9,
      43.42
    ],
    [
      -1.38,
      44.02
    ],
    [
      -1.19,
      46.01
    ],
    [
      -2.23,
      47.06
    ],
    [
      -2.96,
      47.57
    ],
    [
      -4.49,
      47.95
    ],
    [
      -4.59,
      48.68
    ],
    [
      -3.3,
      48.9
    ],
    [
      -1.62,
      48.64
    ],
    [
      -1.93,
      49.78
    ],
    [
      -0.99,
      49.35
    ],
    [
      1.34,
      50.13
    ],
    [
      1.64,
      50.95
    ],
    [
      2.51,
      51.15
    ]
  ],
  [
    [
      -54.52,
      2.31
    ],
    [
      -54.27,
      2.74
    ],
    [
      -54.18,
      3.19
    ],
    [
      -54.01,
      3.62
    ],
    [
      -54.4,
      4.21
    ]
  ],
  [
    [
      -54.4,
      4.21
    ],
    [
      -54.48,
      4.9
    ],
    [
      -53.96,
      5.76
    ]
  ],
  [
    [
      -53.96,
      5.76
    ],
    [
      -53.62,
      5.65
    ],
    [
      -52.88,
      5.41
    ],
    [
      -51.82,
      4.57
    ],
    [
      -51.66,
      4.16
    ]
  ],
  [
    [
      11.09,
      -3.98
    ],
    [
      10.07,
      -2.97
    ],
    [
      9.41,
      -2.14
    ],
    [
      8.8,
      -1.11
    ],
    [
      8.83,
      -0.78
    ],
    [
      9.05,
      -0.46
    ],
    [
      9.29,
      0.27
    ],
    [
      9.49,
      1.01
    ]
  ],
  [
    [
      9.49,
      1.01
    ],
    [
      9.83,
      1.07
    ],
    [
      11.29,
      1.06
    ],
    [
      11.28,
      2.26
    ]
  ],
  [
    [
      -6.2,
      53.87
    ],
    [
      -6.95,
      54.07
    ],
    [
      -7.57,
      54.06
    ],
    [
      -7.37,
      54.6
    ],
    [
      -7.57,
      55.13
    ]
  ],
  [
    [
      -7.57,
      55.13
    ],
    [
      -6.73,
      55.17
    ],
    [
      -5.66,
      54.55
    ],
    [
      -6.2,
      53.87
    ]
  ],
  [
    [
      -3.01,
      58.64
    ],
    [
      -4.07,
      57.55
    ],
    [
      -3.06,
      57.69
    ],
    [
      -1.96,
      57.68
    ],
    [
      -2.22,
      56.87
    ],
    [
      -3.12,
      55.97
    ],
    [
      -2.09,
      55.91
    ],
    [
      -2.01,
      55.8
    ],
    [
      -1.11,
      54.62
    ],
    [
      -0.43,
      54.46
    ],
    [
      0.18,
      53.33
    ],
    [
      0.47,
      52.93
    ],
    [
      1.68,
      52.74
    ],
    [
      1.56,
      52.1
    ],
    [
      1.05,
      51.81
    ],
    [
      1.45,
      51.29
    ],
    [
      0.55,
      50.77
    ],
    [
      -0.79,
      50.77
    ],
    [
      -2.49,
      50.5
    ],
    [
      -2.96,
      50.7
    ],
    [
      -3.62,
      50.23
    ],
    [
      -4.54,
      50.34
    ],
    [
      -5.25,
      49.96
    ],
    [
      -5.78,
      50.16
    ],
    [
      -4.31,
      51.21
    ],
    [
      -3.41,
      51.43
    ],
    [
      -3.42,
      51.43
    ],
    [
      -4.98,
      51.59
    ],
    [
      -5.27,
      51.99
    ],
    [
      -4.22,
      52.3
    ],
    [
      -4.77,
      52.84
    ],
    [
      -4.58,
      53.5
    ],
    [
      -3.09,
      53.4
    ],
    [
      -3.09,
      53.4
    ],
    [
      -2.95,
      53.99
    ],
    [
      -3.61,
      54.6
    ],
    [
      -3.63,
      54.62
    ],
    [
      -4.84,
      54.79
    ],
    [
      -5.08,
      55.06
    ],
    [
      -4.72,
      55.51
    ],
    [
      -5.05,
      55.78
    ],
    [
      -5.59,
      55.31
    ],
    [
      -5.64,
      56.28
    ],
    [
      -6.15,
      56.79
    ],
    [
      -5.79,
      57.82
    ],
    [
      -5.01,
      58.63
    ],
    [
      -4.21,
      58.55
    ],
    [
      -3.01,
      58.64
    ]
  ],
  [
    [
      41.55,
      41.54
    ],
    [
      41.7,
      41.96
    ],
    [
      41.45,
      42.65
    ],
    [
      40.88,
      43.01
    ],
    [
      40.32,
      43.13
    ],
    [
      39.96,
      43.43
    ]
  ],
  [
    [
      39.96,
      43.43
    ],
    [
      40.08,
      43.55
    ]
  ],
  [
    [
      40.08,
      43.55
    ],
    [
      40.92,
      43.38
    ],
    [
      42.39,
      43.22
    ],
    [
      43.76,
      42.74
    ],
    [
      43.93,
      42.55
    ],
    [
      44.54,
      42.71
    ]
  ],
  [
    [
      44.54,
      42.71
    ],
    [
      45.47,
      42.5
    ]
  ],
  [
    [
      45.47,
      42.5
    ],
    [
      45.78,
      42.09
    ],
    [
      46.4,
      41.86
    ]
  ],
  [
    [
      43.58,
      41.09
    ],
    [
      42.62,
      41.58
    ],
    [
      41.55,
      41.54
    ]
  ],
  [
    [
      1.06,
      5.93
    ],
    [
      -0.51,
      5.34
    ],
    [
      -1.06,
      5
    ],
    [
      -1.96,
      4.71
    ],
    [
      -2.86,
      4.99
    ]
  ],
  [
    [
      0.02,
      11.02
    ],
    [
      -0.05,
      10.71
    ],
    [
      0.37,
      10.19
    ],
    [
      0.37,
      9.47
    ],
    [
      0.46,
      8.68
    ],
    [
      0.71,
      8.31
    ],
    [
      0.49,
      7.41
    ],
    [
      0.57,
      6.91
    ],
    [
      0.84,
      6.28
    ],
    [
      1.06,
      5.93
    ]
  ],
  [
    [
      -8.44,
      7.69
    ],
    [
      -8.72,
      7.71
    ],
    [
      -8.93,
      7.31
    ],
    [
      -9.21,
      7.31
    ],
    [
      -9.4,
      7.53
    ],
    [
      -9.34,
      7.93
    ],
    [
      -9.76,
      8.54
    ],
    [
      -10.02,
      8.43
    ],
    [
      -10.23,
      8.41
    ]
  ],
  [
    [
      -10.23,
      8.41
    ],
    [
      -10.51,
      8.35
    ],
    [
      -10.49,
      8.72
    ],
    [
      -10.65,
      8.98
    ],
    [
      -10.62,
      9.27
    ],
    [
      -10.84,
      9.69
    ],
    [
      -11.12,
      10.05
    ],
    [
      -11.92,
      10.05
    ],
    [
      -12.15,
      9.86
    ],
    [
      -12.43,
      9.84
    ],
    [
      -12.6,
      9.62
    ],
    [
      -12.71,
      9.34
    ],
    [
      -13.25,
      8.9
    ]
  ],
  [
    [
      -13.25,
      8.9
    ],
    [
      -13.69,
      9.49
    ],
    [
      -14.07,
      9.89
    ],
    [
      -14.33,
      10.02
    ],
    [
      -14.58,
      10.21
    ],
    [
      -14.69,
      10.66
    ],
    [
      -14.84,
      10.88
    ],
    [
      -15.13,
      11.04
    ]
  ],
  [
    [
      -15.13,
      11.04
    ],
    [
      -14.69,
      11.53
    ],
    [
      -14.38,
      11.51
    ],
    [
      -14.12,
      11.68
    ],
    [
      -13.9,
      11.68
    ],
    [
      -13.74,
      11.81
    ],
    [
      -13.83,
      12.14
    ],
    [
      -13.72,
      12.25
    ],
    [
      -13.7,
      12.59
    ]
  ],
  [
    [
      -13.7,
      12.59
    ],
    [
      -13.22,
      12.58
    ],
    [
      -12.5,
      12.33
    ],
    [
      -12.28,
      12.35
    ],
    [
      -12.2,
      12.47
    ],
    [
      -11.66,
      12.39
    ],
    [
      -11.51,
      12.44
    ]
  ],
  [
    [
      -11.51,
      12.44
    ],
    [
      -11.46,
      12.08
    ],
    [
      -11.3,
      12.08
    ],
    [
      -11.04,
      12.21
    ],
    [
      -10.87,
      12.18
    ],
    [
      -10.59,
      11.92
    ],
    [
      -10.17,
      11.84
    ],
    [
      -9.89,
      12.06
    ],
    [
      -9.57,
      12.19
    ],
    [
      -9.33,
      12.33
    ],
    [
      -9.13,
      12.31
    ],
    [
      -8.91,
      12.09
    ],
    [
      -8.79,
      11.81
    ],
    [
      -8.38,
      11.39
    ],
    [
      -8.58,
      11.14
    ],
    [
      -8.62,
      10.81
    ],
    [
      -8.41,
      10.91
    ],
    [
      -8.28,
      10.79
    ],
    [
      -8.34,
      10.49
    ],
    [
      -8.03,
      10.21
    ]
  ],
  [
    [
      -16.84,
      13.15
    ],
    [
      -16.71,
      13.59
    ]
  ],
  [
    [
      -16.71,
      13.59
    ],
    [
      -15.62,
      13.62
    ],
    [
      -15.4,
      13.86
    ],
    [
      -15.08,
      13.88
    ],
    [
      -14.69,
      13.63
    ],
    [
      -14.38,
      13.63
    ],
    [
      -14.05,
      13.79
    ],
    [
      -13.84,
      13.51
    ],
    [
      -14.28,
      13.28
    ],
    [
      -14.71,
      13.3
    ],
    [
      -15.14,
      13.51
    ],
    [
      -15.51,
      13.28
    ],
    [
      -15.69,
      13.27
    ],
    [
      -15.93,
      13.13
    ],
    [
      -16.84,
      13.15
    ]
  ],
  [
    [
      -15.13,
      11.04
    ],
    [
      -15.66,
      11.46
    ],
    [
      -16.09,
      11.52
    ],
    [
      -16.31,
      11.81
    ],
    [
      -16.31,
      11.96
    ],
    [
      -16.61,
      12.17
    ],
    [
      -16.68,
      12.38
    ]
  ],
  [
    [
      -16.68,
      12.38
    ],
    [
      -16.15,
      12.55
    ],
    [
      -15.82,
      12.52
    ],
    [
      -15.55,
      12.63
    ],
    [
      -13.7,
      12.59
    ]
  ],
  [
    [
      9.49,
      1.01
    ],
    [
      9.31,
      1.16
    ],
    [
      9.65,
      2.28
    ]
  ],
  [
    [
      23.7,
      35.71
    ],
    [
      24.25,
      35.37
    ],
    [
      25.03,
      35.42
    ],
    [
      25.77,
      35.35
    ],
    [
      25.75,
      35.18
    ],
    [
      26.29,
      35.3
    ],
    [
      26.16,
      35
    ],
    [
      24.72,
      34.92
    ],
    [
      24.74,
      35.08
    ],
    [
      23.51,
      35.28
    ],
    [
      23.7,
      35.71
    ]
  ],
  [
    [
      26.06,
      40.82
    ],
    [
      25.45,
      40.85
    ],
    [
      24.93,
      40.95
    ],
    [
      23.71,
      40.69
    ],
    [
      24.41,
      40.12
    ],
    [
      23.9,
      39.96
    ],
    [
      23.34,
      39.96
    ],
    [
      22.81,
      40.48
    ],
    [
      22.63,
      40.26
    ],
    [
      22.85,
      39.66
    ],
    [
      23.35,
      39.19
    ],
    [
      22.97,
      38.97
    ],
    [
      23.53,
      38.51
    ],
    [
      24.03,
      38.22
    ],
    [
      24.04,
      37.66
    ],
    [
      23.12,
      37.92
    ],
    [
      23.41,
      37.41
    ],
    [
      22.77,
      37.31
    ],
    [
      23.15,
      36.42
    ],
    [
      22.49,
      36.41
    ],
    [
      21.67,
      36.84
    ],
    [
      21.3,
      37.64
    ],
    [
      21.12,
      38.31
    ],
    [
      20.73,
      38.77
    ],
    [
      20.22,
      39.34
    ],
    [
      20.15,
      39.62
    ]
  ],
  [
    [
      21.02,
      40.84
    ],
    [
      21.67,
      40.93
    ],
    [
      22.06,
      41.15
    ],
    [
      22.6,
      41.13
    ],
    [
      22.76,
      41.3
    ],
    [
      22.95,
      41.34
    ]
  ],
  [
    [
      26.12,
      41.83
    ],
    [
      26.6,
      41.56
    ],
    [
      26.29,
      40.94
    ],
    [
      26.06,
      40.82
    ]
  ],
  [
    [
      -90.1,
      13.74
    ],
    [
      -90.61,
      13.91
    ],
    [
      -91.23,
      13.93
    ],
    [
      -91.69,
      14.13
    ],
    [
      -92.23,
      14.54
    ]
  ],
  [
    [
      -92.23,
      14.54
    ],
    [
      -92.2,
      14.83
    ],
    [
      -92.09,
      15.06
    ],
    [
      -92.23,
      15.25
    ],
    [
      -91.75,
      16.07
    ],
    [
      -90.46,
      16.07
    ],
    [
      -90.44,
      16.41
    ],
    [
      -90.6,
      16.47
    ],
    [
      -90.71,
      16.69
    ],
    [
      -91.08,
      16.92
    ],
    [
      -91.45,
      17.25
    ],
    [
      -91,
      17.25
    ],
    [
      -91,
      17.82
    ],
    [
      -90.07,
      17.82
    ],
    [
      -89.14,
      17.81
    ]
  ],
  [
    [
      -88.93,
      15.89
    ],
    [
      -88.6,
      15.71
    ],
    [
      -88.52,
      15.86
    ],
    [
      -88.23,
      15.73
    ]
  ],
  [
    [
      -88.23,
      15.73
    ],
    [
      -88.68,
      15.35
    ],
    [
      -89.15,
      15.07
    ],
    [
      -89.23,
      14.87
    ],
    [
      -89.15,
      14.68
    ],
    [
      -89.35,
      14.42
    ]
  ],
  [
    [
      -89.35,
      14.42
    ],
    [
      -89.59,
      14.36
    ],
    [
      -89.53,
      14.24
    ],
    [
      -89.72,
      14.13
    ],
    [
      -90.06,
      13.88
    ],
    [
      -90.1,
      13.74
    ]
  ],
  [
    [
      -59.76,
      8.37
    ],
    [
      -59.1,
      8
    ],
    [
      -58.48,
      7.35
    ],
    [
      -58.45,
      6.83
    ],
    [
      -58.08,
      6.81
    ],
    [
      -57.54,
      6.32
    ],
    [
      -57.15,
      5.97
    ]
  ],
  [
    [
      -57.15,
      5.97
    ],
    [
      -57.31,
      5.07
    ],
    [
      -57.91,
      4.81
    ],
    [
      -57.86,
      4.58
    ],
    [
      -58.04,
      4.06
    ],
    [
      -57.6,
      3.33
    ],
    [
      -57.28,
      3.33
    ],
    [
      -57.15,
      2.77
    ],
    [
      -56.54,
      1.9
    ]
  ],
  [
    [
      -60.73,
      5.2
    ],
    [
      -61.41,
      5.96
    ],
    [
      -61.14,
      6.23
    ],
    [
      -61.16,
      6.7
    ],
    [
      -60.54,
      6.86
    ],
    [
      -60.3,
      7.04
    ],
    [
      -60.64,
      7.42
    ],
    [
      -60.55,
      7.78
    ],
    [
      -59.76,
      8.37
    ]
  ],
  [
    [
      -87.32,
      12.98
    ],
    [
      -87.49,
      13.3
    ],
    [
      -87.79,
      13.38
    ]
  ],
  [
    [
      -87.79,
      13.38
    ],
    [
      -87.72,
      13.79
    ],
    [
      -87.86,
      13.89
    ],
    [
      -88.07,
      13.96
    ],
    [
      -88.5,
      13.85
    ],
    [
      -88.54,
      13.98
    ],
    [
      -88.84,
      14.14
    ],
    [
      -89.06,
      14.34
    ],
    [
      -89.35,
      14.42
    ]
  ],
  [
    [
      -88.23,
      15.73
    ],
    [
      -88.12,
      15.69
    ],
    [
      -87.9,
      15.86
    ],
    [
      -87.62,
      15.88
    ],
    [
      -87.52,
      15.8
    ],
    [
      -87.37,
      15.85
    ],
    [
      -86.9,
      15.76
    ],
    [
      -86.44,
      15.78
    ],
    [
      -86.12,
      15.89
    ],
    [
      -86,
      16.01
    ],
    [
      -85.68,
      15.95
    ],
    [
      -85.44,
      15.89
    ],
    [
      -85.18,
      15.91
    ],
    [
      -84.98,
      16
    ],
    [
      -84.53,
      15.86
    ],
    [
      -84.37,
      15.84
    ],
    [
      -84.06,
      15.65
    ],
    [
      -83.77,
      15.42
    ],
    [
      -83.41,
      15.27
    ],
    [
      -83.15,
      15
    ]
  ],
  [
    [
      -83.15,
      15
    ],
    [
      -83.49,
      15.02
    ],
    [
      -83.63,
      14.88
    ],
    [
      -83.98,
      14.75
    ],
    [
      -84.23,
      14.75
    ],
    [
      -84.45,
      14.62
    ],
    [
      -84.65,
      14.67
    ],
    [
      -84.82,
      14.82
    ],
    [
      -84.92,
      14.79
    ],
    [
      -85.05,
      14.55
    ],
    [
      -85.15,
      14.56
    ],
    [
      -85.17,
      14.35
    ],
    [
      -85.51,
      14.08
    ],
    [
      -85.7,
      13.96
    ],
    [
      -85.8,
      13.84
    ],
    [
      -86.1,
      14.04
    ],
    [
      -86.31,
      13.77
    ],
    [
      -86.52,
      13.78
    ],
    [
      -86.76,
      13.75
    ],
    [
      -86.73,
      13.26
    ],
    [
      -86.88,
      13.25
    ],
    [
      -87.01,
      13.03
    ],
    [
      -87.32,
      12.98
    ]
  ],
  [
    [
      18.83,
      45.91
    ],
    [
      19.07,
      45.52
    ]
  ],
  [
    [
      19.07,
      45.52
    ],
    [
      19.39,
      45.24
    ]
  ],
  [
    [
      19.39,
      45.24
    ],
    [
      19.01,
      44.86
    ]
  ],
  [
    [
      18.56,
      42.65
    ],
    [
      18.45,
      42.48
    ],
    [
      17.51,
      42.85
    ],
    [
      16.93,
      43.21
    ],
    [
      16.02,
      43.51
    ],
    [
      15.17,
      44.24
    ],
    [
      15.38,
      44.32
    ],
    [
      14.92,
      44.74
    ],
    [
      14.9,
      45.08
    ],
    [
      14.26,
      45.23
    ],
    [
      13.95,
      44.8
    ],
    [
      13.66,
      45.14
    ],
    [
      13.68,
      45.48
    ],
    [
      13.72,
      45.5
    ]
  ],
  [
    [
      13.72,
      45.5
    ],
    [
      14.41,
      45.47
    ],
    [
      14.6,
      45.63
    ],
    [
      14.94,
      45.47
    ],
    [
      15.33,
      45.45
    ],
    [
      15.32,
      45.73
    ],
    [
      15.67,
      45.83
    ],
    [
      15.77,
      46.24
    ],
    [
      16.56,
      46.5
    ]
  ],
  [
    [
      16.56,
      46.5
    ],
    [
      16.88,
      46.38
    ],
    [
      17.63,
      45.95
    ],
    [
      18.46,
      45.76
    ],
    [
      18.83,
      45.91
    ]
  ],
  [
    [
      -71.71,
      18.04
    ],
    [
      -72.37,
      18.21
    ],
    [
      -72.84,
      18.15
    ],
    [
      -73.45,
      18.22
    ],
    [
      -73.92,
      18.03
    ],
    [
      -74.46,
      18.34
    ],
    [
      -74.37,
      18.66
    ],
    [
      -73.45,
      18.53
    ],
    [
      -72.69,
      18.45
    ],
    [
      -72.33,
      18.67
    ],
    [
      -72.79,
      19.1
    ],
    [
      -72.78,
      19.48
    ],
    [
      -73.42,
      19.64
    ],
    [
      -73.19,
      19.92
    ],
    [
      -72.58,
      19.87
    ],
    [
      -71.71,
      19.71
    ]
  ],
  [
    [
      16.98,
      48.12
    ],
    [
      17.49,
      47.87
    ],
    [
      17.86,
      47.76
    ],
    [
      18.7,
      47.88
    ],
    [
      18.78,
      48.08
    ],
    [
      19.17,
      48.11
    ],
    [
      19.66,
      48.27
    ],
    [
      19.77,
      48.2
    ],
    [
      20.24,
      48.33
    ],
    [
      20.47,
      48.56
    ],
    [
      20.8,
      48.62
    ],
    [
      21.87,
      48.32
    ],
    [
      22.09,
      48.42
    ]
  ],
  [
    [
      22.09,
      48.42
    ],
    [
      22.64,
      48.15
    ],
    [
      22.71,
      47.88
    ]
  ],
  [
    [
      22.71,
      47.88
    ],
    [
      22.1,
      47.67
    ],
    [
      21.63,
      46.99
    ],
    [
      21.02,
      46.32
    ],
    [
      20.22,
      46.13
    ]
  ],
  [
    [
      20.22,
      46.13
    ],
    [
      19.6,
      46.17
    ]
  ],
  [
    [
      19.6,
      46.17
    ],
    [
      18.83,
      45.91
    ]
  ],
  [
    [
      16.56,
      46.5
    ],
    [
      16.37,
      46.84
    ],
    [
      16.2,
      46.85
    ]
  ],
  [
    [
      120.72,
      -10.24
    ],
    [
      120.3,
      -10.26
    ],
    [
      118.97,
      -9.56
    ],
    [
      119.9,
      -9.36
    ],
    [
      120.43,
      -9.67
    ],
    [
      120.78,
      -9.97
    ],
    [
      120.72,
      -10.24
    ]
  ],
  [
    [
      124.97,
      -8.89
    ],
    [
      125.07,
      -9.09
    ],
    [
      125.09,
      -9.39
    ]
  ],
  [
    [
      125.09,
      -9.39
    ],
    [
      124.44,
      -10.14
    ],
    [
      123.58,
      -10.36
    ],
    [
      123.46,
      -10.24
    ],
    [
      123.55,
      -9.9
    ],
    [
      123.98,
      -9.29
    ],
    [
      124.97,
      -8.89
    ]
  ],
  [
    [
      117.9,
      -8.1
    ],
    [
      118.26,
      -8.36
    ],
    [
      118.88,
      -8.28
    ],
    [
      119.13,
      -8.71
    ],
    [
      117.97,
      -8.91
    ],
    [
      117.28,
      -9.04
    ],
    [
      116.74,
      -9.03
    ],
    [
      117.08,
      -8.46
    ],
    [
      117.63,
      -8.45
    ],
    [
      117.9,
      -8.1
    ]
  ],
  [
    [
      122.9,
      -8.09
    ],
    [
      122.76,
      -8.65
    ],
    [
      121.25,
      -8.93
    ],
    [
      119.92,
      -8.81
    ],
    [
      119.92,
      -8.44
    ],
    [
      120.72,
      -8.24
    ],
    [
      121.34,
      -8.54
    ],
    [
      122.01,
      -8.46
    ],
    [
      122.9,
      -8.09
    ]
  ],
  [
    [
      108.62,
      -6.78
    ],
    [
      110.54,
      -6.88
    ],
    [
      110.76,
      -6.47
    ],
    [
      112.61,
      -6.95
    ],
    [
      112.98,
      -7.59
    ],
    [
      114.48,
      -7.78
    ],
    [
      115.71,
      -8.37
    ],
    [
      114.56,
      -8.75
    ],
    [
      113.46,
      -8.35
    ],
    [
      112.56,
      -8.38
    ],
    [
      111.52,
      -8.3
    ],
    [
      110.59,
      -8.12
    ],
    [
      109.43,
      -7.74
    ],
    [
      108.69,
      -7.64
    ],
    [
      108.28,
      -7.77
    ],
    [
      106.45,
      -7.35
    ],
    [
      106.28,
      -6.92
    ],
    [
      105.37,
      -6.85
    ],
    [
      106.05,
      -5.9
    ],
    [
      107.27,
      -5.95
    ],
    [
      108.07,
      -6.35
    ],
    [
      108.49,
      -6.42
    ],
    [
      108.62,
      -6.78
    ]
  ],
  [
    [
      134.72,
      -6.21
    ],
    [
      134.21,
      -6.9
    ],
    [
      134.11,
      -6.14
    ],
    [
      134.29,
      -5.78
    ],
    [
      134.5,
      -5.45
    ],
    [
      134.73,
      -5.74
    ],
    [
      134.72,
      -6.21
    ]
  ],
  [
    [
      127.25,
      -3.46
    ],
    [
      126.87,
      -3.79
    ],
    [
      126.18,
      -3.61
    ],
    [
      125.99,
      -3.18
    ],
    [
      127,
      -3.13
    ],
    [
      127.25,
      -3.46
    ]
  ],
  [
    [
      130.47,
      -3.09
    ],
    [
      130.83,
      -3.86
    ],
    [
      129.99,
      -3.45
    ],
    [
      129.16,
      -3.36
    ],
    [
      128.59,
      -3.43
    ],
    [
      127.9,
      -3.39
    ],
    [
      128.14,
      -2.84
    ],
    [
      129.37,
      -2.8
    ],
    [
      130.47,
      -3.09
    ]
  ],
  [
    [
      141,
      -2.6
    ],
    [
      141.02,
      -5.86
    ],
    [
      141.03,
      -9.12
    ]
  ],
  [
    [
      141.03,
      -9.12
    ],
    [
      140.14,
      -8.3
    ],
    [
      139.13,
      -8.1
    ],
    [
      138.88,
      -8.38
    ],
    [
      137.61,
      -8.41
    ],
    [
      138.04,
      -7.6
    ],
    [
      138.67,
      -7.32
    ],
    [
      138.41,
      -6.23
    ],
    [
      137.93,
      -5.39
    ],
    [
      135.99,
      -4.55
    ],
    [
      135.16,
      -4.46
    ],
    [
      133.66,
      -3.54
    ],
    [
      133.37,
      -4.02
    ],
    [
      132.98,
      -4.11
    ],
    [
      132.76,
      -3.75
    ],
    [
      132.75,
      -3.31
    ],
    [
      131.99,
      -2.82
    ],
    [
      133.07,
      -2.46
    ],
    [
      133.78,
      -2.48
    ],
    [
      133.7,
      -2.21
    ],
    [
      132.23,
      -2.21
    ],
    [
      131.84,
      -1.62
    ],
    [
      130.94,
      -1.43
    ],
    [
      130.52,
      -0.94
    ],
    [
      131.87,
      -0.7
    ],
    [
      132.38,
      -0.37
    ],
    [
      133.99,
      -0.78
    ],
    [
      134.14,
      -1.15
    ],
    [
      134.42,
      -2.77
    ],
    [
      135.46,
      -3.37
    ],
    [
      136.29,
      -2.31
    ],
    [
      137.44,
      -1.7
    ],
    [
      138.33,
      -1.7
    ],
    [
      139.18,
      -2.05
    ],
    [
      139.93,
      -2.41
    ],
    [
      141,
      -2.6
    ]
  ],
  [
    [
      125.24,
      1.42
    ],
    [
      124.44,
      0.43
    ],
    [
      123.69,
      0.24
    ],
    [
      122.72,
      0.43
    ],
    [
      121.06,
      0.38
    ],
    [
      120.18,
      0.24
    ],
    [
      120.04,
      -0.52
    ],
    [
      120.94,
      -1.41
    ],
    [
      121.48,
      -0.96
    ],
    [
      123.34,
      -0.62
    ],
    [
      123.26,
      -1.08
    ],
    [
      122.82,
      -0.93
    ],
    [
      122.39,
      -1.52
    ],
    [
      121.51,
      -1.9
    ],
    [
      122.45,
      -3.19
    ],
    [
      122.27,
      -3.53
    ],
    [
      123.17,
      -4.68
    ],
    [
      123.16,
      -5.34
    ],
    [
      122.63,
      -5.63
    ],
    [
      122.24,
      -5.28
    ],
    [
      122.72,
      -4.46
    ],
    [
      121.74,
      -4.85
    ],
    [
      121.49,
      -4.57
    ],
    [
      121.62,
      -4.19
    ],
    [
      120.9,
      -3.6
    ],
    [
      120.97,
      -2.63
    ],
    [
      120.31,
      -2.93
    ],
    [
      120.39,
      -4.1
    ],
    [
      120.43,
      -5.53
    ],
    [
      119.8,
      -5.67
    ],
    [
      119.37,
      -5.38
    ],
    [
      119.65,
      -4.46
    ],
    [
      119.5,
      -3.49
    ],
    [
      119.08,
      -3.49
    ],
    [
      118.77,
      -2.8
    ],
    [
      119.18,
      -2.15
    ],
    [
      119.32,
      -1.35
    ],
    [
      119.83,
      0.15
    ],
    [
      120.04,
      0.57
    ],
    [
      120.89,
      1.31
    ],
    [
      121.67,
      1.01
    ],
    [
      122.93,
      0.88
    ],
    [
      124.08,
      0.92
    ],
    [
      125.07,
      1.64
    ],
    [
      125.24,
      1.42
    ]
  ],
  [
    [
      128.69,
      1.13
    ],
    [
      128.64,
      0.26
    ],
    [
      128.12,
      0.36
    ],
    [
      127.97,
      -0.25
    ],
    [
      128.38,
      -0.78
    ],
    [
      128.1,
      -0.9
    ],
    [
      127.7,
      -0.27
    ],
    [
      127.4,
      1.01
    ],
    [
      127.6,
      1.81
    ],
    [
      127.93,
      2.17
    ],
    [
      128,
      1.63
    ],
    [
      128.59,
      1.54
    ],
    [
      128.69,
      1.13
    ]
  ],
  [
    [
      109.66,
      2.01
    ],
    [
      109.83,
      1.34
    ],
    [
      110.51,
      0.77
    ],
    [
      111.16,
      0.98
    ],
    [
      111.8,
      0.9
    ],
    [
      112.38,
      1.41
    ],
    [
      112.86,
      1.5
    ],
    [
      113.81,
      1.22
    ],
    [
      114.62,
      1.43
    ],
    [
      115.13,
      2.82
    ],
    [
      115.52,
      3.17
    ],
    [
      115.87,
      4.31
    ],
    [
      117.02,
      4.31
    ],
    [
      117.88,
      4.14
    ]
  ],
  [
    [
      117.88,
      4.14
    ],
    [
      117.31,
      3.23
    ],
    [
      118.05,
      2.29
    ],
    [
      117.88,
      1.83
    ],
    [
      119,
      0.9
    ],
    [
      117.81,
      0.78
    ],
    [
      117.48,
      0.1
    ],
    [
      117.52,
      -0.8
    ],
    [
      116.56,
      -1.49
    ],
    [
      116.53,
      -2.48
    ],
    [
      116.15,
      -4.01
    ],
    [
      116,
      -3.66
    ],
    [
      114.86,
      -4.11
    ],
    [
      114.47,
      -3.5
    ],
    [
      113.76,
      -3.44
    ],
    [
      113.26,
      -3.12
    ],
    [
      112.07,
      -3.48
    ],
    [
      111.7,
      -2.99
    ],
    [
      111.05,
      -3.05
    ],
    [
      110.22,
      -2.93
    ],
    [
      110.07,
      -1.59
    ],
    [
      109.57,
      -1.31
    ],
    [
      109.09,
      -0.46
    ],
    [
      108.95,
      0.42
    ],
    [
      109.07,
      1.34
    ],
    [
      109.66,
      2.01
    ]
  ],
  [
    [
      105.82,
      -5.85
    ],
    [
      104.71,
      -5.87
    ],
    [
      103.87,
      -5.04
    ],
    [
      102.58,
      -4.22
    ],
    [
      102.16,
      -3.61
    ],
    [
      101.4,
      -2.8
    ],
    [
      100.9,
      -2.05
    ],
    [
      100.14,
      -0.65
    ],
    [
      99.26,
      0.18
    ],
    [
      98.97,
      1.04
    ],
    [
      98.6,
      1.82
    ],
    [
      97.7,
      2.45
    ],
    [
      97.18,
      3.31
    ],
    [
      96.42,
      3.87
    ],
    [
      95.38,
      4.97
    ],
    [
      95.29,
      5.48
    ],
    [
      95.94,
      5.44
    ],
    [
      97.48,
      5.25
    ],
    [
      98.37,
      4.27
    ],
    [
      99.14,
      3.59
    ],
    [
      99.69,
      3.17
    ],
    [
      100.64,
      2.1
    ],
    [
      101.66,
      2.08
    ],
    [
      102.5,
      1.4
    ],
    [
      103.08,
      0.56
    ],
    [
      103.84,
      0.1
    ],
    [
      103.44,
      -0.71
    ],
    [
      104.01,
      -1.06
    ],
    [
      104.37,
      -1.08
    ],
    [
      104.54,
      -1.78
    ],
    [
      104.89,
      -2.34
    ],
    [
      105.62,
      -2.43
    ],
    [
      106.11,
      -3.06
    ],
    [
      105.86,
      -4.31
    ],
    [
      105.82,
      -5.85
    ]
  ],
  [
    [
      81.11,
      30.18
    ],
    [
      80.48,
      29.73
    ],
    [
      80.09,
      28.79
    ],
    [
      81.06,
      28.42
    ],
    [
      82,
      27.93
    ],
    [
      83.3,
      27.36
    ],
    [
      84.68,
      27.23
    ],
    [
      85.25,
      26.73
    ],
    [
      86.02,
      26.63
    ],
    [
      87.23,
      26.4
    ],
    [
      88.06,
      26.41
    ],
    [
      88.17,
      26.81
    ],
    [
      88.04,
      27.45
    ],
    [
      88.12,
      27.88
    ]
  ],
  [
    [
      97.33,
      28.26
    ],
    [
      97.4,
      27.88
    ],
    [
      97.05,
      27.7
    ],
    [
      97.13,
      27.08
    ],
    [
      96.42,
      27.26
    ],
    [
      95.12,
      26.57
    ],
    [
      95.16,
      26
    ],
    [
      94.6,
      25.16
    ],
    [
      94.55,
      24.68
    ],
    [
      94.11,
      23.85
    ],
    [
      93.33,
      24.08
    ],
    [
      93.29,
      23.04
    ],
    [
      93.06,
      22.7
    ],
    [
      93.17,
      22.28
    ],
    [
      92.67,
      22.04
    ]
  ],
  [
    [
      89.03,
      22.06
    ],
    [
      88.89,
      21.69
    ],
    [
      88.21,
      21.7
    ],
    [
      86.98,
      21.5
    ],
    [
      87.03,
      20.74
    ],
    [
      86.5,
      20.15
    ],
    [
      85.06,
      19.48
    ],
    [
      83.94,
      18.3
    ],
    [
      83.19,
      17.67
    ],
    [
      82.19,
      17.02
    ],
    [
      82.19,
      16.56
    ],
    [
      81.69,
      16.31
    ],
    [
      80.79,
      15.95
    ],
    [
      80.32,
      15.9
    ],
    [
      80.03,
      15.14
    ],
    [
      80.23,
      13.84
    ],
    [
      80.29,
      13.01
    ],
    [
      79.86,
      12.06
    ],
    [
      79.86,
      10.36
    ],
    [
      79.34,
      10.31
    ],
    [
      78.89,
      9.55
    ],
    [
      79.19,
      9.22
    ],
    [
      78.28,
      8.93
    ],
    [
      77.94,
      8.25
    ],
    [
      77.54,
      7.97
    ],
    [
      76.59,
      8.9
    ],
    [
      76.13,
      10.3
    ],
    [
      75.75,
      11.31
    ],
    [
      75.4,
      11.78
    ],
    [
      74.86,
      12.74
    ],
    [
      74.62,
      13.99
    ],
    [
      74.44,
      14.62
    ],
    [
      73.53,
      15.99
    ],
    [
      73.12,
      17.93
    ],
    [
      72.82,
      19.21
    ],
    [
      72.82,
      20.42
    ],
    [
      72.63,
      21.36
    ],
    [
      71.18,
      20.76
    ],
    [
      70.47,
      20.88
    ],
    [
      69.16,
      22.09
    ],
    [
      69.64,
      22.45
    ],
    [
      69.35,
      22.84
    ],
    [
      68.18,
      23.69
    ]
  ],
  [
    [
      68.18,
      23.69
    ],
    [
      68.84,
      24.36
    ],
    [
      71.04,
      24.36
    ],
    [
      70.84,
      25.22
    ],
    [
      70.28,
      25.72
    ],
    [
      70.17,
      26.49
    ],
    [
      69.51,
      26.94
    ],
    [
      70.62,
      27.99
    ],
    [
      71.78,
      27.91
    ],
    [
      72.82,
      28.96
    ],
    [
      73.45,
      29.98
    ],
    [
      74.42,
      30.98
    ],
    [
      74.41,
      31.69
    ],
    [
      75.26,
      32.27
    ],
    [
      74.45,
      32.76
    ],
    [
      74.1,
      33.44
    ],
    [
      73.75,
      34.32
    ],
    [
      74.24,
      34.75
    ],
    [
      75.76,
      34.5
    ],
    [
      76.87,
      34.65
    ],
    [
      77.84,
      35.49
    ]
  ],
  [
    [
      -6.2,
      53.87
    ],
    [
      -6.03,
      53.15
    ],
    [
      -6.79,
      52.26
    ],
    [
      -8.56,
      51.67
    ],
    [
      -9.98,
      51.82
    ],
    [
      -9.17,
      52.86
    ],
    [
      -9.69,
      53.88
    ],
    [
      -8.33,
      54.66
    ],
    [
      -7.57,
      55.13
    ]
  ],
  [
    [
      53.92,
      37.2
    ],
    [
      54.8,
      37.39
    ],
    [
      55.51,
      37.96
    ],
    [
      56.18,
      37.94
    ],
    [
      56.62,
      38.12
    ],
    [
      57.33,
      38.03
    ],
    [
      58.44,
      37.52
    ],
    [
      59.23,
      37.41
    ],
    [
      60.38,
      36.53
    ],
    [
      61.12,
      36.49
    ],
    [
      61.21,
      35.65
    ]
  ],
  [
    [
      60.87,
      29.83
    ],
    [
      61.37,
      29.3
    ],
    [
      61.77,
      28.7
    ],
    [
      62.73,
      28.26
    ],
    [
      62.76,
      27.38
    ],
    [
      63.23,
      27.22
    ],
    [
      63.32,
      26.76
    ],
    [
      61.87,
      26.24
    ],
    [
      61.5,
      25.08
    ]
  ],
  [
    [
      61.5,
      25.08
    ],
    [
      59.62,
      25.38
    ],
    [
      58.53,
      25.61
    ],
    [
      57.4,
      25.74
    ],
    [
      56.97,
      26.97
    ],
    [
      56.49,
      27.14
    ],
    [
      55.72,
      26.96
    ],
    [
      54.72,
      26.48
    ],
    [
      53.49,
      26.81
    ],
    [
      52.48,
      27.58
    ],
    [
      51.52,
      27.87
    ],
    [
      50.85,
      28.81
    ],
    [
      50.12,
      30.15
    ],
    [
      49.58,
      29.99
    ],
    [
      48.94,
      30.32
    ],
    [
      48.57,
      29.93
    ]
  ],
  [
    [
      48.57,
      29.93
    ],
    [
      48.01,
      30.45
    ],
    [
      48,
      30.99
    ],
    [
      47.69,
      30.98
    ],
    [
      47.85,
      31.71
    ],
    [
      47.33,
      32.47
    ],
    [
      46.11,
      33.02
    ],
    [
      45.42,
      33.97
    ],
    [
      45.65,
      34.75
    ],
    [
      46.15,
      35.09
    ],
    [
      46.08,
      35.68
    ],
    [
      45.42,
      35.98
    ]
  ],
  [
    [
      45.42,
      35.98
    ],
    [
      44.77,
      37.17
    ],
    [
      44.23,
      37.97
    ]
  ],
  [
    [
      44.23,
      37.97
    ],
    [
      44.42,
      38.28
    ],
    [
      44.11,
      39.43
    ],
    [
      44.79,
      39.71
    ]
  ],
  [
    [
      48.88,
      38.32
    ],
    [
      49.2,
      37.58
    ],
    [
      50.15,
      37.37
    ],
    [
      50.84,
      36.87
    ],
    [
      52.26,
      36.7
    ],
    [
      53.83,
      36.97
    ],
    [
      53.92,
      37.2
    ]
  ],
  [
    [
      48.57,
      29.93
    ],
    [
      47.97,
      29.98
    ]
  ],
  [
    [
      47.97,
      29.98
    ],
    [
      47.3,
      30.06
    ],
    [
      46.57,
      29.1
    ]
  ],
  [
    [
      46.57,
      29.1
    ],
    [
      44.71,
      29.18
    ],
    [
      41.89,
      31.19
    ],
    [
      40.4,
      31.89
    ],
    [
      39.2,
      32.16
    ]
  ],
  [
    [
      39.2,
      32.16
    ],
    [
      38.79,
      33.38
    ]
  ],
  [
    [
      38.79,
      33.38
    ],
    [
      41.01,
      34.42
    ],
    [
      41.38,
      35.63
    ],
    [
      41.29,
      36.36
    ],
    [
      41.84,
      36.61
    ],
    [
      42.35,
      37.23
    ]
  ],
  [
    [
      42.35,
      37.23
    ],
    [
      42.78,
      37.39
    ],
    [
      43.94,
      37.26
    ],
    [
      44.29,
      37
    ],
    [
      44.77,
      37.17
    ]
  ],
  [
    [
      44.77,
      37.17
    ],
    [
      45.42,
      35.98
    ]
  ],
  [
    [
      -14.51,
      66.46
    ],
    [
      -14.74,
      65.81
    ],
    [
      -13.61,
      65.13
    ],
    [
      -14.91,
      64.36
    ],
    [
      -17.79,
      63.68
    ],
    [
      -18.66,
      63.5
    ],
    [
      -19.97,
      63.64
    ],
    [
      -22.76,
      63.96
    ],
    [
      -21.78,
      64.4
    ],
    [
      -23.96,
      64.89
    ],
    [
      -22.18,
      65.08
    ],
    [
      -22.23,
      65.38
    ],
    [
      -24.33,
      65.61
    ],
    [
      -23.65,
      66.26
    ],
    [
      -22.13,
      66.41
    ],
    [
      -20.58,
      65.73
    ],
    [
      -19.06,
      66.28
    ],
    [
      -17.8,
      65.99
    ],
    [
      -16.17,
      66.53
    ],
    [
      -14.51,
      66.46
    ]
  ],
  [
    [
      35.72,
      32.71
    ],
    [
      35.55,
      32.39
    ]
  ],
  [
    [
      35.55,
      32.39
    ],
    [
      35.18,
      32.53
    ],
    [
      34.97,
      31.87
    ],
    [
      35.23,
      31.75
    ],
    [
      34.97,
      31.62
    ],
    [
      34.93,
      31.35
    ],
    [
      35.4,
      31.49
    ]
  ],
  [
    [
      35.4,
      31.49
    ],
    [
      35.42,
      31.1
    ],
    [
      34.92,
      29.5
    ]
  ],
  [
    [
      34.92,
      29.5
    ],
    [
      34.27,
      31.22
    ],
    [
      34.56,
      31.55
    ],
    [
      34.49,
      31.61
    ],
    [
      34.75,
      32.07
    ],
    [
      34.96,
      32.83
    ],
    [
      35.1,
      33.08
    ],
    [
      35.13,
      33.09
    ]
  ],
  [
    [
      35.13,
      33.09
    ],
    [
      35.46,
      33.09
    ],
    [
      35.55,
      33.26
    ],
    [
      35.82,
      33.28
    ]
  ],
  [
    [
      35.82,
      33.28
    ],
    [
      35.84,
      32.87
    ],
    [
      35.7,
      32.72
    ],
    [
      35.72,
      32.71
    ]
  ],
  [
    [
      15.52,
      38.23
    ],
    [
      15.16,
      37.44
    ],
    [
      15.31,
      37.13
    ],
    [
      15.1,
      36.62
    ],
    [
      14.34,
      37
    ],
    [
      13.83,
      37.1
    ],
    [
      12.43,
      37.61
    ],
    [
      12.57,
      38.13
    ],
    [
      13.74,
      38.03
    ],
    [
      14.76,
      38.14
    ],
    [
      15.52,
      38.23
    ]
  ],
  [
    [
      9.21,
      41.21
    ],
    [
      9.81,
      40.5
    ],
    [
      9.67,
      39.18
    ],
    [
      9.21,
      39.24
    ],
    [
      8.81,
      38.91
    ],
    [
      8.43,
      39.17
    ],
    [
      8.39,
      40.38
    ],
    [
      8.16,
      40.95
    ],
    [
      8.71,
      40.9
    ],
    [
      9.21,
      41.21
    ]
  ],
  [
    [
      13.81,
      46.51
    ],
    [
      13.7,
      46.02
    ],
    [
      13.94,
      45.59
    ]
  ],
  [
    [
      13.94,
      45.59
    ],
    [
      13.14,
      45.74
    ],
    [
      12.33,
      45.38
    ],
    [
      12.38,
      44.89
    ],
    [
      12.26,
      44.6
    ],
    [
      12.59,
      44.09
    ],
    [
      13.53,
      43.59
    ],
    [
      14.03,
      42.76
    ],
    [
      15.14,
      41.96
    ],
    [
      15.93,
      41.96
    ],
    [
      16.17,
      41.74
    ],
    [
      15.89,
      41.54
    ],
    [
      16.79,
      41.18
    ],
    [
      17.52,
      40.88
    ],
    [
      18.38,
      40.36
    ],
    [
      18.48,
      40.17
    ],
    [
      18.29,
      39.81
    ],
    [
      17.74,
      40.28
    ],
    [
      16.87,
      40.44
    ],
    [
      16.45,
      39.8
    ],
    [
      17.17,
      39.42
    ],
    [
      17.05,
      38.9
    ],
    [
      16.64,
      38.84
    ],
    [
      16.1,
      37.99
    ],
    [
      15.68,
      37.91
    ],
    [
      15.69,
      38.21
    ],
    [
      15.89,
      38.75
    ],
    [
      16.11,
      38.96
    ],
    [
      15.72,
      39.54
    ],
    [
      15.41,
      40.05
    ],
    [
      15,
      40.17
    ],
    [
      14.7,
      40.6
    ],
    [
      14.06,
      40.79
    ],
    [
      13.63,
      41.19
    ],
    [
      12.89,
      41.25
    ],
    [
      12.11,
      41.7
    ],
    [
      11.19,
      42.36
    ],
    [
      10.51,
      42.93
    ],
    [
      10.2,
      43.92
    ],
    [
      9.7,
      44.04
    ],
    [
      8.89,
      44.37
    ],
    [
      8.43,
      44.23
    ],
    [
      7.85,
      43.77
    ],
    [
      7.44,
      43.69
    ]
  ],
  [
    [
      -77.57,
      18.49
    ],
    [
      -76.9,
      18.4
    ],
    [
      -76.37,
      18.16
    ],
    [
      -76.2,
      17.89
    ],
    [
      -76.9,
      17.87
    ],
    [
      -77.21,
      17.7
    ],
    [
      -77.77,
      17.86
    ],
    [
      -78.34,
      18.23
    ],
    [
      -78.22,
      18.45
    ],
    [
      -77.8,
      18.52
    ],
    [
      -77.57,
      18.49
    ]
  ],
  [
    [
      35.72,
      32.71
    ],
    [
      36.83,
      32.31
    ],
    [
      38.79,
      33.38
    ]
  ],
  [
    [
      39.2,
      32.16
    ],
    [
      39,
      32.01
    ],
    [
      37,
      31.51
    ],
    [
      38,
      30.51
    ],
    [
      37.67,
      30.34
    ],
    [
      37.5,
      30
    ],
    [
      36.74,
      29.87
    ],
    [
      36.5,
      29.51
    ],
    [
      36.07,
      29.2
    ],
    [
      34.96,
      29.36
    ]
  ],
  [
    [
      34.96,
      29.36
    ],
    [
      34.92,
      29.5
    ]
  ],
  [
    [
      35.4,
      31.49
    ],
    [
      35.55,
      31.78
    ],
    [
      35.55,
      32.39
    ]
  ],
  [
    [
      134.64,
      34.15
    ],
    [
      134.77,
      33.81
    ],
    [
      134.2,
      33.2
    ],
    [
      133.79,
      33.52
    ],
    [
      133.28,
      33.29
    ],
    [
      133.01,
      32.7
    ],
    [
      132.36,
      32.99
    ],
    [
      132.37,
      33.46
    ],
    [
      132.92,
      34.06
    ],
    [
      133.49,
      33.94
    ],
    [
      133.9,
      34.36
    ],
    [
      134.64,
      34.15
    ]
  ],
  [
    [
      140.98,
      37.14
    ],
    [
      140.6,
      36.34
    ],
    [
      140.77,
      35.84
    ],
    [
      140.25,
      35.14
    ],
    [
      138.98,
      34.67
    ],
    [
      137.22,
      34.61
    ],
    [
      135.79,
      33.46
    ],
    [
      135.12,
      33.85
    ],
    [
      135.08,
      34.6
    ],
    [
      133.34,
      34.38
    ],
    [
      132.16,
      33.9
    ],
    [
      130.99,
      33.89
    ],
    [
      132,
      33.15
    ],
    [
      131.33,
      31.45
    ],
    [
      130.69,
      31.03
    ],
    [
      130.2,
      31.42
    ],
    [
      130.45,
      32.32
    ],
    [
      129.81,
      32.61
    ],
    [
      129.41,
      33.3
    ],
    [
      130.35,
      33.6
    ],
    [
      130.88,
      34.23
    ],
    [
      131.88,
      34.75
    ],
    [
      132.62,
      35.43
    ],
    [
      134.61,
      35.73
    ],
    [
      135.68,
      35.53
    ],
    [
      136.72,
      37.3
    ],
    [
      137.39,
      36.83
    ],
    [
      138.86,
      37.83
    ],
    [
      139.43,
      38.22
    ],
    [
      140.05,
      39.44
    ],
    [
      139.88,
      40.56
    ],
    [
      140.31,
      41.2
    ],
    [
      141.37,
      41.38
    ],
    [
      141.91,
      39.99
    ],
    [
      141.88,
      39.18
    ],
    [
      140.96,
      38.17
    ],
    [
      140.98,
      37.14
    ]
  ],
  [
    [
      143.91,
      44.17
    ],
    [
      144.61,
      43.96
    ],
    [
      145.32,
      44.38
    ],
    [
      145.54,
      43.26
    ],
    [
      144.06,
      42.99
    ],
    [
      143.18,
      42
    ],
    [
      141.61,
      42.68
    ],
    [
      141.07,
      41.58
    ],
    [
      139.96,
      41.57
    ],
    [
      139.82,
      42.56
    ],
    [
      140.31,
      43.33
    ],
    [
      141.38,
      43.39
    ],
    [
      141.67,
      44.77
    ],
    [
      141.97,
      45.55
    ],
    [
      143.14,
      44.51
    ],
    [
      143.91,
      44.17
    ]
  ],
  [
    [
      70.96,
      42.27
    ],
    [
      70.39,
      42.08
    ],
    [
      69.07,
      41.38
    ],
    [
      68.63,
      40.67
    ],
    [
      68.26,
      40.66
    ],
    [
      67.99,
      41.14
    ],
    [
      66.71,
      41.17
    ],
    [
      66.51,
      41.99
    ],
    [
      66.02,
      41.99
    ],
    [
      66.1,
      43
    ],
    [
      64.9,
      43.73
    ],
    [
      63.19,
      43.65
    ],
    [
      62.01,
      43.5
    ],
    [
      61.06,
      44.41
    ],
    [
      60.24,
      44.78
    ],
    [
      58.69,
      45.5
    ],
    [
      58.5,
      45.59
    ],
    [
      55.93,
      45
    ],
    [
      55.97,
      41.31
    ]
  ],
  [
    [
      55.97,
      41.31
    ],
    [
      55.46,
      41.26
    ],
    [
      54.76,
      42.04
    ],
    [
      54.08,
      42.32
    ],
    [
      52.94,
      42.12
    ],
    [
      52.5,
      41.78
    ]
  ],
  [
    [
      52.5,
      41.78
    ],
    [
      52.45,
      42.03
    ],
    [
      52.69,
      42.44
    ],
    [
      52.5,
      42.79
    ],
    [
      51.34,
      43.13
    ],
    [
      50.89,
      44.03
    ],
    [
      50.34,
      44.28
    ],
    [
      50.31,
      44.61
    ],
    [
      51.28,
      44.51
    ],
    [
      51.32,
      45.25
    ],
    [
      52.17,
      45.41
    ],
    [
      53.04,
      45.26
    ],
    [
      53.22,
      46.23
    ],
    [
      53.04,
      46.85
    ],
    [
      52.04,
      46.8
    ],
    [
      51.19,
      47.05
    ],
    [
      50.03,
      46.61
    ],
    [
      49.1,
      46.4
    ]
  ],
  [
    [
      49.1,
      46.4
    ],
    [
      48.59,
      46.56
    ],
    [
      48.69,
      47.08
    ]
  ],
  [
    [
      48.69,
      47.08
    ],
    [
      48.06,
      47.74
    ],
    [
      47.32,
      47.72
    ],
    [
      46.47,
      48.39
    ]
  ],
  [
    [
      46.47,
      48.39
    ],
    [
      47.04,
      49.15
    ],
    [
      46.75,
      49.36
    ],
    [
      47.55,
      50.45
    ],
    [
      48.58,
      49.87
    ],
    [
      48.7,
      50.61
    ],
    [
      50.77,
      51.69
    ],
    [
      52.33,
      51.72
    ],
    [
      54.53,
      51.03
    ]
  ],
  [
    [
      54.53,
      51.03
    ],
    [
      55.72,
      50.62
    ],
    [
      56.78,
      51.04
    ],
    [
      58.36,
      51.06
    ],
    [
      59.64,
      50.55
    ]
  ],
  [
    [
      59.64,
      50.55
    ],
    [
      59.93,
      50.84
    ],
    [
      61.34,
      50.8
    ],
    [
      61.59,
      51.27
    ],
    [
      59.97,
      51.96
    ],
    [
      60.93,
      52.45
    ],
    [
      60.74,
      52.72
    ],
    [
      61.7,
      52.98
    ],
    [
      60.98,
      53.66
    ]
  ],
  [
    [
      60.98,
      53.66
    ],
    [
      61.44,
      54.01
    ],
    [
      65.18,
      54.35
    ]
  ],
  [
    [
      65.18,
      54.35
    ],
    [
      65.67,
      54.6
    ],
    [
      68.17,
      54.97
    ]
  ],
  [
    [
      68.17,
      54.97
    ],
    [
      69.07,
      55.39
    ],
    [
      70.87,
      55.17
    ],
    [
      71.18,
      54.13
    ],
    [
      72.22,
      54.38
    ],
    [
      73.51,
      54.04
    ],
    [
      73.43,
      53.49
    ]
  ],
  [
    [
      73.43,
      53.49
    ],
    [
      74.38,
      53.55
    ],
    [
      76.89,
      54.49
    ]
  ],
  [
    [
      76.89,
      54.49
    ],
    [
      76.53,
      54.18
    ],
    [
      77.8,
      53.4
    ],
    [
      80.04,
      50.86
    ],
    [
      80.57,
      51.39
    ],
    [
      81.95,
      50.81
    ],
    [
      83.38,
      51.07
    ],
    [
      83.94,
      50.89
    ],
    [
      84.42,
      50.31
    ],
    [
      85.12,
      50.12
    ],
    [
      85.54,
      49.69
    ],
    [
      86.83,
      49.83
    ],
    [
      87.36,
      49.21
    ]
  ],
  [
    [
      80.26,
      42.35
    ],
    [
      79.64,
      42.5
    ],
    [
      79.14,
      42.86
    ],
    [
      77.66,
      42.96
    ],
    [
      76,
      42.99
    ],
    [
      75.64,
      42.88
    ],
    [
      74.21,
      43.3
    ],
    [
      73.65,
      43.09
    ],
    [
      73.49,
      42.5
    ],
    [
      71.84,
      42.85
    ],
    [
      71.19,
      42.7
    ],
    [
      70.96,
      42.27
    ]
  ],
  [
    [
      41.59,
      -1.68
    ],
    [
      40.88,
      -2.08
    ],
    [
      40.64,
      -2.5
    ],
    [
      40.26,
      -2.57
    ],
    [
      40.12,
      -3.28
    ],
    [
      39.8,
      -3.68
    ],
    [
      39.6,
      -4.35
    ],
    [
      39.2,
      -4.68
    ]
  ],
  [
    [
      39.2,
      -4.68
    ],
    [
      37.77,
      -3.68
    ],
    [
      37.7,
      -3.1
    ],
    [
      34.07,
      -1.06
    ],
    [
      33.9,
      -0.95
    ]
  ],
  [
    [
      33.9,
      -0.95
    ],
    [
      33.89,
      0.11
    ],
    [
      34.18,
      0.52
    ],
    [
      34.67,
      1.18
    ],
    [
      35.04,
      1.91
    ],
    [
      34.6,
      3.05
    ],
    [
      34.48,
      3.56
    ],
    [
      34.01,
      4.25
    ]
  ],
  [
    [
      34.01,
      4.25
    ],
    [
      34.62,
      4.85
    ],
    [
      35.3,
      5.51
    ]
  ],
  [
    [
      41.86,
      3.92
    ],
    [
      40.98,
      2.78
    ],
    [
      40.99,
      -0.86
    ],
    [
      41.59,
      -1.68
    ]
  ],
  [
    [
      73.68,
      39.43
    ],
    [
      71.78,
      39.28
    ],
    [
      70.55,
      39.6
    ],
    [
      69.46,
      39.53
    ],
    [
      69.56,
      40.1
    ],
    [
      70.65,
      39.94
    ],
    [
      71.01,
      40.24
    ]
  ],
  [
    [
      71.01,
      40.24
    ],
    [
      71.77,
      40.15
    ],
    [
      73.06,
      40.87
    ],
    [
      71.87,
      41.39
    ],
    [
      71.16,
      41.14
    ],
    [
      70.42,
      41.52
    ],
    [
      71.26,
      42.17
    ],
    [
      70.96,
      42.27
    ]
  ],
  [
    [
      102.58,
      12.19
    ],
    [
      102.35,
      13.39
    ],
    [
      102.99,
      14.23
    ],
    [
      104.28,
      14.42
    ],
    [
      105.22,
      14.27
    ]
  ],
  [
    [
      105.22,
      14.27
    ],
    [
      106.04,
      13.88
    ],
    [
      106.5,
      14.57
    ],
    [
      107.38,
      14.2
    ]
  ],
  [
    [
      107.38,
      14.2
    ],
    [
      107.61,
      13.54
    ],
    [
      107.49,
      12.34
    ],
    [
      105.81,
      11.57
    ],
    [
      106.25,
      10.96
    ],
    [
      105.2,
      10.89
    ],
    [
      104.33,
      10.49
    ]
  ],
  [
    [
      104.33,
      10.49
    ],
    [
      103.5,
      10.63
    ],
    [
      103.09,
      11.15
    ],
    [
      102.58,
      12.19
    ]
  ],
  [
    [
      128.35,
      38.61
    ],
    [
      129.21,
      37.43
    ],
    [
      129.46,
      36.78
    ],
    [
      129.47,
      35.63
    ],
    [
      129.09,
      35.08
    ],
    [
      128.19,
      34.89
    ],
    [
      127.39,
      34.48
    ],
    [
      126.49,
      34.39
    ],
    [
      126.37,
      34.93
    ],
    [
      126.56,
      35.68
    ],
    [
      126.12,
      36.73
    ],
    [
      126.86,
      36.89
    ],
    [
      126.17,
      37.75
    ]
  ],
  [
    [
      126.17,
      37.75
    ],
    [
      126.24,
      37.84
    ],
    [
      126.68,
      37.8
    ],
    [
      127.07,
      38.26
    ],
    [
      127.78,
      38.3
    ],
    [
      128.21,
      38.37
    ],
    [
      128.35,
      38.61
    ]
  ],
  [
    [
      20.59,
      41.86
    ],
    [
      20.52,
      42.22
    ]
  ],
  [
    [
      20.52,
      42.22
    ],
    [
      20.28,
      42.32
    ],
    [
      20.07,
      42.59
    ]
  ],
  [
    [
      20.07,
      42.59
    ],
    [
      20.26,
      42.81
    ]
  ],
  [
    [
      20.26,
      42.81
    ],
    [
      20.5,
      42.88
    ],
    [
      20.64,
      43.22
    ],
    [
      20.81,
      43.27
    ],
    [
      20.96,
      43.13
    ],
    [
      21.14,
      43.07
    ],
    [
      21.27,
      42.91
    ],
    [
      21.44,
      42.86
    ],
    [
      21.63,
      42.68
    ],
    [
      21.78,
      42.68
    ],
    [
      21.66,
      42.44
    ],
    [
      21.54,
      42.32
    ],
    [
      21.58,
      42.25
    ]
  ],
  [
    [
      21.58,
      42.25
    ],
    [
      21.35,
      42.21
    ],
    [
      20.76,
      42.05
    ],
    [
      20.72,
      41.85
    ],
    [
      20.59,
      41.86
    ]
  ],
  [
    [
      47.97,
      29.98
    ],
    [
      48.18,
      29.53
    ],
    [
      48.09,
      29.31
    ],
    [
      48.42,
      28.55
    ]
  ],
  [
    [
      48.42,
      28.55
    ],
    [
      47.71,
      28.53
    ],
    [
      47.46,
      29
    ],
    [
      46.57,
      29.1
    ]
  ],
  [
    [
      105.22,
      14.27
    ],
    [
      105.54,
      14.72
    ],
    [
      105.59,
      15.57
    ],
    [
      104.78,
      16.44
    ],
    [
      104.72,
      17.43
    ],
    [
      103.96,
      18.24
    ],
    [
      103.2,
      18.31
    ],
    [
      103,
      17.96
    ],
    [
      102.41,
      17.93
    ],
    [
      102.11,
      18.11
    ],
    [
      101.06,
      17.51
    ],
    [
      101.04,
      18.41
    ],
    [
      101.28,
      19.46
    ],
    [
      100.61,
      19.51
    ],
    [
      100.55,
      20.11
    ],
    [
      100.12,
      20.42
    ]
  ],
  [
    [
      100.12,
      20.42
    ],
    [
      100.33,
      20.79
    ],
    [
      101.18,
      21.44
    ]
  ],
  [
    [
      102.17,
      22.46
    ],
    [
      102.75,
      21.68
    ],
    [
      103.2,
      20.77
    ],
    [
      104.44,
      20.76
    ],
    [
      104.82,
      19.89
    ],
    [
      104.18,
      19.62
    ],
    [
      103.9,
      19.27
    ],
    [
      105.09,
      18.67
    ],
    [
      105.93,
      17.49
    ],
    [
      106.56,
      16.6
    ],
    [
      107.31,
      15.91
    ],
    [
      107.56,
      15.2
    ],
    [
      107.38,
      14.2
    ]
  ],
  [
    [
      35.13,
      33.09
    ],
    [
      35.48,
      33.91
    ],
    [
      35.98,
      34.61
    ],
    [
      36,
      34.64
    ]
  ],
  [
    [
      36,
      34.64
    ],
    [
      36.45,
      34.59
    ],
    [
      36.61,
      34.2
    ],
    [
      36.07,
      33.82
    ],
    [
      35.82,
      33.28
    ]
  ],
  [
    [
      -7.71,
      4.36
    ],
    [
      -7.97,
      4.36
    ],
    [
      -9,
      4.83
    ],
    [
      -9.91,
      5.59
    ],
    [
      -10.77,
      6.14
    ],
    [
      -11.44,
      6.79
    ]
  ],
  [
    [
      -11.44,
      6.79
    ],
    [
      -11.2,
      7.11
    ],
    [
      -11.15,
      7.4
    ],
    [
      -10.7,
      7.94
    ],
    [
      -10.23,
      8.41
    ]
  ],
  [
    [
      14.85,
      22.86
    ],
    [
      14.14,
      22.49
    ],
    [
      13.58,
      23.04
    ],
    [
      12,
      23.47
    ]
  ],
  [
    [
      9.48,
      30.31
    ],
    [
      9.97,
      30.54
    ],
    [
      10.06,
      30.96
    ],
    [
      9.95,
      31.38
    ],
    [
      10.64,
      31.76
    ],
    [
      10.94,
      32.08
    ],
    [
      11.43,
      32.37
    ],
    [
      11.49,
      33.14
    ]
  ],
  [
    [
      11.49,
      33.14
    ],
    [
      12.66,
      32.79
    ],
    [
      13.08,
      32.88
    ],
    [
      13.92,
      32.71
    ],
    [
      15.25,
      32.27
    ],
    [
      15.71,
      31.38
    ],
    [
      16.61,
      31.18
    ],
    [
      18.02,
      30.76
    ],
    [
      19.09,
      30.27
    ],
    [
      19.57,
      30.53
    ],
    [
      20.05,
      30.99
    ],
    [
      19.82,
      31.75
    ],
    [
      20.13,
      32.24
    ],
    [
      20.85,
      32.71
    ],
    [
      21.54,
      32.84
    ],
    [
      22.9,
      32.64
    ],
    [
      23.24,
      32.19
    ],
    [
      23.61,
      32.19
    ],
    [
      23.93,
      32.02
    ],
    [
      24.92,
      31.9
    ],
    [
      25.16,
      31.57
    ]
  ],
  [
    [
      25,
      22
    ],
    [
      25,
      20
    ],
    [
      23.85,
      20
    ],
    [
      23.84,
      19.58
    ]
  ],
  [
    [
      23.84,
      19.58
    ],
    [
      19.85,
      21.5
    ],
    [
      15.86,
      23.41
    ],
    [
      14.85,
      22.86
    ]
  ],
  [
    [
      81.79,
      7.52
    ],
    [
      81.64,
      6.48
    ],
    [
      81.22,
      6.2
    ],
    [
      80.35,
      5.97
    ],
    [
      79.87,
      6.76
    ],
    [
      79.7,
      8.2
    ],
    [
      80.15,
      9.82
    ],
    [
      80.84,
      9.27
    ],
    [
      81.3,
      8.56
    ],
    [
      81.79,
      7.52
    ]
  ],
  [
    [
      28.98,
      -28.96
    ],
    [
      29.33,
      -29.26
    ],
    [
      29.02,
      -29.74
    ],
    [
      28.85,
      -30.07
    ],
    [
      28.29,
      -30.23
    ],
    [
      28.11,
      -30.55
    ],
    [
      27.75,
      -30.65
    ],
    [
      27,
      -29.88
    ],
    [
      27.53,
      -29.24
    ],
    [
      28.07,
      -28.85
    ],
    [
      28.54,
      -28.65
    ],
    [
      28.98,
      -28.96
    ]
  ],
  [
    [
      22.73,
      54.33
    ],
    [
      22.65,
      54.58
    ],
    [
      22.76,
      54.86
    ],
    [
      22.32,
      55.02
    ],
    [
      21.27,
      55.19
    ]
  ],
  [
    [
      21.27,
      55.19
    ],
    [
      21.06,
      56.03
    ]
  ],
  [
    [
      21.06,
      56.03
    ],
    [
      22.2,
      56.34
    ],
    [
      23.88,
      56.27
    ],
    [
      24.86,
      56.37
    ],
    [
      25,
      56.16
    ],
    [
      25.53,
      56.1
    ],
    [
      26.49,
      55.62
    ]
  ],
  [
    [
      23.48,
      53.91
    ],
    [
      23.24,
      54.22
    ],
    [
      22.73,
      54.33
    ]
  ],
  [
    [
      21.06,
      56.03
    ],
    [
      21.09,
      56.78
    ],
    [
      21.58,
      57.41
    ],
    [
      22.52,
      57.75
    ],
    [
      23.32,
      57.01
    ],
    [
      24.12,
      57.03
    ],
    [
      24.31,
      57.79
    ]
  ],
  [
    [
      27.29,
      57.47
    ],
    [
      27.77,
      57.24
    ],
    [
      27.86,
      56.76
    ],
    [
      28.18,
      56.17
    ]
  ],
  [
    [
      -8.67,
      27.6
    ],
    [
      -13.1,
      27.6
    ]
  ],
  [
    [
      -13.1,
      27.6
    ],
    [
      -12.36,
      28.16
    ],
    [
      -10.9,
      28.83
    ],
    [
      -10.4,
      29.1
    ],
    [
      -9.56,
      29.93
    ],
    [
      -9.81,
      31.18
    ],
    [
      -9.43,
      32.04
    ],
    [
      -9.3,
      32.56
    ],
    [
      -8.66,
      33.24
    ],
    [
      -7.65,
      33.7
    ],
    [
      -6.91,
      34.11
    ],
    [
      -6.24,
      35.15
    ],
    [
      -5.93,
      35.76
    ],
    [
      -5.19,
      35.76
    ],
    [
      -4.59,
      35.33
    ],
    [
      -3.64,
      35.4
    ],
    [
      -2.6,
      35.18
    ],
    [
      -2.17,
      35.17
    ]
  ],
  [
    [
      26.62,
      48.22
    ],
    [
      26.86,
      48.37
    ],
    [
      27.52,
      48.47
    ],
    [
      28.26,
      48.16
    ],
    [
      28.67,
      48.12
    ],
    [
      29.12,
      47.85
    ],
    [
      29.05,
      47.51
    ],
    [
      29.42,
      47.35
    ],
    [
      29.56,
      46.93
    ],
    [
      29.91,
      46.67
    ],
    [
      29.84,
      46.53
    ],
    [
      30.02,
      46.42
    ],
    [
      29.76,
      46.35
    ],
    [
      29.17,
      46.38
    ],
    [
      29.07,
      46.52
    ],
    [
      28.86,
      46.44
    ],
    [
      28.93,
      46.26
    ],
    [
      28.66,
      45.94
    ],
    [
      28.49,
      45.6
    ],
    [
      28.23,
      45.49
    ]
  ],
  [
    [
      28.23,
      45.49
    ],
    [
      28.05,
      45.94
    ],
    [
      28.16,
      46.37
    ],
    [
      28.13,
      46.81
    ],
    [
      27.55,
      47.41
    ],
    [
      27.23,
      47.83
    ],
    [
      26.92,
      48.12
    ],
    [
      26.62,
      48.22
    ]
  ],
  [
    [
      49.54,
      -12.47
    ],
    [
      49.81,
      -12.9
    ],
    [
      50.06,
      -13.56
    ],
    [
      50.22,
      -14.76
    ],
    [
      50.48,
      -15.23
    ],
    [
      50.38,
      -15.71
    ],
    [
      50.2,
      -16
    ],
    [
      49.86,
      -15.41
    ],
    [
      49.67,
      -15.71
    ],
    [
      49.86,
      -16.45
    ],
    [
      49.77,
      -16.88
    ],
    [
      49.5,
      -17.11
    ],
    [
      49.44,
      -17.95
    ],
    [
      49.04,
      -19.12
    ],
    [
      48.55,
      -20.5
    ],
    [
      47.93,
      -22.39
    ],
    [
      47.55,
      -23.78
    ],
    [
      47.1,
      -24.94
    ],
    [
      46.28,
      -25.18
    ],
    [
      45.41,
      -25.6
    ],
    [
      44.83,
      -25.35
    ],
    [
      44.04,
      -24.99
    ],
    [
      43.76,
      -24.46
    ],
    [
      43.7,
      -23.57
    ],
    [
      43.35,
      -22.78
    ],
    [
      43.25,
      -22.06
    ],
    [
      43.43,
      -21.34
    ],
    [
      43.89,
      -21.16
    ],
    [
      43.9,
      -20.83
    ],
    [
      44.37,
      -20.07
    ],
    [
      44.46,
      -19.44
    ],
    [
      44.23,
      -18.96
    ],
    [
      44.04,
      -18.33
    ],
    [
      43.96,
      -17.41
    ],
    [
      44.31,
      -16.85
    ],
    [
      44.45,
      -16.22
    ],
    [
      44.94,
      -16.18
    ],
    [
      45.5,
      -15.97
    ],
    [
      45.87,
      -15.79
    ],
    [
      46.31,
      -15.78
    ],
    [
      46.88,
      -15.21
    ],
    [
      47.71,
      -14.59
    ],
    [
      48.01,
      -14.09
    ],
    [
      47.87,
      -13.66
    ],
    [
      48.29,
      -13.78
    ],
    [
      48.85,
      -13.09
    ],
    [
      48.86,
      -12.49
    ],
    [
      49.19,
      -12.04
    ],
    [
      49.54,
      -12.47
    ]
  ],
  [
    [
      -92.23,
      14.54
    ],
    [
      -93.36,
      15.62
    ],
    [
      -93.88,
      15.94
    ],
    [
      -94.69,
      16.2
    ],
    [
      -95.25,
      16.13
    ],
    [
      -96.05,
      15.75
    ],
    [
      -96.56,
      15.65
    ],
    [
      -97.26,
      15.92
    ],
    [
      -98.01,
      16.11
    ],
    [
      -98.95,
      16.57
    ],
    [
      -99.7,
      16.71
    ],
    [
      -100.83,
      17.17
    ],
    [
      -101.67,
      17.65
    ],
    [
      -101.92,
      17.92
    ],
    [
      -102.48,
      17.98
    ],
    [
      -103.5,
      18.29
    ],
    [
      -103.92,
      18.75
    ],
    [
      -104.99,
      19.32
    ],
    [
      -105.49,
      19.95
    ],
    [
      -105.73,
      20.43
    ],
    [
      -105.4,
      20.53
    ],
    [
      -105.5,
      20.82
    ],
    [
      -105.27,
      21.08
    ],
    [
      -105.27,
      21.42
    ],
    [
      -105.6,
      21.87
    ],
    [
      -105.69,
      22.27
    ],
    [
      -106.03,
      22.77
    ],
    [
      -106.91,
      23.77
    ],
    [
      -107.92,
      24.55
    ],
    [
      -108.4,
      25.17
    ],
    [
      -109.26,
      25.58
    ],
    [
      -109.44,
      25.82
    ],
    [
      -109.29,
      26.44
    ],
    [
      -109.8,
      26.68
    ],
    [
      -110.39,
      27.16
    ],
    [
      -110.64,
      27.86
    ],
    [
      -111.18,
      27.94
    ],
    [
      -111.76,
      28.47
    ],
    [
      -112.23,
      28.95
    ],
    [
      -112.27,
      29.27
    ],
    [
      -112.81,
      30.02
    ],
    [
      -113.16,
      30.79
    ],
    [
      -113.15,
      31.17
    ],
    [
      -113.87,
      31.57
    ],
    [
      -114.21,
      31.52
    ],
    [
      -114.78,
      31.8
    ],
    [
      -114.94,
      31.39
    ],
    [
      -114.77,
      30.91
    ],
    [
      -114.67,
      30.16
    ],
    [
      -114.33,
      29.75
    ],
    [
      -113.59,
      29.06
    ],
    [
      -113.42,
      28.83
    ],
    [
      -113.27,
      28.75
    ],
    [
      -113.14,
      28.41
    ],
    [
      -112.96,
      28.43
    ],
    [
      -112.76,
      27.78
    ],
    [
      -112.46,
      27.53
    ],
    [
      -112.24,
      27.17
    ],
    [
      -111.62,
      26.66
    ],
    [
      -111.28,
      25.73
    ],
    [
      -110.99,
      25.29
    ],
    [
      -110.71,
      24.83
    ],
    [
      -110.66,
      24.3
    ],
    [
      -110.17,
      24.27
    ],
    [
      -109.77,
      23.81
    ],
    [
      -109.41,
      23.36
    ],
    [
      -109.43,
      23.19
    ],
    [
      -109.85,
      22.82
    ],
    [
      -110.03,
      22.82
    ],
    [
      -110.3,
      23.43
    ],
    [
      -110.95,
      24
    ],
    [
      -111.67,
      24.48
    ],
    [
      -112.18,
      24.74
    ],
    [
      -112.15,
      25.47
    ],
    [
      -112.3,
      26.01
    ],
    [
      -112.78,
      26.32
    ],
    [
      -113.46,
      26.77
    ],
    [
      -113.6,
      26.64
    ],
    [
      -113.85,
      26.9
    ],
    [
      -114.47,
      27.14
    ],
    [
      -115.06,
      27.72
    ],
    [
      -114.98,
      27.8
    ],
    [
      -114.57,
      27.74
    ],
    [
      -114.2,
      28.12
    ],
    [
      -114.16,
      28.57
    ],
    [
      -114.93,
      29.28
    ],
    [
      -115.52,
      29.56
    ],
    [
      -115.89,
      30.18
    ],
    [
      -116.26,
      30.84
    ],
    [
      -116.72,
      31.64
    ],
    [
      -117.13,
      32.54
    ]
  ],
  [
    [
      -117.13,
      32.54
    ],
    [
      -115.99,
      32.61
    ],
    [
      -114.72,
      32.72
    ],
    [
      -114.81,
      32.53
    ],
    [
      -113.3,
      32.04
    ],
    [
      -111.02,
      31.33
    ],
    [
      -109.03,
      31.34
    ],
    [
      -108.24,
      31.34
    ],
    [
      -108.24,
      31.75
    ],
    [
      -106.51,
      31.75
    ],
    [
      -106.14,
      31.4
    ],
    [
      -105.63,
      31.08
    ],
    [
      -105.04,
      30.64
    ],
    [
      -104.71,
      30.12
    ],
    [
      -104.46,
      29.57
    ],
    [
      -103.94,
      29.27
    ],
    [
      -103.11,
      28.97
    ],
    [
      -102.48,
      29.76
    ],
    [
      -101.66,
      29.78
    ],
    [
      -100.96,
      29.38
    ],
    [
      -100.46,
      28.7
    ],
    [
      -100.11,
      28.11
    ],
    [
      -99.52,
      27.54
    ],
    [
      -99.3,
      26.84
    ],
    [
      -99.02,
      26.37
    ],
    [
      -98.24,
      26.06
    ],
    [
      -97.53,
      25.84
    ]
  ],
  [
    [
      -97.53,
      25.84
    ],
    [
      -97.14,
      25.87
    ],
    [
      -97.53,
      24.99
    ],
    [
      -97.7,
      24.27
    ],
    [
      -97.78,
      22.93
    ],
    [
      -97.87,
      22.44
    ],
    [
      -97.7,
      21.9
    ],
    [
      -97.39,
      21.41
    ],
    [
      -97.19,
      20.64
    ],
    [
      -96.53,
      19.89
    ],
    [
      -96.29,
      19.32
    ],
    [
      -95.9,
      18.83
    ],
    [
      -94.84,
      18.56
    ],
    [
      -94.43,
      18.14
    ],
    [
      -93.55,
      18.42
    ],
    [
      -92.79,
      18.52
    ],
    [
      -92.04,
      18.7
    ],
    [
      -91.41,
      18.88
    ],
    [
      -90.77,
      19.28
    ],
    [
      -90.53,
      19.87
    ],
    [
      -90.45,
      20.71
    ],
    [
      -90.28,
      21
    ],
    [
      -89.6,
      21.26
    ],
    [
      -88.54,
      21.49
    ],
    [
      -87.66,
      21.46
    ],
    [
      -87.05,
      21.54
    ],
    [
      -86.81,
      21.33
    ],
    [
      -86.85,
      20.85
    ],
    [
      -87.38,
      20.26
    ],
    [
      -87.62,
      19.65
    ],
    [
      -87.44,
      19.47
    ],
    [
      -87.59,
      19.04
    ],
    [
      -87.84,
      18.26
    ],
    [
      -88.09,
      18.52
    ],
    [
      -88.3,
      18.5
    ]
  ],
  [
    [
      21.58,
      42.25
    ],
    [
      21.92,
      42.3
    ],
    [
      22.38,
      42.32
    ]
  ],
  [
    [
      21.02,
      40.84
    ],
    [
      20.61,
      41.09
    ],
    [
      20.46,
      41.52
    ],
    [
      20.59,
      41.86
    ]
  ],
  [
    [
      -12.17,
      14.62
    ],
    [
      -11.83,
      14.8
    ],
    [
      -11.67,
      15.39
    ],
    [
      -11.35,
      15.41
    ],
    [
      -10.65,
      15.13
    ],
    [
      -10.09,
      15.33
    ],
    [
      -9.7,
      15.26
    ],
    [
      -9.55,
      15.49
    ],
    [
      -5.54,
      15.5
    ],
    [
      -5.32,
      16.2
    ],
    [
      -5.49,
      16.33
    ],
    [
      -5.97,
      20.64
    ],
    [
      -6.45,
      24.96
    ],
    [
      -4.92,
      24.97
    ]
  ],
  [
    [
      4.27,
      19.16
    ],
    [
      4.27,
      16.85
    ],
    [
      3.72,
      16.18
    ],
    [
      3.64,
      15.57
    ],
    [
      2.75,
      15.41
    ],
    [
      1.39,
      15.32
    ],
    [
      1.02,
      14.97
    ],
    [
      0.37,
      14.93
    ]
  ],
  [
    [
      -11.51,
      12.44
    ],
    [
      -11.47,
      12.75
    ],
    [
      -11.55,
      13.14
    ],
    [
      -11.93,
      13.42
    ],
    [
      -12.12,
      13.99
    ],
    [
      -12.17,
      14.62
    ]
  ],
  [
    [
      98.55,
      9.93
    ],
    [
      98.46,
      10.68
    ],
    [
      98.76,
      11.44
    ],
    [
      98.43,
      12.03
    ],
    [
      98.51,
      13.12
    ],
    [
      98.1,
      13.64
    ],
    [
      97.78,
      14.84
    ],
    [
      97.6,
      16.1
    ],
    [
      97.16,
      16.93
    ],
    [
      96.51,
      16.43
    ],
    [
      95.37,
      15.71
    ],
    [
      94.81,
      15.8
    ],
    [
      94.19,
      16.04
    ],
    [
      94.53,
      17.28
    ],
    [
      94.32,
      18.21
    ],
    [
      93.54,
      19.37
    ],
    [
      93.66,
      19.73
    ],
    [
      93.08,
      19.86
    ],
    [
      92.37,
      20.67
    ]
  ],
  [
    [
      100.12,
      20.42
    ],
    [
      99.54,
      20.19
    ],
    [
      98.96,
      19.75
    ],
    [
      98.25,
      19.71
    ],
    [
      97.8,
      18.63
    ],
    [
      97.38,
      18.45
    ],
    [
      97.86,
      17.57
    ],
    [
      98.49,
      16.84
    ],
    [
      98.9,
      16.18
    ],
    [
      98.54,
      15.31
    ],
    [
      98.19,
      15.12
    ],
    [
      98.43,
      14.62
    ],
    [
      99.1,
      13.83
    ],
    [
      99.21,
      13.27
    ],
    [
      99.2,
      12.8
    ],
    [
      99.59,
      11.89
    ],
    [
      99.04,
      10.96
    ],
    [
      98.55,
      9.93
    ]
  ],
  [
    [
      19.74,
      42.69
    ],
    [
      19.3,
      42.2
    ],
    [
      19.37,
      41.88
    ],
    [
      19.16,
      41.96
    ],
    [
      18.88,
      42.28
    ],
    [
      18.45,
      42.48
    ],
    [
      18.56,
      42.65
    ]
  ],
  [
    [
      19.22,
      43.52
    ],
    [
      19.48,
      43.35
    ],
    [
      19.63,
      43.21
    ],
    [
      19.96,
      43.11
    ],
    [
      20.34,
      42.9
    ],
    [
      20.26,
      42.81
    ]
  ],
  [
    [
      87.75,
      49.3
    ],
    [
      88.81,
      49.47
    ],
    [
      90.71,
      50.33
    ],
    [
      92.23,
      50.8
    ]
  ],
  [
    [
      92.23,
      50.8
    ],
    [
      93.1,
      50.5
    ],
    [
      94.15,
      50.48
    ]
  ],
  [
    [
      94.15,
      50.48
    ],
    [
      94.82,
      50.01
    ]
  ],
  [
    [
      94.82,
      50.01
    ],
    [
      95.81,
      49.98
    ],
    [
      97.26,
      49.73
    ],
    [
      98.23,
      50.42
    ]
  ],
  [
    [
      98.23,
      50.42
    ],
    [
      97.83,
      51.01
    ],
    [
      98.86,
      52.05
    ],
    [
      99.98,
      51.63
    ],
    [
      100.89,
      51.52
    ]
  ],
  [
    [
      100.89,
      51.52
    ],
    [
      102.07,
      51.26
    ],
    [
      102.26,
      50.51
    ],
    [
      103.68,
      50.09
    ]
  ],
  [
    [
      103.68,
      50.09
    ],
    [
      104.62,
      50.28
    ],
    [
      105.89,
      50.41
    ]
  ],
  [
    [
      105.89,
      50.41
    ],
    [
      106.89,
      50.27
    ],
    [
      107.87,
      49.79
    ],
    [
      108.48,
      49.28
    ],
    [
      109.4,
      49.29
    ],
    [
      110.66,
      49.13
    ],
    [
      111.58,
      49.38
    ],
    [
      112.9,
      49.54
    ],
    [
      114.36,
      50.25
    ],
    [
      114.96,
      50.14
    ],
    [
      115.49,
      49.81
    ],
    [
      116.68,
      49.89
    ]
  ],
  [
    [
      34.56,
      -11.52
    ],
    [
      35.31,
      -11.44
    ],
    [
      36.51,
      -11.72
    ],
    [
      36.78,
      -11.59
    ]
  ],
  [
    [
      36.78,
      -11.59
    ],
    [
      37.47,
      -11.57
    ],
    [
      37.83,
      -11.27
    ],
    [
      38.43,
      -11.29
    ]
  ],
  [
    [
      38.43,
      -11.29
    ],
    [
      39.52,
      -10.9
    ],
    [
      40.32,
      -10.32
    ],
    [
      40.48,
      -10.77
    ],
    [
      40.44,
      -11.76
    ],
    [
      40.56,
      -12.64
    ],
    [
      40.6,
      -14.2
    ],
    [
      40.78,
      -14.69
    ],
    [
      40.48,
      -15.41
    ],
    [
      40.09,
      -16.1
    ],
    [
      39.45,
      -16.72
    ],
    [
      38.54,
      -17.1
    ],
    [
      37.41,
      -17.59
    ],
    [
      36.28,
      -18.66
    ],
    [
      35.9,
      -18.84
    ],
    [
      35.2,
      -19.55
    ],
    [
      34.79,
      -19.78
    ],
    [
      34.7,
      -20.5
    ],
    [
      35.18,
      -21.25
    ],
    [
      35.37,
      -21.84
    ],
    [
      35.39,
      -22.14
    ],
    [
      35.56,
      -22.09
    ],
    [
      35.53,
      -23.07
    ],
    [
      35.37,
      -23.54
    ],
    [
      35.61,
      -23.71
    ],
    [
      35.46,
      -24.12
    ],
    [
      35.04,
      -24.48
    ],
    [
      34.22,
      -24.82
    ],
    [
      33.01,
      -25.36
    ],
    [
      32.57,
      -25.73
    ],
    [
      32.66,
      -26.15
    ],
    [
      32.92,
      -26.22
    ],
    [
      32.83,
      -26.74
    ]
  ],
  [
    [
      32.83,
      -26.74
    ],
    [
      32.07,
      -26.73
    ]
  ],
  [
    [
      32.07,
      -26.73
    ],
    [
      31.99,
      -26.29
    ],
    [
      31.84,
      -25.84
    ]
  ],
  [
    [
      31.84,
      -25.84
    ],
    [
      31.75,
      -25.48
    ],
    [
      31.93,
      -24.37
    ],
    [
      31.67,
      -23.66
    ],
    [
      31.19,
      -22.25
    ]
  ],
  [
    [
      31.19,
      -22.25
    ],
    [
      32.24,
      -21.12
    ],
    [
      32.51,
      -20.4
    ],
    [
      32.66,
      -20.3
    ],
    [
      32.77,
      -19.72
    ],
    [
      32.61,
      -19.42
    ],
    [
      32.65,
      -18.67
    ],
    [
      32.85,
      -17.98
    ],
    [
      32.85,
      -16.71
    ],
    [
      32.33,
      -16.39
    ],
    [
      31.85,
      -16.32
    ],
    [
      31.64,
      -16.07
    ],
    [
      31.17,
      -15.86
    ],
    [
      30.34,
      -15.88
    ],
    [
      30.27,
      -15.51
    ]
  ],
  [
    [
      30.27,
      -15.51
    ],
    [
      30.18,
      -14.8
    ],
    [
      33.21,
      -13.97
    ]
  ],
  [
    [
      33.21,
      -13.97
    ],
    [
      33.79,
      -14.45
    ],
    [
      34.06,
      -14.36
    ],
    [
      34.46,
      -14.61
    ],
    [
      34.52,
      -15.01
    ],
    [
      34.31,
      -15.48
    ],
    [
      34.38,
      -16.18
    ],
    [
      35.03,
      -16.8
    ],
    [
      35.34,
      -16.11
    ],
    [
      35.77,
      -15.9
    ],
    [
      35.69,
      -14.61
    ],
    [
      35.27,
      -13.89
    ],
    [
      34.91,
      -13.57
    ],
    [
      34.56,
      -13.58
    ],
    [
      34.28,
      -12.28
    ],
    [
      34.56,
      -11.52
    ]
  ],
  [
    [
      -12.17,
      14.62
    ],
    [
      -12.83,
      15.3
    ],
    [
      -13.44,
      16.04
    ],
    [
      -14.1,
      16.3
    ],
    [
      -14.58,
      16.6
    ],
    [
      -15.14,
      16.59
    ],
    [
      -15.62,
      16.37
    ],
    [
      -16.12,
      16.46
    ],
    [
      -16.46,
      16.14
    ]
  ],
  [
    [
      -16.46,
      16.14
    ],
    [
      -16.55,
      16.67
    ],
    [
      -16.27,
      17.17
    ],
    [
      -16.15,
      18.11
    ],
    [
      -16.26,
      19.1
    ],
    [
      -16.38,
      19.59
    ],
    [
      -16.28,
      20.09
    ],
    [
      -16.54,
      20.57
    ],
    [
      -17.06,
      21
    ]
  ],
  [
    [
      -17.06,
      21
    ],
    [
      -16.85,
      21.33
    ],
    [
      -12.93,
      21.33
    ],
    [
      -13.12,
      22.77
    ],
    [
      -12.87,
      23.28
    ],
    [
      -11.94,
      23.37
    ],
    [
      -11.97,
      25.93
    ],
    [
      -8.69,
      25.88
    ],
    [
      -8.68,
      27.4
    ]
  ],
  [
    [
      33.21,
      -13.97
    ],
    [
      32.69,
      -13.71
    ],
    [
      32.99,
      -12.78
    ],
    [
      33.31,
      -12.44
    ],
    [
      33.11,
      -11.61
    ],
    [
      33.32,
      -10.8
    ],
    [
      33.49,
      -10.53
    ],
    [
      33.23,
      -9.68
    ],
    [
      32.76,
      -9.23
    ]
  ],
  [
    [
      32.76,
      -9.23
    ],
    [
      33.74,
      -9.42
    ],
    [
      33.94,
      -9.69
    ]
  ],
  [
    [
      33.94,
      -9.69
    ],
    [
      34.28,
      -10.16
    ],
    [
      34.56,
      -11.52
    ]
  ],
  [
    [
      102.14,
      6.22
    ],
    [
      102.37,
      6.13
    ],
    [
      102.96,
      5.52
    ],
    [
      103.38,
      4.86
    ],
    [
      103.44,
      4.18
    ],
    [
      103.33,
      3.73
    ],
    [
      103.43,
      3.38
    ],
    [
      103.5,
      2.79
    ],
    [
      103.85,
      2.52
    ],
    [
      104.25,
      1.63
    ],
    [
      104.29,
      1.37
    ],
    [
      104.13,
      1.27
    ]
  ],
  [
    [
      104.13,
      1.27
    ],
    [
      103.74,
      1.13
    ],
    [
      103.56,
      1.19
    ]
  ],
  [
    [
      103.56,
      1.19
    ],
    [
      102.57,
      1.97
    ],
    [
      101.39,
      2.76
    ],
    [
      101.27,
      3.27
    ],
    [
      100.7,
      3.94
    ],
    [
      100.56,
      4.77
    ],
    [
      100.2,
      5.31
    ],
    [
      100.31,
      6.04
    ],
    [
      100.09,
      6.46
    ]
  ],
  [
    [
      100.09,
      6.46
    ],
    [
      100.26,
      6.64
    ],
    [
      101.08,
      6.2
    ],
    [
      101.15,
      5.69
    ],
    [
      101.81,
      5.81
    ],
    [
      102.14,
      6.22
    ]
  ],
  [
    [
      109.66,
      2.01
    ],
    [
      110.4,
      1.66
    ],
    [
      111.17,
      1.85
    ],
    [
      111.37,
      2.7
    ],
    [
      111.8,
      2.89
    ],
    [
      113,
      3.1
    ],
    [
      113.71,
      3.89
    ],
    [
      114.2,
      4.53
    ]
  ],
  [
    [
      115.45,
      5.45
    ],
    [
      116.22,
      6.14
    ],
    [
      116.73,
      6.92
    ],
    [
      117.13,
      6.93
    ],
    [
      117.64,
      6.42
    ],
    [
      117.69,
      5.99
    ],
    [
      118.35,
      5.71
    ],
    [
      119.18,
      5.41
    ],
    [
      119.11,
      5.02
    ],
    [
      118.44,
      4.97
    ],
    [
      118.62,
      4.48
    ],
    [
      117.88,
      4.14
    ]
  ],
  [
    [
      16.34,
      -28.58
    ],
    [
      15.6,
      -27.82
    ],
    [
      15.21,
      -27.09
    ],
    [
      14.99,
      -26.12
    ],
    [
      14.74,
      -25.39
    ],
    [
      14.41,
      -23.85
    ],
    [
      14.39,
      -22.66
    ],
    [
      14.26,
      -22.11
    ],
    [
      13.87,
      -21.7
    ],
    [
      13.35,
      -20.87
    ],
    [
      12.83,
      -19.67
    ],
    [
      12.61,
      -19.05
    ],
    [
      11.79,
      -18.07
    ],
    [
      11.73,
      -17.3
    ]
  ],
  [
    [
      23.22,
      -17.52
    ],
    [
      24.03,
      -17.3
    ],
    [
      24.68,
      -17.35
    ],
    [
      25.08,
      -17.58
    ],
    [
      25.08,
      -17.66
    ]
  ],
  [
    [
      19.9,
      -24.77
    ],
    [
      19.89,
      -28.46
    ],
    [
      19,
      -28.97
    ],
    [
      18.46,
      -29.05
    ],
    [
      17.84,
      -28.86
    ],
    [
      17.39,
      -28.78
    ],
    [
      17.22,
      -28.36
    ],
    [
      16.82,
      -28.08
    ],
    [
      16.34,
      -28.58
    ]
  ],
  [
    [
      165.78,
      -21.08
    ],
    [
      166.6,
      -21.7
    ],
    [
      167.12,
      -22.16
    ],
    [
      166.74,
      -22.4
    ],
    [
      166.19,
      -22.13
    ],
    [
      165.47,
      -21.68
    ],
    [
      164.83,
      -21.15
    ],
    [
      164.17,
      -20.44
    ],
    [
      164.03,
      -20.11
    ],
    [
      164.46,
      -20.12
    ],
    [
      165.02,
      -20.46
    ],
    [
      165.46,
      -20.8
    ],
    [
      165.78,
      -21.08
    ]
  ],
  [
    [
      14.85,
      22.86
    ],
    [
      15.1,
      21.31
    ]
  ],
  [
    [
      15.1,
      21.31
    ],
    [
      15.47,
      21.05
    ],
    [
      15.49,
      20.73
    ]
  ],
  [
    [
      15.49,
      20.73
    ],
    [
      15.9,
      20.39
    ],
    [
      15.69,
      19.96
    ],
    [
      15.3,
      17.93
    ],
    [
      15.25,
      16.63
    ]
  ],
  [
    [
      15.25,
      16.63
    ],
    [
      13.97,
      15.68
    ],
    [
      13.54,
      14.37
    ]
  ],
  [
    [
      13.54,
      14.37
    ],
    [
      13.96,
      14
    ],
    [
      13.95,
      13.35
    ],
    [
      14.6,
      13.33
    ],
    [
      14.5,
      12.86
    ]
  ],
  [
    [
      14.18,
      12.48
    ],
    [
      14,
      12.46
    ],
    [
      13.32,
      13.56
    ],
    [
      13.08,
      13.6
    ],
    [
      12.3,
      13.04
    ],
    [
      11.53,
      13.33
    ],
    [
      10.99,
      13.39
    ],
    [
      10.7,
      13.25
    ],
    [
      10.11,
      13.28
    ],
    [
      9.52,
      12.85
    ],
    [
      9.01,
      12.83
    ],
    [
      7.8,
      13.34
    ],
    [
      7.33,
      13.1
    ],
    [
      6.82,
      13.12
    ],
    [
      6.45,
      13.49
    ],
    [
      5.44,
      13.87
    ],
    [
      4.37,
      13.75
    ],
    [
      4.11,
      13.53
    ],
    [
      3.97,
      12.96
    ],
    [
      3.68,
      12.55
    ],
    [
      3.61,
      11.66
    ]
  ],
  [
    [
      8.5,
      4.77
    ],
    [
      7.46,
      4.41
    ],
    [
      7.08,
      4.46
    ],
    [
      6.7,
      4.24
    ],
    [
      5.9,
      4.26
    ],
    [
      5.36,
      4.89
    ],
    [
      5.03,
      5.61
    ],
    [
      4.33,
      6.27
    ],
    [
      3.57,
      6.26
    ],
    [
      2.69,
      6.26
    ]
  ],
  [
    [
      -85.71,
      11.09
    ],
    [
      -86.06,
      11.4
    ],
    [
      -86.53,
      11.81
    ],
    [
      -86.75,
      12.14
    ],
    [
      -87.17,
      12.46
    ],
    [
      -87.67,
      12.91
    ],
    [
      -87.56,
      13.06
    ],
    [
      -87.39,
      12.91
    ],
    [
      -87.32,
      12.98
    ]
  ],
  [
    [
      -83.15,
      15
    ],
    [
      -83.23,
      14.9
    ],
    [
      -83.28,
      14.68
    ],
    [
      -83.18,
      14.31
    ],
    [
      -83.41,
      13.97
    ],
    [
      -83.52,
      13.57
    ],
    [
      -83.55,
      13.13
    ],
    [
      -83.5,
      12.87
    ],
    [
      -83.47,
      12.42
    ],
    [
      -83.63,
      12.32
    ],
    [
      -83.72,
      11.89
    ],
    [
      -83.65,
      11.63
    ],
    [
      -83.86,
      11.37
    ],
    [
      -83.81,
      11.1
    ],
    [
      -83.66,
      10.94
    ]
  ],
  [
    [
      4.05,
      51.27
    ],
    [
      3.31,
      51.35
    ],
    [
      3.83,
      51.62
    ],
    [
      4.71,
      53.09
    ],
    [
      6.07,
      53.51
    ],
    [
      6.91,
      53.48
    ]
  ],
  [
    [
      20.65,
      69.11
    ],
    [
      20.03,
      69.07
    ],
    [
      19.88,
      68.41
    ],
    [
      17.99,
      68.57
    ],
    [
      17.73,
      68.01
    ],
    [
      16.77,
      68.01
    ],
    [
      16.11,
      67.3
    ],
    [
      15.11,
      66.19
    ],
    [
      13.56,
      64.79
    ],
    [
      13.92,
      64.45
    ],
    [
      13.57,
      64.05
    ],
    [
      12.58,
      64.07
    ],
    [
      11.93,
      63.13
    ],
    [
      11.99,
      61.8
    ],
    [
      12.63,
      61.29
    ],
    [
      12.3,
      60.12
    ],
    [
      11.47,
      59.43
    ],
    [
      11.03,
      58.86
    ]
  ],
  [
    [
      11.03,
      58.86
    ],
    [
      10.36,
      59.47
    ],
    [
      8.38,
      58.31
    ],
    [
      7.05,
      58.08
    ],
    [
      5.67,
      58.59
    ],
    [
      5.31,
      59.66
    ],
    [
      4.99,
      61.97
    ],
    [
      5.91,
      62.61
    ],
    [
      8.55,
      63.45
    ],
    [
      10.53,
      64.49
    ],
    [
      12.36,
      65.88
    ],
    [
      14.76,
      67.81
    ],
    [
      16.44,
      68.56
    ],
    [
      19.18,
      69.82
    ],
    [
      21.38,
      70.26
    ],
    [
      23.02,
      70.2
    ],
    [
      24.55,
      71.03
    ],
    [
      26.37,
      70.99
    ],
    [
      28.17,
      71.19
    ],
    [
      31.29,
      70.45
    ],
    [
      30.01,
      70.19
    ],
    [
      31.1,
      69.56
    ],
    [
      29.4,
      69.16
    ],
    [
      28.59,
      69.06
    ]
  ],
  [
    [
      24.72,
      77.85
    ],
    [
      22.49,
      77.44
    ],
    [
      20.73,
      77.68
    ],
    [
      21.42,
      77.94
    ],
    [
      20.81,
      78.25
    ],
    [
      22.88,
      78.45
    ],
    [
      23.28,
      78.08
    ],
    [
      24.72,
      77.85
    ]
  ],
  [
    [
      18.25,
      79.7
    ],
    [
      21.54,
      78.96
    ],
    [
      19.03,
      78.56
    ],
    [
      18.47,
      77.83
    ],
    [
      17.59,
      77.64
    ],
    [
      17.12,
      76.81
    ],
    [
      15.91,
      76.77
    ],
    [
      13.76,
      77.38
    ],
    [
      14.67,
      77.74
    ],
    [
      13.17,
      78.02
    ],
    [
      11.22,
      78.87
    ],
    [
      10.44,
      79.65
    ],
    [
      13.17,
      80.01
    ],
    [
      13.72,
      79.66
    ],
    [
      15.14,
      79.67
    ],
    [
      15.52,
      80.02
    ],
    [
      16.99,
      80.05
    ],
    [
      18.25,
      79.7
    ]
  ],
  [
    [
      25.45,
      80.41
    ],
    [
      27.41,
      80.06
    ],
    [
      25.92,
      79.52
    ],
    [
      23.02,
      79.4
    ],
    [
      20.08,
      79.57
    ],
    [
      19.9,
      79.84
    ],
    [
      18.46,
      79.86
    ],
    [
      17.37,
      80.32
    ],
    [
      20.46,
      80.6
    ],
    [
      21.91,
      80.36
    ],
    [
      22.92,
      80.66
    ],
    [
      25.45,
      80.41
    ]
  ],
  [
    [
      173.02,
      -40.92
    ],
    [
      173.25,
      -41.33
    ],
    [
      173.96,
      -40.93
    ],
    [
      174.25,
      -41.35
    ],
    [
      174.25,
      -41.77
    ],
    [
      173.88,
      -42.23
    ],
    [
      173.22,
      -42.97
    ],
    [
      172.71,
      -43.37
    ],
    [
      173.08,
      -43.85
    ],
    [
      172.31,
      -43.87
    ],
    [
      171.45,
      -44.24
    ],
    [
      171.19,
      -44.9
    ],
    [
      170.62,
      -45.91
    ],
    [
      169.83,
      -46.36
    ],
    [
      169.33,
      -46.64
    ],
    [
      168.41,
      -46.62
    ],
    [
      167.76,
      -46.29
    ],
    [
      166.68,
      -46.22
    ],
    [
      166.51,
      -45.85
    ],
    [
      167.05,
      -45.11
    ],
    [
      168.3,
      -44.12
    ],
    [
      168.95,
      -43.94
    ],
    [
      169.67,
      -43.56
    ],
    [
      170.52,
      -43.03
    ],
    [
      171.13,
      -42.51
    ],
    [
      171.57,
      -41.77
    ],
    [
      171.95,
      -41.51
    ],
    [
      172.1,
      -40.96
    ],
    [
      172.8,
      -40.49
    ],
    [
      173.02,
      -40.92
    ]
  ],
  [
    [
      174.61,
      -36.16
    ],
    [
      175.34,
      -37.21
    ],
    [
      175.36,
      -36.53
    ],
    [
      175.81,
      -36.8
    ],
    [
      175.96,
      -37.56
    ],
    [
      176.76,
      -37.88
    ],
    [
      177.44,
      -37.96
    ],
    [
      178.01,
      -37.58
    ],
    [
      178.52,
      -37.7
    ],
    [
      178.27,
      -38.58
    ],
    [
      177.97,
      -39.17
    ],
    [
      177.21,
      -39.15
    ],
    [
      176.94,
      -39.45
    ],
    [
      177.03,
      -39.88
    ],
    [
      176.89,
      -40.07
    ],
    [
      176.51,
      -40.6
    ],
    [
      176.01,
      -41.29
    ],
    [
      175.24,
      -41.69
    ],
    [
      175.07,
      -41.43
    ],
    [
      174.65,
      -41.28
    ],
    [
      175.23,
      -40.46
    ],
    [
      174.9,
      -39.91
    ],
    [
      173.82,
      -39.51
    ],
    [
      173.85,
      -39.15
    ],
    [
      174.57,
      -38.8
    ],
    [
      174.74,
      -38.03
    ],
    [
      174.7,
      -37.38
    ],
    [
      174.29,
      -36.71
    ],
    [
      174.32,
      -36.53
    ],
    [
      173.84,
      -36.12
    ],
    [
      173.05,
      -35.24
    ],
    [
      172.64,
      -34.53
    ],
    [
      173.01,
      -34.45
    ],
    [
      173.55,
      -35.01
    ],
    [
      174.33,
      -35.27
    ],
    [
      174.61,
      -36.16
    ]
  ],
  [
    [
      53.11,
      16.65
    ],
    [
      52.78,
      17.35
    ],
    [
      52,
      19
    ]
  ],
  [
    [
      52,
      19
    ],
    [
      55,
      20
    ],
    [
      55.67,
      22
    ],
    [
      55.21,
      22.71
    ]
  ],
  [
    [
      56.4,
      24.92
    ],
    [
      56.85,
      24.24
    ],
    [
      57.4,
      23.88
    ],
    [
      58.14,
      23.75
    ],
    [
      58.73,
      23.57
    ],
    [
      59.18,
      22.99
    ],
    [
      59.45,
      22.66
    ],
    [
      59.81,
      22.53
    ],
    [
      59.81,
      22.31
    ],
    [
      59.44,
      21.71
    ],
    [
      59.28,
      21.43
    ],
    [
      58.86,
      21.11
    ],
    [
      58.49,
      20.43
    ],
    [
      58.03,
      20.48
    ],
    [
      57.83,
      20.24
    ],
    [
      57.67,
      19.74
    ],
    [
      57.79,
      19.07
    ],
    [
      57.69,
      18.94
    ],
    [
      57.23,
      18.95
    ],
    [
      56.61,
      18.57
    ],
    [
      56.51,
      18.09
    ],
    [
      56.28,
      17.88
    ],
    [
      55.66,
      17.88
    ],
    [
      55.27,
      17.63
    ],
    [
      55.27,
      17.23
    ],
    [
      54.79,
      16.95
    ],
    [
      54.24,
      17.04
    ],
    [
      53.57,
      16.71
    ],
    [
      53.11,
      16.65
    ]
  ],
  [
    [
      56.07,
      26.06
    ],
    [
      56.36,
      26.4
    ],
    [
      56.49,
      26.31
    ],
    [
      56.39,
      25.9
    ],
    [
      56.26,
      25.71
    ]
  ],
  [
    [
      68.18,
      23.69
    ],
    [
      67.44,
      23.94
    ],
    [
      67.15,
      24.66
    ],
    [
      66.37,
      25.43
    ],
    [
      64.53,
      25.24
    ],
    [
      62.91,
      25.22
    ],
    [
      61.5,
      25.08
    ]
  ],
  [
    [
      -77.88,
      7.22
    ],
    [
      -78.21,
      7.51
    ],
    [
      -78.43,
      8.05
    ],
    [
      -78.18,
      8.32
    ],
    [
      -78.44,
      8.39
    ],
    [
      -78.62,
      8.72
    ],
    [
      -79.12,
      9
    ],
    [
      -79.56,
      8.93
    ],
    [
      -79.76,
      8.58
    ],
    [
      -80.16,
      8.33
    ],
    [
      -80.38,
      8.3
    ],
    [
      -80.48,
      8.09
    ],
    [
      -80,
      7.55
    ],
    [
      -80.28,
      7.42
    ],
    [
      -80.42,
      7.27
    ],
    [
      -80.89,
      7.22
    ],
    [
      -81.06,
      7.82
    ],
    [
      -81.19,
      7.65
    ],
    [
      -81.52,
      7.71
    ],
    [
      -81.72,
      8.11
    ],
    [
      -82.13,
      8.18
    ],
    [
      -82.39,
      8.29
    ],
    [
      -82.82,
      8.29
    ],
    [
      -82.85,
      8.07
    ],
    [
      -82.97,
      8.23
    ]
  ],
  [
    [
      -82.55,
      9.57
    ],
    [
      -82.19,
      9.21
    ],
    [
      -82.21,
      9
    ],
    [
      -81.81,
      8.95
    ],
    [
      -81.71,
      9.03
    ],
    [
      -81.44,
      8.79
    ],
    [
      -80.95,
      8.86
    ],
    [
      -80.52,
      9.11
    ],
    [
      -79.91,
      9.31
    ],
    [
      -79.57,
      9.61
    ],
    [
      -79.02,
      9.55
    ],
    [
      -79.06,
      9.45
    ],
    [
      -78.5,
      9.42
    ],
    [
      -78.06,
      9.25
    ],
    [
      -77.73,
      8.95
    ],
    [
      -77.35,
      8.67
    ]
  ],
  [
    [
      -70.37,
      -18.35
    ],
    [
      -71.38,
      -17.77
    ],
    [
      -71.46,
      -17.36
    ],
    [
      -73.44,
      -16.36
    ],
    [
      -75.24,
      -15.27
    ],
    [
      -76.01,
      -14.65
    ],
    [
      -76.42,
      -13.82
    ],
    [
      -76.26,
      -13.54
    ],
    [
      -77.11,
      -12.22
    ],
    [
      -78.09,
      -10.38
    ],
    [
      -79.04,
      -8.39
    ],
    [
      -79.45,
      -7.93
    ],
    [
      -79.76,
      -7.19
    ],
    [
      -80.54,
      -6.54
    ],
    [
      -81.25,
      -6.14
    ],
    [
      -80.93,
      -5.69
    ],
    [
      -81.41,
      -4.74
    ],
    [
      -81.1,
      -4.04
    ],
    [
      -80.3,
      -3.4
    ]
  ],
  [
    [
      126.38,
      8.41
    ],
    [
      126.48,
      7.75
    ],
    [
      126.54,
      7.19
    ],
    [
      126.2,
      6.27
    ],
    [
      125.83,
      7.29
    ],
    [
      125.36,
      6.79
    ],
    [
      125.68,
      6.05
    ],
    [
      125.4,
      5.58
    ],
    [
      124.22,
      6.16
    ],
    [
      123.94,
      6.89
    ],
    [
      124.24,
      7.36
    ],
    [
      123.61,
      7.83
    ],
    [
      123.3,
      7.42
    ],
    [
      122.83,
      7.46
    ],
    [
      122.09,
      6.9
    ],
    [
      121.92,
      7.19
    ],
    [
      122.31,
      8.03
    ],
    [
      122.94,
      8.32
    ],
    [
      123.49,
      8.69
    ],
    [
      123.84,
      8.24
    ],
    [
      124.6,
      8.51
    ],
    [
      124.76,
      8.96
    ],
    [
      125.47,
      8.99
    ],
    [
      125.41,
      9.76
    ],
    [
      126.22,
      9.29
    ],
    [
      126.31,
      8.78
    ],
    [
      126.38,
      8.41
    ]
  ],
  [
    [
      123.98,
      10.28
    ],
    [
      123.62,
      9.95
    ],
    [
      123.31,
      9.32
    ],
    [
      123,
      9.02
    ],
    [
      122.38,
      9.71
    ],
    [
      122.59,
      9.98
    ],
    [
      122.84,
      10.26
    ],
    [
      122.95,
      10.88
    ],
    [
      123.5,
      10.94
    ],
    [
      123.34,
      10.27
    ],
    [
      124.08,
      11.23
    ],
    [
      123.98,
      10.28
    ]
  ],
  [
    [
      118.5,
      9.32
    ],
    [
      117.17,
      8.37
    ],
    [
      117.66,
      9.07
    ],
    [
      118.39,
      9.68
    ],
    [
      118.99,
      10.38
    ],
    [
      119.51,
      11.37
    ],
    [
      119.69,
      10.55
    ],
    [
      119.03,
      10
    ],
    [
      118.5,
      9.32
    ]
  ],
  [
    [
      121.88,
      11.89
    ],
    [
      122.48,
      11.58
    ],
    [
      123.12,
      11.58
    ],
    [
      123.1,
      11.17
    ],
    [
      122.64,
      10.74
    ],
    [
      122,
      10.44
    ],
    [
      121.97,
      10.91
    ],
    [
      122.04,
      11.42
    ],
    [
      121.88,
      11.89
    ]
  ],
  [
    [
      125.5,
      12.16
    ],
    [
      125.78,
      11.05
    ],
    [
      125.01,
      11.31
    ],
    [
      125.03,
      10.98
    ],
    [
      125.28,
      10.36
    ],
    [
      124.8,
      10.13
    ],
    [
      124.76,
      10.84
    ],
    [
      124.46,
      10.89
    ],
    [
      124.3,
      11.5
    ],
    [
      124.89,
      11.42
    ],
    [
      124.88,
      11.79
    ],
    [
      124.27,
      12.56
    ],
    [
      125.23,
      12.54
    ],
    [
      125.5,
      12.16
    ]
  ],
  [
    [
      121.53,
      13.07
    ],
    [
      121.26,
      12.21
    ],
    [
      120.83,
      12.7
    ],
    [
      120.32,
      13.47
    ],
    [
      121.18,
      13.43
    ],
    [
      121.53,
      13.07
    ]
  ],
  [
    [
      121.32,
      18.5
    ],
    [
      121.94,
      18.22
    ],
    [
      122.25,
      18.48
    ],
    [
      122.34,
      18.22
    ],
    [
      122.17,
      17.81
    ],
    [
      122.52,
      17.09
    ],
    [
      122.25,
      16.26
    ],
    [
      121.66,
      15.93
    ],
    [
      121.51,
      15.12
    ],
    [
      121.73,
      14.33
    ],
    [
      122.26,
      14.22
    ],
    [
      122.7,
      14.34
    ],
    [
      123.95,
      13.78
    ],
    [
      123.86,
      13.24
    ],
    [
      124.18,
      13
    ],
    [
      124.08,
      12.54
    ],
    [
      123.3,
      13.03
    ],
    [
      122.93,
      13.55
    ],
    [
      122.67,
      13.19
    ],
    [
      122.03,
      13.78
    ],
    [
      121.13,
      13.64
    ],
    [
      120.63,
      13.86
    ],
    [
      120.68,
      14.27
    ],
    [
      120.99,
      14.53
    ],
    [
      120.69,
      14.76
    ],
    [
      120.56,
      14.4
    ],
    [
      120.07,
      14.97
    ],
    [
      119.92,
      15.41
    ],
    [
      119.88,
      16.36
    ],
    [
      120.29,
      16.03
    ],
    [
      120.39,
      17.6
    ],
    [
      120.72,
      18.51
    ],
    [
      121.32,
      18.5
    ]
  ],
  [
    [
      155.88,
      -6.82
    ],
    [
      155.6,
      -6.92
    ],
    [
      155.17,
      -6.54
    ],
    [
      154.73,
      -5.9
    ],
    [
      154.51,
      -5.14
    ],
    [
      154.65,
      -5.04
    ],
    [
      154.76,
      -5.34
    ],
    [
      155.06,
      -5.57
    ],
    [
      155.55,
      -6.2
    ],
    [
      156.02,
      -6.54
    ],
    [
      155.88,
      -6.82
    ]
  ],
  [
    [
      151.98,
      -5.48
    ],
    [
      151.46,
      -5.56
    ],
    [
      151.3,
      -5.84
    ],
    [
      150.75,
      -6.08
    ],
    [
      150.24,
      -6.32
    ],
    [
      149.71,
      -6.32
    ],
    [
      148.89,
      -6.03
    ],
    [
      148.32,
      -5.75
    ],
    [
      148.4,
      -5.44
    ],
    [
      149.3,
      -5.58
    ],
    [
      149.85,
      -5.51
    ],
    [
      150,
      -5.03
    ],
    [
      150.14,
      -5
    ],
    [
      150.24,
      -5.53
    ],
    [
      150.81,
      -5.46
    ],
    [
      151.09,
      -5.11
    ],
    [
      151.65,
      -4.76
    ],
    [
      151.54,
      -4.17
    ],
    [
      152.14,
      -4.15
    ],
    [
      152.34,
      -4.31
    ],
    [
      152.32,
      -4.87
    ],
    [
      151.98,
      -5.48
    ]
  ],
  [
    [
      141,
      -2.6
    ],
    [
      142.74,
      -3.29
    ],
    [
      144.58,
      -3.86
    ],
    [
      145.27,
      -4.37
    ],
    [
      145.83,
      -4.88
    ],
    [
      145.98,
      -5.47
    ],
    [
      147.65,
      -6.08
    ],
    [
      147.89,
      -6.61
    ],
    [
      146.97,
      -6.72
    ],
    [
      147.19,
      -7.39
    ],
    [
      148.08,
      -8.04
    ],
    [
      148.73,
      -9.1
    ],
    [
      149.31,
      -9.07
    ],
    [
      149.27,
      -9.51
    ],
    [
      150.04,
      -9.68
    ],
    [
      149.74,
      -9.87
    ],
    [
      150.8,
      -10.29
    ],
    [
      150.69,
      -10.58
    ],
    [
      150.03,
      -10.65
    ],
    [
      149.78,
      -10.39
    ],
    [
      148.92,
      -10.28
    ],
    [
      147.91,
      -10.13
    ],
    [
      147.14,
      -9.49
    ],
    [
      146.57,
      -8.94
    ],
    [
      146.05,
      -8.07
    ],
    [
      144.74,
      -7.63
    ],
    [
      143.9,
      -7.92
    ],
    [
      143.29,
      -8.25
    ],
    [
      143.41,
      -8.98
    ],
    [
      142.63,
      -9.33
    ],
    [
      142.07,
      -9.16
    ],
    [
      141.03,
      -9.12
    ]
  ],
  [
    [
      153.14,
      -4.5
    ],
    [
      152.83,
      -4.77
    ],
    [
      152.64,
      -4.18
    ],
    [
      152.41,
      -3.79
    ],
    [
      151.95,
      -3.46
    ],
    [
      151.38,
      -3.04
    ],
    [
      150.66,
      -2.74
    ],
    [
      150.94,
      -2.5
    ],
    [
      151.48,
      -2.78
    ],
    [
      151.82,
      -3
    ],
    [
      152.24,
      -3.24
    ],
    [
      152.64,
      -3.66
    ],
    [
      153.02,
      -3.98
    ],
    [
      153.14,
      -4.5
    ]
  ],
  [
    [
      14.12,
      53.76
    ],
    [
      14.8,
      54.05
    ],
    [
      16.36,
      54.51
    ],
    [
      17.62,
      54.85
    ],
    [
      18.62,
      54.68
    ],
    [
      18.7,
      54.44
    ],
    [
      19.66,
      54.43
    ]
  ],
  [
    [
      19.66,
      54.43
    ],
    [
      20.89,
      54.31
    ],
    [
      22.73,
      54.33
    ]
  ],
  [
    [
      23.53,
      51.58
    ],
    [
      24.03,
      50.71
    ],
    [
      23.92,
      50.42
    ],
    [
      23.43,
      50.31
    ],
    [
      22.52,
      49.48
    ],
    [
      22.78,
      49.03
    ],
    [
      22.56,
      49.09
    ]
  ],
  [
    [
      22.56,
      49.09
    ],
    [
      21.61,
      49.47
    ],
    [
      20.89,
      49.33
    ],
    [
      20.42,
      49.43
    ],
    [
      19.83,
      49.22
    ],
    [
      19.32,
      49.57
    ],
    [
      18.91,
      49.44
    ],
    [
      18.85,
      49.5
    ]
  ],
  [
    [
      -66.28,
      18.51
    ],
    [
      -65.77,
      18.43
    ],
    [
      -65.59,
      18.23
    ],
    [
      -65.85,
      17.98
    ],
    [
      -66.6,
      17.98
    ],
    [
      -67.18,
      17.95
    ],
    [
      -67.24,
      18.37
    ],
    [
      -67.1,
      18.52
    ],
    [
      -66.28,
      18.51
    ]
  ],
  [
    [
      130.64,
      42.4
    ],
    [
      130.78,
      42.22
    ],
    [
      130.4,
      42.28
    ],
    [
      129.97,
      41.94
    ],
    [
      129.67,
      41.6
    ],
    [
      129.71,
      40.88
    ],
    [
      129.19,
      40.66
    ],
    [
      129.01,
      40.49
    ],
    [
      128.63,
      40.19
    ],
    [
      127.97,
      40.03
    ],
    [
      127.53,
      39.76
    ],
    [
      127.5,
      39.32
    ],
    [
      127.39,
      39.21
    ],
    [
      127.78,
      39.05
    ],
    [
      128.35,
      38.61
    ]
  ],
  [
    [
      126.17,
      37.75
    ],
    [
      125.69,
      37.94
    ],
    [
      125.57,
      37.75
    ],
    [
      125.28,
      37.67
    ],
    [
      125.24,
      37.86
    ],
    [
      124.98,
      37.95
    ],
    [
      124.71,
      38.11
    ],
    [
      124.99,
      38.55
    ],
    [
      125.22,
      38.67
    ],
    [
      125.13,
      38.85
    ],
    [
      125.39,
      39.39
    ],
    [
      125.32,
      39.55
    ],
    [
      124.74,
      39.66
    ],
    [
      124.27,
      39.93
    ]
  ],
  [
    [
      -7.45,
      37.1
    ],
    [
      -7.86,
      36.84
    ],
    [
      -8.38,
      36.98
    ],
    [
      -8.9,
      36.87
    ],
    [
      -8.75,
      37.65
    ],
    [
      -8.84,
      38.27
    ],
    [
      -9.29,
      38.36
    ],
    [
      -9.53,
      38.74
    ],
    [
      -9.45,
      39.39
    ],
    [
      -9.05,
      39.76
    ],
    [
      -8.98,
      40.16
    ],
    [
      -8.77,
      40.76
    ],
    [
      -8.79,
      41.18
    ],
    [
      -8.99,
      41.54
    ],
    [
      -9.03,
      41.88
    ]
  ],
  [
    [
      50.81,
      24.75
    ],
    [
      50.74,
      25.48
    ],
    [
      51.01,
      26.01
    ],
    [
      51.29,
      26.11
    ],
    [
      51.59,
      25.8
    ],
    [
      51.61,
      25.22
    ],
    [
      51.39,
      24.63
    ]
  ],
  [
    [
      51.39,
      24.63
    ],
    [
      51.11,
      24.56
    ],
    [
      50.81,
      24.75
    ]
  ],
  [
    [
      22.71,
      47.88
    ],
    [
      23.14,
      48.1
    ],
    [
      23.76,
      47.99
    ],
    [
      24.4,
      47.98
    ],
    [
      24.87,
      47.74
    ],
    [
      25.21,
      47.89
    ],
    [
      25.95,
      47.99
    ],
    [
      26.2,
      48.22
    ],
    [
      26.62,
      48.22
    ]
  ],
  [
    [
      28.23,
      45.49
    ],
    [
      28.68,
      45.3
    ],
    [
      29.15,
      45.46
    ],
    [
      29.6,
      45.29
    ]
  ],
  [
    [
      29.6,
      45.29
    ],
    [
      29.63,
      45.04
    ],
    [
      29.14,
      44.82
    ],
    [
      28.84,
      44.91
    ],
    [
      28.56,
      43.71
    ]
  ],
  [
    [
      22.66,
      44.23
    ],
    [
      22.47,
      44.41
    ],
    [
      22.71,
      44.58
    ],
    [
      22.46,
      44.7
    ],
    [
      22.15,
      44.48
    ],
    [
      21.56,
      44.77
    ],
    [
      21.48,
      45.18
    ],
    [
      20.87,
      45.42
    ],
    [
      20.76,
      45.73
    ],
    [
      20.22,
      46.13
    ]
  ],
  [
    [
      143.65,
      50.75
    ],
    [
      144.65,
      48.98
    ],
    [
      143.17,
      49.31
    ],
    [
      142.56,
      47.86
    ],
    [
      143.53,
      46.84
    ],
    [
      143.51,
      46.14
    ],
    [
      142.75,
      46.74
    ],
    [
      142.09,
      45.97
    ],
    [
      141.91,
      46.81
    ],
    [
      142.02,
      47.78
    ],
    [
      141.9,
      48.86
    ],
    [
      142.14,
      49.62
    ],
    [
      142.18,
      50.95
    ],
    [
      141.59,
      51.94
    ],
    [
      141.68,
      53.3
    ],
    [
      142.61,
      53.76
    ],
    [
      142.21,
      54.23
    ],
    [
      142.65,
      54.37
    ],
    [
      142.91,
      53.7
    ],
    [
      143.26,
      52.74
    ],
    [
      143.24,
      51.76
    ],
    [
      143.65,
      50.75
    ]
  ],
  [
    [
      19.66,
      54.43
    ],
    [
      19.89,
      54.87
    ],
    [
      21.27,
      55.19
    ]
  ],
  [
    [
      -175.01,
      66.58
    ],
    [
      -174.34,
      66.34
    ],
    [
      -174.57,
      67.06
    ],
    [
      -171.86,
      66.91
    ],
    [
      -169.9,
      65.98
    ],
    [
      -170.89,
      65.54
    ],
    [
      -172.53,
      65.44
    ],
    [
      -172.55,
      64.46
    ],
    [
      -172.96,
      64.25
    ],
    [
      -173.89,
      64.28
    ],
    [
      -174.65,
      64.63
    ],
    [
      -175.98,
      64.92
    ],
    [
      -176.21,
      65.36
    ],
    [
      -177.22,
      65.52
    ],
    [
      -178.36,
      65.39
    ],
    [
      -178.9,
      65.74
    ],
    [
      -178.69,
      66.11
    ],
    [
      -179.88,
      65.87
    ],
    [
      -179.43,
      65.4
    ],
    [
      -180,
      64.98
    ],
    [
      -180,
      68.96
    ],
    [
      -177.55,
      68.2
    ],
    [
      -174.93,
      67.21
    ],
    [
      -175.01,
      66.58
    ]
  ],
  [
    [
      180,
      70.83
    ],
    [
      178.9,
      70.78
    ],
    [
      178.73,
      71.1
    ],
    [
      180,
      71.52
    ],
    [
      180,
      70.83
    ]
  ],
  [
    [
      -178.69,
      70.89
    ],
    [
      -180,
      70.83
    ],
    [
      -180,
      71.52
    ],
    [
      -179.87,
      71.56
    ],
    [
      -179.02,
      71.56
    ],
    [
      -177.58,
      71.27
    ],
    [
      -177.66,
      71.13
    ],
    [
      -178.69,
      70.89
    ]
  ],
  [
    [
      143.6,
      73.21
    ],
    [
      142.09,
      73.21
    ],
    [
      140.04,
      73.32
    ],
    [
      139.86,
      73.37
    ],
    [
      140.81,
      73.77
    ],
    [
      142.06,
      73.86
    ],
    [
      143.48,
      73.48
    ],
    [
      143.6,
      73.21
    ]
  ],
  [
    [
      150.73,
      75.08
    ],
    [
      149.58,
      74.69
    ],
    [
      147.98,
      74.78
    ],
    [
      146.12,
      75.17
    ],
    [
      146.36,
      75.5
    ],
    [
      148.22,
      75.35
    ],
    [
      150.73,
      75.08
    ]
  ],
  [
    [
      145.09,
      75.56
    ],
    [
      144.3,
      74.82
    ],
    [
      140.61,
      74.85
    ],
    [
      138.96,
      74.61
    ],
    [
      136.97,
      75.26
    ],
    [
      137.51,
      75.95
    ],
    [
      138.83,
      76.14
    ],
    [
      141.47,
      76.09
    ],
    [
      145.09,
      75.56
    ]
  ],
  [
    [
      57.54,
      70.72
    ],
    [
      56.94,
      70.63
    ],
    [
      53.68,
      70.76
    ],
    [
      53.41,
      71.21
    ],
    [
      51.6,
      71.47
    ],
    [
      51.46,
      72.01
    ],
    [
      52.48,
      72.23
    ],
    [
      52.44,
      72.77
    ],
    [
      54.43,
      73.63
    ],
    [
      53.51,
      73.75
    ],
    [
      55.9,
      74.63
    ],
    [
      55.63,
      75.08
    ],
    [
      57.87,
      75.61
    ],
    [
      61.17,
      76.25
    ],
    [
      64.5,
      76.44
    ],
    [
      66.21,
      76.81
    ],
    [
      68.16,
      76.94
    ],
    [
      68.85,
      76.54
    ],
    [
      68.18,
      76.23
    ],
    [
      64.64,
      75.74
    ],
    [
      61.58,
      75.26
    ],
    [
      58.48,
      74.31
    ],
    [
      56.99,
      73.33
    ],
    [
      55.42,
      72.37
    ],
    [
      55.62,
      71.54
    ],
    [
      57.54,
      70.72
    ]
  ],
  [
    [
      131.29,
      44.11
    ],
    [
      131.03,
      44.97
    ],
    [
      131.88,
      45.32
    ]
  ],
  [
    [
      131.88,
      45.32
    ],
    [
      133.1,
      45.14
    ],
    [
      133.77,
      46.12
    ]
  ],
  [
    [
      133.77,
      46.12
    ],
    [
      134.11,
      47.21
    ],
    [
      134.5,
      47.58
    ],
    [
      135.03,
      48.48
    ]
  ],
  [
    [
      133.37,
      48.18
    ],
    [
      132.51,
      47.79
    ],
    [
      130.99,
      47.79
    ],
    [
      130.58,
      48.73
    ]
  ],
  [
    [
      129.4,
      49.44
    ],
    [
      127.66,
      49.76
    ],
    [
      127.29,
      50.74
    ]
  ],
  [
    [
      125.07,
      53.16
    ],
    [
      123.57,
      53.46
    ],
    [
      122.25,
      53.43
    ]
  ],
  [
    [
      120.73,
      52.52
    ],
    [
      120.74,
      51.96
    ],
    [
      120.18,
      51.64
    ],
    [
      119.28,
      50.58
    ],
    [
      119.29,
      50.14
    ]
  ],
  [
    [
      105.89,
      50.41
    ],
    [
      104.62,
      50.28
    ],
    [
      103.68,
      50.09
    ]
  ],
  [
    [
      103.68,
      50.09
    ],
    [
      102.26,
      50.51
    ],
    [
      102.07,
      51.26
    ],
    [
      100.89,
      51.52
    ]
  ],
  [
    [
      98.23,
      50.42
    ],
    [
      97.26,
      49.73
    ],
    [
      95.81,
      49.98
    ],
    [
      94.82,
      50.01
    ]
  ],
  [
    [
      94.15,
      50.48
    ],
    [
      93.1,
      50.5
    ],
    [
      92.23,
      50.8
    ]
  ],
  [
    [
      76.89,
      54.49
    ],
    [
      74.38,
      53.55
    ],
    [
      73.43,
      53.49
    ]
  ],
  [
    [
      68.17,
      54.97
    ],
    [
      65.67,
      54.6
    ],
    [
      65.18,
      54.35
    ]
  ],
  [
    [
      65.18,
      54.35
    ],
    [
      61.44,
      54.01
    ],
    [
      60.98,
      53.66
    ]
  ],
  [
    [
      59.64,
      50.55
    ],
    [
      58.36,
      51.06
    ],
    [
      56.78,
      51.04
    ],
    [
      55.72,
      50.62
    ],
    [
      54.53,
      51.03
    ]
  ],
  [
    [
      46.47,
      48.39
    ],
    [
      47.32,
      47.72
    ],
    [
      48.06,
      47.74
    ],
    [
      48.69,
      47.08
    ]
  ],
  [
    [
      48.69,
      47.08
    ],
    [
      48.59,
      46.56
    ],
    [
      49.1,
      46.4
    ]
  ],
  [
    [
      49.1,
      46.4
    ],
    [
      48.65,
      45.81
    ],
    [
      47.68,
      45.64
    ],
    [
      46.68,
      44.61
    ],
    [
      47.59,
      43.66
    ],
    [
      47.49,
      42.99
    ],
    [
      48.58,
      41.81
    ],
    [
      47.99,
      41.41
    ]
  ],
  [
    [
      46.4,
      41.86
    ],
    [
      45.78,
      42.09
    ],
    [
      45.47,
      42.5
    ]
  ],
  [
    [
      44.54,
      42.71
    ],
    [
      43.93,
      42.55
    ],
    [
      43.76,
      42.74
    ],
    [
      42.39,
      43.22
    ],
    [
      40.92,
      43.38
    ],
    [
      40.08,
      43.55
    ]
  ],
  [
    [
      39.96,
      43.43
    ],
    [
      38.68,
      44.28
    ],
    [
      37.54,
      44.66
    ],
    [
      36.68,
      45.24
    ],
    [
      37.4,
      45.4
    ],
    [
      38.23,
      46.24
    ],
    [
      37.67,
      46.64
    ],
    [
      39.15,
      47.04
    ],
    [
      39.12,
      47.26
    ],
    [
      38.22,
      47.1
    ]
  ],
  [
    [
      38.22,
      47.1
    ],
    [
      38.26,
      47.55
    ]
  ],
  [
    [
      38.26,
      47.55
    ],
    [
      38.77,
      47.83
    ],
    [
      39.74,
      47.9
    ]
  ],
  [
    [
      39.74,
      47.9
    ],
    [
      39.9,
      48.23
    ],
    [
      39.67,
      48.78
    ],
    [
      40.08,
      49.31
    ]
  ],
  [
    [
      40.08,
      49.31
    ],
    [
      40.07,
      49.6
    ],
    [
      38.59,
      49.93
    ]
  ],
  [
    [
      38.59,
      49.93
    ],
    [
      38.01,
      49.92
    ],
    [
      37.39,
      50.38
    ],
    [
      36.63,
      50.23
    ],
    [
      35.36,
      50.58
    ]
  ],
  [
    [
      35.36,
      50.58
    ],
    [
      35.38,
      50.77
    ],
    [
      35.02,
      51.21
    ]
  ],
  [
    [
      35.02,
      51.21
    ],
    [
      34.22,
      51.26
    ],
    [
      34.14,
      51.57
    ],
    [
      34.39,
      51.77
    ],
    [
      33.75,
      52.34
    ],
    [
      32.72,
      52.24
    ],
    [
      32.41,
      52.29
    ]
  ],
  [
    [
      32.41,
      52.29
    ],
    [
      32.16,
      52.06
    ],
    [
      31.79,
      52.1
    ],
    [
      31.54,
      52.74
    ]
  ],
  [
    [
      31.31,
      53.07
    ],
    [
      31.5,
      53.17
    ],
    [
      32.3,
      53.13
    ]
  ],
  [
    [
      27.72,
      57.79
    ],
    [
      27.42,
      58.72
    ],
    [
      28.13,
      59.3
    ]
  ],
  [
    [
      28.13,
      59.3
    ],
    [
      27.98,
      59.48
    ],
    [
      29.12,
      60.03
    ],
    [
      28.07,
      60.5
    ],
    [
      30.21,
      61.78
    ]
  ],
  [
    [
      28.59,
      69.06
    ],
    [
      29.4,
      69.16
    ],
    [
      31.1,
      69.56
    ],
    [
      32.13,
      69.91
    ],
    [
      33.78,
      69.3
    ],
    [
      36.51,
      69.06
    ],
    [
      40.29,
      67.93
    ],
    [
      41.06,
      67.46
    ],
    [
      41.13,
      66.79
    ],
    [
      40.02,
      66.27
    ],
    [
      38.38,
      66
    ],
    [
      33.92,
      66.76
    ],
    [
      33.18,
      66.63
    ],
    [
      34.81,
      65.9
    ],
    [
      34.88,
      65.44
    ],
    [
      34.94,
      64.41
    ],
    [
      36.23,
      64.11
    ],
    [
      37.01,
      63.85
    ],
    [
      37.14,
      64.33
    ],
    [
      36.54,
      64.76
    ],
    [
      37.18,
      65.14
    ],
    [
      39.59,
      64.52
    ],
    [
      40.44,
      64.76
    ],
    [
      39.76,
      65.5
    ],
    [
      42.09,
      66.48
    ],
    [
      43.02,
      66.42
    ],
    [
      43.95,
      66.07
    ],
    [
      44.53,
      66.76
    ],
    [
      43.7,
      67.35
    ],
    [
      44.19,
      67.95
    ],
    [
      43.45,
      68.57
    ],
    [
      46.25,
      68.25
    ],
    [
      46.82,
      67.69
    ],
    [
      45.56,
      67.57
    ],
    [
      45.56,
      67.01
    ],
    [
      46.35,
      66.67
    ],
    [
      47.89,
      66.88
    ],
    [
      48.14,
      67.52
    ],
    [
      50.23,
      68
    ],
    [
      53.72,
      68.86
    ],
    [
      54.47,
      68.81
    ],
    [
      53.49,
      68.2
    ],
    [
      54.73,
      68.1
    ],
    [
      55.44,
      68.44
    ],
    [
      57.32,
      68.47
    ],
    [
      58.8,
      68.88
    ],
    [
      59.94,
      68.28
    ],
    [
      61.08,
      68.94
    ],
    [
      60.03,
      69.52
    ],
    [
      60.55,
      69.85
    ],
    [
      63.5,
      69.55
    ],
    [
      64.89,
      69.23
    ],
    [
      68.51,
      68.09
    ],
    [
      69.18,
      68.62
    ],
    [
      68.16,
      69.14
    ],
    [
      68.14,
      69.36
    ],
    [
      66.93,
      69.45
    ],
    [
      67.26,
      69.93
    ],
    [
      66.72,
      70.71
    ],
    [
      66.69,
      71.03
    ],
    [
      68.54,
      71.93
    ],
    [
      69.2,
      72.84
    ],
    [
      69.94,
      73.04
    ],
    [
      72.59,
      72.78
    ],
    [
      72.8,
      72.22
    ],
    [
      71.85,
      71.41
    ],
    [
      72.47,
      71.09
    ],
    [
      72.79,
      70.39
    ],
    [
      72.56,
      69.02
    ],
    [
      73.67,
      68.41
    ],
    [
      73.24,
      67.74
    ],
    [
      71.28,
      66.32
    ],
    [
      72.42,
      66.17
    ],
    [
      72.82,
      66.53
    ],
    [
      73.92,
      66.79
    ],
    [
      74.19,
      67.28
    ],
    [
      75.05,
      67.76
    ],
    [
      74.47,
      68.33
    ],
    [
      74.94,
      68.99
    ],
    [
      73.84,
      69.07
    ],
    [
      73.6,
      69.63
    ],
    [
      74.4,
      70.63
    ],
    [
      73.1,
      71.45
    ],
    [
      74.89,
      72.12
    ],
    [
      74.66,
      72.83
    ],
    [
      75.16,
      72.85
    ],
    [
      75.68,
      72.3
    ],
    [
      75.29,
      71.34
    ],
    [
      76.36,
      71.15
    ],
    [
      75.9,
      71.87
    ],
    [
      77.58,
      72.27
    ],
    [
      79.65,
      72.32
    ],
    [
      81.5,
      71.75
    ],
    [
      80.61,
      72.58
    ],
    [
      80.51,
      73.65
    ],
    [
      82.25,
      73.85
    ],
    [
      84.66,
      73.81
    ],
    [
      86.82,
      73.94
    ],
    [
      86.01,
      74.46
    ],
    [
      87.17,
      75.12
    ],
    [
      88.32,
      75.14
    ],
    [
      90.26,
      75.64
    ],
    [
      92.9,
      75.77
    ],
    [
      93.23,
      76.05
    ],
    [
      95.86,
      76.14
    ],
    [
      96.68,
      75.92
    ],
    [
      98.92,
      76.45
    ],
    [
      100.76,
      76.43
    ],
    [
      101.04,
      76.86
    ],
    [
      101.99,
      77.29
    ],
    [
      104.35,
      77.7
    ],
    [
      106.07,
      77.37
    ],
    [
      104.71,
      77.13
    ],
    [
      106.97,
      76.97
    ],
    [
      107.24,
      76.48
    ],
    [
      108.15,
      76.72
    ],
    [
      111.08,
      76.71
    ],
    [
      113.33,
      76.22
    ],
    [
      114.13,
      75.85
    ],
    [
      113.89,
      75.33
    ],
    [
      112.78,
      75.03
    ],
    [
      110.15,
      74.48
    ],
    [
      109.4,
      74.18
    ],
    [
      110.64,
      74.04
    ],
    [
      112.12,
      73.79
    ],
    [
      113.02,
      73.98
    ],
    [
      113.53,
      73.34
    ],
    [
      113.97,
      73.59
    ],
    [
      115.57,
      73.75
    ],
    [
      118.78,
      73.59
    ],
    [
      119.02,
      73.12
    ],
    [
      123.2,
      72.97
    ],
    [
      123.26,
      73.74
    ],
    [
      125.38,
      73.56
    ],
    [
      126.98,
      73.57
    ],
    [
      128.59,
      73.04
    ],
    [
      129.05,
      72.4
    ],
    [
      128.46,
      71.98
    ],
    [
      129.72,
      71.19
    ],
    [
      131.29,
      70.79
    ],
    [
      132.25,
      71.84
    ],
    [
      133.86,
      71.39
    ],
    [
      135.56,
      71.66
    ],
    [
      137.5,
      71.35
    ],
    [
      138.23,
      71.63
    ],
    [
      139.87,
      71.49
    ],
    [
      139.15,
      72.42
    ],
    [
      140.47,
      72.85
    ],
    [
      149.5,
      72.2
    ],
    [
      150.35,
      71.61
    ],
    [
      152.97,
      70.84
    ],
    [
      157.01,
      71.03
    ],
    [
      159,
      70.87
    ],
    [
      159.83,
      70.45
    ],
    [
      159.71,
      69.72
    ],
    [
      160.94,
      69.44
    ],
    [
      162.28,
      69.64
    ],
    [
      164.05,
      69.67
    ],
    [
      165.94,
      69.47
    ],
    [
      167.84,
      69.58
    ],
    [
      169.58,
      68.69
    ],
    [
      170.82,
      69.01
    ],
    [
      170.01,
      69.65
    ],
    [
      170.45,
      70.1
    ],
    [
      173.64,
      69.82
    ],
    [
      175.72,
      69.88
    ],
    [
      178.6,
      69.4
    ],
    [
      180,
      68.96
    ],
    [
      180,
      64.98
    ],
    [
      179.99,
      64.97
    ],
    [
      178.71,
      64.53
    ],
    [
      177.41,
      64.61
    ],
    [
      178.31,
      64.08
    ],
    [
      178.91,
      63.25
    ],
    [
      179.37,
      62.98
    ],
    [
      179.49,
      62.57
    ],
    [
      179.23,
      62.3
    ],
    [
      177.36,
      62.52
    ],
    [
      174.57,
      61.77
    ],
    [
      173.68,
      61.65
    ],
    [
      172.15,
      60.95
    ],
    [
      170.7,
      60.34
    ],
    [
      170.33,
      59.88
    ],
    [
      168.9,
      60.57
    ],
    [
      166.29,
      59.79
    ],
    [
      165.84,
      60.16
    ],
    [
      164.88,
      59.73
    ],
    [
      163.54,
      59.87
    ],
    [
      163.22,
      59.21
    ],
    [
      162.02,
      58.24
    ],
    [
      162.05,
      57.84
    ],
    [
      163.19,
      57.62
    ],
    [
      163.06,
      56.16
    ],
    [
      162.13,
      56.12
    ],
    [
      161.7,
      55.29
    ],
    [
      162.12,
      54.86
    ],
    [
      160.37,
      54.34
    ],
    [
      160.02,
      53.2
    ],
    [
      158.53,
      52.96
    ],
    [
      158.23,
      51.94
    ],
    [
      156.79,
      51.01
    ],
    [
      156.42,
      51.7
    ],
    [
      155.99,
      53.16
    ],
    [
      155.43,
      55.38
    ],
    [
      155.91,
      56.77
    ],
    [
      156.76,
      57.36
    ],
    [
      156.81,
      57.83
    ],
    [
      158.36,
      58.06
    ],
    [
      160.15,
      59.31
    ],
    [
      161.87,
      60.34
    ],
    [
      163.67,
      61.14
    ],
    [
      164.47,
      62.55
    ],
    [
      163.26,
      62.47
    ],
    [
      162.66,
      61.64
    ],
    [
      160.12,
      60.54
    ],
    [
      159.3,
      61.77
    ],
    [
      156.72,
      61.43
    ],
    [
      154.22,
      59.76
    ],
    [
      155.04,
      59.14
    ],
    [
      152.81,
      58.88
    ],
    [
      151.27,
      58.78
    ],
    [
      151.34,
      59.5
    ],
    [
      149.78,
      59.66
    ],
    [
      148.54,
      59.16
    ],
    [
      145.49,
      59.34
    ],
    [
      142.2,
      59.04
    ],
    [
      138.96,
      57.09
    ],
    [
      135.13,
      54.73
    ],
    [
      136.7,
      54.6
    ],
    [
      137.19,
      53.98
    ],
    [
      138.16,
      53.76
    ],
    [
      138.8,
      54.25
    ],
    [
      139.9,
      54.19
    ],
    [
      141.35,
      53.09
    ],
    [
      141.38,
      52.24
    ],
    [
      140.6,
      51.24
    ],
    [
      140.51,
      50.05
    ],
    [
      140.06,
      48.45
    ],
    [
      138.55,
      47
    ],
    [
      138.22,
      46.31
    ],
    [
      136.86,
      45.14
    ],
    [
      135.52,
      43.99
    ],
    [
      134.87,
      43.4
    ],
    [
      133.54,
      42.81
    ],
    [
      132.91,
      42.8
    ],
    [
      132.28,
      43.28
    ],
    [
      130.94,
      42.55
    ],
    [
      130.78,
      42.22
    ],
    [
      130.64,
      42.4
    ],
    [
      130.63,
      42.9
    ]
  ],
  [
    [
      105.08,
      78.31
    ],
    [
      99.44,
      77.92
    ],
    [
      101.26,
      79.23
    ],
    [
      102.09,
      79.35
    ],
    [
      102.84,
      79.28
    ],
    [
      105.37,
      78.71
    ],
    [
      105.08,
      78.31
    ]
  ],
  [
    [
      51.14,
      80.55
    ],
    [
      49.79,
      80.42
    ],
    [
      48.89,
      80.34
    ],
    [
      48.75,
      80.18
    ],
    [
      47.59,
      80.01
    ],
    [
      46.5,
      80.25
    ],
    [
      47.07,
      80.56
    ],
    [
      44.85,
      80.59
    ],
    [
      46.8,
      80.77
    ],
    [
      48.32,
      80.78
    ],
    [
      48.52,
      80.51
    ],
    [
      49.1,
      80.75
    ],
    [
      50.04,
      80.92
    ],
    [
      51.52,
      80.7
    ],
    [
      51.14,
      80.55
    ]
  ],
  [
    [
      99.94,
      78.88
    ],
    [
      97.76,
      78.76
    ],
    [
      94.97,
      79.04
    ],
    [
      93.31,
      79.43
    ],
    [
      92.55,
      80.14
    ],
    [
      91.18,
      80.34
    ],
    [
      93.78,
      81.02
    ],
    [
      95.94,
      81.25
    ],
    [
      97.88,
      80.75
    ],
    [
      100.19,
      79.78
    ],
    [
      99.94,
      78.88
    ]
  ],
  [
    [
      30.42,
      -1.13
    ],
    [
      30.82,
      -1.7
    ],
    [
      30.76,
      -2.29
    ]
  ],
  [
    [
      30.76,
      -2.29
    ],
    [
      30.47,
      -2.41
    ]
  ],
  [
    [
      29.58,
      -1.34
    ],
    [
      29.82,
      -1.44
    ],
    [
      30.42,
      -1.13
    ]
  ],
  [
    [
      -17.06,
      21
    ],
    [
      -17.02,
      21.41
    ],
    [
      -16.98,
      21.89
    ],
    [
      -16.58,
      22.16
    ],
    [
      -16.26,
      22.68
    ],
    [
      -16.33,
      23.02
    ],
    [
      -15.99,
      23.73
    ],
    [
      -15.43,
      24.36
    ],
    [
      -15.09,
      24.52
    ],
    [
      -14.83,
      25.1
    ],
    [
      -14.8,
      25.64
    ],
    [
      -14.44,
      26.25
    ],
    [
      -13.78,
      26.62
    ],
    [
      -13.41,
      27.2
    ],
    [
      -13.26,
      27.44
    ],
    [
      -13.1,
      27.6
    ]
  ],
  [
    [
      42.78,
      16.35
    ],
    [
      42.65,
      16.77
    ],
    [
      42.35,
      17.08
    ],
    [
      42.27,
      17.47
    ],
    [
      41.75,
      17.83
    ],
    [
      41.22,
      18.67
    ],
    [
      40.94,
      19.49
    ],
    [
      40.25,
      20.17
    ],
    [
      39.8,
      20.34
    ],
    [
      39.14,
      21.29
    ],
    [
      39.02,
      21.99
    ],
    [
      39.07,
      22.58
    ],
    [
      38.49,
      23.69
    ],
    [
      38.02,
      24.08
    ],
    [
      37.48,
      24.29
    ],
    [
      37.15,
      24.86
    ],
    [
      37.21,
      25.08
    ],
    [
      36.93,
      25.6
    ],
    [
      36.64,
      25.83
    ],
    [
      36.25,
      26.57
    ],
    [
      35.64,
      27.38
    ],
    [
      35.13,
      28.06
    ],
    [
      34.63,
      28.06
    ],
    [
      34.79,
      28.61
    ],
    [
      34.83,
      28.96
    ],
    [
      34.96,
      29.36
    ]
  ],
  [
    [
      48.42,
      28.55
    ],
    [
      48.81,
      27.69
    ],
    [
      49.3,
      27.46
    ],
    [
      49.47,
      27.11
    ],
    [
      50.15,
      26.69
    ],
    [
      50.21,
      26.28
    ],
    [
      50.11,
      25.94
    ],
    [
      50.24,
      25.61
    ],
    [
      50.53,
      25.33
    ],
    [
      50.66,
      25
    ],
    [
      50.81,
      24.75
    ]
  ],
  [
    [
      51.39,
      24.63
    ],
    [
      51.58,
      24.25
    ]
  ],
  [
    [
      52,
      19
    ],
    [
      49.12,
      18.62
    ],
    [
      48.18,
      18.17
    ],
    [
      47.47,
      17.12
    ],
    [
      47,
      16.95
    ],
    [
      46.75,
      17.28
    ],
    [
      46.37,
      17.23
    ],
    [
      45.4,
      17.33
    ],
    [
      45.22,
      17.43
    ],
    [
      44.06,
      17.41
    ],
    [
      43.79,
      17.32
    ],
    [
      43.38,
      17.58
    ],
    [
      43.12,
      17.09
    ],
    [
      43.22,
      16.67
    ],
    [
      42.78,
      16.35
    ]
  ],
  [
    [
      33.96,
      9.46
    ],
    [
      33.82,
      9.48
    ],
    [
      33.84,
      9.98
    ],
    [
      33.72,
      10.33
    ],
    [
      33.21,
      10.72
    ],
    [
      33.09,
      11.44
    ],
    [
      33.21,
      12.18
    ],
    [
      32.74,
      12.25
    ],
    [
      32.67,
      12.02
    ],
    [
      32.07,
      11.97
    ],
    [
      32.31,
      11.68
    ],
    [
      32.4,
      11.08
    ],
    [
      31.85,
      10.53
    ],
    [
      31.35,
      9.81
    ],
    [
      30.84,
      9.71
    ],
    [
      30,
      10.29
    ],
    [
      29.62,
      10.08
    ],
    [
      29.52,
      9.79
    ],
    [
      29,
      9.6
    ],
    [
      28.97,
      9.4
    ],
    [
      27.97,
      9.4
    ],
    [
      27.83,
      9.6
    ],
    [
      27.11,
      9.64
    ],
    [
      26.75,
      9.47
    ],
    [
      26.48,
      9.55
    ],
    [
      25.96,
      10.14
    ],
    [
      25.79,
      10.41
    ],
    [
      25.07,
      10.27
    ],
    [
      24.79,
      9.81
    ],
    [
      24.54,
      8.92
    ],
    [
      24.19,
      8.73
    ],
    [
      23.89,
      8.62
    ]
  ],
  [
    [
      23.89,
      8.62
    ],
    [
      23.81,
      8.67
    ]
  ],
  [
    [
      22.86,
      11.14
    ],
    [
      22.88,
      11.38
    ],
    [
      22.51,
      11.68
    ],
    [
      22.5,
      12.26
    ],
    [
      22.29,
      12.65
    ],
    [
      21.94,
      12.59
    ],
    [
      22.04,
      12.96
    ],
    [
      22.3,
      13.37
    ],
    [
      22.18,
      13.79
    ],
    [
      22.51,
      14.09
    ],
    [
      22.3,
      14.33
    ],
    [
      22.57,
      14.94
    ],
    [
      23.02,
      15.68
    ],
    [
      23.89,
      15.61
    ],
    [
      23.84,
      19.58
    ]
  ],
  [
    [
      36.87,
      22
    ],
    [
      37.19,
      21.02
    ],
    [
      36.97,
      20.84
    ],
    [
      37.11,
      19.81
    ],
    [
      37.48,
      18.61
    ],
    [
      37.86,
      18.37
    ],
    [
      38.41,
      18
    ]
  ],
  [
    [
      36.85,
      16.96
    ],
    [
      36.75,
      16.29
    ],
    [
      36.32,
      14.82
    ],
    [
      36.43,
      14.42
    ]
  ],
  [
    [
      33.96,
      9.58
    ],
    [
      33.96,
      9.46
    ]
  ],
  [
    [
      33.96,
      9.46
    ],
    [
      33.97,
      8.68
    ]
  ],
  [
    [
      34.01,
      4.25
    ],
    [
      33.39,
      3.79
    ],
    [
      32.69,
      3.79
    ],
    [
      31.88,
      3.56
    ],
    [
      31.25,
      3.78
    ],
    [
      30.83,
      3.51
    ]
  ],
  [
    [
      30.83,
      3.51
    ],
    [
      29.95,
      4.17
    ],
    [
      29.72,
      4.6
    ]
  ],
  [
    [
      24.57,
      8.23
    ],
    [
      23.89,
      8.62
    ]
  ],
  [
    [
      -16.71,
      13.59
    ],
    [
      -17.13,
      14.37
    ],
    [
      -17.63,
      14.73
    ],
    [
      -17.19,
      14.92
    ],
    [
      -16.7,
      15.62
    ],
    [
      -16.46,
      16.14
    ]
  ],
  [
    [
      -16.68,
      12.38
    ],
    [
      -16.84,
      13.15
    ]
  ],
  [
    [
      162.12,
      -10.48
    ],
    [
      162.4,
      -10.83
    ],
    [
      161.7,
      -10.82
    ],
    [
      161.32,
      -10.2
    ],
    [
      161.92,
      -10.45
    ],
    [
      162.12,
      -10.48
    ]
  ],
  [
    [
      160.85,
      -9.87
    ],
    [
      160.46,
      -9.9
    ],
    [
      159.85,
      -9.79
    ],
    [
      159.64,
      -9.64
    ],
    [
      159.7,
      -9.24
    ],
    [
      160.36,
      -9.4
    ],
    [
      160.69,
      -9.61
    ],
    [
      160.85,
      -9.87
    ]
  ],
  [
    [
      161.68,
      -9.6
    ],
    [
      161.53,
      -9.78
    ],
    [
      160.79,
      -8.92
    ],
    [
      160.58,
      -8.32
    ],
    [
      160.92,
      -8.32
    ],
    [
      161.28,
      -9.12
    ],
    [
      161.68,
      -9.6
    ]
  ],
  [
    [
      159.88,
      -8.34
    ],
    [
      159.92,
      -8.54
    ],
    [
      159.13,
      -8.11
    ],
    [
      158.59,
      -7.75
    ],
    [
      158.21,
      -7.42
    ],
    [
      158.36,
      -7.32
    ],
    [
      158.82,
      -7.56
    ],
    [
      159.64,
      -8.02
    ],
    [
      159.88,
      -8.34
    ]
  ],
  [
    [
      157.54,
      -7.35
    ],
    [
      157.34,
      -7.4
    ],
    [
      156.9,
      -7.18
    ],
    [
      156.49,
      -6.77
    ],
    [
      156.54,
      -6.6
    ],
    [
      157.14,
      -7.02
    ],
    [
      157.54,
      -7.35
    ]
  ],
  [
    [
      -11.44,
      6.79
    ],
    [
      -11.71,
      6.86
    ],
    [
      -12.43,
      7.26
    ],
    [
      -12.95,
      7.8
    ],
    [
      -13.12,
      8.16
    ],
    [
      -13.25,
      8.9
    ]
  ],
  [
    [
      -87.79,
      13.38
    ],
    [
      -87.9,
      13.15
    ],
    [
      -88.48,
      13.16
    ],
    [
      -88.84,
      13.26
    ],
    [
      -89.26,
      13.46
    ],
    [
      -89.81,
      13.52
    ],
    [
      -90.1,
      13.74
    ]
  ],
  [
    [
      47.79,
      8
    ],
    [
      46.95,
      8
    ],
    [
      43.68,
      9.18
    ]
  ],
  [
    [
      43.68,
      9.18
    ],
    [
      43.3,
      9.54
    ],
    [
      42.93,
      10.02
    ]
  ],
  [
    [
      43.15,
      11.46
    ],
    [
      43.47,
      11.28
    ],
    [
      43.67,
      10.86
    ],
    [
      44.12,
      10.45
    ],
    [
      44.61,
      10.44
    ],
    [
      45.56,
      10.7
    ],
    [
      46.65,
      10.82
    ],
    [
      47.53,
      11.13
    ],
    [
      48.02,
      11.19
    ],
    [
      48.38,
      11.38
    ],
    [
      48.95,
      11.41
    ],
    [
      48.94,
      11.39
    ],
    [
      48.95,
      11.41
    ],
    [
      49.27,
      11.43
    ],
    [
      49.73,
      11.58
    ],
    [
      50.26,
      11.68
    ],
    [
      50.73,
      12.02
    ],
    [
      51.11,
      12.02
    ],
    [
      51.13,
      11.75
    ],
    [
      51.04,
      11.17
    ],
    [
      51.05,
      10.64
    ],
    [
      50.83,
      10.28
    ],
    [
      50.55,
      9.2
    ],
    [
      50.07,
      8.08
    ],
    [
      49.45,
      6.8
    ],
    [
      48.59,
      5.34
    ],
    [
      47.74,
      4.22
    ],
    [
      46.56,
      2.86
    ],
    [
      45.56,
      2.05
    ],
    [
      44.07,
      1.05
    ],
    [
      43.14,
      0.29
    ],
    [
      42.04,
      -0.92
    ],
    [
      41.81,
      -1.45
    ],
    [
      41.59,
      -1.68
    ]
  ],
  [
    [
      19.37,
      44.86
    ],
    [
      19.01,
      44.86
    ],
    [
      19.39,
      45.24
    ]
  ],
  [
    [
      19.07,
      45.52
    ],
    [
      18.83,
      45.91
    ],
    [
      19.6,
      46.17
    ]
  ],
  [
    [
      -57.15,
      5.97
    ],
    [
      -55.95,
      5.77
    ],
    [
      -55.84,
      5.95
    ],
    [
      -55.03,
      6.03
    ],
    [
      -53.96,
      5.76
    ]
  ],
  [
    [
      -54.4,
      4.21
    ],
    [
      -54.01,
      3.62
    ],
    [
      -54.18,
      3.19
    ],
    [
      -54.27,
      2.73
    ],
    [
      -54.52,
      2.31
    ]
  ],
  [
    [
      22.56,
      49.09
    ],
    [
      22.28,
      48.83
    ],
    [
      22.09,
      48.42
    ]
  ],
  [
    [
      13.72,
      45.5
    ],
    [
      13.94,
      45.59
    ]
  ],
  [
    [
      23.9,
      66.01
    ],
    [
      22.18,
      65.72
    ],
    [
      21.21,
      65.03
    ],
    [
      21.37,
      64.41
    ],
    [
      19.78,
      63.61
    ],
    [
      17.85,
      62.75
    ],
    [
      17.12,
      61.34
    ],
    [
      17.83,
      60.64
    ],
    [
      18.79,
      60.08
    ],
    [
      17.87,
      58.95
    ],
    [
      16.83,
      58.72
    ],
    [
      16.45,
      57.04
    ],
    [
      15.88,
      56.1
    ],
    [
      14.67,
      56.2
    ],
    [
      14.1,
      55.41
    ],
    [
      12.94,
      55.36
    ],
    [
      12.63,
      56.31
    ],
    [
      11.79,
      57.44
    ],
    [
      11.03,
      58.86
    ]
  ],
  [
    [
      32.07,
      -26.73
    ],
    [
      31.87,
      -27.18
    ],
    [
      31.28,
      -27.29
    ],
    [
      30.69,
      -26.74
    ],
    [
      30.68,
      -26.4
    ],
    [
      30.95,
      -26.02
    ],
    [
      31.04,
      -25.73
    ],
    [
      31.33,
      -25.66
    ],
    [
      31.84,
      -25.84
    ]
  ],
  [
    [
      36,
      34.64
    ],
    [
      35.91,
      35.41
    ],
    [
      36.15,
      35.82
    ]
  ],
  [
    [
      36.15,
      35.82
    ],
    [
      36.42,
      36.04
    ],
    [
      36.69,
      36.26
    ],
    [
      36.74,
      36.82
    ],
    [
      37.07,
      36.62
    ],
    [
      38.17,
      36.9
    ],
    [
      38.7,
      36.71
    ],
    [
      39.52,
      36.72
    ],
    [
      40.67,
      37.09
    ],
    [
      41.21,
      37.07
    ],
    [
      42.35,
      37.23
    ]
  ],
  [
    [
      13.54,
      14.37
    ],
    [
      13.97,
      15.68
    ],
    [
      15.25,
      16.63
    ]
  ],
  [
    [
      15.49,
      20.73
    ],
    [
      15.47,
      21.05
    ],
    [
      15.1,
      21.31
    ]
  ],
  [
    [
      14.96,
      11.56
    ],
    [
      14.89,
      12.22
    ],
    [
      14.5,
      12.86
    ]
  ],
  [
    [
      1.87,
      6.14
    ],
    [
      1.06,
      5.93
    ]
  ],
  [
    [
      102.58,
      12.19
    ],
    [
      101.69,
      12.65
    ],
    [
      100.83,
      12.63
    ],
    [
      100.98,
      13.41
    ],
    [
      100.1,
      13.41
    ],
    [
      100.02,
      12.31
    ],
    [
      99.48,
      10.85
    ],
    [
      99.15,
      9.96
    ],
    [
      99.22,
      9.24
    ],
    [
      99.87,
      9.21
    ],
    [
      100.28,
      8.3
    ],
    [
      100.46,
      7.43
    ],
    [
      101.02,
      6.86
    ],
    [
      101.62,
      6.74
    ],
    [
      102.14,
      6.22
    ]
  ],
  [
    [
      100.09,
      6.46
    ],
    [
      99.69,
      6.85
    ],
    [
      99.52,
      7.34
    ],
    [
      98.99,
      7.91
    ],
    [
      98.5,
      8.38
    ],
    [
      98.34,
      7.79
    ],
    [
      98.15,
      8.35
    ],
    [
      98.26,
      8.97
    ],
    [
      98.55,
      9.93
    ]
  ],
  [
    [
      67.83,
      37.14
    ],
    [
      68.39,
      38.16
    ],
    [
      68.18,
      38.9
    ],
    [
      67.44,
      39.14
    ],
    [
      67.7,
      39.58
    ],
    [
      68.54,
      39.53
    ],
    [
      69.01,
      40.09
    ],
    [
      69.33,
      40.73
    ],
    [
      70.67,
      40.96
    ],
    [
      70.46,
      40.5
    ],
    [
      70.6,
      40.22
    ],
    [
      71.01,
      40.24
    ]
  ],
  [
    [
      53.92,
      37.2
    ],
    [
      53.74,
      37.91
    ],
    [
      53.88,
      38.95
    ],
    [
      53.1,
      39.29
    ],
    [
      53.36,
      39.98
    ],
    [
      52.69,
      40.03
    ],
    [
      52.92,
      40.88
    ],
    [
      53.86,
      40.63
    ],
    [
      54.74,
      40.95
    ],
    [
      54.01,
      41.55
    ],
    [
      53.72,
      42.12
    ],
    [
      52.92,
      41.87
    ],
    [
      52.81,
      41.14
    ],
    [
      52.5,
      41.78
    ]
  ],
  [
    [
      55.97,
      41.31
    ],
    [
      57.1,
      41.32
    ],
    [
      56.93,
      41.83
    ],
    [
      57.79,
      42.17
    ],
    [
      58.63,
      42.75
    ],
    [
      59.98,
      42.22
    ],
    [
      60.08,
      41.43
    ],
    [
      60.47,
      41.22
    ],
    [
      61.55,
      41.27
    ],
    [
      61.88,
      41.08
    ],
    [
      62.37,
      40.05
    ],
    [
      63.52,
      39.36
    ],
    [
      64.17,
      38.89
    ],
    [
      65.22,
      38.4
    ],
    [
      66.55,
      37.97
    ],
    [
      66.52,
      37.36
    ]
  ],
  [
    [
      124.97,
      -8.89
    ],
    [
      125.09,
      -8.66
    ],
    [
      125.95,
      -8.43
    ],
    [
      126.64,
      -8.4
    ],
    [
      126.96,
      -8.27
    ],
    [
      127.34,
      -8.4
    ],
    [
      126.97,
      -8.67
    ],
    [
      125.93,
      -9.11
    ],
    [
      125.09,
      -9.39
    ]
  ],
  [
    [
      -61.68,
      10.76
    ],
    [
      -61.1,
      10.89
    ],
    [
      -60.89,
      10.86
    ],
    [
      -60.93,
      10.11
    ],
    [
      -61.77,
      10
    ],
    [
      -61.95,
      10.09
    ],
    [
      -61.66,
      10.37
    ],
    [
      -61.68,
      10.76
    ]
  ],
  [
    [
      8.42,
      36.95
    ],
    [
      9.51,
      37.35
    ],
    [
      10.21,
      37.23
    ],
    [
      10.18,
      36.72
    ],
    [
      11.03,
      37.09
    ],
    [
      11.1,
      36.9
    ],
    [
      10.6,
      36.41
    ],
    [
      10.59,
      35.95
    ],
    [
      10.94,
      35.7
    ],
    [
      10.81,
      34.83
    ],
    [
      10.15,
      34.33
    ],
    [
      10.34,
      33.79
    ],
    [
      10.86,
      33.77
    ],
    [
      11.11,
      33.29
    ],
    [
      11.49,
      33.14
    ]
  ],
  [
    [
      44.23,
      37.97
    ],
    [
      44.77,
      37.17
    ]
  ],
  [
    [
      36.15,
      35.82
    ],
    [
      35.78,
      36.27
    ],
    [
      36.16,
      36.65
    ],
    [
      35.55,
      36.57
    ],
    [
      34.71,
      36.8
    ],
    [
      34.03,
      36.22
    ],
    [
      32.51,
      36.11
    ],
    [
      31.7,
      36.64
    ],
    [
      30.62,
      36.68
    ],
    [
      30.39,
      36.26
    ],
    [
      29.7,
      36.14
    ],
    [
      28.73,
      36.68
    ],
    [
      27.64,
      36.66
    ],
    [
      27.05,
      37.65
    ],
    [
      26.32,
      38.21
    ],
    [
      26.8,
      38.99
    ],
    [
      26.17,
      39.46
    ],
    [
      27.28,
      40.42
    ],
    [
      28.82,
      40.46
    ],
    [
      29.24,
      41.22
    ],
    [
      31.15,
      41.09
    ],
    [
      32.35,
      41.74
    ],
    [
      33.51,
      42.02
    ],
    [
      35.17,
      42.04
    ],
    [
      36.91,
      41.34
    ],
    [
      38.35,
      40.95
    ],
    [
      39.51,
      41.1
    ],
    [
      40.37,
      41.01
    ],
    [
      41.55,
      41.54
    ]
  ],
  [
    [
      28,
      42.01
    ],
    [
      28.12,
      41.62
    ],
    [
      28.99,
      41.3
    ],
    [
      28.81,
      41.05
    ],
    [
      27.62,
      41
    ],
    [
      27.19,
      40.69
    ],
    [
      26.36,
      40.15
    ],
    [
      26.04,
      40.62
    ],
    [
      26.06,
      40.82
    ]
  ],
  [
    [
      121.78,
      24.39
    ],
    [
      121.18,
      22.79
    ],
    [
      120.75,
      21.97
    ],
    [
      120.22,
      22.81
    ],
    [
      120.11,
      23.56
    ],
    [
      120.69,
      24.54
    ],
    [
      121.5,
      25.3
    ],
    [
      121.95,
      25
    ],
    [
      121.78,
      24.39
    ]
  ],
  [
    [
      39.2,
      -4.68
    ],
    [
      38.74,
      -5.91
    ],
    [
      38.8,
      -6.48
    ],
    [
      39.44,
      -6.84
    ],
    [
      39.47,
      -7.1
    ],
    [
      39.19,
      -7.7
    ],
    [
      39.25,
      -8.01
    ],
    [
      39.19,
      -8.49
    ],
    [
      39.54,
      -9.11
    ],
    [
      39.95,
      -10.1
    ],
    [
      40.32,
      -10.32
    ],
    [
      39.52,
      -10.9
    ],
    [
      38.43,
      -11.29
    ]
  ],
  [
    [
      38.43,
      -11.29
    ],
    [
      37.83,
      -11.27
    ],
    [
      37.47,
      -11.57
    ],
    [
      36.78,
      -11.59
    ]
  ],
  [
    [
      34.56,
      -11.52
    ],
    [
      34.28,
      -10.16
    ],
    [
      33.94,
      -9.69
    ]
  ],
  [
    [
      33.94,
      -9.69
    ],
    [
      33.74,
      -9.42
    ],
    [
      32.76,
      -9.23
    ]
  ],
  [
    [
      32.76,
      -9.23
    ],
    [
      32.19,
      -8.93
    ],
    [
      31.56,
      -8.76
    ],
    [
      31.16,
      -8.59
    ]
  ],
  [
    [
      31.16,
      -8.59
    ],
    [
      30.74,
      -8.34
    ],
    [
      30.2,
      -7.08
    ],
    [
      29.62,
      -6.52
    ],
    [
      29.42,
      -5.94
    ]
  ],
  [
    [
      29.75,
      -4.45
    ],
    [
      30.12,
      -4.09
    ],
    [
      30.51,
      -3.57
    ],
    [
      30.75,
      -3.36
    ],
    [
      30.74,
      -3.03
    ],
    [
      30.53,
      -2.81
    ],
    [
      30.47,
      -2.41
    ],
    [
      30.76,
      -2.29
    ]
  ],
  [
    [
      30.42,
      -1.13
    ],
    [
      30.77,
      -1.01
    ],
    [
      31.87,
      -1.03
    ],
    [
      33.9,
      -0.95
    ]
  ],
  [
    [
      29.59,
      -0.59
    ],
    [
      29.82,
      -0.21
    ],
    [
      29.88,
      0.6
    ]
  ],
  [
    [
      31.17,
      2.2
    ],
    [
      30.77,
      2.34
    ],
    [
      30.83,
      3.51
    ]
  ],
  [
    [
      31.79,
      52.1
    ],
    [
      32.16,
      52.06
    ],
    [
      32.41,
      52.29
    ]
  ],
  [
    [
      35.02,
      51.21
    ],
    [
      35.38,
      50.77
    ],
    [
      35.36,
      50.58
    ]
  ],
  [
    [
      38.59,
      49.93
    ],
    [
      40.07,
      49.6
    ],
    [
      40.08,
      49.31
    ]
  ],
  [
    [
      40.08,
      49.31
    ],
    [
      39.67,
      48.78
    ],
    [
      39.9,
      48.23
    ],
    [
      39.74,
      47.9
    ]
  ],
  [
    [
      39.74,
      47.9
    ],
    [
      38.77,
      47.83
    ],
    [
      38.26,
      47.55
    ]
  ],
  [
    [
      38.22,
      47.1
    ],
    [
      37.43,
      47.02
    ],
    [
      36.76,
      46.7
    ],
    [
      35.82,
      46.65
    ],
    [
      34.96,
      46.27
    ],
    [
      35.02,
      45.65
    ],
    [
      35.51,
      45.41
    ],
    [
      36.53,
      45.47
    ],
    [
      36.33,
      45.11
    ],
    [
      35.24,
      44.94
    ],
    [
      33.88,
      44.36
    ],
    [
      33.33,
      44.56
    ],
    [
      33.55,
      45.03
    ],
    [
      32.45,
      45.33
    ],
    [
      32.63,
      45.52
    ],
    [
      33.59,
      45.85
    ],
    [
      33.3,
      46.08
    ],
    [
      31.74,
      46.33
    ],
    [
      31.68,
      46.71
    ],
    [
      30.75,
      46.58
    ],
    [
      30.38,
      46.03
    ],
    [
      29.6,
      45.29
    ]
  ],
  [
    [
      -53.37,
      -33.77
    ],
    [
      -53.81,
      -34.4
    ],
    [
      -54.94,
      -34.95
    ],
    [
      -55.67,
      -34.75
    ],
    [
      -56.22,
      -34.86
    ],
    [
      -57.14,
      -34.43
    ],
    [
      -57.82,
      -34.46
    ],
    [
      -58.43,
      -33.91
    ]
  ],
  [
    [
      -155.54,
      19.08
    ],
    [
      -155.69,
      18.92
    ],
    [
      -155.94,
      19.06
    ],
    [
      -155.91,
      19.34
    ],
    [
      -156.07,
      19.7
    ],
    [
      -156.02,
      19.81
    ],
    [
      -155.85,
      19.98
    ],
    [
      -155.92,
      20.17
    ],
    [
      -155.86,
      20.27
    ],
    [
      -155.79,
      20.25
    ],
    [
      -155.4,
      20.08
    ],
    [
      -155.22,
      19.99
    ],
    [
      -155.06,
      19.86
    ],
    [
      -154.81,
      19.51
    ],
    [
      -154.83,
      19.45
    ],
    [
      -155.22,
      19.24
    ],
    [
      -155.54,
      19.08
    ]
  ],
  [
    [
      -156.08,
      20.64
    ],
    [
      -156.41,
      20.57
    ],
    [
      -156.59,
      20.78
    ],
    [
      -156.7,
      20.86
    ],
    [
      -156.71,
      20.93
    ],
    [
      -156.61,
      21.01
    ],
    [
      -156.26,
      20.92
    ],
    [
      -156,
      20.76
    ],
    [
      -156.08,
      20.64
    ]
  ],
  [
    [
      -156.76,
      21.18
    ],
    [
      -156.79,
      21.07
    ],
    [
      -157.33,
      21.1
    ],
    [
      -157.25,
      21.22
    ],
    [
      -156.76,
      21.18
    ]
  ],
  [
    [
      -157.65,
      21.32
    ],
    [
      -157.71,
      21.26
    ],
    [
      -157.78,
      21.28
    ],
    [
      -158.13,
      21.31
    ],
    [
      -158.25,
      21.54
    ],
    [
      -158.29,
      21.58
    ],
    [
      -158.03,
      21.72
    ],
    [
      -157.94,
      21.65
    ],
    [
      -157.65,
      21.32
    ]
  ],
  [
    [
      -159.35,
      21.98
    ],
    [
      -159.46,
      21.88
    ],
    [
      -159.8,
      22.07
    ],
    [
      -159.75,
      22.14
    ],
    [
      -159.6,
      22.24
    ],
    [
      -159.37,
      22.21
    ],
    [
      -159.35,
      21.98
    ]
  ],
  [
    [
      -67.14,
      45.14
    ],
    [
      -66.96,
      44.81
    ],
    [
      -68.03,
      44.33
    ],
    [
      -69.06,
      43.98
    ],
    [
      -70.12,
      43.68
    ],
    [
      -70.65,
      43.09
    ],
    [
      -70.81,
      42.87
    ],
    [
      -70.82,
      42.34
    ],
    [
      -70.49,
      41.81
    ],
    [
      -70.08,
      41.78
    ],
    [
      -70.18,
      42.15
    ],
    [
      -69.88,
      41.92
    ],
    [
      -69.97,
      41.64
    ],
    [
      -70.64,
      41.48
    ],
    [
      -71.12,
      41.49
    ],
    [
      -71.86,
      41.32
    ],
    [
      -72.29,
      41.27
    ],
    [
      -72.88,
      41.22
    ],
    [
      -73.71,
      40.93
    ],
    [
      -72.24,
      41.12
    ],
    [
      -71.94,
      40.93
    ],
    [
      -73.34,
      40.63
    ],
    [
      -73.98,
      40.63
    ],
    [
      -73.95,
      40.75
    ],
    [
      -74.26,
      40.47
    ],
    [
      -73.96,
      40.43
    ],
    [
      -74.18,
      39.71
    ],
    [
      -74.91,
      38.94
    ],
    [
      -74.98,
      39.2
    ],
    [
      -75.2,
      39.25
    ],
    [
      -75.53,
      39.5
    ],
    [
      -75.32,
      38.96
    ],
    [
      -75.07,
      38.78
    ],
    [
      -75.06,
      38.4
    ],
    [
      -75.38,
      38.02
    ],
    [
      -75.94,
      37.22
    ],
    [
      -76.03,
      37.26
    ],
    [
      -75.72,
      37.94
    ],
    [
      -76.23,
      38.32
    ],
    [
      -76.35,
      39.15
    ],
    [
      -76.54,
      38.72
    ],
    [
      -76.33,
      38.08
    ],
    [
      -76.99,
      38.24
    ],
    [
      -76.3,
      37.92
    ],
    [
      -76.26,
      36.97
    ],
    [
      -75.97,
      36.9
    ],
    [
      -75.87,
      36.55
    ],
    [
      -75.73,
      35.55
    ],
    [
      -76.36,
      34.81
    ],
    [
      -77.4,
      34.51
    ],
    [
      -78.05,
      33.93
    ],
    [
      -78.55,
      33.86
    ],
    [
      -79.06,
      33.49
    ],
    [
      -79.2,
      33.16
    ],
    [
      -80.3,
      32.51
    ],
    [
      -80.86,
      32.03
    ],
    [
      -81.34,
      31.44
    ],
    [
      -81.49,
      30.73
    ],
    [
      -81.31,
      30.04
    ],
    [
      -80.98,
      29.18
    ],
    [
      -80.54,
      28.47
    ],
    [
      -80.53,
      28.04
    ],
    [
      -80.06,
      26.88
    ],
    [
      -80.09,
      26.21
    ],
    [
      -80.13,
      25.82
    ],
    [
      -80.38,
      25.21
    ],
    [
      -80.68,
      25.08
    ],
    [
      -81.17,
      25.2
    ],
    [
      -81.33,
      25.64
    ],
    [
      -81.71,
      25.87
    ],
    [
      -82.24,
      26.73
    ],
    [
      -82.71,
      27.5
    ],
    [
      -82.86,
      27.89
    ],
    [
      -82.65,
      28.55
    ],
    [
      -82.93,
      29.1
    ],
    [
      -83.71,
      29.94
    ],
    [
      -84.1,
      30.09
    ],
    [
      -85.11,
      29.64
    ],
    [
      -85.29,
      29.69
    ],
    [
      -85.77,
      30.15
    ],
    [
      -86.4,
      30.4
    ],
    [
      -87.53,
      30.27
    ],
    [
      -88.42,
      30.38
    ],
    [
      -89.18,
      30.32
    ],
    [
      -89.59,
      30.16
    ],
    [
      -89.41,
      29.89
    ],
    [
      -89.43,
      29.49
    ],
    [
      -89.22,
      29.29
    ],
    [
      -89.41,
      29.16
    ],
    [
      -89.78,
      29.31
    ],
    [
      -90.15,
      29.12
    ],
    [
      -90.88,
      29.15
    ],
    [
      -91.63,
      29.68
    ],
    [
      -92.5,
      29.55
    ],
    [
      -93.23,
      29.78
    ],
    [
      -93.85,
      29.71
    ],
    [
      -94.69,
      29.48
    ],
    [
      -95.6,
      28.74
    ],
    [
      -96.59,
      28.31
    ],
    [
      -97.14,
      27.83
    ],
    [
      -97.37,
      27.38
    ],
    [
      -97.38,
      26.69
    ],
    [
      -97.33,
      26.21
    ],
    [
      -97.14,
      25.87
    ],
    [
      -97.53,
      25.84
    ]
  ],
  [
    [
      -117.13,
      32.54
    ],
    [
      -117.3,
      33.05
    ],
    [
      -117.94,
      33.62
    ],
    [
      -118.41,
      33.74
    ],
    [
      -118.52,
      34.03
    ],
    [
      -119.08,
      34.08
    ],
    [
      -119.44,
      34.35
    ],
    [
      -120.37,
      34.45
    ],
    [
      -120.62,
      34.61
    ],
    [
      -120.74,
      35.16
    ],
    [
      -121.71,
      36.16
    ],
    [
      -122.55,
      37.55
    ],
    [
      -122.51,
      37.78
    ],
    [
      -122.95,
      38.11
    ],
    [
      -123.73,
      38.95
    ],
    [
      -123.87,
      39.77
    ],
    [
      -124.4,
      40.31
    ],
    [
      -124.18,
      41.14
    ],
    [
      -124.21,
      42
    ],
    [
      -124.53,
      42.77
    ],
    [
      -124.14,
      43.71
    ],
    [
      -124.02,
      44.62
    ],
    [
      -123.9,
      45.52
    ],
    [
      -124.08,
      46.86
    ],
    [
      -124.4,
      47.72
    ],
    [
      -124.69,
      48.18
    ],
    [
      -124.57,
      48.38
    ],
    [
      -123.12,
      48.04
    ],
    [
      -122.59,
      47.1
    ],
    [
      -122.34,
      47.36
    ],
    [
      -122.5,
      48.18
    ],
    [
      -122.84,
      49
    ]
  ],
  [
    [
      -153.01,
      57.12
    ],
    [
      -154.01,
      56.73
    ],
    [
      -154.52,
      56.99
    ],
    [
      -154.67,
      57.46
    ],
    [
      -153.76,
      57.82
    ],
    [
      -153.23,
      57.97
    ],
    [
      -152.56,
      57.9
    ],
    [
      -152.14,
      57.59
    ],
    [
      -153.01,
      57.12
    ]
  ],
  [
    [
      -165.58,
      59.91
    ],
    [
      -166.19,
      59.75
    ],
    [
      -166.85,
      59.94
    ],
    [
      -167.46,
      60.21
    ],
    [
      -166.47,
      60.38
    ],
    [
      -165.67,
      60.29
    ],
    [
      -165.58,
      59.91
    ]
  ],
  [
    [
      -171.73,
      63.78
    ],
    [
      -171.11,
      63.59
    ],
    [
      -170.49,
      63.69
    ],
    [
      -169.68,
      63.43
    ],
    [
      -168.69,
      63.3
    ],
    [
      -168.77,
      63.19
    ],
    [
      -169.53,
      62.98
    ],
    [
      -170.29,
      63.19
    ],
    [
      -170.67,
      63.38
    ],
    [
      -171.55,
      63.32
    ],
    [
      -171.79,
      63.41
    ],
    [
      -171.73,
      63.78
    ]
  ],
  [
    [
      -134.27,
      58.86
    ],
    [
      -133.36,
      58.41
    ],
    [
      -132.73,
      57.69
    ]
  ],
  [
    [
      -130.01,
      55.92
    ],
    [
      -129.98,
      55.28
    ],
    [
      -130.54,
      54.8
    ],
    [
      -131.09,
      55.18
    ],
    [
      -131.97,
      55.5
    ],
    [
      -132.25,
      56.37
    ],
    [
      -133.54,
      57.18
    ],
    [
      -134.08,
      58.12
    ],
    [
      -135.04,
      58.19
    ],
    [
      -136.63,
      58.21
    ],
    [
      -137.8,
      58.5
    ],
    [
      -139.87,
      59.54
    ],
    [
      -140.83,
      59.73
    ],
    [
      -142.57,
      60.08
    ],
    [
      -143.96,
      60
    ],
    [
      -145.93,
      60.46
    ],
    [
      -147.11,
      60.88
    ],
    [
      -148.22,
      60.67
    ],
    [
      -148.02,
      59.98
    ],
    [
      -148.57,
      59.91
    ],
    [
      -149.73,
      59.71
    ],
    [
      -150.61,
      59.37
    ],
    [
      -151.72,
      59.16
    ],
    [
      -151.86,
      59.74
    ],
    [
      -151.41,
      60.73
    ],
    [
      -150.35,
      61.03
    ],
    [
      -150.62,
      61.28
    ],
    [
      -151.9,
      60.73
    ],
    [
      -152.58,
      60.06
    ],
    [
      -154.02,
      59.35
    ],
    [
      -153.29,
      58.86
    ],
    [
      -154.23,
      58.15
    ],
    [
      -155.31,
      57.73
    ],
    [
      -156.31,
      57.42
    ],
    [
      -156.56,
      56.98
    ],
    [
      -158.12,
      56.46
    ],
    [
      -158.43,
      55.99
    ],
    [
      -159.6,
      55.57
    ],
    [
      -160.29,
      55.64
    ],
    [
      -161.22,
      55.36
    ],
    [
      -162.24,
      55.02
    ],
    [
      -163.07,
      54.69
    ],
    [
      -164.79,
      54.4
    ],
    [
      -164.94,
      54.57
    ],
    [
      -163.85,
      55.04
    ],
    [
      -162.87,
      55.35
    ],
    [
      -161.8,
      55.89
    ],
    [
      -160.56,
      56.01
    ],
    [
      -160.07,
      56.42
    ],
    [
      -158.68,
      57.02
    ],
    [
      -158.46,
      57.22
    ],
    [
      -157.72,
      57.57
    ],
    [
      -157.55,
      58.33
    ],
    [
      -157.04,
      58.92
    ],
    [
      -158.19,
      58.62
    ],
    [
      -158.52,
      58.79
    ],
    [
      -159.06,
      58.42
    ],
    [
      -159.71,
      58.93
    ],
    [
      -159.98,
      58.57
    ],
    [
      -160.36,
      59.07
    ],
    [
      -161.36,
      58.67
    ],
    [
      -161.97,
      58.67
    ],
    [
      -162.05,
      59.27
    ],
    [
      -161.87,
      59.63
    ],
    [
      -162.52,
      59.99
    ],
    [
      -163.82,
      59.8
    ],
    [
      -164.66,
      60.27
    ],
    [
      -165.35,
      60.51
    ],
    [
      -165.35,
      61.07
    ],
    [
      -166.12,
      61.5
    ],
    [
      -165.73,
      62.07
    ],
    [
      -164.92,
      62.63
    ],
    [
      -164.56,
      63.15
    ],
    [
      -163.75,
      63.22
    ],
    [
      -163.07,
      63.06
    ],
    [
      -162.26,
      63.54
    ],
    [
      -161.53,
      63.46
    ],
    [
      -160.77,
      63.77
    ],
    [
      -160.96,
      64.22
    ],
    [
      -161.52,
      64.4
    ],
    [
      -160.78,
      64.79
    ],
    [
      -161.39,
      64.78
    ],
    [
      -162.45,
      64.56
    ],
    [
      -162.76,
      64.34
    ],
    [
      -163.55,
      64.56
    ],
    [
      -164.96,
      64.45
    ],
    [
      -166.43,
      64.69
    ],
    [
      -166.85,
      65.09
    ],
    [
      -168.11,
      65.67
    ],
    [
      -166.71,
      66.09
    ],
    [
      -164.47,
      66.58
    ],
    [
      -163.65,
      66.58
    ],
    [
      -163.79,
      66.08
    ],
    [
      -161.68,
      66.12
    ],
    [
      -162.49,
      66.74
    ],
    [
      -163.72,
      67.12
    ],
    [
      -164.43,
      67.62
    ],
    [
      -165.39,
      68.04
    ],
    [
      -166.76,
      68.36
    ],
    [
      -166.2,
      68.88
    ],
    [
      -164.43,
      68.92
    ],
    [
      -163.17,
      69.37
    ],
    [
      -162.93,
      69.86
    ],
    [
      -161.91,
      70.33
    ],
    [
      -160.93,
      70.45
    ],
    [
      -159.04,
      70.89
    ],
    [
      -158.12,
      70.82
    ],
    [
      -156.58,
      71.36
    ],
    [
      -155.07,
      71.15
    ],
    [
      -154.34,
      70.7
    ],
    [
      -153.9,
      70.89
    ],
    [
      -152.21,
      70.83
    ],
    [
      -152.27,
      70.6
    ],
    [
      -150.74,
      70.43
    ],
    [
      -149.72,
      70.53
    ],
    [
      -147.61,
      70.21
    ],
    [
      -145.69,
      70.12
    ],
    [
      -144.92,
      69.99
    ],
    [
      -143.59,
      70.15
    ],
    [
      -142.07,
      69.85
    ],
    [
      -140.99,
      69.71
    ],
    [
      -140.99,
      69.71
    ],
    [
      -140.99,
      66
    ],
    [
      -141,
      60.31
    ],
    [
      -140.01,
      60.28
    ],
    [
      -139.04,
      60
    ],
    [
      -138.34,
      59.56
    ]
  ],
  [
    [
      -71.33,
      11.78
    ],
    [
      -71.36,
      11.54
    ],
    [
      -71.95,
      11.42
    ],
    [
      -71.62,
      10.97
    ],
    [
      -71.63,
      10.45
    ],
    [
      -72.07,
      9.87
    ],
    [
      -71.7,
      9.07
    ],
    [
      -71.26,
      9.14
    ],
    [
      -71.04,
      9.86
    ],
    [
      -71.35,
      10.21
    ],
    [
      -71.4,
      10.97
    ],
    [
      -70.16,
      11.38
    ],
    [
      -70.29,
      11.85
    ],
    [
      -69.94,
      12.16
    ],
    [
      -69.58,
      11.46
    ],
    [
      -68.88,
      11.44
    ],
    [
      -68.23,
      10.89
    ],
    [
      -68.19,
      10.55
    ],
    [
      -67.3,
      10.55
    ],
    [
      -66.23,
      10.65
    ],
    [
      -65.66,
      10.2
    ],
    [
      -64.89,
      10.08
    ],
    [
      -64.33,
      10.39
    ],
    [
      -64.32,
      10.64
    ],
    [
      -63.08,
      10.7
    ],
    [
      -61.88,
      10.72
    ],
    [
      -62.73,
      10.42
    ],
    [
      -62.39,
      9.95
    ],
    [
      -61.59,
      9.87
    ],
    [
      -60.83,
      9.38
    ],
    [
      -60.67,
      8.58
    ],
    [
      -60.15,
      8.6
    ],
    [
      -59.76,
      8.37
    ]
  ],
  [
    [
      108.05,
      21.55
    ],
    [
      106.72,
      20.7
    ],
    [
      105.88,
      19.75
    ],
    [
      105.66,
      19.06
    ],
    [
      106.43,
      18
    ],
    [
      107.36,
      16.7
    ],
    [
      108.27,
      16.08
    ],
    [
      108.88,
      15.28
    ],
    [
      109.34,
      13.43
    ],
    [
      109.2,
      11.67
    ],
    [
      108.37,
      11.01
    ],
    [
      107.22,
      10.36
    ],
    [
      106.41,
      9.53
    ],
    [
      105.16,
      8.6
    ],
    [
      104.8,
      9.24
    ],
    [
      105.08,
      9.92
    ],
    [
      104.33,
      10.49
    ]
  ],
  [
    [
      167.84,
      -16.47
    ],
    [
      167.52,
      -16.6
    ],
    [
      167.18,
      -16.16
    ],
    [
      167.22,
      -15.89
    ],
    [
      167.84,
      -16.47
    ]
  ],
  [
    [
      167.11,
      -14.93
    ],
    [
      167.27,
      -15.74
    ],
    [
      167,
      -15.61
    ],
    [
      166.79,
      -15.67
    ],
    [
      166.65,
      -15.39
    ],
    [
      166.63,
      -14.63
    ],
    [
      167.11,
      -14.93
    ]
  ],
  [
    [
      53.11,
      16.65
    ],
    [
      52.39,
      16.38
    ],
    [
      52.19,
      15.94
    ],
    [
      52.17,
      15.6
    ],
    [
      51.17,
      15.18
    ],
    [
      49.57,
      14.71
    ],
    [
      48.68,
      14
    ],
    [
      48.24,
      13.95
    ],
    [
      47.94,
      14.01
    ],
    [
      47.35,
      13.59
    ],
    [
      46.72,
      13.4
    ],
    [
      45.88,
      13.35
    ],
    [
      45.63,
      13.29
    ],
    [
      45.41,
      13.03
    ],
    [
      45.14,
      12.95
    ],
    [
      44.99,
      12.7
    ],
    [
      44.49,
      12.72
    ],
    [
      44.18,
      12.59
    ],
    [
      43.48,
      12.64
    ],
    [
      43.22,
      13.22
    ],
    [
      43.25,
      13.77
    ],
    [
      43.09,
      14.06
    ],
    [
      42.89,
      14.8
    ],
    [
      42.6,
      15.21
    ],
    [
      42.81,
      15.26
    ],
    [
      42.7,
      15.72
    ],
    [
      42.82,
      15.91
    ],
    [
      42.78,
      16.35
    ]
  ],
  [
    [
      29.43,
      -22.09
    ],
    [
      29.84,
      -22.1
    ],
    [
      30.32,
      -22.27
    ],
    [
      30.66,
      -22.15
    ],
    [
      31.19,
      -22.25
    ]
  ],
  [
    [
      32.83,
      -26.74
    ],
    [
      32.58,
      -27.47
    ],
    [
      32.46,
      -28.3
    ],
    [
      32.2,
      -28.75
    ],
    [
      31.52,
      -29.26
    ],
    [
      31.33,
      -29.4
    ],
    [
      30.9,
      -29.91
    ],
    [
      30.62,
      -30.42
    ],
    [
      30.06,
      -31.14
    ],
    [
      28.93,
      -32.17
    ],
    [
      28.22,
      -32.77
    ],
    [
      27.46,
      -33.23
    ],
    [
      26.42,
      -33.61
    ],
    [
      25.91,
      -33.67
    ],
    [
      25.78,
      -33.94
    ],
    [
      25.17,
      -33.8
    ],
    [
      24.68,
      -33.99
    ],
    [
      23.59,
      -33.79
    ],
    [
      22.99,
      -33.92
    ],
    [
      22.57,
      -33.86
    ],
    [
      21.54,
      -34.26
    ],
    [
      20.69,
      -34.42
    ],
    [
      20.07,
      -34.8
    ],
    [
      19.62,
      -34.82
    ],
    [
      19.19,
      -34.46
    ],
    [
      18.86,
      -34.44
    ],
    [
      18.42,
      -34
    ],
    [
      18.38,
      -34.14
    ],
    [
      18.24,
      -33.87
    ],
    [
      18.25,
      -33.28
    ],
    [
      17.93,
      -32.61
    ],
    [
      18.25,
      -32.43
    ],
    [
      18.22,
      -31.66
    ],
    [
      17.57,
      -30.73
    ],
    [
      17.06,
      -29.88
    ],
    [
      17.06,
      -29.88
    ],
    [
      16.34,
      -28.58
    ]
  ],
  [
    [
      30.27,
      -15.51
    ],
    [
      29.52,
      -15.64
    ],
    [
      28.95,
      -16.04
    ],
    [
      28.83,
      -16.39
    ],
    [
      28.47,
      -16.47
    ],
    [
      27.6,
      -17.29
    ],
    [
      27.04,
      -17.94
    ],
    [
      26.71,
      -17.96
    ],
    [
      26.38,
      -17.85
    ],
    [
      25.26,
      -17.74
    ]
  ],
  [
    [
      30.74,
      -8.34
    ],
    [
      31.16,
      -8.59
    ]
  ],
  [
    [
      -24.32,
      14.85
    ],
    [
      -24.39,
      14.81
    ],
    [
      -24.46,
      14.83
    ],
    [
      -24.54,
      14.92
    ],
    [
      -24.5,
      14.97
    ],
    [
      -24.39,
      15.02
    ],
    [
      -24.36,
      15
    ],
    [
      -24.32,
      14.92
    ],
    [
      -24.32,
      14.85
    ]
  ],
  [
    [
      -23.2,
      15.13
    ],
    [
      -23.24,
      15.13
    ],
    [
      -23.28,
      15.18
    ],
    [
      -23.28,
      15.25
    ],
    [
      -23.24,
      15.32
    ],
    [
      -23.17,
      15.32
    ],
    [
      -23.13,
      15.26
    ],
    [
      -23.13,
      15.16
    ],
    [
      -23.2,
      15.13
    ]
  ],
  [
    [
      -23.46,
      15
    ],
    [
      -23.53,
      14.9
    ],
    [
      -23.67,
      14.92
    ],
    [
      -23.82,
      15.07
    ],
    [
      -23.82,
      15.16
    ],
    [
      -23.78,
      15.23
    ],
    [
      -23.78,
      15.32
    ],
    [
      -23.71,
      15.32
    ],
    [
      -23.71,
      15.26
    ],
    [
      -23.56,
      15.13
    ],
    [
      -23.46,
      15
    ]
  ],
  [
    [
      -22.95,
      16.24
    ],
    [
      -22.84,
      16.2
    ],
    [
      -22.77,
      16.22
    ],
    [
      -22.7,
      16.17
    ],
    [
      -22.7,
      16.1
    ],
    [
      -22.74,
      16.03
    ],
    [
      -22.84,
      15.98
    ],
    [
      -22.92,
      15.98
    ],
    [
      -22.99,
      16.03
    ],
    [
      -22.92,
      16.13
    ],
    [
      -22.95,
      16.24
    ]
  ],
  [
    [
      -24.1,
      16.62
    ],
    [
      -24.07,
      16.57
    ],
    [
      -24.1,
      16.55
    ],
    [
      -24.25,
      16.58
    ],
    [
      -24.28,
      16.57
    ],
    [
      -24.36,
      16.48
    ],
    [
      -24.43,
      16.6
    ],
    [
      -24.43,
      16.65
    ],
    [
      -24.39,
      16.67
    ],
    [
      -24.28,
      16.64
    ],
    [
      -24.1,
      16.62
    ]
  ],
  [
    [
      -22.92,
      16.65
    ],
    [
      -22.95,
      16.6
    ],
    [
      -22.99,
      16.67
    ],
    [
      -23.02,
      16.79
    ],
    [
      -22.95,
      16.83
    ],
    [
      -22.92,
      16.83
    ],
    [
      -22.92,
      16.65
    ]
  ],
  [
    [
      -24.9,
      16.81
    ],
    [
      -25.04,
      16.79
    ],
    [
      -25.11,
      16.83
    ],
    [
      -25.08,
      16.86
    ],
    [
      -24.97,
      16.91
    ],
    [
      -24.9,
      16.84
    ],
    [
      -24.9,
      16.81
    ]
  ],
  [
    [
      -25.18,
      16.93
    ],
    [
      -25.29,
      16.91
    ],
    [
      -25.33,
      16.93
    ],
    [
      -25.33,
      17
    ],
    [
      -25.36,
      17.05
    ],
    [
      -25.36,
      17.09
    ],
    [
      -25.15,
      17.19
    ],
    [
      -25.04,
      17.17
    ],
    [
      -25,
      17.09
    ],
    [
      -25.04,
      17.04
    ],
    [
      -25.18,
      16.93
    ]
  ],
  [
    [
      43.76,
      -12.32
    ],
    [
      43.65,
      -12.36
    ],
    [
      43.62,
      -12.29
    ],
    [
      43.62,
      -12.25
    ],
    [
      43.69,
      -12.27
    ],
    [
      43.76,
      -12.32
    ]
  ],
  [
    [
      44.45,
      -12.1
    ],
    [
      44.52,
      -12.24
    ],
    [
      44.52,
      -12.34
    ],
    [
      44.48,
      -12.36
    ],
    [
      44.45,
      -12.34
    ],
    [
      44.37,
      -12.25
    ],
    [
      44.19,
      -12.18
    ],
    [
      44.27,
      -12.17
    ],
    [
      44.3,
      -12.18
    ],
    [
      44.37,
      -12.17
    ],
    [
      44.37,
      -12.13
    ],
    [
      44.41,
      -12.1
    ],
    [
      44.45,
      -12.1
    ]
  ],
  [
    [
      43.44,
      -11.91
    ],
    [
      43.44,
      -11.92
    ],
    [
      43.29,
      -11.85
    ],
    [
      43.22,
      -11.77
    ],
    [
      43.22,
      -11.44
    ],
    [
      43.26,
      -11.4
    ],
    [
      43.33,
      -11.39
    ],
    [
      43.37,
      -11.42
    ],
    [
      43.37,
      -11.63
    ],
    [
      43.44,
      -11.77
    ],
    [
      43.47,
      -11.87
    ],
    [
      43.44,
      -11.91
    ]
  ],
  [
    [
      57.62,
      -20.5
    ],
    [
      57.52,
      -20.52
    ],
    [
      57.37,
      -20.52
    ],
    [
      57.3,
      -20.47
    ],
    [
      57.34,
      -20.41
    ],
    [
      57.34,
      -20.34
    ],
    [
      57.37,
      -20.24
    ],
    [
      57.41,
      -20.19
    ],
    [
      57.48,
      -20.15
    ],
    [
      57.48,
      -20.07
    ],
    [
      57.55,
      -20.01
    ],
    [
      57.62,
      -20
    ],
    [
      57.73,
      -20.1
    ],
    [
      57.77,
      -20.22
    ],
    [
      57.77,
      -20.34
    ],
    [
      57.7,
      -20.38
    ],
    [
      57.7,
      -20.45
    ],
    [
      57.62,
      -20.5
    ]
  ],
  [
    [
      55.54,
      -4.7
    ],
    [
      55.54,
      -4.79
    ],
    [
      55.46,
      -4.77
    ],
    [
      55.46,
      -4.7
    ],
    [
      55.39,
      -4.67
    ],
    [
      55.36,
      -4.61
    ],
    [
      55.43,
      -4.56
    ],
    [
      55.54,
      -4.7
    ]
  ],
  [
    [
      50.6,
      25.87
    ],
    [
      50.57,
      25.8
    ],
    [
      50.53,
      25.82
    ],
    [
      50.46,
      25.96
    ],
    [
      50.46,
      26.05
    ],
    [
      50.42,
      26.18
    ],
    [
      50.46,
      26.22
    ],
    [
      50.57,
      26.24
    ],
    [
      50.53,
      26.18
    ],
    [
      50.6,
      26.12
    ],
    [
      50.6,
      25.87
    ]
  ],
  [
    [
      73.39,
      3.22
    ],
    [
      73.36,
      3.23
    ],
    [
      73.36,
      3.27
    ],
    [
      73.39,
      3.28
    ],
    [
      73.43,
      3.27
    ],
    [
      73.43,
      3.23
    ],
    [
      73.39,
      3.22
    ]
  ],
  [
    [
      73.5,
      4.15
    ],
    [
      73.47,
      4.15
    ],
    [
      73.47,
      4.21
    ],
    [
      73.5,
      4.22
    ],
    [
      73.5,
      4.15
    ]
  ],
  [
    [
      169.63,
      5.82
    ],
    [
      169.59,
      5.85
    ],
    [
      169.63,
      5.94
    ],
    [
      169.67,
      5.92
    ],
    [
      169.63,
      5.82
    ]
  ],
  [
    [
      171.07,
      7.12
    ],
    [
      171.22,
      7.07
    ],
    [
      171.36,
      7.1
    ],
    [
      171.36,
      7.09
    ],
    [
      171.25,
      7.05
    ],
    [
      171.22,
      7.05
    ],
    [
      171.07,
      7.1
    ],
    [
      171.07,
      7.12
    ]
  ],
  [
    [
      162.97,
      5.32
    ],
    [
      162.97,
      5.26
    ],
    [
      162.9,
      5.3
    ],
    [
      162.93,
      5.33
    ],
    [
      162.97,
      5.32
    ]
  ],
  [
    [
      158.29,
      6.81
    ],
    [
      158.25,
      6.77
    ],
    [
      158.18,
      6.79
    ],
    [
      158.15,
      6.88
    ],
    [
      158.11,
      6.9
    ],
    [
      158.11,
      6.93
    ],
    [
      158.18,
      6.97
    ],
    [
      158.29,
      6.95
    ],
    [
      158.33,
      6.88
    ],
    [
      158.29,
      6.84
    ],
    [
      158.29,
      6.81
    ]
  ],
  [
    [
      151.63,
      7.33
    ],
    [
      151.59,
      7.35
    ],
    [
      151.59,
      7.38
    ],
    [
      151.63,
      7.38
    ],
    [
      151.63,
      7.33
    ]
  ],
  [
    [
      151.88,
      7.42
    ],
    [
      151.85,
      7.42
    ],
    [
      151.85,
      7.45
    ],
    [
      151.88,
      7.45
    ],
    [
      151.88,
      7.42
    ]
  ],
  [
    [
      138.13,
      9.5
    ],
    [
      138.13,
      9.57
    ],
    [
      138.16,
      9.59
    ],
    [
      138.2,
      9.54
    ],
    [
      138.16,
      9.5
    ],
    [
      138.13,
      9.5
    ]
  ],
  [
    [
      166.89,
      -0.52
    ],
    [
      166.93,
      -0.5
    ],
    [
      166.97,
      -0.52
    ],
    [
      166.97,
      -0.55
    ],
    [
      166.93,
      -0.55
    ],
    [
      166.89,
      -0.55
    ],
    [
      166.89,
      -0.53
    ],
    [
      166.89,
      -0.52
    ]
  ],
  [
    [
      134.56,
      7.36
    ],
    [
      134.53,
      7.35
    ],
    [
      134.49,
      7.43
    ],
    [
      134.49,
      7.52
    ],
    [
      134.53,
      7.59
    ],
    [
      134.6,
      7.61
    ],
    [
      134.6,
      7.49
    ],
    [
      134.56,
      7.43
    ],
    [
      134.56,
      7.36
    ]
  ],
  [
    [
      -171.47,
      -14.06
    ],
    [
      -171.76,
      -14.06
    ],
    [
      -171.9,
      -14.01
    ],
    [
      -171.94,
      -14.01
    ],
    [
      -172.04,
      -13.92
    ],
    [
      -172.08,
      -13.87
    ],
    [
      -172.01,
      -13.83
    ],
    [
      -171.86,
      -13.82
    ],
    [
      -171.61,
      -13.89
    ],
    [
      -171.58,
      -13.96
    ],
    [
      -171.54,
      -13.96
    ],
    [
      -171.47,
      -13.99
    ],
    [
      -171.47,
      -14.06
    ]
  ],
  [
    [
      -172.37,
      -13.47
    ],
    [
      -172.22,
      -13.57
    ],
    [
      -172.19,
      -13.69
    ],
    [
      -172.26,
      -13.82
    ],
    [
      -172.33,
      -13.78
    ],
    [
      -172.51,
      -13.82
    ],
    [
      -172.55,
      -13.8
    ],
    [
      -172.76,
      -13.59
    ],
    [
      -172.8,
      -13.52
    ],
    [
      -172.69,
      -13.54
    ],
    [
      -172.51,
      -13.49
    ],
    [
      -172.37,
      -13.47
    ]
  ],
  [
    [
      103.56,
      1.19
    ],
    [
      103.67,
      1.42
    ],
    [
      103.72,
      1.46
    ],
    [
      103.86,
      1.47
    ],
    [
      104,
      1.42
    ],
    [
      104.08,
      1.43
    ],
    [
      104.08,
      1.36
    ],
    [
      104.13,
      1.27
    ]
  ],
  [
    [
      -174.92,
      -21.32
    ],
    [
      -174.92,
      -21.46
    ],
    [
      -175,
      -21.39
    ],
    [
      -175,
      -21.35
    ],
    [
      -174.92,
      -21.32
    ]
  ],
  [
    [
      -175.18,
      -21.18
    ],
    [
      -175.14,
      -21.14
    ],
    [
      -175.1,
      -21.18
    ],
    [
      -175.18,
      -21.26
    ],
    [
      -175.21,
      -21.23
    ],
    [
      -175.36,
      -21.16
    ],
    [
      -175.32,
      -21.13
    ],
    [
      -175.25,
      -21.13
    ],
    [
      -175.18,
      -21.18
    ]
  ],
  [
    [
      -173.99,
      -18.64
    ],
    [
      -174.02,
      -18.71
    ],
    [
      -174.1,
      -18.64
    ],
    [
      -174.02,
      -18.57
    ],
    [
      -173.95,
      -18.59
    ],
    [
      -173.95,
      -18.63
    ],
    [
      -173.99,
      -18.64
    ]
  ],
  [
    [
      178.31,
      -8.03
    ],
    [
      178.38,
      -7.93
    ],
    [
      178.45,
      -7.97
    ],
    [
      178.38,
      -8.09
    ],
    [
      178.31,
      -8.03
    ]
  ],
  [
    [
      178.67,
      -7.46
    ],
    [
      178.7,
      -7.48
    ],
    [
      178.67,
      -7.5
    ],
    [
      178.67,
      -7.46
    ]
  ],
  [
    [
      179.14,
      -8.42
    ],
    [
      179.17,
      -8.43
    ],
    [
      179.21,
      -8.52
    ],
    [
      179.1,
      -8.59
    ],
    [
      179.1,
      -8.63
    ],
    [
      179.06,
      -8.64
    ],
    [
      179.06,
      -8.59
    ],
    [
      179.03,
      -8.52
    ],
    [
      179.1,
      -8.43
    ],
    [
      179.14,
      -8.42
    ]
  ],
  [
    [
      179.86,
      -9.35
    ],
    [
      179.86,
      -9.37
    ],
    [
      179.89,
      -9.39
    ],
    [
      179.86,
      -9.44
    ],
    [
      179.86,
      -9.42
    ],
    [
      179.82,
      -9.37
    ],
    [
      179.82,
      -9.35
    ],
    [
      179.86,
      -9.35
    ]
  ],
  [
    [
      176.98,
      -12.46
    ],
    [
      177.16,
      -12.48
    ],
    [
      177.16,
      -12.53
    ],
    [
      177.01,
      -12.51
    ],
    [
      176.98,
      -12.46
    ]
  ],
  [
    [
      177.16,
      -7.25
    ],
    [
      177.12,
      -7.18
    ],
    [
      177.16,
      -7.2
    ],
    [
      177.16,
      -7.25
    ]
  ],
  [
    [
      176.08,
      -5.64
    ],
    [
      176.11,
      -5.66
    ],
    [
      176.15,
      -5.71
    ],
    [
      176.11,
      -5.67
    ],
    [
      176.04,
      -5.64
    ],
    [
      176.08,
      -5.64
    ]
  ],
  [
    [
      -61.73,
      17.04
    ],
    [
      -61.76,
      16.98
    ],
    [
      -61.87,
      17
    ],
    [
      -61.91,
      17.05
    ],
    [
      -61.91,
      17.09
    ],
    [
      -61.84,
      17.16
    ],
    [
      -61.69,
      17.09
    ],
    [
      -61.69,
      17.05
    ],
    [
      -61.73,
      17.04
    ]
  ],
  [
    [
      -61.76,
      17.57
    ],
    [
      -61.76,
      17.54
    ],
    [
      -61.87,
      17.59
    ],
    [
      -61.87,
      17.71
    ],
    [
      -61.76,
      17.66
    ],
    [
      -61.76,
      17.57
    ]
  ],
  [
    [
      -59.5,
      13.08
    ],
    [
      -59.53,
      13.06
    ],
    [
      -59.64,
      13.09
    ],
    [
      -59.68,
      13.15
    ],
    [
      -59.68,
      13.3
    ],
    [
      -59.6,
      13.3
    ],
    [
      -59.46,
      13.15
    ],
    [
      -59.5,
      13.08
    ]
  ],
  [
    [
      -61.3,
      15.25
    ],
    [
      -61.4,
      15.21
    ],
    [
      -61.44,
      15.39
    ],
    [
      -61.51,
      15.52
    ],
    [
      -61.48,
      15.59
    ],
    [
      -61.48,
      15.63
    ],
    [
      -61.33,
      15.58
    ],
    [
      -61.3,
      15.52
    ],
    [
      -61.26,
      15.37
    ],
    [
      -61.3,
      15.25
    ]
  ],
  [
    [
      -61.73,
      12
    ],
    [
      -61.76,
      12.04
    ],
    [
      -61.76,
      12.1
    ],
    [
      -61.69,
      12.23
    ],
    [
      -61.62,
      12.21
    ],
    [
      -61.66,
      12.05
    ],
    [
      -61.73,
      12
    ]
  ],
  [
    [
      -62.56,
      17.1
    ],
    [
      -62.59,
      17.09
    ],
    [
      -62.63,
      17.12
    ],
    [
      -62.63,
      17.19
    ],
    [
      -62.59,
      17.19
    ],
    [
      -62.56,
      17.16
    ],
    [
      -62.56,
      17.1
    ]
  ],
  [
    [
      -62.66,
      17.23
    ],
    [
      -62.74,
      17.28
    ],
    [
      -62.81,
      17.3
    ],
    [
      -62.84,
      17.33
    ],
    [
      -62.84,
      17.38
    ],
    [
      -62.81,
      17.4
    ],
    [
      -62.74,
      17.35
    ],
    [
      -62.7,
      17.28
    ],
    [
      -62.66,
      17.26
    ],
    [
      -62.66,
      17.23
    ]
  ],
  [
    [
      -60.9,
      13.81
    ],
    [
      -60.97,
      13.7
    ],
    [
      -61.08,
      13.77
    ],
    [
      -61.08,
      13.91
    ],
    [
      -61.01,
      14
    ],
    [
      -60.97,
      14.07
    ],
    [
      -60.94,
      14.08
    ],
    [
      -60.9,
      14
    ],
    [
      -60.9,
      13.81
    ]
  ],
  [
    [
      -61.19,
      13.15
    ],
    [
      -61.22,
      13.13
    ],
    [
      -61.3,
      13.2
    ],
    [
      -61.3,
      13.29
    ],
    [
      -61.22,
      13.32
    ],
    [
      -61.19,
      13.35
    ],
    [
      -61.15,
      13.35
    ],
    [
      -61.15,
      13.2
    ],
    [
      -61.19,
      13.15
    ]
  ],
  [
    [
      1.42,
      42.59
    ],
    [
      1.49,
      42.63
    ],
    [
      1.57,
      42.63
    ],
    [
      1.71,
      42.57
    ],
    [
      1.71,
      42.52
    ],
    [
      1.67,
      42.49
    ],
    [
      1.46,
      42.42
    ],
    [
      1.42,
      42.44
    ],
    [
      1.42,
      42.49
    ],
    [
      1.39,
      42.52
    ],
    [
      1.42,
      42.59
    ]
  ],
  [
    [
      9.61,
      47.06
    ],
    [
      9.56,
      47.05
    ]
  ],
  [
    [
      9.49,
      47.18
    ],
    [
      9.53,
      47.27
    ],
    [
      9.58,
      47.21
    ]
  ],
  [
    [
      14.56,
      35.84
    ],
    [
      14.53,
      35.8
    ],
    [
      14.42,
      35.82
    ],
    [
      14.35,
      35.86
    ],
    [
      14.35,
      35.98
    ],
    [
      14.53,
      35.87
    ],
    [
      14.56,
      35.84
    ]
  ],
  [
    [
      7.43,
      43.74
    ],
    [
      7.36,
      43.72
    ],
    [
      7.36,
      43.75
    ],
    [
      7.43,
      43.74
    ]
  ],
  [
    [
      12.37,
      43.93
    ],
    [
      12.44,
      43.98
    ],
    [
      12.51,
      43.95
    ],
    [
      12.48,
      43.89
    ],
    [
      12.4,
      43.89
    ],
    [
      12.37,
      43.93
    ]
  ],
  [
    [
      -157.42,
      2.02
    ],
    [
      -157.39,
      1.99
    ],
    [
      -157.32,
      1.97
    ],
    [
      -157.31,
      1.97
    ],
    [
      -157.31,
      1.96
    ],
    [
      -157.32,
      1.95
    ],
    [
      -157.32,
      1.95
    ],
    [
      -157.34,
      1.94
    ],
    [
      -157.34,
      1.93
    ],
    [
      -157.34,
      1.91
    ],
    [
      -157.35,
      1.86
    ],
    [
      -157.33,
      1.84
    ],
    [
      -157.29,
      1.82
    ],
    [
      -157.25,
      1.8
    ],
    [
      -157.24,
      1.78
    ],
    [
      -157.22,
      1.77
    ],
    [
      -157.21,
      1.77
    ],
    [
      -157.19,
      1.76
    ],
    [
      -157.18,
      1.75
    ],
    [
      -157.17,
      1.73
    ],
    [
      -157.18,
      1.72
    ],
    [
      -157.19,
      1.72
    ],
    [
      -157.2,
      1.72
    ],
    [
      -157.21,
      1.71
    ],
    [
      -157.22,
      1.71
    ],
    [
      -157.24,
      1.71
    ],
    [
      -157.25,
      1.71
    ],
    [
      -157.25,
      1.72
    ],
    [
      -157.26,
      1.73
    ],
    [
      -157.27,
      1.73
    ],
    [
      -157.28,
      1.75
    ],
    [
      -157.29,
      1.75
    ],
    [
      -157.31,
      1.75
    ],
    [
      -157.41,
      1.78
    ],
    [
      -157.45,
      1.8
    ],
    [
      -157.48,
      1.83
    ],
    [
      -157.51,
      1.85
    ],
    [
      -157.53,
      1.86
    ],
    [
      -157.54,
      1.86
    ],
    [
      -157.55,
      1.86
    ],
    [
      -157.57,
      1.86
    ],
    [
      -157.58,
      1.88
    ],
    [
      -157.58,
      1.91
    ],
    [
      -157.57,
      1.91
    ],
    [
      -157.54,
      1.93
    ],
    [
      -157.53,
      1.93
    ],
    [
      -157.52,
      1.93
    ],
    [
      -157.52,
      1.92
    ],
    [
      -157.52,
      1.92
    ],
    [
      -157.53,
      1.92
    ],
    [
      -157.55,
      1.9
    ],
    [
      -157.55,
      1.88
    ],
    [
      -157.54,
      1.87
    ],
    [
      -157.53,
      1.86
    ],
    [
      -157.51,
      1.87
    ],
    [
      -157.5,
      1.87
    ],
    [
      -157.5,
      1.86
    ],
    [
      -157.49,
      1.85
    ],
    [
      -157.48,
      1.85
    ],
    [
      -157.45,
      1.85
    ],
    [
      -157.43,
      1.84
    ],
    [
      -157.43,
      1.84
    ],
    [
      -157.44,
      1.85
    ],
    [
      -157.45,
      1.86
    ],
    [
      -157.46,
      1.86
    ],
    [
      -157.47,
      1.87
    ],
    [
      -157.48,
      1.88
    ],
    [
      -157.46,
      1.88
    ],
    [
      -157.45,
      1.88
    ],
    [
      -157.45,
      1.88
    ],
    [
      -157.45,
      1.9
    ],
    [
      -157.44,
      1.89
    ],
    [
      -157.43,
      1.88
    ],
    [
      -157.43,
      1.87
    ],
    [
      -157.42,
      1.86
    ],
    [
      -157.41,
      1.86
    ],
    [
      -157.41,
      1.87
    ],
    [
      -157.41,
      1.88
    ],
    [
      -157.42,
      1.9
    ],
    [
      -157.43,
      1.91
    ],
    [
      -157.42,
      1.92
    ],
    [
      -157.42,
      1.93
    ],
    [
      -157.41,
      1.92
    ],
    [
      -157.4,
      1.92
    ],
    [
      -157.41,
      1.94
    ],
    [
      -157.39,
      1.94
    ],
    [
      -157.39,
      1.93
    ],
    [
      -157.4,
      1.92
    ],
    [
      -157.39,
      1.91
    ],
    [
      -157.38,
      1.9
    ],
    [
      -157.38,
      1.91
    ],
    [
      -157.37,
      1.91
    ],
    [
      -157.36,
      1.92
    ],
    [
      -157.36,
      1.92
    ],
    [
      -157.35,
      1.93
    ],
    [
      -157.35,
      1.94
    ],
    [
      -157.36,
      1.95
    ],
    [
      -157.36,
      1.95
    ],
    [
      -157.38,
      1.96
    ],
    [
      -157.41,
      1.97
    ],
    [
      -157.45,
      1.99
    ],
    [
      -157.45,
      2
    ],
    [
      -157.46,
      2
    ],
    [
      -157.47,
      2.01
    ],
    [
      -157.48,
      2.02
    ],
    [
      -157.48,
      2.01
    ],
    [
      -157.49,
      2
    ],
    [
      -157.5,
      2
    ],
    [
      -157.51,
      2.01
    ],
    [
      -157.51,
      2.02
    ],
    [
      -157.5,
      2.03
    ],
    [
      -157.47,
      2.03
    ],
    [
      -157.42,
      2.02
    ]
  ],
  [
    [
      6.66,
      0.42
    ],
    [
      6.77,
      0.28
    ],
    [
      6.66,
      0.12
    ],
    [
      6.53,
      0.02
    ],
    [
      6.46,
      0.21
    ],
    [
      6.49,
      0.31
    ],
    [
      6.66,
      0.42
    ]
  ]
];
const bbox = [
  -180,
  -55.61183,
  180,
  83.64513
];
const geoData = {
  type,
  objects,
  arcs,
  bbox
};
const data = [
  {
    rank: 1,
    country_code: 392,
    country: "Japan",
    city_code: 21671,
    city: "Tokyo",
    lat: 35.6895,
    lng: 139.6917,
    population: 37
  },
  {
    rank: 2,
    country_code: 356,
    country: "India",
    city_code: 21228,
    city: "Delhi",
    lat: 28.6667,
    lng: 77.2167,
    population: 30
  },
  {
    rank: 3,
    country_code: 156,
    country: "China",
    city_code: 20656,
    city: "Shanghai",
    lat: 31.2222,
    lng: 121.4581,
    population: 27
  },
  {
    rank: 4,
    country_code: 76,
    country: "Brazil",
    city_code: 20287,
    city: "São Paulo",
    lat: -23.5475,
    lng: -46.6361,
    population: 22
  },
  {
    rank: 5,
    country_code: 484,
    country: "Mexico",
    city_code: 21853,
    city: "Ciudad de México (Mexico City)",
    lat: 19.4273,
    lng: -99.1419,
    population: 22
  },
  {
    rank: 6,
    country_code: 50,
    country: "Bangladesh",
    city_code: 20119,
    city: "Dhaka",
    lat: 23.7104,
    lng: 90.4074,
    population: 21
  },
  {
    rank: 7,
    country_code: 818,
    country: "Egypt",
    city_code: 22812,
    city: "Al-Qahirah (Cairo)",
    lat: 30.0392,
    lng: 31.2394,
    population: 21
  },
  {
    rank: 8,
    country_code: 156,
    country: "China",
    city_code: 20464,
    city: "Beijing",
    lat: 39.9075,
    lng: 116.3972,
    population: 20
  },
  {
    rank: 9,
    country_code: 356,
    country: "India",
    city_code: 21206,
    city: "Mumbai (Bombay)",
    lat: 19.074,
    lng: 72.8808,
    population: 20
  },
  {
    rank: 10,
    country_code: 392,
    country: "Japan",
    city_code: 206459,
    city: "Kinki M.M.A. (Osaka)",
    lat: 34.6758,
    lng: 135.5538,
    population: 19
  },
  {
    rank: 11,
    country_code: 840,
    country: "United States of America",
    city_code: 23083,
    city: "New York-Newark",
    lat: 40.717,
    lng: -74.0037,
    population: 19
  },
  {
    rank: 12,
    country_code: 586,
    country: "Pakistan",
    city_code: 22044,
    city: "Karachi",
    lat: 24.9056,
    lng: 67.0822,
    population: 16
  },
  {
    rank: 13,
    country_code: 156,
    country: "China",
    city_code: 20484,
    city: "Chongqing",
    lat: 29.5628,
    lng: 106.5528,
    population: 16
  },
  {
    rank: 14,
    country_code: 792,
    country: "Turkey",
    city_code: 22691,
    city: "Istanbul",
    lat: 41.0138,
    lng: 28.9497,
    population: 15
  },
  {
    rank: 15,
    country_code: 32,
    country: "Argentina",
    city_code: 20058,
    city: "Buenos Aires",
    lat: -34.6051,
    lng: -58.4004,
    population: 15
  },
  {
    rank: 16,
    country_code: 356,
    country: "India",
    city_code: 21211,
    city: "Kolkata (Calcutta)",
    lat: 22.5335,
    lng: 88.356,
    population: 15
  },
  {
    rank: 17,
    country_code: 566,
    country: "Nigeria",
    city_code: 22007,
    city: "Lagos",
    lat: 6.4531,
    lng: 3.3958,
    population: 14
  },
  {
    rank: 18,
    country_code: 180,
    country: "Democratic Republic of the Congo",
    city_code: 20853,
    city: "Kinshasa",
    lat: -4.3276,
    lng: 15.3136,
    population: 14
  },
  {
    rank: 19,
    country_code: 608,
    country: "Philippines",
    city_code: 22109,
    city: "Manila",
    lat: 14.6042,
    lng: 120.9822,
    population: 14
  },
  {
    rank: 20,
    country_code: 156,
    country: "China",
    city_code: 20689,
    city: "Tianjin",
    lat: 39.1088,
    lng: 117.1886,
    population: 14
  },
  {
    rank: 21,
    country_code: 76,
    country: "Brazil",
    city_code: 20272,
    city: "Rio de Janeiro",
    lat: -22.9028,
    lng: -43.2075,
    population: 13
  },
  {
    rank: 22,
    country_code: 156,
    country: "China",
    city_code: 20517,
    city: "Guangzhou, Guangdong",
    lat: 23.1255,
    lng: 113.2574,
    population: 13
  },
  {
    rank: 23,
    country_code: 586,
    country: "Pakistan",
    city_code: 22046,
    city: "Lahore",
    lat: 31.5497,
    lng: 74.3436,
    population: 13
  },
  {
    rank: 24,
    country_code: 643,
    country: "Russian Federation",
    city_code: 22299,
    city: "Moskva (Moscow)",
    lat: 55.755,
    lng: 37.6218,
    population: 13
  },
  {
    rank: 25,
    country_code: 840,
    country: "United States of America",
    city_code: 23052,
    city: "Los Angeles-Long Beach-Santa Ana",
    lat: 34.0317,
    lng: -118.2417,
    population: 12
  },
  {
    rank: 26,
    country_code: 156,
    country: "China",
    city_code: 20667,
    city: "Shenzhen",
    lat: 22.5415,
    lng: 114.0634,
    population: 12
  },
  {
    rank: 27,
    country_code: 356,
    country: "India",
    city_code: 21176,
    city: "Bangalore",
    lat: 12.9719,
    lng: 77.5937,
    population: 12
  },
  {
    rank: 28,
    country_code: 250,
    country: "France",
    city_code: 20985,
    city: "Paris",
    lat: 48.8534,
    lng: 2.3488,
    population: 11
  },
  {
    rank: 29,
    country_code: 170,
    country: "Colombia",
    city_code: 20837,
    city: "Bogotá",
    lat: 4.6097,
    lng: -74.0818,
    population: 11
  },
  {
    rank: 30,
    country_code: 356,
    country: "India",
    city_code: 21321,
    city: "Chennai (Madras)",
    lat: 13.0531,
    lng: 80.2488,
    population: 11
  }
];
const mapData = {
  data
};
function DataTable$1({
  columns: columns3,
  data: data2
}) {
  const [sorting, setSorting] = reactExports.useState([]);
  const [columnFilters, setColumnFilters] = reactExports.useState(
    []
  );
  const [rowSelection, setRowSelection] = reactExports.useState({});
  const table = useReactTable({
    data: data2,
    columns: columns3,
    getCoreRowModel: getCoreRowModel(),
    getPaginationRowModel: getPaginationRowModel(),
    onSortingChange: setSorting,
    getSortedRowModel: getSortedRowModel(),
    onColumnFiltersChange: setColumnFilters,
    getFilteredRowModel: getFilteredRowModel(),
    onRowSelectionChange: setRowSelection,
    state: {
      sorting,
      columnFilters,
      rowSelection
    }
  });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "items-center py-4 flex", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Input,
        {
          placeholder: "Filter peers...",
          value: table.getColumn("location")?.getFilterValue() ?? "",
          onChange: (event) => table.getColumn("location")?.setFilterValue(event.target.value),
          className: "w-5/6 inline"
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { type: "submit", className: "ml-3", children: "Filter" })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "rounded-md border", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(Table, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(TableHeader, { children: table.getHeaderGroups().map((headerGroup) => /* @__PURE__ */ jsxRuntimeExports.jsx(TableRow, { children: headerGroup.headers.map((header) => {
        return /* @__PURE__ */ jsxRuntimeExports.jsx(TableHead, { children: header.isPlaceholder ? null : flexRender(
          header.column.columnDef.header,
          header.getContext()
        ) }, header.id);
      }) }, headerGroup.id)) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(TableBody, { children: table.getRowModel().rows?.length ? table.getRowModel().rows.map((row) => /* @__PURE__ */ jsxRuntimeExports.jsx(
        TableRow,
        {
          "data-state": row.getIsSelected() && "selected",
          children: row.getVisibleCells().map((cell) => /* @__PURE__ */ jsxRuntimeExports.jsx(TableCell, { children: flexRender(
            cell.column.columnDef.cell,
            cell.getContext()
          ) }, cell.id))
        },
        row.id
      )) : /* @__PURE__ */ jsxRuntimeExports.jsx(TableRow, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        TableCell,
        {
          colSpan: columns3.length,
          className: "h-24 text-center",
          children: "No results."
        }
      ) }) })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center justify-end space-x-2 py-4", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Button,
        {
          variant: "outline",
          size: "sm",
          onClick: () => table.previousPage(),
          disabled: !table.getCanPreviousPage(),
          children: "Previous"
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Button,
        {
          variant: "outline",
          size: "sm",
          onClick: () => table.nextPage(),
          disabled: !table.getCanNextPage(),
          children: "Next"
        }
      )
    ] })
  ] });
}
const columns$1 = [
  {
    id: "select",
    header: ({ table }) => /* @__PURE__ */ jsxRuntimeExports.jsx(
      Checkbox,
      {
        checked: table.getIsAllPageRowsSelected() || table.getIsSomePageRowsSelected() && "indeterminate",
        onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value),
        "aria-label": "Select all"
      }
    ),
    cell: ({ row }) => /* @__PURE__ */ jsxRuntimeExports.jsx(
      Checkbox,
      {
        checked: row.getIsSelected(),
        onCheckedChange: (value) => row.toggleSelected(!!value),
        "aria-label": "Select row"
      }
    )
  },
  {
    accessorKey: "location",
    header: ({ column }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(
        Button,
        {
          variant: "ghost",
          onClick: () => column.toggleSorting(column.getIsSorted() === "asc"),
          children: [
            "Location",
            /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowUpDown, { className: "ml-2 h-4 w-4" })
          ]
        }
      );
    },
    cell: ({ row }) => /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "text-right flex", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: row.original.flagUrl, alt: "flag", style: { maxWidth: "23px", maxHeight: "20px" } }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "ml-3", children: [
        " ",
        row.getValue("location"),
        " "
      ] })
    ] })
  },
  {
    accessorKey: "latency",
    header: ({ column }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(
        Button,
        {
          variant: "ghost",
          onClick: () => column.toggleSorting(column.getIsSorted() === "asc"),
          children: [
            "Latency",
            /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowUpDown, { className: "ml-2 h-4 w-4" })
          ]
        }
      );
    }
  },
  {
    accessorKey: "peerID",
    header: ({ column }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(
        Button,
        {
          variant: "ghost",
          onClick: () => column.toggleSorting(column.getIsSorted() === "asc"),
          children: [
            "Peer ID",
            /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowUpDown, { className: "ml-2 h-4 w-4" })
          ]
        }
      );
    },
    cell: ({ row }) => /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "text-right  flex", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { xmlns: "http://www.w3.org/2000/svg", width: "20", height: "20", viewBox: "0 0 32 32", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M27.332,10.323c-1.07,0-2.055,.361-2.842,.967-2.143-1.326-4.848-2.16-7.807-2.271v-.013c0-1.983,1.474-3.629,3.386-3.9v-.003c.347,1.47,1.666,2.564,3.242,2.564,1.84,0,3.331-1.491,3.331-3.331s-1.491-3.331-3.331-3.331c-1.609,0-2.95,1.14-3.262,2.657-2.694,.289-4.798,2.574-4.798,5.343v.017c-2.93,.123-5.605,.957-7.729,2.274-.789-.611-1.779-.974-2.853-.974-2.578,0-4.668,2.09-4.668,4.668,0,1.871,1.099,3.483,2.688,4.228,.155,5.419,6.06,9.778,13.323,9.778s13.176-4.364,13.323-9.787c1.576-.75,2.666-2.357,2.666-4.217,0-2.578-2.09-4.668-4.668-4.668ZM7.334,17.952c.078-1.693,1.203-2.992,2.51-2.992s2.307,1.373,2.229,3.066c-.078,1.693-1.054,2.308-2.363,2.308s-2.453-.689-2.375-2.382Zm13.596,4.424c-.804,1.922-2.703,3.273-4.919,3.273s-4.114-1.351-4.919-3.273c-.095-.228,.061-.483,.306-.508,1.437-.145,2.991-.225,4.613-.225s3.175,.08,4.613,.225c.245,.025,.401,.28,.306,.508Zm1.384-2.043c-1.307,0-2.285-.614-2.363-2.308-.078-1.693,.92-3.066,2.229-3.066s2.433,1.299,2.51,2.992c.078,1.693-1.068,2.382-2.375,2.382Z" }) }),
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "ml-3", children: row.getValue("peerID") })
    ] })
  },
  {
    accessorKey: "connection",
    header: ({ column }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(
        Button,
        {
          variant: "ghost",
          onClick: () => column.toggleSorting(column.getIsSorted() === "asc"),
          children: [
            "Connection",
            /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowUpDown, { className: "ml-2 h-4 w-4" })
          ]
        }
      );
    },
    cell: ({ row }) => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "text-right", children: row.getValue("connection") })
  },
  {
    accessorKey: "openStreams",
    header: ({ column }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(
        Button,
        {
          variant: "ghost",
          onClick: () => column.toggleSorting(column.getIsSorted() === "asc"),
          children: [
            "Open Streams",
            /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowUpDown, { className: "ml-2 h-4 w-4" })
          ]
        }
      );
    },
    cell: ({ row }) => /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "text-right", children: [
      " ",
      row.getValue("openStreams")
    ] })
  }
];
const fakeSeeds = [
  {
    location: "USA, Clifton",
    latency: "11ms",
    peerID: "1203 fUr4",
    connection: "ip4.tcp",
    openStreams: "/ipfs/bitswap/1.2.0/, /ipfs/cad/1.0.0",
    flagUrl: "https://www.worldometers.info//img/flags/small/tn_us-flag.gif"
  },
  {
    location: "ARG, Buenos Aires",
    latency: "34ms",
    peerID: "762 zDl9",
    connection: "ip4.tcp",
    openStreams: "/ipfs/bitswap/1.2.0/, /ipfs/cad/1.0.0",
    flagUrl: "https://www.worldometers.info//img/flags/small/tn_ar-flag.gif"
  },
  {
    location: "UK, Bolton",
    latency: "11ms",
    peerID: "1203 fUr4",
    connection: "ip4.tcp",
    openStreams: "/ipfs/bitswap/1.2.0/, /ipfs/cad/1.0.0",
    flagUrl: "https://www.worldometers.info//img/flags/small/tn_uk-flag.gif"
  },
  {
    location: "USA, Texas",
    latency: "51ms",
    peerID: "1203 fUr4",
    connection: "ip4.tcp",
    openStreams: "/ipfs/bitswap/1.2.0/, /ipfs/cad/1.0.0",
    flagUrl: "https://www.worldometers.info//img/flags/small/tn_us-flag.gif"
  },
  {
    location: "USA, California",
    latency: "11ms",
    peerID: "1203 fUr4",
    connection: "ip4.tcp",
    openStreams: "/ipfs/bitswap/1.2.0/, /ipfs/cad/1.0.0",
    flagUrl: "https://www.worldometers.info//img/flags/small/tn_us-flag.gif"
  },
  {
    location: "USA, Alabama",
    latency: "11ms",
    peerID: "1203 fUr4",
    connection: "ip4.tcp",
    openStreams: "/ipfs/bitswap/1.2.0/, /ipfs/cad/1.0.0",
    flagUrl: "https://www.worldometers.info//img/flags/small/tn_us-flag.gif"
  },
  {
    location: "Uruguay, Montevideo",
    latency: "11ms",
    peerID: "1203 fUr4",
    connection: "ip4.tcp",
    openStreams: "/ipfs/bitswap/1.2.0/, /ipfs/cad/1.0.0",
    flagUrl: "https://www.worldometers.info//img/flags/small/tn_uy-flag.gif"
  }
];
const MarkerPoints = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex mt-1", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "w-3/5" }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex justify-items-end", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-gray-500 text-base ", children: "Peers: " }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "flex ml-3", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "mt-1 flex h-2.5 w-2.5 items-center justify-center rounded-full bg-blue-300" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-sm", children: "1-10" })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "flex ml-3", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "mt-1 flex h-3 w-3 items-center justify-center rounded-full bg-blue-500" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-sm", children: "10-100" })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "flex ml-3", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "mt-1 selection:flex h-4 w-4 items-center justify-center rounded-full bg-blue-700" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-sm", children: "100+" })
      ] })
    ] })
  ] });
};
const RadialGradient = () => /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { width: "0", height: "0", children: /* @__PURE__ */ jsxRuntimeExports.jsx("defs", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
  "pattern",
  {
    id: "radialPattern",
    patternUnits: "userSpaceOnUse",
    width: "5",
    height: "5",
    children: /* @__PURE__ */ jsxRuntimeExports.jsx("circle", { cx: "5", cy: "5", r: "2", fill: "gray" })
  }
) }) });
const PeersPage = () => {
  const [data2, setData] = reactExports.useState([]);
  const [maxValue, setMaxValue] = reactExports.useState(0);
  reactExports.useEffect(() => {
    try {
      const sortedCities = sortBy$1(mapData.data, (o2) => -o2.population);
      setMaxValue(sortedCities[0].population);
      setData(sortedCities);
    } catch (err) {
      console.log("err-", err);
    }
  }, []);
  const popScale = reactExports.useMemo(
    () => linear$1().domain([0, maxValue]).range([0, 24]),
    [maxValue]
  );
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "p-2 pb-0 block w-auto overflow-y-scroll", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { id: "peers-page", className: "container p-8 pt-0 pl-12 justify-self-center", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(RadialGradient, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(ComposableMap, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Sphere$1, { stroke: "#E4E5E6", strokeWidth: 0.5, fill: "transparent", id: "sphere" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Graticule$1, { stroke: "#E4E5E6", strokeWidth: 0.5 }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Geographies, { geography: geoData, children: ({ geographies }) => {
        return geographies.map((geo) => /* @__PURE__ */ jsxRuntimeExports.jsx(
          Geography$1,
          {
            geography: geo,
            style: {
              default: {
                fill: "url(#radialPattern)",
                // Apply the radial gradient as fill
                stroke: "#FFF",
                // Add stroke if needed
                strokeWidth: 0.5
              },
              hover: {
                fill: "#2a354d",
                outline: "none"
              },
              pressed: {
                fill: "#E42",
                outline: "none"
              }
            }
          },
          geo.rsmKey
        ));
      } }),
      data2.map(({ city_code, lng, lat, population }) => {
        return /* @__PURE__ */ jsxRuntimeExports.jsx(
          MarkerDialog,
          {
            lng,
            lat,
            city_code,
            popScale,
            population
          },
          city_code
        );
      })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: "text-center text-3xl", children: "900" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: "text-center font-bold text-gray-400 text-base", children: "PEERS" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(MarkerPoints, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "mt-9 w-auto", children: /* @__PURE__ */ jsxRuntimeExports.jsx(DataTable$1, { columns: columns$1, data: fakeSeeds }) })
  ] }) });
};
const $89eedd556c436f6a$var$DEFAULT_ORIENTATION = "horizontal";
const $89eedd556c436f6a$var$ORIENTATIONS = [
  "horizontal",
  "vertical"
];
const $89eedd556c436f6a$export$1ff3c3f08ae963c0 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { decorative, orientation: orientationProp = $89eedd556c436f6a$var$DEFAULT_ORIENTATION, ...domProps } = props;
  const orientation = $89eedd556c436f6a$var$isValidOrientation(orientationProp) ? orientationProp : $89eedd556c436f6a$var$DEFAULT_ORIENTATION;
  const ariaOrientation = orientation === "vertical" ? orientation : void 0;
  const semanticProps = decorative ? {
    role: "none"
  } : {
    "aria-orientation": ariaOrientation,
    role: "separator"
  };
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    "data-orientation": orientation
  }, semanticProps, domProps, {
    ref: forwardedRef
  }));
});
$89eedd556c436f6a$export$1ff3c3f08ae963c0.propTypes = {
  orientation(props, propName, componentName) {
    const propValue = props[propName];
    const strVal = String(propValue);
    if (propValue && !$89eedd556c436f6a$var$isValidOrientation(propValue))
      return new Error($89eedd556c436f6a$var$getInvalidOrientationError(strVal, componentName));
    return null;
  }
};
function $89eedd556c436f6a$var$getInvalidOrientationError(value, componentName) {
  return `Invalid prop \`orientation\` of value \`${value}\` supplied to \`${componentName}\`, expected one of:
  - horizontal
  - vertical

Defaulting to \`${$89eedd556c436f6a$var$DEFAULT_ORIENTATION}\`.`;
}
function $89eedd556c436f6a$var$isValidOrientation(orientation) {
  return $89eedd556c436f6a$var$ORIENTATIONS.includes(orientation);
}
const $89eedd556c436f6a$export$be92b6f5f03c0fe9 = $89eedd556c436f6a$export$1ff3c3f08ae963c0;
const Separator = reactExports.forwardRef(
  ({ className, orientation = "horizontal", decorative = true, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
    $89eedd556c436f6a$export$be92b6f5f03c0fe9,
    {
      ref,
      decorative,
      orientation,
      className: cn(
        "shrink-0 bg-border",
        orientation === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]",
        className
      ),
      ...props
    }
  )
);
Separator.displayName = $89eedd556c436f6a$export$be92b6f5f03c0fe9.displayName;
function SidebarNav({ className, items: items2, ...props }) {
  const location = useLocation();
  const currentPathname = location.pathname;
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "nav",
    {
      className: cn(
        "flex space-x-2 lg:flex-col lg:space-x-0 lg:space-y-1",
        className
      ),
      ...props,
      children: items2.map((item) => /* @__PURE__ */ jsxRuntimeExports.jsx(
        Link,
        {
          to: item.href,
          className: cn(
            buttonVariants({ variant: "ghost" }),
            currentPathname === item.href ? "bg-muted hover:bg-muted" : "hover:bg-transparent hover:underline",
            "justify-start"
          ),
          children: item.title
        },
        item.href
      ))
    }
  );
}
const sidebarNavItems = [
  {
    title: "Profile",
    href: "/settings/profile"
  },
  {
    title: "Account",
    href: "/settings/account"
  },
  {
    title: "Appearance",
    href: "/settings/appearance"
  },
  {
    title: "Notifications",
    href: "/settings/notifications"
  },
  // {
  //   title: "Display",
  //   href: "/settings/display",
  // },
  {
    title: "Transfer",
    href: "/settings/transfer"
  }
];
function SettingsPage() {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-6 p-10 pb-16 md:block", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-0.5", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("h2", { className: "text-2xl font-bold tracking-tight", children: "OrcaNet Settings" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-muted-foreground", children: "Manage your account settings and set e-mail preferences." })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Separator, { className: "my-6" }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex flex-col space-y-8 lg:flex-row lg:space-x-12 lg:space-y-0", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("aside", { className: "-mx-4 lg:w-1/5", children: /* @__PURE__ */ jsxRuntimeExports.jsx(SidebarNav, { items: sidebarNavItems }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Outlet, {})
    ] })
  ] }) });
}
var isCheckBoxInput = (element) => element.type === "checkbox";
var isDateObject = (value) => value instanceof Date;
var isNullOrUndefined = (value) => value == null;
const isObjectType = (value) => typeof value === "object";
var isObject = (value) => !isNullOrUndefined(value) && !Array.isArray(value) && isObjectType(value) && !isDateObject(value);
var getEventValue = (event) => isObject(event) && event.target ? isCheckBoxInput(event.target) ? event.target.checked : event.target.value : event;
var getNodeParentName = (name) => name.substring(0, name.search(/\.\d+(\.|$)/)) || name;
var isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));
var isPlainObject = (tempObject) => {
  const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;
  return isObject(prototypeCopy) && prototypeCopy.hasOwnProperty("isPrototypeOf");
};
var isWeb = typeof window !== "undefined" && typeof window.HTMLElement !== "undefined" && typeof document !== "undefined";
function cloneObject(data2) {
  let copy2;
  const isArray2 = Array.isArray(data2);
  if (data2 instanceof Date) {
    copy2 = new Date(data2);
  } else if (data2 instanceof Set) {
    copy2 = new Set(data2);
  } else if (!(isWeb && (data2 instanceof Blob || data2 instanceof FileList)) && (isArray2 || isObject(data2))) {
    copy2 = isArray2 ? [] : {};
    if (!isArray2 && !isPlainObject(data2)) {
      copy2 = data2;
    } else {
      for (const key in data2) {
        if (data2.hasOwnProperty(key)) {
          copy2[key] = cloneObject(data2[key]);
        }
      }
    }
  } else {
    return data2;
  }
  return copy2;
}
var compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];
var isUndefined = (val) => val === void 0;
var get2 = (object2, path, defaultValue2) => {
  if (!path || !isObject(object2)) {
    return defaultValue2;
  }
  const result = compact(path.split(/[,[\].]+?/)).reduce((result2, key) => isNullOrUndefined(result2) ? result2 : result2[key], object2);
  return isUndefined(result) || result === object2 ? isUndefined(object2[path]) ? defaultValue2 : object2[path] : result;
};
var isBoolean = (value) => typeof value === "boolean";
const EVENTS = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
};
const VALIDATION_MODE = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
};
const INPUT_VALIDATION_RULES = {
  max: "max",
  min: "min",
  maxLength: "maxLength",
  minLength: "minLength",
  pattern: "pattern",
  required: "required",
  validate: "validate"
};
const HookFormContext = React.createContext(null);
const useFormContext = () => React.useContext(HookFormContext);
const FormProvider = (props) => {
  const { children: children2, ...data2 } = props;
  return React.createElement(HookFormContext.Provider, { value: data2 }, children2);
};
var getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {
  const result = {
    defaultValues: control._defaultValues
  };
  for (const key in formState) {
    Object.defineProperty(result, key, {
      get: () => {
        const _key = key;
        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {
          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;
        }
        localProxyFormState && (localProxyFormState[_key] = true);
        return formState[_key];
      }
    });
  }
  return result;
};
var isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;
var shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {
  updateFormState(formStateData);
  const { name, ...formState } = formStateData;
  return isEmptyObject(formState) || Object.keys(formState).length >= Object.keys(_proxyFormState).length || Object.keys(formState).find((key) => _proxyFormState[key] === (!isRoot || VALIDATION_MODE.all));
};
var convertToArrayPayload = (value) => Array.isArray(value) ? value : [value];
var shouldSubscribeByName = (name, signalName, exact) => !name || !signalName || name === signalName || convertToArrayPayload(name).some((currentName) => currentName && (exact ? currentName === signalName : currentName.startsWith(signalName) || signalName.startsWith(currentName)));
function useSubscribe(props) {
  const _props = React.useRef(props);
  _props.current = props;
  React.useEffect(() => {
    const subscription = !props.disabled && _props.current.subject && _props.current.subject.subscribe({
      next: _props.current.next
    });
    return () => {
      subscription && subscription.unsubscribe();
    };
  }, [props.disabled]);
}
function useFormState(props) {
  const methods = useFormContext();
  const { control = methods.control, disabled, name, exact } = props || {};
  const [formState, updateFormState] = React.useState(control._formState);
  const _mounted = React.useRef(true);
  const _localProxyFormState = React.useRef({
    isDirty: false,
    isLoading: false,
    dirtyFields: false,
    touchedFields: false,
    validatingFields: false,
    isValidating: false,
    isValid: false,
    errors: false
  });
  const _name = React.useRef(name);
  _name.current = name;
  useSubscribe({
    disabled,
    next: (value) => _mounted.current && shouldSubscribeByName(_name.current, value.name, exact) && shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) && updateFormState({
      ...control._formState,
      ...value
    }),
    subject: control._subjects.state
  });
  React.useEffect(() => {
    _mounted.current = true;
    _localProxyFormState.current.isValid && control._updateValid(true);
    return () => {
      _mounted.current = false;
    };
  }, [control]);
  return getProxyFormState(formState, control, _localProxyFormState.current, false);
}
var isString = (value) => typeof value === "string";
var generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue2) => {
  if (isString(names)) {
    isGlobal && _names.watch.add(names);
    return get2(formValues, names, defaultValue2);
  }
  if (Array.isArray(names)) {
    return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), get2(formValues, fieldName)));
  }
  isGlobal && (_names.watchAll = true);
  return formValues;
};
function useWatch(props) {
  const methods = useFormContext();
  const { control = methods.control, name, defaultValue: defaultValue2, disabled, exact } = props || {};
  const _name = React.useRef(name);
  _name.current = name;
  useSubscribe({
    disabled,
    subject: control._subjects.values,
    next: (formState) => {
      if (shouldSubscribeByName(_name.current, formState.name, exact)) {
        updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue2)));
      }
    }
  });
  const [value, updateValue] = React.useState(control._getWatch(name, defaultValue2));
  React.useEffect(() => control._removeUnmounted());
  return value;
}
var isKey = (value) => /^\w*$/.test(value);
var stringToPath = (input) => compact(input.replace(/["|']|\]/g, "").split(/\.|\[/));
var set2 = (object2, path, value) => {
  let index2 = -1;
  const tempPath = isKey(path) ? [path] : stringToPath(path);
  const length2 = tempPath.length;
  const lastIndex = length2 - 1;
  while (++index2 < length2) {
    const key = tempPath[index2];
    let newValue = value;
    if (index2 !== lastIndex) {
      const objValue = object2[key];
      newValue = isObject(objValue) || Array.isArray(objValue) ? objValue : !isNaN(+tempPath[index2 + 1]) ? [] : {};
    }
    object2[key] = newValue;
    object2 = object2[key];
  }
  return object2;
};
function useController(props) {
  const methods = useFormContext();
  const { name, disabled, control = methods.control, shouldUnregister } = props;
  const isArrayField = isNameInFieldArray(control._names.array, name);
  const value = useWatch({
    control,
    name,
    defaultValue: get2(control._formValues, name, get2(control._defaultValues, name, props.defaultValue)),
    exact: true
  });
  const formState = useFormState({
    control,
    name
  });
  const _registerProps = React.useRef(control.register(name, {
    ...props.rules,
    value,
    ...isBoolean(props.disabled) ? { disabled: props.disabled } : {}
  }));
  React.useEffect(() => {
    const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;
    const updateMounted = (name2, value2) => {
      const field = get2(control._fields, name2);
      if (field) {
        field._f.mount = value2;
      }
    };
    updateMounted(name, true);
    if (_shouldUnregisterField) {
      const value2 = cloneObject(get2(control._options.defaultValues, name));
      set2(control._defaultValues, name, value2);
      if (isUndefined(get2(control._formValues, name))) {
        set2(control._formValues, name, value2);
      }
    }
    return () => {
      (isArrayField ? _shouldUnregisterField && !control._state.action : _shouldUnregisterField) ? control.unregister(name) : updateMounted(name, false);
    };
  }, [name, control, isArrayField, shouldUnregister]);
  React.useEffect(() => {
    if (get2(control._fields, name)) {
      control._updateDisabledField({
        disabled,
        fields: control._fields,
        name,
        value: get2(control._fields, name)._f.value
      });
    }
  }, [disabled, name, control]);
  return {
    field: {
      name,
      value,
      ...isBoolean(disabled) || formState.disabled ? { disabled: formState.disabled || disabled } : {},
      onChange: React.useCallback((event) => _registerProps.current.onChange({
        target: {
          value: getEventValue(event),
          name
        },
        type: EVENTS.CHANGE
      }), [name]),
      onBlur: React.useCallback(() => _registerProps.current.onBlur({
        target: {
          value: get2(control._formValues, name),
          name
        },
        type: EVENTS.BLUR
      }), [name, control]),
      ref: (elm) => {
        const field = get2(control._fields, name);
        if (field && elm) {
          field._f.ref = {
            focus: () => elm.focus(),
            select: () => elm.select(),
            setCustomValidity: (message) => elm.setCustomValidity(message),
            reportValidity: () => elm.reportValidity()
          };
        }
      }
    },
    formState,
    fieldState: Object.defineProperties({}, {
      invalid: {
        enumerable: true,
        get: () => !!get2(formState.errors, name)
      },
      isDirty: {
        enumerable: true,
        get: () => !!get2(formState.dirtyFields, name)
      },
      isTouched: {
        enumerable: true,
        get: () => !!get2(formState.touchedFields, name)
      },
      isValidating: {
        enumerable: true,
        get: () => !!get2(formState.validatingFields, name)
      },
      error: {
        enumerable: true,
        get: () => get2(formState.errors, name)
      }
    })
  };
}
const Controller = (props) => props.render(useController(props));
var appendErrors = (name, validateAllFieldCriteria, errors, type2, message) => validateAllFieldCriteria ? {
  ...errors[name],
  types: {
    ...errors[name] && errors[name].types ? errors[name].types : {},
    [type2]: message || true
  }
} : {};
var generateId = () => {
  const d2 = typeof performance === "undefined" ? Date.now() : performance.now() * 1e3;
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (c2) => {
    const r2 = (Math.random() * 16 + d2) % 16 | 0;
    return (c2 == "x" ? r2 : r2 & 3 | 8).toString(16);
  });
};
var getFocusFieldName = (name, index2, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus) ? options.focusName || `${name}.${isUndefined(options.focusIndex) ? index2 : options.focusIndex}.` : "";
var getValidationModes = (mode2) => ({
  isOnSubmit: !mode2 || mode2 === VALIDATION_MODE.onSubmit,
  isOnBlur: mode2 === VALIDATION_MODE.onBlur,
  isOnChange: mode2 === VALIDATION_MODE.onChange,
  isOnAll: mode2 === VALIDATION_MODE.all,
  isOnTouch: mode2 === VALIDATION_MODE.onTouched
});
var isWatched = (name, _names, isBlurEvent) => !isBlurEvent && (_names.watchAll || _names.watch.has(name) || [..._names.watch].some((watchName) => name.startsWith(watchName) && /^\.\w+/.test(name.slice(watchName.length))));
const iterateFieldsByAction = (fields, action, fieldsNames, abortEarly) => {
  for (const key of fieldsNames || Object.keys(fields)) {
    const field = get2(fields, key);
    if (field) {
      const { _f, ...currentField } = field;
      if (_f) {
        if (_f.refs && _f.refs[0] && action(_f.refs[0], key) && !abortEarly) {
          break;
        } else if (_f.ref && action(_f.ref, _f.name) && !abortEarly) {
          break;
        } else {
          iterateFieldsByAction(currentField, action);
        }
      } else if (isObject(currentField)) {
        iterateFieldsByAction(currentField, action);
      }
    }
  }
};
var updateFieldArrayRootError = (errors, error, name) => {
  const fieldArrayErrors = compact(get2(errors, name));
  set2(fieldArrayErrors, "root", error[name]);
  set2(errors, name, fieldArrayErrors);
  return errors;
};
var isFileInput = (element) => element.type === "file";
var isFunction = (value) => typeof value === "function";
var isHTMLElement = (value) => {
  if (!isWeb) {
    return false;
  }
  const owner = value ? value.ownerDocument : 0;
  return value instanceof (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement);
};
var isMessage = (value) => isString(value);
var isRadioInput = (element) => element.type === "radio";
var isRegex = (value) => value instanceof RegExp;
const defaultResult = {
  value: false,
  isValid: false
};
const validResult = { value: true, isValid: true };
var getCheckboxValue = (options) => {
  if (Array.isArray(options)) {
    if (options.length > 1) {
      const values = options.filter((option) => option && option.checked && !option.disabled).map((option) => option.value);
      return { value: values, isValid: !!values.length };
    }
    return options[0].checked && !options[0].disabled ? (
      // @ts-expect-error expected to work in the browser
      options[0].attributes && !isUndefined(options[0].attributes.value) ? isUndefined(options[0].value) || options[0].value === "" ? validResult : { value: options[0].value, isValid: true } : validResult
    ) : defaultResult;
  }
  return defaultResult;
};
const defaultReturn = {
  isValid: false,
  value: null
};
var getRadioValue = (options) => Array.isArray(options) ? options.reduce((previous, option) => option && option.checked && !option.disabled ? {
  isValid: true,
  value: option.value
} : previous, defaultReturn) : defaultReturn;
function getValidateError(result, ref, type2 = "validate") {
  if (isMessage(result) || Array.isArray(result) && result.every(isMessage) || isBoolean(result) && !result) {
    return {
      type: type2,
      message: isMessage(result) ? result : "",
      ref
    };
  }
}
var getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData) ? validationData : {
  value: validationData,
  message: ""
};
var validateField = async (field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {
  const { ref, refs, required, maxLength, minLength, min: min2, max: max2, pattern, validate, name, valueAsNumber, mount, disabled } = field._f;
  const inputValue = get2(formValues, name);
  if (!mount || disabled) {
    return {};
  }
  const inputRef = refs ? refs[0] : ref;
  const setCustomValidity = (message) => {
    if (shouldUseNativeValidation && inputRef.reportValidity) {
      inputRef.setCustomValidity(isBoolean(message) ? "" : message || "");
      inputRef.reportValidity();
    }
  };
  const error = {};
  const isRadio = isRadioInput(ref);
  const isCheckBox = isCheckBoxInput(ref);
  const isRadioOrCheckbox2 = isRadio || isCheckBox;
  const isEmpty = (valueAsNumber || isFileInput(ref)) && isUndefined(ref.value) && isUndefined(inputValue) || isHTMLElement(ref) && ref.value === "" || inputValue === "" || Array.isArray(inputValue) && !inputValue.length;
  const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);
  const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {
    const message = exceedMax ? maxLengthMessage : minLengthMessage;
    error[name] = {
      type: exceedMax ? maxType : minType,
      message,
      ref,
      ...appendErrorsCurry(exceedMax ? maxType : minType, message)
    };
  };
  if (isFieldArray ? !Array.isArray(inputValue) || !inputValue.length : required && (!isRadioOrCheckbox2 && (isEmpty || isNullOrUndefined(inputValue)) || isBoolean(inputValue) && !inputValue || isCheckBox && !getCheckboxValue(refs).isValid || isRadio && !getRadioValue(refs).isValid)) {
    const { value, message } = isMessage(required) ? { value: !!required, message: required } : getValueAndMessage(required);
    if (value) {
      error[name] = {
        type: INPUT_VALIDATION_RULES.required,
        message,
        ref: inputRef,
        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message)
      };
      if (!validateAllFieldCriteria) {
        setCustomValidity(message);
        return error;
      }
    }
  }
  if (!isEmpty && (!isNullOrUndefined(min2) || !isNullOrUndefined(max2))) {
    let exceedMax;
    let exceedMin;
    const maxOutput = getValueAndMessage(max2);
    const minOutput = getValueAndMessage(min2);
    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {
      const valueNumber = ref.valueAsNumber || (inputValue ? +inputValue : inputValue);
      if (!isNullOrUndefined(maxOutput.value)) {
        exceedMax = valueNumber > maxOutput.value;
      }
      if (!isNullOrUndefined(minOutput.value)) {
        exceedMin = valueNumber < minOutput.value;
      }
    } else {
      const valueDate = ref.valueAsDate || new Date(inputValue);
      const convertTimeToDate = (time2) => /* @__PURE__ */ new Date((/* @__PURE__ */ new Date()).toDateString() + " " + time2);
      const isTime = ref.type == "time";
      const isWeek = ref.type == "week";
      if (isString(maxOutput.value) && inputValue) {
        exceedMax = isTime ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value) : isWeek ? inputValue > maxOutput.value : valueDate > new Date(maxOutput.value);
      }
      if (isString(minOutput.value) && inputValue) {
        exceedMin = isTime ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value) : isWeek ? inputValue < minOutput.value : valueDate < new Date(minOutput.value);
      }
    }
    if (exceedMax || exceedMin) {
      getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);
      if (!validateAllFieldCriteria) {
        setCustomValidity(error[name].message);
        return error;
      }
    }
  }
  if ((maxLength || minLength) && !isEmpty && (isString(inputValue) || isFieldArray && Array.isArray(inputValue))) {
    const maxLengthOutput = getValueAndMessage(maxLength);
    const minLengthOutput = getValueAndMessage(minLength);
    const exceedMax = !isNullOrUndefined(maxLengthOutput.value) && inputValue.length > +maxLengthOutput.value;
    const exceedMin = !isNullOrUndefined(minLengthOutput.value) && inputValue.length < +minLengthOutput.value;
    if (exceedMax || exceedMin) {
      getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);
      if (!validateAllFieldCriteria) {
        setCustomValidity(error[name].message);
        return error;
      }
    }
  }
  if (pattern && !isEmpty && isString(inputValue)) {
    const { value: patternValue, message } = getValueAndMessage(pattern);
    if (isRegex(patternValue) && !inputValue.match(patternValue)) {
      error[name] = {
        type: INPUT_VALIDATION_RULES.pattern,
        message,
        ref,
        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message)
      };
      if (!validateAllFieldCriteria) {
        setCustomValidity(message);
        return error;
      }
    }
  }
  if (validate) {
    if (isFunction(validate)) {
      const result = await validate(inputValue, formValues);
      const validateError = getValidateError(result, inputRef);
      if (validateError) {
        error[name] = {
          ...validateError,
          ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message)
        };
        if (!validateAllFieldCriteria) {
          setCustomValidity(validateError.message);
          return error;
        }
      }
    } else if (isObject(validate)) {
      let validationResult = {};
      for (const key in validate) {
        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {
          break;
        }
        const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);
        if (validateError) {
          validationResult = {
            ...validateError,
            ...appendErrorsCurry(key, validateError.message)
          };
          setCustomValidity(validateError.message);
          if (validateAllFieldCriteria) {
            error[name] = validationResult;
          }
        }
      }
      if (!isEmptyObject(validationResult)) {
        error[name] = {
          ref: inputRef,
          ...validationResult
        };
        if (!validateAllFieldCriteria) {
          return error;
        }
      }
    }
  }
  setCustomValidity(true);
  return error;
};
var appendAt = (data2, value) => [
  ...data2,
  ...convertToArrayPayload(value)
];
var fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => void 0) : void 0;
function insert(data2, index2, value) {
  return [
    ...data2.slice(0, index2),
    ...convertToArrayPayload(value),
    ...data2.slice(index2)
  ];
}
var moveArrayAt = (data2, from, to) => {
  if (!Array.isArray(data2)) {
    return [];
  }
  if (isUndefined(data2[to])) {
    data2[to] = void 0;
  }
  data2.splice(to, 0, data2.splice(from, 1)[0]);
  return data2;
};
var prependAt = (data2, value) => [
  ...convertToArrayPayload(value),
  ...convertToArrayPayload(data2)
];
function removeAtIndexes(data2, indexes) {
  let i2 = 0;
  const temp = [...data2];
  for (const index2 of indexes) {
    temp.splice(index2 - i2, 1);
    i2++;
  }
  return compact(temp).length ? temp : [];
}
var removeArrayAt = (data2, index2) => isUndefined(index2) ? [] : removeAtIndexes(data2, convertToArrayPayload(index2).sort((a2, b2) => a2 - b2));
var swapArrayAt = (data2, indexA, indexB) => {
  [data2[indexA], data2[indexB]] = [data2[indexB], data2[indexA]];
};
function baseGet(object2, updatePath) {
  const length2 = updatePath.slice(0, -1).length;
  let index2 = 0;
  while (index2 < length2) {
    object2 = isUndefined(object2) ? index2++ : object2[updatePath[index2++]];
  }
  return object2;
}
function isEmptyArray(obj) {
  for (const key in obj) {
    if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {
      return false;
    }
  }
  return true;
}
function unset(object2, path) {
  const paths = Array.isArray(path) ? path : isKey(path) ? [path] : stringToPath(path);
  const childObject = paths.length === 1 ? object2 : baseGet(object2, paths);
  const index2 = paths.length - 1;
  const key = paths[index2];
  if (childObject) {
    delete childObject[key];
  }
  if (index2 !== 0 && (isObject(childObject) && isEmptyObject(childObject) || Array.isArray(childObject) && isEmptyArray(childObject))) {
    unset(object2, paths.slice(0, -1));
  }
  return object2;
}
var updateAt = (fieldValues, index2, value) => {
  fieldValues[index2] = value;
  return fieldValues;
};
function useFieldArray(props) {
  const methods = useFormContext();
  const { control = methods.control, name, keyName = "id", shouldUnregister } = props;
  const [fields, setFields] = React.useState(control._getFieldArray(name));
  const ids = React.useRef(control._getFieldArray(name).map(generateId));
  const _fieldIds = React.useRef(fields);
  const _name = React.useRef(name);
  const _actioned = React.useRef(false);
  _name.current = name;
  _fieldIds.current = fields;
  control._names.array.add(name);
  props.rules && control.register(name, props.rules);
  useSubscribe({
    next: ({ values, name: fieldArrayName }) => {
      if (fieldArrayName === _name.current || !fieldArrayName) {
        const fieldValues = get2(values, _name.current);
        if (Array.isArray(fieldValues)) {
          setFields(fieldValues);
          ids.current = fieldValues.map(generateId);
        }
      }
    },
    subject: control._subjects.array
  });
  const updateValues = React.useCallback((updatedFieldArrayValues) => {
    _actioned.current = true;
    control._updateFieldArray(name, updatedFieldArrayValues);
  }, [control, name]);
  const append2 = (value, options) => {
    const appendValue = convertToArrayPayload(cloneObject(value));
    const updatedFieldArrayValues = appendAt(control._getFieldArray(name), appendValue);
    control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);
    ids.current = appendAt(ids.current, appendValue.map(generateId));
    updateValues(updatedFieldArrayValues);
    setFields(updatedFieldArrayValues);
    control._updateFieldArray(name, updatedFieldArrayValues, appendAt, {
      argA: fillEmptyArray(value)
    });
  };
  const prepend = (value, options) => {
    const prependValue = convertToArrayPayload(cloneObject(value));
    const updatedFieldArrayValues = prependAt(control._getFieldArray(name), prependValue);
    control._names.focus = getFocusFieldName(name, 0, options);
    ids.current = prependAt(ids.current, prependValue.map(generateId));
    updateValues(updatedFieldArrayValues);
    setFields(updatedFieldArrayValues);
    control._updateFieldArray(name, updatedFieldArrayValues, prependAt, {
      argA: fillEmptyArray(value)
    });
  };
  const remove2 = (index2) => {
    const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index2);
    ids.current = removeArrayAt(ids.current, index2);
    updateValues(updatedFieldArrayValues);
    setFields(updatedFieldArrayValues);
    control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {
      argA: index2
    });
  };
  const insert$1 = (index2, value, options) => {
    const insertValue = convertToArrayPayload(cloneObject(value));
    const updatedFieldArrayValues = insert(control._getFieldArray(name), index2, insertValue);
    control._names.focus = getFocusFieldName(name, index2, options);
    ids.current = insert(ids.current, index2, insertValue.map(generateId));
    updateValues(updatedFieldArrayValues);
    setFields(updatedFieldArrayValues);
    control._updateFieldArray(name, updatedFieldArrayValues, insert, {
      argA: index2,
      argB: fillEmptyArray(value)
    });
  };
  const swap2 = (indexA, indexB) => {
    const updatedFieldArrayValues = control._getFieldArray(name);
    swapArrayAt(updatedFieldArrayValues, indexA, indexB);
    swapArrayAt(ids.current, indexA, indexB);
    updateValues(updatedFieldArrayValues);
    setFields(updatedFieldArrayValues);
    control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {
      argA: indexA,
      argB: indexB
    }, false);
  };
  const move = (from, to) => {
    const updatedFieldArrayValues = control._getFieldArray(name);
    moveArrayAt(updatedFieldArrayValues, from, to);
    moveArrayAt(ids.current, from, to);
    updateValues(updatedFieldArrayValues);
    setFields(updatedFieldArrayValues);
    control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {
      argA: from,
      argB: to
    }, false);
  };
  const update = (index2, value) => {
    const updateValue = cloneObject(value);
    const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index2, updateValue);
    ids.current = [...updatedFieldArrayValues].map((item, i2) => !item || i2 === index2 ? generateId() : ids.current[i2]);
    updateValues(updatedFieldArrayValues);
    setFields([...updatedFieldArrayValues]);
    control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {
      argA: index2,
      argB: updateValue
    }, true, false);
  };
  const replace = (value) => {
    const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));
    ids.current = updatedFieldArrayValues.map(generateId);
    updateValues([...updatedFieldArrayValues]);
    setFields([...updatedFieldArrayValues]);
    control._updateFieldArray(name, [...updatedFieldArrayValues], (data2) => data2, {}, true, false);
  };
  React.useEffect(() => {
    control._state.action = false;
    isWatched(name, control._names) && control._subjects.state.next({
      ...control._formState
    });
    if (_actioned.current && (!getValidationModes(control._options.mode).isOnSubmit || control._formState.isSubmitted)) {
      if (control._options.resolver) {
        control._executeSchema([name]).then((result) => {
          const error = get2(result.errors, name);
          const existingError = get2(control._formState.errors, name);
          if (existingError ? !error && existingError.type || error && (existingError.type !== error.type || existingError.message !== error.message) : error && error.type) {
            error ? set2(control._formState.errors, name, error) : unset(control._formState.errors, name);
            control._subjects.state.next({
              errors: control._formState.errors
            });
          }
        });
      } else {
        const field = get2(control._fields, name);
        if (field && field._f && !(getValidationModes(control._options.reValidateMode).isOnSubmit && getValidationModes(control._options.mode).isOnSubmit)) {
          validateField(field, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) && control._subjects.state.next({
            errors: updateFieldArrayRootError(control._formState.errors, error, name)
          }));
        }
      }
    }
    control._subjects.values.next({
      name,
      values: { ...control._formValues }
    });
    control._names.focus && iterateFieldsByAction(control._fields, (ref, key) => {
      if (control._names.focus && key.startsWith(control._names.focus) && ref.focus) {
        ref.focus();
        return 1;
      }
      return;
    });
    control._names.focus = "";
    control._updateValid();
    _actioned.current = false;
  }, [fields, name, control]);
  React.useEffect(() => {
    !get2(control._formValues, name) && control._updateFieldArray(name);
    return () => {
      (control._options.shouldUnregister || shouldUnregister) && control.unregister(name);
    };
  }, [name, control, keyName, shouldUnregister]);
  return {
    swap: React.useCallback(swap2, [updateValues, name, control]),
    move: React.useCallback(move, [updateValues, name, control]),
    prepend: React.useCallback(prepend, [updateValues, name, control]),
    append: React.useCallback(append2, [updateValues, name, control]),
    remove: React.useCallback(remove2, [updateValues, name, control]),
    insert: React.useCallback(insert$1, [updateValues, name, control]),
    update: React.useCallback(update, [updateValues, name, control]),
    replace: React.useCallback(replace, [updateValues, name, control]),
    fields: React.useMemo(() => fields.map((field, index2) => ({
      ...field,
      [keyName]: ids.current[index2] || generateId()
    })), [fields, keyName])
  };
}
var createSubject = () => {
  let _observers = [];
  const next = (value) => {
    for (const observer of _observers) {
      observer.next && observer.next(value);
    }
  };
  const subscribe = (observer) => {
    _observers.push(observer);
    return {
      unsubscribe: () => {
        _observers = _observers.filter((o2) => o2 !== observer);
      }
    };
  };
  const unsubscribe = () => {
    _observers = [];
  };
  return {
    get observers() {
      return _observers;
    },
    next,
    subscribe,
    unsubscribe
  };
};
var isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);
function deepEqual(object1, object2) {
  if (isPrimitive(object1) || isPrimitive(object2)) {
    return object1 === object2;
  }
  if (isDateObject(object1) && isDateObject(object2)) {
    return object1.getTime() === object2.getTime();
  }
  const keys1 = Object.keys(object1);
  const keys2 = Object.keys(object2);
  if (keys1.length !== keys2.length) {
    return false;
  }
  for (const key of keys1) {
    const val1 = object1[key];
    if (!keys2.includes(key)) {
      return false;
    }
    if (key !== "ref") {
      const val2 = object2[key];
      if (isDateObject(val1) && isDateObject(val2) || isObject(val1) && isObject(val2) || Array.isArray(val1) && Array.isArray(val2) ? !deepEqual(val1, val2) : val1 !== val2) {
        return false;
      }
    }
  }
  return true;
}
var isMultipleSelect = (element) => element.type === `select-multiple`;
var isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);
var live = (ref) => isHTMLElement(ref) && ref.isConnected;
var objectHasFunction = (data2) => {
  for (const key in data2) {
    if (isFunction(data2[key])) {
      return true;
    }
  }
  return false;
};
function markFieldsDirty(data2, fields = {}) {
  const isParentNodeArray = Array.isArray(data2);
  if (isObject(data2) || isParentNodeArray) {
    for (const key in data2) {
      if (Array.isArray(data2[key]) || isObject(data2[key]) && !objectHasFunction(data2[key])) {
        fields[key] = Array.isArray(data2[key]) ? [] : {};
        markFieldsDirty(data2[key], fields[key]);
      } else if (!isNullOrUndefined(data2[key])) {
        fields[key] = true;
      }
    }
  }
  return fields;
}
function getDirtyFieldsFromDefaultValues(data2, formValues, dirtyFieldsFromValues) {
  const isParentNodeArray = Array.isArray(data2);
  if (isObject(data2) || isParentNodeArray) {
    for (const key in data2) {
      if (Array.isArray(data2[key]) || isObject(data2[key]) && !objectHasFunction(data2[key])) {
        if (isUndefined(formValues) || isPrimitive(dirtyFieldsFromValues[key])) {
          dirtyFieldsFromValues[key] = Array.isArray(data2[key]) ? markFieldsDirty(data2[key], []) : { ...markFieldsDirty(data2[key]) };
        } else {
          getDirtyFieldsFromDefaultValues(data2[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);
        }
      } else {
        dirtyFieldsFromValues[key] = !deepEqual(data2[key], formValues[key]);
      }
    }
  }
  return dirtyFieldsFromValues;
}
var getDirtyFields = (defaultValues2, formValues) => getDirtyFieldsFromDefaultValues(defaultValues2, formValues, markFieldsDirty(formValues));
var getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value) ? value : valueAsNumber ? value === "" ? NaN : value ? +value : value : valueAsDate && isString(value) ? new Date(value) : setValueAs ? setValueAs(value) : value;
function getFieldValue(_f) {
  const ref = _f.ref;
  if (_f.refs ? _f.refs.every((ref2) => ref2.disabled) : ref.disabled) {
    return;
  }
  if (isFileInput(ref)) {
    return ref.files;
  }
  if (isRadioInput(ref)) {
    return getRadioValue(_f.refs).value;
  }
  if (isMultipleSelect(ref)) {
    return [...ref.selectedOptions].map(({ value }) => value);
  }
  if (isCheckBoxInput(ref)) {
    return getCheckboxValue(_f.refs).value;
  }
  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);
}
var getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {
  const fields = {};
  for (const name of fieldsNames) {
    const field = get2(_fields, name);
    field && set2(fields, name, field._f);
  }
  return {
    criteriaMode,
    names: [...fieldsNames],
    fields,
    shouldUseNativeValidation
  };
};
var getRuleValue = (rule) => isUndefined(rule) ? rule : isRegex(rule) ? rule.source : isObject(rule) ? isRegex(rule.value) ? rule.value.source : rule.value : rule;
var hasValidation = (options) => options.mount && (options.required || options.min || options.max || options.maxLength || options.minLength || options.pattern || options.validate);
function schemaErrorLookup(errors, _fields, name) {
  const error = get2(errors, name);
  if (error || isKey(name)) {
    return {
      error,
      name
    };
  }
  const names = name.split(".");
  while (names.length) {
    const fieldName = names.join(".");
    const field = get2(_fields, fieldName);
    const foundError = get2(errors, fieldName);
    if (field && !Array.isArray(field) && name !== fieldName) {
      return { name };
    }
    if (foundError && foundError.type) {
      return {
        name: fieldName,
        error: foundError
      };
    }
    names.pop();
  }
  return {
    name
  };
}
var skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode2) => {
  if (mode2.isOnAll) {
    return false;
  } else if (!isSubmitted && mode2.isOnTouch) {
    return !(isTouched || isBlurEvent);
  } else if (isSubmitted ? reValidateMode.isOnBlur : mode2.isOnBlur) {
    return !isBlurEvent;
  } else if (isSubmitted ? reValidateMode.isOnChange : mode2.isOnChange) {
    return isBlurEvent;
  }
  return true;
};
var unsetEmptyArray = (ref, name) => !compact(get2(ref, name)).length && unset(ref, name);
const defaultOptions = {
  mode: VALIDATION_MODE.onSubmit,
  reValidateMode: VALIDATION_MODE.onChange,
  shouldFocusError: true
};
function createFormControl(props = {}) {
  let _options = {
    ...defaultOptions,
    ...props
  };
  let _formState = {
    submitCount: 0,
    isDirty: false,
    isLoading: isFunction(_options.defaultValues),
    isValidating: false,
    isSubmitted: false,
    isSubmitting: false,
    isSubmitSuccessful: false,
    isValid: false,
    touchedFields: {},
    dirtyFields: {},
    validatingFields: {},
    errors: _options.errors || {},
    disabled: _options.disabled || false
  };
  let _fields = {};
  let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values) ? cloneObject(_options.defaultValues || _options.values) || {} : {};
  let _formValues = _options.shouldUnregister ? {} : cloneObject(_defaultValues);
  let _state = {
    action: false,
    mount: false,
    watch: false
  };
  let _names = {
    mount: /* @__PURE__ */ new Set(),
    unMount: /* @__PURE__ */ new Set(),
    array: /* @__PURE__ */ new Set(),
    watch: /* @__PURE__ */ new Set()
  };
  let delayErrorCallback;
  let timer2 = 0;
  const _proxyFormState = {
    isDirty: false,
    dirtyFields: false,
    validatingFields: false,
    touchedFields: false,
    isValidating: false,
    isValid: false,
    errors: false
  };
  const _subjects = {
    values: createSubject(),
    array: createSubject(),
    state: createSubject()
  };
  const validationModeBeforeSubmit = getValidationModes(_options.mode);
  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);
  const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;
  const debounce2 = (callback) => (wait) => {
    clearTimeout(timer2);
    timer2 = setTimeout(callback, wait);
  };
  const _updateValid = async (shouldUpdateValid) => {
    if (_proxyFormState.isValid || shouldUpdateValid) {
      const isValid2 = _options.resolver ? isEmptyObject((await _executeSchema()).errors) : await executeBuiltInValidation(_fields, true);
      if (isValid2 !== _formState.isValid) {
        _subjects.state.next({
          isValid: isValid2
        });
      }
    }
  };
  const _updateIsValidating = (names, isValidating) => {
    if (_proxyFormState.isValidating || _proxyFormState.validatingFields) {
      (names || Array.from(_names.mount)).forEach((name) => {
        if (name) {
          isValidating ? set2(_formState.validatingFields, name, isValidating) : unset(_formState.validatingFields, name);
        }
      });
      _subjects.state.next({
        validatingFields: _formState.validatingFields,
        isValidating: !isEmptyObject(_formState.validatingFields)
      });
    }
  };
  const _updateFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {
    if (args && method) {
      _state.action = true;
      if (shouldUpdateFieldsAndState && Array.isArray(get2(_fields, name))) {
        const fieldValues = method(get2(_fields, name), args.argA, args.argB);
        shouldSetValues && set2(_fields, name, fieldValues);
      }
      if (shouldUpdateFieldsAndState && Array.isArray(get2(_formState.errors, name))) {
        const errors = method(get2(_formState.errors, name), args.argA, args.argB);
        shouldSetValues && set2(_formState.errors, name, errors);
        unsetEmptyArray(_formState.errors, name);
      }
      if (_proxyFormState.touchedFields && shouldUpdateFieldsAndState && Array.isArray(get2(_formState.touchedFields, name))) {
        const touchedFields = method(get2(_formState.touchedFields, name), args.argA, args.argB);
        shouldSetValues && set2(_formState.touchedFields, name, touchedFields);
      }
      if (_proxyFormState.dirtyFields) {
        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);
      }
      _subjects.state.next({
        name,
        isDirty: _getDirty(name, values),
        dirtyFields: _formState.dirtyFields,
        errors: _formState.errors,
        isValid: _formState.isValid
      });
    } else {
      set2(_formValues, name, values);
    }
  };
  const updateErrors = (name, error) => {
    set2(_formState.errors, name, error);
    _subjects.state.next({
      errors: _formState.errors
    });
  };
  const _setErrors = (errors) => {
    _formState.errors = errors;
    _subjects.state.next({
      errors: _formState.errors,
      isValid: false
    });
  };
  const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {
    const field = get2(_fields, name);
    if (field) {
      const defaultValue2 = get2(_formValues, name, isUndefined(value) ? get2(_defaultValues, name) : value);
      isUndefined(defaultValue2) || ref && ref.defaultChecked || shouldSkipSetValueAs ? set2(_formValues, name, shouldSkipSetValueAs ? defaultValue2 : getFieldValue(field._f)) : setFieldValue(name, defaultValue2);
      _state.mount && _updateValid();
    }
  };
  const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {
    let shouldUpdateField = false;
    let isPreviousDirty = false;
    const output = {
      name
    };
    const disabledField = !!(get2(_fields, name) && get2(_fields, name)._f.disabled);
    if (!isBlurEvent || shouldDirty) {
      if (_proxyFormState.isDirty) {
        isPreviousDirty = _formState.isDirty;
        _formState.isDirty = output.isDirty = _getDirty();
        shouldUpdateField = isPreviousDirty !== output.isDirty;
      }
      const isCurrentFieldPristine = disabledField || deepEqual(get2(_defaultValues, name), fieldValue);
      isPreviousDirty = !!(!disabledField && get2(_formState.dirtyFields, name));
      isCurrentFieldPristine || disabledField ? unset(_formState.dirtyFields, name) : set2(_formState.dirtyFields, name, true);
      output.dirtyFields = _formState.dirtyFields;
      shouldUpdateField = shouldUpdateField || _proxyFormState.dirtyFields && isPreviousDirty !== !isCurrentFieldPristine;
    }
    if (isBlurEvent) {
      const isPreviousFieldTouched = get2(_formState.touchedFields, name);
      if (!isPreviousFieldTouched) {
        set2(_formState.touchedFields, name, isBlurEvent);
        output.touchedFields = _formState.touchedFields;
        shouldUpdateField = shouldUpdateField || _proxyFormState.touchedFields && isPreviousFieldTouched !== isBlurEvent;
      }
    }
    shouldUpdateField && shouldRender && _subjects.state.next(output);
    return shouldUpdateField ? output : {};
  };
  const shouldRenderByError = (name, isValid2, error, fieldState) => {
    const previousFieldError = get2(_formState.errors, name);
    const shouldUpdateValid = _proxyFormState.isValid && isBoolean(isValid2) && _formState.isValid !== isValid2;
    if (props.delayError && error) {
      delayErrorCallback = debounce2(() => updateErrors(name, error));
      delayErrorCallback(props.delayError);
    } else {
      clearTimeout(timer2);
      delayErrorCallback = null;
      error ? set2(_formState.errors, name, error) : unset(_formState.errors, name);
    }
    if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) || !isEmptyObject(fieldState) || shouldUpdateValid) {
      const updatedFormState = {
        ...fieldState,
        ...shouldUpdateValid && isBoolean(isValid2) ? { isValid: isValid2 } : {},
        errors: _formState.errors,
        name
      };
      _formState = {
        ..._formState,
        ...updatedFormState
      };
      _subjects.state.next(updatedFormState);
    }
  };
  const _executeSchema = async (name) => {
    _updateIsValidating(name, true);
    const result = await _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));
    _updateIsValidating(name);
    return result;
  };
  const executeSchemaAndUpdateState = async (names) => {
    const { errors } = await _executeSchema(names);
    if (names) {
      for (const name of names) {
        const error = get2(errors, name);
        error ? set2(_formState.errors, name, error) : unset(_formState.errors, name);
      }
    } else {
      _formState.errors = errors;
    }
    return errors;
  };
  const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {
    valid: true
  }) => {
    for (const name in fields) {
      const field = fields[name];
      if (field) {
        const { _f, ...fieldValue } = field;
        if (_f) {
          const isFieldArrayRoot = _names.array.has(_f.name);
          _updateIsValidating([name], true);
          const fieldError = await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);
          _updateIsValidating([name]);
          if (fieldError[_f.name]) {
            context.valid = false;
            if (shouldOnlyCheckValid) {
              break;
            }
          }
          !shouldOnlyCheckValid && (get2(fieldError, _f.name) ? isFieldArrayRoot ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name) : set2(_formState.errors, _f.name, fieldError[_f.name]) : unset(_formState.errors, _f.name));
        }
        fieldValue && await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context);
      }
    }
    return context.valid;
  };
  const _removeUnmounted = () => {
    for (const name of _names.unMount) {
      const field = get2(_fields, name);
      field && (field._f.refs ? field._f.refs.every((ref) => !live(ref)) : !live(field._f.ref)) && unregister(name);
    }
    _names.unMount = /* @__PURE__ */ new Set();
  };
  const _getDirty = (name, data2) => (name && data2 && set2(_formValues, name, data2), !deepEqual(getValues(), _defaultValues));
  const _getWatch = (names, defaultValue2, isGlobal) => generateWatchOutput(names, _names, {
    ..._state.mount ? _formValues : isUndefined(defaultValue2) ? _defaultValues : isString(names) ? { [names]: defaultValue2 } : defaultValue2
  }, isGlobal, defaultValue2);
  const _getFieldArray = (name) => compact(get2(_state.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get2(_defaultValues, name, []) : []));
  const setFieldValue = (name, value, options = {}) => {
    const field = get2(_fields, name);
    let fieldValue = value;
    if (field) {
      const fieldReference = field._f;
      if (fieldReference) {
        !fieldReference.disabled && set2(_formValues, name, getFieldValueAs(value, fieldReference));
        fieldValue = isHTMLElement(fieldReference.ref) && isNullOrUndefined(value) ? "" : value;
        if (isMultipleSelect(fieldReference.ref)) {
          [...fieldReference.ref.options].forEach((optionRef) => optionRef.selected = fieldValue.includes(optionRef.value));
        } else if (fieldReference.refs) {
          if (isCheckBoxInput(fieldReference.ref)) {
            fieldReference.refs.length > 1 ? fieldReference.refs.forEach((checkboxRef) => (!checkboxRef.defaultChecked || !checkboxRef.disabled) && (checkboxRef.checked = Array.isArray(fieldValue) ? !!fieldValue.find((data2) => data2 === checkboxRef.value) : fieldValue === checkboxRef.value)) : fieldReference.refs[0] && (fieldReference.refs[0].checked = !!fieldValue);
          } else {
            fieldReference.refs.forEach((radioRef) => radioRef.checked = radioRef.value === fieldValue);
          }
        } else if (isFileInput(fieldReference.ref)) {
          fieldReference.ref.value = "";
        } else {
          fieldReference.ref.value = fieldValue;
          if (!fieldReference.ref.type) {
            _subjects.values.next({
              name,
              values: { ..._formValues }
            });
          }
        }
      }
    }
    (options.shouldDirty || options.shouldTouch) && updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);
    options.shouldValidate && trigger(name);
  };
  const setValues = (name, value, options) => {
    for (const fieldKey in value) {
      const fieldValue = value[fieldKey];
      const fieldName = `${name}.${fieldKey}`;
      const field = get2(_fields, fieldName);
      (_names.array.has(name) || !isPrimitive(fieldValue) || field && !field._f) && !isDateObject(fieldValue) ? setValues(fieldName, fieldValue, options) : setFieldValue(fieldName, fieldValue, options);
    }
  };
  const setValue = (name, value, options = {}) => {
    const field = get2(_fields, name);
    const isFieldArray = _names.array.has(name);
    const cloneValue = cloneObject(value);
    set2(_formValues, name, cloneValue);
    if (isFieldArray) {
      _subjects.array.next({
        name,
        values: { ..._formValues }
      });
      if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) && options.shouldDirty) {
        _subjects.state.next({
          name,
          dirtyFields: getDirtyFields(_defaultValues, _formValues),
          isDirty: _getDirty(name, cloneValue)
        });
      }
    } else {
      field && !field._f && !isNullOrUndefined(cloneValue) ? setValues(name, cloneValue, options) : setFieldValue(name, cloneValue, options);
    }
    isWatched(name, _names) && _subjects.state.next({ ..._formState });
    _subjects.values.next({
      name: _state.mount ? name : void 0,
      values: { ..._formValues }
    });
  };
  const onChange = async (event) => {
    _state.mount = true;
    const target = event.target;
    let name = target.name;
    let isFieldValueUpdated = true;
    const field = get2(_fields, name);
    const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);
    const _updateIsFieldValueUpdated = (fieldValue) => {
      isFieldValueUpdated = Number.isNaN(fieldValue) || fieldValue === get2(_formValues, name, fieldValue);
    };
    if (field) {
      let error;
      let isValid2;
      const fieldValue = getCurrentFieldValue();
      const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;
      const shouldSkipValidation = !hasValidation(field._f) && !_options.resolver && !get2(_formState.errors, name) && !field._f.deps || skipValidation(isBlurEvent, get2(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);
      const watched = isWatched(name, _names, isBlurEvent);
      set2(_formValues, name, fieldValue);
      if (isBlurEvent) {
        field._f.onBlur && field._f.onBlur(event);
        delayErrorCallback && delayErrorCallback(0);
      } else if (field._f.onChange) {
        field._f.onChange(event);
      }
      const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);
      const shouldRender = !isEmptyObject(fieldState) || watched;
      !isBlurEvent && _subjects.values.next({
        name,
        type: event.type,
        values: { ..._formValues }
      });
      if (shouldSkipValidation) {
        _proxyFormState.isValid && _updateValid();
        return shouldRender && _subjects.state.next({ name, ...watched ? {} : fieldState });
      }
      !isBlurEvent && watched && _subjects.state.next({ ..._formState });
      if (_options.resolver) {
        const { errors } = await _executeSchema([name]);
        _updateIsFieldValueUpdated(fieldValue);
        if (isFieldValueUpdated) {
          const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);
          const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);
          error = errorLookupResult.error;
          name = errorLookupResult.name;
          isValid2 = isEmptyObject(errors);
        }
      } else {
        _updateIsValidating([name], true);
        error = (await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];
        _updateIsValidating([name]);
        _updateIsFieldValueUpdated(fieldValue);
        if (isFieldValueUpdated) {
          if (error) {
            isValid2 = false;
          } else if (_proxyFormState.isValid) {
            isValid2 = await executeBuiltInValidation(_fields, true);
          }
        }
      }
      if (isFieldValueUpdated) {
        field._f.deps && trigger(field._f.deps);
        shouldRenderByError(name, isValid2, error, fieldState);
      }
    }
  };
  const _focusInput = (ref, key) => {
    if (get2(_formState.errors, key) && ref.focus) {
      ref.focus();
      return 1;
    }
    return;
  };
  const trigger = async (name, options = {}) => {
    let isValid2;
    let validationResult;
    const fieldNames = convertToArrayPayload(name);
    if (_options.resolver) {
      const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);
      isValid2 = isEmptyObject(errors);
      validationResult = name ? !fieldNames.some((name2) => get2(errors, name2)) : isValid2;
    } else if (name) {
      validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {
        const field = get2(_fields, fieldName);
        return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);
      }))).every(Boolean);
      !(!validationResult && !_formState.isValid) && _updateValid();
    } else {
      validationResult = isValid2 = await executeBuiltInValidation(_fields);
    }
    _subjects.state.next({
      ...!isString(name) || _proxyFormState.isValid && isValid2 !== _formState.isValid ? {} : { name },
      ..._options.resolver || !name ? { isValid: isValid2 } : {},
      errors: _formState.errors
    });
    options.shouldFocus && !validationResult && iterateFieldsByAction(_fields, _focusInput, name ? fieldNames : _names.mount);
    return validationResult;
  };
  const getValues = (fieldNames) => {
    const values = {
      ..._defaultValues,
      ..._state.mount ? _formValues : {}
    };
    return isUndefined(fieldNames) ? values : isString(fieldNames) ? get2(values, fieldNames) : fieldNames.map((name) => get2(values, name));
  };
  const getFieldState = (name, formState) => ({
    invalid: !!get2((formState || _formState).errors, name),
    isDirty: !!get2((formState || _formState).dirtyFields, name),
    isTouched: !!get2((formState || _formState).touchedFields, name),
    isValidating: !!get2((formState || _formState).validatingFields, name),
    error: get2((formState || _formState).errors, name)
  });
  const clearErrors = (name) => {
    name && convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName));
    _subjects.state.next({
      errors: name ? _formState.errors : {}
    });
  };
  const setError = (name, error, options) => {
    const ref = (get2(_fields, name, { _f: {} })._f || {}).ref;
    set2(_formState.errors, name, {
      ...error,
      ref
    });
    _subjects.state.next({
      name,
      errors: _formState.errors,
      isValid: false
    });
    options && options.shouldFocus && ref && ref.focus && ref.focus();
  };
  const watch = (name, defaultValue2) => isFunction(name) ? _subjects.values.subscribe({
    next: (payload) => name(_getWatch(void 0, defaultValue2), payload)
  }) : _getWatch(name, defaultValue2, true);
  const unregister = (name, options = {}) => {
    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {
      _names.mount.delete(fieldName);
      _names.array.delete(fieldName);
      if (!options.keepValue) {
        unset(_fields, fieldName);
        unset(_formValues, fieldName);
      }
      !options.keepError && unset(_formState.errors, fieldName);
      !options.keepDirty && unset(_formState.dirtyFields, fieldName);
      !options.keepTouched && unset(_formState.touchedFields, fieldName);
      !options.keepIsValidating && unset(_formState.validatingFields, fieldName);
      !_options.shouldUnregister && !options.keepDefaultValue && unset(_defaultValues, fieldName);
    }
    _subjects.values.next({
      values: { ..._formValues }
    });
    _subjects.state.next({
      ..._formState,
      ...!options.keepDirty ? {} : { isDirty: _getDirty() }
    });
    !options.keepIsValid && _updateValid();
  };
  const _updateDisabledField = ({ disabled, name, field, fields, value }) => {
    if (isBoolean(disabled)) {
      const inputValue = disabled ? void 0 : isUndefined(value) ? getFieldValue(field ? field._f : get2(fields, name)._f) : value;
      set2(_formValues, name, inputValue);
      updateTouchAndDirty(name, inputValue, false, false, true);
    }
  };
  const register = (name, options = {}) => {
    let field = get2(_fields, name);
    const disabledIsDefined = isBoolean(options.disabled);
    set2(_fields, name, {
      ...field || {},
      _f: {
        ...field && field._f ? field._f : { ref: { name } },
        name,
        mount: true,
        ...options
      }
    });
    _names.mount.add(name);
    if (field) {
      _updateDisabledField({
        field,
        disabled: options.disabled,
        name,
        value: options.value
      });
    } else {
      updateValidAndValue(name, true, options.value);
    }
    return {
      ...disabledIsDefined ? { disabled: options.disabled } : {},
      ..._options.progressive ? {
        required: !!options.required,
        min: getRuleValue(options.min),
        max: getRuleValue(options.max),
        minLength: getRuleValue(options.minLength),
        maxLength: getRuleValue(options.maxLength),
        pattern: getRuleValue(options.pattern)
      } : {},
      name,
      onChange,
      onBlur: onChange,
      ref: (ref) => {
        if (ref) {
          register(name, options);
          field = get2(_fields, name);
          const fieldRef = isUndefined(ref.value) ? ref.querySelectorAll ? ref.querySelectorAll("input,select,textarea")[0] || ref : ref : ref;
          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);
          const refs = field._f.refs || [];
          if (radioOrCheckbox ? refs.find((option) => option === fieldRef) : fieldRef === field._f.ref) {
            return;
          }
          set2(_fields, name, {
            _f: {
              ...field._f,
              ...radioOrCheckbox ? {
                refs: [
                  ...refs.filter(live),
                  fieldRef,
                  ...Array.isArray(get2(_defaultValues, name)) ? [{}] : []
                ],
                ref: { type: fieldRef.type, name }
              } : { ref: fieldRef }
            }
          });
          updateValidAndValue(name, false, void 0, fieldRef);
        } else {
          field = get2(_fields, name, {});
          if (field._f) {
            field._f.mount = false;
          }
          (_options.shouldUnregister || options.shouldUnregister) && !(isNameInFieldArray(_names.array, name) && _state.action) && _names.unMount.add(name);
        }
      }
    };
  };
  const _focusError = () => _options.shouldFocusError && iterateFieldsByAction(_fields, _focusInput, _names.mount);
  const _disableForm = (disabled) => {
    if (isBoolean(disabled)) {
      _subjects.state.next({ disabled });
      iterateFieldsByAction(_fields, (ref, name) => {
        let requiredDisabledState = disabled;
        const currentField = get2(_fields, name);
        if (currentField && isBoolean(currentField._f.disabled)) {
          requiredDisabledState || (requiredDisabledState = currentField._f.disabled);
        }
        ref.disabled = requiredDisabledState;
      }, 0, false);
    }
  };
  const handleSubmit = (onValid, onInvalid) => async (e3) => {
    let onValidError = void 0;
    if (e3) {
      e3.preventDefault && e3.preventDefault();
      e3.persist && e3.persist();
    }
    let fieldValues = cloneObject(_formValues);
    _subjects.state.next({
      isSubmitting: true
    });
    if (_options.resolver) {
      const { errors, values } = await _executeSchema();
      _formState.errors = errors;
      fieldValues = values;
    } else {
      await executeBuiltInValidation(_fields);
    }
    unset(_formState.errors, "root");
    if (isEmptyObject(_formState.errors)) {
      _subjects.state.next({
        errors: {}
      });
      try {
        await onValid(fieldValues, e3);
      } catch (error) {
        onValidError = error;
      }
    } else {
      if (onInvalid) {
        await onInvalid({ ..._formState.errors }, e3);
      }
      _focusError();
      setTimeout(_focusError);
    }
    _subjects.state.next({
      isSubmitted: true,
      isSubmitting: false,
      isSubmitSuccessful: isEmptyObject(_formState.errors) && !onValidError,
      submitCount: _formState.submitCount + 1,
      errors: _formState.errors
    });
    if (onValidError) {
      throw onValidError;
    }
  };
  const resetField = (name, options = {}) => {
    if (get2(_fields, name)) {
      if (isUndefined(options.defaultValue)) {
        setValue(name, cloneObject(get2(_defaultValues, name)));
      } else {
        setValue(name, options.defaultValue);
        set2(_defaultValues, name, cloneObject(options.defaultValue));
      }
      if (!options.keepTouched) {
        unset(_formState.touchedFields, name);
      }
      if (!options.keepDirty) {
        unset(_formState.dirtyFields, name);
        _formState.isDirty = options.defaultValue ? _getDirty(name, cloneObject(get2(_defaultValues, name))) : _getDirty();
      }
      if (!options.keepError) {
        unset(_formState.errors, name);
        _proxyFormState.isValid && _updateValid();
      }
      _subjects.state.next({ ..._formState });
    }
  };
  const _reset = (formValues, keepStateOptions = {}) => {
    const updatedValues = formValues ? cloneObject(formValues) : _defaultValues;
    const cloneUpdatedValues = cloneObject(updatedValues);
    const isEmptyResetValues = isEmptyObject(formValues);
    const values = isEmptyResetValues ? _defaultValues : cloneUpdatedValues;
    if (!keepStateOptions.keepDefaultValues) {
      _defaultValues = updatedValues;
    }
    if (!keepStateOptions.keepValues) {
      if (keepStateOptions.keepDirtyValues) {
        for (const fieldName of _names.mount) {
          get2(_formState.dirtyFields, fieldName) ? set2(values, fieldName, get2(_formValues, fieldName)) : setValue(fieldName, get2(values, fieldName));
        }
      } else {
        if (isWeb && isUndefined(formValues)) {
          for (const name of _names.mount) {
            const field = get2(_fields, name);
            if (field && field._f) {
              const fieldReference = Array.isArray(field._f.refs) ? field._f.refs[0] : field._f.ref;
              if (isHTMLElement(fieldReference)) {
                const form = fieldReference.closest("form");
                if (form) {
                  form.reset();
                  break;
                }
              }
            }
          }
        }
        _fields = {};
      }
      _formValues = props.shouldUnregister ? keepStateOptions.keepDefaultValues ? cloneObject(_defaultValues) : {} : cloneObject(values);
      _subjects.array.next({
        values: { ...values }
      });
      _subjects.values.next({
        values: { ...values }
      });
    }
    _names = {
      mount: keepStateOptions.keepDirtyValues ? _names.mount : /* @__PURE__ */ new Set(),
      unMount: /* @__PURE__ */ new Set(),
      array: /* @__PURE__ */ new Set(),
      watch: /* @__PURE__ */ new Set(),
      watchAll: false,
      focus: ""
    };
    _state.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid || !!keepStateOptions.keepDirtyValues;
    _state.watch = !!props.shouldUnregister;
    _subjects.state.next({
      submitCount: keepStateOptions.keepSubmitCount ? _formState.submitCount : 0,
      isDirty: isEmptyResetValues ? false : keepStateOptions.keepDirty ? _formState.isDirty : !!(keepStateOptions.keepDefaultValues && !deepEqual(formValues, _defaultValues)),
      isSubmitted: keepStateOptions.keepIsSubmitted ? _formState.isSubmitted : false,
      dirtyFields: isEmptyResetValues ? [] : keepStateOptions.keepDirtyValues ? keepStateOptions.keepDefaultValues && _formValues ? getDirtyFields(_defaultValues, _formValues) : _formState.dirtyFields : keepStateOptions.keepDefaultValues && formValues ? getDirtyFields(_defaultValues, formValues) : {},
      touchedFields: keepStateOptions.keepTouched ? _formState.touchedFields : {},
      errors: keepStateOptions.keepErrors ? _formState.errors : {},
      isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful ? _formState.isSubmitSuccessful : false,
      isSubmitting: false
    });
  };
  const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues) ? formValues(_formValues) : formValues, keepStateOptions);
  const setFocus = (name, options = {}) => {
    const field = get2(_fields, name);
    const fieldReference = field && field._f;
    if (fieldReference) {
      const fieldRef = fieldReference.refs ? fieldReference.refs[0] : fieldReference.ref;
      if (fieldRef.focus) {
        fieldRef.focus();
        options.shouldSelect && fieldRef.select();
      }
    }
  };
  const _updateFormState = (updatedFormState) => {
    _formState = {
      ..._formState,
      ...updatedFormState
    };
  };
  const _resetDefaultValues = () => isFunction(_options.defaultValues) && _options.defaultValues().then((values) => {
    reset(values, _options.resetOptions);
    _subjects.state.next({
      isLoading: false
    });
  });
  return {
    control: {
      register,
      unregister,
      getFieldState,
      handleSubmit,
      setError,
      _executeSchema,
      _getWatch,
      _getDirty,
      _updateValid,
      _removeUnmounted,
      _updateFieldArray,
      _updateDisabledField,
      _getFieldArray,
      _reset,
      _resetDefaultValues,
      _updateFormState,
      _disableForm,
      _subjects,
      _proxyFormState,
      _setErrors,
      get _fields() {
        return _fields;
      },
      get _formValues() {
        return _formValues;
      },
      get _state() {
        return _state;
      },
      set _state(value) {
        _state = value;
      },
      get _defaultValues() {
        return _defaultValues;
      },
      get _names() {
        return _names;
      },
      set _names(value) {
        _names = value;
      },
      get _formState() {
        return _formState;
      },
      set _formState(value) {
        _formState = value;
      },
      get _options() {
        return _options;
      },
      set _options(value) {
        _options = {
          ..._options,
          ...value
        };
      }
    },
    trigger,
    register,
    handleSubmit,
    watch,
    setValue,
    getValues,
    reset,
    resetField,
    clearErrors,
    unregister,
    setError,
    setFocus,
    getFieldState
  };
}
function useForm(props = {}) {
  const _formControl = React.useRef();
  const _values = React.useRef();
  const [formState, updateFormState] = React.useState({
    isDirty: false,
    isValidating: false,
    isLoading: isFunction(props.defaultValues),
    isSubmitted: false,
    isSubmitting: false,
    isSubmitSuccessful: false,
    isValid: false,
    submitCount: 0,
    dirtyFields: {},
    touchedFields: {},
    validatingFields: {},
    errors: props.errors || {},
    disabled: props.disabled || false,
    defaultValues: isFunction(props.defaultValues) ? void 0 : props.defaultValues
  });
  if (!_formControl.current) {
    _formControl.current = {
      ...createFormControl(props),
      formState
    };
  }
  const control = _formControl.current.control;
  control._options = props;
  useSubscribe({
    subject: control._subjects.state,
    next: (value) => {
      if (shouldRenderFormState(value, control._proxyFormState, control._updateFormState, true)) {
        updateFormState({ ...control._formState });
      }
    }
  });
  React.useEffect(() => control._disableForm(props.disabled), [control, props.disabled]);
  React.useEffect(() => {
    if (control._proxyFormState.isDirty) {
      const isDirty2 = control._getDirty();
      if (isDirty2 !== formState.isDirty) {
        control._subjects.state.next({
          isDirty: isDirty2
        });
      }
    }
  }, [control, formState.isDirty]);
  React.useEffect(() => {
    if (props.values && !deepEqual(props.values, _values.current)) {
      control._reset(props.values, control._options.resetOptions);
      _values.current = props.values;
      updateFormState((state) => ({ ...state }));
    } else {
      control._resetDefaultValues();
    }
  }, [props.values, control]);
  React.useEffect(() => {
    if (props.errors) {
      control._setErrors(props.errors);
    }
  }, [props.errors, control]);
  React.useEffect(() => {
    if (!control._state.mount) {
      control._updateValid();
      control._state.mount = true;
    }
    if (control._state.watch) {
      control._state.watch = false;
      control._subjects.state.next({ ...control._formState });
    }
    control._removeUnmounted();
  });
  React.useEffect(() => {
    props.shouldUnregister && control._subjects.values.next({
      values: control._getWatch()
    });
  }, [props.shouldUnregister, control]);
  _formControl.current.formState = getProxyFormState(formState, control);
  return _formControl.current;
}
var t$1 = function(e3, t2, i2) {
  if (e3 && "reportValidity" in e3) {
    var n2 = get2(i2, t2);
    e3.setCustomValidity(n2 && n2.message || ""), e3.reportValidity();
  }
}, i = function(r2, e3) {
  var i2 = function(i3) {
    var n3 = e3.fields[i3];
    n3 && n3.ref && "reportValidity" in n3.ref ? t$1(n3.ref, i3, r2) : n3.refs && n3.refs.forEach(function(e4) {
      return t$1(e4, i3, r2);
    });
  };
  for (var n2 in e3.fields)
    i2(n2);
}, n$1 = function(t2, n2) {
  n2.shouldUseNativeValidation && i(t2, n2);
  var f2 = {};
  for (var a2 in t2) {
    var s2 = get2(n2.fields, a2), u2 = Object.assign(t2[a2] || {}, { ref: s2 && s2.ref });
    if (o(n2.names || Object.keys(t2), a2)) {
      var c2 = Object.assign({}, get2(f2, a2));
      set2(c2, "root", u2), set2(f2, a2, c2);
    } else
      set2(f2, a2, u2);
  }
  return f2;
}, o = function(r2, e3) {
  return r2.some(function(r3) {
    return r3.startsWith(e3 + ".");
  });
};
var n = function(e3, o2) {
  for (var n2 = {}; e3.length; ) {
    var t2 = e3[0], s2 = t2.code, i2 = t2.message, a2 = t2.path.join(".");
    if (!n2[a2])
      if ("unionErrors" in t2) {
        var u2 = t2.unionErrors[0].errors[0];
        n2[a2] = { message: u2.message, type: u2.code };
      } else
        n2[a2] = { message: i2, type: s2 };
    if ("unionErrors" in t2 && t2.unionErrors.forEach(function(r2) {
      return r2.errors.forEach(function(r3) {
        return e3.push(r3);
      });
    }), o2) {
      var c2 = n2[a2].types, f2 = c2 && c2[t2.code];
      n2[a2] = appendErrors(a2, o2, n2, s2, f2 ? [].concat(f2, t2.message) : t2.message);
    }
    e3.shift();
  }
  return n2;
}, t = function(r2, t2, s2) {
  return void 0 === s2 && (s2 = {}), function(i$1, a2, u2) {
    try {
      return Promise.resolve(function(o2, n2) {
        try {
          var a3 = Promise.resolve(r2["sync" === s2.mode ? "parse" : "parseAsync"](i$1, t2)).then(function(r3) {
            return u2.shouldUseNativeValidation && i({}, u2), { errors: {}, values: s2.raw ? i$1 : r3 };
          });
        } catch (r3) {
          return n2(r3);
        }
        return a3 && a3.then ? a3.then(void 0, n2) : a3;
      }(0, function(r3) {
        if (function(r4) {
          return null != r4.errors;
        }(r3))
          return { values: {}, errors: n$1(n(r3.errors, !u2.shouldUseNativeValidation && "all" === u2.criteriaMode), u2) };
        throw r3;
      }));
    } catch (r3) {
      return Promise.reject(r3);
    }
  };
};
var util;
(function(util2) {
  util2.assertEqual = (val) => val;
  function assertIs(_arg) {
  }
  util2.assertIs = assertIs;
  function assertNever(_x) {
    throw new Error();
  }
  util2.assertNever = assertNever;
  util2.arrayToEnum = (items2) => {
    const obj = {};
    for (const item of items2) {
      obj[item] = item;
    }
    return obj;
  };
  util2.getValidEnumValues = (obj) => {
    const validKeys = util2.objectKeys(obj).filter((k2) => typeof obj[obj[k2]] !== "number");
    const filtered = {};
    for (const k2 of validKeys) {
      filtered[k2] = obj[k2];
    }
    return util2.objectValues(filtered);
  };
  util2.objectValues = (obj) => {
    return util2.objectKeys(obj).map(function(e3) {
      return obj[e3];
    });
  };
  util2.objectKeys = typeof Object.keys === "function" ? (obj) => Object.keys(obj) : (object2) => {
    const keys2 = [];
    for (const key in object2) {
      if (Object.prototype.hasOwnProperty.call(object2, key)) {
        keys2.push(key);
      }
    }
    return keys2;
  };
  util2.find = (arr, checker) => {
    for (const item of arr) {
      if (checker(item))
        return item;
    }
    return void 0;
  };
  util2.isInteger = typeof Number.isInteger === "function" ? (val) => Number.isInteger(val) : (val) => typeof val === "number" && isFinite(val) && Math.floor(val) === val;
  function joinValues(array2, separator = " | ") {
    return array2.map((val) => typeof val === "string" ? `'${val}'` : val).join(separator);
  }
  util2.joinValues = joinValues;
  util2.jsonStringifyReplacer = (_, value) => {
    if (typeof value === "bigint") {
      return value.toString();
    }
    return value;
  };
})(util || (util = {}));
var objectUtil;
(function(objectUtil2) {
  objectUtil2.mergeShapes = (first, second2) => {
    return {
      ...first,
      ...second2
      // second overwrites first
    };
  };
})(objectUtil || (objectUtil = {}));
const ZodParsedType = util.arrayToEnum([
  "string",
  "nan",
  "number",
  "integer",
  "float",
  "boolean",
  "date",
  "bigint",
  "symbol",
  "function",
  "undefined",
  "null",
  "array",
  "object",
  "unknown",
  "promise",
  "void",
  "never",
  "map",
  "set"
]);
const getParsedType = (data2) => {
  const t2 = typeof data2;
  switch (t2) {
    case "undefined":
      return ZodParsedType.undefined;
    case "string":
      return ZodParsedType.string;
    case "number":
      return isNaN(data2) ? ZodParsedType.nan : ZodParsedType.number;
    case "boolean":
      return ZodParsedType.boolean;
    case "function":
      return ZodParsedType.function;
    case "bigint":
      return ZodParsedType.bigint;
    case "symbol":
      return ZodParsedType.symbol;
    case "object":
      if (Array.isArray(data2)) {
        return ZodParsedType.array;
      }
      if (data2 === null) {
        return ZodParsedType.null;
      }
      if (data2.then && typeof data2.then === "function" && data2.catch && typeof data2.catch === "function") {
        return ZodParsedType.promise;
      }
      if (typeof Map !== "undefined" && data2 instanceof Map) {
        return ZodParsedType.map;
      }
      if (typeof Set !== "undefined" && data2 instanceof Set) {
        return ZodParsedType.set;
      }
      if (typeof Date !== "undefined" && data2 instanceof Date) {
        return ZodParsedType.date;
      }
      return ZodParsedType.object;
    default:
      return ZodParsedType.unknown;
  }
};
const ZodIssueCode = util.arrayToEnum([
  "invalid_type",
  "invalid_literal",
  "custom",
  "invalid_union",
  "invalid_union_discriminator",
  "invalid_enum_value",
  "unrecognized_keys",
  "invalid_arguments",
  "invalid_return_type",
  "invalid_date",
  "invalid_string",
  "too_small",
  "too_big",
  "invalid_intersection_types",
  "not_multiple_of",
  "not_finite"
]);
const quotelessJson = (obj) => {
  const json = JSON.stringify(obj, null, 2);
  return json.replace(/"([^"]+)":/g, "$1:");
};
class ZodError extends Error {
  constructor(issues) {
    super();
    this.issues = [];
    this.addIssue = (sub) => {
      this.issues = [...this.issues, sub];
    };
    this.addIssues = (subs = []) => {
      this.issues = [...this.issues, ...subs];
    };
    const actualProto = new.target.prototype;
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(this, actualProto);
    } else {
      this.__proto__ = actualProto;
    }
    this.name = "ZodError";
    this.issues = issues;
  }
  get errors() {
    return this.issues;
  }
  format(_mapper) {
    const mapper = _mapper || function(issue) {
      return issue.message;
    };
    const fieldErrors = { _errors: [] };
    const processError = (error) => {
      for (const issue of error.issues) {
        if (issue.code === "invalid_union") {
          issue.unionErrors.map(processError);
        } else if (issue.code === "invalid_return_type") {
          processError(issue.returnTypeError);
        } else if (issue.code === "invalid_arguments") {
          processError(issue.argumentsError);
        } else if (issue.path.length === 0) {
          fieldErrors._errors.push(mapper(issue));
        } else {
          let curr = fieldErrors;
          let i2 = 0;
          while (i2 < issue.path.length) {
            const el2 = issue.path[i2];
            const terminal = i2 === issue.path.length - 1;
            if (!terminal) {
              curr[el2] = curr[el2] || { _errors: [] };
            } else {
              curr[el2] = curr[el2] || { _errors: [] };
              curr[el2]._errors.push(mapper(issue));
            }
            curr = curr[el2];
            i2++;
          }
        }
      }
    };
    processError(this);
    return fieldErrors;
  }
  toString() {
    return this.message;
  }
  get message() {
    return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);
  }
  get isEmpty() {
    return this.issues.length === 0;
  }
  flatten(mapper = (issue) => issue.message) {
    const fieldErrors = {};
    const formErrors = [];
    for (const sub of this.issues) {
      if (sub.path.length > 0) {
        fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];
        fieldErrors[sub.path[0]].push(mapper(sub));
      } else {
        formErrors.push(mapper(sub));
      }
    }
    return { formErrors, fieldErrors };
  }
  get formErrors() {
    return this.flatten();
  }
}
ZodError.create = (issues) => {
  const error = new ZodError(issues);
  return error;
};
const errorMap = (issue, _ctx) => {
  let message;
  switch (issue.code) {
    case ZodIssueCode.invalid_type:
      if (issue.received === ZodParsedType.undefined) {
        message = "Required";
      } else {
        message = `Expected ${issue.expected}, received ${issue.received}`;
      }
      break;
    case ZodIssueCode.invalid_literal:
      message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;
      break;
    case ZodIssueCode.unrecognized_keys:
      message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, ", ")}`;
      break;
    case ZodIssueCode.invalid_union:
      message = `Invalid input`;
      break;
    case ZodIssueCode.invalid_union_discriminator:
      message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;
      break;
    case ZodIssueCode.invalid_enum_value:
      message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;
      break;
    case ZodIssueCode.invalid_arguments:
      message = `Invalid function arguments`;
      break;
    case ZodIssueCode.invalid_return_type:
      message = `Invalid function return type`;
      break;
    case ZodIssueCode.invalid_date:
      message = `Invalid date`;
      break;
    case ZodIssueCode.invalid_string:
      if (typeof issue.validation === "object") {
        if ("includes" in issue.validation) {
          message = `Invalid input: must include "${issue.validation.includes}"`;
          if (typeof issue.validation.position === "number") {
            message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;
          }
        } else if ("startsWith" in issue.validation) {
          message = `Invalid input: must start with "${issue.validation.startsWith}"`;
        } else if ("endsWith" in issue.validation) {
          message = `Invalid input: must end with "${issue.validation.endsWith}"`;
        } else {
          util.assertNever(issue.validation);
        }
      } else if (issue.validation !== "regex") {
        message = `Invalid ${issue.validation}`;
      } else {
        message = "Invalid";
      }
      break;
    case ZodIssueCode.too_small:
      if (issue.type === "array")
        message = `Array must contain ${issue.exact ? "exactly" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;
      else if (issue.type === "string")
        message = `String must contain ${issue.exact ? "exactly" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;
      else if (issue.type === "number")
        message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;
      else if (issue.type === "date")
        message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;
      else
        message = "Invalid input";
      break;
    case ZodIssueCode.too_big:
      if (issue.type === "array")
        message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;
      else if (issue.type === "string")
        message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;
      else if (issue.type === "number")
        message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;
      else if (issue.type === "bigint")
        message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;
      else if (issue.type === "date")
        message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;
      else
        message = "Invalid input";
      break;
    case ZodIssueCode.custom:
      message = `Invalid input`;
      break;
    case ZodIssueCode.invalid_intersection_types:
      message = `Intersection results could not be merged`;
      break;
    case ZodIssueCode.not_multiple_of:
      message = `Number must be a multiple of ${issue.multipleOf}`;
      break;
    case ZodIssueCode.not_finite:
      message = "Number must be finite";
      break;
    default:
      message = _ctx.defaultError;
      util.assertNever(issue);
  }
  return { message };
};
let overrideErrorMap = errorMap;
function setErrorMap(map2) {
  overrideErrorMap = map2;
}
function getErrorMap() {
  return overrideErrorMap;
}
const makeIssue = (params) => {
  const { data: data2, path, errorMaps, issueData } = params;
  const fullPath = [...path, ...issueData.path || []];
  const fullIssue = {
    ...issueData,
    path: fullPath
  };
  let errorMessage = "";
  const maps = errorMaps.filter((m2) => !!m2).slice().reverse();
  for (const map2 of maps) {
    errorMessage = map2(fullIssue, { data: data2, defaultError: errorMessage }).message;
  }
  return {
    ...issueData,
    path: fullPath,
    message: issueData.message || errorMessage
  };
};
const EMPTY_PATH = [];
function addIssueToContext(ctx, issueData) {
  const issue = makeIssue({
    issueData,
    data: ctx.data,
    path: ctx.path,
    errorMaps: [
      ctx.common.contextualErrorMap,
      ctx.schemaErrorMap,
      getErrorMap(),
      errorMap
      // then global default map
    ].filter((x2) => !!x2)
  });
  ctx.common.issues.push(issue);
}
class ParseStatus {
  constructor() {
    this.value = "valid";
  }
  dirty() {
    if (this.value === "valid")
      this.value = "dirty";
  }
  abort() {
    if (this.value !== "aborted")
      this.value = "aborted";
  }
  static mergeArray(status, results) {
    const arrayValue = [];
    for (const s2 of results) {
      if (s2.status === "aborted")
        return INVALID;
      if (s2.status === "dirty")
        status.dirty();
      arrayValue.push(s2.value);
    }
    return { status: status.value, value: arrayValue };
  }
  static async mergeObjectAsync(status, pairs) {
    const syncPairs = [];
    for (const pair of pairs) {
      syncPairs.push({
        key: await pair.key,
        value: await pair.value
      });
    }
    return ParseStatus.mergeObjectSync(status, syncPairs);
  }
  static mergeObjectSync(status, pairs) {
    const finalObject = {};
    for (const pair of pairs) {
      const { key, value } = pair;
      if (key.status === "aborted")
        return INVALID;
      if (value.status === "aborted")
        return INVALID;
      if (key.status === "dirty")
        status.dirty();
      if (value.status === "dirty")
        status.dirty();
      if (key.value !== "__proto__" && (typeof value.value !== "undefined" || pair.alwaysSet)) {
        finalObject[key.value] = value.value;
      }
    }
    return { status: status.value, value: finalObject };
  }
}
const INVALID = Object.freeze({
  status: "aborted"
});
const DIRTY = (value) => ({ status: "dirty", value });
const OK = (value) => ({ status: "valid", value });
const isAborted = (x2) => x2.status === "aborted";
const isDirty = (x2) => x2.status === "dirty";
const isValid = (x2) => x2.status === "valid";
const isAsync = (x2) => typeof Promise !== "undefined" && x2 instanceof Promise;
var errorUtil;
(function(errorUtil2) {
  errorUtil2.errToObj = (message) => typeof message === "string" ? { message } : message || {};
  errorUtil2.toString = (message) => typeof message === "string" ? message : message === null || message === void 0 ? void 0 : message.message;
})(errorUtil || (errorUtil = {}));
class ParseInputLazyPath {
  constructor(parent, value, path, key) {
    this._cachedPath = [];
    this.parent = parent;
    this.data = value;
    this._path = path;
    this._key = key;
  }
  get path() {
    if (!this._cachedPath.length) {
      if (this._key instanceof Array) {
        this._cachedPath.push(...this._path, ...this._key);
      } else {
        this._cachedPath.push(...this._path, this._key);
      }
    }
    return this._cachedPath;
  }
}
const handleResult = (ctx, result) => {
  if (isValid(result)) {
    return { success: true, data: result.value };
  } else {
    if (!ctx.common.issues.length) {
      throw new Error("Validation failed but no issues detected.");
    }
    return {
      success: false,
      get error() {
        if (this._error)
          return this._error;
        const error = new ZodError(ctx.common.issues);
        this._error = error;
        return this._error;
      }
    };
  }
};
function processCreateParams(params) {
  if (!params)
    return {};
  const { errorMap: errorMap2, invalid_type_error, required_error, description } = params;
  if (errorMap2 && (invalid_type_error || required_error)) {
    throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
  }
  if (errorMap2)
    return { errorMap: errorMap2, description };
  const customMap = (iss, ctx) => {
    if (iss.code !== "invalid_type")
      return { message: ctx.defaultError };
    if (typeof ctx.data === "undefined") {
      return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };
    }
    return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };
  };
  return { errorMap: customMap, description };
}
class ZodType {
  constructor(def) {
    this.spa = this.safeParseAsync;
    this._def = def;
    this.parse = this.parse.bind(this);
    this.safeParse = this.safeParse.bind(this);
    this.parseAsync = this.parseAsync.bind(this);
    this.safeParseAsync = this.safeParseAsync.bind(this);
    this.spa = this.spa.bind(this);
    this.refine = this.refine.bind(this);
    this.refinement = this.refinement.bind(this);
    this.superRefine = this.superRefine.bind(this);
    this.optional = this.optional.bind(this);
    this.nullable = this.nullable.bind(this);
    this.nullish = this.nullish.bind(this);
    this.array = this.array.bind(this);
    this.promise = this.promise.bind(this);
    this.or = this.or.bind(this);
    this.and = this.and.bind(this);
    this.transform = this.transform.bind(this);
    this.brand = this.brand.bind(this);
    this.default = this.default.bind(this);
    this.catch = this.catch.bind(this);
    this.describe = this.describe.bind(this);
    this.pipe = this.pipe.bind(this);
    this.readonly = this.readonly.bind(this);
    this.isNullable = this.isNullable.bind(this);
    this.isOptional = this.isOptional.bind(this);
  }
  get description() {
    return this._def.description;
  }
  _getType(input) {
    return getParsedType(input.data);
  }
  _getOrReturnCtx(input, ctx) {
    return ctx || {
      common: input.parent.common,
      data: input.data,
      parsedType: getParsedType(input.data),
      schemaErrorMap: this._def.errorMap,
      path: input.path,
      parent: input.parent
    };
  }
  _processInputParams(input) {
    return {
      status: new ParseStatus(),
      ctx: {
        common: input.parent.common,
        data: input.data,
        parsedType: getParsedType(input.data),
        schemaErrorMap: this._def.errorMap,
        path: input.path,
        parent: input.parent
      }
    };
  }
  _parseSync(input) {
    const result = this._parse(input);
    if (isAsync(result)) {
      throw new Error("Synchronous parse encountered promise.");
    }
    return result;
  }
  _parseAsync(input) {
    const result = this._parse(input);
    return Promise.resolve(result);
  }
  parse(data2, params) {
    const result = this.safeParse(data2, params);
    if (result.success)
      return result.data;
    throw result.error;
  }
  safeParse(data2, params) {
    var _a;
    const ctx = {
      common: {
        issues: [],
        async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,
        contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap
      },
      path: (params === null || params === void 0 ? void 0 : params.path) || [],
      schemaErrorMap: this._def.errorMap,
      parent: null,
      data: data2,
      parsedType: getParsedType(data2)
    };
    const result = this._parseSync({ data: data2, path: ctx.path, parent: ctx });
    return handleResult(ctx, result);
  }
  async parseAsync(data2, params) {
    const result = await this.safeParseAsync(data2, params);
    if (result.success)
      return result.data;
    throw result.error;
  }
  async safeParseAsync(data2, params) {
    const ctx = {
      common: {
        issues: [],
        contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,
        async: true
      },
      path: (params === null || params === void 0 ? void 0 : params.path) || [],
      schemaErrorMap: this._def.errorMap,
      parent: null,
      data: data2,
      parsedType: getParsedType(data2)
    };
    const maybeAsyncResult = this._parse({ data: data2, path: ctx.path, parent: ctx });
    const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));
    return handleResult(ctx, result);
  }
  refine(check, message) {
    const getIssueProperties = (val) => {
      if (typeof message === "string" || typeof message === "undefined") {
        return { message };
      } else if (typeof message === "function") {
        return message(val);
      } else {
        return message;
      }
    };
    return this._refinement((val, ctx) => {
      const result = check(val);
      const setError = () => ctx.addIssue({
        code: ZodIssueCode.custom,
        ...getIssueProperties(val)
      });
      if (typeof Promise !== "undefined" && result instanceof Promise) {
        return result.then((data2) => {
          if (!data2) {
            setError();
            return false;
          } else {
            return true;
          }
        });
      }
      if (!result) {
        setError();
        return false;
      } else {
        return true;
      }
    });
  }
  refinement(check, refinementData) {
    return this._refinement((val, ctx) => {
      if (!check(val)) {
        ctx.addIssue(typeof refinementData === "function" ? refinementData(val, ctx) : refinementData);
        return false;
      } else {
        return true;
      }
    });
  }
  _refinement(refinement) {
    return new ZodEffects({
      schema: this,
      typeName: ZodFirstPartyTypeKind.ZodEffects,
      effect: { type: "refinement", refinement }
    });
  }
  superRefine(refinement) {
    return this._refinement(refinement);
  }
  optional() {
    return ZodOptional.create(this, this._def);
  }
  nullable() {
    return ZodNullable.create(this, this._def);
  }
  nullish() {
    return this.nullable().optional();
  }
  array() {
    return ZodArray.create(this, this._def);
  }
  promise() {
    return ZodPromise.create(this, this._def);
  }
  or(option) {
    return ZodUnion.create([this, option], this._def);
  }
  and(incoming) {
    return ZodIntersection.create(this, incoming, this._def);
  }
  transform(transform2) {
    return new ZodEffects({
      ...processCreateParams(this._def),
      schema: this,
      typeName: ZodFirstPartyTypeKind.ZodEffects,
      effect: { type: "transform", transform: transform2 }
    });
  }
  default(def) {
    const defaultValueFunc = typeof def === "function" ? def : () => def;
    return new ZodDefault({
      ...processCreateParams(this._def),
      innerType: this,
      defaultValue: defaultValueFunc,
      typeName: ZodFirstPartyTypeKind.ZodDefault
    });
  }
  brand() {
    return new ZodBranded({
      typeName: ZodFirstPartyTypeKind.ZodBranded,
      type: this,
      ...processCreateParams(this._def)
    });
  }
  catch(def) {
    const catchValueFunc = typeof def === "function" ? def : () => def;
    return new ZodCatch({
      ...processCreateParams(this._def),
      innerType: this,
      catchValue: catchValueFunc,
      typeName: ZodFirstPartyTypeKind.ZodCatch
    });
  }
  describe(description) {
    const This = this.constructor;
    return new This({
      ...this._def,
      description
    });
  }
  pipe(target) {
    return ZodPipeline.create(this, target);
  }
  readonly() {
    return ZodReadonly.create(this);
  }
  isOptional() {
    return this.safeParse(void 0).success;
  }
  isNullable() {
    return this.safeParse(null).success;
  }
}
const cuidRegex = /^c[^\s-]{8,}$/i;
const cuid2Regex = /^[a-z][a-z0-9]*$/;
const ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/;
const uuidRegex = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i;
const emailRegex = /^(?!\.)(?!.*\.\.)([A-Z0-9_+-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i;
const _emojiRegex = `^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$`;
let emojiRegex;
const ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;
const ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;
const datetimeRegex = (args) => {
  if (args.precision) {
    if (args.offset) {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${args.precision}}(([+-]\\d{2}(:?\\d{2})?)|Z)$`);
    } else {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${args.precision}}Z$`);
    }
  } else if (args.precision === 0) {
    if (args.offset) {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(([+-]\\d{2}(:?\\d{2})?)|Z)$`);
    } else {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$`);
    }
  } else {
    if (args.offset) {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}(:?\\d{2})?)|Z)$`);
    } else {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$`);
    }
  }
};
function isValidIP(ip, version) {
  if ((version === "v4" || !version) && ipv4Regex.test(ip)) {
    return true;
  }
  if ((version === "v6" || !version) && ipv6Regex.test(ip)) {
    return true;
  }
  return false;
}
class ZodString extends ZodType {
  _parse(input) {
    if (this._def.coerce) {
      input.data = String(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.string) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(
        ctx2,
        {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.string,
          received: ctx2.parsedType
        }
        //
      );
      return INVALID;
    }
    const status = new ParseStatus();
    let ctx = void 0;
    for (const check of this._def.checks) {
      if (check.kind === "min") {
        if (input.data.length < check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            minimum: check.value,
            type: "string",
            inclusive: true,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        if (input.data.length > check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            maximum: check.value,
            type: "string",
            inclusive: true,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "length") {
        const tooBig = input.data.length > check.value;
        const tooSmall = input.data.length < check.value;
        if (tooBig || tooSmall) {
          ctx = this._getOrReturnCtx(input, ctx);
          if (tooBig) {
            addIssueToContext(ctx, {
              code: ZodIssueCode.too_big,
              maximum: check.value,
              type: "string",
              inclusive: true,
              exact: true,
              message: check.message
            });
          } else if (tooSmall) {
            addIssueToContext(ctx, {
              code: ZodIssueCode.too_small,
              minimum: check.value,
              type: "string",
              inclusive: true,
              exact: true,
              message: check.message
            });
          }
          status.dirty();
        }
      } else if (check.kind === "email") {
        if (!emailRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "email",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "emoji") {
        if (!emojiRegex) {
          emojiRegex = new RegExp(_emojiRegex, "u");
        }
        if (!emojiRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "emoji",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "uuid") {
        if (!uuidRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "uuid",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "cuid") {
        if (!cuidRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "cuid",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "cuid2") {
        if (!cuid2Regex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "cuid2",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "ulid") {
        if (!ulidRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "ulid",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "url") {
        try {
          new URL(input.data);
        } catch (_a) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "url",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "regex") {
        check.regex.lastIndex = 0;
        const testResult = check.regex.test(input.data);
        if (!testResult) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "regex",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "trim") {
        input.data = input.data.trim();
      } else if (check.kind === "includes") {
        if (!input.data.includes(check.value, check.position)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: { includes: check.value, position: check.position },
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "toLowerCase") {
        input.data = input.data.toLowerCase();
      } else if (check.kind === "toUpperCase") {
        input.data = input.data.toUpperCase();
      } else if (check.kind === "startsWith") {
        if (!input.data.startsWith(check.value)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: { startsWith: check.value },
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "endsWith") {
        if (!input.data.endsWith(check.value)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: { endsWith: check.value },
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "datetime") {
        const regex = datetimeRegex(check);
        if (!regex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: "datetime",
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "ip") {
        if (!isValidIP(input.data, check.version)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "ip",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return { status: status.value, value: input.data };
  }
  _regex(regex, validation, message) {
    return this.refinement((data2) => regex.test(data2), {
      validation,
      code: ZodIssueCode.invalid_string,
      ...errorUtil.errToObj(message)
    });
  }
  _addCheck(check) {
    return new ZodString({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  email(message) {
    return this._addCheck({ kind: "email", ...errorUtil.errToObj(message) });
  }
  url(message) {
    return this._addCheck({ kind: "url", ...errorUtil.errToObj(message) });
  }
  emoji(message) {
    return this._addCheck({ kind: "emoji", ...errorUtil.errToObj(message) });
  }
  uuid(message) {
    return this._addCheck({ kind: "uuid", ...errorUtil.errToObj(message) });
  }
  cuid(message) {
    return this._addCheck({ kind: "cuid", ...errorUtil.errToObj(message) });
  }
  cuid2(message) {
    return this._addCheck({ kind: "cuid2", ...errorUtil.errToObj(message) });
  }
  ulid(message) {
    return this._addCheck({ kind: "ulid", ...errorUtil.errToObj(message) });
  }
  ip(options) {
    return this._addCheck({ kind: "ip", ...errorUtil.errToObj(options) });
  }
  datetime(options) {
    var _a;
    if (typeof options === "string") {
      return this._addCheck({
        kind: "datetime",
        precision: null,
        offset: false,
        message: options
      });
    }
    return this._addCheck({
      kind: "datetime",
      precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === "undefined" ? null : options === null || options === void 0 ? void 0 : options.precision,
      offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,
      ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)
    });
  }
  regex(regex, message) {
    return this._addCheck({
      kind: "regex",
      regex,
      ...errorUtil.errToObj(message)
    });
  }
  includes(value, options) {
    return this._addCheck({
      kind: "includes",
      value,
      position: options === null || options === void 0 ? void 0 : options.position,
      ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)
    });
  }
  startsWith(value, message) {
    return this._addCheck({
      kind: "startsWith",
      value,
      ...errorUtil.errToObj(message)
    });
  }
  endsWith(value, message) {
    return this._addCheck({
      kind: "endsWith",
      value,
      ...errorUtil.errToObj(message)
    });
  }
  min(minLength, message) {
    return this._addCheck({
      kind: "min",
      value: minLength,
      ...errorUtil.errToObj(message)
    });
  }
  max(maxLength, message) {
    return this._addCheck({
      kind: "max",
      value: maxLength,
      ...errorUtil.errToObj(message)
    });
  }
  length(len, message) {
    return this._addCheck({
      kind: "length",
      value: len,
      ...errorUtil.errToObj(message)
    });
  }
  /**
   * @deprecated Use z.string().min(1) instead.
   * @see {@link ZodString.min}
   */
  nonempty(message) {
    return this.min(1, errorUtil.errToObj(message));
  }
  trim() {
    return new ZodString({
      ...this._def,
      checks: [...this._def.checks, { kind: "trim" }]
    });
  }
  toLowerCase() {
    return new ZodString({
      ...this._def,
      checks: [...this._def.checks, { kind: "toLowerCase" }]
    });
  }
  toUpperCase() {
    return new ZodString({
      ...this._def,
      checks: [...this._def.checks, { kind: "toUpperCase" }]
    });
  }
  get isDatetime() {
    return !!this._def.checks.find((ch2) => ch2.kind === "datetime");
  }
  get isEmail() {
    return !!this._def.checks.find((ch2) => ch2.kind === "email");
  }
  get isURL() {
    return !!this._def.checks.find((ch2) => ch2.kind === "url");
  }
  get isEmoji() {
    return !!this._def.checks.find((ch2) => ch2.kind === "emoji");
  }
  get isUUID() {
    return !!this._def.checks.find((ch2) => ch2.kind === "uuid");
  }
  get isCUID() {
    return !!this._def.checks.find((ch2) => ch2.kind === "cuid");
  }
  get isCUID2() {
    return !!this._def.checks.find((ch2) => ch2.kind === "cuid2");
  }
  get isULID() {
    return !!this._def.checks.find((ch2) => ch2.kind === "ulid");
  }
  get isIP() {
    return !!this._def.checks.find((ch2) => ch2.kind === "ip");
  }
  get minLength() {
    let min2 = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "min") {
        if (min2 === null || ch2.value > min2)
          min2 = ch2.value;
      }
    }
    return min2;
  }
  get maxLength() {
    let max2 = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "max") {
        if (max2 === null || ch2.value < max2)
          max2 = ch2.value;
      }
    }
    return max2;
  }
}
ZodString.create = (params) => {
  var _a;
  return new ZodString({
    checks: [],
    typeName: ZodFirstPartyTypeKind.ZodString,
    coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,
    ...processCreateParams(params)
  });
};
function floatSafeRemainder(val, step) {
  const valDecCount = (val.toString().split(".")[1] || "").length;
  const stepDecCount = (step.toString().split(".")[1] || "").length;
  const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;
  const valInt = parseInt(val.toFixed(decCount).replace(".", ""));
  const stepInt = parseInt(step.toFixed(decCount).replace(".", ""));
  return valInt % stepInt / Math.pow(10, decCount);
}
class ZodNumber extends ZodType {
  constructor() {
    super(...arguments);
    this.min = this.gte;
    this.max = this.lte;
    this.step = this.multipleOf;
  }
  _parse(input) {
    if (this._def.coerce) {
      input.data = Number(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.number) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.number,
        received: ctx2.parsedType
      });
      return INVALID;
    }
    let ctx = void 0;
    const status = new ParseStatus();
    for (const check of this._def.checks) {
      if (check.kind === "int") {
        if (!util.isInteger(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: "integer",
            received: "float",
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "min") {
        const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;
        if (tooSmall) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            minimum: check.value,
            type: "number",
            inclusive: check.inclusive,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;
        if (tooBig) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            maximum: check.value,
            type: "number",
            inclusive: check.inclusive,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "multipleOf") {
        if (floatSafeRemainder(input.data, check.value) !== 0) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.not_multiple_of,
            multipleOf: check.value,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "finite") {
        if (!Number.isFinite(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.not_finite,
            message: check.message
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return { status: status.value, value: input.data };
  }
  gte(value, message) {
    return this.setLimit("min", value, true, errorUtil.toString(message));
  }
  gt(value, message) {
    return this.setLimit("min", value, false, errorUtil.toString(message));
  }
  lte(value, message) {
    return this.setLimit("max", value, true, errorUtil.toString(message));
  }
  lt(value, message) {
    return this.setLimit("max", value, false, errorUtil.toString(message));
  }
  setLimit(kind, value, inclusive, message) {
    return new ZodNumber({
      ...this._def,
      checks: [
        ...this._def.checks,
        {
          kind,
          value,
          inclusive,
          message: errorUtil.toString(message)
        }
      ]
    });
  }
  _addCheck(check) {
    return new ZodNumber({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  int(message) {
    return this._addCheck({
      kind: "int",
      message: errorUtil.toString(message)
    });
  }
  positive(message) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: false,
      message: errorUtil.toString(message)
    });
  }
  negative(message) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: false,
      message: errorUtil.toString(message)
    });
  }
  nonpositive(message) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: true,
      message: errorUtil.toString(message)
    });
  }
  nonnegative(message) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: true,
      message: errorUtil.toString(message)
    });
  }
  multipleOf(value, message) {
    return this._addCheck({
      kind: "multipleOf",
      value,
      message: errorUtil.toString(message)
    });
  }
  finite(message) {
    return this._addCheck({
      kind: "finite",
      message: errorUtil.toString(message)
    });
  }
  safe(message) {
    return this._addCheck({
      kind: "min",
      inclusive: true,
      value: Number.MIN_SAFE_INTEGER,
      message: errorUtil.toString(message)
    })._addCheck({
      kind: "max",
      inclusive: true,
      value: Number.MAX_SAFE_INTEGER,
      message: errorUtil.toString(message)
    });
  }
  get minValue() {
    let min2 = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "min") {
        if (min2 === null || ch2.value > min2)
          min2 = ch2.value;
      }
    }
    return min2;
  }
  get maxValue() {
    let max2 = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "max") {
        if (max2 === null || ch2.value < max2)
          max2 = ch2.value;
      }
    }
    return max2;
  }
  get isInt() {
    return !!this._def.checks.find((ch2) => ch2.kind === "int" || ch2.kind === "multipleOf" && util.isInteger(ch2.value));
  }
  get isFinite() {
    let max2 = null, min2 = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "finite" || ch2.kind === "int" || ch2.kind === "multipleOf") {
        return true;
      } else if (ch2.kind === "min") {
        if (min2 === null || ch2.value > min2)
          min2 = ch2.value;
      } else if (ch2.kind === "max") {
        if (max2 === null || ch2.value < max2)
          max2 = ch2.value;
      }
    }
    return Number.isFinite(min2) && Number.isFinite(max2);
  }
}
ZodNumber.create = (params) => {
  return new ZodNumber({
    checks: [],
    typeName: ZodFirstPartyTypeKind.ZodNumber,
    coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,
    ...processCreateParams(params)
  });
};
class ZodBigInt extends ZodType {
  constructor() {
    super(...arguments);
    this.min = this.gte;
    this.max = this.lte;
  }
  _parse(input) {
    if (this._def.coerce) {
      input.data = BigInt(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.bigint) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.bigint,
        received: ctx2.parsedType
      });
      return INVALID;
    }
    let ctx = void 0;
    const status = new ParseStatus();
    for (const check of this._def.checks) {
      if (check.kind === "min") {
        const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;
        if (tooSmall) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            type: "bigint",
            minimum: check.value,
            inclusive: check.inclusive,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;
        if (tooBig) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            type: "bigint",
            maximum: check.value,
            inclusive: check.inclusive,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "multipleOf") {
        if (input.data % check.value !== BigInt(0)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.not_multiple_of,
            multipleOf: check.value,
            message: check.message
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return { status: status.value, value: input.data };
  }
  gte(value, message) {
    return this.setLimit("min", value, true, errorUtil.toString(message));
  }
  gt(value, message) {
    return this.setLimit("min", value, false, errorUtil.toString(message));
  }
  lte(value, message) {
    return this.setLimit("max", value, true, errorUtil.toString(message));
  }
  lt(value, message) {
    return this.setLimit("max", value, false, errorUtil.toString(message));
  }
  setLimit(kind, value, inclusive, message) {
    return new ZodBigInt({
      ...this._def,
      checks: [
        ...this._def.checks,
        {
          kind,
          value,
          inclusive,
          message: errorUtil.toString(message)
        }
      ]
    });
  }
  _addCheck(check) {
    return new ZodBigInt({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  positive(message) {
    return this._addCheck({
      kind: "min",
      value: BigInt(0),
      inclusive: false,
      message: errorUtil.toString(message)
    });
  }
  negative(message) {
    return this._addCheck({
      kind: "max",
      value: BigInt(0),
      inclusive: false,
      message: errorUtil.toString(message)
    });
  }
  nonpositive(message) {
    return this._addCheck({
      kind: "max",
      value: BigInt(0),
      inclusive: true,
      message: errorUtil.toString(message)
    });
  }
  nonnegative(message) {
    return this._addCheck({
      kind: "min",
      value: BigInt(0),
      inclusive: true,
      message: errorUtil.toString(message)
    });
  }
  multipleOf(value, message) {
    return this._addCheck({
      kind: "multipleOf",
      value,
      message: errorUtil.toString(message)
    });
  }
  get minValue() {
    let min2 = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "min") {
        if (min2 === null || ch2.value > min2)
          min2 = ch2.value;
      }
    }
    return min2;
  }
  get maxValue() {
    let max2 = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "max") {
        if (max2 === null || ch2.value < max2)
          max2 = ch2.value;
      }
    }
    return max2;
  }
}
ZodBigInt.create = (params) => {
  var _a;
  return new ZodBigInt({
    checks: [],
    typeName: ZodFirstPartyTypeKind.ZodBigInt,
    coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,
    ...processCreateParams(params)
  });
};
class ZodBoolean extends ZodType {
  _parse(input) {
    if (this._def.coerce) {
      input.data = Boolean(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.boolean) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.boolean,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return OK(input.data);
  }
}
ZodBoolean.create = (params) => {
  return new ZodBoolean({
    typeName: ZodFirstPartyTypeKind.ZodBoolean,
    coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,
    ...processCreateParams(params)
  });
};
class ZodDate extends ZodType {
  _parse(input) {
    if (this._def.coerce) {
      input.data = new Date(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.date) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.date,
        received: ctx2.parsedType
      });
      return INVALID;
    }
    if (isNaN(input.data.getTime())) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_date
      });
      return INVALID;
    }
    const status = new ParseStatus();
    let ctx = void 0;
    for (const check of this._def.checks) {
      if (check.kind === "min") {
        if (input.data.getTime() < check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            message: check.message,
            inclusive: true,
            exact: false,
            minimum: check.value,
            type: "date"
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        if (input.data.getTime() > check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            message: check.message,
            inclusive: true,
            exact: false,
            maximum: check.value,
            type: "date"
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return {
      status: status.value,
      value: new Date(input.data.getTime())
    };
  }
  _addCheck(check) {
    return new ZodDate({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  min(minDate, message) {
    return this._addCheck({
      kind: "min",
      value: minDate.getTime(),
      message: errorUtil.toString(message)
    });
  }
  max(maxDate, message) {
    return this._addCheck({
      kind: "max",
      value: maxDate.getTime(),
      message: errorUtil.toString(message)
    });
  }
  get minDate() {
    let min2 = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "min") {
        if (min2 === null || ch2.value > min2)
          min2 = ch2.value;
      }
    }
    return min2 != null ? new Date(min2) : null;
  }
  get maxDate() {
    let max2 = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "max") {
        if (max2 === null || ch2.value < max2)
          max2 = ch2.value;
      }
    }
    return max2 != null ? new Date(max2) : null;
  }
}
ZodDate.create = (params) => {
  return new ZodDate({
    checks: [],
    coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,
    typeName: ZodFirstPartyTypeKind.ZodDate,
    ...processCreateParams(params)
  });
};
class ZodSymbol extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.symbol) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.symbol,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return OK(input.data);
  }
}
ZodSymbol.create = (params) => {
  return new ZodSymbol({
    typeName: ZodFirstPartyTypeKind.ZodSymbol,
    ...processCreateParams(params)
  });
};
class ZodUndefined extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.undefined) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.undefined,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return OK(input.data);
  }
}
ZodUndefined.create = (params) => {
  return new ZodUndefined({
    typeName: ZodFirstPartyTypeKind.ZodUndefined,
    ...processCreateParams(params)
  });
};
class ZodNull extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.null) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.null,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return OK(input.data);
  }
}
ZodNull.create = (params) => {
  return new ZodNull({
    typeName: ZodFirstPartyTypeKind.ZodNull,
    ...processCreateParams(params)
  });
};
class ZodAny extends ZodType {
  constructor() {
    super(...arguments);
    this._any = true;
  }
  _parse(input) {
    return OK(input.data);
  }
}
ZodAny.create = (params) => {
  return new ZodAny({
    typeName: ZodFirstPartyTypeKind.ZodAny,
    ...processCreateParams(params)
  });
};
class ZodUnknown extends ZodType {
  constructor() {
    super(...arguments);
    this._unknown = true;
  }
  _parse(input) {
    return OK(input.data);
  }
}
ZodUnknown.create = (params) => {
  return new ZodUnknown({
    typeName: ZodFirstPartyTypeKind.ZodUnknown,
    ...processCreateParams(params)
  });
};
class ZodNever extends ZodType {
  _parse(input) {
    const ctx = this._getOrReturnCtx(input);
    addIssueToContext(ctx, {
      code: ZodIssueCode.invalid_type,
      expected: ZodParsedType.never,
      received: ctx.parsedType
    });
    return INVALID;
  }
}
ZodNever.create = (params) => {
  return new ZodNever({
    typeName: ZodFirstPartyTypeKind.ZodNever,
    ...processCreateParams(params)
  });
};
class ZodVoid extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.undefined) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.void,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return OK(input.data);
  }
}
ZodVoid.create = (params) => {
  return new ZodVoid({
    typeName: ZodFirstPartyTypeKind.ZodVoid,
    ...processCreateParams(params)
  });
};
class ZodArray extends ZodType {
  _parse(input) {
    const { ctx, status } = this._processInputParams(input);
    const def = this._def;
    if (ctx.parsedType !== ZodParsedType.array) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.array,
        received: ctx.parsedType
      });
      return INVALID;
    }
    if (def.exactLength !== null) {
      const tooBig = ctx.data.length > def.exactLength.value;
      const tooSmall = ctx.data.length < def.exactLength.value;
      if (tooBig || tooSmall) {
        addIssueToContext(ctx, {
          code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,
          minimum: tooSmall ? def.exactLength.value : void 0,
          maximum: tooBig ? def.exactLength.value : void 0,
          type: "array",
          inclusive: true,
          exact: true,
          message: def.exactLength.message
        });
        status.dirty();
      }
    }
    if (def.minLength !== null) {
      if (ctx.data.length < def.minLength.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_small,
          minimum: def.minLength.value,
          type: "array",
          inclusive: true,
          exact: false,
          message: def.minLength.message
        });
        status.dirty();
      }
    }
    if (def.maxLength !== null) {
      if (ctx.data.length > def.maxLength.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_big,
          maximum: def.maxLength.value,
          type: "array",
          inclusive: true,
          exact: false,
          message: def.maxLength.message
        });
        status.dirty();
      }
    }
    if (ctx.common.async) {
      return Promise.all([...ctx.data].map((item, i2) => {
        return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i2));
      })).then((result2) => {
        return ParseStatus.mergeArray(status, result2);
      });
    }
    const result = [...ctx.data].map((item, i2) => {
      return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i2));
    });
    return ParseStatus.mergeArray(status, result);
  }
  get element() {
    return this._def.type;
  }
  min(minLength, message) {
    return new ZodArray({
      ...this._def,
      minLength: { value: minLength, message: errorUtil.toString(message) }
    });
  }
  max(maxLength, message) {
    return new ZodArray({
      ...this._def,
      maxLength: { value: maxLength, message: errorUtil.toString(message) }
    });
  }
  length(len, message) {
    return new ZodArray({
      ...this._def,
      exactLength: { value: len, message: errorUtil.toString(message) }
    });
  }
  nonempty(message) {
    return this.min(1, message);
  }
}
ZodArray.create = (schema, params) => {
  return new ZodArray({
    type: schema,
    minLength: null,
    maxLength: null,
    exactLength: null,
    typeName: ZodFirstPartyTypeKind.ZodArray,
    ...processCreateParams(params)
  });
};
function deepPartialify(schema) {
  if (schema instanceof ZodObject) {
    const newShape = {};
    for (const key in schema.shape) {
      const fieldSchema = schema.shape[key];
      newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));
    }
    return new ZodObject({
      ...schema._def,
      shape: () => newShape
    });
  } else if (schema instanceof ZodArray) {
    return new ZodArray({
      ...schema._def,
      type: deepPartialify(schema.element)
    });
  } else if (schema instanceof ZodOptional) {
    return ZodOptional.create(deepPartialify(schema.unwrap()));
  } else if (schema instanceof ZodNullable) {
    return ZodNullable.create(deepPartialify(schema.unwrap()));
  } else if (schema instanceof ZodTuple) {
    return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));
  } else {
    return schema;
  }
}
class ZodObject extends ZodType {
  constructor() {
    super(...arguments);
    this._cached = null;
    this.nonstrict = this.passthrough;
    this.augment = this.extend;
  }
  _getCached() {
    if (this._cached !== null)
      return this._cached;
    const shape = this._def.shape();
    const keys2 = util.objectKeys(shape);
    return this._cached = { shape, keys: keys2 };
  }
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.object) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.object,
        received: ctx2.parsedType
      });
      return INVALID;
    }
    const { status, ctx } = this._processInputParams(input);
    const { shape, keys: shapeKeys } = this._getCached();
    const extraKeys = [];
    if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === "strip")) {
      for (const key in ctx.data) {
        if (!shapeKeys.includes(key)) {
          extraKeys.push(key);
        }
      }
    }
    const pairs = [];
    for (const key of shapeKeys) {
      const keyValidator = shape[key];
      const value = ctx.data[key];
      pairs.push({
        key: { status: "valid", value: key },
        value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),
        alwaysSet: key in ctx.data
      });
    }
    if (this._def.catchall instanceof ZodNever) {
      const unknownKeys = this._def.unknownKeys;
      if (unknownKeys === "passthrough") {
        for (const key of extraKeys) {
          pairs.push({
            key: { status: "valid", value: key },
            value: { status: "valid", value: ctx.data[key] }
          });
        }
      } else if (unknownKeys === "strict") {
        if (extraKeys.length > 0) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.unrecognized_keys,
            keys: extraKeys
          });
          status.dirty();
        }
      } else if (unknownKeys === "strip")
        ;
      else {
        throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);
      }
    } else {
      const catchall = this._def.catchall;
      for (const key of extraKeys) {
        const value = ctx.data[key];
        pairs.push({
          key: { status: "valid", value: key },
          value: catchall._parse(
            new ParseInputLazyPath(ctx, value, ctx.path, key)
            //, ctx.child(key), value, getParsedType(value)
          ),
          alwaysSet: key in ctx.data
        });
      }
    }
    if (ctx.common.async) {
      return Promise.resolve().then(async () => {
        const syncPairs = [];
        for (const pair of pairs) {
          const key = await pair.key;
          syncPairs.push({
            key,
            value: await pair.value,
            alwaysSet: pair.alwaysSet
          });
        }
        return syncPairs;
      }).then((syncPairs) => {
        return ParseStatus.mergeObjectSync(status, syncPairs);
      });
    } else {
      return ParseStatus.mergeObjectSync(status, pairs);
    }
  }
  get shape() {
    return this._def.shape();
  }
  strict(message) {
    errorUtil.errToObj;
    return new ZodObject({
      ...this._def,
      unknownKeys: "strict",
      ...message !== void 0 ? {
        errorMap: (issue, ctx) => {
          var _a, _b, _c, _d;
          const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;
          if (issue.code === "unrecognized_keys")
            return {
              message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError
            };
          return {
            message: defaultError
          };
        }
      } : {}
    });
  }
  strip() {
    return new ZodObject({
      ...this._def,
      unknownKeys: "strip"
    });
  }
  passthrough() {
    return new ZodObject({
      ...this._def,
      unknownKeys: "passthrough"
    });
  }
  // const AugmentFactory =
  //   <Def extends ZodObjectDef>(def: Def) =>
  //   <Augmentation extends ZodRawShape>(
  //     augmentation: Augmentation
  //   ): ZodObject<
  //     extendShape<ReturnType<Def["shape"]>, Augmentation>,
  //     Def["unknownKeys"],
  //     Def["catchall"]
  //   > => {
  //     return new ZodObject({
  //       ...def,
  //       shape: () => ({
  //         ...def.shape(),
  //         ...augmentation,
  //       }),
  //     }) as any;
  //   };
  extend(augmentation) {
    return new ZodObject({
      ...this._def,
      shape: () => ({
        ...this._def.shape(),
        ...augmentation
      })
    });
  }
  /**
   * Prior to zod@1.0.12 there was a bug in the
   * inferred type of merged objects. Please
   * upgrade if you are experiencing issues.
   */
  merge(merging) {
    const merged = new ZodObject({
      unknownKeys: merging._def.unknownKeys,
      catchall: merging._def.catchall,
      shape: () => ({
        ...this._def.shape(),
        ...merging._def.shape()
      }),
      typeName: ZodFirstPartyTypeKind.ZodObject
    });
    return merged;
  }
  // merge<
  //   Incoming extends AnyZodObject,
  //   Augmentation extends Incoming["shape"],
  //   NewOutput extends {
  //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation
  //       ? Augmentation[k]["_output"]
  //       : k extends keyof Output
  //       ? Output[k]
  //       : never;
  //   },
  //   NewInput extends {
  //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation
  //       ? Augmentation[k]["_input"]
  //       : k extends keyof Input
  //       ? Input[k]
  //       : never;
  //   }
  // >(
  //   merging: Incoming
  // ): ZodObject<
  //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
  //   Incoming["_def"]["unknownKeys"],
  //   Incoming["_def"]["catchall"],
  //   NewOutput,
  //   NewInput
  // > {
  //   const merged: any = new ZodObject({
  //     unknownKeys: merging._def.unknownKeys,
  //     catchall: merging._def.catchall,
  //     shape: () =>
  //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
  //     typeName: ZodFirstPartyTypeKind.ZodObject,
  //   }) as any;
  //   return merged;
  // }
  setKey(key, schema) {
    return this.augment({ [key]: schema });
  }
  // merge<Incoming extends AnyZodObject>(
  //   merging: Incoming
  // ): //ZodObject<T & Incoming["_shape"], UnknownKeys, Catchall> = (merging) => {
  // ZodObject<
  //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
  //   Incoming["_def"]["unknownKeys"],
  //   Incoming["_def"]["catchall"]
  // > {
  //   // const mergedShape = objectUtil.mergeShapes(
  //   //   this._def.shape(),
  //   //   merging._def.shape()
  //   // );
  //   const merged: any = new ZodObject({
  //     unknownKeys: merging._def.unknownKeys,
  //     catchall: merging._def.catchall,
  //     shape: () =>
  //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
  //     typeName: ZodFirstPartyTypeKind.ZodObject,
  //   }) as any;
  //   return merged;
  // }
  catchall(index2) {
    return new ZodObject({
      ...this._def,
      catchall: index2
    });
  }
  pick(mask) {
    const shape = {};
    util.objectKeys(mask).forEach((key) => {
      if (mask[key] && this.shape[key]) {
        shape[key] = this.shape[key];
      }
    });
    return new ZodObject({
      ...this._def,
      shape: () => shape
    });
  }
  omit(mask) {
    const shape = {};
    util.objectKeys(this.shape).forEach((key) => {
      if (!mask[key]) {
        shape[key] = this.shape[key];
      }
    });
    return new ZodObject({
      ...this._def,
      shape: () => shape
    });
  }
  /**
   * @deprecated
   */
  deepPartial() {
    return deepPartialify(this);
  }
  partial(mask) {
    const newShape = {};
    util.objectKeys(this.shape).forEach((key) => {
      const fieldSchema = this.shape[key];
      if (mask && !mask[key]) {
        newShape[key] = fieldSchema;
      } else {
        newShape[key] = fieldSchema.optional();
      }
    });
    return new ZodObject({
      ...this._def,
      shape: () => newShape
    });
  }
  required(mask) {
    const newShape = {};
    util.objectKeys(this.shape).forEach((key) => {
      if (mask && !mask[key]) {
        newShape[key] = this.shape[key];
      } else {
        const fieldSchema = this.shape[key];
        let newField = fieldSchema;
        while (newField instanceof ZodOptional) {
          newField = newField._def.innerType;
        }
        newShape[key] = newField;
      }
    });
    return new ZodObject({
      ...this._def,
      shape: () => newShape
    });
  }
  keyof() {
    return createZodEnum(util.objectKeys(this.shape));
  }
}
ZodObject.create = (shape, params) => {
  return new ZodObject({
    shape: () => shape,
    unknownKeys: "strip",
    catchall: ZodNever.create(),
    typeName: ZodFirstPartyTypeKind.ZodObject,
    ...processCreateParams(params)
  });
};
ZodObject.strictCreate = (shape, params) => {
  return new ZodObject({
    shape: () => shape,
    unknownKeys: "strict",
    catchall: ZodNever.create(),
    typeName: ZodFirstPartyTypeKind.ZodObject,
    ...processCreateParams(params)
  });
};
ZodObject.lazycreate = (shape, params) => {
  return new ZodObject({
    shape,
    unknownKeys: "strip",
    catchall: ZodNever.create(),
    typeName: ZodFirstPartyTypeKind.ZodObject,
    ...processCreateParams(params)
  });
};
class ZodUnion extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const options = this._def.options;
    function handleResults(results) {
      for (const result of results) {
        if (result.result.status === "valid") {
          return result.result;
        }
      }
      for (const result of results) {
        if (result.result.status === "dirty") {
          ctx.common.issues.push(...result.ctx.common.issues);
          return result.result;
        }
      }
      const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_union,
        unionErrors
      });
      return INVALID;
    }
    if (ctx.common.async) {
      return Promise.all(options.map(async (option) => {
        const childCtx = {
          ...ctx,
          common: {
            ...ctx.common,
            issues: []
          },
          parent: null
        };
        return {
          result: await option._parseAsync({
            data: ctx.data,
            path: ctx.path,
            parent: childCtx
          }),
          ctx: childCtx
        };
      })).then(handleResults);
    } else {
      let dirty = void 0;
      const issues = [];
      for (const option of options) {
        const childCtx = {
          ...ctx,
          common: {
            ...ctx.common,
            issues: []
          },
          parent: null
        };
        const result = option._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: childCtx
        });
        if (result.status === "valid") {
          return result;
        } else if (result.status === "dirty" && !dirty) {
          dirty = { result, ctx: childCtx };
        }
        if (childCtx.common.issues.length) {
          issues.push(childCtx.common.issues);
        }
      }
      if (dirty) {
        ctx.common.issues.push(...dirty.ctx.common.issues);
        return dirty.result;
      }
      const unionErrors = issues.map((issues2) => new ZodError(issues2));
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_union,
        unionErrors
      });
      return INVALID;
    }
  }
  get options() {
    return this._def.options;
  }
}
ZodUnion.create = (types, params) => {
  return new ZodUnion({
    options: types,
    typeName: ZodFirstPartyTypeKind.ZodUnion,
    ...processCreateParams(params)
  });
};
const getDiscriminator = (type2) => {
  if (type2 instanceof ZodLazy) {
    return getDiscriminator(type2.schema);
  } else if (type2 instanceof ZodEffects) {
    return getDiscriminator(type2.innerType());
  } else if (type2 instanceof ZodLiteral) {
    return [type2.value];
  } else if (type2 instanceof ZodEnum) {
    return type2.options;
  } else if (type2 instanceof ZodNativeEnum) {
    return Object.keys(type2.enum);
  } else if (type2 instanceof ZodDefault) {
    return getDiscriminator(type2._def.innerType);
  } else if (type2 instanceof ZodUndefined) {
    return [void 0];
  } else if (type2 instanceof ZodNull) {
    return [null];
  } else {
    return null;
  }
};
class ZodDiscriminatedUnion extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.object) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.object,
        received: ctx.parsedType
      });
      return INVALID;
    }
    const discriminator = this.discriminator;
    const discriminatorValue = ctx.data[discriminator];
    const option = this.optionsMap.get(discriminatorValue);
    if (!option) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_union_discriminator,
        options: Array.from(this.optionsMap.keys()),
        path: [discriminator]
      });
      return INVALID;
    }
    if (ctx.common.async) {
      return option._parseAsync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      });
    } else {
      return option._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      });
    }
  }
  get discriminator() {
    return this._def.discriminator;
  }
  get options() {
    return this._def.options;
  }
  get optionsMap() {
    return this._def.optionsMap;
  }
  /**
   * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.
   * However, it only allows a union of objects, all of which need to share a discriminator property. This property must
   * have a different value for each object in the union.
   * @param discriminator the name of the discriminator property
   * @param types an array of object schemas
   * @param params
   */
  static create(discriminator, options, params) {
    const optionsMap = /* @__PURE__ */ new Map();
    for (const type2 of options) {
      const discriminatorValues = getDiscriminator(type2.shape[discriminator]);
      if (!discriminatorValues) {
        throw new Error(`A discriminator value for key \`${discriminator}\` could not be extracted from all schema options`);
      }
      for (const value of discriminatorValues) {
        if (optionsMap.has(value)) {
          throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);
        }
        optionsMap.set(value, type2);
      }
    }
    return new ZodDiscriminatedUnion({
      typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,
      discriminator,
      options,
      optionsMap,
      ...processCreateParams(params)
    });
  }
}
function mergeValues(a2, b2) {
  const aType = getParsedType(a2);
  const bType = getParsedType(b2);
  if (a2 === b2) {
    return { valid: true, data: a2 };
  } else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {
    const bKeys = util.objectKeys(b2);
    const sharedKeys = util.objectKeys(a2).filter((key) => bKeys.indexOf(key) !== -1);
    const newObj = { ...a2, ...b2 };
    for (const key of sharedKeys) {
      const sharedValue = mergeValues(a2[key], b2[key]);
      if (!sharedValue.valid) {
        return { valid: false };
      }
      newObj[key] = sharedValue.data;
    }
    return { valid: true, data: newObj };
  } else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {
    if (a2.length !== b2.length) {
      return { valid: false };
    }
    const newArray = [];
    for (let index2 = 0; index2 < a2.length; index2++) {
      const itemA = a2[index2];
      const itemB = b2[index2];
      const sharedValue = mergeValues(itemA, itemB);
      if (!sharedValue.valid) {
        return { valid: false };
      }
      newArray.push(sharedValue.data);
    }
    return { valid: true, data: newArray };
  } else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a2 === +b2) {
    return { valid: true, data: a2 };
  } else {
    return { valid: false };
  }
}
class ZodIntersection extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    const handleParsed = (parsedLeft, parsedRight) => {
      if (isAborted(parsedLeft) || isAborted(parsedRight)) {
        return INVALID;
      }
      const merged = mergeValues(parsedLeft.value, parsedRight.value);
      if (!merged.valid) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_intersection_types
        });
        return INVALID;
      }
      if (isDirty(parsedLeft) || isDirty(parsedRight)) {
        status.dirty();
      }
      return { status: status.value, value: merged.data };
    };
    if (ctx.common.async) {
      return Promise.all([
        this._def.left._parseAsync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        }),
        this._def.right._parseAsync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        })
      ]).then(([left, right]) => handleParsed(left, right));
    } else {
      return handleParsed(this._def.left._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      }), this._def.right._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      }));
    }
  }
}
ZodIntersection.create = (left, right, params) => {
  return new ZodIntersection({
    left,
    right,
    typeName: ZodFirstPartyTypeKind.ZodIntersection,
    ...processCreateParams(params)
  });
};
class ZodTuple extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.array) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.array,
        received: ctx.parsedType
      });
      return INVALID;
    }
    if (ctx.data.length < this._def.items.length) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.too_small,
        minimum: this._def.items.length,
        inclusive: true,
        exact: false,
        type: "array"
      });
      return INVALID;
    }
    const rest = this._def.rest;
    if (!rest && ctx.data.length > this._def.items.length) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.too_big,
        maximum: this._def.items.length,
        inclusive: true,
        exact: false,
        type: "array"
      });
      status.dirty();
    }
    const items2 = [...ctx.data].map((item, itemIndex) => {
      const schema = this._def.items[itemIndex] || this._def.rest;
      if (!schema)
        return null;
      return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));
    }).filter((x2) => !!x2);
    if (ctx.common.async) {
      return Promise.all(items2).then((results) => {
        return ParseStatus.mergeArray(status, results);
      });
    } else {
      return ParseStatus.mergeArray(status, items2);
    }
  }
  get items() {
    return this._def.items;
  }
  rest(rest) {
    return new ZodTuple({
      ...this._def,
      rest
    });
  }
}
ZodTuple.create = (schemas, params) => {
  if (!Array.isArray(schemas)) {
    throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
  }
  return new ZodTuple({
    items: schemas,
    typeName: ZodFirstPartyTypeKind.ZodTuple,
    rest: null,
    ...processCreateParams(params)
  });
};
class ZodRecord extends ZodType {
  get keySchema() {
    return this._def.keyType;
  }
  get valueSchema() {
    return this._def.valueType;
  }
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.object) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.object,
        received: ctx.parsedType
      });
      return INVALID;
    }
    const pairs = [];
    const keyType = this._def.keyType;
    const valueType = this._def.valueType;
    for (const key in ctx.data) {
      pairs.push({
        key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),
        value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key))
      });
    }
    if (ctx.common.async) {
      return ParseStatus.mergeObjectAsync(status, pairs);
    } else {
      return ParseStatus.mergeObjectSync(status, pairs);
    }
  }
  get element() {
    return this._def.valueType;
  }
  static create(first, second2, third) {
    if (second2 instanceof ZodType) {
      return new ZodRecord({
        keyType: first,
        valueType: second2,
        typeName: ZodFirstPartyTypeKind.ZodRecord,
        ...processCreateParams(third)
      });
    }
    return new ZodRecord({
      keyType: ZodString.create(),
      valueType: first,
      typeName: ZodFirstPartyTypeKind.ZodRecord,
      ...processCreateParams(second2)
    });
  }
}
class ZodMap extends ZodType {
  get keySchema() {
    return this._def.keyType;
  }
  get valueSchema() {
    return this._def.valueType;
  }
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.map) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.map,
        received: ctx.parsedType
      });
      return INVALID;
    }
    const keyType = this._def.keyType;
    const valueType = this._def.valueType;
    const pairs = [...ctx.data.entries()].map(([key, value], index2) => {
      return {
        key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index2, "key"])),
        value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index2, "value"]))
      };
    });
    if (ctx.common.async) {
      const finalMap = /* @__PURE__ */ new Map();
      return Promise.resolve().then(async () => {
        for (const pair of pairs) {
          const key = await pair.key;
          const value = await pair.value;
          if (key.status === "aborted" || value.status === "aborted") {
            return INVALID;
          }
          if (key.status === "dirty" || value.status === "dirty") {
            status.dirty();
          }
          finalMap.set(key.value, value.value);
        }
        return { status: status.value, value: finalMap };
      });
    } else {
      const finalMap = /* @__PURE__ */ new Map();
      for (const pair of pairs) {
        const key = pair.key;
        const value = pair.value;
        if (key.status === "aborted" || value.status === "aborted") {
          return INVALID;
        }
        if (key.status === "dirty" || value.status === "dirty") {
          status.dirty();
        }
        finalMap.set(key.value, value.value);
      }
      return { status: status.value, value: finalMap };
    }
  }
}
ZodMap.create = (keyType, valueType, params) => {
  return new ZodMap({
    valueType,
    keyType,
    typeName: ZodFirstPartyTypeKind.ZodMap,
    ...processCreateParams(params)
  });
};
class ZodSet extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.set) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.set,
        received: ctx.parsedType
      });
      return INVALID;
    }
    const def = this._def;
    if (def.minSize !== null) {
      if (ctx.data.size < def.minSize.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_small,
          minimum: def.minSize.value,
          type: "set",
          inclusive: true,
          exact: false,
          message: def.minSize.message
        });
        status.dirty();
      }
    }
    if (def.maxSize !== null) {
      if (ctx.data.size > def.maxSize.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_big,
          maximum: def.maxSize.value,
          type: "set",
          inclusive: true,
          exact: false,
          message: def.maxSize.message
        });
        status.dirty();
      }
    }
    const valueType = this._def.valueType;
    function finalizeSet(elements2) {
      const parsedSet = /* @__PURE__ */ new Set();
      for (const element of elements2) {
        if (element.status === "aborted")
          return INVALID;
        if (element.status === "dirty")
          status.dirty();
        parsedSet.add(element.value);
      }
      return { status: status.value, value: parsedSet };
    }
    const elements = [...ctx.data.values()].map((item, i2) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i2)));
    if (ctx.common.async) {
      return Promise.all(elements).then((elements2) => finalizeSet(elements2));
    } else {
      return finalizeSet(elements);
    }
  }
  min(minSize, message) {
    return new ZodSet({
      ...this._def,
      minSize: { value: minSize, message: errorUtil.toString(message) }
    });
  }
  max(maxSize, message) {
    return new ZodSet({
      ...this._def,
      maxSize: { value: maxSize, message: errorUtil.toString(message) }
    });
  }
  size(size2, message) {
    return this.min(size2, message).max(size2, message);
  }
  nonempty(message) {
    return this.min(1, message);
  }
}
ZodSet.create = (valueType, params) => {
  return new ZodSet({
    valueType,
    minSize: null,
    maxSize: null,
    typeName: ZodFirstPartyTypeKind.ZodSet,
    ...processCreateParams(params)
  });
};
class ZodFunction extends ZodType {
  constructor() {
    super(...arguments);
    this.validate = this.implement;
  }
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.function) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.function,
        received: ctx.parsedType
      });
      return INVALID;
    }
    function makeArgsIssue(args, error) {
      return makeIssue({
        data: args,
        path: ctx.path,
        errorMaps: [
          ctx.common.contextualErrorMap,
          ctx.schemaErrorMap,
          getErrorMap(),
          errorMap
        ].filter((x2) => !!x2),
        issueData: {
          code: ZodIssueCode.invalid_arguments,
          argumentsError: error
        }
      });
    }
    function makeReturnsIssue(returns, error) {
      return makeIssue({
        data: returns,
        path: ctx.path,
        errorMaps: [
          ctx.common.contextualErrorMap,
          ctx.schemaErrorMap,
          getErrorMap(),
          errorMap
        ].filter((x2) => !!x2),
        issueData: {
          code: ZodIssueCode.invalid_return_type,
          returnTypeError: error
        }
      });
    }
    const params = { errorMap: ctx.common.contextualErrorMap };
    const fn = ctx.data;
    if (this._def.returns instanceof ZodPromise) {
      const me2 = this;
      return OK(async function(...args) {
        const error = new ZodError([]);
        const parsedArgs = await me2._def.args.parseAsync(args, params).catch((e3) => {
          error.addIssue(makeArgsIssue(args, e3));
          throw error;
        });
        const result = await Reflect.apply(fn, this, parsedArgs);
        const parsedReturns = await me2._def.returns._def.type.parseAsync(result, params).catch((e3) => {
          error.addIssue(makeReturnsIssue(result, e3));
          throw error;
        });
        return parsedReturns;
      });
    } else {
      const me2 = this;
      return OK(function(...args) {
        const parsedArgs = me2._def.args.safeParse(args, params);
        if (!parsedArgs.success) {
          throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);
        }
        const result = Reflect.apply(fn, this, parsedArgs.data);
        const parsedReturns = me2._def.returns.safeParse(result, params);
        if (!parsedReturns.success) {
          throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);
        }
        return parsedReturns.data;
      });
    }
  }
  parameters() {
    return this._def.args;
  }
  returnType() {
    return this._def.returns;
  }
  args(...items2) {
    return new ZodFunction({
      ...this._def,
      args: ZodTuple.create(items2).rest(ZodUnknown.create())
    });
  }
  returns(returnType) {
    return new ZodFunction({
      ...this._def,
      returns: returnType
    });
  }
  implement(func) {
    const validatedFunc = this.parse(func);
    return validatedFunc;
  }
  strictImplement(func) {
    const validatedFunc = this.parse(func);
    return validatedFunc;
  }
  static create(args, returns, params) {
    return new ZodFunction({
      args: args ? args : ZodTuple.create([]).rest(ZodUnknown.create()),
      returns: returns || ZodUnknown.create(),
      typeName: ZodFirstPartyTypeKind.ZodFunction,
      ...processCreateParams(params)
    });
  }
}
class ZodLazy extends ZodType {
  get schema() {
    return this._def.getter();
  }
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const lazySchema = this._def.getter();
    return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });
  }
}
ZodLazy.create = (getter, params) => {
  return new ZodLazy({
    getter,
    typeName: ZodFirstPartyTypeKind.ZodLazy,
    ...processCreateParams(params)
  });
};
class ZodLiteral extends ZodType {
  _parse(input) {
    if (input.data !== this._def.value) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        received: ctx.data,
        code: ZodIssueCode.invalid_literal,
        expected: this._def.value
      });
      return INVALID;
    }
    return { status: "valid", value: input.data };
  }
  get value() {
    return this._def.value;
  }
}
ZodLiteral.create = (value, params) => {
  return new ZodLiteral({
    value,
    typeName: ZodFirstPartyTypeKind.ZodLiteral,
    ...processCreateParams(params)
  });
};
function createZodEnum(values, params) {
  return new ZodEnum({
    values,
    typeName: ZodFirstPartyTypeKind.ZodEnum,
    ...processCreateParams(params)
  });
}
class ZodEnum extends ZodType {
  _parse(input) {
    if (typeof input.data !== "string") {
      const ctx = this._getOrReturnCtx(input);
      const expectedValues = this._def.values;
      addIssueToContext(ctx, {
        expected: util.joinValues(expectedValues),
        received: ctx.parsedType,
        code: ZodIssueCode.invalid_type
      });
      return INVALID;
    }
    if (this._def.values.indexOf(input.data) === -1) {
      const ctx = this._getOrReturnCtx(input);
      const expectedValues = this._def.values;
      addIssueToContext(ctx, {
        received: ctx.data,
        code: ZodIssueCode.invalid_enum_value,
        options: expectedValues
      });
      return INVALID;
    }
    return OK(input.data);
  }
  get options() {
    return this._def.values;
  }
  get enum() {
    const enumValues = {};
    for (const val of this._def.values) {
      enumValues[val] = val;
    }
    return enumValues;
  }
  get Values() {
    const enumValues = {};
    for (const val of this._def.values) {
      enumValues[val] = val;
    }
    return enumValues;
  }
  get Enum() {
    const enumValues = {};
    for (const val of this._def.values) {
      enumValues[val] = val;
    }
    return enumValues;
  }
  extract(values) {
    return ZodEnum.create(values);
  }
  exclude(values) {
    return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));
  }
}
ZodEnum.create = createZodEnum;
class ZodNativeEnum extends ZodType {
  _parse(input) {
    const nativeEnumValues = util.getValidEnumValues(this._def.values);
    const ctx = this._getOrReturnCtx(input);
    if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {
      const expectedValues = util.objectValues(nativeEnumValues);
      addIssueToContext(ctx, {
        expected: util.joinValues(expectedValues),
        received: ctx.parsedType,
        code: ZodIssueCode.invalid_type
      });
      return INVALID;
    }
    if (nativeEnumValues.indexOf(input.data) === -1) {
      const expectedValues = util.objectValues(nativeEnumValues);
      addIssueToContext(ctx, {
        received: ctx.data,
        code: ZodIssueCode.invalid_enum_value,
        options: expectedValues
      });
      return INVALID;
    }
    return OK(input.data);
  }
  get enum() {
    return this._def.values;
  }
}
ZodNativeEnum.create = (values, params) => {
  return new ZodNativeEnum({
    values,
    typeName: ZodFirstPartyTypeKind.ZodNativeEnum,
    ...processCreateParams(params)
  });
};
class ZodPromise extends ZodType {
  unwrap() {
    return this._def.type;
  }
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.promise,
        received: ctx.parsedType
      });
      return INVALID;
    }
    const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);
    return OK(promisified.then((data2) => {
      return this._def.type.parseAsync(data2, {
        path: ctx.path,
        errorMap: ctx.common.contextualErrorMap
      });
    }));
  }
}
ZodPromise.create = (schema, params) => {
  return new ZodPromise({
    type: schema,
    typeName: ZodFirstPartyTypeKind.ZodPromise,
    ...processCreateParams(params)
  });
};
class ZodEffects extends ZodType {
  innerType() {
    return this._def.schema;
  }
  sourceType() {
    return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects ? this._def.schema.sourceType() : this._def.schema;
  }
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    const effect = this._def.effect || null;
    const checkCtx = {
      addIssue: (arg) => {
        addIssueToContext(ctx, arg);
        if (arg.fatal) {
          status.abort();
        } else {
          status.dirty();
        }
      },
      get path() {
        return ctx.path;
      }
    };
    checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);
    if (effect.type === "preprocess") {
      const processed = effect.transform(ctx.data, checkCtx);
      if (ctx.common.issues.length) {
        return {
          status: "dirty",
          value: ctx.data
        };
      }
      if (ctx.common.async) {
        return Promise.resolve(processed).then((processed2) => {
          return this._def.schema._parseAsync({
            data: processed2,
            path: ctx.path,
            parent: ctx
          });
        });
      } else {
        return this._def.schema._parseSync({
          data: processed,
          path: ctx.path,
          parent: ctx
        });
      }
    }
    if (effect.type === "refinement") {
      const executeRefinement = (acc) => {
        const result = effect.refinement(acc, checkCtx);
        if (ctx.common.async) {
          return Promise.resolve(result);
        }
        if (result instanceof Promise) {
          throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
        }
        return acc;
      };
      if (ctx.common.async === false) {
        const inner = this._def.schema._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        });
        if (inner.status === "aborted")
          return INVALID;
        if (inner.status === "dirty")
          status.dirty();
        executeRefinement(inner.value);
        return { status: status.value, value: inner.value };
      } else {
        return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {
          if (inner.status === "aborted")
            return INVALID;
          if (inner.status === "dirty")
            status.dirty();
          return executeRefinement(inner.value).then(() => {
            return { status: status.value, value: inner.value };
          });
        });
      }
    }
    if (effect.type === "transform") {
      if (ctx.common.async === false) {
        const base = this._def.schema._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        });
        if (!isValid(base))
          return base;
        const result = effect.transform(base.value, checkCtx);
        if (result instanceof Promise) {
          throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);
        }
        return { status: status.value, value: result };
      } else {
        return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {
          if (!isValid(base))
            return base;
          return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));
        });
      }
    }
    util.assertNever(effect);
  }
}
ZodEffects.create = (schema, effect, params) => {
  return new ZodEffects({
    schema,
    typeName: ZodFirstPartyTypeKind.ZodEffects,
    effect,
    ...processCreateParams(params)
  });
};
ZodEffects.createWithPreprocess = (preprocess, schema, params) => {
  return new ZodEffects({
    schema,
    effect: { type: "preprocess", transform: preprocess },
    typeName: ZodFirstPartyTypeKind.ZodEffects,
    ...processCreateParams(params)
  });
};
class ZodOptional extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType === ZodParsedType.undefined) {
      return OK(void 0);
    }
    return this._def.innerType._parse(input);
  }
  unwrap() {
    return this._def.innerType;
  }
}
ZodOptional.create = (type2, params) => {
  return new ZodOptional({
    innerType: type2,
    typeName: ZodFirstPartyTypeKind.ZodOptional,
    ...processCreateParams(params)
  });
};
class ZodNullable extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType === ZodParsedType.null) {
      return OK(null);
    }
    return this._def.innerType._parse(input);
  }
  unwrap() {
    return this._def.innerType;
  }
}
ZodNullable.create = (type2, params) => {
  return new ZodNullable({
    innerType: type2,
    typeName: ZodFirstPartyTypeKind.ZodNullable,
    ...processCreateParams(params)
  });
};
class ZodDefault extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    let data2 = ctx.data;
    if (ctx.parsedType === ZodParsedType.undefined) {
      data2 = this._def.defaultValue();
    }
    return this._def.innerType._parse({
      data: data2,
      path: ctx.path,
      parent: ctx
    });
  }
  removeDefault() {
    return this._def.innerType;
  }
}
ZodDefault.create = (type2, params) => {
  return new ZodDefault({
    innerType: type2,
    typeName: ZodFirstPartyTypeKind.ZodDefault,
    defaultValue: typeof params.default === "function" ? params.default : () => params.default,
    ...processCreateParams(params)
  });
};
class ZodCatch extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const newCtx = {
      ...ctx,
      common: {
        ...ctx.common,
        issues: []
      }
    };
    const result = this._def.innerType._parse({
      data: newCtx.data,
      path: newCtx.path,
      parent: {
        ...newCtx
      }
    });
    if (isAsync(result)) {
      return result.then((result2) => {
        return {
          status: "valid",
          value: result2.status === "valid" ? result2.value : this._def.catchValue({
            get error() {
              return new ZodError(newCtx.common.issues);
            },
            input: newCtx.data
          })
        };
      });
    } else {
      return {
        status: "valid",
        value: result.status === "valid" ? result.value : this._def.catchValue({
          get error() {
            return new ZodError(newCtx.common.issues);
          },
          input: newCtx.data
        })
      };
    }
  }
  removeCatch() {
    return this._def.innerType;
  }
}
ZodCatch.create = (type2, params) => {
  return new ZodCatch({
    innerType: type2,
    typeName: ZodFirstPartyTypeKind.ZodCatch,
    catchValue: typeof params.catch === "function" ? params.catch : () => params.catch,
    ...processCreateParams(params)
  });
};
class ZodNaN extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.nan) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.nan,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return { status: "valid", value: input.data };
  }
}
ZodNaN.create = (params) => {
  return new ZodNaN({
    typeName: ZodFirstPartyTypeKind.ZodNaN,
    ...processCreateParams(params)
  });
};
const BRAND = Symbol("zod_brand");
class ZodBranded extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const data2 = ctx.data;
    return this._def.type._parse({
      data: data2,
      path: ctx.path,
      parent: ctx
    });
  }
  unwrap() {
    return this._def.type;
  }
}
class ZodPipeline extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.common.async) {
      const handleAsync = async () => {
        const inResult = await this._def.in._parseAsync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        });
        if (inResult.status === "aborted")
          return INVALID;
        if (inResult.status === "dirty") {
          status.dirty();
          return DIRTY(inResult.value);
        } else {
          return this._def.out._parseAsync({
            data: inResult.value,
            path: ctx.path,
            parent: ctx
          });
        }
      };
      return handleAsync();
    } else {
      const inResult = this._def.in._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      });
      if (inResult.status === "aborted")
        return INVALID;
      if (inResult.status === "dirty") {
        status.dirty();
        return {
          status: "dirty",
          value: inResult.value
        };
      } else {
        return this._def.out._parseSync({
          data: inResult.value,
          path: ctx.path,
          parent: ctx
        });
      }
    }
  }
  static create(a2, b2) {
    return new ZodPipeline({
      in: a2,
      out: b2,
      typeName: ZodFirstPartyTypeKind.ZodPipeline
    });
  }
}
class ZodReadonly extends ZodType {
  _parse(input) {
    const result = this._def.innerType._parse(input);
    if (isValid(result)) {
      result.value = Object.freeze(result.value);
    }
    return result;
  }
}
ZodReadonly.create = (type2, params) => {
  return new ZodReadonly({
    innerType: type2,
    typeName: ZodFirstPartyTypeKind.ZodReadonly,
    ...processCreateParams(params)
  });
};
const custom = (check, params = {}, fatal) => {
  if (check)
    return ZodAny.create().superRefine((data2, ctx) => {
      var _a, _b;
      if (!check(data2)) {
        const p2 = typeof params === "function" ? params(data2) : typeof params === "string" ? { message: params } : params;
        const _fatal = (_b = (_a = p2.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;
        const p22 = typeof p2 === "string" ? { message: p2 } : p2;
        ctx.addIssue({ code: "custom", ...p22, fatal: _fatal });
      }
    });
  return ZodAny.create();
};
const late = {
  object: ZodObject.lazycreate
};
var ZodFirstPartyTypeKind;
(function(ZodFirstPartyTypeKind2) {
  ZodFirstPartyTypeKind2["ZodString"] = "ZodString";
  ZodFirstPartyTypeKind2["ZodNumber"] = "ZodNumber";
  ZodFirstPartyTypeKind2["ZodNaN"] = "ZodNaN";
  ZodFirstPartyTypeKind2["ZodBigInt"] = "ZodBigInt";
  ZodFirstPartyTypeKind2["ZodBoolean"] = "ZodBoolean";
  ZodFirstPartyTypeKind2["ZodDate"] = "ZodDate";
  ZodFirstPartyTypeKind2["ZodSymbol"] = "ZodSymbol";
  ZodFirstPartyTypeKind2["ZodUndefined"] = "ZodUndefined";
  ZodFirstPartyTypeKind2["ZodNull"] = "ZodNull";
  ZodFirstPartyTypeKind2["ZodAny"] = "ZodAny";
  ZodFirstPartyTypeKind2["ZodUnknown"] = "ZodUnknown";
  ZodFirstPartyTypeKind2["ZodNever"] = "ZodNever";
  ZodFirstPartyTypeKind2["ZodVoid"] = "ZodVoid";
  ZodFirstPartyTypeKind2["ZodArray"] = "ZodArray";
  ZodFirstPartyTypeKind2["ZodObject"] = "ZodObject";
  ZodFirstPartyTypeKind2["ZodUnion"] = "ZodUnion";
  ZodFirstPartyTypeKind2["ZodDiscriminatedUnion"] = "ZodDiscriminatedUnion";
  ZodFirstPartyTypeKind2["ZodIntersection"] = "ZodIntersection";
  ZodFirstPartyTypeKind2["ZodTuple"] = "ZodTuple";
  ZodFirstPartyTypeKind2["ZodRecord"] = "ZodRecord";
  ZodFirstPartyTypeKind2["ZodMap"] = "ZodMap";
  ZodFirstPartyTypeKind2["ZodSet"] = "ZodSet";
  ZodFirstPartyTypeKind2["ZodFunction"] = "ZodFunction";
  ZodFirstPartyTypeKind2["ZodLazy"] = "ZodLazy";
  ZodFirstPartyTypeKind2["ZodLiteral"] = "ZodLiteral";
  ZodFirstPartyTypeKind2["ZodEnum"] = "ZodEnum";
  ZodFirstPartyTypeKind2["ZodEffects"] = "ZodEffects";
  ZodFirstPartyTypeKind2["ZodNativeEnum"] = "ZodNativeEnum";
  ZodFirstPartyTypeKind2["ZodOptional"] = "ZodOptional";
  ZodFirstPartyTypeKind2["ZodNullable"] = "ZodNullable";
  ZodFirstPartyTypeKind2["ZodDefault"] = "ZodDefault";
  ZodFirstPartyTypeKind2["ZodCatch"] = "ZodCatch";
  ZodFirstPartyTypeKind2["ZodPromise"] = "ZodPromise";
  ZodFirstPartyTypeKind2["ZodBranded"] = "ZodBranded";
  ZodFirstPartyTypeKind2["ZodPipeline"] = "ZodPipeline";
  ZodFirstPartyTypeKind2["ZodReadonly"] = "ZodReadonly";
})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));
const instanceOfType = (cls, params = {
  message: `Input not instance of ${cls.name}`
}) => custom((data2) => data2 instanceof cls, params);
const stringType = ZodString.create;
const numberType = ZodNumber.create;
const nanType = ZodNaN.create;
const bigIntType = ZodBigInt.create;
const booleanType = ZodBoolean.create;
const dateType = ZodDate.create;
const symbolType = ZodSymbol.create;
const undefinedType = ZodUndefined.create;
const nullType = ZodNull.create;
const anyType = ZodAny.create;
const unknownType = ZodUnknown.create;
const neverType = ZodNever.create;
const voidType = ZodVoid.create;
const arrayType = ZodArray.create;
const objectType = ZodObject.create;
const strictObjectType = ZodObject.strictCreate;
const unionType = ZodUnion.create;
const discriminatedUnionType = ZodDiscriminatedUnion.create;
const intersectionType = ZodIntersection.create;
const tupleType = ZodTuple.create;
const recordType = ZodRecord.create;
const mapType = ZodMap.create;
const setType = ZodSet.create;
const functionType = ZodFunction.create;
const lazyType = ZodLazy.create;
const literalType = ZodLiteral.create;
const enumType = ZodEnum.create;
const nativeEnumType = ZodNativeEnum.create;
const promiseType = ZodPromise.create;
const effectsType = ZodEffects.create;
const optionalType = ZodOptional.create;
const nullableType = ZodNullable.create;
const preprocessType = ZodEffects.createWithPreprocess;
const pipelineType = ZodPipeline.create;
const ostring = () => stringType().optional();
const onumber = () => numberType().optional();
const oboolean = () => booleanType().optional();
const coerce = {
  string: (arg) => ZodString.create({ ...arg, coerce: true }),
  number: (arg) => ZodNumber.create({ ...arg, coerce: true }),
  boolean: (arg) => ZodBoolean.create({
    ...arg,
    coerce: true
  }),
  bigint: (arg) => ZodBigInt.create({ ...arg, coerce: true }),
  date: (arg) => ZodDate.create({ ...arg, coerce: true })
};
const NEVER = INVALID;
var z = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  defaultErrorMap: errorMap,
  setErrorMap,
  getErrorMap,
  makeIssue,
  EMPTY_PATH,
  addIssueToContext,
  ParseStatus,
  INVALID,
  DIRTY,
  OK,
  isAborted,
  isDirty,
  isValid,
  isAsync,
  get util() {
    return util;
  },
  get objectUtil() {
    return objectUtil;
  },
  ZodParsedType,
  getParsedType,
  ZodType,
  ZodString,
  ZodNumber,
  ZodBigInt,
  ZodBoolean,
  ZodDate,
  ZodSymbol,
  ZodUndefined,
  ZodNull,
  ZodAny,
  ZodUnknown,
  ZodNever,
  ZodVoid,
  ZodArray,
  ZodObject,
  ZodUnion,
  ZodDiscriminatedUnion,
  ZodIntersection,
  ZodTuple,
  ZodRecord,
  ZodMap,
  ZodSet,
  ZodFunction,
  ZodLazy,
  ZodLiteral,
  ZodEnum,
  ZodNativeEnum,
  ZodPromise,
  ZodEffects,
  ZodTransformer: ZodEffects,
  ZodOptional,
  ZodNullable,
  ZodDefault,
  ZodCatch,
  ZodNaN,
  BRAND,
  ZodBranded,
  ZodPipeline,
  ZodReadonly,
  custom,
  Schema: ZodType,
  ZodSchema: ZodType,
  late,
  get ZodFirstPartyTypeKind() {
    return ZodFirstPartyTypeKind;
  },
  coerce,
  any: anyType,
  array: arrayType,
  bigint: bigIntType,
  boolean: booleanType,
  date: dateType,
  discriminatedUnion: discriminatedUnionType,
  effect: effectsType,
  "enum": enumType,
  "function": functionType,
  "instanceof": instanceOfType,
  intersection: intersectionType,
  lazy: lazyType,
  literal: literalType,
  map: mapType,
  nan: nanType,
  nativeEnum: nativeEnumType,
  never: neverType,
  "null": nullType,
  nullable: nullableType,
  number: numberType,
  object: objectType,
  oboolean,
  onumber,
  optional: optionalType,
  ostring,
  pipeline: pipelineType,
  preprocess: preprocessType,
  promise: promiseType,
  record: recordType,
  set: setType,
  strictObject: strictObjectType,
  string: stringType,
  symbol: symbolType,
  transformer: effectsType,
  tuple: tupleType,
  "undefined": undefinedType,
  union: unionType,
  unknown: unknownType,
  "void": voidType,
  NEVER,
  ZodIssueCode,
  quotelessJson,
  ZodError
});
const $b73a6c6685e72184$export$b04be29aa201d4f5 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.label, _extends$y({}, props, {
    ref: forwardedRef,
    onMouseDown: (event) => {
      var _props$onMouseDown;
      (_props$onMouseDown = props.onMouseDown) === null || _props$onMouseDown === void 0 || _props$onMouseDown.call(props, event);
      if (!event.defaultPrevented && event.detail > 1)
        event.preventDefault();
    }
  }));
});
const $b73a6c6685e72184$export$be92b6f5f03c0fe9 = $b73a6c6685e72184$export$b04be29aa201d4f5;
const labelVariants = cva(
  "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
);
const Label = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $b73a6c6685e72184$export$be92b6f5f03c0fe9,
  {
    ref,
    className: cn(labelVariants(), className),
    ...props
  }
));
Label.displayName = $b73a6c6685e72184$export$be92b6f5f03c0fe9.displayName;
const Form = FormProvider;
const FormFieldContext = reactExports.createContext(
  {}
);
const FormField = ({
  ...props
}) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(FormFieldContext.Provider, { value: { name: props.name }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Controller, { ...props }) });
};
const useFormField = () => {
  const fieldContext = reactExports.useContext(FormFieldContext);
  const itemContext = reactExports.useContext(FormItemContext);
  const { getFieldState, formState } = useFormContext();
  const fieldState = getFieldState(fieldContext.name, formState);
  if (!fieldContext) {
    throw new Error("useFormField should be used within <FormField>");
  }
  const { id: id2 } = itemContext;
  return {
    id: id2,
    name: fieldContext.name,
    formItemId: `${id2}-form-item`,
    formDescriptionId: `${id2}-form-item-description`,
    formMessageId: `${id2}-form-item-message`,
    ...fieldState
  };
};
const FormItemContext = reactExports.createContext(
  {}
);
const FormItem = reactExports.forwardRef(({ className, ...props }, ref) => {
  const id2 = reactExports.useId();
  return /* @__PURE__ */ jsxRuntimeExports.jsx(FormItemContext.Provider, { value: { id: id2 }, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ref, className: cn("space-y-2", className), ...props }) });
});
FormItem.displayName = "FormItem";
const FormLabel = reactExports.forwardRef(({ className, ...props }, ref) => {
  const { error, formItemId } = useFormField();
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    Label,
    {
      ref,
      className: cn(error && "text-destructive", className),
      htmlFor: formItemId,
      ...props
    }
  );
});
FormLabel.displayName = "FormLabel";
const FormControl = reactExports.forwardRef(({ ...props }, ref) => {
  const { error, formItemId, formDescriptionId, formMessageId } = useFormField();
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    $5e63c961fc1ce211$export$8c6ed5c666ac1360,
    {
      ref,
      id: formItemId,
      "aria-describedby": !error ? `${formDescriptionId}` : `${formDescriptionId} ${formMessageId}`,
      "aria-invalid": !!error,
      ...props
    }
  );
});
FormControl.displayName = "FormControl";
const FormDescription = reactExports.forwardRef(({ className, ...props }, ref) => {
  const { formDescriptionId } = useFormField();
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "p",
    {
      ref,
      id: formDescriptionId,
      className: cn("text-sm text-muted-foreground", className),
      ...props
    }
  );
});
FormDescription.displayName = "FormDescription";
const FormMessage = reactExports.forwardRef(({ className, children: children2, ...props }, ref) => {
  const { error, formMessageId } = useFormField();
  const body = error ? String(error?.message) : children2;
  if (!body) {
    return null;
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "p",
    {
      ref,
      id: formMessageId,
      className: cn("text-sm font-medium text-destructive", className),
      ...props,
      children: body
    }
  );
});
FormMessage.displayName = "FormMessage";
const $cc7e05a45900e73f$var$OPEN_KEYS = [
  " ",
  "Enter",
  "ArrowUp",
  "ArrowDown"
];
const $cc7e05a45900e73f$var$SELECTION_KEYS = [
  " ",
  "Enter"
];
const $cc7e05a45900e73f$var$SELECT_NAME = "Select";
const [$cc7e05a45900e73f$var$Collection, $cc7e05a45900e73f$var$useCollection, $cc7e05a45900e73f$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($cc7e05a45900e73f$var$SELECT_NAME);
const [$cc7e05a45900e73f$var$createSelectContext, $cc7e05a45900e73f$export$286727a75dc039bd] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($cc7e05a45900e73f$var$SELECT_NAME, [
  $cc7e05a45900e73f$var$createCollectionScope,
  $cf1ac5d9fe0e8206$export$722aac194ae923
]);
const $cc7e05a45900e73f$var$usePopperScope = $cf1ac5d9fe0e8206$export$722aac194ae923();
const [$cc7e05a45900e73f$var$SelectProvider, $cc7e05a45900e73f$var$useSelectContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$SELECT_NAME);
const [$cc7e05a45900e73f$var$SelectNativeOptionsProvider, $cc7e05a45900e73f$var$useSelectNativeOptionsContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$SELECT_NAME);
const $cc7e05a45900e73f$export$ef9b1a59e592288f = (props) => {
  const { __scopeSelect, children: children2, open: openProp, defaultOpen, onOpenChange, value: valueProp, defaultValue: defaultValue2, onValueChange, dir, name, autoComplete, disabled, required } = props;
  const popperScope = $cc7e05a45900e73f$var$usePopperScope(__scopeSelect);
  const [trigger, setTrigger] = reactExports.useState(null);
  const [valueNode, setValueNode] = reactExports.useState(null);
  const [valueNodeHasChildren, setValueNodeHasChildren] = reactExports.useState(false);
  const direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  const [open = false, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  const [value, setValue] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: valueProp,
    defaultProp: defaultValue2,
    onChange: onValueChange
  });
  const triggerPointerDownPosRef = reactExports.useRef(null);
  const isFormControl = trigger ? Boolean(trigger.closest("form")) : true;
  const [nativeOptionsSet, setNativeOptionsSet] = reactExports.useState(/* @__PURE__ */ new Set());
  const nativeSelectKey = Array.from(nativeOptionsSet).map(
    (option) => option.props.value
  ).join(";");
  return /* @__PURE__ */ reactExports.createElement($cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9, popperScope, /* @__PURE__ */ reactExports.createElement($cc7e05a45900e73f$var$SelectProvider, {
    required,
    scope: __scopeSelect,
    trigger,
    onTriggerChange: setTrigger,
    valueNode,
    onValueNodeChange: setValueNode,
    valueNodeHasChildren,
    onValueNodeHasChildrenChange: setValueNodeHasChildren,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    value,
    onValueChange: setValue,
    open,
    onOpenChange: setOpen,
    dir: direction,
    triggerPointerDownPosRef,
    disabled
  }, /* @__PURE__ */ reactExports.createElement($cc7e05a45900e73f$var$Collection.Provider, {
    scope: __scopeSelect
  }, /* @__PURE__ */ reactExports.createElement($cc7e05a45900e73f$var$SelectNativeOptionsProvider, {
    scope: props.__scopeSelect,
    onNativeOptionAdd: reactExports.useCallback((option) => {
      setNativeOptionsSet(
        (prev) => new Set(prev).add(option)
      );
    }, []),
    onNativeOptionRemove: reactExports.useCallback((option) => {
      setNativeOptionsSet((prev) => {
        const optionsSet = new Set(prev);
        optionsSet.delete(option);
        return optionsSet;
      });
    }, [])
  }, children2)), isFormControl ? /* @__PURE__ */ reactExports.createElement($cc7e05a45900e73f$var$BubbleSelect, {
    key: nativeSelectKey,
    "aria-hidden": true,
    required,
    tabIndex: -1,
    name,
    autoComplete,
    value,
    onChange: (event) => setValue(event.target.value),
    disabled
  }, value === void 0 ? /* @__PURE__ */ reactExports.createElement("option", {
    value: ""
  }) : null, Array.from(nativeOptionsSet)) : null));
};
const $cc7e05a45900e73f$var$TRIGGER_NAME = "SelectTrigger";
const $cc7e05a45900e73f$export$3ac1e88a1c0b9f1 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, disabled = false, ...triggerProps } = props;
  const popperScope = $cc7e05a45900e73f$var$usePopperScope(__scopeSelect);
  const context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$TRIGGER_NAME, __scopeSelect);
  const isDisabled = context.disabled || disabled;
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.onTriggerChange);
  const getItems = $cc7e05a45900e73f$var$useCollection(__scopeSelect);
  const [searchRef, handleTypeaheadSearch, resetTypeahead] = $cc7e05a45900e73f$var$useTypeaheadSearch((search) => {
    const enabledItems = getItems().filter(
      (item) => !item.disabled
    );
    const currentItem = enabledItems.find(
      (item) => item.value === context.value
    );
    const nextItem = $cc7e05a45900e73f$var$findNextItem(enabledItems, search, currentItem);
    if (nextItem !== void 0)
      context.onValueChange(nextItem.value);
  });
  const handleOpen = () => {
    if (!isDisabled) {
      context.onOpenChange(true);
      resetTypeahead();
    }
  };
  return /* @__PURE__ */ reactExports.createElement($cf1ac5d9fe0e8206$export$b688253958b8dfe7, _extends$y({
    asChild: true
  }, popperScope), /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends$y({
    type: "button",
    role: "combobox",
    "aria-controls": context.contentId,
    "aria-expanded": context.open,
    "aria-required": context.required,
    "aria-autocomplete": "none",
    dir: context.dir,
    "data-state": context.open ? "open" : "closed",
    disabled: isDisabled,
    "data-disabled": isDisabled ? "" : void 0,
    "data-placeholder": $cc7e05a45900e73f$var$shouldShowPlaceholder(context.value) ? "" : void 0
  }, triggerProps, {
    ref: composedRefs,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(triggerProps.onClick, (event) => {
      event.currentTarget.focus();
    }),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(triggerProps.onPointerDown, (event) => {
      const target = event.target;
      if (target.hasPointerCapture(event.pointerId))
        target.releasePointerCapture(event.pointerId);
      if (event.button === 0 && event.ctrlKey === false) {
        handleOpen();
        context.triggerPointerDownPosRef.current = {
          x: Math.round(event.pageX),
          y: Math.round(event.pageY)
        };
        event.preventDefault();
      }
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(triggerProps.onKeyDown, (event) => {
      const isTypingAhead = searchRef.current !== "";
      const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
      if (!isModifierKey && event.key.length === 1)
        handleTypeaheadSearch(event.key);
      if (isTypingAhead && event.key === " ")
        return;
      if ($cc7e05a45900e73f$var$OPEN_KEYS.includes(event.key)) {
        handleOpen();
        event.preventDefault();
      }
    })
  })));
});
const $cc7e05a45900e73f$var$VALUE_NAME = "SelectValue";
const $cc7e05a45900e73f$export$e288731fd71264f0 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, className, style, children: children2, placeholder = "", ...valueProps } = props;
  const context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$VALUE_NAME, __scopeSelect);
  const { onValueNodeHasChildrenChange } = context;
  const hasChildren = children2 !== void 0;
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.onValueNodeChange);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    onValueNodeHasChildrenChange(hasChildren);
  }, [
    onValueNodeHasChildrenChange,
    hasChildren
  ]);
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends$y({}, valueProps, {
    ref: composedRefs,
    style: {
      pointerEvents: "none"
    }
  }), $cc7e05a45900e73f$var$shouldShowPlaceholder(context.value) ? /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, placeholder) : children2);
});
const $cc7e05a45900e73f$export$99b400cabb58c515 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, children: children2, ...iconProps } = props;
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends$y({
    "aria-hidden": true
  }, iconProps, {
    ref: forwardedRef
  }), children2 || "▼");
});
const $cc7e05a45900e73f$export$b2af6c9944296213 = (props) => {
  return /* @__PURE__ */ reactExports.createElement($f1701beae083dbae$export$602eac185826482c, _extends$y({
    asChild: true
  }, props));
};
const $cc7e05a45900e73f$var$CONTENT_NAME = "SelectContent";
const $cc7e05a45900e73f$export$c973a4b3cb86a03d = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$CONTENT_NAME, props.__scopeSelect);
  const [fragment, setFragment] = reactExports.useState();
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    setFragment(new DocumentFragment());
  }, []);
  if (!context.open) {
    const frag = fragment;
    return frag ? /* @__PURE__ */ reactDomExports.createPortal(/* @__PURE__ */ reactExports.createElement($cc7e05a45900e73f$var$SelectContentProvider, {
      scope: props.__scopeSelect
    }, /* @__PURE__ */ reactExports.createElement($cc7e05a45900e73f$var$Collection.Slot, {
      scope: props.__scopeSelect
    }, /* @__PURE__ */ reactExports.createElement("div", null, props.children))), frag) : null;
  }
  return /* @__PURE__ */ reactExports.createElement($cc7e05a45900e73f$var$SelectContentImpl, _extends$y({}, props, {
    ref: forwardedRef
  }));
});
const $cc7e05a45900e73f$var$CONTENT_MARGIN = 10;
const [$cc7e05a45900e73f$var$SelectContentProvider, $cc7e05a45900e73f$var$useSelectContentContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$CONTENT_NAME);
const $cc7e05a45900e73f$var$SelectContentImpl = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const {
    __scopeSelect,
    position = "item-aligned",
    onCloseAutoFocus,
    onEscapeKeyDown,
    onPointerDownOutside,
    side,
    sideOffset,
    align,
    alignOffset,
    arrowPadding,
    collisionBoundary,
    collisionPadding,
    sticky,
    hideWhenDetached,
    avoidCollisions,
    //
    ...contentProps
  } = props;
  const context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$CONTENT_NAME, __scopeSelect);
  const [content, setContent] = reactExports.useState(null);
  const [viewport, setViewport] = reactExports.useState(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setContent(node)
  );
  const [selectedItem, setSelectedItem] = reactExports.useState(null);
  const [selectedItemText, setSelectedItemText] = reactExports.useState(null);
  const getItems = $cc7e05a45900e73f$var$useCollection(__scopeSelect);
  const [isPositioned, setIsPositioned] = reactExports.useState(false);
  const firstValidItemFoundRef = reactExports.useRef(false);
  reactExports.useEffect(() => {
    if (content)
      return hideOthers(content);
  }, [
    content
  ]);
  $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c();
  const focusFirst = reactExports.useCallback((candidates) => {
    const [firstItem, ...restItems] = getItems().map(
      (item) => item.ref.current
    );
    const [lastItem] = restItems.slice(-1);
    const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
    for (const candidate of candidates) {
      if (candidate === PREVIOUSLY_FOCUSED_ELEMENT)
        return;
      candidate === null || candidate === void 0 || candidate.scrollIntoView({
        block: "nearest"
      });
      if (candidate === firstItem && viewport)
        viewport.scrollTop = 0;
      if (candidate === lastItem && viewport)
        viewport.scrollTop = viewport.scrollHeight;
      candidate === null || candidate === void 0 || candidate.focus();
      if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT)
        return;
    }
  }, [
    getItems,
    viewport
  ]);
  const focusSelectedItem = reactExports.useCallback(
    () => focusFirst([
      selectedItem,
      content
    ]),
    [
      focusFirst,
      selectedItem,
      content
    ]
  );
  reactExports.useEffect(() => {
    if (isPositioned)
      focusSelectedItem();
  }, [
    isPositioned,
    focusSelectedItem
  ]);
  const { onOpenChange, triggerPointerDownPosRef } = context;
  reactExports.useEffect(() => {
    if (content) {
      let pointerMoveDelta = {
        x: 0,
        y: 0
      };
      const handlePointerMove = (event) => {
        var _triggerPointerDownPo, _triggerPointerDownPo2, _triggerPointerDownPo3, _triggerPointerDownPo4;
        pointerMoveDelta = {
          x: Math.abs(Math.round(event.pageX) - ((_triggerPointerDownPo = (_triggerPointerDownPo2 = triggerPointerDownPosRef.current) === null || _triggerPointerDownPo2 === void 0 ? void 0 : _triggerPointerDownPo2.x) !== null && _triggerPointerDownPo !== void 0 ? _triggerPointerDownPo : 0)),
          y: Math.abs(Math.round(event.pageY) - ((_triggerPointerDownPo3 = (_triggerPointerDownPo4 = triggerPointerDownPosRef.current) === null || _triggerPointerDownPo4 === void 0 ? void 0 : _triggerPointerDownPo4.y) !== null && _triggerPointerDownPo3 !== void 0 ? _triggerPointerDownPo3 : 0))
        };
      };
      const handlePointerUp = (event) => {
        if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10)
          event.preventDefault();
        else if (!content.contains(event.target))
          onOpenChange(false);
        document.removeEventListener("pointermove", handlePointerMove);
        triggerPointerDownPosRef.current = null;
      };
      if (triggerPointerDownPosRef.current !== null) {
        document.addEventListener("pointermove", handlePointerMove);
        document.addEventListener("pointerup", handlePointerUp, {
          capture: true,
          once: true
        });
      }
      return () => {
        document.removeEventListener("pointermove", handlePointerMove);
        document.removeEventListener("pointerup", handlePointerUp, {
          capture: true
        });
      };
    }
  }, [
    content,
    onOpenChange,
    triggerPointerDownPosRef
  ]);
  reactExports.useEffect(() => {
    const close = () => onOpenChange(false);
    window.addEventListener("blur", close);
    window.addEventListener("resize", close);
    return () => {
      window.removeEventListener("blur", close);
      window.removeEventListener("resize", close);
    };
  }, [
    onOpenChange
  ]);
  const [searchRef, handleTypeaheadSearch] = $cc7e05a45900e73f$var$useTypeaheadSearch((search) => {
    const enabledItems = getItems().filter(
      (item) => !item.disabled
    );
    const currentItem = enabledItems.find(
      (item) => item.ref.current === document.activeElement
    );
    const nextItem = $cc7e05a45900e73f$var$findNextItem(enabledItems, search, currentItem);
    if (nextItem)
      setTimeout(
        () => nextItem.ref.current.focus()
      );
  });
  const itemRefCallback = reactExports.useCallback((node, value, disabled) => {
    const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;
    const isSelectedItem = context.value !== void 0 && context.value === value;
    if (isSelectedItem || isFirstValidItem) {
      setSelectedItem(node);
      if (isFirstValidItem)
        firstValidItemFoundRef.current = true;
    }
  }, [
    context.value
  ]);
  const handleItemLeave = reactExports.useCallback(
    () => content === null || content === void 0 ? void 0 : content.focus(),
    [
      content
    ]
  );
  const itemTextRefCallback = reactExports.useCallback((node, value, disabled) => {
    const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;
    const isSelectedItem = context.value !== void 0 && context.value === value;
    if (isSelectedItem || isFirstValidItem)
      setSelectedItemText(node);
  }, [
    context.value
  ]);
  const SelectPosition = position === "popper" ? $cc7e05a45900e73f$var$SelectPopperPosition : $cc7e05a45900e73f$var$SelectItemAlignedPosition;
  const popperContentProps = SelectPosition === $cc7e05a45900e73f$var$SelectPopperPosition ? {
    side,
    sideOffset,
    align,
    alignOffset,
    arrowPadding,
    collisionBoundary,
    collisionPadding,
    sticky,
    hideWhenDetached,
    avoidCollisions
  } : {};
  return /* @__PURE__ */ reactExports.createElement($cc7e05a45900e73f$var$SelectContentProvider, {
    scope: __scopeSelect,
    content,
    viewport,
    onViewportChange: setViewport,
    itemRefCallback,
    selectedItem,
    onItemLeave: handleItemLeave,
    itemTextRefCallback,
    focusSelectedItem,
    selectedItemText,
    position,
    isPositioned,
    searchRef
  }, /* @__PURE__ */ reactExports.createElement($01b9c$RemoveScroll, {
    as: $5e63c961fc1ce211$export$8c6ed5c666ac1360,
    allowPinchZoom: true
  }, /* @__PURE__ */ reactExports.createElement($d3863c46a17e8a28$export$20e40289641fbbb6, {
    asChild: true,
    trapped: context.open,
    onMountAutoFocus: (event) => {
      event.preventDefault();
    },
    onUnmountAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(onCloseAutoFocus, (event) => {
      var _context$trigger;
      (_context$trigger = context.trigger) === null || _context$trigger === void 0 || _context$trigger.focus({
        preventScroll: true
      });
      event.preventDefault();
    })
  }, /* @__PURE__ */ reactExports.createElement($5cb92bef7577960e$export$177fb62ff3ec1f22, {
    asChild: true,
    disableOutsidePointerEvents: true,
    onEscapeKeyDown,
    onPointerDownOutside,
    onFocusOutside: (event) => event.preventDefault(),
    onDismiss: () => context.onOpenChange(false)
  }, /* @__PURE__ */ reactExports.createElement(SelectPosition, _extends$y({
    role: "listbox",
    id: context.contentId,
    "data-state": context.open ? "open" : "closed",
    dir: context.dir,
    onContextMenu: (event) => event.preventDefault()
  }, contentProps, popperContentProps, {
    onPlaced: () => setIsPositioned(true),
    ref: composedRefs,
    style: {
      // flex layout so we can place the scroll buttons properly
      display: "flex",
      flexDirection: "column",
      // reset the outline by default as the content MAY get focused
      outline: "none",
      ...contentProps.style
    },
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(contentProps.onKeyDown, (event) => {
      const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
      if (event.key === "Tab")
        event.preventDefault();
      if (!isModifierKey && event.key.length === 1)
        handleTypeaheadSearch(event.key);
      if ([
        "ArrowUp",
        "ArrowDown",
        "Home",
        "End"
      ].includes(event.key)) {
        const items2 = getItems().filter(
          (item) => !item.disabled
        );
        let candidateNodes = items2.map(
          (item) => item.ref.current
        );
        if ([
          "ArrowUp",
          "End"
        ].includes(event.key))
          candidateNodes = candidateNodes.slice().reverse();
        if ([
          "ArrowUp",
          "ArrowDown"
        ].includes(event.key)) {
          const currentElement = event.target;
          const currentIndex = candidateNodes.indexOf(currentElement);
          candidateNodes = candidateNodes.slice(currentIndex + 1);
        }
        setTimeout(
          () => focusFirst(candidateNodes)
        );
        event.preventDefault();
      }
    })
  }))))));
});
const $cc7e05a45900e73f$var$SelectItemAlignedPosition = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, onPlaced, ...popperProps } = props;
  const context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$CONTENT_NAME, __scopeSelect);
  const contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$CONTENT_NAME, __scopeSelect);
  const [contentWrapper, setContentWrapper] = reactExports.useState(null);
  const [content, setContent] = reactExports.useState(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setContent(node)
  );
  const getItems = $cc7e05a45900e73f$var$useCollection(__scopeSelect);
  const shouldExpandOnScrollRef = reactExports.useRef(false);
  const shouldRepositionRef = reactExports.useRef(true);
  const { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext;
  const position = reactExports.useCallback(() => {
    if (context.trigger && context.valueNode && contentWrapper && content && viewport && selectedItem && selectedItemText) {
      const triggerRect = context.trigger.getBoundingClientRect();
      const contentRect = content.getBoundingClientRect();
      const valueNodeRect = context.valueNode.getBoundingClientRect();
      const itemTextRect = selectedItemText.getBoundingClientRect();
      if (context.dir !== "rtl") {
        const itemTextOffset = itemTextRect.left - contentRect.left;
        const left = valueNodeRect.left - itemTextOffset;
        const leftDelta = triggerRect.left - left;
        const minContentWidth = triggerRect.width + leftDelta;
        const contentWidth = Math.max(minContentWidth, contentRect.width);
        const rightEdge = window.innerWidth - $cc7e05a45900e73f$var$CONTENT_MARGIN;
        const clampedLeft = $ae6933e535247d3d$export$7d15b64cf5a3a4c4(left, [
          $cc7e05a45900e73f$var$CONTENT_MARGIN,
          rightEdge - contentWidth
        ]);
        contentWrapper.style.minWidth = minContentWidth + "px";
        contentWrapper.style.left = clampedLeft + "px";
      } else {
        const itemTextOffset = contentRect.right - itemTextRect.right;
        const right = window.innerWidth - valueNodeRect.right - itemTextOffset;
        const rightDelta = window.innerWidth - triggerRect.right - right;
        const minContentWidth = triggerRect.width + rightDelta;
        const contentWidth = Math.max(minContentWidth, contentRect.width);
        const leftEdge = window.innerWidth - $cc7e05a45900e73f$var$CONTENT_MARGIN;
        const clampedRight = $ae6933e535247d3d$export$7d15b64cf5a3a4c4(right, [
          $cc7e05a45900e73f$var$CONTENT_MARGIN,
          leftEdge - contentWidth
        ]);
        contentWrapper.style.minWidth = minContentWidth + "px";
        contentWrapper.style.right = clampedRight + "px";
      }
      const items2 = getItems();
      const availableHeight = window.innerHeight - $cc7e05a45900e73f$var$CONTENT_MARGIN * 2;
      const itemsHeight = viewport.scrollHeight;
      const contentStyles = window.getComputedStyle(content);
      const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);
      const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);
      const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);
      const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);
      const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth;
      const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);
      const viewportStyles = window.getComputedStyle(viewport);
      const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);
      const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);
      const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - $cc7e05a45900e73f$var$CONTENT_MARGIN;
      const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;
      const selectedItemHalfHeight = selectedItem.offsetHeight / 2;
      const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;
      const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;
      const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;
      const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;
      if (willAlignWithoutTopOverflow) {
        const isLastItem = selectedItem === items2[items2.length - 1].ref.current;
        contentWrapper.style.bottom = "0px";
        const viewportOffsetBottom = content.clientHeight - viewport.offsetTop - viewport.offsetHeight;
        const clampedTriggerMiddleToBottomEdge = Math.max(triggerMiddleToBottomEdge, selectedItemHalfHeight + (isLastItem ? viewportPaddingBottom : 0) + viewportOffsetBottom + contentBorderBottomWidth);
        const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;
        contentWrapper.style.height = height + "px";
      } else {
        const isFirstItem = selectedItem === items2[0].ref.current;
        contentWrapper.style.top = "0px";
        const clampedTopEdgeToTriggerMiddle = Math.max(topEdgeToTriggerMiddle, contentBorderTopWidth + viewport.offsetTop + (isFirstItem ? viewportPaddingTop : 0) + selectedItemHalfHeight);
        const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;
        contentWrapper.style.height = height + "px";
        viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;
      }
      contentWrapper.style.margin = `${$cc7e05a45900e73f$var$CONTENT_MARGIN}px 0`;
      contentWrapper.style.minHeight = minContentHeight + "px";
      contentWrapper.style.maxHeight = availableHeight + "px";
      onPlaced === null || onPlaced === void 0 || onPlaced();
      requestAnimationFrame(
        () => shouldExpandOnScrollRef.current = true
      );
    }
  }, [
    getItems,
    context.trigger,
    context.valueNode,
    contentWrapper,
    content,
    viewport,
    selectedItem,
    selectedItemText,
    context.dir,
    onPlaced
  ]);
  $9f79659886946c16$export$e5c5a5f917a5871c(
    () => position(),
    [
      position
    ]
  );
  const [contentZIndex, setContentZIndex] = reactExports.useState();
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (content)
      setContentZIndex(window.getComputedStyle(content).zIndex);
  }, [
    content
  ]);
  const handleScrollButtonChange = reactExports.useCallback((node) => {
    if (node && shouldRepositionRef.current === true) {
      position();
      focusSelectedItem === null || focusSelectedItem === void 0 || focusSelectedItem();
      shouldRepositionRef.current = false;
    }
  }, [
    position,
    focusSelectedItem
  ]);
  return /* @__PURE__ */ reactExports.createElement($cc7e05a45900e73f$var$SelectViewportProvider, {
    scope: __scopeSelect,
    contentWrapper,
    shouldExpandOnScrollRef,
    onScrollButtonChange: handleScrollButtonChange
  }, /* @__PURE__ */ reactExports.createElement("div", {
    ref: setContentWrapper,
    style: {
      display: "flex",
      flexDirection: "column",
      position: "fixed",
      zIndex: contentZIndex
    }
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({}, popperProps, {
    ref: composedRefs,
    style: {
      // When we get the height of the content, it includes borders. If we were to set
      // the height without having `boxSizing: 'border-box'` it would be too big.
      boxSizing: "border-box",
      // We need to ensure the content doesn't get taller than the wrapper
      maxHeight: "100%",
      ...popperProps.style
    }
  }))));
});
const $cc7e05a45900e73f$var$SelectPopperPosition = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, align = "start", collisionPadding = $cc7e05a45900e73f$var$CONTENT_MARGIN, ...popperProps } = props;
  const popperScope = $cc7e05a45900e73f$var$usePopperScope(__scopeSelect);
  return /* @__PURE__ */ reactExports.createElement($cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2, _extends$y({}, popperScope, popperProps, {
    ref: forwardedRef,
    align,
    collisionPadding,
    style: {
      // Ensure border-box for floating-ui calculations
      boxSizing: "border-box",
      ...popperProps.style,
      "--radix-select-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-select-content-available-width": "var(--radix-popper-available-width)",
      "--radix-select-content-available-height": "var(--radix-popper-available-height)",
      "--radix-select-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-select-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }));
});
const [$cc7e05a45900e73f$var$SelectViewportProvider, $cc7e05a45900e73f$var$useSelectViewportContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$CONTENT_NAME, {});
const $cc7e05a45900e73f$var$VIEWPORT_NAME = "SelectViewport";
const $cc7e05a45900e73f$export$9ed6e7b40248d36d = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, ...viewportProps } = props;
  const contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$VIEWPORT_NAME, __scopeSelect);
  const viewportContext = $cc7e05a45900e73f$var$useSelectViewportContext($cc7e05a45900e73f$var$VIEWPORT_NAME, __scopeSelect);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, contentContext.onViewportChange);
  const prevScrollTopRef = reactExports.useRef(0);
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement("style", {
    dangerouslySetInnerHTML: {
      __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`
    }
  }), /* @__PURE__ */ reactExports.createElement($cc7e05a45900e73f$var$Collection.Slot, {
    scope: __scopeSelect
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    "data-radix-select-viewport": "",
    role: "presentation"
  }, viewportProps, {
    ref: composedRefs,
    style: {
      // we use position: 'relative' here on the `viewport` so that when we call
      // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport
      // (independent of the scrollUpButton).
      position: "relative",
      flex: 1,
      overflow: "auto",
      ...viewportProps.style
    },
    onScroll: $e42e1063c40fb3ef$export$b9ecd428b558ff10(viewportProps.onScroll, (event) => {
      const viewport = event.currentTarget;
      const { contentWrapper, shouldExpandOnScrollRef } = viewportContext;
      if (shouldExpandOnScrollRef !== null && shouldExpandOnScrollRef !== void 0 && shouldExpandOnScrollRef.current && contentWrapper) {
        const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);
        if (scrolledBy > 0) {
          const availableHeight = window.innerHeight - $cc7e05a45900e73f$var$CONTENT_MARGIN * 2;
          const cssMinHeight = parseFloat(contentWrapper.style.minHeight);
          const cssHeight = parseFloat(contentWrapper.style.height);
          const prevHeight = Math.max(cssMinHeight, cssHeight);
          if (prevHeight < availableHeight) {
            const nextHeight = prevHeight + scrolledBy;
            const clampedNextHeight = Math.min(availableHeight, nextHeight);
            const heightDiff = nextHeight - clampedNextHeight;
            contentWrapper.style.height = clampedNextHeight + "px";
            if (contentWrapper.style.bottom === "0px") {
              viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;
              contentWrapper.style.justifyContent = "flex-end";
            }
          }
        }
      }
      prevScrollTopRef.current = viewport.scrollTop;
    })
  }))));
});
const $cc7e05a45900e73f$var$GROUP_NAME = "SelectGroup";
const [$cc7e05a45900e73f$var$SelectGroupContextProvider, $cc7e05a45900e73f$var$useSelectGroupContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$GROUP_NAME);
const $cc7e05a45900e73f$var$LABEL_NAME = "SelectLabel";
const $cc7e05a45900e73f$export$f67338d29bd972f8 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, ...labelProps } = props;
  const groupContext = $cc7e05a45900e73f$var$useSelectGroupContext($cc7e05a45900e73f$var$LABEL_NAME, __scopeSelect);
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    id: groupContext.id
  }, labelProps, {
    ref: forwardedRef
  }));
});
const $cc7e05a45900e73f$var$ITEM_NAME = "SelectItem";
const [$cc7e05a45900e73f$var$SelectItemContextProvider, $cc7e05a45900e73f$var$useSelectItemContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$ITEM_NAME);
const $cc7e05a45900e73f$export$13ef48a934230896 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, value, disabled = false, textValue: textValueProp, ...itemProps } = props;
  const context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$ITEM_NAME, __scopeSelect);
  const contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$ITEM_NAME, __scopeSelect);
  const isSelected = context.value === value;
  const [textValue, setTextValue] = reactExports.useState(textValueProp !== null && textValueProp !== void 0 ? textValueProp : "");
  const [isFocused, setIsFocused] = reactExports.useState(false);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, (node) => {
    var _contentContext$itemR;
    return (_contentContext$itemR = contentContext.itemRefCallback) === null || _contentContext$itemR === void 0 ? void 0 : _contentContext$itemR.call(contentContext, node, value, disabled);
  });
  const textId = $1746a345f3d73bb7$export$f680877a34711e37();
  const handleSelect = () => {
    if (!disabled) {
      context.onValueChange(value);
      context.onOpenChange(false);
    }
  };
  if (value === "")
    throw new Error("A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.");
  return /* @__PURE__ */ reactExports.createElement($cc7e05a45900e73f$var$SelectItemContextProvider, {
    scope: __scopeSelect,
    value,
    disabled,
    textId,
    isSelected,
    onItemTextChange: reactExports.useCallback((node) => {
      setTextValue((prevTextValue) => {
        var _node$textContent;
        return prevTextValue || ((_node$textContent = node === null || node === void 0 ? void 0 : node.textContent) !== null && _node$textContent !== void 0 ? _node$textContent : "").trim();
      });
    }, [])
  }, /* @__PURE__ */ reactExports.createElement($cc7e05a45900e73f$var$Collection.ItemSlot, {
    scope: __scopeSelect,
    value,
    disabled,
    textValue
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    role: "option",
    "aria-labelledby": textId,
    "data-highlighted": isFocused ? "" : void 0,
    "aria-selected": isSelected && isFocused,
    "data-state": isSelected ? "checked" : "unchecked",
    "aria-disabled": disabled || void 0,
    "data-disabled": disabled ? "" : void 0,
    tabIndex: disabled ? void 0 : -1
  }, itemProps, {
    ref: composedRefs,
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      itemProps.onFocus,
      () => setIsFocused(true)
    ),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      itemProps.onBlur,
      () => setIsFocused(false)
    ),
    onPointerUp: $e42e1063c40fb3ef$export$b9ecd428b558ff10(itemProps.onPointerUp, handleSelect),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(itemProps.onPointerMove, (event) => {
      if (disabled) {
        var _contentContext$onIte;
        (_contentContext$onIte = contentContext.onItemLeave) === null || _contentContext$onIte === void 0 || _contentContext$onIte.call(contentContext);
      } else
        event.currentTarget.focus({
          preventScroll: true
        });
    }),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(itemProps.onPointerLeave, (event) => {
      if (event.currentTarget === document.activeElement) {
        var _contentContext$onIte2;
        (_contentContext$onIte2 = contentContext.onItemLeave) === null || _contentContext$onIte2 === void 0 || _contentContext$onIte2.call(contentContext);
      }
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(itemProps.onKeyDown, (event) => {
      var _contentContext$searc;
      const isTypingAhead = ((_contentContext$searc = contentContext.searchRef) === null || _contentContext$searc === void 0 ? void 0 : _contentContext$searc.current) !== "";
      if (isTypingAhead && event.key === " ")
        return;
      if ($cc7e05a45900e73f$var$SELECTION_KEYS.includes(event.key))
        handleSelect();
      if (event.key === " ")
        event.preventDefault();
    })
  }))));
});
const $cc7e05a45900e73f$var$ITEM_TEXT_NAME = "SelectItemText";
const $cc7e05a45900e73f$export$3572fb0fb821ff49 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, className, style, ...itemTextProps } = props;
  const context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$ITEM_TEXT_NAME, __scopeSelect);
  const contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$ITEM_TEXT_NAME, __scopeSelect);
  const itemContext = $cc7e05a45900e73f$var$useSelectItemContext($cc7e05a45900e73f$var$ITEM_TEXT_NAME, __scopeSelect);
  const nativeOptionsContext = $cc7e05a45900e73f$var$useSelectNativeOptionsContext($cc7e05a45900e73f$var$ITEM_TEXT_NAME, __scopeSelect);
  const [itemTextNode, setItemTextNode] = reactExports.useState(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setItemTextNode(node),
    itemContext.onItemTextChange,
    (node) => {
      var _contentContext$itemT;
      return (_contentContext$itemT = contentContext.itemTextRefCallback) === null || _contentContext$itemT === void 0 ? void 0 : _contentContext$itemT.call(contentContext, node, itemContext.value, itemContext.disabled);
    }
  );
  const textContent = itemTextNode === null || itemTextNode === void 0 ? void 0 : itemTextNode.textContent;
  const nativeOption = reactExports.useMemo(
    () => /* @__PURE__ */ reactExports.createElement("option", {
      key: itemContext.value,
      value: itemContext.value,
      disabled: itemContext.disabled
    }, textContent),
    [
      itemContext.disabled,
      itemContext.value,
      textContent
    ]
  );
  const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    onNativeOptionAdd(nativeOption);
    return () => onNativeOptionRemove(nativeOption);
  }, [
    onNativeOptionAdd,
    onNativeOptionRemove,
    nativeOption
  ]);
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends$y({
    id: itemContext.textId
  }, itemTextProps, {
    ref: composedRefs
  })), itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren ? /* @__PURE__ */ reactDomExports.createPortal(itemTextProps.children, context.valueNode) : null);
});
const $cc7e05a45900e73f$var$ITEM_INDICATOR_NAME = "SelectItemIndicator";
const $cc7e05a45900e73f$export$6b9198de19accfe6 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, ...itemIndicatorProps } = props;
  const itemContext = $cc7e05a45900e73f$var$useSelectItemContext($cc7e05a45900e73f$var$ITEM_INDICATOR_NAME, __scopeSelect);
  return itemContext.isSelected ? /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends$y({
    "aria-hidden": true
  }, itemIndicatorProps, {
    ref: forwardedRef
  })) : null;
});
const $cc7e05a45900e73f$var$SCROLL_UP_BUTTON_NAME = "SelectScrollUpButton";
const $cc7e05a45900e73f$export$d8117927658af6d7 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$SCROLL_UP_BUTTON_NAME, props.__scopeSelect);
  const viewportContext = $cc7e05a45900e73f$var$useSelectViewportContext($cc7e05a45900e73f$var$SCROLL_UP_BUTTON_NAME, props.__scopeSelect);
  const [canScrollUp1, setCanScrollUp] = reactExports.useState(false);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, viewportContext.onScrollButtonChange);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (contentContext.viewport && contentContext.isPositioned) {
      let handleScroll3 = function() {
        const canScrollUp = viewport.scrollTop > 0;
        setCanScrollUp(canScrollUp);
      };
      var handleScroll2 = handleScroll3;
      const viewport = contentContext.viewport;
      handleScroll3();
      viewport.addEventListener("scroll", handleScroll3);
      return () => viewport.removeEventListener("scroll", handleScroll3);
    }
  }, [
    contentContext.viewport,
    contentContext.isPositioned
  ]);
  return canScrollUp1 ? /* @__PURE__ */ reactExports.createElement($cc7e05a45900e73f$var$SelectScrollButtonImpl, _extends$y({}, props, {
    ref: composedRefs,
    onAutoScroll: () => {
      const { viewport, selectedItem } = contentContext;
      if (viewport && selectedItem)
        viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;
    }
  })) : null;
});
const $cc7e05a45900e73f$var$SCROLL_DOWN_BUTTON_NAME = "SelectScrollDownButton";
const $cc7e05a45900e73f$export$ff951e476c12189 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);
  const viewportContext = $cc7e05a45900e73f$var$useSelectViewportContext($cc7e05a45900e73f$var$SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);
  const [canScrollDown1, setCanScrollDown] = reactExports.useState(false);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, viewportContext.onScrollButtonChange);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (contentContext.viewport && contentContext.isPositioned) {
      let handleScroll3 = function() {
        const maxScroll = viewport.scrollHeight - viewport.clientHeight;
        const canScrollDown = Math.ceil(viewport.scrollTop) < maxScroll;
        setCanScrollDown(canScrollDown);
      };
      var handleScroll2 = handleScroll3;
      const viewport = contentContext.viewport;
      handleScroll3();
      viewport.addEventListener("scroll", handleScroll3);
      return () => viewport.removeEventListener("scroll", handleScroll3);
    }
  }, [
    contentContext.viewport,
    contentContext.isPositioned
  ]);
  return canScrollDown1 ? /* @__PURE__ */ reactExports.createElement($cc7e05a45900e73f$var$SelectScrollButtonImpl, _extends$y({}, props, {
    ref: composedRefs,
    onAutoScroll: () => {
      const { viewport, selectedItem } = contentContext;
      if (viewport && selectedItem)
        viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;
    }
  })) : null;
});
const $cc7e05a45900e73f$var$SelectScrollButtonImpl = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;
  const contentContext = $cc7e05a45900e73f$var$useSelectContentContext("SelectScrollButton", __scopeSelect);
  const autoScrollTimerRef = reactExports.useRef(null);
  const getItems = $cc7e05a45900e73f$var$useCollection(__scopeSelect);
  const clearAutoScrollTimer = reactExports.useCallback(() => {
    if (autoScrollTimerRef.current !== null) {
      window.clearInterval(autoScrollTimerRef.current);
      autoScrollTimerRef.current = null;
    }
  }, []);
  reactExports.useEffect(() => {
    return () => clearAutoScrollTimer();
  }, [
    clearAutoScrollTimer
  ]);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    var _activeItem$ref$curre;
    const activeItem = getItems().find(
      (item) => item.ref.current === document.activeElement
    );
    activeItem === null || activeItem === void 0 || (_activeItem$ref$curre = activeItem.ref.current) === null || _activeItem$ref$curre === void 0 || _activeItem$ref$curre.scrollIntoView({
      block: "nearest"
    });
  }, [
    getItems
  ]);
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    "aria-hidden": true
  }, scrollIndicatorProps, {
    ref: forwardedRef,
    style: {
      flexShrink: 0,
      ...scrollIndicatorProps.style
    },
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(scrollIndicatorProps.onPointerDown, () => {
      if (autoScrollTimerRef.current === null)
        autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);
    }),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(scrollIndicatorProps.onPointerMove, () => {
      var _contentContext$onIte3;
      (_contentContext$onIte3 = contentContext.onItemLeave) === null || _contentContext$onIte3 === void 0 || _contentContext$onIte3.call(contentContext);
      if (autoScrollTimerRef.current === null)
        autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);
    }),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(scrollIndicatorProps.onPointerLeave, () => {
      clearAutoScrollTimer();
    })
  }));
});
const $cc7e05a45900e73f$export$eba4b1df07cb1d3 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, ...separatorProps } = props;
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    "aria-hidden": true
  }, separatorProps, {
    ref: forwardedRef
  }));
});
function $cc7e05a45900e73f$var$shouldShowPlaceholder(value) {
  return value === "" || value === void 0;
}
const $cc7e05a45900e73f$var$BubbleSelect = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { value, ...selectProps } = props;
  const ref = reactExports.useRef(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const prevValue = $010c2913dbd2fe3d$export$5cae361ad82dce8b(value);
  reactExports.useEffect(() => {
    const select2 = ref.current;
    const selectProto = window.HTMLSelectElement.prototype;
    const descriptor = Object.getOwnPropertyDescriptor(selectProto, "value");
    const setValue = descriptor.set;
    if (prevValue !== value && setValue) {
      const event = new Event("change", {
        bubbles: true
      });
      setValue.call(select2, value);
      select2.dispatchEvent(event);
    }
  }, [
    prevValue,
    value
  ]);
  return /* @__PURE__ */ reactExports.createElement($ea1ef594cf570d83$export$439d29a4e110a164, {
    asChild: true
  }, /* @__PURE__ */ reactExports.createElement("select", _extends$y({}, selectProps, {
    ref: composedRefs,
    defaultValue: value
  })));
});
$cc7e05a45900e73f$var$BubbleSelect.displayName = "BubbleSelect";
function $cc7e05a45900e73f$var$useTypeaheadSearch(onSearchChange) {
  const handleSearchChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onSearchChange);
  const searchRef = reactExports.useRef("");
  const timerRef = reactExports.useRef(0);
  const handleTypeaheadSearch = reactExports.useCallback((key) => {
    const search = searchRef.current + key;
    handleSearchChange(search);
    (function updateSearch(value) {
      searchRef.current = value;
      window.clearTimeout(timerRef.current);
      if (value !== "")
        timerRef.current = window.setTimeout(
          () => updateSearch(""),
          1e3
        );
    })(search);
  }, [
    handleSearchChange
  ]);
  const resetTypeahead = reactExports.useCallback(() => {
    searchRef.current = "";
    window.clearTimeout(timerRef.current);
  }, []);
  reactExports.useEffect(() => {
    return () => window.clearTimeout(timerRef.current);
  }, []);
  return [
    searchRef,
    handleTypeaheadSearch,
    resetTypeahead
  ];
}
function $cc7e05a45900e73f$var$findNextItem(items2, search, currentItem) {
  const isRepeated = search.length > 1 && Array.from(search).every(
    (char) => char === search[0]
  );
  const normalizedSearch = isRepeated ? search[0] : search;
  const currentItemIndex = currentItem ? items2.indexOf(currentItem) : -1;
  let wrappedItems = $cc7e05a45900e73f$var$wrapArray(items2, Math.max(currentItemIndex, 0));
  const excludeCurrentItem = normalizedSearch.length === 1;
  if (excludeCurrentItem)
    wrappedItems = wrappedItems.filter(
      (v2) => v2 !== currentItem
    );
  const nextItem = wrappedItems.find(
    (item) => item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())
  );
  return nextItem !== currentItem ? nextItem : void 0;
}
function $cc7e05a45900e73f$var$wrapArray(array2, startIndex) {
  return array2.map(
    (_, index2) => array2[(startIndex + index2) % array2.length]
  );
}
const $cc7e05a45900e73f$export$be92b6f5f03c0fe9 = $cc7e05a45900e73f$export$ef9b1a59e592288f;
const $cc7e05a45900e73f$export$41fb9f06171c75f4 = $cc7e05a45900e73f$export$3ac1e88a1c0b9f1;
const $cc7e05a45900e73f$export$4c8d1a57a761ef94 = $cc7e05a45900e73f$export$e288731fd71264f0;
const $cc7e05a45900e73f$export$f04a61298a47a40f = $cc7e05a45900e73f$export$99b400cabb58c515;
const $cc7e05a45900e73f$export$602eac185826482c = $cc7e05a45900e73f$export$b2af6c9944296213;
const $cc7e05a45900e73f$export$7c6e2c02157bb7d2 = $cc7e05a45900e73f$export$c973a4b3cb86a03d;
const $cc7e05a45900e73f$export$d5c6c08dc2d3ca7 = $cc7e05a45900e73f$export$9ed6e7b40248d36d;
const $cc7e05a45900e73f$export$b04be29aa201d4f5 = $cc7e05a45900e73f$export$f67338d29bd972f8;
const $cc7e05a45900e73f$export$6d08773d2e66f8f2 = $cc7e05a45900e73f$export$13ef48a934230896;
const $cc7e05a45900e73f$export$d6e5bf9c43ea9319 = $cc7e05a45900e73f$export$3572fb0fb821ff49;
const $cc7e05a45900e73f$export$c3468e2714d175fa = $cc7e05a45900e73f$export$6b9198de19accfe6;
const $cc7e05a45900e73f$export$2f60d3ec9ad468f2 = $cc7e05a45900e73f$export$d8117927658af6d7;
const $cc7e05a45900e73f$export$bf1aedc3039c8d63 = $cc7e05a45900e73f$export$ff951e476c12189;
const $cc7e05a45900e73f$export$1ff3c3f08ae963c0 = $cc7e05a45900e73f$export$eba4b1df07cb1d3;
const Select = $cc7e05a45900e73f$export$be92b6f5f03c0fe9;
const SelectValue = $cc7e05a45900e73f$export$4c8d1a57a761ef94;
const SelectTrigger = reactExports.forwardRef(({ className, children: children2, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsxs(
  $cc7e05a45900e73f$export$41fb9f06171c75f4,
  {
    ref,
    className: cn(
      "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
      className
    ),
    ...props,
    children: [
      children2,
      /* @__PURE__ */ jsxRuntimeExports.jsx($cc7e05a45900e73f$export$f04a61298a47a40f, { asChild: true, children: /* @__PURE__ */ jsxRuntimeExports.jsx(ChevronDown, { className: "h-4 w-4 opacity-50" }) })
    ]
  }
));
SelectTrigger.displayName = $cc7e05a45900e73f$export$41fb9f06171c75f4.displayName;
const SelectScrollUpButton = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $cc7e05a45900e73f$export$2f60d3ec9ad468f2,
  {
    ref,
    className: cn(
      "flex cursor-default items-center justify-center py-1",
      className
    ),
    ...props,
    children: /* @__PURE__ */ jsxRuntimeExports.jsx(ChevronUp, { className: "h-4 w-4" })
  }
));
SelectScrollUpButton.displayName = $cc7e05a45900e73f$export$2f60d3ec9ad468f2.displayName;
const SelectScrollDownButton = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $cc7e05a45900e73f$export$bf1aedc3039c8d63,
  {
    ref,
    className: cn(
      "flex cursor-default items-center justify-center py-1",
      className
    ),
    ...props,
    children: /* @__PURE__ */ jsxRuntimeExports.jsx(ChevronDown, { className: "h-4 w-4" })
  }
));
SelectScrollDownButton.displayName = $cc7e05a45900e73f$export$bf1aedc3039c8d63.displayName;
const SelectContent = reactExports.forwardRef(({ className, children: children2, position = "popper", ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx($cc7e05a45900e73f$export$602eac185826482c, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
  $cc7e05a45900e73f$export$7c6e2c02157bb7d2,
  {
    ref,
    className: cn(
      "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      position === "popper" && "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
      className
    ),
    position,
    ...props,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(SelectScrollUpButton, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        $cc7e05a45900e73f$export$d5c6c08dc2d3ca7,
        {
          className: cn(
            "p-1",
            position === "popper" && "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
          ),
          children: children2
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(SelectScrollDownButton, {})
    ]
  }
) }));
SelectContent.displayName = $cc7e05a45900e73f$export$7c6e2c02157bb7d2.displayName;
const SelectLabel = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $cc7e05a45900e73f$export$b04be29aa201d4f5,
  {
    ref,
    className: cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className),
    ...props
  }
));
SelectLabel.displayName = $cc7e05a45900e73f$export$b04be29aa201d4f5.displayName;
const SelectItem = reactExports.forwardRef(({ className, children: children2, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsxs(
  $cc7e05a45900e73f$export$6d08773d2e66f8f2,
  {
    ref,
    className: cn(
      "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    ),
    ...props,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center", children: /* @__PURE__ */ jsxRuntimeExports.jsx($cc7e05a45900e73f$export$c3468e2714d175fa, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Check, { className: "h-4 w-4" }) }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx($cc7e05a45900e73f$export$d6e5bf9c43ea9319, { children: children2 })
    ]
  }
));
SelectItem.displayName = $cc7e05a45900e73f$export$6d08773d2e66f8f2.displayName;
const SelectSeparator = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $cc7e05a45900e73f$export$1ff3c3f08ae963c0,
  {
    ref,
    className: cn("-mx-1 my-1 h-px bg-muted", className),
    ...props
  }
));
SelectSeparator.displayName = $cc7e05a45900e73f$export$1ff3c3f08ae963c0.displayName;
const Textarea = reactExports.forwardRef(
  ({ className, ...props }, ref) => {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(
      "textarea",
      {
        className: cn(
          "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
          className
        ),
        ref,
        ...props
      }
    );
  }
);
Textarea.displayName = "Textarea";
const profileFormSchema = z.object({
  username: z.string().min(2, {
    message: "Username must be at least 2 characters."
  }).max(30, {
    message: "Username must not be longer than 30 characters."
  }),
  email: z.string({
    required_error: "Please select an email to display."
  }).email(),
  bio: z.string().max(160).min(4),
  urls: z.array(
    z.object({
      value: z.string().url({ message: "Please enter a valid URL." })
    })
  ).optional()
});
const defaultValues$5 = {
  bio: "My name is Bubble Guppies and I'm a computer science student at Stony Brook University. I love to code and learn new things! 🚀",
  urls: [
    { value: "https://www.stonybrook.edu/" },
    { value: "https://www.cs.stonybrook.edu/" }
  ]
};
function ProfileForm() {
  const form = useForm({
    resolver: t(profileFormSchema),
    defaultValues: defaultValues$5,
    mode: "onChange"
  });
  const { fields, append: append2 } = useFieldArray({
    name: "urls",
    control: form.control
  });
  function onSubmit(data2) {
    toast({
      title: "Profile Notification",
      description: "Your profile information have successfully been updated! A confirmation email has been sent to your email address."
    });
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Form, { ...form, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("form", { onSubmit: form.handleSubmit(onSubmit), className: "space-y-8", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      FormField,
      {
        defaultValue: "Bubble Guppies",
        control: form.control,
        name: "username",
        render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "Username" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Input, { placeholder: "Bubble Guppies", ...field }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "This is your public display name. Can be changed once every 30 days." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
        ] })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      FormField,
      {
        defaultValue: "bubble.guppies@stonybrook.edu",
        control: form.control,
        name: "email",
        render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "Linked Emails" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs(Select, { onValueChange: field.onChange, defaultValue: field.value, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(SelectTrigger, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(SelectValue, { placeholder: "Select a verified email for communications" }) }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(SelectContent, { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(SelectItem, { value: "bubble.guppies@stonybrook.edu", children: "bubble.guppies@stonybrook.edu" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(SelectItem, { value: "gupplies@cs.stonybrook.edu", children: "gupplies@cs.stonybrook.edu" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(SelectItem, { value: "bubbleguppies2024@gmail.com", children: "bubbleguppies2024@gmail.com" })
            ] })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs(FormDescription, { children: [
            "You can manage verified email addresses in your",
            " ",
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "/settings/account", style: { textDecoration: "underline" }, children: "account settings" }),
            "."
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
        ] })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      FormField,
      {
        control: form.control,
        name: "bio",
        render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "Bio" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            Textarea,
            {
              placeholder: "Tell us a little bit about yourself",
              className: "resize-none",
              ...field
            }
          ) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "Give a short description of yourself. This is displayed on your profile." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
        ] })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
      fields.map((field, index2) => /* @__PURE__ */ jsxRuntimeExports.jsx(
        FormField,
        {
          control: form.control,
          name: `urls.${index2}.value`,
          render: ({ field: field2 }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { className: cn(index2 !== 0 && "sr-only"), children: "URLs" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { className: cn(index2 !== 0 && "sr-only"), children: "Add links to your website or social media profiles." }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Input, { ...field2 }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
          ] })
        },
        field.id
      )),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Button,
        {
          type: "button",
          variant: "outline",
          size: "sm",
          className: "mt-2",
          onClick: () => append2({ value: "" }),
          children: "Add URL"
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { type: "submit", children: "Update profile" })
  ] }) });
}
function ProfilePage() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-6", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-lg font-medium", children: "Profile" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-sm text-muted-foreground", children: "This is how others will see you on the site." })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Separator, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(ProfileForm, {})
  ] });
}
const formSchema = z.object({
  username: z.string().min(2, {
    message: "Username must be at least 3 characters."
  }),
  confirmpassword: z.string().min(8, {
    message: "Password must be at least 8 characters."
  }),
  newpassword: z.string().min(8, {
    message: "Password must be at least 8 characters."
  }),
  oldpassword: z.string().min(8, {
    message: "Password must match your old password."
  })
});
function PasswordForm() {
  const form = useForm({
    resolver: t(formSchema),
    defaultValues: {
      username: "",
      newpassword: "",
      confirmpassword: "",
      oldpassword: ""
    }
  });
  function onSubmit(values) {
    console.log(values);
    toast({
      title: "Password Notification",
      description: "Your password has successfully been updated! A confirmation email has been sent to your email address."
    });
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Dialog, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(DialogTrigger, { asChild: true, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { variant: "outline", children: "Change Password" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(DialogContent, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(DialogHeader, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(DialogTitle, { children: "Change Password" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Form, { ...form, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("form", { onSubmit: form.handleSubmit(onSubmit), className: "space-y-8", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          FormField,
          {
            control: form.control,
            name: "oldpassword",
            render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "Old Password" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Input, { className: "w-96", placeholder: "Old Password", ...field }) }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "Enter your old password to confirm changes." }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
            ] })
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          FormField,
          {
            control: form.control,
            name: "newpassword",
            render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "New Password" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Input, { className: "w-96", placeholder: "New Password", ...field }) }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "Password must be at least 8 characters." }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
            ] })
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          FormField,
          {
            control: form.control,
            name: "confirmpassword",
            render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "Confirm New Password" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Input, { className: "w-96", placeholder: "New Password", ...field }) }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "Password must match." }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
            ] })
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { children: "Submit" })
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(DialogDescription, { children: "This action cannot be undone. This will change your password. To change again, resubmit this form. Your old password cannot be used again." })
    ] }) })
  ] });
}
const languages = [
  { label: "English", value: "en" },
  { label: "French", value: "fr" },
  { label: "German", value: "de" },
  { label: "Spanish", value: "es" },
  { label: "Portuguese", value: "pt" },
  { label: "Russian", value: "ru" },
  { label: "Japanese", value: "ja" },
  { label: "Korean", value: "ko" },
  { label: "Chinese", value: "zh" }
];
const accountFormSchema$1 = z.object({
  name: z.string().min(2, {
    message: "Name must be at least 2 characters."
  }).max(30, {
    message: "Name must not be longer than 30 characters."
  }),
  // dob: z.date({
  //   required_error: "A date of birth is required.",
  // }),
  language: z.string({
    required_error: "Please select a language."
  })
});
const defaultValues$4 = {
  // name: "Your name",
  // dob: new Date("2023-01-23"),
};
function AccountForm() {
  reactExports.useState(false);
  const form = useForm({
    resolver: t(accountFormSchema$1),
    defaultValues: defaultValues$4
  });
  function onSubmit(data2) {
    toast2({
      title: "Account Notification",
      description: "Your account information has successfully been updated! A confirmation email has been sent to your email address."
    });
  }
  const { toast: toast2 } = useToast();
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Form, { ...form, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("form", { onSubmit: form.handleSubmit(onSubmit), className: "space-y-8", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      FormField,
      {
        defaultValue: "Bubble Guppies",
        control: form.control,
        name: "name",
        render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "Name" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Input, { placeholder: "Your name", ...field }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "This is the name that will be displayed on your profile and in emails." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
        ] })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(PasswordForm, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      FormField,
      {
        control: form.control,
        defaultValue: "English",
        name: "language",
        render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { className: "flex flex-col", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs(FormLabel, { className: "flex items-center space-x-2", children: [
            "Language",
            /* @__PURE__ */ jsxRuntimeExports.jsx(Globe, {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "select",
            {
              className: "w-[250px] border-2 rounded-lg text-foreground text-sm p-2 leading-tight focus:outline-none focus:shadow-outline bg-background",
              value: field.value,
              onChange: (e3) => form.setValue("language", e3.target.value),
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "", disabled: true, children: "Select language" }),
                languages.map((language) => /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: language.value, children: language.label }, language.value))
              ]
            }
          ) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "This is the language that will be used in the dashboard." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
        ] })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { type: "submit", children: "Update account" })
  ] }) });
}
function SettingsAccountPage() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-6", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-lg font-medium", children: "Account" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-sm text-muted-foreground", children: "Update your account settings. Set your preferred language." })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Separator, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(AccountForm, {})
  ] });
}
const $ce77a8961b41be9e$var$RADIO_NAME = "Radio";
const [$ce77a8961b41be9e$var$createRadioContext, $ce77a8961b41be9e$export$67d2296460f1b002] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($ce77a8961b41be9e$var$RADIO_NAME);
const [$ce77a8961b41be9e$var$RadioProvider, $ce77a8961b41be9e$var$useRadioContext] = $ce77a8961b41be9e$var$createRadioContext($ce77a8961b41be9e$var$RADIO_NAME);
const $ce77a8961b41be9e$export$d7b12c4107be0d61 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeRadio, name, checked = false, required, disabled, value = "on", onCheck, ...radioProps } = props;
  const [button, setButton] = reactExports.useState(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setButton(node)
  );
  const hasConsumerStoppedPropagationRef = reactExports.useRef(false);
  const isFormControl = button ? Boolean(button.closest("form")) : true;
  return /* @__PURE__ */ reactExports.createElement($ce77a8961b41be9e$var$RadioProvider, {
    scope: __scopeRadio,
    checked,
    disabled
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends$y({
    type: "button",
    role: "radio",
    "aria-checked": checked,
    "data-state": $ce77a8961b41be9e$var$getState(checked),
    "data-disabled": disabled ? "" : void 0,
    disabled,
    value
  }, radioProps, {
    ref: composedRefs,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, (event) => {
      if (!checked)
        onCheck === null || onCheck === void 0 || onCheck();
      if (isFormControl) {
        hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
        if (!hasConsumerStoppedPropagationRef.current)
          event.stopPropagation();
      }
    })
  })), isFormControl && /* @__PURE__ */ reactExports.createElement($ce77a8961b41be9e$var$BubbleInput, {
    control: button,
    bubbles: !hasConsumerStoppedPropagationRef.current,
    name,
    value,
    checked,
    required,
    disabled,
    style: {
      transform: "translateX(-100%)"
    }
  }));
});
const $ce77a8961b41be9e$var$INDICATOR_NAME = "RadioIndicator";
const $ce77a8961b41be9e$export$d35a9ffa9a04f9e7 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeRadio, forceMount, ...indicatorProps } = props;
  const context = $ce77a8961b41be9e$var$useRadioContext($ce77a8961b41be9e$var$INDICATOR_NAME, __scopeRadio);
  return /* @__PURE__ */ reactExports.createElement($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.checked
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends$y({
    "data-state": $ce77a8961b41be9e$var$getState(context.checked),
    "data-disabled": context.disabled ? "" : void 0
  }, indicatorProps, {
    ref: forwardedRef
  })));
});
const $ce77a8961b41be9e$var$BubbleInput = (props) => {
  const { control, checked, bubbles = true, ...inputProps } = props;
  const ref = reactExports.useRef(null);
  const prevChecked = $010c2913dbd2fe3d$export$5cae361ad82dce8b(checked);
  const controlSize = $db6c3485150b8e66$export$1ab7ae714698c4b8(control);
  reactExports.useEffect(() => {
    const input = ref.current;
    const inputProto = window.HTMLInputElement.prototype;
    const descriptor = Object.getOwnPropertyDescriptor(inputProto, "checked");
    const setChecked = descriptor.set;
    if (prevChecked !== checked && setChecked) {
      const event = new Event("click", {
        bubbles
      });
      setChecked.call(input, checked);
      input.dispatchEvent(event);
    }
  }, [
    prevChecked,
    checked,
    bubbles
  ]);
  return /* @__PURE__ */ reactExports.createElement("input", _extends$y({
    type: "radio",
    "aria-hidden": true,
    defaultChecked: checked
  }, inputProps, {
    tabIndex: -1,
    ref,
    style: {
      ...props.style,
      ...controlSize,
      position: "absolute",
      pointerEvents: "none",
      opacity: 0,
      margin: 0
    }
  }));
};
function $ce77a8961b41be9e$var$getState(checked) {
  return checked ? "checked" : "unchecked";
}
const $f99a8c78507165f7$var$ARROW_KEYS = [
  "ArrowUp",
  "ArrowDown",
  "ArrowLeft",
  "ArrowRight"
];
const $f99a8c78507165f7$var$RADIO_GROUP_NAME = "RadioGroup";
const [$f99a8c78507165f7$var$createRadioGroupContext, $f99a8c78507165f7$export$c547093f11b76da2] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($f99a8c78507165f7$var$RADIO_GROUP_NAME, [
  $d7bdfb9eb0fdf311$export$c7109489551a4f4,
  $ce77a8961b41be9e$export$67d2296460f1b002
]);
const $f99a8c78507165f7$var$useRovingFocusGroupScope = $d7bdfb9eb0fdf311$export$c7109489551a4f4();
const $f99a8c78507165f7$var$useRadioScope = $ce77a8961b41be9e$export$67d2296460f1b002();
const [$f99a8c78507165f7$var$RadioGroupProvider, $f99a8c78507165f7$var$useRadioGroupContext] = $f99a8c78507165f7$var$createRadioGroupContext($f99a8c78507165f7$var$RADIO_GROUP_NAME);
const $f99a8c78507165f7$export$a98f0dcb43a68a25 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeRadioGroup, name, defaultValue: defaultValue2, value: valueProp, required = false, disabled = false, orientation, dir, loop = true, onValueChange, ...groupProps } = props;
  const rovingFocusGroupScope = $f99a8c78507165f7$var$useRovingFocusGroupScope(__scopeRadioGroup);
  const direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  const [value, setValue] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: valueProp,
    defaultProp: defaultValue2,
    onChange: onValueChange
  });
  return /* @__PURE__ */ reactExports.createElement($f99a8c78507165f7$var$RadioGroupProvider, {
    scope: __scopeRadioGroup,
    name,
    required,
    disabled,
    value,
    onValueChange: setValue
  }, /* @__PURE__ */ reactExports.createElement($d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9, _extends$y({
    asChild: true
  }, rovingFocusGroupScope, {
    orientation,
    dir: direction,
    loop
  }), /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    role: "radiogroup",
    "aria-required": required,
    "aria-orientation": orientation,
    "data-disabled": disabled ? "" : void 0,
    dir: direction
  }, groupProps, {
    ref: forwardedRef
  }))));
});
const $f99a8c78507165f7$var$ITEM_NAME = "RadioGroupItem";
const $f99a8c78507165f7$export$9f866c100ef519e4 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeRadioGroup, disabled, ...itemProps } = props;
  const context = $f99a8c78507165f7$var$useRadioGroupContext($f99a8c78507165f7$var$ITEM_NAME, __scopeRadioGroup);
  const isDisabled = context.disabled || disabled;
  const rovingFocusGroupScope = $f99a8c78507165f7$var$useRovingFocusGroupScope(__scopeRadioGroup);
  const radioScope = $f99a8c78507165f7$var$useRadioScope(__scopeRadioGroup);
  const ref = reactExports.useRef(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const checked = context.value === itemProps.value;
  const isArrowKeyPressedRef = reactExports.useRef(false);
  reactExports.useEffect(() => {
    const handleKeyDown = (event) => {
      if ($f99a8c78507165f7$var$ARROW_KEYS.includes(event.key))
        isArrowKeyPressedRef.current = true;
    };
    const handleKeyUp = () => isArrowKeyPressedRef.current = false;
    document.addEventListener("keydown", handleKeyDown);
    document.addEventListener("keyup", handleKeyUp);
    return () => {
      document.removeEventListener("keydown", handleKeyDown);
      document.removeEventListener("keyup", handleKeyUp);
    };
  }, []);
  return /* @__PURE__ */ reactExports.createElement($d7bdfb9eb0fdf311$export$6d08773d2e66f8f2, _extends$y({
    asChild: true
  }, rovingFocusGroupScope, {
    focusable: !isDisabled,
    active: checked
  }), /* @__PURE__ */ reactExports.createElement($ce77a8961b41be9e$export$d7b12c4107be0d61, _extends$y({
    disabled: isDisabled,
    required: context.required,
    checked
  }, radioScope, itemProps, {
    name: context.name,
    ref: composedRefs,
    onCheck: () => context.onValueChange(itemProps.value),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10((event) => {
      if (event.key === "Enter")
        event.preventDefault();
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(itemProps.onFocus, () => {
      var _ref$current;
      if (isArrowKeyPressedRef.current)
        (_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.click();
    })
  })));
});
const $f99a8c78507165f7$export$5fb54c671a65c88 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeRadioGroup, ...indicatorProps } = props;
  const radioScope = $f99a8c78507165f7$var$useRadioScope(__scopeRadioGroup);
  return /* @__PURE__ */ reactExports.createElement($ce77a8961b41be9e$export$d35a9ffa9a04f9e7, _extends$y({}, radioScope, indicatorProps, {
    ref: forwardedRef
  }));
});
const $f99a8c78507165f7$export$be92b6f5f03c0fe9 = $f99a8c78507165f7$export$a98f0dcb43a68a25;
const $f99a8c78507165f7$export$6d08773d2e66f8f2 = $f99a8c78507165f7$export$9f866c100ef519e4;
const $f99a8c78507165f7$export$adb584737d712b70 = $f99a8c78507165f7$export$5fb54c671a65c88;
const RadioGroup = reactExports.forwardRef(({ className, ...props }, ref) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    $f99a8c78507165f7$export$be92b6f5f03c0fe9,
    {
      className: cn("grid gap-2", className),
      ...props,
      ref
    }
  );
});
RadioGroup.displayName = $f99a8c78507165f7$export$be92b6f5f03c0fe9.displayName;
const RadioGroupItem = reactExports.forwardRef(({ className, ...props }, ref) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    $f99a8c78507165f7$export$6d08773d2e66f8f2,
    {
      ref,
      className: cn(
        "aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
        className
      ),
      ...props,
      children: /* @__PURE__ */ jsxRuntimeExports.jsx($f99a8c78507165f7$export$adb584737d712b70, { className: "flex items-center justify-center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Circle, { className: "h-2.5 w-2.5 fill-current text-current" }) })
    }
  );
});
RadioGroupItem.displayName = $f99a8c78507165f7$export$6d08773d2e66f8f2.displayName;
const initialState = {
  theme: "system",
  setTheme: () => null
};
const ThemeProviderContext = reactExports.createContext(initialState);
function ThemeProvider({
  children: children2,
  defaultTheme = "system",
  storageKey = "vite-ui-theme",
  ...props
}) {
  const [theme, setTheme] = reactExports.useState(
    () => localStorage.getItem(storageKey) || defaultTheme
  );
  reactExports.useEffect(() => {
    const root2 = window.document.documentElement;
    root2.classList.remove("light", "dark");
    if (theme === "system") {
      const systemTheme = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
      root2.classList.add(systemTheme);
      return;
    }
    root2.classList.add(theme);
  }, [theme]);
  const value = {
    theme,
    setTheme: (theme2) => {
      localStorage.setItem(storageKey, theme2);
      setTheme(theme2);
    }
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx(ThemeProviderContext.Provider, { ...props, value, children: children2 });
}
const useTheme = () => {
  const context = reactExports.useContext(ThemeProviderContext);
  if (context === void 0)
    throw new Error("useTheme must be used within a ThemeProvider");
  return context;
};
const appearanceFormSchema = z.object({
  theme: z.enum(["light", "dark"], {
    required_error: "Please select a theme."
  }),
  font: z.enum(
    ["Default", "Times New Roman", "Arial", "Sans Serif", "system"],
    {
      invalid_type_error: "Select a font",
      required_error: "Please select a font."
    }
  ),
  pasteJSONThemeConfiguration: z.string()
});
const defaultValues$3 = {
  theme: "light"
};
function AppearanceForm() {
  const form = useForm({
    resolver: t(appearanceFormSchema),
    defaultValues: defaultValues$3
  });
  const { setTheme } = useTheme();
  function onSubmit(data2) {
    setTheme(data2.theme);
    toast({
      title: "Appearance Notification",
      description: "Your appearance preferences have successfully been updated! A confirmation email has been sent to your email address."
    });
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Form, { ...form, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("form", { onSubmit: form.handleSubmit(onSubmit), className: "space-y-8", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      FormField,
      {
        control: form.control,
        name: "font",
        defaultValue: "Default",
        render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "Font" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "relative w-max", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "select",
              {
                className: cn(
                  buttonVariants({ variant: "outline" }),
                  "w-[200px] appearance-none font-normal"
                ),
                ...field,
                children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "Default", children: "Default" }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "Times New Roman", children: "Times New Roman" }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "Arial", children: "Arial" }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "Sans Serif", children: "Sans Serif" }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "system", children: "system" })
                ]
              }
            ) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(ChevronDown, { className: "absolute right-3 top-2.5 h-4 w-4 opacity-50" })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "Set the font you want to use for OrcaNet Program." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
        ] })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      FormField,
      {
        control: form.control,
        name: "theme",
        render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { className: "space-y-1", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "Theme" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "Select the theme for the OrcaNet Program." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {}),
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
            RadioGroup,
            {
              onValueChange: field.onChange,
              defaultValue: field.value,
              className: "grid max-w-md grid-cols-2 gap-8 pt-2",
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(FormItem, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(FormLabel, { className: "[&:has([data-state=checked])>div]:border-primary", children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(RadioGroupItem, { value: "light", className: "sr-only" }) }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "items-center rounded-md border-2 border-muted p-1 hover:border-accent", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-2 rounded-sm bg-[#ecedef] p-2", children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-2 rounded-md bg-white p-2 shadow-sm", children: [
                      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h-2 w-[80px] rounded-lg bg-[#ecedef]" }),
                      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h-2 w-[100px] rounded-lg bg-[#ecedef]" })
                    ] }),
                    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center space-x-2 rounded-md bg-white p-2 shadow-sm", children: [
                      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h-4 w-4 rounded-full bg-[#ecedef]" }),
                      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h-2 w-[100px] rounded-lg bg-[#ecedef]" })
                    ] }),
                    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center space-x-2 rounded-md bg-white p-2 shadow-sm", children: [
                      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h-4 w-4 rounded-full bg-[#ecedef]" }),
                      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h-2 w-[100px] rounded-lg bg-[#ecedef]" })
                    ] })
                  ] }) }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "block w-full p-2 text-center font-normal", children: "Light" })
                ] }) }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(FormItem, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(FormLabel, { className: "[&:has([data-state=checked])>div]:border-primary", children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(RadioGroupItem, { value: "dark", className: "sr-only" }) }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "items-center rounded-md border-2 border-muted bg-popover p-1 hover:bg-accent hover:text-accent-foreground", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-2 rounded-sm bg-slate-950 p-2", children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-2 rounded-md bg-slate-800 p-2 shadow-sm", children: [
                      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h-2 w-[80px] rounded-lg bg-slate-400" }),
                      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h-2 w-[100px] rounded-lg bg-slate-400" })
                    ] }),
                    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center space-x-2 rounded-md bg-slate-800 p-2 shadow-sm", children: [
                      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h-4 w-4 rounded-full bg-slate-400" }),
                      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h-2 w-[100px] rounded-lg bg-slate-400" })
                    ] }),
                    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center space-x-2 rounded-md bg-slate-800 p-2 shadow-sm", children: [
                      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h-4 w-4 rounded-full bg-slate-400" }),
                      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h-2 w-[100px] rounded-lg bg-slate-400" })
                    ] })
                  ] }) }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "block w-full p-2 text-center font-normal", children: "Dark" })
                ] }) })
              ]
            }
          )
        ] })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      FormField,
      {
        defaultValue: "Insert JSON theme here",
        control: form.control,
        name: "pasteJSONThemeConfiguration",
        render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "Paste JSON Theme Configuration" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Textarea, { placeholder: "Insert JSON theme here", ...field }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "Paste your JSON Theme Configuration here." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
        ] })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { type: "submit", children: "Update preferences" })
  ] }) });
}
function AppearancePage() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-6", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-lg font-medium", children: "Appearance" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-sm text-muted-foreground", children: "Customize the appearance of the app. Automatically switch between day and night themes." })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Separator, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(AppearanceForm, {})
  ] });
}
const $6be4966fd9bbc698$var$SWITCH_NAME = "Switch";
const [$6be4966fd9bbc698$var$createSwitchContext, $6be4966fd9bbc698$export$cf7f5f17f69cbd43] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($6be4966fd9bbc698$var$SWITCH_NAME);
const [$6be4966fd9bbc698$var$SwitchProvider, $6be4966fd9bbc698$var$useSwitchContext] = $6be4966fd9bbc698$var$createSwitchContext($6be4966fd9bbc698$var$SWITCH_NAME);
const $6be4966fd9bbc698$export$b5d5cf8927ab7262 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeSwitch, name, checked: checkedProp, defaultChecked, required, disabled, value = "on", onCheckedChange, ...switchProps } = props;
  const [button, setButton] = reactExports.useState(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setButton(node)
  );
  const hasConsumerStoppedPropagationRef = reactExports.useRef(false);
  const isFormControl = button ? Boolean(button.closest("form")) : true;
  const [checked = false, setChecked] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: checkedProp,
    defaultProp: defaultChecked,
    onChange: onCheckedChange
  });
  return /* @__PURE__ */ reactExports.createElement($6be4966fd9bbc698$var$SwitchProvider, {
    scope: __scopeSwitch,
    checked,
    disabled
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends$y({
    type: "button",
    role: "switch",
    "aria-checked": checked,
    "aria-required": required,
    "data-state": $6be4966fd9bbc698$var$getState(checked),
    "data-disabled": disabled ? "" : void 0,
    disabled,
    value
  }, switchProps, {
    ref: composedRefs,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, (event) => {
      setChecked(
        (prevChecked) => !prevChecked
      );
      if (isFormControl) {
        hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
        if (!hasConsumerStoppedPropagationRef.current)
          event.stopPropagation();
      }
    })
  })), isFormControl && /* @__PURE__ */ reactExports.createElement($6be4966fd9bbc698$var$BubbleInput, {
    control: button,
    bubbles: !hasConsumerStoppedPropagationRef.current,
    name,
    value,
    checked,
    required,
    disabled,
    style: {
      transform: "translateX(-100%)"
    }
  }));
});
const $6be4966fd9bbc698$var$THUMB_NAME = "SwitchThumb";
const $6be4966fd9bbc698$export$4d07bf653ea69106 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeSwitch, ...thumbProps } = props;
  const context = $6be4966fd9bbc698$var$useSwitchContext($6be4966fd9bbc698$var$THUMB_NAME, __scopeSwitch);
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends$y({
    "data-state": $6be4966fd9bbc698$var$getState(context.checked),
    "data-disabled": context.disabled ? "" : void 0
  }, thumbProps, {
    ref: forwardedRef
  }));
});
const $6be4966fd9bbc698$var$BubbleInput = (props) => {
  const { control, checked, bubbles = true, ...inputProps } = props;
  const ref = reactExports.useRef(null);
  const prevChecked = $010c2913dbd2fe3d$export$5cae361ad82dce8b(checked);
  const controlSize = $db6c3485150b8e66$export$1ab7ae714698c4b8(control);
  reactExports.useEffect(() => {
    const input = ref.current;
    const inputProto = window.HTMLInputElement.prototype;
    const descriptor = Object.getOwnPropertyDescriptor(inputProto, "checked");
    const setChecked = descriptor.set;
    if (prevChecked !== checked && setChecked) {
      const event = new Event("click", {
        bubbles
      });
      setChecked.call(input, checked);
      input.dispatchEvent(event);
    }
  }, [
    prevChecked,
    checked,
    bubbles
  ]);
  return /* @__PURE__ */ reactExports.createElement("input", _extends$y({
    type: "checkbox",
    "aria-hidden": true,
    defaultChecked: checked
  }, inputProps, {
    tabIndex: -1,
    ref,
    style: {
      ...props.style,
      ...controlSize,
      position: "absolute",
      pointerEvents: "none",
      opacity: 0,
      margin: 0
    }
  }));
};
function $6be4966fd9bbc698$var$getState(checked) {
  return checked ? "checked" : "unchecked";
}
const $6be4966fd9bbc698$export$be92b6f5f03c0fe9 = $6be4966fd9bbc698$export$b5d5cf8927ab7262;
const $6be4966fd9bbc698$export$6521433ed15a34db = $6be4966fd9bbc698$export$4d07bf653ea69106;
const Switch = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $6be4966fd9bbc698$export$be92b6f5f03c0fe9,
  {
    className: cn(
      "peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input",
      className
    ),
    ...props,
    ref,
    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      $6be4966fd9bbc698$export$6521433ed15a34db,
      {
        className: cn(
          "pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0"
        )
      }
    )
  }
));
Switch.displayName = $6be4966fd9bbc698$export$be92b6f5f03c0fe9.displayName;
const notificationsFormSchema = z.object({
  type: z.enum(["all", "mentions", "none"], {
    required_error: "You need to select a notification type."
  }),
  mobile: z.boolean().default(false).optional(),
  communication_emails: z.boolean().default(false).optional(),
  transaction_emails: z.boolean().default(false).optional(),
  market_emails: z.boolean().default(false).optional(),
  security_emails: z.boolean()
});
const defaultValues$2 = {
  communication_emails: false,
  market_emails: false,
  transaction_emails: true,
  security_emails: true
};
function NotificationsForm() {
  const form = useForm({
    resolver: t(notificationsFormSchema),
    defaultValues: defaultValues$2
  });
  function onSubmit(data2) {
    toast({
      title: "Notifcations Notification",
      description: "Your notification preferences have successfully been updated! A confirmation email has been sent to your email address."
    });
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Form, { ...form, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("form", { onSubmit: form.handleSubmit(onSubmit), className: "space-y-8", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      FormField,
      {
        control: form.control,
        name: "type",
        render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { className: "space-y-3", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "Notify me about..." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
            RadioGroup,
            {
              onValueChange: field.onChange,
              defaultValue: field.value,
              className: "flex flex-col space-y-1",
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { className: "flex items-center space-x-3 space-y-0", children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(RadioGroupItem, { value: "all" }) }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { className: "font-normal", children: "All new activity or messages" })
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { className: "flex items-center space-x-3 space-y-0", children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(RadioGroupItem, { value: "mentions" }) }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { className: "font-normal", children: "Urgent activity or messages only" })
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { className: "flex items-center space-x-3 space-y-0", children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(RadioGroupItem, { value: "none" }) }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { className: "font-normal", children: "Nothing" })
                ] })
              ]
            }
          ) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
        ] })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "mb-4 text-lg font-medium", children: "Email Notifications" }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "grid grid-cols-2 gap-4", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          FormField,
          {
            control: form.control,
            name: "communication_emails",
            render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { className: "flex flex-row items-center justify-between rounded-lg border p-4", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-0.5", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { className: "text-base", children: "Communication emails" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "Receive emails about your account activity." })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                Switch,
                {
                  checked: field.value,
                  onCheckedChange: field.onChange
                }
              ) })
            ] })
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          FormField,
          {
            control: form.control,
            name: "market_emails",
            render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { className: "flex flex-row items-center justify-between rounded-lg border p-4", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-0.5", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { className: "text-base", children: "Market emails" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "Receive emails about the current market and news." })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                Switch,
                {
                  checked: field.value,
                  onCheckedChange: field.onChange
                }
              ) })
            ] })
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          FormField,
          {
            control: form.control,
            name: "transaction_emails",
            render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { className: "flex flex-row items-center justify-between rounded-lg border p-4", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-0.5", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { className: "text-base", children: "Transaction emails" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "Receive emails about your current transactions activity." })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                Switch,
                {
                  checked: field.value,
                  onCheckedChange: field.onChange
                }
              ) })
            ] })
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          FormField,
          {
            control: form.control,
            name: "security_emails",
            render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { className: "flex flex-row items-center justify-between rounded-lg border p-4", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-0.5", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { className: "text-base", children: "Security emails" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "Receive emails about your account security activity." })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                Switch,
                {
                  checked: field.value,
                  onCheckedChange: field.onChange,
                  disabled: true,
                  "aria-readonly": true
                }
              ) })
            ] })
          }
        )
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      FormField,
      {
        control: form.control,
        name: "mobile",
        render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { className: "flex flex-row items-start space-x-3 space-y-0", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            Checkbox,
            {
              checked: field.value,
              onCheckedChange: field.onChange
            }
          ) }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-1 leading-none", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "Use username instead of email address in communications" }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(FormDescription, { children: [
              "You can manage your name in the",
              " ",
              /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: "/settings/account", style: { textDecoration: "underline" }, children: "account settings" }),
              " page."
            ] })
          ] })
        ] })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { type: "submit", children: "Update notifications" })
  ] }) });
}
function NotificationsPage() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-6", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-lg font-medium", children: "Notifications" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-sm text-muted-foreground", children: "Configure how you receive notifications." })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Separator, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(NotificationsForm, {})
  ] });
}
const items = [
  {
    id: "home",
    label: "Home"
  },
  {
    id: "market",
    label: "Market"
  },
  {
    id: "store",
    label: "Store"
  },
  {
    id: "wallet",
    label: "Wallet"
  },
  {
    id: "settings",
    label: "Settings"
  },
  {
    id: "market alt",
    label: "Market Alt"
  },
  {
    id: "settings",
    label: "Settings"
  }
];
const displayFormSchema = z.object({
  items: z.array(z.string()).refine((value) => value.some((item) => item), {
    message: "You have to select at least one item."
  })
});
const defaultValues$1 = {
  items: ["home", "market", "store", "wallet", "settings"]
};
function DisplayForm() {
  const form = useForm({
    resolver: t(displayFormSchema),
    defaultValues: defaultValues$1
  });
  function onSubmit(data2) {
    toast({
      title: "You submitted the following values:",
      description: /* @__PURE__ */ jsxRuntimeExports.jsx("pre", { className: "mt-2 w-[340px] rounded-md bg-slate-950 p-4", children: /* @__PURE__ */ jsxRuntimeExports.jsx("code", { className: "text-white", children: JSON.stringify(data2, null, 2) }) })
    });
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Form, { ...form, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("form", { onSubmit: form.handleSubmit(onSubmit), className: "space-y-8", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      FormField,
      {
        control: form.control,
        name: "items",
        render: () => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "mb-4", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { className: "text-base", children: "Sidebar" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "Select the items you want to display in the sidebar." })
          ] }),
          items.map((item) => /* @__PURE__ */ jsxRuntimeExports.jsx(
            FormField,
            {
              control: form.control,
              name: "items",
              render: ({ field }) => {
                return /* @__PURE__ */ jsxRuntimeExports.jsxs(
                  FormItem,
                  {
                    className: "flex flex-row items-start space-x-3 space-y-0",
                    children: [
                      /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                        Checkbox,
                        {
                          checked: field.value?.includes(item.id),
                          onCheckedChange: (checked) => {
                            return checked ? field.onChange([...field.value, item.id]) : field.onChange(
                              field.value?.filter(
                                (value) => value !== item.id
                              )
                            );
                          }
                        }
                      ) }),
                      /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { className: "font-normal", children: item.label })
                    ]
                  },
                  item.id
                );
              }
            },
            item.id
          )),
          /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
        ] })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { type: "submit", children: "Update display" })
  ] }) });
}
function SettingsDisplayPage() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-6", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-lg font-medium", children: "Display" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-sm text-muted-foreground", children: "Turn items on or off to control what's displayed in the app." })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Separator, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(DisplayForm, {})
  ] });
}
const accountFormSchema = z.object({
  defaultSaveFolder: z.string(),
  uploadRateLimit: z.string().transform((val) => parseFloat(val)).refine((val) => !isNaN(val) && val >= 2, {
    message: "Upload rate limit must be at least 2 KiB/s."
  }),
  downloadRateLimit: z.string().transform((val) => parseFloat(val)).refine((val) => !isNaN(val) && val >= 2, {
    message: "Download rate limit must be at least 2 KiB/s."
  }),
  seedingRatioLimit: z.string().transform((val) => parseFloat(val)).refine((val) => !isNaN(val) && val >= 2, {
    message: "Seeding ratio limit must be at least 2."
  })
  //pasteJSONThemeConfiguration: z.string(),
});
const defaultValues = {
  // name: "Your name",
  // dob: new Date("2023-01-23"),
};
function TransferForm() {
  const form = useForm({
    resolver: t(accountFormSchema),
    defaultValues
  });
  function onSubmit(data2) {
    toast({
      title: "Transfer Notification",
      description: "Your transfer settings have successfully been updated! A confirmation email has been sent to your email address."
    });
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Form, { ...form, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("form", { onSubmit: form.handleSubmit(onSubmit), className: "space-y-8", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "grid grid-cols-2 gap-4", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        FormField,
        {
          control: form.control,
          name: "defaultSaveFolder",
          render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "Default Save Folder" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Input, { placeholder: "\\store\\", ...field }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormDescription, { children: "Insert path to your save folder." }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
          ] })
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        FormField,
        {
          control: form.control,
          name: "seedingRatioLimit",
          render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "Seeding Ratio Limit (KiB/s)" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Input, { placeholder: "10", ...field }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
          ] })
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        FormField,
        {
          control: form.control,
          name: "uploadRateLimit",
          render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "Upload Rate Limit (KiB/s)" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(Input, { placeholder: "10", ...field }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "ml-2", children: "KiB/s" })
            ] }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
          ] })
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        FormField,
        {
          control: form.control,
          name: "downloadRateLimit",
          render: ({ field }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(FormItem, { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormLabel, { children: "Download Rate Limit (KiB/s)" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormControl, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(Input, { placeholder: "10", ...field }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "ml-2", children: "KiB/s" })
            ] }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(FormMessage, {})
          ] })
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Button, { type: "submit", children: "Update Transfer Settings" })
  ] }) });
}
function TransferPage() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "space-y-6", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-lg font-medium", children: "Transfer" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-sm text-muted-foreground", children: "Configure your transfer settings." })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Separator, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(TransferForm, {})
  ] });
}
let DevicesData = [
  {
    id: "59a53ee428a643e940546c5ccfc5663e",
    model: "AMD Ryzen Threadripper PRO 7995WX",
    hashpower: "37.56 MH/s",
    amount: 0.5523342,
    status: "Mining",
    power: "50W",
    switch: true
  },
  {
    id: "f0623b42ea2d521b945a80b014f5694b",
    model: "GeForce RTX 3090",
    hashpower: "37.56 MH/s",
    amount: 0.2323,
    status: "Mining",
    power: "100W",
    switch: true
  },
  {
    id: "061b96f36e163ef82de2feefe7d7aaba",
    model: "GeForce RTX 4090",
    hashpower: "37.56 MH/s",
    amount: 0.8311008,
    status: "Mining",
    power: "200W",
    switch: true
  },
  {
    id: "b8ae1f8845ee9cbe64174ae089973b56",
    model: "NVIDIA RTX 6000 Ada Generation",
    hashpower: "37.56 MH/s",
    amount: 0.66345,
    status: "Mining",
    power: "300W",
    switch: true
  },
  {
    id: "bcaeff20734041e27098eb5138b3003a",
    model: "GeForce RTX 3090",
    hashpower: "",
    amount: 0,
    status: "disabled",
    power: "",
    switch: false
  }
];
function DataTable({
  columns: columns22,
  data: data2
}) {
  const table = useReactTable({
    data: data2,
    columns: columns22,
    getCoreRowModel: getCoreRowModel()
  });
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "rounded-md", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(Table, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(TableHeader, { children: table.getHeaderGroups().map((headerGroup) => /* @__PURE__ */ jsxRuntimeExports.jsx(TableRow, { children: headerGroup.headers.map((header) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsx(
        TableHead,
        {
          className: "font-semibold text-stone-900",
          children: header.isPlaceholder ? null : flexRender(
            header.column.columnDef.header,
            header.getContext()
          )
        },
        header.id
      );
    }) }, headerGroup.id)) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(TableBody, { children: table.getRowModel().rows?.length ? table.getRowModel().rows.map((row) => /* @__PURE__ */ jsxRuntimeExports.jsx(
      TableRow,
      {
        "data-state": row.getIsSelected() && "selected",
        children: row.getVisibleCells().map((cell) => /* @__PURE__ */ jsxRuntimeExports.jsx(TableCell, { children: flexRender(cell.column.columnDef.cell, cell.getContext()) }, cell.id))
      },
      row.id
    )) : /* @__PURE__ */ jsxRuntimeExports.jsx(TableRow, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(TableCell, { colSpan: columns22.length, className: "h-24 text-center", children: "No results." }) }) })
  ] }) });
}
const columns = [
  {
    accessorKey: "id",
    header: "Devices",
    cell: ({ row }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "font-md", children: row.original.model }),
        row.original.hashpower && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "text-gray-500", children: [
          "Hash Power: ",
          row.original.hashpower
        ] })
      ] });
    }
  },
  {
    accessorKey: "status",
    header: "Status",
    cell: ({ row }) => {
      const status = row.getValue("status");
      const color2 = status === "disabled" ? "text-gray-500" : status === "Mining" ? "text-green-500" : "text-red-500";
      return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: `font-medium ${color2}`, children: status }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "text-gray-500", children: row.original.power })
      ] });
    }
  },
  {
    accessorKey: "amount",
    header: () => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "text-right", children: "Profitability" }),
    cell: ({ row }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: `text-right font-medium`, children: [
        row.getValue("amount"),
        "/day"
      ] }) });
    }
  },
  {
    accessorKey: "switch",
    header: () => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "text-right", children: "Off / On" }),
    cell: ({ row }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: `text-right font-medium`, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        Switch,
        {
          onCheckedChange: () => {
            console.log("Switched");
          }
        }
      ) }) });
    }
  }
];
function MiningDevices() {
  const { page } = useParams();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "rounded-md border p-5", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex justify-between font-bold mb-2", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-stone-900 text-xl", children: "Devices" }),
      page !== "transactions" && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: " flex gap-2 text-sm items-center hover:cursor-pointer", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { children: "All" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Switch, {})
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(DataTable, { columns, data: DevicesData })
  ] });
}
const MiningPage = () => {
  function MiningPageHeader() {
    return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "bg-white w-full py-5 px-7 flex justify-between items-center drop-shadow-md", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex items-center gap-2", children: /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: "font-bold text-xl", children: "Mining" }) }) });
  }
  function MiningDashBoard() {
    return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "grid grid-cols-4 gap-7 mb-7", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex justify-between bg-stone-950 text-white rounded-lg p-5", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: "text-lg mb-3 font-bold", children: "Balance" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "font-semibold", children: "100.00 ORC" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex items-center h-full", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "p-3 bg-stone-800 rounded-lg size-fit", children: /* @__PURE__ */ jsxRuntimeExports.jsx(CircleDollarSign, {}) }) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex justify-between border rounded-lg p-5", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "w-9/12", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: "text-lg mb-3 font-bold", children: "Total Hash Power" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "w-full break-words font-semibold", children: "175.24 MH/s" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex items-center h-full", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "p-3 bg-yellow-300 rounded-lg size-fit text-stone-900", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Zap, {}) }) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex justify-between border rounded-lg p-5", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "w-9/12", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: "text-lg mb-3 font-bold", children: "Unpaid Balance" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "w-full break-words font-semibold", children: "3.65 ORC" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "w-full break-words font-mono text-gray-500", children: "Next Payout: 3h28m" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex items-center h-full", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "p-3 bg-slate-300 rounded-lg size-fit text-stone-900 mr-3", children: /* @__PURE__ */ jsxRuntimeExports.jsx(HandCoins, {}) }) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex justify-between border rounded-lg p-5", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "w-9/12", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: "text-lg mb-3 font-bold", children: "Devices Mining" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "w-full break-words font-semibold", children: "4/5" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex items-center h-full", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "p-3 bg-green-300 rounded-lg size-fit text-stone-900", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Cpu, {}) }) })
      ] })
    ] });
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { id: "mining-page", className: "flex flex-col grow size-full text-black", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(MiningPageHeader, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "size-full px-10 py-7 overflow-y-auto", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(MiningDashBoard, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(MiningDevices, {})
    ] })
  ] });
};
const $054eb8030ebde76e$var$PROVIDER_NAME = "ToastProvider";
const [$054eb8030ebde76e$var$Collection, $054eb8030ebde76e$var$useCollection, $054eb8030ebde76e$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2("Toast");
const [$054eb8030ebde76e$var$createToastContext, $054eb8030ebde76e$export$8a359da18fbc9073] = $c512c27ab02ef895$export$50c7b4e9d9f19c1("Toast", [
  $054eb8030ebde76e$var$createCollectionScope
]);
const [$054eb8030ebde76e$var$ToastProviderProvider, $054eb8030ebde76e$var$useToastProviderContext] = $054eb8030ebde76e$var$createToastContext($054eb8030ebde76e$var$PROVIDER_NAME);
const $054eb8030ebde76e$export$f5d03d415824e0e = (props) => {
  const { __scopeToast, label = "Notification", duration = 5e3, swipeDirection = "right", swipeThreshold = 50, children: children2 } = props;
  const [viewport, setViewport] = reactExports.useState(null);
  const [toastCount, setToastCount] = reactExports.useState(0);
  const isFocusedToastEscapeKeyDownRef = reactExports.useRef(false);
  const isClosePausedRef = reactExports.useRef(false);
  return /* @__PURE__ */ reactExports.createElement($054eb8030ebde76e$var$Collection.Provider, {
    scope: __scopeToast
  }, /* @__PURE__ */ reactExports.createElement($054eb8030ebde76e$var$ToastProviderProvider, {
    scope: __scopeToast,
    label,
    duration,
    swipeDirection,
    swipeThreshold,
    toastCount,
    viewport,
    onViewportChange: setViewport,
    onToastAdd: reactExports.useCallback(
      () => setToastCount(
        (prevCount) => prevCount + 1
      ),
      []
    ),
    onToastRemove: reactExports.useCallback(
      () => setToastCount(
        (prevCount) => prevCount - 1
      ),
      []
    ),
    isFocusedToastEscapeKeyDownRef,
    isClosePausedRef
  }, children2));
};
$054eb8030ebde76e$export$f5d03d415824e0e.propTypes = {
  label(props) {
    if (props.label && typeof props.label === "string" && !props.label.trim()) {
      const error = `Invalid prop \`label\` supplied to \`${$054eb8030ebde76e$var$PROVIDER_NAME}\`. Expected non-empty \`string\`.`;
      return new Error(error);
    }
    return null;
  }
};
const $054eb8030ebde76e$var$VIEWPORT_NAME = "ToastViewport";
const $054eb8030ebde76e$var$VIEWPORT_DEFAULT_HOTKEY = [
  "F8"
];
const $054eb8030ebde76e$var$VIEWPORT_PAUSE = "toast.viewportPause";
const $054eb8030ebde76e$var$VIEWPORT_RESUME = "toast.viewportResume";
const $054eb8030ebde76e$export$6192c2425ecfd989 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeToast, hotkey = $054eb8030ebde76e$var$VIEWPORT_DEFAULT_HOTKEY, label = "Notifications ({hotkey})", ...viewportProps } = props;
  const context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$VIEWPORT_NAME, __scopeToast);
  const getItems = $054eb8030ebde76e$var$useCollection(__scopeToast);
  const wrapperRef = reactExports.useRef(null);
  const headFocusProxyRef = reactExports.useRef(null);
  const tailFocusProxyRef = reactExports.useRef(null);
  const ref = reactExports.useRef(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, context.onViewportChange);
  const hotkeyLabel = hotkey.join("+").replace(/Key/g, "").replace(/Digit/g, "");
  const hasToasts = context.toastCount > 0;
  reactExports.useEffect(() => {
    const handleKeyDown = (event) => {
      var _ref$current;
      const isHotkeyPressed = hotkey.every(
        (key) => event[key] || event.code === key
      );
      if (isHotkeyPressed)
        (_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.focus();
    };
    document.addEventListener("keydown", handleKeyDown);
    return () => document.removeEventListener("keydown", handleKeyDown);
  }, [
    hotkey
  ]);
  reactExports.useEffect(() => {
    const wrapper = wrapperRef.current;
    const viewport = ref.current;
    if (hasToasts && wrapper && viewport) {
      const handlePause = () => {
        if (!context.isClosePausedRef.current) {
          const pauseEvent = new CustomEvent($054eb8030ebde76e$var$VIEWPORT_PAUSE);
          viewport.dispatchEvent(pauseEvent);
          context.isClosePausedRef.current = true;
        }
      };
      const handleResume = () => {
        if (context.isClosePausedRef.current) {
          const resumeEvent = new CustomEvent($054eb8030ebde76e$var$VIEWPORT_RESUME);
          viewport.dispatchEvent(resumeEvent);
          context.isClosePausedRef.current = false;
        }
      };
      const handleFocusOutResume = (event) => {
        const isFocusMovingOutside = !wrapper.contains(event.relatedTarget);
        if (isFocusMovingOutside)
          handleResume();
      };
      const handlePointerLeaveResume = () => {
        const isFocusInside = wrapper.contains(document.activeElement);
        if (!isFocusInside)
          handleResume();
      };
      wrapper.addEventListener("focusin", handlePause);
      wrapper.addEventListener("focusout", handleFocusOutResume);
      wrapper.addEventListener("pointermove", handlePause);
      wrapper.addEventListener("pointerleave", handlePointerLeaveResume);
      window.addEventListener("blur", handlePause);
      window.addEventListener("focus", handleResume);
      return () => {
        wrapper.removeEventListener("focusin", handlePause);
        wrapper.removeEventListener("focusout", handleFocusOutResume);
        wrapper.removeEventListener("pointermove", handlePause);
        wrapper.removeEventListener("pointerleave", handlePointerLeaveResume);
        window.removeEventListener("blur", handlePause);
        window.removeEventListener("focus", handleResume);
      };
    }
  }, [
    hasToasts,
    context.isClosePausedRef
  ]);
  const getSortedTabbableCandidates = reactExports.useCallback(({ tabbingDirection }) => {
    const toastItems = getItems();
    const tabbableCandidates = toastItems.map((toastItem) => {
      const toastNode = toastItem.ref.current;
      const toastTabbableCandidates = [
        toastNode,
        ...$054eb8030ebde76e$var$getTabbableCandidates(toastNode)
      ];
      return tabbingDirection === "forwards" ? toastTabbableCandidates : toastTabbableCandidates.reverse();
    });
    return (tabbingDirection === "forwards" ? tabbableCandidates.reverse() : tabbableCandidates).flat();
  }, [
    getItems
  ]);
  reactExports.useEffect(() => {
    const viewport = ref.current;
    if (viewport) {
      const handleKeyDown = (event) => {
        const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;
        const isTabKey = event.key === "Tab" && !isMetaKey;
        if (isTabKey) {
          const focusedElement = document.activeElement;
          const isTabbingBackwards = event.shiftKey;
          const targetIsViewport = event.target === viewport;
          if (targetIsViewport && isTabbingBackwards) {
            var _headFocusProxyRef$cu;
            (_headFocusProxyRef$cu = headFocusProxyRef.current) === null || _headFocusProxyRef$cu === void 0 || _headFocusProxyRef$cu.focus();
            return;
          }
          const tabbingDirection = isTabbingBackwards ? "backwards" : "forwards";
          const sortedCandidates = getSortedTabbableCandidates({
            tabbingDirection
          });
          const index2 = sortedCandidates.findIndex(
            (candidate) => candidate === focusedElement
          );
          if ($054eb8030ebde76e$var$focusFirst(sortedCandidates.slice(index2 + 1)))
            event.preventDefault();
          else {
            var _headFocusProxyRef$cu2, _tailFocusProxyRef$cu;
            isTabbingBackwards ? (_headFocusProxyRef$cu2 = headFocusProxyRef.current) === null || _headFocusProxyRef$cu2 === void 0 || _headFocusProxyRef$cu2.focus() : (_tailFocusProxyRef$cu = tailFocusProxyRef.current) === null || _tailFocusProxyRef$cu === void 0 || _tailFocusProxyRef$cu.focus();
          }
        }
      };
      viewport.addEventListener("keydown", handleKeyDown);
      return () => viewport.removeEventListener("keydown", handleKeyDown);
    }
  }, [
    getItems,
    getSortedTabbableCandidates
  ]);
  return /* @__PURE__ */ reactExports.createElement($5cb92bef7577960e$export$aecb2ddcb55c95be, {
    ref: wrapperRef,
    role: "region",
    "aria-label": label.replace("{hotkey}", hotkeyLabel),
    tabIndex: -1,
    style: {
      pointerEvents: hasToasts ? void 0 : "none"
    }
  }, hasToasts && /* @__PURE__ */ reactExports.createElement($054eb8030ebde76e$var$FocusProxy, {
    ref: headFocusProxyRef,
    onFocusFromOutsideViewport: () => {
      const tabbableCandidates = getSortedTabbableCandidates({
        tabbingDirection: "forwards"
      });
      $054eb8030ebde76e$var$focusFirst(tabbableCandidates);
    }
  }), /* @__PURE__ */ reactExports.createElement($054eb8030ebde76e$var$Collection.Slot, {
    scope: __scopeToast
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.ol, _extends$y({
    tabIndex: -1
  }, viewportProps, {
    ref: composedRefs
  }))), hasToasts && /* @__PURE__ */ reactExports.createElement($054eb8030ebde76e$var$FocusProxy, {
    ref: tailFocusProxyRef,
    onFocusFromOutsideViewport: () => {
      const tabbableCandidates = getSortedTabbableCandidates({
        tabbingDirection: "backwards"
      });
      $054eb8030ebde76e$var$focusFirst(tabbableCandidates);
    }
  }));
});
const $054eb8030ebde76e$var$FOCUS_PROXY_NAME = "ToastFocusProxy";
const $054eb8030ebde76e$var$FocusProxy = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeToast, onFocusFromOutsideViewport, ...proxyProps } = props;
  const context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$FOCUS_PROXY_NAME, __scopeToast);
  return /* @__PURE__ */ reactExports.createElement($ea1ef594cf570d83$export$439d29a4e110a164, _extends$y({
    "aria-hidden": true,
    tabIndex: 0
  }, proxyProps, {
    ref: forwardedRef,
    style: {
      position: "fixed"
    },
    onFocus: (event) => {
      var _context$viewport;
      const prevFocusedElement = event.relatedTarget;
      const isFocusFromOutsideViewport = !((_context$viewport = context.viewport) !== null && _context$viewport !== void 0 && _context$viewport.contains(prevFocusedElement));
      if (isFocusFromOutsideViewport)
        onFocusFromOutsideViewport();
    }
  }));
});
const $054eb8030ebde76e$var$TOAST_NAME = "Toast";
const $054eb8030ebde76e$var$TOAST_SWIPE_START = "toast.swipeStart";
const $054eb8030ebde76e$var$TOAST_SWIPE_MOVE = "toast.swipeMove";
const $054eb8030ebde76e$var$TOAST_SWIPE_CANCEL = "toast.swipeCancel";
const $054eb8030ebde76e$var$TOAST_SWIPE_END = "toast.swipeEnd";
const $054eb8030ebde76e$export$8d8dc7d5f743331b = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { forceMount, open: openProp, defaultOpen, onOpenChange, ...toastProps } = props;
  const [open = true, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return /* @__PURE__ */ reactExports.createElement($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || open
  }, /* @__PURE__ */ reactExports.createElement($054eb8030ebde76e$var$ToastImpl, _extends$y({
    open
  }, toastProps, {
    ref: forwardedRef,
    onClose: () => setOpen(false),
    onPause: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(props.onPause),
    onResume: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(props.onResume),
    onSwipeStart: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeStart, (event) => {
      event.currentTarget.setAttribute("data-swipe", "start");
    }),
    onSwipeMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeMove, (event) => {
      const { x: x2, y: y2 } = event.detail.delta;
      event.currentTarget.setAttribute("data-swipe", "move");
      event.currentTarget.style.setProperty("--radix-toast-swipe-move-x", `${x2}px`);
      event.currentTarget.style.setProperty("--radix-toast-swipe-move-y", `${y2}px`);
    }),
    onSwipeCancel: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeCancel, (event) => {
      event.currentTarget.setAttribute("data-swipe", "cancel");
      event.currentTarget.style.removeProperty("--radix-toast-swipe-move-x");
      event.currentTarget.style.removeProperty("--radix-toast-swipe-move-y");
      event.currentTarget.style.removeProperty("--radix-toast-swipe-end-x");
      event.currentTarget.style.removeProperty("--radix-toast-swipe-end-y");
    }),
    onSwipeEnd: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeEnd, (event) => {
      const { x: x2, y: y2 } = event.detail.delta;
      event.currentTarget.setAttribute("data-swipe", "end");
      event.currentTarget.style.removeProperty("--radix-toast-swipe-move-x");
      event.currentTarget.style.removeProperty("--radix-toast-swipe-move-y");
      event.currentTarget.style.setProperty("--radix-toast-swipe-end-x", `${x2}px`);
      event.currentTarget.style.setProperty("--radix-toast-swipe-end-y", `${y2}px`);
      setOpen(false);
    })
  })));
});
const [$054eb8030ebde76e$var$ToastInteractiveProvider, $054eb8030ebde76e$var$useToastInteractiveContext] = $054eb8030ebde76e$var$createToastContext($054eb8030ebde76e$var$TOAST_NAME, {
  onClose() {
  }
});
const $054eb8030ebde76e$var$ToastImpl = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeToast, type: type2 = "foreground", duration: durationProp, open, onClose, onEscapeKeyDown, onPause, onResume, onSwipeStart, onSwipeMove, onSwipeCancel, onSwipeEnd, ...toastProps } = props;
  const context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$TOAST_NAME, __scopeToast);
  const [node1, setNode] = reactExports.useState(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setNode(node)
  );
  const pointerStartRef = reactExports.useRef(null);
  const swipeDeltaRef = reactExports.useRef(null);
  const duration1 = durationProp || context.duration;
  const closeTimerStartTimeRef = reactExports.useRef(0);
  const closeTimerRemainingTimeRef = reactExports.useRef(duration1);
  const closeTimerRef = reactExports.useRef(0);
  const { onToastAdd, onToastRemove } = context;
  const handleClose = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(() => {
    var _context$viewport2;
    const isFocusInToast = node1 === null || node1 === void 0 ? void 0 : node1.contains(document.activeElement);
    if (isFocusInToast)
      (_context$viewport2 = context.viewport) === null || _context$viewport2 === void 0 || _context$viewport2.focus();
    onClose();
  });
  const startTimer = reactExports.useCallback((duration) => {
    if (!duration || duration === Infinity)
      return;
    window.clearTimeout(closeTimerRef.current);
    closeTimerStartTimeRef.current = (/* @__PURE__ */ new Date()).getTime();
    closeTimerRef.current = window.setTimeout(handleClose, duration);
  }, [
    handleClose
  ]);
  reactExports.useEffect(() => {
    const viewport = context.viewport;
    if (viewport) {
      const handleResume = () => {
        startTimer(closeTimerRemainingTimeRef.current);
        onResume === null || onResume === void 0 || onResume();
      };
      const handlePause = () => {
        const elapsedTime = (/* @__PURE__ */ new Date()).getTime() - closeTimerStartTimeRef.current;
        closeTimerRemainingTimeRef.current = closeTimerRemainingTimeRef.current - elapsedTime;
        window.clearTimeout(closeTimerRef.current);
        onPause === null || onPause === void 0 || onPause();
      };
      viewport.addEventListener($054eb8030ebde76e$var$VIEWPORT_PAUSE, handlePause);
      viewport.addEventListener($054eb8030ebde76e$var$VIEWPORT_RESUME, handleResume);
      return () => {
        viewport.removeEventListener($054eb8030ebde76e$var$VIEWPORT_PAUSE, handlePause);
        viewport.removeEventListener($054eb8030ebde76e$var$VIEWPORT_RESUME, handleResume);
      };
    }
  }, [
    context.viewport,
    duration1,
    onPause,
    onResume,
    startTimer
  ]);
  reactExports.useEffect(() => {
    if (open && !context.isClosePausedRef.current)
      startTimer(duration1);
  }, [
    open,
    duration1,
    context.isClosePausedRef,
    startTimer
  ]);
  reactExports.useEffect(() => {
    onToastAdd();
    return () => onToastRemove();
  }, [
    onToastAdd,
    onToastRemove
  ]);
  const announceTextContent = reactExports.useMemo(() => {
    return node1 ? $054eb8030ebde76e$var$getAnnounceTextContent(node1) : null;
  }, [
    node1
  ]);
  if (!context.viewport)
    return null;
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, announceTextContent && /* @__PURE__ */ reactExports.createElement($054eb8030ebde76e$var$ToastAnnounce, {
    __scopeToast,
    role: "status",
    "aria-live": type2 === "foreground" ? "assertive" : "polite",
    "aria-atomic": true
  }, announceTextContent), /* @__PURE__ */ reactExports.createElement($054eb8030ebde76e$var$ToastInteractiveProvider, {
    scope: __scopeToast,
    onClose: handleClose
  }, /* @__PURE__ */ reactDomExports.createPortal(/* @__PURE__ */ reactExports.createElement($054eb8030ebde76e$var$Collection.ItemSlot, {
    scope: __scopeToast
  }, /* @__PURE__ */ reactExports.createElement($5cb92bef7577960e$export$be92b6f5f03c0fe9, {
    asChild: true,
    onEscapeKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(onEscapeKeyDown, () => {
      if (!context.isFocusedToastEscapeKeyDownRef.current)
        handleClose();
      context.isFocusedToastEscapeKeyDownRef.current = false;
    })
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.li, _extends$y({
    // Ensure toasts are announced as status list or status when focused
    role: "status",
    "aria-live": "off",
    "aria-atomic": true,
    tabIndex: 0,
    "data-state": open ? "open" : "closed",
    "data-swipe-direction": context.swipeDirection
  }, toastProps, {
    ref: composedRefs,
    style: {
      userSelect: "none",
      touchAction: "none",
      ...props.style
    },
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      if (event.key !== "Escape")
        return;
      onEscapeKeyDown === null || onEscapeKeyDown === void 0 || onEscapeKeyDown(event.nativeEvent);
      if (!event.nativeEvent.defaultPrevented) {
        context.isFocusedToastEscapeKeyDownRef.current = true;
        handleClose();
      }
    }),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, (event) => {
      if (event.button !== 0)
        return;
      pointerStartRef.current = {
        x: event.clientX,
        y: event.clientY
      };
    }),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, (event) => {
      if (!pointerStartRef.current)
        return;
      const x2 = event.clientX - pointerStartRef.current.x;
      const y2 = event.clientY - pointerStartRef.current.y;
      const hasSwipeMoveStarted = Boolean(swipeDeltaRef.current);
      const isHorizontalSwipe = [
        "left",
        "right"
      ].includes(context.swipeDirection);
      const clamp2 = [
        "left",
        "up"
      ].includes(context.swipeDirection) ? Math.min : Math.max;
      const clampedX = isHorizontalSwipe ? clamp2(0, x2) : 0;
      const clampedY = !isHorizontalSwipe ? clamp2(0, y2) : 0;
      const moveStartBuffer = event.pointerType === "touch" ? 10 : 2;
      const delta = {
        x: clampedX,
        y: clampedY
      };
      const eventDetail = {
        originalEvent: event,
        delta
      };
      if (hasSwipeMoveStarted) {
        swipeDeltaRef.current = delta;
        $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_MOVE, onSwipeMove, eventDetail, {
          discrete: false
        });
      } else if ($054eb8030ebde76e$var$isDeltaInDirection(delta, context.swipeDirection, moveStartBuffer)) {
        swipeDeltaRef.current = delta;
        $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_START, onSwipeStart, eventDetail, {
          discrete: false
        });
        event.target.setPointerCapture(event.pointerId);
      } else if (Math.abs(x2) > moveStartBuffer || Math.abs(y2) > moveStartBuffer)
        pointerStartRef.current = null;
    }),
    onPointerUp: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerUp, (event1) => {
      const delta = swipeDeltaRef.current;
      const target = event1.target;
      if (target.hasPointerCapture(event1.pointerId))
        target.releasePointerCapture(event1.pointerId);
      swipeDeltaRef.current = null;
      pointerStartRef.current = null;
      if (delta) {
        const toast2 = event1.currentTarget;
        const eventDetail = {
          originalEvent: event1,
          delta
        };
        if ($054eb8030ebde76e$var$isDeltaInDirection(delta, context.swipeDirection, context.swipeThreshold))
          $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_END, onSwipeEnd, eventDetail, {
            discrete: true
          });
        else
          $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_CANCEL, onSwipeCancel, eventDetail, {
            discrete: true
          });
        toast2.addEventListener(
          "click",
          (event) => event.preventDefault(),
          {
            once: true
          }
        );
      }
    })
  })))), context.viewport)));
});
$054eb8030ebde76e$var$ToastImpl.propTypes = {
  type(props) {
    if (props.type && ![
      "foreground",
      "background"
    ].includes(props.type)) {
      const error = `Invalid prop \`type\` supplied to \`${$054eb8030ebde76e$var$TOAST_NAME}\`. Expected \`foreground | background\`.`;
      return new Error(error);
    }
    return null;
  }
};
const $054eb8030ebde76e$var$ToastAnnounce = (props) => {
  const { __scopeToast, children: children2, ...announceProps } = props;
  const context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$TOAST_NAME, __scopeToast);
  const [renderAnnounceText, setRenderAnnounceText] = reactExports.useState(false);
  const [isAnnounced, setIsAnnounced] = reactExports.useState(false);
  $054eb8030ebde76e$var$useNextFrame(
    () => setRenderAnnounceText(true)
  );
  reactExports.useEffect(() => {
    const timer2 = window.setTimeout(
      () => setIsAnnounced(true),
      1e3
    );
    return () => window.clearTimeout(timer2);
  }, []);
  return isAnnounced ? null : /* @__PURE__ */ reactExports.createElement($f1701beae083dbae$export$602eac185826482c, {
    asChild: true
  }, /* @__PURE__ */ reactExports.createElement($ea1ef594cf570d83$export$439d29a4e110a164, announceProps, renderAnnounceText && /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, context.label, " ", children2)));
};
const $054eb8030ebde76e$export$16d42d7c29b95a4 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeToast, ...titleProps } = props;
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({}, titleProps, {
    ref: forwardedRef
  }));
});
const $054eb8030ebde76e$export$ecddd96c53621d9a = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeToast, ...descriptionProps } = props;
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({}, descriptionProps, {
    ref: forwardedRef
  }));
});
const $054eb8030ebde76e$var$ACTION_NAME = "ToastAction";
const $054eb8030ebde76e$export$3019feecfda683d2 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { altText, ...actionProps } = props;
  if (!altText)
    return null;
  return /* @__PURE__ */ reactExports.createElement($054eb8030ebde76e$var$ToastAnnounceExclude, {
    altText,
    asChild: true
  }, /* @__PURE__ */ reactExports.createElement($054eb8030ebde76e$export$811e70f61c205839, _extends$y({}, actionProps, {
    ref: forwardedRef
  })));
});
$054eb8030ebde76e$export$3019feecfda683d2.propTypes = {
  altText(props) {
    if (!props.altText)
      return new Error(`Missing prop \`altText\` expected on \`${$054eb8030ebde76e$var$ACTION_NAME}\``);
    return null;
  }
};
const $054eb8030ebde76e$var$CLOSE_NAME = "ToastClose";
const $054eb8030ebde76e$export$811e70f61c205839 = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeToast, ...closeProps } = props;
  const interactiveContext = $054eb8030ebde76e$var$useToastInteractiveContext($054eb8030ebde76e$var$CLOSE_NAME, __scopeToast);
  return /* @__PURE__ */ reactExports.createElement($054eb8030ebde76e$var$ToastAnnounceExclude, {
    asChild: true
  }, /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends$y({
    type: "button"
  }, closeProps, {
    ref: forwardedRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, interactiveContext.onClose)
  })));
});
const $054eb8030ebde76e$var$ToastAnnounceExclude = /* @__PURE__ */ reactExports.forwardRef((props, forwardedRef) => {
  const { __scopeToast, altText, ...announceExcludeProps } = props;
  return /* @__PURE__ */ reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends$y({
    "data-radix-toast-announce-exclude": "",
    "data-radix-toast-announce-alt": altText || void 0
  }, announceExcludeProps, {
    ref: forwardedRef
  }));
});
function $054eb8030ebde76e$var$getAnnounceTextContent(container2) {
  const textContent = [];
  const childNodes = Array.from(container2.childNodes);
  childNodes.forEach((node) => {
    if (node.nodeType === node.TEXT_NODE && node.textContent)
      textContent.push(node.textContent);
    if ($054eb8030ebde76e$var$isHTMLElement(node)) {
      const isHidden = node.ariaHidden || node.hidden || node.style.display === "none";
      const isExcluded = node.dataset.radixToastAnnounceExclude === "";
      if (!isHidden) {
        if (isExcluded) {
          const altText = node.dataset.radixToastAnnounceAlt;
          if (altText)
            textContent.push(altText);
        } else
          textContent.push(...$054eb8030ebde76e$var$getAnnounceTextContent(node));
      }
    }
  });
  return textContent;
}
function $054eb8030ebde76e$var$handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {
  const currentTarget = detail.originalEvent.currentTarget;
  const event = new CustomEvent(name, {
    bubbles: true,
    cancelable: true,
    detail
  });
  if (handler)
    currentTarget.addEventListener(name, handler, {
      once: true
    });
  if (discrete)
    $8927f6f2acc4f386$export$6d1a0317bde7de7f(currentTarget, event);
  else
    currentTarget.dispatchEvent(event);
}
const $054eb8030ebde76e$var$isDeltaInDirection = (delta, direction, threshold2 = 0) => {
  const deltaX = Math.abs(delta.x);
  const deltaY = Math.abs(delta.y);
  const isDeltaX = deltaX > deltaY;
  if (direction === "left" || direction === "right")
    return isDeltaX && deltaX > threshold2;
  else
    return !isDeltaX && deltaY > threshold2;
};
function $054eb8030ebde76e$var$useNextFrame(callback = () => {
}) {
  const fn = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    let raf1 = 0;
    let raf2 = 0;
    raf1 = window.requestAnimationFrame(
      () => raf2 = window.requestAnimationFrame(fn)
    );
    return () => {
      window.cancelAnimationFrame(raf1);
      window.cancelAnimationFrame(raf2);
    };
  }, [
    fn
  ]);
}
function $054eb8030ebde76e$var$isHTMLElement(node) {
  return node.nodeType === node.ELEMENT_NODE;
}
function $054eb8030ebde76e$var$getTabbableCandidates(container2) {
  const nodes = [];
  const walker = document.createTreeWalker(container2, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      const isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      if (node.disabled || node.hidden || isHiddenInput)
        return NodeFilter.FILTER_SKIP;
      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  while (walker.nextNode())
    nodes.push(walker.currentNode);
  return nodes;
}
function $054eb8030ebde76e$var$focusFirst(candidates) {
  const previouslyFocusedElement = document.activeElement;
  return candidates.some((candidate) => {
    if (candidate === previouslyFocusedElement)
      return true;
    candidate.focus();
    return document.activeElement !== previouslyFocusedElement;
  });
}
const $054eb8030ebde76e$export$2881499e37b75b9a = $054eb8030ebde76e$export$f5d03d415824e0e;
const $054eb8030ebde76e$export$d5c6c08dc2d3ca7 = $054eb8030ebde76e$export$6192c2425ecfd989;
const $054eb8030ebde76e$export$be92b6f5f03c0fe9 = $054eb8030ebde76e$export$8d8dc7d5f743331b;
const $054eb8030ebde76e$export$f99233281efd08a0 = $054eb8030ebde76e$export$16d42d7c29b95a4;
const $054eb8030ebde76e$export$393edc798c47379d = $054eb8030ebde76e$export$ecddd96c53621d9a;
const $054eb8030ebde76e$export$e19cd5f9376f8cee = $054eb8030ebde76e$export$3019feecfda683d2;
const $054eb8030ebde76e$export$f39c2d165cd861fe = $054eb8030ebde76e$export$811e70f61c205839;
const ToastProvider = $054eb8030ebde76e$export$2881499e37b75b9a;
const ToastViewport = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $054eb8030ebde76e$export$d5c6c08dc2d3ca7,
  {
    ref,
    className: cn(
      "fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",
      className
    ),
    ...props
  }
));
ToastViewport.displayName = $054eb8030ebde76e$export$d5c6c08dc2d3ca7.displayName;
const toastVariants = cva(
  "group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full",
  {
    variants: {
      variant: {
        default: "border bg-background text-foreground",
        destructive: "destructive group border-destructive bg-destructive text-destructive-foreground"
      }
    },
    defaultVariants: {
      variant: "default"
    }
  }
);
const Toast = reactExports.forwardRef(({ className, variant, ...props }, ref) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    $054eb8030ebde76e$export$be92b6f5f03c0fe9,
    {
      ref,
      className: cn(toastVariants({ variant }), className),
      ...props
    }
  );
});
Toast.displayName = $054eb8030ebde76e$export$be92b6f5f03c0fe9.displayName;
const ToastAction = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $054eb8030ebde76e$export$e19cd5f9376f8cee,
  {
    ref,
    className: cn(
      "inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive",
      className
    ),
    ...props
  }
));
ToastAction.displayName = $054eb8030ebde76e$export$e19cd5f9376f8cee.displayName;
const ToastClose = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $054eb8030ebde76e$export$f39c2d165cd861fe,
  {
    ref,
    className: cn(
      "absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600",
      className
    ),
    "toast-close": "",
    ...props,
    children: /* @__PURE__ */ jsxRuntimeExports.jsx(X, { className: "h-4 w-4" })
  }
));
ToastClose.displayName = $054eb8030ebde76e$export$f39c2d165cd861fe.displayName;
const ToastTitle = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $054eb8030ebde76e$export$f99233281efd08a0,
  {
    ref,
    className: cn("text-sm font-semibold", className),
    ...props
  }
));
ToastTitle.displayName = $054eb8030ebde76e$export$f99233281efd08a0.displayName;
const ToastDescription = reactExports.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  $054eb8030ebde76e$export$393edc798c47379d,
  {
    ref,
    className: cn("text-sm opacity-90", className),
    ...props
  }
));
ToastDescription.displayName = $054eb8030ebde76e$export$393edc798c47379d.displayName;
function Toaster() {
  const { toasts } = useToast();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(ToastProvider, { children: [
    toasts.map(function({ id: id2, title, description, action, ...props }) {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(Toast, { ...props, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "grid gap-1", children: [
          title && /* @__PURE__ */ jsxRuntimeExports.jsx(ToastTitle, { children: title }),
          description && /* @__PURE__ */ jsxRuntimeExports.jsx(ToastDescription, { children: description })
        ] }),
        action,
        /* @__PURE__ */ jsxRuntimeExports.jsx(ToastClose, {})
      ] }, id2);
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(ToastViewport, {})
  ] });
}
function App() {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(ThemeProvider, { defaultTheme: "light", storageKey: "vite-ui-theme", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(BrowserRouter, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex h-screen", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Sidebar, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx("main", { className: "flex-1 overflow-y-auto", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(Routes, { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/", element: /* @__PURE__ */ jsxRuntimeExports.jsx(HomePage, {}) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/stats", element: /* @__PURE__ */ jsxRuntimeExports.jsx(StatsPage, {}) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/market", element: /* @__PURE__ */ jsxRuntimeExports.jsx(MarketPage, {}) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/wallet", element: /* @__PURE__ */ jsxRuntimeExports.jsx(WalletPage, {}) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/mining", element: /* @__PURE__ */ jsxRuntimeExports.jsx(MiningPage, {}) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/peers", element: /* @__PURE__ */ jsxRuntimeExports.jsx(PeersPage, {}) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(Route, { path: "/settings", element: /* @__PURE__ */ jsxRuntimeExports.jsx(SettingsPage, {}), children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "profile", element: /* @__PURE__ */ jsxRuntimeExports.jsx(ProfilePage, {}) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "account", element: /* @__PURE__ */ jsxRuntimeExports.jsx(SettingsAccountPage, {}) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "appearance", element: /* @__PURE__ */ jsxRuntimeExports.jsx(AppearancePage, {}) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "notifications", element: /* @__PURE__ */ jsxRuntimeExports.jsx(NotificationsPage, {}) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "display", element: /* @__PURE__ */ jsxRuntimeExports.jsx(SettingsDisplayPage, {}) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "transfer", element: /* @__PURE__ */ jsxRuntimeExports.jsx(TransferPage, {}) })
        ] })
      ] }) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Toaster, {})
  ] }) });
}
const container = document.getElementById("root");
const root = createRoot(container);
root.render(
  /* @__PURE__ */ jsxRuntimeExports.jsx(React.StrictMode, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(App, {}) })
);
